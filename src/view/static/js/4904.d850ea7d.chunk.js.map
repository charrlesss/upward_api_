{"version":3,"file":"static/js/4904.d850ea7d.chunk.js","mappings":"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","sources":["components/Helmet.tsx","components/Loading.tsx","components/ModalWithTable.tsx","components/Table.tsx","../node_modules/@mui/material/colors/brown.js","feautures/Admin/Task/Accounting/GeneralJournal.tsx","hooks/useQueryModalTable.tsx","lib/confirmationAlert.ts","../node_modules/@mui/icons-material/AccountBalanceWallet.js","../node_modules/@mui/icons-material/Add.js","../node_modules/@mui/icons-material/CardTravel.js","../node_modules/@mui/icons-material/NotInterested.js","../node_modules/@mui/icons-material/Save.js","../node_modules/@mui/icons-material/Search.js","../node_modules/@mui/material/colors/deepOrange.js","../node_modules/date-fns/esm/lastDayOfMonth/index.js"],"sourcesContent":["\r\nimport { Helmet } from \"react-helmet\";\r\n\r\nconst PageHelmet = ({ title = '' }: { title: string }) => {\r\n    const imgUrl = process.env.REACT_APP_IMAGE_URL;\r\n    return (\r\n        <Helmet>\r\n            <title>{title}</title>\r\n            <link rel=\"icon\" type=\"image/png\" href={`${imgUrl}/logo.png`} />\r\n        </Helmet>\r\n    );\r\n};\r\n\r\nexport default PageHelmet;","import { CircularProgress } from \"@mui/material\"\r\n\r\nexport const Loading = () => {\r\n\r\n    return (\r\n        <>\r\n            <div style={{\r\n                position: \"fixed\",\r\n                top: 0,\r\n                bottom: 0,\r\n                left: 0,\r\n                right: 0,\r\n                background: \"red\",\r\n                zIndex: \"88\",\r\n                backgroundColor: 'rgba(0, 0, 0, 0.4)'\r\n            }}\r\n            ></div>\r\n            <div style={{\r\n                position: \"absolute\",\r\n                zIndex: \"100\",\r\n                background: \"white\",\r\n                width: \"auto\",\r\n                height: \"auto\",\r\n                top: \"50%\",\r\n                left: \"50%\",\r\n                transform: \"translate(-50%,-50%)\",\r\n                boxShadow: '3px 6px 32px -7px rgba(0,0,0,0.75)',\r\n                display: \"flex\",\r\n                columnGap: \"20px\",\r\n                alignItems: \"center\",\r\n                justifyContent: \"center\",\r\n                padding: \"10px 15px\",\r\n            }}>\r\n                <CircularProgress color=\"primary\" />\r\n                <span>Loading...</span>\r\n            </div>\r\n        </>\r\n    )\r\n}","import React from \"react\";\nimport {\n  GridRowSelectionModel,\n  GridRowParams,\n  GridCellParams,\n  GridTreeNode,\n} from \"@mui/x-data-grid\";\nimport { Modal, Box, Typography, IconButton, TextField } from \"@mui/material\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport Table from \"./Table\";\n\ninterface ModalWithTableParams {\n  height: number;\n  isLoading: boolean;\n  queryKey: string;\n  columns: Array<any>;\n  onSelectionChange: (rowSelectionModel: Array<any>, data: Array<any>) => void;\n  setRows: React.Dispatch<React.SetStateAction<GridRowSelectionModel>>;\n  rows: GridRowSelectionModel;\n  id: string;\n  onCloseModal: () => void;\n  onClickCloseIcon: () => void;\n  showModal: boolean;\n  searchOnChange:\n  | React.ChangeEventHandler<HTMLInputElement | HTMLTextAreaElement>\n  | undefined;\n  title?: string;\n  searchRef?: React.RefObject<HTMLInputElement>;\n  onCellKeyDown?: any;\n  onSearchKeyEnter?: (search: string) => void;\n  isRowSelectable?: ((params: GridRowParams<any>) => boolean) | undefined;\n  getCellClassName?:\n  | ((params: GridCellParams<any, any, any, GridTreeNode>) => string)\n  | undefined;\n}\n\nconst style = {\n  position: \"absolute\" as \"absolute\",\n  top: \"50%\",\n  left: \"50%\",\n  transform: \"translate(-50%, -50%)\",\n  width: \"80%\",\n  bgcolor: \"background.paper\",\n  boxShadow: 24,\n  p: 4,\n  heigth: \"auto\",\n};\n\nexport default function ModalWithTable({\n  height,\n  isLoading,\n  queryKey,\n  columns,\n  onSelectionChange,\n  setRows,\n  rows,\n  id,\n  onCloseModal,\n  showModal,\n  onClickCloseIcon,\n  searchOnChange,\n  title = \"\",\n  searchRef,\n  onCellKeyDown,\n  onSearchKeyEnter = () => { },\n  isRowSelectable,\n  getCellClassName,\n}: ModalWithTableParams) {\n  const mainId = generateRandomClass();\n\n  return (\n    <Modal\n      open={showModal}\n      onClose={onCloseModal}\n      aria-labelledby=\"modal-modal-title\"\n      aria-describedby=\"modal-modal-description\"\n    >\n      <Box sx={style}>\n        <Typography id=\"modal-modal-title\" variant=\"h6\" component=\"h2\" mb={2}>\n          {title}\n        </Typography>\n        <TextField\n          size=\"small\"\n          label=\"Search\"\n          sx={{ marginBottom: \"10px\" }}\n          fullWidth\n          onChange={searchOnChange}\n          InputProps={{\n            inputRef: searchRef,\n          }}\n          onKeyDown={(e) => {\n            if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n              e.preventDefault();\n              onSearchKeyEnter(searchRef?.current?.value as string);\n            }\n            keyBoardSelectionTable(\n              e,\n              mainId,\n              searchRef?.current as HTMLInputElement\n            );\n          }}\n        />\n        <div\n          className={`${mainId} main-table-selection-container`}\n          style={{ position: \"relative\", height: `${height + 20}px` }}\n        >\n          <Table\n            isSingleSelection={true}\n            isRowFreeze={false}\n            columns={columns}\n            isLoading={isLoading}\n            dataSelection={(selection, data, code) => {\n              onSelectionChange(selection, data);\n            }}\n            table_id={id}\n            rows={rows}\n            isRowSelectable={isRowSelectable}\n            getCellClassName={getCellClassName}\n          />\n        </div>\n\n        <div style={{ position: \"absolute\", top: \"10px\", right: \"10px\" }}>\n          <IconButton\n            aria-label=\"search-client\"\n            color=\"secondary\"\n            onClick={onClickCloseIcon}\n          >\n            <CloseIcon />\n          </IconButton>\n        </div>\n      </Box>\n    </Modal>\n  );\n}\n\nexport function generateRandomClass() {\n  const randomNumber = Math.floor(Math.random() * 10000);\n  const randomClass = \"main-\" + randomNumber;\n  return randomClass;\n}\n\nfunction keyBoardUpDown(className: string, el: HTMLElement) {\n  const firstRowParent = document.querySelector(\n    `.${className} .MuiDataGrid-row`\n  );\n  const firstInput = firstRowParent?.querySelector(\"input\");\n  firstInput?.focus();\n  const event = new MouseEvent(\"mouseenter\", {\n    bubbles: true,\n    cancelable: true,\n    view: window,\n  });\n  firstRowParent?.dispatchEvent(event);\n  firstInput?.addEventListener(\"keydown\", (es: any) => {\n    if (es.key === \"ArrowUp\") {\n      es.preventDefault();\n      el.focus();\n    }\n    if (es.key === \"ArrowUp\") {\n      firstRowParent?.classList.remove(\"hover-keyboard\");\n    }\n  });\n}\n\nexport function keyBoardSelectionTable(\n  e: React.KeyboardEvent<HTMLDivElement>,\n  className: string,\n  el: HTMLElement\n) {\n  const mainId = className;\n  if (e.code === \"ArrowDown\") {\n    const rows = document.querySelectorAll(`.${mainId} .MuiDataGrid-row`);\n    e.preventDefault();\n    rows[0]?.classList.add(\"hover-keyboard\");\n    keyBoardUpDown(className, el);\n    rows.forEach((el, idx) => {\n      el.addEventListener(\"keydown\", (es: any) => {\n        if (es.key === \"ArrowUp\") {\n          if (idx <= 0) {\n            return;\n          }\n\n          es.preventDefault();\n          rows[idx]?.classList.remove(\"hover-keyboard\");\n          rows[idx - 1]?.classList.add(\"hover-keyboard\");\n          return;\n        }\n        if (es.key === \"ArrowDown\") {\n          es.preventDefault();\n          if (idx >= rows.length - 1) {\n            return;\n          }\n          rows[idx]?.classList.remove(\"hover-keyboard\");\n          rows[idx + 1]?.classList.add(\"hover-keyboard\");\n        }\n      });\n    });\n  }\n}\n","import {\n  useState,\n  useContext,\n  createContext,\n  ReactElement,\n  forwardRef,\n  useImperativeHandle,\n} from \"react\";\nimport { Box, LinearProgress } from \"@mui/material\";\nimport {\n  DataGrid,\n  GridSlotsComponentsProps,\n  gridPageCountSelector,\n  GridPagination,\n  useGridApiContext,\n  useGridSelector,\n  GridRowSelectionModel,\n  GridColDef,\n  GridRowParams,\n  GridCellParams,\n  GridTreeNode,\n} from \"@mui/x-data-grid\";\nimport { TablePaginationProps } from \"@mui/material/TablePagination\";\nimport MuiPagination from \"@mui/material/Pagination\";\n\ninterface TableProps {\n  isLoading: boolean;\n  columns: Array<any>;\n  rows: Array<any>;\n  table_id: string;\n  isSingleSelection: boolean;\n  isRowFreeze: boolean;\n  dataSelection?: (selection: any, data: any, code: string | null) => void;\n  CustomFooterComponent?: any;\n  isRowSelectable?: ((params: GridRowParams<any>) => boolean) | undefined;\n  getCellClassName?:\n    | ((params: GridCellParams<any, any, any, GridTreeNode>) => string)\n    | undefined;\n  footerChildren?: (\n    rowSelectionModel: GridRowSelectionModel,\n    rows: Array<any>\n  ) => ReactElement;\n  footerPaginationPosition?: string;\n  showFooterSelectedCount?: boolean;\n  checkboxSelection?: boolean | undefined;\n}\n\nconst TableContext = createContext<{\n  rowSelectionModel: GridRowSelectionModel;\n  rows: Array<any>;\n  footerPaginationPosition?: string;\n  showFooterSelectedCount?: boolean;\n  footerChildren: (\n    rowSelectionModel: GridRowSelectionModel,\n    rows: Array<any>\n  ) => ReactElement;\n}>({\n  rows: [],\n  rowSelectionModel: [],\n  footerChildren: () => <div></div>,\n  footerPaginationPosition: \"right-left\",\n  showFooterSelectedCount: true,\n});\nconst Table = forwardRef(\n  (\n    {\n      isLoading,\n      columns,\n      rows,\n      table_id,\n      isSingleSelection,\n      isRowFreeze,\n      dataSelection,\n      CustomFooterComponent = DefaultooterComponent,\n      isRowSelectable,\n      getCellClassName,\n      checkboxSelection = true,\n      footerChildren = (\n        rowSelectionModel: GridRowSelectionModel,\n        rows: Array<any>\n      ) => <div></div>,\n      footerPaginationPosition = \"right-left\",\n      showFooterSelectedCount = true,\n    }: TableProps,\n    ref\n  ) => {\n    const [selectedRows, setSelectedRows] = useState<any>([]);\n\n    useImperativeHandle(ref, () => ({\n      removeSelection: () => {\n        setSelectedRows([]);\n      },\n      getSelectedRows: () => {\n        return rows.filter((item: any) =>\n          selectedRows?.includes(item[table_id])\n        );\n      },\n      setSelectedRows: (data: Array<any>) => {\n        setSelectedRows(data);\n      },\n    }));\n\n    function onSelectionChange(selection: any, data: any, code: string | null) {\n      if (dataSelection) {\n        dataSelection(selection, data, code);\n      }\n    }\n    let freezeArray: Array<any> = [];\n\n    return (\n      <TableContext.Provider\n        value={{\n          showFooterSelectedCount,\n          footerPaginationPosition,\n          rowSelectionModel: selectedRows,\n          rows,\n          footerChildren,\n        }}\n      >\n        <DataGrid\n          slots={{\n            loadingOverlay: LinearProgress,\n            footer: CustomFooterComponent,\n          }}\n          initialState={{\n            pagination: { paginationModel: { pageSize: 100 } },\n          }}\n          loading={isLoading}\n          getRowId={(row) => row[table_id]}\n          columns={columns.filter((col: any) => !col.hide) as GridColDef<any>[]}\n          rows={rows}\n          showCellVerticalBorder={true}\n          showColumnVerticalBorder={true}\n          checkboxSelection={checkboxSelection}\n          rowSelectionModel={selectedRows}\n          rowHeight={25}\n          columnHeaderHeight={35}\n          pageSizeOptions={[10, 20, 35, 50, 75, 100]}\n          sx={{\n            \"& .cash\": {\n              color: \"#ec4899\",\n            },\n            \"& .check\": {\n              color: \"#0891b2\",\n            },\n            \"& .approved\": {\n              color: \"green\",\n            },\n            \"& .pending\": {\n              color: \"orange\",\n            },\n            \"& .disapproved\": {\n              color: \"red\",\n            },\n            \"& .normal\": {\n              color: \"red\",\n            },\n            \"& .MuiDataGrid-row.Mui-selected:hover\": {\n              color: \"black\",\n              \"& .MuiSvgIcon-root \": {\n                fill: \"#3b82f6\",\n              },\n            },\n            \"& .hover-keyboard\": {\n              background: \"#2563eb\",\n              color: \"white\",\n              \"& .MuiSvgIcon-root \": {\n                fill: \"white\",\n              },\n            },\n            \"& .MuiDataGrid-row:hover\": {\n              background: \"#2563eb\",\n              color: \"white\",\n              \"& .MuiSvgIcon-root \": {\n                fill: \"white\",\n              },\n            },\n            \"& .MuiDataGrid-row.hover\": {\n              background: \"#2563eb\",\n              color: \"white\",\n              \"& .MuiSvgIcon-root \": {\n                fill: \"white\",\n              },\n            },\n            \"& .MuiTablePagination-root p \": {\n              padding: \"0 !important\",\n            },\n\n            ...{\n              \"& .MuiDataGrid-columnHeaders\": {\n                background: \"#64748b\",\n                color: \"white\",\n                fontSize: \"14px\",\n                // borderBottomColor: \"#38bdf8\",\n              },\n              \"& .MuiDataGrid-columnHeaderCheckbox .MuiDataGrid-columnHeaderTitleContainer .MuiSvgIcon-root \":\n                {\n                  display: isSingleSelection || isRowFreeze ? \"none\" : \"block\",\n                  fill: \"white\",\n                },\n              \"& .MuiDataGrid-columnHeaderCheckbox .MuiDataGrid-columnHeaderTitleContainer input \":\n                {\n                  display: isSingleSelection || isRowFreeze ? \"none\" : \"block\",\n                },\n            },\n            ...{\n              fontSize: 13,\n              fontWeight: 500,\n              \"& .MuiDataGrid-checkboxInput\": {\n                height: \"27px\",\n                width: \"27px\",\n              },\n              \"& .MuiDataGrid-checkboxInput svg\": {\n                height: \"20px\",\n                width: \"20px\",\n              },\n            },\n          }}\n          // onRowDoubleClick={(e, r) => {\n          //   console.log(e, r);\n          // }}\n\n          onRowSelectionModelChange={(selection) => {\n            if (isRowFreeze) {\n              if (selection.length <= 0) return;\n              freezeArray = selection;\n              if (selectedRows.includes(freezeArray[freezeArray.length - 1]))\n                return;\n\n              setSelectedRows(selection);\n\n              onSelectionChange([selection[selection.length - 1]], rows, null);\n              return;\n            }\n\n            if (!isRowFreeze && isSingleSelection) {\n              if (selectedRows && selectedRows?.length > 0) {\n                const selectionSet = new Set(selectedRows);\n                setSelectedRows(\n                  selection.filter((s: any) => !selectionSet.has(s))\n                );\n              } else {\n                setSelectedRows(selection);\n              }\n            } else {\n              setSelectedRows(selection);\n            }\n\n            onSelectionChange([selection[selection.length - 1]], rows, null);\n          }}\n          onCellKeyDown={(__: any, key: any) => {\n            const keyFinding = [\"NumpadEnter\", \"Enter\", \"Delete\", \"Backspace\"];\n            if (!keyFinding.includes(key.code)) {\n              return;\n            }\n            key.preventDefault();\n            if (key.code === \"Enter\" || key.code === \"NumpadEnter\") {\n              if (isSingleSelection && !isRowFreeze) {\n                return setSelectedRows((data: any) => {\n                  if (data && data.length > 0 && data[0] === __.rowNode.id) {\n                    onSelectionChange([], rows, key.code);\n                    return [];\n                  }\n                  onSelectionChange([__.rowNode.id], rows, key.code);\n                  return [__.rowNode.id];\n                });\n              } else {\n                setSelectedRows((data: any) => {\n                  if (\n                    data &&\n                    !isRowFreeze &&\n                    data.length > 0 &&\n                    data.includes(__.rowNode.id)\n                  ) {\n                    data = data.filter((item: any) => item !== __.rowNode.id);\n                    onSelectionChange([], rows, key.code);\n                    return data;\n                  }\n                  if (\n                    data &&\n                    isRowFreeze &&\n                    data.length > 0 &&\n                    data.includes(__.rowNode.id)\n                  ) {\n                    return data;\n                  }\n                  onSelectionChange([__.rowNode.id], rows, key.code);\n                  return [...data, __.rowNode.id];\n                });\n              }\n              return;\n            }\n            if (key.code === \"Delete\" || key.code === \"Backspace\") {\n              setSelectedRows([__.rowNode.id]);\n              return onSelectionChange([__.rowNode.id], rows, key.code);\n            }\n          }}\n          disableVirtualization\n          isRowSelectable={isRowSelectable}\n          getCellClassName={getCellClassName}\n        />\n      </TableContext.Provider>\n    );\n  }\n);\n\nexport default Table;\nfunction Pagination({\n  page,\n  onPageChange,\n  className,\n}: Pick<TablePaginationProps, \"page\" | \"onPageChange\" | \"className\">) {\n  const apiRef = useGridApiContext();\n  const pageCount = useGridSelector(apiRef, gridPageCountSelector);\n\n  return (\n    <MuiPagination\n      variant=\"outlined\"\n      color=\"primary\"\n      className={className}\n      count={pageCount}\n      page={page + 1}\n      onChange={(event, newPage) => {\n        onPageChange(event as any, newPage - 1);\n      }}\n    />\n  );\n}\n\nfunction CustomPagination(props: any) {\n  return <GridPagination ActionsComponent={Pagination} {...props} />;\n}\nfunction DefaultooterComponent(\n  props: NonNullable<GridSlotsComponentsProps[\"footer\"]>\n) {\n  const {\n    rowSelectionModel,\n    showFooterSelectedCount,\n    footerPaginationPosition,\n    footerChildren,\n    rows,\n  } = useContext(TableContext);\n  return (\n    <Box\n      sx={{\n        columnGap: \"50px\",\n        display: \"flex\",\n        width: \"100%\",\n        justifyContent: \"space-between\",\n        px: 3,\n        alignItems: \"center\",\n        flexDirection:\n          footerPaginationPosition === \"right-left\" ? \"row-reverse\" : \"row\",\n      }}\n    >\n      <CustomPagination {...props} />\n      <Box\n        sx={{\n          display: \"flex\",\n          justifyContent:\n            footerPaginationPosition === \"right-left\"\n              ? \"flex-start\"\n              : \"flex-end\",\n          flex: 1,\n          alignItems: \"center\",\n        }}\n      >\n        {showFooterSelectedCount && (\n          <div>Selected:{rowSelectionModel?.length}</div>\n        )}\n        <div>{footerChildren(rowSelectionModel, rows)}</div>\n      </Box>\n    </Box>\n  );\n}\n","const brown = {\n  50: '#efebe9',\n  100: '#d7ccc8',\n  200: '#bcaaa4',\n  300: '#a1887f',\n  400: '#8d6e63',\n  500: '#795548',\n  600: '#6d4c41',\n  700: '#5d4037',\n  800: '#4e342e',\n  900: '#3e2723',\n  A100: '#d7ccc8',\n  A200: '#bcaaa4',\n  A400: '#8d6e63',\n  A700: '#5d4037'\n};\nexport default brown;","import { useReducer, useContext, useState, useRef, useEffect, useCallback } from \"react\";\nimport {\n  Button,\n  FormControl,\n  IconButton,\n  InputLabel,\n  Select,\n  MenuItem,\n  Modal,\n  Typography,\n  Box,\n  Checkbox,\n  FormControlLabel,\n} from \"@mui/material\";\nimport CardTravelIcon from \"@mui/icons-material/CardTravel\";\nimport LoadingButton from \"@mui/lab/LoadingButton\";\nimport AddIcon from \"@mui/icons-material/Add\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport Swal from \"sweetalert2\";\nimport { AuthContext } from \"../../../../components/AuthContext\";\nimport { useMutation, useQuery } from \"react-query\";\nimport useQueryModalTable from \"../../../../hooks/useQueryModalTable\";\nimport { wait } from \"../../../../lib/wait\";\nimport NotInterestedIcon from \"@mui/icons-material/NotInterested\";\nimport { LocalizationProvider } from \"@mui/x-date-pickers/LocalizationProvider\";\nimport { AdapterDateFns } from \"@mui/x-date-pickers/AdapterDateFns\";\nimport { DatePicker } from \"@mui/x-date-pickers\";\nimport { brown, deepOrange, grey } from \"@mui/material/colors\";\nimport {\n  codeCondfirmationAlert,\n  saveCondfirmationAlert,\n} from \"../../../../lib/confirmationAlert\";\n\nimport { flushSync } from \"react-dom\";\nimport SaveIcon from \"@mui/icons-material/Save\";\nimport { SelectInput, TextFormatedInput, TextInput } from \"../../../../components/UpwardFields\";\nimport SupervisorAccountIcon from '@mui/icons-material/SupervisorAccount';\nimport AccountCircleIcon from '@mui/icons-material/AccountCircle';\nimport AccountBalanceWalletIcon from '@mui/icons-material/AccountBalanceWallet';\nimport { format, lastDayOfMonth } from \"date-fns\";\nimport PageHelmet from \"../../../../components/Helmet\";\nimport { DataGridViewReact } from \"../../../../components/DataGridViewReact\";\nimport { Loading } from \"../../../../components/Loading\";\nimport useExecuteQueryFromClient from \"../../../../lib/executeQueryFromClient\";\n\nconst initialState = {\n\n  totalDebit: \"\",\n  totalCredit: \"\",\n  totalBalance: \"\",\n\n  jobAutoExp: false,\n  jobTransactionDate: new Date(),\n  jobType: \"\",\n  search: \"\",\n};\n\nexport const reducer = (state: any, action: any) => {\n  switch (action.type) {\n    case \"UPDATE_FIELD\":\n      return {\n        ...state,\n        [action.field]: action.value,\n      };\n    default:\n      return state;\n  }\n};\n\nconst selectedCollectionColumns = [\n  { key: \"code\", label: \"Code\", width: 150 },\n  { key: \"acctName\", label: \"Account Name\", width: 300 },\n  {\n    key: \"subAcctName\",\n    label: \"Sub Account\",\n    width: 170,\n  },\n  { key: \"ClientName\", label: \"Name\", width: 300 },\n  { key: \"debit\", label: \"Debit\", width: 120, type: \"number\" },\n  { key: \"credit\", label: \"Credit\", width: 120, type: \"number\" },\n  // hide\n  { key: \"TC_Code\", label: \"TC\", width: 120 },\n  {\n    key: \"remarks\",\n    label: \"Remarks\",\n    flex: 1,\n    width: 300,\n  },\n  { key: \"vatType\", label: \"Vat Type\", width: 120 },\n  { key: \"invoice\", label: \"Invoice\", width: 200 },\n  { key: \"TempID\", label: \"TempId\", hide: true },\n  { key: \"IDNo\", label: \"I.D.\", width: 300, hide: true },\n  {\n    key: \"BranchCode\",\n    label: \"BranchCode\",\n    width: 300,\n    hide: true,\n  },\n];\n\nexport default function GeneralJournal() {\n  const { executeQueryToClient } = useExecuteQueryFromClient()\n  const [mode, setMode] = useState<\"update\" | \"add\" | \"\">(\"\")\n  const [monitoring, setMonitoring] = useState({\n    totalRow: \"0\",\n    totalDebit: \"0.00\",\n    totalCredit: \"0.00\",\n    balance: \"0.00\"\n  })\n\n  const inputSearchRef = useRef<HTMLInputElement>(null)\n\n  const refRefNo = useRef<HTMLInputElement>(null)\n  const _refSubRefNo = useRef<HTMLInputElement>(null)\n  const refDate = useRef<HTMLInputElement>(null)\n  const refExplanation = useRef<HTMLInputElement>(null)\n\n  const refCode = useRef<HTMLInputElement>(null)\n  const refAccountName = useRef<HTMLInputElement>(null)\n  const refSubAccount = useRef<HTMLInputElement>(null)\n  const refName = useRef<HTMLInputElement>(null)\n\n  const refDebit = useRef<HTMLInputElement>(null)\n  const refCredit = useRef<HTMLInputElement>(null)\n  const refTC = useRef<HTMLInputElement>(null)\n  const refRemarks = useRef<HTMLInputElement>(null)\n  const refVat = useRef<HTMLSelectElement>(null)\n  const refInvoice = useRef<HTMLInputElement>(null)\n\n  //client details \n  const refIDNo = useRef<string>('')\n  const refSubAcct = useRef<string>('')\n\n  //TC details\n  const refTCDesc = useRef<string>('')\n\n  const { myAxios, user } = useContext(AuthContext);\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const [openJobs, setOpenJobs] = useState(false);\n\n  const chartAccountSearchInput = useRef<HTMLInputElement>(null);\n  const IdsSearchInput = useRef<HTMLInputElement>(null);\n  const table = useRef<any>(null);\n\n\n  const modeAdd = mode === 'add'\n  const modeUpdate = mode === 'update'\n  const modeDefault = mode === ''\n\n\n  const {\n    isLoading: loadingGeneralJournalGenerator,\n    refetch: refetchGeneralJournalGenerator,\n  } = useQuery({\n    queryKey: \"general-journal-id-generator\",\n    queryFn: async () =>\n      await myAxios.get(\n        `/task/accounting/general-journal/get-general-journal-id`,\n        {\n          headers: {\n            Authorization: `Bearer ${user?.accessToken}`,\n          },\n        }\n      ),\n    refetchOnWindowFocus: false,\n    onSuccess: (data) => {\n      const response = data as any;\n      if (modeUpdate) {\n        dispatch({\n          type: \"UPDATE_FIELD\",\n          field: \"refNo\",\n          value: state.sub_refNo ?? \"\",\n        });\n        return;\n      }\n      wait(100).then(() => {\n        if (refRefNo.current) {\n          refRefNo.current.value = response.data.generateGeneralJournalID[0].general_journal_id\n        }\n        if (_refSubRefNo.current) {\n          _refSubRefNo.current.value = response.data.generateGeneralJournalID[0].general_journal_id\n        }\n\n        if (refVat.current) {\n          refVat.current.value = 'Non-VAT'\n        }\n      })\n    },\n\n  });\n  const {\n    mutate: addGeneralJournalMutate,\n    isLoading: loadingGeneralJournalMutate,\n  } = useMutation({\n    mutationKey: \"add-journal-voucher\",\n    mutationFn: async (variable: any) =>\n      await myAxios.post(\n        \"/task/accounting/general-journal/add-general-journal\",\n        variable,\n        {\n          headers: {\n            Authorization: `Bearer ${user?.accessToken}`,\n          },\n        }\n      ),\n    onSuccess: (res) => {\n      const response = res as any;\n      if (response.data.success) {\n\n        return Swal.fire({\n          position: \"center\",\n          icon: \"success\",\n          title: response.data.message,\n          timer: 1500,\n        }).then(() => {\n          Swal.fire({\n            text: \"Do you want to print it?\",\n            showCancelButton: true,\n            confirmButtonColor: \"#3085d6\",\n            cancelButtonColor: \"#d33\",\n            confirmButtonText: \"Yes, save it!\",\n          }).then((result) => {\n            if (result.isConfirmed) {\n              handleClickPrint()\n            }\n            wait(100).then(() => {\n              resetFieldRef()\n              resetRowFieldRef()\n              resetTable()\n              resetMonitoring()\n              setMode('')\n            })\n          });\n        })\n      }\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: response.data.message,\n        timer: 1500,\n      });\n    },\n  });\n  const { mutate: mutateJob, isLoading: isLoadingJob } = useMutation({\n    mutationKey: \"jobs\",\n    mutationFn: async (variable: any) =>\n      await myAxios.post(\"/task/accounting/general-journal/jobs\", variable, {\n        headers: {\n          Authorization: `Bearer ${user?.accessToken}`,\n        },\n      }),\n    onSuccess: (res) => {\n      const response = res as any;\n      table.current.setDataFormated(response.data.jobs)\n      setOpenJobs(false);\n      setMode('')\n      monitor()\n    },\n  });\n  const {\n    mutate: mutateVoidGeneralJournal,\n    isLoading: loadingVoidGeneralJournalMutate,\n  } = useMutation({\n    mutationKey: \"void-journal-voucher\",\n    mutationFn: async (variable: any) =>\n      await myAxios.post(\n        \"/task/accounting/general-journal/void-general-journal\",\n        variable,\n        {\n          headers: {\n            Authorization: `Bearer ${user?.accessToken}`,\n          },\n        }\n      ),\n    onSuccess: (res) => {\n      const response = res as any;\n      if (response.data.success) {\n        resetFieldRef()\n        resetRowFieldRef()\n        resetTable()\n        resetMonitoring()\n        setMode('')\n\n        return Swal.fire({\n          position: \"center\",\n          icon: \"success\",\n          title: response.data.message,\n          timer: 1500,\n        });\n      }\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: response.data.message,\n        timer: 1500,\n      });\n    },\n  });\n  const {\n    mutate: getSearchSelectedGeneralJournal,\n    isLoading: loadingGetSearchSelectedGeneralJournal,\n  } = useMutation({\n    mutationKey: \"get-selected-search-general-journal\",\n    mutationFn: async (variable: any) =>\n      await myAxios.post(\n        \"/task/accounting/general-journal/get-selected-search-general-journal\",\n        variable,\n        {\n          headers: {\n            Authorization: `Bearer ${user?.accessToken}`,\n          },\n        }\n      ),\n    onSuccess: (res) => {\n      const response = res as any;\n      const selected = response.data.getSelectedSearchGeneralJournal;\n      const { explanation, dateEntry, refNo } = selected[0];\n\n      if (refRefNo.current) {\n        refRefNo.current.value = refNo\n      }\n      if (refDate.current) {\n        refDate.current.value = format(new Date(dateEntry), \"yyyy-MM-dd\")\n      }\n      if (refExplanation.current) {\n        refExplanation.current.value = explanation\n      }\n\n      table.current.setDataFormated(selected)\n      monitor()\n    },\n  });\n  const {\n    ModalComponent: ModalSearchGeneralJounal,\n    openModal: openSearchGeneralJounal,\n    isLoading: isLoadingSearchGeneralJounal,\n    closeModal: closeSearchGeneralJounal,\n  } = useQueryModalTable({\n    link: {\n      url: \"/task/accounting/general-journal/search-general-journal\",\n      queryUrlName: \"searchGeneralJournal\",\n    },\n    columns: [\n      { field: \"Date_Entry\", headerName: \"Date\", width: 130 },\n      { field: \"Source_No\", headerName: \"Ref No.\", width: 250 },\n      {\n        field: \"Explanation\",\n        headerName: \"Explanation\",\n        flex: 1,\n      },\n    ],\n    queryKey: \"search-general-journal\",\n    uniqueId: \"Source_No\",\n    responseDataKey: \"searchGeneralJournal\",\n    onSelected: (selectedRowData, data) => {\n      getSearchSelectedGeneralJournal({\n        Source_No: selectedRowData[0].Source_No,\n      });\n      setMode(\"update\")\n      table.current.resetTable()\n      closeSearchGeneralJounal();\n      resetRow()\n    },\n    onCloseFunction: (value: any) => {\n      dispatch({ type: \"UPDATE_FIELD\", field: \"search\", value });\n    },\n    searchRef: chartAccountSearchInput,\n  });\n\n  // fields\n  const {\n    ModalComponent: ModalChartAccountSearch,\n    openModal: openChartAccountSearch,\n    isLoading: isLoadingChartAccountSearch,\n    closeModal: closeChartAccountSearch,\n  } = useQueryModalTable({\n    link: {\n      url: \"/task/accounting/general-journal/get-chart-account\",\n      queryUrlName: \"chartAccountSearch\",\n    },\n    columns: [\n      { field: \"Acct_Code\", headerName: \"Account Code\", width: 130 },\n      { field: \"Acct_Title\", headerName: \"Account Title.\", width: 250 },\n      {\n        field: \"Short\",\n        headerName: \"Short\",\n        flex: 1,\n      },\n    ],\n    queryKey: \"get-chart-account\",\n    uniqueId: \"Acct_Code\",\n    responseDataKey: \"getChartOfAccount\",\n    onSelected: (selectedRowData, data) => {\n      if (refCode.current) {\n        refCode.current.value = selectedRowData[0].Acct_Code\n      }\n      if (refAccountName.current) {\n        refAccountName.current.value = selectedRowData[0].Acct_Title\n      }\n\n      closeChartAccountSearch();\n      setTimeout(() => {\n        refName.current?.focus();\n      }, 250);\n    },\n    searchRef: chartAccountSearchInput,\n  });\n  const {\n    ModalComponent: ModalPolicyIdClientIdRefId,\n    openModal: openPolicyIdClientIdRefId,\n    isLoading: isLoadingPolicyIdClientIdRefId,\n    closeModal: closePolicyIdClientIdRefId,\n  } = useQueryModalTable({\n    link: {\n      url: \"/task/accounting/search-pdc-policy-id\",\n      queryUrlName: \"searchPdcPolicyIds\",\n    },\n    columns: [\n      { field: \"Type\", headerName: \"Type\", width: 130 },\n      { field: \"IDNo\", headerName: \"ID No.\", width: 200 },\n      {\n        field: \"Name\",\n        headerName: \"Name\",\n        flex: 1,\n      },\n      {\n        field: \"ID\",\n        headerName: \"ID\",\n        hide: true,\n      },\n    ],\n    queryKey: \"get-policyId-ClientId-RefId\",\n    uniqueId: \"IDNo\",\n    responseDataKey: \"clientsId\",\n    onSelected: (selectedRowData) => {\n      if (refName.current) {\n        refName.current.value = selectedRowData[0].Name ?? \"\"\n      }\n      if (refSubAccount.current) {\n        refSubAccount.current.value = selectedRowData[0].ShortName ?? \"\"\n      }\n      refIDNo.current = selectedRowData[0].IDNo\n      refSubAcct.current = selectedRowData[0].sub_account\n\n      closePolicyIdClientIdRefId();\n      setTimeout(() => {\n        refDebit.current?.focus();\n      }, 200);\n    },\n    searchRef: IdsSearchInput,\n  });\n  const {\n    ModalComponent: ModalTransactionAccount,\n    openModal: openTransactionAccount,\n    isLoading: isLoadingTransactionAccount,\n    closeModal: closeTransactionAccount,\n  } = useQueryModalTable({\n    link: {\n      url: \"/task/accounting/general-journal/get-transaction-account\",\n      queryUrlName: \"transactionCodeSearch\",\n    },\n    columns: [\n      { field: \"Code\", headerName: \"Code\", width: 130 },\n      {\n        field: \"Description\",\n        headerName: \"Description\",\n        flex: 1,\n      },\n    ],\n    queryKey: \"get-transaction-account\",\n    uniqueId: \"Code\",\n    responseDataKey: \"getTransactionAccount\",\n    onSelected: (selectedRowData) => {\n      if (refTC.current) {\n        refTC.current.value = selectedRowData[0].Code\n      }\n      refTCDesc.current = selectedRowData[0].Description\n      closeTransactionAccount();\n      setTimeout(() => {\n        refRemarks.current?.focus();\n      }, 200);\n    },\n    searchRef: IdsSearchInput,\n  });\n  const handleInputChange = (e: any) => {\n    const { name, value } = e.target;\n    dispatch({ type: \"UPDATE_FIELD\", field: name, value });\n  };\n  const handleOnSave = useCallback(() => {\n    if (refRefNo.current?.value === \"\") {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: \"Please provide reference number!\",\n        timer: 1500,\n      });\n    }\n    if (refExplanation.current?.value === \"\") {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: \"Please provide explanation!\",\n        timer: 1500,\n      }).then(() => {\n        wait(300).then(() => {\n          refExplanation.current?.focus();\n        });\n      });\n    }\n    if (\n      parseFloat(monitoring.totalDebit.replace(/,/g, '')) <= 0 ||\n      parseFloat(monitoring.totalCredit.replace(/,/g, '')) <= 0\n    ) {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title:\n          \"Total Debit and Credit amount must not be zero(0), please double check the entries\",\n        timer: 1500,\n      }).then(() => {\n        wait(300).then(() => { });\n      });\n    }\n    if (monitoring.totalDebit !== monitoring.totalCredit) {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title:\n          \"Total Debit and Credit amount must be balance, please double check the entries\",\n        timer: 1500,\n      }).then(() => {\n        wait(300).then(() => { });\n      });\n    }\n\n    const generalJournalData: any = table.current.getData()\n    const generalJournalDataFormatted = generalJournalData.map((itm: any) => {\n      return {\n        code: itm[0],\n        acctName: itm[1],\n        subAcctName: itm[2],\n        ClientName: itm[3],\n        debit: itm[4],\n        credit: itm[5],\n        TC_Code: itm[6],\n        remarks: itm[7],\n        vatType: itm[8],\n        invoice: itm[9],\n        TempID: itm[10],\n        IDNo: itm[11],\n        BranchCode: itm[12],\n      }\n    })\n    if (modeUpdate) {\n      codeCondfirmationAlert({\n        isUpdate: true,\n        cb: (userCodeConfirmation) => {\n          addGeneralJournalMutate({\n            hasSelected: true,\n            refNo: refRefNo.current?.value,\n            dateEntry: refDate.current?.value,\n            explanation: refExplanation.current?.value,\n            generalJournal: generalJournalDataFormatted,\n            userCodeConfirmation,\n          });\n        },\n      });\n    } else {\n      saveCondfirmationAlert({\n        isConfirm: () => {\n          addGeneralJournalMutate({\n            hasSelected: false,\n            refNo: refRefNo.current?.value,\n            dateEntry: refDate.current?.value,\n            explanation: refExplanation.current?.value,\n            generalJournal: generalJournalDataFormatted,\n          });\n        },\n      });\n    }\n  }, [monitoring, addGeneralJournalMutate, modeUpdate])\n  function handleVoid() {\n    codeCondfirmationAlert({\n      isUpdate: false,\n      text: `Are you sure you want to void ${state.refNo}`,\n      cb: (userCodeConfirmation) => {\n        mutateVoidGeneralJournal({\n          refNo: state.refNo,\n          dateEntry: state.dateEntry,\n          userCodeConfirmation,\n        });\n      },\n    });\n  }\n  function resetRow() {\n    if (refCode.current) {\n      refCode.current.value = \"\"\n    }\n    if (refAccountName.current) {\n      refAccountName.current.value = \"\"\n    }\n    if (refName.current) {\n      refName.current.value = \"\"\n    }\n    if (refSubAccount.current) {\n      refSubAccount.current.value = \"\"\n    }\n    if (refTC.current) {\n      refTC.current.value = \"\"\n    }\n    if (refDebit.current) {\n      refDebit.current.value = \"\"\n    }\n    if (refCredit.current) {\n      refCredit.current.value = \"\"\n    }\n    if (refRemarks.current) {\n      refRemarks.current.value = \"\"\n    }\n    if (refVat.current) {\n      refVat.current.value = \"Non-VAT\"\n    }\n    if (refInvoice.current) {\n      refInvoice.current.value = \"\"\n    }\n\n    refTCDesc.current = \"\"\n    refIDNo.current = \"\"\n    refSubAcct.current = \"\"\n  }\n  function handleRowSave() {\n    if (refCode.current && refCode.current.value === \"\") {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: \"Code is required!\",\n        timer: 1500,\n      }).then(() => {\n        wait(300).then(() => {\n          return openChartAccountSearch(state.code);\n        })\n      });\n    }\n\n    if (refName.current && refName.current.value === \"\") {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: \"ID is required!\",\n        timer: 1500,\n      }).then(() => {\n        wait(300).then(() => {\n          return openPolicyIdClientIdRefId(refName.current?.value)\n        })\n      });\n    }\n\n    if (refDebit.current && isNaN(parseFloat(refDebit.current?.value.replace(/,/g, \"\")))) {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: \"Debit is required!\",\n        timer: 1500,\n      }).then(() => {\n        wait(300).then(() => {\n          refDebit.current?.focus()\n        })\n      })\n    }\n    if (refCredit.current && isNaN(parseFloat(refCredit.current?.value.replace(/,/g, \"\")))) {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: \"Credit is required!\",\n        timer: 1500,\n      }).then(() => {\n        wait(300).then(() => {\n          refCredit.current?.focus()\n        })\n      })\n    }\n    if (\n      refDebit.current &&\n      refCredit.current &&\n      parseFloat(refCredit.current?.value.replace(/,/g, \"\")) === 0 &&\n      parseFloat(refDebit.current?.value.replace(/,/g, \"\")) === 0\n    ) {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: \"Credit and Debit must be different!\",\n        timer: 1500,\n      }).then(() => {\n        wait(300).then(() => {\n          refCredit.current?.focus()\n        })\n      })\n    }\n    if (refTC.current && refTC.current?.value === \"\") {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: \"TC is required!\",\n        timer: 1500,\n      }).then(() => {\n        wait(300).then(() => {\n          openTransactionAccount(state.TC_Code);\n        })\n      });\n    }\n    if (refCode.current && refCode.current?.value.length >= 200) {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: \"Code is too long!\",\n        timer: 1500,\n      }).then(() => {\n        wait(300).then(() => {\n          refCode.current?.focus()\n        })\n      })\n    }\n    if (refName.current && refName.current?.value.length >= 200) {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: \"Client name is too long!\",\n        timer: 1500,\n      }).then(() => {\n        wait(300).then(() => {\n          refName.current?.focus()\n        })\n      })\n    }\n    if (refTC.current && refTC.current.value.length >= 200) {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: \"TC is too long!\",\n        timer: 1500,\n      }).then(() => {\n        wait(300).then(() => {\n          refTC.current?.focus()\n        })\n      })\n    }\n    if (refInvoice.current && refInvoice.current.value.length >= 200) {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: \"Invoice is too long!\",\n        timer: 1500,\n      }).then(() => {\n        wait(300).then(() => {\n          refInvoice.current?.focus()\n        })\n      })\n    }\n    const getSelectedRow = table.current.getSelectedRow()\n    const isUpdate = getSelectedRow !== null\n\n    Swal.fire({\n      title: isUpdate\n        ? `Are you sure you want to update row?`\n        : `Are you sure you want to add new row?`,\n      text: \"You won't be able to revert this!\",\n      icon: \"warning\",\n      showCancelButton: true,\n      confirmButtonColor: \"#3085d6\",\n      cancelButtonColor: \"#d33\",\n      confirmButtonText: isUpdate\n        ? \"Yes, update it!\"\n        : \"Yes Add it\",\n    }).then((result) => {\n      if (result.isConfirmed) {\n        if (\n          refCode.current &&\n          refAccountName.current &&\n          refSubAccount.current &&\n          refName.current &&\n          refDebit.current &&\n          refCredit.current &&\n          refTC.current &&\n          refRemarks.current &&\n          refVat.current &&\n          refInvoice.current\n        ) {\n          const newData: any = table.current.getData()\n          const newInput = [\n            refCode.current.value,\n            refAccountName.current.value,\n            refSubAccount.current.value,\n            refName.current.value,\n            refDebit.current.value,\n            refCredit.current.value,\n            refTC.current.value,\n            refRemarks.current.value,\n            refVat.current.value,\n            refInvoice.current.value,\n            refIDNo.current,\n            refSubAcct.current,\n            \"HO\"\n          ]\n\n          let taxtInput: any = []\n          let taxableamt = 0\n\n          if (newInput[8] === 'VAT' && newInput[0] !== '1.06.02') {\n            const debit = parseFloat(newInput[4].replace(/,/g, ''))\n            const credit = parseFloat(newInput[5].replace(/,/g, ''))\n            if (debit > 0) {\n              taxableamt = debit / 1.12\n              newInput[4] = formatNumber(taxableamt)\n            } else {\n              taxableamt = credit / 1.12\n              newInput[5] = formatNumber(taxableamt)\n            }\n\n            let inputtax = taxableamt * 0.12\n            let taxtDebit = ''\n            let taxtCredit = ''\n            if (debit > 0) {\n              taxtDebit = formatNumber(inputtax)\n              taxtCredit = newInput[5]\n            } else {\n              taxtCredit = formatNumber(inputtax)\n              taxtDebit = newInput[4]\n            }\n\n            taxtInput = [\n              \"1.06.02\",\n              \"Input Tax\",\n              refSubAccount.current.value,\n              refName.current.value,\n              taxtDebit,\n              taxtCredit,\n              refTC.current.value,\n              refRemarks.current.value,\n              refVat.current.value,\n              refInvoice.current.value,\n              refIDNo.current,\n              refSubAcct.current,\n            ]\n\n          }\n          if (isUpdate) {\n            newData[getSelectedRow] = newInput\n            table.current.setSelectedRow(null)\n          } else {\n            newData[newData.length] = newInput\n          }\n          table.current.setData(newData)\n          setTimeout(() => {\n            if (newInput[8] === 'VAT' && newInput[0] !== '1.06.02') {\n              const getNewData = table.current.getData()\n              if (isUpdate) {\n                getNewData.splice(getSelectedRow + 1, 0, taxtInput);\n              } else {\n                getNewData[getNewData.length] = taxtInput\n              }\n              table.current.setData(getNewData)\n            }\n            resetRow()\n          }, 100)\n\n          setTimeout(() => {\n            if (refCode.current) {\n              refCode.current.focus()\n            }\n          }, 350)\n          monitor()\n        }\n\n      }\n    });\n  }\n  function handleJobs() {\n    setOpenJobs((d) => !d);\n  }\n  function handleClickPrint() {\n    flushSync(() => {\n      const generalJournal: any = []\n      localStorage.removeItem(\"printString\");\n      localStorage.setItem(\"dataString\", JSON.stringify(generalJournal));\n      localStorage.setItem(\"paper-width\", \"8.5in\");\n      localStorage.setItem(\"paper-height\", \"11in\");\n      localStorage.setItem(\"module\", \"general-journal\");\n      localStorage.setItem(\"state\", JSON.stringify({\n        JVNo: refRefNo.current?.value,\n        JVDate: refDate.current?.value,\n        JVExp: refExplanation.current?.value\n\n      }));\n      localStorage.setItem(\n        \"column\",\n        JSON.stringify([\n          { datakey: \"code\", header: \"ACCT #\", width: \"40px\" },\n          { datakey: \"acctName\", header: \"ACCOUNT TITLE\", width: \"130px\" },\n          { datakey: \"IDNo\", header: \"ID NO.\", width: \"120px\" },\n          { datakey: \"ClientName\", header: \"IDENTITY\", width: \"200px\" },\n          { datakey: \"debit\", header: \"DEBIT\", width: \"65px\" },\n          { datakey: \"credit\", header: \"CREDIT\", width: \"65px\" },\n        ])\n      );\n      localStorage.setItem(\n        \"title\",\n        user?.department === \"UMIS\"\n          ? \"UPWARD MANAGEMENT INSURANCE SERVICES\\n\"\n          : \"UPWARD CONSULTANCY SERVICES AND MANAGEMENT INC.\\n\"\n      );\n    });\n    window.open(\"/dashboard/print\", \"_blank\");\n  }\n  function onCancel() {\n    resetFieldRef()\n    resetRowFieldRef()\n    resetTable()\n    resetMonitoring()\n    setMode(\"\")\n\n  }\n  function monitor() {\n    setTimeout(() => {\n      const getData = table.current.getData()\n      const totalCredit = getData.reduce((a: any, b: any) => a + parseFloat(b[4].replace(/,/g, '')), 0)\n      const totalDebit = getData.reduce((a: any, b: any) => a + parseFloat(b[5].replace(/,/g, '')), 0)\n      setMonitoring({\n        totalRow: `${getData.length}`,\n        totalCredit: formatNumber(totalCredit),\n        totalDebit: formatNumber(totalDebit),\n        balance: formatNumber(totalCredit - totalDebit),\n      })\n    }, 200)\n  }\n  function resetFieldRef() {\n    refetchGeneralJournalGenerator()\n    if (refDate.current) {\n      refDate.current.value = format(new Date(), \"yyyy-MM-dd\")\n    }\n    if (refExplanation.current) {\n      refExplanation.current.value = \"\"\n    }\n  }\n  function resetRowFieldRef() {\n    if (refCode.current) {\n      refCode.current.value = ''\n    }\n    if (refAccountName.current) {\n      refAccountName.current.value = ''\n    }\n    if (refSubAccount.current) {\n      refSubAccount.current.value = ''\n    }\n    if (refName.current) {\n      refName.current.value = ''\n    }\n\n\n    if (refDebit.current) {\n      refDebit.current.value = ''\n    }\n    if (refCredit.current) {\n      refCredit.current.value = ''\n    }\n    if (refTC.current) {\n      refTC.current.value = ''\n    }\n    if (refRemarks.current) {\n      refRemarks.current.value = ''\n    }\n    if (refVat.current) {\n      refVat.current.value = 'Non-VAT'\n    }\n    if (refInvoice.current) {\n      refInvoice.current.value = ''\n    }\n  }\n  function resetTable() {\n    table.current.resetTable()\n  }\n  function resetMonitoring() {\n    setMonitoring({\n      totalRow: \"0\",\n      totalDebit: \"0.00\",\n      totalCredit: \"0.00\",\n      balance: \"0.00\"\n    })\n  }\n\n  useEffect(() => {\n    const handleKeyDown = (event: any) => {\n      if ((event.ctrlKey || event.metaKey) && event.key === 's') {\n        event.preventDefault();\n        handleOnSave();\n      }\n    };\n\n    window.addEventListener('keydown', handleKeyDown);\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [handleOnSave]);\n\n\n  function formatNumber(Amount: number) {\n    return Amount.toLocaleString(\"en-US\", {\n      minimumFractionDigits: 2,\n      maximumFractionDigits: 2,\n    })\n  }\n\n  async function DoRPTTransactionNILHN() {\n    let JobDate = new Date(state.jobTransactionDate)\n    let dtFrom = format(JobDate, \"yyyy-MM-01-\")\n    let dtTo = format(lastDayOfMonth(JobDate), \"yyyy-MM-dd\")\n    let iRow = 0\n\n    const qry = `\n    select \n      a.PolicyNo,\n      a.IDNo,\n      (TotalDue - ifnull(b.TotalPaid,0)) as 'Amount',\n      c.Mortgagee \n    from Policy a \n      left join (\n        select \n          IDNo,\n          sum(Debit) as 'TotalPaid' \n        from collection \n        group by IDNo\n      ) b on b.IDNo = a.PolicyNo \n      inner join VPolicy c on c.PolicyNo = a.PolicyNo \n      where\n      (TotalDue - ifnull(b.TotalPaid,0)) <> 0 and \n      a.PolicyType = 'TPL' and \n      c.Mortgagee = 'N I L - HN' and \n      (\n        a.DateIssued >= '${dtFrom}' and \n        a.DateIssued <= '${dtTo}'\n      ) \n      order by a.DateIssued\n      `\n    let dgvJournal: any = []\n    const { data } = await executeQueryToClient(qry)\n    const dataArray = data.data\n    if (dataArray.length > 0) {\n      let totalAmount = 0\n      let i = 0\n      for (const itm of dataArray) {\n        let tmpID = \"\";\n        if (i == 0) {\n          iRow = 0\n        } else {\n          iRow = iRow + 1\n        }\n\n        tmpID = itm.IDNo\n        const { data: tmpNameRes } = await executeQueryToClient(`SELECT Shortname ,Sub_ShortName, Sub_Acct FROM (${ID_Entry}) id_entry WHERE IDNo = '${tmpID}'`)\n        dgvJournal[iRow] = [\n          \"1.03.01\", // 0\n          \"Premium Receivables\", // 1\n          tmpNameRes.data[0]?.Sub_ShortName, // 2\n          tmpNameRes.data[0]?.Shortname, // 3\n          \"0.00\", // 4\n          formatNumber(itm.Amount), //5\n          \"RPT\", // 6\n          \"\", // 7\n          tmpNameRes.data[0]?.Sub_Acct, // 8\n          itm.PolicyNo, // 9\n          \"\", // 10\n          \"NA\" //11\n        ]\n\n        totalAmount = totalAmount + parseFloat(itm.Amount.toString().replace(/,/g, ''))\n        i += 1\n      }\n\n\n      const { data: tmpNameRes } = await executeQueryToClient(`SELECT Shortname ,Sub_ShortName, Sub_Acct FROM (${ID_Entry}) id_entry WHERE IDNo = 'O-1024-00011'`)\n\n      dgvJournal[iRow + 1] = [\n        \"1.05.00\",\n        \"Related Party Transactions\",\n        tmpNameRes.data[0]?.Sub_ShortName, // 2\n        tmpNameRes.data[0]?.Shortname, // 3\n        formatNumber(totalAmount), //4\n        \"0.00\", // 5,\n        \"RPT\", // 7\n        \"\", // 8\n        tmpNameRes.data[0]?.Sub_Acct, // 9\n        \"1.05.02\", // 10\n        \"\", // 11\n        \"NA\" // 12\n      ]\n      table.current.setData(dgvJournal)\n      setMode('update')\n      setOpenJobs(false)\n    }\n\n  }\n\n  return (\n    <>\n      <PageHelmet title=\"General Journal\" />\n      {(loadingGetSearchSelectedGeneralJournal ||\n        isLoadingJob ||\n        loadingGeneralJournalMutate ||\n        loadingVoidGeneralJournalMutate\n      ) && <Loading />}\n      <div\n        style={{\n          display: \"flex\",\n          flexDirection: \"column\",\n          width: \"100%\",\n          height: \"100%\",\n          flex: 1,\n          padding: \"10px\",\n          background: \"#F1F1F1\"\n        }}\n      >\n        <div\n          style={{\n            display: \"flex\",\n            alignItems: \"center\",\n            columnGap: \"5px\",\n          }}\n        >\n          <div\n            style={{\n              display: \"flex\",\n              alignItems: \"center\",\n              columnGap: \"5px\",\n            }}\n          >\n            {isLoadingSearchGeneralJounal ? (\n              <LoadingButton loading={isLoadingSearchGeneralJounal} />\n            ) : (\n              <TextInput\n                label={{\n                  title: \"Search: \",\n                  style: {\n                    fontSize: \"12px\",\n                    fontWeight: \"bold\",\n                    width: \"50px\",\n                  },\n                }}\n                input={{\n                  className: \"search-input-up-on-key-down\",\n                  type: \"search\",\n                  onKeyDown: (e) => {\n                    if (e.key === \"Enter\" || e.key === \"NumpadEnter\") {\n                      e.preventDefault();\n                      openSearchGeneralJounal(e.currentTarget.value);\n                    }\n                    if (e.key === \"ArrowDown\") {\n                      e.preventDefault();\n                      const datagridview = document.querySelector(\n                        \".grid-container\"\n                      ) as HTMLDivElement;\n                      datagridview.focus();\n                    }\n                  },\n                  style: { width: \"500px\" },\n                }}\n                inputRef={inputSearchRef}\n              />\n\n            )}\n            {modeDefault && (\n              <Button\n                sx={{\n                  height: \"30px\",\n                  fontSize: \"11px\",\n                }}\n                variant=\"contained\"\n                startIcon={<AddIcon sx={{ width: 15, height: 15 }} />}\n                id=\"entry-header-save-button\"\n                onClick={() => {\n                  setMode('add')\n                }}\n                color=\"primary\"\n              >\n                New\n              </Button>\n            )}\n            <LoadingButton\n              sx={{\n                height: \"30px\",\n                fontSize: \"11px\",\n              }}\n              loading={loadingGeneralJournalMutate}\n              disabled={modeDefault}\n              onClick={handleOnSave}\n              color=\"success\"\n              variant=\"contained\"\n            >\n              Save\n            </LoadingButton>\n            {(modeAdd || modeUpdate) && (\n              <LoadingButton\n                sx={{\n                  height: \"30px\",\n                  fontSize: \"11px\",\n                }}\n                variant=\"contained\"\n                startIcon={<CloseIcon sx={{ width: 15, height: 15 }} />}\n                color=\"error\"\n                onClick={() => {\n                  Swal.fire({\n                    title: \"Are you sure?\",\n                    text: \"You won't be able to revert this!\",\n                    icon: \"warning\",\n                    showCancelButton: true,\n                    confirmButtonColor: \"#3085d6\",\n                    cancelButtonColor: \"#d33\",\n                    confirmButtonText: \"Yes, cancel it!\",\n                  }).then((result) => {\n                    if (result.isConfirmed) {\n                      onCancel()\n                    }\n                  });\n                }}\n                disabled={modeDefault}\n              >\n                Cancel\n              </LoadingButton>\n            )}\n            <LoadingButton\n              sx={{\n                height: \"30px\",\n                fontSize: \"11px\",\n                background: deepOrange[500],\n                \":hover\": {\n                  background: deepOrange[600],\n                },\n              }}\n              onClick={handleVoid}\n              loading={loadingVoidGeneralJournalMutate}\n              disabled={modeDefault}\n              variant=\"contained\"\n              startIcon={<NotInterestedIcon sx={{ width: 20, height: 20 }} />}\n            >\n              Void\n            </LoadingButton>\n            <LoadingButton\n              sx={{\n                height: \"30px\",\n                fontSize: \"11px\",\n                background: brown[500],\n                \":hover\": {\n                  background: brown[600],\n                },\n              }}\n              onClick={handleJobs}\n              loading={isLoadingJob}\n              variant=\"contained\"\n              startIcon={<CardTravelIcon sx={{ width: 20, height: 20 }} />}\n            >\n              Jobs\n            </LoadingButton>\n            <Button\n              disabled={modeDefault}\n              id=\"basic-button\"\n              aria-haspopup=\"true\"\n              onClick={handleClickPrint}\n              sx={{\n                height: \"30px\",\n                fontSize: \"11px\",\n                color: \"white\",\n                backgroundColor: grey[600],\n                \"&:hover\": {\n                  backgroundColor: grey[700],\n                },\n              }}\n            >\n              Print\n            </Button>\n          </div>\n          <div\n            style={{\n              fontSize: \"13px\",\n              border: \"1px solid #d4d4d8\",\n              width: \"100%\",\n              display: \"flex\",\n              columnGap: \"50px\",\n              height: \"30px\",\n              alignItems: \"center\",\n              justifyContent: \"center\",\n            }}\n          >\n            <p style={{ margin: 0, padding: 0, color: \"black\" }}>\n              <span style={{ fontSize: \"12px\" }}>Total Rows:</span> <strong>{monitoring.totalRow}</strong>\n            </p>\n            <p style={{ margin: 0, padding: 0, color: \"black\" }}>\n              <span style={{ fontSize: \"12px\" }}>Total Debit:</span> <strong>{monitoring.totalDebit}</strong>\n            </p>\n            <p style={{ margin: 0, padding: 0, color: \"black\" }}>\n              <span style={{ fontSize: \"12px\" }}>Total Credit:</span> <strong>{monitoring.totalCredit}</strong>\n            </p>\n            <p style={{ margin: 0, padding: 0, color: \"black\" }}>\n              <span style={{ fontSize: \"12px\" }}>Balance:</span>{\" \"}\n              <strong\n                style={{\n                  color:\n                    parseInt(monitoring.balance.replace(/,/g, \"\")) !== 0\n                      ? \"red\"\n                      : \"black\",\n                }}\n              >\n                {monitoring.balance}\n              </strong>\n            </p>\n          </div>\n        </div>\n        <div\n          style={{\n            position: \"relative\",\n            width: \"100%\",\n            height: \"auto\",\n            display: \"flex\",\n            marginTop: \"10px\",\n            gap: \"10px\",\n            padding: \"5px\",\n          }}\n        >\n          {loadingGeneralJournalGenerator ? (\n            <LoadingButton loading={loadingGeneralJournalGenerator} />\n          ) : (\n            <TextInput\n              label={{\n                title: \"Ref. No. : \",\n                style: {\n                  fontSize: \"12px\",\n                  fontWeight: \"bold\",\n                  width: \"70px\",\n                },\n              }}\n              input={{\n                disabled: modeDefault || modeUpdate,\n                type: \"text\",\n                style: { width: \"190px\" },\n                onKeyDown: (e) => {\n                  if (e.code === \"NumpadEnter\" || e.code === 'Enter') {\n                    refDate.current?.focus()\n                  }\n                }\n              }}\n              inputRef={refRefNo}\n            />\n          )}\n          <TextInput\n            label={{\n              title: \"Date : \",\n              style: {\n                fontSize: \"12px\",\n                fontWeight: \"bold\",\n                width: \"50px\",\n              },\n            }}\n            input={{\n              defaultValue: format(new Date(), \"yyyy-MM-dd\"),\n              disabled: modeDefault,\n              type: \"date\",\n              style: { width: \"190px\" },\n              onKeyDown: (e) => {\n                if (e.code === \"NumpadEnter\" || e.code === 'Enter') {\n                  refExplanation.current?.focus()\n                }\n              }\n            }}\n            inputRef={refDate}\n          />\n          <TextInput\n            label={{\n              title: \"Explanation : \",\n              style: {\n                fontSize: \"12px\",\n                fontWeight: \"bold\",\n                width: \"90px\",\n              },\n            }}\n            input={{\n              disabled: modeDefault,\n              type: \"text\",\n              style: { width: \"600px\" },\n              onKeyDown: (e) => {\n                if (e.code === \"NumpadEnter\" || e.code === 'Enter') {\n                  refCode.current?.focus()\n                }\n              }\n            }}\n            inputRef={refExplanation}\n          />\n        </div>\n        <fieldset\n          style={{\n            border: \"1px solid #cbd5e1\",\n            borderRadius: \"5px\",\n            position: \"relative\",\n            width: \"100%\",\n            height: \"auto\",\n            marginTop: \"10px\",\n\n            padding: \"15px\",\n          }}\n        >\n          <div\n            style={{\n              display: \"flex\",\n              gap: \"10px\",\n            }}\n          >\n            {isLoadingChartAccountSearch ? (\n              <LoadingButton loading={isLoadingChartAccountSearch} />\n            ) : (\n              <TextInput\n                label={{\n                  title: \"Code : \",\n                  style: {\n                    fontSize: \"12px\",\n                    fontWeight: \"bold\",\n                    width: \"70px\",\n                  },\n                }}\n                input={{\n                  disabled: modeDefault,\n                  type: \"text\",\n                  style: { width: \"190px\" },\n                  onKeyDown: (e) => {\n                    if (e.key === \"Enter\" || e.key === \"NumpadEnter\") {\n                      e.preventDefault();\n                      if (refCode.current) {\n                        openChartAccountSearch(refCode.current.value)\n                      }\n                    }\n                  }\n                }}\n                inputRef={refCode}\n                icon={<SupervisorAccountIcon sx={{ fontSize: \"18px\", color: modeDefault ? \"gray\" : \"black\" }} />}\n                onIconClick={(e) => {\n                  e.preventDefault()\n                  if (refCode.current) {\n                    openChartAccountSearch(refCode.current.value)\n                  }\n                }}\n                disableIcon={modeDefault}\n              />\n            )}\n\n            <TextInput\n              label={{\n                title: \"Account Name : \",\n                style: {\n                  fontSize: \"12px\",\n                  fontWeight: \"bold\",\n                  width: \"100px\",\n                },\n              }}\n              input={{\n                disabled: modeDefault,\n                type: \"text\",\n                style: { width: \"190px\" },\n                readOnly: true,\n                onKeyDown: (e) => {\n                  if (e.code === \"NumpadEnter\" || e.code === 'Enter') {\n                    refSubAccount.current?.focus()\n                  }\n                }\n              }}\n              inputRef={refAccountName}\n            />\n\n            <TextInput\n              label={{\n                title: \"Sub Account : \",\n                style: {\n                  fontSize: \"12px\",\n                  fontWeight: \"bold\",\n                  width: \"100px\",\n                },\n              }}\n              input={{\n                disabled: modeDefault,\n                type: \"text\",\n                style: { width: \"190px\" },\n                readOnly: true,\n                onKeyDown: (e) => {\n                  if (e.code === \"NumpadEnter\" || e.code === 'Enter') {\n                    refName.current?.focus()\n                  }\n                }\n              }}\n              inputRef={refSubAccount}\n            />\n\n            {isLoadingPolicyIdClientIdRefId ? (\n              <LoadingButton loading={isLoadingPolicyIdClientIdRefId} />\n            ) : (\n              <TextInput\n                label={{\n                  title: \"I.D : \",\n                  style: {\n                    fontSize: \"12px\",\n                    fontWeight: \"bold\",\n                    width: \"70px\",\n                  },\n                }}\n                input={{\n                  disabled: modeDefault,\n                  type: \"text\",\n                  style: { width: \"300px\" },\n                  onKeyDown: (e) => {\n                    if (e.key === \"Enter\" || e.key === \"NumpadEnter\") {\n                      e.preventDefault();\n                      if (refName.current) {\n                        openPolicyIdClientIdRefId(refName.current.value)\n                      }\n                    }\n                  }\n                }}\n                inputRef={refName}\n                icon={<AccountCircleIcon sx={{ fontSize: \"18px\", color: modeDefault ? \"gray\" : \"black\" }} />}\n                onIconClick={(e) => {\n                  e.preventDefault()\n                  if (refName.current) {\n                    openPolicyIdClientIdRefId(refName.current.value)\n                  }\n                }}\n                disableIcon={modeDefault}\n              />\n            )}\n          </div>\n          <div\n            style={{\n              display: \"flex\",\n              gap: \"10px\",\n              marginTop: \"10px\",\n            }}\n          >\n            <TextFormatedInput\n              label={{\n                title: \"Debit : \",\n                style: {\n                  fontSize: \"12px\",\n                  fontWeight: \"bold\",\n                  width: \"70px\",\n                },\n              }}\n              input={{\n                disabled: modeDefault,\n                type: \"text\",\n                style: { width: \"190px\" },\n                onKeyDown: (e) => {\n                  if (e.code === \"NumpadEnter\" || e.code === 'Enter') {\n                    refCredit.current?.focus()\n                  }\n                }\n              }}\n              inputRef={refDebit}\n            />\n            <TextFormatedInput\n              label={{\n                title: \"Credit : \",\n                style: {\n                  fontSize: \"12px\",\n                  fontWeight: \"bold\",\n                  width: \"100px\",\n                },\n              }}\n              input={{\n                disabled: modeDefault,\n                type: \"text\",\n                style: { width: \"190px\" },\n                onKeyDown: (e) => {\n                  if (e.code === \"NumpadEnter\" || e.code === 'Enter') {\n                    refTC.current?.focus()\n                  }\n                }\n              }}\n              inputRef={refCredit}\n            />\n            {isLoadingTransactionAccount ? (\n              <LoadingButton loading={isLoadingTransactionAccount} />\n            ) : (\n              <TextInput\n                label={{\n                  title: \"TC : \",\n                  style: {\n                    fontSize: \"12px\",\n                    fontWeight: \"bold\",\n                    width: \"100px\",\n                  },\n                }}\n                input={{\n                  disabled: modeDefault,\n                  type: \"text\",\n                  style: { width: \"190px\" },\n                  onKeyDown: (e) => {\n                    if (e.key === \"Enter\" || e.key === \"NumpadEnter\") {\n                      e.preventDefault();\n                      if (refTC.current) {\n                        openTransactionAccount(refTC.current.value)\n                      }\n                    }\n                  }\n                }}\n                inputRef={refTC}\n                icon={<AccountBalanceWalletIcon sx={{ fontSize: \"18px\", color: modeDefault ? \"gray\" : \"black\" }} />}\n                onIconClick={(e) => {\n                  e.preventDefault()\n                  if (refTC.current) {\n                    openTransactionAccount(refTC.current.value)\n                  }\n                }}\n                disableIcon={modeDefault}\n              />\n            )}\n            <TextInput\n              label={{\n                title: \"Remarks : \",\n                style: {\n                  fontSize: \"12px\",\n                  fontWeight: \"bold\",\n                  width: \"70px\",\n                },\n              }}\n              input={{\n                disabled: modeDefault,\n                type: \"text\",\n                style: { width: \"300px\" },\n                onKeyDown: (e) => {\n                  if (e.code === \"NumpadEnter\" || e.code === 'Enter') {\n                    refVat.current?.focus()\n                  }\n                }\n              }}\n              inputRef={refRemarks}\n            />\n          </div>\n          <div style={{\n            display: \"flex\",\n            gap: \"10px\",\n            marginTop: \"10px\",\n          }}>\n\n            <SelectInput\n              label={{\n                title: \"Vat Type : \",\n                style: {\n                  fontSize: \"12px\",\n                  fontWeight: \"bold\",\n                  width: \"70px\",\n                },\n              }}\n              selectRef={refVat}\n              select={{\n                disabled: modeDefault,\n                style: { width: \"190px\", height: \"22px\" },\n                defaultValue: \"Non-VAT\",\n                onKeyDown: (e) => {\n                  if (e.code === \"NumpadEnter\" || e.code === 'Enter') {\n                    e.preventDefault()\n                    refInvoice.current?.focus()\n                  }\n                }\n              }}\n              datasource={[\n                { key: \"VAT\" },\n                { key: \"Non-VAT\" },\n              ]}\n              values={\"key\"}\n              display={\"key\"}\n            />\n            <TextInput\n              label={{\n                title: \"OR/Invoice No. : \",\n                style: {\n                  fontSize: \"12px\",\n                  fontWeight: \"bold\",\n                  width: \"100px\",\n                },\n              }}\n              input={{\n                disabled: modeDefault,\n                type: \"text\",\n                style: { width: \"300px\" },\n                onKeyDown: (e) => {\n                  if (e.code === \"NumpadEnter\" || e.code === 'Enter') {\n                    e.preventDefault()\n                    handleRowSave()\n                  }\n                }\n              }}\n              inputRef={refInvoice}\n            />\n\n            <Button\n              disabled={modeDefault}\n              sx={{\n                height: \"22px\",\n                fontSize: \"11px\",\n              }}\n              variant=\"contained\"\n              startIcon={<SaveIcon sx={{ fontSize: \"12px\", }} />}\n              onClick={() => {\n                handleRowSave()\n              }}\n              color=\"success\"\n            >\n              Save Row\n            </Button>\n          </div>\n        </fieldset>\n        <DataGridViewReact\n          ref={table}\n          columns={selectedCollectionColumns}\n          height='380px'\n          getSelectedItem={(rowItm: any) => {\n            if (rowItm) {\n              refIDNo.current = rowItm[11]\n              refSubAcct.current = rowItm[12]\n\n              if (refCode.current) {\n                refCode.current.value = rowItm[0]\n              }\n              if (refAccountName.current) {\n                refAccountName.current.value = rowItm[1]\n              }\n              if (refSubAccount.current) {\n                refSubAccount.current.value = rowItm[2]\n              }\n              if (refName.current) {\n                refName.current.value = rowItm[3]\n              }\n              if (refDebit.current) {\n                refDebit.current.value = rowItm[4]\n              }\n              if (refCredit.current) {\n                refCredit.current.value = rowItm[5]\n              }\n              if (refTC.current) {\n                refTC.current.value = rowItm[6]\n              }\n              if (refRemarks.current) {\n                refRemarks.current.value = rowItm[7]\n              }\n              if (refVat.current) {\n                refVat.current.value = rowItm[8]\n              }\n              if (refInvoice.current) {\n                refInvoice.current.value = rowItm[9]\n              }\n            } else {\n              resetRow()\n            }\n          }}\n          onKeyDown={(rowItm: any, rowIdx: any, e: any) => {\n            if (e.code === 'Delete' || e.code === 'Backspace') {\n              const isConfim = window.confirm(`Are you sure you want to delete?`)\n              if (isConfim) {\n                const debitTableData = table.current.getData()\n                debitTableData.splice(rowIdx, 1);\n                table.current.setData(debitTableData)\n\n                setTimeout(() => {\n                  const getData = table.current.getData()\n\n                  monitor()\n                }, 200)\n\n                return\n              }\n            }\n          }}\n        />\n        <Modal open={openJobs} onClose={() => setOpenJobs(false)}>\n          <Box\n            sx={{\n              position: \"absolute\" as \"absolute\",\n              top: \"50%\",\n              left: \"50%\",\n              transform: \"translate(-50%, -50%)\",\n              width: 470,\n              bgcolor: \"background.paper\",\n              p: 4,\n            }}\n          >\n            <IconButton\n              style={{\n                position: \"absolute\",\n                top: \"10px\",\n                right: \"10px\",\n              }}\n              aria-label=\"search-client\"\n              onClick={() => setOpenJobs(false)}\n            >\n              <CloseIcon />\n            </IconButton>\n            <Typography\n              id=\"modal-modal-title\"\n              variant=\"h6\"\n              component=\"h2\"\n              sx={{ marginBottom: \"20px\" }}\n            >\n              Jobs\n            </Typography>\n            <div\n              style={{\n                width: \"400px\",\n              }}\n            >\n              <div\n                style={{\n                  width: \"100%\",\n                  display: \"flex\",\n                  marginBottom: \"10px\",\n                  justifyContent: \"space-between\",\n                  alignItems: \"center\",\n                }}\n              >\n                <LocalizationProvider dateAdapter={AdapterDateFns}>\n                  <DatePicker\n                    sx={{\n                      width: \"200px\",\n                      \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n                    }}\n                    slotProps={{\n                      textField: {\n                        size: \"small\",\n                        name: \"\",\n                        InputLabelProps: {\n                          style: {\n                            fontSize: \"14px\",\n                          },\n                        },\n                        InputProps: {\n                          style: { height: \"27px\", fontSize: \"14px\" },\n                        },\n                      },\n                    }}\n                    label={\"Transaction Date: \"}\n                    views={[\"month\", \"year\"]}\n                    value={state.jobTransactionDate}\n                    onChange={(value) => {\n                      dispatch({\n                        type: \"UPDATE_FIELD\",\n                        field: \"jobTransactionDate\",\n                        value: value,\n                      });\n                    }}\n                  />\n                </LocalizationProvider>\n                <FormControlLabel\n                  sx={{\n                    height: \"30px\",\n                    \"& .MuiTypography-root\": {\n                      fontSize: \"14px\",\n                    },\n                  }}\n                  control={\n                    <Checkbox\n                      size=\"small\"\n                      checked={state.jobAutoExp}\n                      onChange={(e) => {\n                        dispatch({\n                          type: \"UPDATE_FIELD\",\n                          field: \"jobAutoExp\",\n                          value: !state.jobAutoExp,\n                        });\n                      }}\n                    />\n                  }\n                  label=\"Auto Explanation\"\n                />\n              </div>\n              <FormControl\n                fullWidth\n                size=\"small\"\n                variant=\"outlined\"\n                sx={{\n                  \".MuiFormLabel-root\": {\n                    fontSize: \"14px\",\n                    background: \"white\",\n                    zIndex: 99,\n                    padding: \"0 3px\",\n                  },\n                  \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n                }}\n              >\n                <InputLabel id=\"label-selection-job-type\">Type of Job</InputLabel>\n                <Select\n                  labelId=\"label-selection-job-type\"\n                  value={state.jobType}\n                  name=\"jobType\"\n                  onChange={handleInputChange}\n                  autoWidth\n                  sx={{\n                    height: \"27px\",\n                    fontSize: \"14px\",\n                  }}\n                >\n                  <MenuItem value={\"\"}> </MenuItem>\n                  <MenuItem value={\"0\"}>Reversal of Accrued Interest </MenuItem>\n                  <MenuItem value={\"1\"}>\n                    {\" \"}\n                    Income Recognition & Accrual of Interest\n                  </MenuItem>\n                  <MenuItem value={\"2\"}>Penalty Charges</MenuItem>\n                  <MenuItem value={\"3\"}>Penalty Income</MenuItem>\n                  <MenuItem value={\"4\"}>RPT Transaction (NIL-HN)</MenuItem>\n                  <MenuItem value={\"5\"}>RPT Transaction (AMIFIN)</MenuItem>\n                  <MenuItem value={\"6\"}>RPT Income</MenuItem>\n                  <MenuItem value={\"7\"}>Monthly Accrual Expenses</MenuItem>\n                  <MenuItem value={\"8\"}>Monthly Accrual Income</MenuItem>\n                  <MenuItem value={\"9\"}>\n                    Production (Milestone Guarantee)\n                  </MenuItem>\n                  <MenuItem value={\"10\"}>\n                    Production (Liberty Insurance Co.)\n                  </MenuItem>\n                  <MenuItem value={\"11\"}>Production (Federal Phoenix)</MenuItem>\n                </Select>\n              </FormControl>\n            </div>\n\n            <div\n              style={{\n                display: \"flex\",\n                columnGap: \"30px\",\n                alignItems: \"flex-end\",\n                marginTop: \"20px\",\n              }}\n            >\n              <LoadingButton\n                loading={isLoadingJob}\n                color=\"success\"\n                variant=\"contained\"\n                onClick={() => {\n                  if (state.jobType === '4') {\n                    DoRPTTransactionNILHN()\n                  }\n\n                }}\n              >\n                Create Job\n              </LoadingButton>\n              <Button\n                // ref={checkModalSaveButton}\n                color=\"error\"\n                variant=\"contained\"\n                onClick={() => setOpenJobs(false)}\n              >\n                Cancel\n              </Button>\n            </div>\n          </Box>\n        </Modal>\n        {ModalChartAccountSearch}\n        {ModalPolicyIdClientIdRefId}\n        {ModalTransactionAccount}\n        {ModalSearchGeneralJounal}\n      </div>\n    </>\n\n  );\n}\n\nfunction setNewStateValue(dispatch: any, obj: any) {\n  Object.entries(obj).forEach(([field, value]) => {\n    dispatch({ type: \"UPDATE_FIELD\", field, value });\n  });\n}\nconst ID_Entry = `\nSELECT \n       id_entry.IDNo,\n       id_entry.ShortName as Shortname,\n       IDType,\n       b.Acronym as Sub_Acct,\n       b.ShortName as Sub_ShortName\n   FROM\n       (SELECT \n           IF(aa.option = 'individual', CONCAT(IF(aa.lastname IS NOT NULL\n                   AND TRIM(aa.lastname) <> '', CONCAT(aa.lastname, ', '), ''), aa.firstname), aa.company) AS ShortName,\n               aa.entry_client_id AS IDNo,\n               aa.sub_account,\n               'Client' as IDType\n       FROM\n           entry_client aa UNION ALL SELECT \n           CONCAT(IF(aa.lastname IS NOT NULL\n                   AND TRIM(aa.lastname) <> '', CONCAT(aa.lastname, ', '), ''), aa.firstname) AS ShortName,\n               aa.entry_agent_id AS IDNo,\n               aa.sub_account,\n               'Agent' as IDType\n       FROM\n           entry_agent aa UNION ALL SELECT \n           CONCAT(IF(aa.lastname IS NOT NULL\n                   AND TRIM(aa.lastname) <> '', CONCAT(aa.lastname, ', '), ''), aa.firstname) AS ShortName,\n               aa.entry_employee_id AS IDNo,\n               aa.sub_account,\n               'Employee' as IDType\n       FROM\n           entry_employee aa UNION ALL SELECT \n           aa.fullname AS ShortName,\n               aa.entry_fixed_assets_id AS IDNo,\n               sub_account,\n                'Fixed Assets' as IDType\n       FROM\n           entry_fixed_assets aa UNION ALL SELECT \n           aa.description AS ShortName,\n               aa.entry_others_id AS IDNo,\n               aa.sub_account,\n               'Others' as IDType\n       FROM\n           entry_others aa UNION ALL SELECT \n           IF(aa.option = 'individual', CONCAT(IF(aa.lastname IS NOT NULL\n                   AND TRIM(aa.lastname) <> '', CONCAT(aa.lastname, ', '), ''), aa.firstname), aa.company) AS ShortName,\n               aa.entry_supplier_id AS IDNo,\n               aa.sub_account,\n                'Supplier' as IDType\n       FROM\n           entry_supplier aa) id_entry\n      left join sub_account b ON id_entry.sub_account = b.Sub_Acct\n `","import { useContext, useState } from \"react\";\nimport { useQuery } from \"react-query\";\nimport { AuthContext, User } from \"../components/AuthContext\";\nimport {\n  GridRowSelectionModel,\n  GridCellParams,\n  GridTreeNode,\n} from \"@mui/x-data-grid\";\nimport ModalWithTable from \"../components/ModalWithTable\";\nimport { flushSync } from \"react-dom\";\nimport { AxiosResponse, AxiosInstance } from \"axios\";\nimport { GridRowParams } from \"@mui/x-data-grid\";\ninterface QueryModalTableParamsType {\n  link?: {\n    url: string;\n    queryUrlName: string;\n  };\n  uniqueId: string;\n  queryKey: string;\n  responseDataKey: string;\n  columns: Array<any>;\n  onSelected?: (selectedRowData: Array<any>, data: Array<any>) => void;\n  onRemoveSelected?: (data: Array<any>) => void;\n  onSuccess?: (data: any) => void;\n  searchRef?: React.RefObject<HTMLInputElement>;\n  onCellKeyDown?: any;\n  onCloseFunction?: (search: any) => void;\n  CustomizeAxios?: (\n    myAxios: AxiosInstance,\n    user: User | null,\n    link: QueryModalTableParamsType[\"link\"],\n    search?: string\n  ) => Promise<AxiosResponse<any, any>>;\n  isRowSelectable?: ((params: GridRowParams<any>) => boolean) | undefined;\n  getCellClassName?:\n    | ((params: GridCellParams<any, any, any, GridTreeNode>) => string)\n    | undefined;\n}\n\nasync function CustomizeAxiosFunc(\n  myAxios: AxiosInstance,\n  user: User | null,\n  link: QueryModalTableParamsType[\"link\"],\n  search: string = \"\"\n) {\n  return myAxios.get(`${link?.url}?${link?.queryUrlName}=${search}`, {\n    headers: {\n      Authorization: `Bearer ${user?.accessToken}`,\n    },\n  });\n}\n\nconst useQueryModalTable = ({\n  link,\n  uniqueId,\n  queryKey,\n  responseDataKey,\n  columns,\n  onSelected = () => {},\n  onRemoveSelected = () => {},\n  onSuccess = () => {},\n  searchRef,\n  onCellKeyDown,\n  onCloseFunction = () => {},\n  CustomizeAxios = CustomizeAxiosFunc,\n  isRowSelectable,\n  getCellClassName,\n}: QueryModalTableParamsType) => {\n  const { myAxios, user } = useContext(AuthContext);\n  const [show, setShowModal] = useState(false);\n  const [rows, setRows] = useState<GridRowSelectionModel>([]);\n  async function customizeAxiostool(search: string = \"\") {\n    return await CustomizeAxios(myAxios, user, link, search);\n  }\n  const { isLoading, refetch } = useQuery({\n    queryKey: queryKey,\n    queryFn: async () => await customizeAxiostool(),\n    onSuccess: (res) => {\n      const response = res as any;\n      setRows(response.data[responseDataKey]);\n      onSuccess(response);\n    },\n    refetchOnWindowFocus: false,\n  });\n\n  const openModal = (search: string = \"\") => {\n    flushSync(() => {\n      setShowModal(true);\n    });\n    if (searchRef?.current) {\n      searchRef.current.value = search;\n      customizeAxiostool(search).then((res: any) => {\n        if (!res?.data.success) {\n          return alert(`Error : ${res?.data.message}`);\n        }\n        const response = res as any;\n        setRows(response.data[responseDataKey]);\n        if (searchRef?.current) searchRef.current.focus();\n      });\n    }\n  };\n\n  const closeModal = () => {\n    setShowModal(false);\n    if (onCloseFunction) {\n      onCloseFunction(searchRef?.current?.value);\n    }\n  };\n\n  const ModalComponent = (\n    <ModalWithTable\n      getCellClassName={getCellClassName}\n      searchRef={searchRef}\n      showModal={show}\n      onCloseModal={() => {\n        setShowModal(false);\n        if (onCloseFunction) {\n          onCloseFunction(searchRef?.current?.value);\n        }\n      }}\n      onClickCloseIcon={() => {\n        setShowModal(false);\n        if (onCloseFunction) {\n          onCloseFunction(searchRef?.current?.value);\n        }\n      }}\n      searchOnChange={(e) => {\n        // myAxios\n        //   .get(`${link.url}?${link.queryUrlName}=${e.target.value}`, {\n        //     headers: {\n        //       Authorization: `Bearer ${user?.accessToken}`,\n        //     },\n        //   })\n        //   .then((res: any) => {\n        //     if (!res?.data.success) {\n        //       return alert(`Error : ${res?.data.message}`);\n        //     }\n        //     const response = res as any;\n        //     setRows(response.data[responseDataKey]);\n        //   });\n      }}\n      onSearchKeyEnter={(value) => {\n        customizeAxiostool(value).then((res: any) => {\n          if (!res?.data.success) {\n            return alert(`Error : ${res?.data.message}`);\n          }\n          const response = res as any;\n          setRows(response.data[responseDataKey]);\n        });\n      }}\n      onCellKeyDown={onCellKeyDown}\n      height={300}\n      isLoading={isLoading}\n      queryKey={queryKey}\n      columns={columns}\n      onSelectionChange={(rowSelectionModel, data) => {\n        if (rowSelectionModel.length <= 0) {\n          return onRemoveSelected(data);\n        }\n        const selectedIDs = new Set(rowSelectionModel);\n        const selectedRowData = data.filter((row: any) => {\n          return selectedIDs.has(row[uniqueId].toString());\n        });\n        if (selectedRowData.length <= 0) return;\n        onSelected(selectedRowData, data);\n      }}\n      id={uniqueId}\n      rows={rows}\n      setRows={setRows}\n      isRowSelectable={isRowSelectable}\n    />\n  );\n\n  return {\n    show,\n    rows,\n    isLoading,\n    openModal,\n    closeModal,\n    ModalComponent,\n    refetch,\n  };\n};\n\nexport default useQueryModalTable;\n","import Swal from \"sweetalert2\";\n\nexport function codeCondfirmationAlert(props: {\n  cb: (userCodeConfirmation: string) => void;\n  isUpdate: boolean;\n  isConfirm?: () => void;\n  isDeclined?: () => void;\n  text?: string;\n}) {\n  Swal.fire({\n    title: `Are you sure!`,\n    html: props?.text\n      ? props?.text\n      : props.isUpdate\n      ? `Are you sure you want to make this change?`\n      : \"Are you sure you want to delete this?\",\n    icon: \"warning\",\n    input: \"text\",\n    inputAttributes: {\n      autocapitalize: \"off\",\n    },\n    showCancelButton: true,\n    confirmButtonText: \"Save\",\n    confirmButtonColor: \"green\",\n    showLoaderOnConfirm: true,\n    preConfirm: async (userCodeConfirmation) => {\n      try {\n        props.cb(userCodeConfirmation);\n      } catch (error) {\n        Swal.showValidationMessage(`\n            Request failed: ${error}\n          `);\n      }\n    },\n    allowOutsideClick: () => !Swal.isLoading(),\n  }).then((result) => {\n    if (result.isConfirmed) {\n      if (props.isConfirm) {\n        return props.isConfirm();\n      }\n    }\n    if (props.isDeclined) {\n      props.isDeclined();\n    }\n  });\n}\n\nexport function saveCondfirmationAlert(props: {\n  isConfirm?: () => void;\n  isDeclined?: () => void;\n  text?: string;\n}) {\n  Swal.fire({\n    title: \"Are you sure?\",\n    text: props?.text ? props?.text : \"Do you want to proceed with saving?\",\n    icon: \"warning\",\n    showCancelButton: true,\n    confirmButtonColor: \"#3085d6\",\n    cancelButtonColor: \"#d33\",\n    confirmButtonText: \"Yes, save it!\",\n  }).then((result) => {\n    if (result.isConfirmed) {\n      if (props.isConfirm) {\n        return props.isConfirm();\n      }\n    }\n    if (props.isDeclined) {\n      props.isDeclined();\n    }\n  });\n}\n","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M21 18v1c0 1.1-.9 2-2 2H5c-1.11 0-2-.9-2-2V5c0-1.1.89-2 2-2h14c1.1 0 2 .9 2 2v1h-9c-1.11 0-2 .9-2 2v8c0 1.1.89 2 2 2h9zm-9-2h10V8H12v8zm4-2.5c-.83 0-1.5-.67-1.5-1.5s.67-1.5 1.5-1.5 1.5.67 1.5 1.5-.67 1.5-1.5 1.5z\"\n}), 'AccountBalanceWallet');\nexports.default = _default;","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\"\n}), 'Add');\nexports.default = _default;","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M20 6h-3V4c0-1.11-.89-2-2-2H9c-1.11 0-2 .89-2 2v2H4c-1.11 0-2 .89-2 2v11c0 1.11.89 2 2 2h16c1.11 0 2-.89 2-2V8c0-1.11-.89-2-2-2zM9 4h6v2H9V4zm11 15H4v-2h16v2zm0-5H4V8h3v2h2V8h6v2h2V8h3v6z\"\n}), 'CardTravel');\nexports.default = _default;","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.42 0-8-3.58-8-8 0-1.85.63-3.55 1.69-4.9L16.9 18.31C15.55 19.37 13.85 20 12 20zm6.31-3.1L7.1 5.69C8.45 4.63 10.15 4 12 4c4.42 0 8 3.58 8 8 0 1.85-.63 3.55-1.69 4.9z\"\n}), 'NotInterested');\nexports.default = _default;","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M17 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V7l-4-4zm-5 16c-1.66 0-3-1.34-3-3s1.34-3 3-3 3 1.34 3 3-1.34 3-3 3zm3-10H5V5h10v4z\"\n}), 'Save');\nexports.default = _default;","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z\"\n}), 'Search');\nexports.default = _default;","const deepOrange = {\n  50: '#fbe9e7',\n  100: '#ffccbc',\n  200: '#ffab91',\n  300: '#ff8a65',\n  400: '#ff7043',\n  500: '#ff5722',\n  600: '#f4511e',\n  700: '#e64a19',\n  800: '#d84315',\n  900: '#bf360c',\n  A100: '#ff9e80',\n  A200: '#ff6e40',\n  A400: '#ff3d00',\n  A700: '#dd2c00'\n};\nexport default deepOrange;","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name lastDayOfMonth\n * @category Month Helpers\n * @summary Return the last day of a month for the given date.\n *\n * @description\n * Return the last day of a month for the given date.\n * The result will be in the local timezone.\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the last day of a month\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The last day of a month for 2 September 2014 11:55:00:\n * const result = lastDayOfMonth(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Tue Sep 30 2014 00:00:00\n */\nexport default function lastDayOfMonth(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var month = date.getMonth();\n  date.setFullYear(date.getFullYear(), month + 1, 0);\n  date.setHours(0, 0, 0, 0);\n  return date;\n}"],"names":["_ref","_ref$title","title","_jsxs","Helmet","children","_jsx","rel","type","href","concat","process","Loading","_Fragment","style","position","top","bottom","left","right","background","zIndex","backgroundColor","width","height","transform","boxShadow","display","columnGap","alignItems","justifyContent","padding","CircularProgress","color","bgcolor","p","heigth","ModalWithTable","isLoading","columns","queryKey","onSelectionChange","rows","setRows","id","onCloseModal","showModal","onClickCloseIcon","searchOnChange","searchRef","_ref$onSearchKeyEnter","onCellKeyDown","onSearchKeyEnter","isRowSelectable","getCellClassName","mainId","generateRandomClass","Modal","open","onClose","Box","sx","Typography","variant","component","mb","TextField","size","label","marginBottom","fullWidth","onChange","InputProps","inputRef","onKeyDown","e","_searchRef$current","code","preventDefault","current","value","keyBoardSelectionTable","className","Table","isSingleSelection","isRowFreeze","dataSelection","selection","data","table_id","IconButton","onClick","CloseIcon","Math","floor","random","el","_rows$","document","querySelectorAll","classList","add","firstRowParent","querySelector","firstInput","focus","event","MouseEvent","bubbles","cancelable","view","window","dispatchEvent","addEventListener","es","key","remove","keyBoardUpDown","forEach","idx","_rows$idx","_rows","_rows$idx2","_rows2","length","TableContext","createContext","rowSelectionModel","footerChildren","footerPaginationPosition","showFooterSelectedCount","forwardRef","ref","_ref$CustomFooterComp","CustomFooterComponent","DefaultooterComponent","_ref$checkboxSelectio","checkboxSelection","_ref$footerChildren","_ref$footerPagination","_ref$showFooterSelect","_useState","useState","_useState2","_slicedToArray","selectedRows","setSelectedRows","useImperativeHandle","removeSelection","getSelectedRows","filter","item","includes","freezeArray","Provider","DataGrid","slots","loadingOverlay","LinearProgress","footer","initialState","pagination","paginationModel","pageSize","loading","getRowId","row","col","hide","showCellVerticalBorder","showColumnVerticalBorder","rowHeight","columnHeaderHeight","pageSizeOptions","_objectSpread","fill","fontSize","fontWeight","onRowSelectionModelChange","selectionSet","Set","s","has","__","rowNode","_toConsumableArray","disableVirtualization","Pagination","_ref2","page","onPageChange","apiRef","useGridApiContext","pageCount","useGridSelector","gridPageCountSelector","MuiPagination","count","newPage","CustomPagination","props","GridPagination","ActionsComponent","_useContext","useContext","px","flexDirection","flex","A100","A200","A400","A700","totalDebit","totalCredit","totalBalance","jobAutoExp","jobTransactionDate","Date","jobType","search","reducer","state","action","_defineProperty","field","selectedCollectionColumns","GeneralJournal","_queryFn","_mutationFn","_mutationFn2","_mutationFn3","_mutationFn4","_DoRPTTransactionNILHN","executeQueryToClient","useExecuteQueryFromClient","mode","setMode","_useState3","totalRow","balance","_useState4","monitoring","setMonitoring","inputSearchRef","useRef","refRefNo","_refSubRefNo","refDate","refExplanation","refCode","refAccountName","refSubAccount","refName","refDebit","refCredit","refTC","refRemarks","refVat","refInvoice","refIDNo","refSubAcct","refTCDesc","AuthContext","myAxios","user","_useReducer","useReducer","_useReducer2","dispatch","_useState5","_useState6","openJobs","setOpenJobs","chartAccountSearchInput","IdsSearchInput","table","modeAdd","modeUpdate","modeDefault","_useQuery","useQuery","queryFn","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","get","headers","Authorization","accessToken","abrupt","sent","stop","apply","arguments","refetchOnWindowFocus","onSuccess","_state$sub_refNo","response","sub_refNo","wait","then","generateGeneralJournalID","general_journal_id","loadingGeneralJournalGenerator","refetchGeneralJournalGenerator","refetch","_useMutation","useMutation","mutationKey","mutationFn","_x","_callee2","variable","_context2","post","res","success","Swal","icon","message","timer","text","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","result","isConfirmed","handleClickPrint","resetFieldRef","resetRowFieldRef","resetTable","resetMonitoring","addGeneralJournalMutate","mutate","loadingGeneralJournalMutate","_useMutation2","_x2","_callee3","_context3","setDataFormated","jobs","monitor","isLoadingJob","_useMutation3","_x3","_callee4","_context4","mutateVoidGeneralJournal","loadingVoidGeneralJournalMutate","_useMutation4","_x4","_callee5","_context5","selected","getSelectedSearchGeneralJournal","_selected$","explanation","dateEntry","refNo","format","getSearchSelectedGeneralJournal","loadingGetSearchSelectedGeneralJournal","_useQueryModalTable","useQueryModalTable","link","url","queryUrlName","headerName","uniqueId","responseDataKey","onSelected","selectedRowData","Source_No","closeSearchGeneralJounal","resetRow","onCloseFunction","ModalSearchGeneralJounal","ModalComponent","openSearchGeneralJounal","openModal","isLoadingSearchGeneralJounal","closeModal","_useQueryModalTable2","Acct_Code","Acct_Title","closeChartAccountSearch","setTimeout","_refName$current","ModalChartAccountSearch","openChartAccountSearch","isLoadingChartAccountSearch","_useQueryModalTable3","_selectedRowData$0$Na","_selectedRowData$0$Sh","Name","ShortName","IDNo","sub_account","closePolicyIdClientIdRefId","_refDebit$current","ModalPolicyIdClientIdRefId","openPolicyIdClientIdRefId","isLoadingPolicyIdClientIdRefId","_useQueryModalTable4","Code","Description","closeTransactionAccount","_refRemarks$current","ModalTransactionAccount","openTransactionAccount","isLoadingTransactionAccount","handleOnSave","useCallback","_refRefNo$current","_refExplanation$curre","_refExplanation$curre2","parseFloat","replace","generalJournalDataFormatted","getData","map","itm","acctName","subAcctName","ClientName","debit","credit","TC_Code","remarks","vatType","invoice","TempID","BranchCode","codeCondfirmationAlert","isUpdate","cb","userCodeConfirmation","_refRefNo$current2","_refDate$current","_refExplanation$curre3","hasSelected","generalJournal","saveCondfirmationAlert","isConfirm","_refRefNo$current3","_refDate$current2","_refExplanation$curre4","handleRowSave","_refDebit$current2","_refCredit$current","_refCredit$current3","_refDebit$current4","_refTC$current","_refCode$current","_refName$current3","_refName$current2","isNaN","_refDebit$current3","_refCredit$current2","_refCredit$current4","_refCode$current2","_refName$current4","_refTC$current2","_refInvoice$current","getSelectedRow","newData","newInput","taxtInput","taxableamt","formatNumber","inputtax","taxtDebit","taxtCredit","setSelectedRow","setData","getNewData","splice","flushSync","_refRefNo$current4","_refDate$current3","_refExplanation$curre5","localStorage","removeItem","setItem","JSON","stringify","JVNo","JVDate","JVExp","datakey","header","department","reduce","a","b","Amount","toLocaleString","minimumFractionDigits","maximumFractionDigits","useEffect","handleKeyDown","ctrlKey","metaKey","removeEventListener","PageHelmet","LoadingButton","TextInput","input","currentTarget","Button","startIcon","AddIcon","disabled","deepOrange","NotInterestedIcon","brown","d","CardTravelIcon","grey","border","margin","parseInt","marginTop","gap","_refDate$current4","defaultValue","_refExplanation$curre6","_refCode$current3","borderRadius","SupervisorAccountIcon","onIconClick","disableIcon","readOnly","_refSubAccount$curren","_refName$current5","AccountCircleIcon","TextFormatedInput","_refCredit$current5","_refTC$current3","AccountBalanceWalletIcon","_refVat$current","SelectInput","selectRef","select","_refInvoice$current2","datasource","values","SaveIcon","DataGridViewReact","getSelectedItem","rowItm","rowIdx","confirm","debitTableData","LocalizationProvider","dateAdapter","AdapterDateFns","DatePicker","slotProps","textField","name","InputLabelProps","views","FormControlLabel","control","Checkbox","checked","FormControl","InputLabel","Select","labelId","_e$target","target","autoWidth","MenuItem","_callee6","JobDate","dtFrom","dtTo","iRow","qry","dgvJournal","_yield$executeQueryTo","dataArray","_tmpNameRes$data$","_tmpNameRes$data$2","_tmpNameRes$data$3","totalAmount","i","_iterator","_step","_tmpNameRes$data$4","_tmpNameRes$data$5","_tmpNameRes$data$6","tmpID","_yield$executeQueryTo3","_tmpNameRes","_yield$executeQueryTo2","tmpNameRes","_context6","lastDayOfMonth","_createForOfIteratorHelper","n","done","ID_Entry","Sub_ShortName","Shortname","Sub_Acct","PolicyNo","toString","t0","f","finish","DoRPTTransactionNILHN","CustomizeAxiosFunc","_CustomizeAxiosFunc","_args","undefined","_customizeAxiostool","_ref$onSelected","_ref$onRemoveSelected","onRemoveSelected","_ref$onSuccess","_ref$onCloseFunction","_ref$CustomizeAxios","CustomizeAxios","show","setShowModal","customizeAxiostool","_args2","alert","_searchRef$current2","_searchRef$current3","selectedIDs","_preConfirm","html","inputAttributes","autocapitalize","showLoaderOnConfirm","preConfirm","error","allowOutsideClick","isDeclined","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","dirtyDate","requiredArgs","date","toDate","month","getMonth","setFullYear","getFullYear","setHours"],"sourceRoot":""}