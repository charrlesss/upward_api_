{"version":3,"file":"static/js/993.154736da.chunk.js","mappings":"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","sources":["feautures/Admin/Reference/Entry/EntryComponents/Employee.tsx","feautures/Admin/data/entry.tsx","../node_modules/@mui/material/colors/pink.js"],"sourcesContent":["import React, { useContext, useRef, useState } from \"react\";\nimport {\n  Box,\n  TextField,\n  FormControl,\n  OutlinedInput,\n  InputAdornment,\n  IconButton,\n  Button,\n} from \"@mui/material\";\nimport { AuthContext } from \"../../../../../components/AuthContext\";\nimport { useReducer } from \"react\";\nimport { useMutation, useQuery, useQueryClient } from \"react-query\";\nimport InputLabel from \"@mui/material/InputLabel\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport Select from \"@mui/material/Select\";\nimport Swal from \"sweetalert2\";\nimport { reducer, employeeColumn } from \"../../../data/entry\";\nimport { setNewStateValue } from \"../../../Task/Accounting/PostDateChecks\";\nimport { wait } from \"../../../../../lib/wait\";\nimport Table from \"../../../../../components/Table\";\nimport RestartAltIcon from \"@mui/icons-material/RestartAlt\";\nimport { LoadingButton } from \"@mui/lab\";\nimport AddIcon from \"@mui/icons-material/Add\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport SaveIcon from \"@mui/icons-material/Save\";\nimport { pink } from \"@mui/material/colors\";\nimport {\n  codeCondfirmationAlert,\n  saveCondfirmationAlert,\n} from \"../../../../../lib/confirmationAlert\";\nimport UpwardTable from \"../../../../../components/UpwardTable\";\n\nconst initialState = {\n  firstname: \"\",\n  lastname: \"\",\n  middlename: \"\",\n  address: \"\",\n  sub_account: \"\",\n  search: \"\",\n  mode: \"\",\n  entry_employee_id: \"\",\n};\n\nexport default function Employee() {\n  const refParent = useRef<HTMLDivElement>(null);\n  const [rows, setRows] = useState([]);\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const { myAxios, user } = useContext(AuthContext);\n  const queryKey = \"entry_employee_id\";\n  const queryClient = useQueryClient();\n  const table = useRef<any>(null);\n\n  const {\n    data: subAccountData,\n    isLoading: subAccountLoading,\n    refetch: refetchSubAcct,\n  } = useQuery({\n    queryKey: \"sub-accounts\",\n    queryFn: async () =>\n      await myAxios.get(`/reference/sub-account`, {\n        headers: { Authorization: `Bearer ${user?.accessToken}` },\n      }),\n    onSuccess: (res) => {\n      dispatch({\n        type: \"UPDATE_FIELD\",\n        field: \"sub_account\",\n        value: res.data?.defaultValue[0]?.Sub_Acct,\n      });\n    },\n  });\n\n  const { isLoading: loadingEmployeeId, refetch: refetchEmployeeId } = useQuery(\n    {\n      queryKey: \"employee-generate-id\",\n      queryFn: async () =>\n        await myAxios.post(\n          \"/reference/id-entry-generate-id\",\n          { sign: \"E\", type: \"entry employee\" },\n          {\n            headers: { Authorization: `Bearer ${user?.accessToken}` },\n          }\n        ),\n      refetchOnWindowFocus: false,\n      onSuccess: (res) => {\n        handleInputChange({\n          target: { value: res.data.generateID, name: \"entry_employee_id\" },\n        });\n      },\n    }\n  );\n\n  const { isLoading, refetch: refetchEmployeeSearch } = useQuery({\n    queryKey,\n    queryFn: async () =>\n      await myAxios.get(\n        `/reference/search-entry?entrySearch=${state.search}&entry=Employee`,\n        {\n          headers: { Authorization: `Bearer ${user?.accessToken}` },\n        }\n      ),\n    onSuccess: (res) => {\n      setRows((res as any)?.data.entry);\n    },\n  });\n  const { mutate: mutateAdd, isLoading: loadingAdd } = useMutation({\n    mutationKey: queryKey,\n    mutationFn: async (variables: any) =>\n      await myAxios.post(\"/reference/id-entry-employee\", variables, {\n        headers: { Authorization: `Bearer ${user?.accessToken}` },\n      }),\n    onSuccess,\n  });\n  const { mutate: mutateEdit, isLoading: loadingEdit } = useMutation({\n    mutationKey: queryKey,\n    mutationFn: async (variables: any) =>\n      await myAxios.post(`/reference/entry-update?entry=Employee`, variables, {\n        headers: { Authorization: `Bearer ${user?.accessToken}` },\n      }),\n    onSuccess,\n  });\n  const { mutate: mutateDelete, isLoading: loadingDelete } = useMutation({\n    mutationKey: queryKey,\n    mutationFn: async (variables: any) =>\n      await myAxios.post(`/reference/entry-delete?entry=Employee`, variables, {\n        headers: {\n          Authorization: `Bearer ${user?.accessToken}`,\n        },\n      }),\n    onSuccess,\n  });\n  const handleInputChange = (e: any) => {\n    const { name, value } = e.target;\n    const uppercase = [\"lastname\", \"middlename\", \"firstname\"];\n    if (uppercase.includes(name)) {\n      return dispatch({\n        type: \"UPDATE_FIELD\",\n        field: name,\n        value: value.toUpperCase(),\n      });\n    }\n\n    dispatch({ type: \"UPDATE_FIELD\", field: name, value });\n  };\n\n  function onSuccess(res: any) {\n    if (res.data.success) {\n      queryClient.invalidateQueries(queryKey);\n      resetModule();\n      return Swal.fire({\n        position: \"center\",\n        icon: \"success\",\n        title: res.data.message,\n        showConfirmButton: false,\n        timer: 1500,\n      });\n    }\n    Swal.fire({\n      position: \"center\",\n      icon: \"error\",\n      title: res.data.message,\n      showConfirmButton: false,\n      timer: 1500,\n    });\n  }\n  function handleOnSave(e: any) {\n    if (state.firstname === \"\") {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"error\",\n        title: \"Firstname is required!\",\n        showConfirmButton: false,\n        timer: 1500,\n      });\n    }\n    if (state.lastname === \"\") {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"error\",\n        title: \"Lastname is required!\",\n        showConfirmButton: false,\n        timer: 1500,\n      });\n    }\n    if (state.sub_account === \"\") {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"error\",\n        title: \"Sub Account is required!\",\n        showConfirmButton: false,\n        timer: 1500,\n      });\n    }\n\n    if (state.firstname.length >= 200) {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"error\",\n        title: \"Firstname is too Long!\",\n        showConfirmButton: false,\n        timer: 1500,\n      });\n    }\n    if (state.middlename.length >= 200) {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"error\",\n        title: \"Middlename is too Long!\",\n        showConfirmButton: false,\n        timer: 1500,\n      });\n    }\n    if (state.lastname.length >= 200) {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"error\",\n        title: \"Lastname is too Long!\",\n        showConfirmButton: false,\n        timer: 1500,\n      });\n    }\n    if (state.sub_account.length >= 200) {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"error\",\n        title: \"Sub Account is too Long!\",\n        showConfirmButton: false,\n        timer: 1500,\n      });\n    }\n\n    if (state.address.length >= 200) {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"error\",\n        title: \"Address is too Long!\",\n        showConfirmButton: false,\n        timer: 1500,\n      });\n    }\n\n    e.preventDefault();\n    if (state.mode === \"edit\") {\n      codeCondfirmationAlert({\n        isUpdate: true,\n        cb: (userCodeConfirmation) => {\n          mutateEdit({ ...state, userCodeConfirmation });\n        },\n      });\n    } else {\n      saveCondfirmationAlert({\n        isConfirm: () => {\n          mutateAdd(state);\n        },\n      });\n    }\n  }\n  function resetModule() {\n    setNewStateValue(dispatch, initialState);\n    table.current?.resetTableSelected();\n    wait(250).then(() => {\n      refetchEmployeeId();\n      refetchEmployeeSearch();\n      refetchSubAcct();\n    });\n  }\n\n  const width = window.innerWidth - 20;\n  const height = window.innerHeight - 145;\n\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        flexDirection: \"column\",\n        width: \"100%\",\n        height: \"100%\",\n        flex: 1,\n      }}\n    >\n      <Box\n        sx={(theme) => ({\n          display: \"flex\",\n          alignItems: \"center\",\n          columnGap: \"20px\",\n          [theme.breakpoints.down(\"sm\")]: {\n            flexDirection: \"column\",\n            alignItems: \"flex-start\",\n            flex: 1,\n            marginBottom: \"15px\",\n          },\n        })}\n      >\n        <div\n          style={{\n            marginTop: \"10px\",\n            marginBottom: \"12px\",\n            width: \"100%\",\n          }}\n        >\n          <TextField\n            label=\"Search\"\n            fullWidth\n            size=\"small\"\n            type=\"text\"\n            value={state.search}\n            name=\"search\"\n            onChange={handleInputChange}\n            InputProps={{\n              style: { height: \"27px\", fontSize: \"14px\" },\n              className:\"manok\"\n            }}\n            onKeyDown={(e) => {\n              if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n                e.preventDefault();\n                return refetchEmployeeSearch();\n              }\n              if (e.code === \"ArrowDown\") {\n                e.preventDefault();\n                const datagridview = document.querySelector(\n                  `.grid-container`\n                ) as HTMLDivElement;\n                datagridview.focus();\n              }\n            }}\n            sx={{\n              width: \"500px\",\n              height: \"27px\",\n              \".MuiFormLabel-root\": { fontSize: \"14px\" },\n              \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n            }}\n          />\n        </div>\n        <div\n          style={{\n            display: \"flex\",\n            alignItems: \"center\",\n            columnGap: \"20px\",\n          }}\n        >\n          <div\n            style={{\n              display: \"flex\",\n              alignItems: \"center\",\n              columnGap: \"5px\",\n            }}\n          >\n            {state.mode === \"\" && (\n              <Button\n                variant=\"contained\"\n                startIcon={<AddIcon />}\n                id=\"entry-header-save-button\"\n                sx={{\n                  height: \"30px\",\n                  fontSize: \"11px\",\n                }}\n                onClick={() => {\n                  refetchEmployeeId();\n                  handleInputChange({ target: { value: \"add\", name: \"mode\" } });\n                }}\n              >\n                New\n              </Button>\n            )}\n            <LoadingButton\n              id=\"save-entry-header\"\n              color=\"primary\"\n              variant=\"contained\"\n              type=\"submit\"\n              sx={{\n                height: \"30px\",\n                fontSize: \"11px\",\n              }}\n              onClick={handleOnSave}\n              startIcon={<SaveIcon />}\n              disabled={state.mode === \"\"}\n              loading={loadingAdd || loadingEdit}\n            >\n              Save\n            </LoadingButton>\n            {state.mode !== \"\" && (\n              <Button\n                sx={{\n                  height: \"30px\",\n                  fontSize: \"11px\",\n                }}\n                variant=\"contained\"\n                startIcon={<CloseIcon />}\n                color=\"error\"\n                onClick={() => {\n                  Swal.fire({\n                    title: \"Are you sure?\",\n                    text: \"You won't be able to revert this!\",\n                    icon: \"warning\",\n                    showCancelButton: true,\n                    confirmButtonColor: \"#3085d6\",\n                    cancelButtonColor: \"#d33\",\n                    confirmButtonText: \"Yes, cancel it!\",\n                  }).then((result) => {\n                    if (result.isConfirmed) {\n                      resetModule();\n                    }\n                  });\n                }}\n              >\n                Cancel\n              </Button>\n            )}\n\n            <LoadingButton\n              id=\"save-entry-header\"\n              variant=\"contained\"\n              sx={{\n                height: \"30px\",\n                fontSize: \"11px\",\n                backgroundColor: pink[500],\n                \"&:hover\": {\n                  backgroundColor: pink[600],\n                },\n              }}\n              loading={loadingDelete}\n              startIcon={<DeleteIcon />}\n              disabled={state.mode !== \"edit\"}\n              onClick={() => {\n                codeCondfirmationAlert({\n                  isUpdate: false,\n                  cb: (userCodeConfirmation) => {\n                    mutateDelete({\n                      id: state.entry_employee_id,\n                      userCodeConfirmation,\n                    });\n                  },\n                });\n              }}\n            >\n              Delete\n            </LoadingButton>\n          </div>\n        </div>\n      </Box>\n      <form\n        onKeyDown={(e) => {\n          const enterList = [\n            \"firstname\",\n            \"lastname\",\n            \"middlename\",\n            \"address\",\n            \"entry_employee_id\",\n          ];\n          if (\n            (e.code === \"Enter\" || e.code === \"NumpadEnter\") &&\n            enterList.includes((e.target as any).name)\n          ) {\n            e.preventDefault();\n            handleOnSave(e);\n          }\n        }}\n        onSubmit={handleOnSave}\n        id=\"Form-Employee\"\n      >\n        <Box\n          sx={(theme) => ({\n            display: \"flex\",\n            columnGap: \"15px\",\n            flexDirection: \"row\",\n            marginBottom: \"10px\",\n            [theme.breakpoints.down(\"md\")]: {\n              flexDirection: \"column\",\n              rowGap: \"10px\",\n            },\n          })}\n        >\n          {loadingEmployeeId ? (\n            <LoadingButton loading={loadingEmployeeId} />\n          ) : (\n            <FormControl\n              fullWidth\n              variant=\"outlined\"\n              size=\"small\"\n              disabled={state.mode === \"\"}\n              sx={{\n                flex: 1,\n                \".MuiFormLabel-root\": {\n                  fontSize: \"14px\",\n                  background: \"white\",\n                  zIndex: 99,\n                  padding: \"0 3px\",\n                },\n                \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n              }}\n            >\n              <InputLabel htmlFor=\"employee-auto-generate-id-field\">\n                Employee ID\n              </InputLabel>\n              <OutlinedInput\n                sx={{\n                  height: \"27px\",\n                  fontSize: \"14px\",\n                }}\n                disabled={state.mode === \"\"}\n                fullWidth\n                label=\"Employee ID\"\n                name=\"entry_employee_id\"\n                value={state.entry_employee_id}\n                onChange={handleInputChange}\n                readOnly={true}\n                id=\"employee-auto-generate-id-field\"\n                endAdornment={\n                  <InputAdornment position=\"end\">\n                    <IconButton\n                      disabled={state.mode === \"\"}\n                      aria-label=\"search-client\"\n                      color=\"secondary\"\n                      edge=\"end\"\n                      onClick={() => {\n                        refetchEmployeeId();\n                      }}\n                    >\n                      <RestartAltIcon />\n                    </IconButton>\n                  </InputAdornment>\n                }\n              />\n            </FormControl>\n          )}\n          <TextField\n            type=\"text\"\n            name=\"firstname\"\n            label=\"First Name\"\n            size=\"small\"\n            required\n            onChange={handleInputChange}\n            disabled={state.mode === \"\"}\n            value={state.firstname}\n            InputProps={{\n              style: { height: \"27px\", fontSize: \"14px\" },\n            }}\n            sx={{\n              flex: 1,\n              height: \"27px\",\n              \".MuiFormLabel-root\": { fontSize: \"14px\" },\n              \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n            }}\n          />\n          <TextField\n            type=\"text\"\n            name=\"middlename\"\n            label=\"Middle Name\"\n            size=\"small\"\n            onChange={handleInputChange}\n            disabled={state.mode === \"\"}\n            value={state.middlename}\n            InputProps={{\n              style: { height: \"27px\", fontSize: \"14px\" },\n            }}\n            sx={{\n              flex: 1,\n              height: \"27px\",\n              \".MuiFormLabel-root\": { fontSize: \"14px\" },\n              \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n            }}\n          />\n          <TextField\n            type=\"text\"\n            name=\"lastname\"\n            label=\"Last Name\"\n            size=\"small\"\n            required\n            onChange={handleInputChange}\n            disabled={state.mode === \"\"}\n            value={state.lastname}\n            InputProps={{\n              style: { height: \"27px\", fontSize: \"14px\" },\n            }}\n            sx={{\n              flex: 1,\n              height: \"27px\",\n              \".MuiFormLabel-root\": { fontSize: \"14px\" },\n              \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n            }}\n          />\n          {subAccountLoading ? (\n            <LoadingButton loading={subAccountLoading} />\n          ) : (\n            <FormControl\n              fullWidth\n              required\n              size=\"small\"\n              sx={{\n                width: \"300px\",\n                \".MuiFormLabel-root\": {\n                  fontSize: \"14px\",\n                  background: \"white\",\n                  zIndex: 99,\n                  padding: \"0 3px\",\n                },\n                \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n              }}\n            >\n              <InputLabel id=\"Sub Account\">Sub Account</InputLabel>\n              <Select\n                sx={{\n                  height: \"27px\",\n                  fontSize: \"14px\",\n                }}\n                disabled={state.mode === \"\"}\n                value={state.sub_account}\n                onChange={handleInputChange}\n                labelId=\"Sub Account\"\n                label=\"Sub Account\"\n                name=\"sub_account\"\n              >\n                {[...subAccountData?.data.subAccount].map(\n                  (item: {\n                    Sub_Acct: string;\n                    NewShortName: string;\n                    Acronym: string;\n                  }) => {\n                    return (\n                      <MenuItem key={item.Sub_Acct} value={item.Sub_Acct}>\n                        {item.NewShortName}\n                      </MenuItem>\n                    );\n                  }\n                )}\n              </Select>\n            </FormControl>\n          )}\n        </Box>\n        <TextField\n          name=\"address\"\n          label=\"Address\"\n          minRows={10}\n          size=\"small\"\n          fullWidth\n          style={{ margin: \"10px 0px\" }}\n          onChange={handleInputChange}\n          disabled={state.mode === \"\"}\n          value={state.address}\n          InputProps={{\n            style: { height: \"27px\", fontSize: \"14px\" },\n          }}\n          sx={{\n            flex: 1,\n            height: \"27px\",\n            \".MuiFormLabel-root\": { fontSize: \"14px\" },\n            \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n          }}\n        />\n      </form>\n      <UpwardTable\n        ref={table}\n        rows={rows}\n        column={employeeColumn}\n        width={width}\n        height={height}\n        dataReadOnly={true}\n        onSelectionChange={(data) => {\n          if (data.length > 0) {\n            const rowSelected = data[0];\n            handleInputChange({ target: { value: \"edit\", name: \"mode\" } });\n            setNewStateValue(dispatch, rowSelected);\n          } else {\n            setNewStateValue(dispatch, initialState);\n            handleInputChange({ target: { value: \"\", name: \"mode\" } });\n          }\n        }}\n        onKeyDown={(row, key) => {\n          if (key === \"Delete\" || key === \"Backspace\") {\n            const rowSelected = row[0];\n            wait(350).then(() => {\n              codeCondfirmationAlert({\n                isUpdate: false,\n                cb: (userCodeConfirmation) => {\n                  mutateDelete({\n                    id: state.entry_employee_id,\n                    userCodeConfirmation,\n                  });\n                },\n              });\n            });\n            return;\n          }\n        }}\n        inputsearchselector=\".manok\"\n        isLoading={isLoading || loadingDelete || loadingEdit || loadingAdd}\n      />\n      {/* <div\n        ref={refParent}\n        style={{\n          marginTop: \"10px\",\n          width: \"100%\",\n          position: \"relative\",\n          flex: 1,\n        }}\n      >\n        <Box\n          style={{\n            height: `${refParent.current?.getBoundingClientRect().height}px`,\n            width: \"100%\",\n            overflowX: \"scroll\",\n            position: \"absolute\",\n          }}\n        >\n          <Table\n            ref={table}\n            isLoading={isLoading || loadingDelete || loadingEdit || loadingAdd}\n            columns={employeeColumn}\n            rows={rows}\n            table_id={\"entry_employee_id\"}\n            isSingleSelection={true}\n            isRowFreeze={false}\n            dataSelection={(selection, data, code) => {\n              const rowSelected = data.filter(\n                (item: any) => item.entry_employee_id === selection[0]\n              )[0];\n              if (rowSelected === undefined || rowSelected.length <= 0) {\n                setNewStateValue(dispatch, initialState);\n                handleInputChange({ target: { value: \"\", name: \"mode\" } });\n                return;\n              }\n              handleInputChange({ target: { value: \"edit\", name: \"mode\" } });\n              setNewStateValue(dispatch, rowSelected);\n            }}\n          />\n        </Box>\n      </div> */}\n    </div>\n  );\n}\n","import { AxiosInstance } from \"axios\";\nimport { User } from \"../../../components/AuthContext\";\n\nexport const clientColumn = [\n  { field: \"entry_client_id\", headerName: \"ID\", width: 130 },\n  { field: \"company\", headerName: \"Company\", width: 300 },\n  { field: \"firstname\", headerName: \"First Name\", width: 300 },\n  {\n    field: \"lastname\",\n    headerName: \"Last Name\",\n    width: 300,\n  },\n  {\n    field: \"middlename\",\n    headerName: \"Middle Name\",\n    width: 300,\n  },\n  {\n    field: \"email\",\n    headerName: \"Email\",\n    width: 200,\n  },\n  {\n    field: \"mobile\",\n    headerName: \"Mobile\",\n    width: 200,\n  },\n  {\n    field: \"sale_officer\",\n    headerName: \"Sale Officer\",\n    width: 200,\n  },\n  {\n    field: \"NewShortName\",\n    headerName: \"Sub Account\",\n    width: 130,\n  },\n  {\n    field: \"option\",\n    headerName: \"Option\",\n    width: 130,\n  },\n  {\n    field: \"createdAt\",\n    headerName: \"Created At\",\n    width: 130,\n  },\n  {\n    field: \"address\",\n    headerName: \"Address\",\n    width: 500,\n  },\n];\nexport const employeeColumn = [\n  { field: \"entry_employee_id\", headerName: \"ID\", width: 130 },\n  { field: \"firstname\", headerName: \"First Name\", width: 300 },\n  {\n    field: \"lastname\",\n    headerName: \"Last Name\",\n    width: 300,\n  },\n  {\n    field: \"middlename\",\n    headerName: \"Middle Name\",\n    width: 300,\n  },\n  {\n    field: \"NewShortName\",\n    headerName: \"Sub Account\",\n    width: 130,\n  },\n  {\n    field: \"createdAt\",\n    headerName: \"Created At\",\n    width: 130,\n  },\n  {\n    field: \"address\",\n    headerName: \"Address\",\n    width: 500,\n  },\n];\nexport const agentColumn = [\n  { field: \"entry_agent_id\", headerName: \"ID\", width: 130 },\n  { field: \"firstname\", headerName: \"First Name\", width: 300 },\n  {\n    field: \"lastname\",\n    headerName: \"Last Name\",\n    width: 300,\n  },\n  {\n    field: \"middlename\",\n    headerName: \"Middle Name\",\n    width: 300,\n  },\n  {\n    field: \"email\",\n    headerName: \"Email\",\n    width: 250,\n  },\n  {\n    field: \"mobile\",\n    headerName: \"Mobile\",\n    width: 130,\n  },\n  {\n    field: \"telephone\",\n    headerName: \"Telephone\",\n    width: 130,\n  },\n  {\n    field: \"createdAt\",\n    headerName: \"Created At\",\n    width: 130,\n  },\n  {\n    field: \"address\",\n    headerName: \"Address\",\n    width: 500,\n  },\n  {\n    field: \"sub_account\",\n    headerName: \"sub_account\",\n    width: 500,\n    hide: true,\n  },\n];\nexport const fixedAssetstColumn = [\n  { field: \"entry_fixed_assets_id\", headerName: \"ID\", width: 130 },\n  { field: \"fullname\", headerName: \"Full Name\", width: 300 },\n  { field: \"description\", headerName: \"Description\", width: 300 },\n  {\n    field: \"remarks\",\n    headerName: \"Remarks\",\n    width: 400,\n  },\n  {\n    field: \"createdAt\",\n    headerName: \"Created At\",\n    width: 200,\n  },\n];\nexport const supplierColumn = [\n  { field: \"entry_supplier_id\", headerName: \"ID\", width: 130 },\n  { field: \"company\", headerName: \"Company\", width: 300 },\n  { field: \"firstname\", headerName: \"First Name\", width: 300 },\n  {\n    field: \"lastname\",\n    headerName: \"Last Name\",\n    width: 300,\n  },\n  {\n    field: \"middlename\",\n    headerName: \"Middle Name\",\n    width: 300,\n  },\n  {\n    field: \"email\",\n    headerName: \"Email\",\n    width: 200,\n  },\n  {\n    field: \"mobile\",\n    headerName: \"Mobile\",\n    width: 200,\n  },\n  {\n    field: \"telephone\",\n    headerName: \"Telephone\",\n    width: 200,\n  },\n  {\n    field: \"tin_no\",\n    headerName: \"TIN NO.\",\n    width: 200,\n  },\n  {\n    field: \"option\",\n    headerName: \"Option\",\n    width: 200,\n  },\n  {\n    field: \"VAT_Type\",\n    headerName: \"Vat Type\",\n    width: 200,\n  },\n  {\n    field: \"createdAt\",\n    headerName: \"Created At\",\n    width: 200,\n  },\n  {\n    field: \"address\",\n    headerName: \"Address\",\n    width: 500,\n  },\n];\nexport const othersColumn = [\n  { field: \"entry_others_id\", headerName: \"ID\", width: 130 },\n  { field: \"description\", headerName: \"Description\", width: 490 },\n  { field: \"remarks\", headerName: \"Remarks\", width: 490 },\n  {\n    field: \"createdAt\",\n    headerName: \"Created At\",\n    width: 200,\n  },\n];\n\nexport const reducer = (state: any, action: any) => {\n  switch (action.type) {\n    case \"UPDATE_FIELD\":\n      return {\n        ...state,\n        [action.field]: action.value,\n      };\n    default:\n      return state;\n  }\n};\n\nexport async function searchEntry(\n  myAxios: AxiosInstance,\n  user: User | null,\n  entry: string,\n  search: string\n) {\n  return await myAxios.get(\n    `/reference/search-entry?entrySearch=${search}&entry=${entry}`,\n    {\n      headers: { Authorization: `Bearer ${user?.accessToken}` },\n    }\n  );\n}\n","const pink = {\n  50: '#fce4ec',\n  100: '#f8bbd0',\n  200: '#f48fb1',\n  300: '#f06292',\n  400: '#ec407a',\n  500: '#e91e63',\n  600: '#d81b60',\n  700: '#c2185b',\n  800: '#ad1457',\n  900: '#880e4f',\n  A100: '#ff80ab',\n  A200: '#ff4081',\n  A400: '#f50057',\n  A700: '#c51162'\n};\nexport default pink;"],"names":["initialState","firstname","lastname","middlename","address","sub_account","search","mode","entry_employee_id","Employee","useRef","_queryFn","_queryFn2","_queryFn3","_mutationFn","_mutationFn2","_mutationFn3","_useState","useState","_useState2","_slicedToArray","rows","setRows","_useReducer","useReducer","reducer","_useReducer2","state","dispatch","_useContext","useContext","AuthContext","myAxios","user","queryKey","queryClient","useQueryClient","table","_useQuery","useQuery","queryFn","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","get","headers","Authorization","concat","accessToken","abrupt","sent","stop","apply","arguments","onSuccess","res","_res$data","_res$data$defaultValu","type","field","value","data","defaultValue","Sub_Acct","subAccountData","subAccountLoading","isLoading","refetchSubAcct","refetch","_useQuery2","_callee2","_context2","post","sign","refetchOnWindowFocus","handleInputChange","target","generateID","name","loadingEmployeeId","refetchEmployeeId","_useQuery3","_callee3","_context3","entry","refetchEmployeeSearch","_useMutation","useMutation","mutationKey","mutationFn","_x","_callee4","variables","_context4","mutateAdd","mutate","loadingAdd","_useMutation2","_x2","_callee5","_context5","mutateEdit","loadingEdit","_useMutation3","_x3","_callee6","_context6","mutateDelete","loadingDelete","e","_e$target","includes","toUpperCase","success","invalidateQueries","resetModule","Swal","position","icon","title","message","showConfirmButton","timer","handleOnSave","length","preventDefault","codeCondfirmationAlert","isUpdate","cb","userCodeConfirmation","_objectSpread","saveCondfirmationAlert","isConfirm","_table$current","setNewStateValue","current","resetTableSelected","wait","then","width","window","innerWidth","height","innerHeight","_jsxs","style","display","flexDirection","flex","children","Box","sx","theme","_defineProperty","alignItems","columnGap","breakpoints","down","marginBottom","_jsx","marginTop","TextField","label","fullWidth","size","onChange","InputProps","fontSize","className","onKeyDown","code","document","querySelector","focus","top","Button","variant","startIcon","AddIcon","id","onClick","LoadingButton","color","SaveIcon","disabled","loading","CloseIcon","text","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","result","isConfirmed","backgroundColor","pink","DeleteIcon","onSubmit","rowGap","FormControl","background","zIndex","padding","InputLabel","htmlFor","OutlinedInput","readOnly","endAdornment","InputAdornment","IconButton","edge","RestartAltIcon","required","Select","labelId","_toConsumableArray","subAccount","map","item","MenuItem","NewShortName","minRows","margin","UpwardTable","ref","column","employeeColumn","dataReadOnly","onSelectionChange","rowSelected","row","key","inputsearchselector","clientColumn","headerName","agentColumn","hide","fixedAssetstColumn","supplierColumn","othersColumn","action","A100","A200","A400","A700"],"sourceRoot":""}