{"version":3,"file":"static/js/5145.cd824342.chunk.js","mappings":"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","sources":["components/ModalWithTable.tsx","components/Table.tsx","components/UpwardFields.tsx","components/UpwardTable.tsx","feautures/Admin/Task/Accounting/Deposit.tsx","hooks/useMultipleComponent.tsx","hooks/useQueryModalTable.tsx","lib/confirmationAlert.ts","../node_modules/@mui/icons-material/Add.js","../node_modules/@mui/icons-material/Autorenew.js","../node_modules/@mui/icons-material/Save.js","../node_modules/prop-types/factoryWithThrowingShims.js","../node_modules/prop-types/index.js","../node_modules/prop-types/lib/ReactPropTypesSecret.js","../node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js"],"sourcesContent":["import React from \"react\";\nimport {\n  GridRowSelectionModel,\n  GridRowParams,\n  GridCellParams,\n  GridTreeNode,\n} from \"@mui/x-data-grid\";\nimport { Modal, Box, Typography, IconButton, TextField } from \"@mui/material\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport Table from \"./Table\";\n\ninterface ModalWithTableParams {\n  height: number;\n  isLoading: boolean;\n  queryKey: string;\n  columns: Array<any>;\n  onSelectionChange: (rowSelectionModel: Array<any>, data: Array<any>) => void;\n  setRows: React.Dispatch<React.SetStateAction<GridRowSelectionModel>>;\n  rows: GridRowSelectionModel;\n  id: string;\n  onCloseModal: () => void;\n  onClickCloseIcon: () => void;\n  showModal: boolean;\n  searchOnChange:\n  | React.ChangeEventHandler<HTMLInputElement | HTMLTextAreaElement>\n  | undefined;\n  title?: string;\n  searchRef?: React.RefObject<HTMLInputElement>;\n  onCellKeyDown?: any;\n  onSearchKeyEnter?: (search: string) => void;\n  isRowSelectable?: ((params: GridRowParams<any>) => boolean) | undefined;\n  getCellClassName?:\n  | ((params: GridCellParams<any, any, any, GridTreeNode>) => string)\n  | undefined;\n}\n\nconst style = {\n  position: \"absolute\" as \"absolute\",\n  top: \"50%\",\n  left: \"50%\",\n  transform: \"translate(-50%, -50%)\",\n  width: \"70%\",\n  bgcolor: \"background.paper\",\n  boxShadow: 24,\n  p: 4,\n  heigth: \"auto\",\n};\n\nexport default function ModalWithTable({\n  height,\n  isLoading,\n  queryKey,\n  columns,\n  onSelectionChange,\n  setRows,\n  rows,\n  id,\n  onCloseModal,\n  showModal,\n  onClickCloseIcon,\n  searchOnChange,\n  title = \"\",\n  searchRef,\n  onCellKeyDown,\n  onSearchKeyEnter = () => { },\n  isRowSelectable,\n  getCellClassName,\n}: ModalWithTableParams) {\n  const mainId = generateRandomClass();\n\n  return (\n    <Modal\n      open={showModal}\n      onClose={onCloseModal}\n      aria-labelledby=\"modal-modal-title\"\n      aria-describedby=\"modal-modal-description\"\n    >\n      <Box sx={style}>\n        <Typography id=\"modal-modal-title\" variant=\"h6\" component=\"h2\" mb={2}>\n          {title}\n        </Typography>\n        <TextField\n          size=\"small\"\n          label=\"Search\"\n          sx={{ marginBottom: \"10px\" }}\n          fullWidth\n          onChange={searchOnChange}\n          InputProps={{\n            inputRef: searchRef,\n          }}\n          onKeyDown={(e) => {\n            if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n              e.preventDefault();\n              onSearchKeyEnter(searchRef?.current?.value as string);\n            }\n            keyBoardSelectionTable(\n              e,\n              mainId,\n              searchRef?.current as HTMLInputElement\n            );\n          }}\n        />\n        <div\n          className={`${mainId} main-table-selection-container`}\n          style={{ position: \"relative\", height: `${height + 20}px` }}\n        >\n          <Table\n            isSingleSelection={true}\n            isRowFreeze={false}\n            columns={columns}\n            isLoading={isLoading}\n            dataSelection={(selection, data, code) => {\n              onSelectionChange(selection, data);\n            }}\n            table_id={id}\n            rows={rows}\n            isRowSelectable={isRowSelectable}\n            getCellClassName={getCellClassName}\n          />\n        </div>\n\n        <div style={{ position: \"absolute\", top: \"10px\", right: \"10px\" }}>\n          <IconButton\n            aria-label=\"search-client\"\n            color=\"secondary\"\n            onClick={onClickCloseIcon}\n          >\n            <CloseIcon />\n          </IconButton>\n        </div>\n      </Box>\n    </Modal>\n  );\n}\n\nexport function generateRandomClass() {\n  const randomNumber = Math.floor(Math.random() * 10000);\n  const randomClass = \"main-\" + randomNumber;\n  return randomClass;\n}\n\nfunction keyBoardUpDown(className: string, el: HTMLElement) {\n  const firstRowParent = document.querySelector(\n    `.${className} .MuiDataGrid-row`\n  );\n  const firstInput = firstRowParent?.querySelector(\"input\");\n  firstInput?.focus();\n  const event = new MouseEvent(\"mouseenter\", {\n    bubbles: true,\n    cancelable: true,\n    view: window,\n  });\n  firstRowParent?.dispatchEvent(event);\n  firstInput?.addEventListener(\"keydown\", (es: any) => {\n    if (es.key === \"ArrowUp\") {\n      es.preventDefault();\n      el.focus();\n    }\n    if (es.key === \"ArrowUp\") {\n      firstRowParent?.classList.remove(\"hover-keyboard\");\n    }\n  });\n}\n\nexport function keyBoardSelectionTable(\n  e: React.KeyboardEvent<HTMLDivElement>,\n  className: string,\n  el: HTMLElement\n) {\n  const mainId = className;\n  if (e.code === \"ArrowDown\") {\n    const rows = document.querySelectorAll(`.${mainId} .MuiDataGrid-row`);\n    e.preventDefault();\n    rows[0]?.classList.add(\"hover-keyboard\");\n    keyBoardUpDown(className, el);\n    rows.forEach((el, idx) => {\n      el.addEventListener(\"keydown\", (es: any) => {\n        if (es.key === \"ArrowUp\") {\n          if (idx <= 0) {\n            return;\n          }\n\n          es.preventDefault();\n          rows[idx]?.classList.remove(\"hover-keyboard\");\n          rows[idx - 1]?.classList.add(\"hover-keyboard\");\n          return;\n        }\n        if (es.key === \"ArrowDown\") {\n          es.preventDefault();\n          if (idx >= rows.length - 1) {\n            return;\n          }\n          rows[idx]?.classList.remove(\"hover-keyboard\");\n          rows[idx + 1]?.classList.add(\"hover-keyboard\");\n        }\n      });\n    });\n  }\n}\n","import {\n  useState,\n  useContext,\n  createContext,\n  ReactElement,\n  forwardRef,\n  useImperativeHandle,\n} from \"react\";\nimport { Box, LinearProgress } from \"@mui/material\";\nimport {\n  DataGrid,\n  GridSlotsComponentsProps,\n  gridPageCountSelector,\n  GridPagination,\n  useGridApiContext,\n  useGridSelector,\n  GridRowSelectionModel,\n  GridColDef,\n  GridRowParams,\n  GridCellParams,\n  GridTreeNode,\n} from \"@mui/x-data-grid\";\nimport { TablePaginationProps } from \"@mui/material/TablePagination\";\nimport MuiPagination from \"@mui/material/Pagination\";\n\ninterface TableProps {\n  isLoading: boolean;\n  columns: Array<any>;\n  rows: Array<any>;\n  table_id: string;\n  isSingleSelection: boolean;\n  isRowFreeze: boolean;\n  dataSelection?: (selection: any, data: any, code: string | null) => void;\n  CustomFooterComponent?: any;\n  isRowSelectable?: ((params: GridRowParams<any>) => boolean) | undefined;\n  getCellClassName?:\n    | ((params: GridCellParams<any, any, any, GridTreeNode>) => string)\n    | undefined;\n  footerChildren?: (\n    rowSelectionModel: GridRowSelectionModel,\n    rows: Array<any>\n  ) => ReactElement;\n  footerPaginationPosition?: string;\n  showFooterSelectedCount?: boolean;\n  checkboxSelection?: boolean | undefined;\n}\n\nconst TableContext = createContext<{\n  rowSelectionModel: GridRowSelectionModel;\n  rows: Array<any>;\n  footerPaginationPosition?: string;\n  showFooterSelectedCount?: boolean;\n  footerChildren: (\n    rowSelectionModel: GridRowSelectionModel,\n    rows: Array<any>\n  ) => ReactElement;\n}>({\n  rows: [],\n  rowSelectionModel: [],\n  footerChildren: () => <div></div>,\n  footerPaginationPosition: \"right-left\",\n  showFooterSelectedCount: true,\n});\nconst Table = forwardRef(\n  (\n    {\n      isLoading,\n      columns,\n      rows,\n      table_id,\n      isSingleSelection,\n      isRowFreeze,\n      dataSelection,\n      CustomFooterComponent = DefaultooterComponent,\n      isRowSelectable,\n      getCellClassName,\n      checkboxSelection = true,\n      footerChildren = (\n        rowSelectionModel: GridRowSelectionModel,\n        rows: Array<any>\n      ) => <div></div>,\n      footerPaginationPosition = \"right-left\",\n      showFooterSelectedCount = true,\n    }: TableProps,\n    ref\n  ) => {\n    const [selectedRows, setSelectedRows] = useState<any>([]);\n\n    useImperativeHandle(ref, () => ({\n      removeSelection: () => {\n        setSelectedRows([]);\n      },\n      getSelectedRows: () => {\n        return rows.filter((item: any) =>\n          selectedRows?.includes(item[table_id])\n        );\n      },\n      setSelectedRows: (data: Array<any>) => {\n        setSelectedRows(data);\n      },\n    }));\n\n    function onSelectionChange(selection: any, data: any, code: string | null) {\n      if (dataSelection) {\n        dataSelection(selection, data, code);\n      }\n    }\n    let freezeArray: Array<any> = [];\n\n    return (\n      <TableContext.Provider\n        value={{\n          showFooterSelectedCount,\n          footerPaginationPosition,\n          rowSelectionModel: selectedRows,\n          rows,\n          footerChildren,\n        }}\n      >\n        <DataGrid\n          slots={{\n            loadingOverlay: LinearProgress,\n            footer: CustomFooterComponent,\n          }}\n          initialState={{\n            pagination: { paginationModel: { pageSize: 35 } },\n          }}\n          loading={isLoading}\n          getRowId={(row) => row[table_id]}\n          columns={columns.filter((col: any) => !col.hide) as GridColDef<any>[]}\n          rows={rows}\n          showCellVerticalBorder={true}\n          showColumnVerticalBorder={true}\n          checkboxSelection={checkboxSelection}\n          rowSelectionModel={selectedRows}\n          rowHeight={25}\n          columnHeaderHeight={35}\n          pageSizeOptions={[10, 20, 35, 50, 75, 100]}\n          sx={{\n            \"& .cash\": {\n              color: \"#ec4899\",\n            },\n            \"& .check\": {\n              color: \"#0891b2\",\n            },\n            \"& .approved\": {\n              color: \"green\",\n            },\n            \"& .pending\": {\n              color: \"orange\",\n            },\n            \"& .disapproved\": {\n              color: \"red\",\n            },\n            \"& .normal\": {\n              color: \"red\",\n            },\n            \"& .MuiDataGrid-row.Mui-selected:hover\": {\n              color: \"black\",\n              \"& .MuiSvgIcon-root \": {\n                fill: \"#3b82f6\",\n              },\n            },\n            \"& .hover-keyboard\": {\n              background: \"#2563eb\",\n              color: \"white\",\n              \"& .MuiSvgIcon-root \": {\n                fill: \"white\",\n              },\n            },\n            \"& .MuiDataGrid-row:hover\": {\n              background: \"#2563eb\",\n              color: \"white\",\n              \"& .MuiSvgIcon-root \": {\n                fill: \"white\",\n              },\n            },\n            \"& .MuiDataGrid-row.hover\": {\n              background: \"#2563eb\",\n              color: \"white\",\n              \"& .MuiSvgIcon-root \": {\n                fill: \"white\",\n              },\n            },\n            \"& .MuiTablePagination-root p \": {\n              padding: \"0 !important\",\n            },\n\n            ...{\n              \"& .MuiDataGrid-columnHeaders\": {\n                background: \"#64748b\",\n                color: \"white\",\n                fontSize: \"14px\",\n                // borderBottomColor: \"#38bdf8\",\n              },\n              \"& .MuiDataGrid-columnHeaderCheckbox .MuiDataGrid-columnHeaderTitleContainer .MuiSvgIcon-root \":\n                {\n                  display: isSingleSelection || isRowFreeze ? \"none\" : \"block\",\n                  fill: \"white\",\n                },\n              \"& .MuiDataGrid-columnHeaderCheckbox .MuiDataGrid-columnHeaderTitleContainer input \":\n                {\n                  display: isSingleSelection || isRowFreeze ? \"none\" : \"block\",\n                },\n            },\n            ...{\n              fontSize: 13,\n              fontWeight: 500,\n              \"& .MuiDataGrid-checkboxInput\": {\n                height: \"27px\",\n                width: \"27px\",\n              },\n              \"& .MuiDataGrid-checkboxInput svg\": {\n                height: \"20px\",\n                width: \"20px\",\n              },\n            },\n          }}\n          // onRowDoubleClick={(e, r) => {\n          //   console.log(e, r);\n          // }}\n\n          onRowSelectionModelChange={(selection) => {\n            if (isRowFreeze) {\n              if (selection.length <= 0) return;\n              freezeArray = selection;\n              if (selectedRows.includes(freezeArray[freezeArray.length - 1]))\n                return;\n\n              setSelectedRows(selection);\n\n              onSelectionChange([selection[selection.length - 1]], rows, null);\n              return;\n            }\n\n            if (!isRowFreeze && isSingleSelection) {\n              if (selectedRows && selectedRows?.length > 0) {\n                const selectionSet = new Set(selectedRows);\n                setSelectedRows(\n                  selection.filter((s: any) => !selectionSet.has(s))\n                );\n              } else {\n                setSelectedRows(selection);\n              }\n            } else {\n              setSelectedRows(selection);\n            }\n\n            onSelectionChange([selection[selection.length - 1]], rows, null);\n          }}\n          onCellKeyDown={(__: any, key: any) => {\n            const keyFinding = [\"NumpadEnter\", \"Enter\", \"Delete\", \"Backspace\"];\n            if (!keyFinding.includes(key.code)) {\n              return;\n            }\n            key.preventDefault();\n            if (key.code === \"Enter\" || key.code === \"NumpadEnter\") {\n              if (isSingleSelection && !isRowFreeze) {\n                return setSelectedRows((data: any) => {\n                  if (data && data.length > 0 && data[0] === __.rowNode.id) {\n                    onSelectionChange([], rows, key.code);\n                    return [];\n                  }\n                  onSelectionChange([__.rowNode.id], rows, key.code);\n                  return [__.rowNode.id];\n                });\n              } else {\n                setSelectedRows((data: any) => {\n                  if (\n                    data &&\n                    !isRowFreeze &&\n                    data.length > 0 &&\n                    data.includes(__.rowNode.id)\n                  ) {\n                    data = data.filter((item: any) => item !== __.rowNode.id);\n                    onSelectionChange([], rows, key.code);\n                    return data;\n                  }\n                  if (\n                    data &&\n                    isRowFreeze &&\n                    data.length > 0 &&\n                    data.includes(__.rowNode.id)\n                  ) {\n                    return data;\n                  }\n                  onSelectionChange([__.rowNode.id], rows, key.code);\n                  return [...data, __.rowNode.id];\n                });\n              }\n              return;\n            }\n            if (key.code === \"Delete\" || key.code === \"Backspace\") {\n              setSelectedRows([__.rowNode.id]);\n              return onSelectionChange([__.rowNode.id], rows, key.code);\n            }\n          }}\n          disableVirtualization\n          isRowSelectable={isRowSelectable}\n          getCellClassName={getCellClassName}\n        />\n      </TableContext.Provider>\n    );\n  }\n);\n\nexport default Table;\nfunction Pagination({\n  page,\n  onPageChange,\n  className,\n}: Pick<TablePaginationProps, \"page\" | \"onPageChange\" | \"className\">) {\n  const apiRef = useGridApiContext();\n  const pageCount = useGridSelector(apiRef, gridPageCountSelector);\n\n  return (\n    <MuiPagination\n      variant=\"outlined\"\n      color=\"primary\"\n      className={className}\n      count={pageCount}\n      page={page + 1}\n      onChange={(event, newPage) => {\n        onPageChange(event as any, newPage - 1);\n      }}\n    />\n  );\n}\n\nfunction CustomPagination(props: any) {\n  return <GridPagination ActionsComponent={Pagination} {...props} />;\n}\nfunction DefaultooterComponent(\n  props: NonNullable<GridSlotsComponentsProps[\"footer\"]>\n) {\n  const {\n    rowSelectionModel,\n    showFooterSelectedCount,\n    footerPaginationPosition,\n    footerChildren,\n    rows,\n  } = useContext(TableContext);\n  return (\n    <Box\n      sx={{\n        columnGap: \"50px\",\n        display: \"flex\",\n        width: \"100%\",\n        justifyContent: \"space-between\",\n        px: 3,\n        alignItems: \"center\",\n        flexDirection:\n          footerPaginationPosition === \"right-left\" ? \"row-reverse\" : \"row\",\n      }}\n    >\n      <CustomPagination {...props} />\n      <Box\n        sx={{\n          display: \"flex\",\n          justifyContent:\n            footerPaginationPosition === \"right-left\"\n              ? \"flex-start\"\n              : \"flex-end\",\n          flex: 1,\n          alignItems: \"center\",\n        }}\n      >\n        {showFooterSelectedCount && (\n          <div>Selected:{rowSelectionModel?.length}</div>\n        )}\n        <div>{footerChildren(rowSelectionModel, rows)}</div>\n      </Box>\n    </Box>\n  );\n}\n","import { HtmlHTMLAttributes, InputHTMLAttributes, useId, ReactNode } from \"react\";\nimport \"../style/design.css\";\n\n\ninterface TextInputProps {\n  input: InputHTMLAttributes<HTMLInputElement>;\n  label: HtmlHTMLAttributes<HTMLLabelElement>;\n  inputRef?: React.RefObject<HTMLInputElement>;\n  icon?: ReactNode; // New prop for the icon\n  iconPosition?: 'start' | 'end'; // New prop to choose icon position\n  onIconClick?: React.MouseEventHandler<HTMLDivElement> | undefined,\n  disableIcon?:boolean\n}\n\nexport function TextInput({\n  input,\n  label,\n  inputRef,\n  icon,\n  iconPosition = 'end', // Default position is 'end'\n  disableIcon = false,\n  onIconClick = (e) => { }\n}: TextInputProps) {\n  const id = useId();\n\n  return (\n    <div\n      style={{\n        display: 'flex',\n        alignItems: 'center',\n        position: 'relative', // Enable absolute positioning for icon\n      }}\n    >\n      <label {...label} htmlFor={id}>\n        {label.title}\n      </label>\n      {icon && iconPosition === 'start' && (\n        <div style={{ position: 'absolute', left: '8px', zIndex: 1 }}>\n          {icon}\n        </div>\n      )}\n      <input\n        ref={inputRef}\n        id={id}\n        {...input}\n        style={{\n          height: '100%',\n          ...input.style,\n        }}\n      />\n      {icon && iconPosition === 'end' && (\n        <div onClick={onIconClick}\n          style={{\n            position: 'absolute',\n            right: '2px',\n            top: \"50%\",\n            transform: \"translateY(-50%)\",\n            zIndex: 1,\n            cursor: disableIcon ? \"none\" : \"pointer\",\n            display: \"flex\",\n            alignItems: \"center\",\n            justifyContent: \"center\",\n            background:\"white\",\n            pointerEvents: disableIcon ? \"none\" : \"auto\"\n          }}>\n          {icon}\n        </div>\n\n      )\n      }\n    </div >\n  );\n}\n\n\nexport function SelectInput({\n  select,\n  label,\n  selectRef,\n  datasource = [],\n  values = \"\",\n  display = \"\",\n}: {\n  selectRef?: React.RefObject<HTMLSelectElement>;\n  labelRef?: React.RefObject<HTMLLabelElement>;\n  select: InputHTMLAttributes<HTMLSelectElement>;\n  label: HtmlHTMLAttributes<HTMLLabelElement>;\n  datasource: Array<any>;\n  values: string;\n  display: string;\n}) {\n  const id = useId();\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        height: \"18px\",\n        alignItems: \"center\",\n      }}\n    >\n      <label {...label} htmlFor={id}>\n        {label.title}\n      </label>\n      <select\n        {...select}\n        ref={selectRef}\n        className=\"select\"\n        style={{\n          height: \"18px\",\n          ...select.style,\n        }}\n      >\n        {datasource.map((itm, idx) => {\n          return (\n            <option key={idx} value={itm[values]}>\n              {itm[display]}\n            </option>\n          );\n        })}\n      </select>\n    </div>\n  );\n}\n\nexport function ButtonField({\n  buttonRetRef,\n  button,\n  tooltipText = \"\",\n  children,\n  disabled = false,\n}: {\n  buttonRetRef?: React.RefObject<HTMLButtonElement>;\n  button: HtmlHTMLAttributes<HTMLButtonElement>;\n  tooltipText: string;\n  children: React.ReactNode;\n  disabled?: boolean;\n}) {\n  return (\n    <div className=\"tooltip\">\n      <button\n        disabled={disabled}\n        {...button}\n        ref={buttonRetRef}\n        style={{ ...button.style, background: !disabled ? \"transparent\" : \"#f1f1f1\" }}\n        className=\"tooltip-button\"\n      >\n        {children}\n      </button>\n      {!disabled && <span className=\"tooltip-text\">{tooltipText}</span>}\n    </div>\n  );\n}\n","\n\nimport React, {\n  useState,\n  useRef,\n  useEffect,\n  forwardRef,\n  useImperativeHandle,\n} from \"react\";\n\nimport \"../style/datagridview.css\";\nimport { Pagination } from \"@mui/material\";\n\ninterface UpwardTablePropsType {\n  rows: Array<any>;\n  column: Array<any>;\n  width: number;\n  height: number;\n  dataReadOnly: boolean;\n  onSelectionChange?: (row: Array<any>, rowIndex: number) => void;\n  onKeyDown?: (row: Array<any>, key: string) => void;\n  isMultipleSelect?: boolean;\n  freeze?: boolean;\n  inputsearchselector?: string;\n  isRowSelectable?: boolean;\n  unSelectable?: (row: any) => boolean;\n  isLoading?: boolean\n}\n\nconst UpwardTable = forwardRef(\n  (\n    {\n      rows,\n      column,\n      width,\n      height,\n      dataReadOnly,\n      onSelectionChange = () => { },\n      isMultipleSelect = false,\n      freeze = false,\n      onKeyDown,\n      inputsearchselector = \".search-input-up-on-key-down\",\n      isRowSelectable = true,\n      unSelectable = () => false,\n      isLoading\n    }: UpwardTablePropsType,\n    UpwardTableRef\n  ) => {\n    const [pages, setPages] = useState<Array<any>>([])\n    const [pageNumber, setPageNumber] = useState(0)\n    const onSelectionChangeRef = useRef(onSelectionChange);\n    const onKeyDownRef = useRef(onKeyDown);\n    const [columns, setColumns] = useState(column.filter((itm) => !itm.hide));\n    const [hoveredColumn, setHoveredColumn] = useState(null);\n    const [selectedRows, setSelectedRows] = useState<Array<number>>([0]);\n    const [lastSelectedRowIndex, setLastSelectedRowIndex] = useState(0);\n    const [selectedItems, setSelectedItems] = useState<Array<number>>([]);\n    const divRef = useRef<HTMLDivElement>(null);\n    const [_clickTimeout, _setClickTimeout] = useState(null);\n\n\n    useEffect(() => {\n      const _pages = formatArrayIntoChunks(rows, 100)\n      setPages(_pages)\n    }, [rows])\n\n    const startResize = (index: any, e: any) => {\n      e.preventDefault();\n      e.stopPropagation();\n\n      const startX = e.clientX;\n      const startWidth = columns[index].width;\n\n      const doDrag = (moveEvent: any) => {\n        const newWidth = startWidth + (moveEvent.clientX - startX);\n        const updatedColumns = [...columns];\n        updatedColumns[index].width = newWidth > 50 ? newWidth : 50; // Set minimum column width\n        setColumns(updatedColumns);\n      };\n\n      const stopDrag = () => {\n        document.removeEventListener(\"mousemove\", doDrag);\n        document.removeEventListener(\"mouseup\", stopDrag);\n      };\n\n      document.addEventListener(\"mousemove\", doDrag);\n      document.addEventListener(\"mouseup\", stopDrag);\n    };\n    const handleMouseEnter = (index: any) => {\n      setHoveredColumn(index); // Set the hovered column index\n    };\n    const handleMouseLeave = () => {\n      setHoveredColumn(null); // Reset hovered column index\n    };\n    const handleRowClick = (\n      rowIndex: any,\n      event: React.MouseEvent<HTMLDivElement, MouseEvent>\n    ) => {\n      function getIndexAndData(selectedRowData: Array<any>) {\n        const filterSelectrowData = selectedRowData.map((d, idx) => {\n          if (!unSelectable(d)) {\n            return { idx, data: d };\n          }\n          return null;\n        });\n        const removeNullValue = filterSelectrowData.filter((d) => d !== null);\n        const data = removeNullValue.map((itm: any) => itm.data);\n        const newSelectedRowsFiltered = removeNullValue.map(\n          (itm: any) => itm.idx\n        );\n        return { newSelectedRowsFiltered, data };\n      }\n\n      if (!isMultipleSelect) {\n        // Single selection mode\n        setSelectedRows([rowIndex]);\n      } else {\n        // Multiple selection mode\n        if (event.shiftKey && lastSelectedRowIndex !== null) {\n          // Shift + Click: Select range between last clicked row and current clicked row\n          const rangeStart = Math.min(lastSelectedRowIndex, rowIndex);\n          const rangeEnd = Math.max(lastSelectedRowIndex, rowIndex);\n          const newSelectedRows: Array<number> = [];\n          for (let i = rangeStart; i <= rangeEnd; i++) {\n            if (!selectedRows.includes(i)) {\n              newSelectedRows.push(i);\n            }\n          }\n\n          let selectedItemsParams: Array<number> = [\n            ...selectedItems,\n            ...newSelectedRows,\n          ];\n\n          setSelectedRows([...selectedRows, ...newSelectedRows]);\n          const selectedRowData = rows.filter((d, idx) =>\n            selectedItemsParams.includes(idx)\n          );\n          const { newSelectedRowsFiltered, data } =\n            getIndexAndData(selectedRowData);\n\n          setSelectedItems(newSelectedRowsFiltered);\n          // onSelectionChangeRef.current(data, rowIndex);\n        } else if (event.ctrlKey || event.metaKey) {\n          // Ctrl (or Cmd on macOS) + Click: Toggle row selection\n          if (selectedRows.includes(rowIndex) && !freeze) {\n            setSelectedRows(selectedRows.filter((i) => i !== rowIndex));\n            setSelectedItems((d) => {\n              d = d.filter((i) => i !== rowIndex);\n              return d;\n            });\n            let selectedItemsParams: Array<number> = selectedItems.filter(\n              (i) => i !== rowIndex\n            );\n            const selectedRowData = rows.filter((d, idx) =>\n              selectedItemsParams.includes(idx)\n            );\n\n            setSelectedItems(selectedItemsParams);\n            // onSelectionChangeRef.current(selectedRowData, rowIndex);\n          } else {\n            setSelectedRows([...selectedRows, rowIndex]);\n            setSelectedItems((d) => {\n              d.push(rowIndex);\n              return d;\n            });\n            let selectedItemsParams: Array<number> = [\n              ...selectedItems,\n              rowIndex,\n            ];\n\n            const selectedRowData = rows.filter((d, idx) =>\n              selectedItemsParams.includes(idx)\n            );\n\n            setSelectedItems(selectedItemsParams);\n            // onSelectionChangeRef.current(selectedRowData, rowIndex);\n          }\n        } else {\n          // Regular click in multiple selection mode: Single click to select a row\n          setSelectedRows([rowIndex]);\n        }\n      }\n      setLastSelectedRowIndex(rowIndex); // Update the last selected index\n    };\n    const handleRowDoubleClick = (\n      rowIndex: any,\n      event: React.MouseEvent<HTMLDivElement, MouseEvent>\n    ) => {\n      const row = rows[rowIndex];\n      if (unSelectable(row)) return;\n      if (!isRowSelectable) return;\n\n\n      let selectedItemsParams: Array<number> = [];\n      if (isMultipleSelect) {\n        selectedItemsParams = [...selectedItems, ...selectedRows];\n      } else {\n        selectedItemsParams = [rowIndex];\n      }\n\n\n      if (selectedItems.includes(rowIndex) && !freeze) {\n        selectedItemsParams = selectedItems.filter((i) => i !== rowIndex);\n        setSelectedItems(selectedItemsParams);\n        onSelectionChangeRef.current([], rowIndex);\n        return;\n      }\n\n      setSelectedItems(selectedItemsParams);\n      onSelectionChangeRef.current([row], rowIndex);\n    };\n    const handleKeyDown = (e: any) => {\n      e.stopPropagation()\n\n      if (e.key === \"ArrowDown\") {\n        e.preventDefault();\n        setSelectedRows((prevIndex: any) => {\n          if (prevIndex[prevIndex.length - 1] === null) return [0];\n          if (prevIndex[prevIndex.length - 1] >= rows.length - 1) {\n            return [rows.length - 1];\n          }\n          const newPrevIndex = prevIndex[prevIndex.length - 1] + 1;\n          const row = document.querySelector(`.row-${newPrevIndex}`);\n          row?.querySelector(\"input\")?.focus();\n\n          row?.scrollIntoView({ block: \"end\", behavior: \"smooth\" });\n          return [newPrevIndex];\n        });\n      } else if (e.key === \"ArrowUp\") {\n        e.preventDefault();\n\n        if (selectedRows[selectedRows.length - 1] === 0) {\n          const input = document.querySelector(\n            inputsearchselector\n          ) as HTMLInputElement;\n          if (input && input.tagName === \"INPUT\") {\n            input?.focus();\n          } else if (input && input.tagName === \"DIV\") {\n            const divInput = document.querySelector(\n              `${inputsearchselector} input`\n            ) as HTMLInputElement;\n\n            divInput?.focus();\n          }\n        }\n\n        setSelectedRows((prevIndex: any) => {\n          if (prevIndex[prevIndex.length - 1] === 0) return [0];\n          const newPrevIndex = prevIndex[prevIndex.length - 1] - 1;\n          const row = document.querySelector(`.row-${newPrevIndex}`);\n\n          row?.scrollIntoView({ block: \"end\", behavior: \"smooth\" });\n          row?.querySelector(\"input\")?.focus();\n          return [newPrevIndex];\n        });\n      }\n\n    };\n    const handleRowKeyDown = (e: any) => {\n      e.stopPropagation()\n\n      if (e.key === \"Enter\" || e.key === \"NumpadEnter\") {\n        e.preventDefault();\n        if (!isRowSelectable) return;\n\n        let selectedItemsParams: Array<number> = [];\n        const rowIndex = selectedRows[selectedRows.length - 1];\n        if (isMultipleSelect) {\n          selectedItemsParams = [...selectedItems, ...selectedRows];\n        } else {\n          selectedItemsParams = [rowIndex];\n        }\n        const row = rows[selectedItemsParams[selectedItemsParams.length - 1]];\n        if (unSelectable(row)) {\n          return;\n        }\n\n        if (selectedItems.includes(rowIndex) && !freeze) {\n          selectedItemsParams = selectedItems.filter((i) => i !== rowIndex);\n          setSelectedItems(selectedItemsParams);\n          onSelectionChangeRef.current([], rowIndex);\n          return;\n        }\n\n        setSelectedItems(selectedItemsParams);\n        onSelectionChangeRef.current([row], rowIndex);\n      } else if (e.key === \"Delete\" || e.key === \"Backspace\") {\n        if (!isRowSelectable) return;\n\n        const selectedRowData = rows.filter((d, idx) =>\n          selectedRows.includes(idx)\n        );\n\n        if (onKeyDownRef?.current) {\n          onKeyDownRef?.current(selectedRowData, e.key);\n        }\n      }\n    }\n    useImperativeHandle(UpwardTableRef, () => ({\n      resetTableSelected: () => {\n        setSelectedRows([0]);\n        setLastSelectedRowIndex(0);\n        setSelectedItems([]);\n        if (rows.length > 0) {\n          const row = document.querySelector(`.row-${0}`);\n          row?.scrollIntoView({ block: \"end\", behavior: \"smooth\" });\n        }\n      },\n      getSelectedRows: () => {\n        return rows.filter((d, idx) => selectedItems.includes(idx));\n      },\n      setSelectRows: (selectRows: any) => {\n        setSelectedItems(selectRows)\n      }\n    }));\n\n\n\n\n\n    return (\n      <div\n        style={{\n          display: \"flex\",\n          justifyContent: \"center\",\n        }}\n        onKeyDown={handleKeyDown}\n      >\n        <div>\n          <div className=\"table-frame-color\">\n            <div\n              style={{\n                display: \"flex\",\n                flexDirection: \"column\",\n                // width: `${width - 10}px        `,\n                width:\"100%\",\n                height: `${height - 135}px`,\n                minHeight: \"270px\"\n              }}\n              className=\"table-frame\"\n            >\n              <div className=\"table-panel\">\n                <div ref={divRef} className={`grid-container `} tabIndex={-1}>\n                  <div\n                    className=\"grid-row grid-header\"\n                    style={{\n                      position: \"sticky\",\n                      zIndex: \"10\",\n                      top: \"-1px\",\n                      background: \"white\",\n                    }}\n                  >\n                    {columns.map((col: any, index: number) => (\n                      <div\n                        key={index}\n                        className={`grid-cell header-cell ${hoveredColumn === index ? `highlight-column` : \"\"\n                          }`} // Add the class if hovered\n                        style={{ width: col.width, height: \"20px\", }}\n                      >\n                        <input\n                          style={{ fontWeight: \"bold\" }}\n                          defaultValue={col.headerName}\n                          readOnly\n                          onChange={(e) => { }}\n                        />\n                        <div\n                          className=\"resize-handle\"\n                          onMouseDown={(e) => startResize(index, e)}\n                          onMouseEnter={(e) => {\n                            e.preventDefault();\n                            handleMouseEnter(index);\n                          }} // On hover\n                          onMouseLeave={(e) => {\n                            e.preventDefault();\n                            handleMouseLeave();\n                          }} // On mouse leave\n                        />\n                      </div>\n                    ))}\n                  </div>\n                  {pages[pageNumber]?.map((row: any, rowIndex: any) => (\n                    <div\n                      className={`grid-row row-${rowIndex}`} // Highlight selected row\n                      key={rowIndex}\n                      onClick={(e) => handleRowClick(rowIndex, e)}\n                      onDoubleClick={(e) => {\n                        e.stopPropagation()\n\n                        if (_clickTimeout) {\n                          clearTimeout(_clickTimeout);\n                          _setClickTimeout(null);\n                        }\n\n                        const timeoutId: any = setTimeout(() => {\n                          handleRowDoubleClick(rowIndex, e)\n                        }, 300);\n\n                        _setClickTimeout(timeoutId);\n\n\n\n                      }}\n                      onKeyDown={(e) => {\n\n                        e.stopPropagation()\n\n                        if (_clickTimeout) {\n                          clearTimeout(_clickTimeout);\n                          _setClickTimeout(null);\n                        }\n\n                        const timeoutId: any = setTimeout(() => {\n                          handleRowKeyDown(e)\n                        }, 300);\n\n                        _setClickTimeout(timeoutId);\n\n\n                      }}\n                    >\n                      {columns.map((col: any, colIndex: number) => (\n                        <div\n                          key={colIndex}\n                          style={{ width: col.width }}\n                          className={`grid-cell ${hoveredColumn === colIndex ? `highlight-column` : \"\"\n                            }`}\n                        >\n                          <input\n                            value={row[col.field]}\n                            onChange={(e) => { }}\n                            readOnly={dataReadOnly}\n                            className={`${selectedRows.includes(rowIndex)\n                              ? \"selected-row\"\n                              : \"\"\n                              } ${selectedItems.includes(rowIndex)\n                                ? \"selected-items\"\n                                : \"\"\n                              }\n                          ${col.type === \"number\" ? \"number\" : \"text\"}\n                          `}\n                          />\n                          <div\n                            className=\"resize-handle\"\n                            onMouseDown={(e) => {\n                              e.preventDefault();\n                              startResize(colIndex, e);\n                            }}\n                            onMouseEnter={(e) => {\n                              e.preventDefault();\n                              handleMouseEnter(colIndex);\n                            }} // On hover\n                            onMouseLeave={(e) => {\n                              e.preventDefault();\n                              handleMouseLeave();\n                            }} // On mouse leave\n                          />\n                        </div>\n                      ))}\n                    </div>\n                  ))}\n                </div>\n              </div>\n            </div>\n\n            {isLoading && <div className=\"table-loading\">\n              <div className=\"loader\"></div>\n            </div>}\n          </div>\n          <div className=\"table-panel-footer\" >\n            <div>Records : {rows.length}</div>\n            <div><Pagination count={pages.length} onChange={(e, value) => {\n              setPageNumber(value - 1)\n            }} />\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n);\n\nfunction formatArrayIntoChunks(arr: Array<any>, chunkSize = 100) {\n  let result = [];\n\n  for (let i = 0; i < arr.length; i += chunkSize) {\n    // Use slice to create chunks of 'chunkSize'\n    result.push(arr.slice(i, i + chunkSize));\n  }\n  return result;\n}\n\n\n\n\n\nexport { UpwardTable, };\n","import {\n  useState,\n  createContext,\n  useContext,\n  CSSProperties,\n  useEffect,\n  useRef,\n  useReducer,\n} from \"react\";\nimport { GridRowSelectionModel } from \"@mui/x-data-grid\";\nimport { useMutation, useQuery, useQueryClient } from \"react-query\";\nimport { AuthContext } from \"../../../../components/AuthContext\";\nimport {\n  Box,\n  Button,\n} from \"@mui/material\";\nimport useQueryModalTable from \"../../../../hooks/useQueryModalTable\";\nimport LoadingButton from \"@mui/lab/LoadingButton\";\nimport AddIcon from \"@mui/icons-material/Add\";\nimport SaveIcon from \"@mui/icons-material/Save\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport Swal from \"sweetalert2\";\nimport { wait } from \"@testing-library/user-event/dist/utils\";\nimport useMultipleComponent from \"../../../../hooks/useMultipleComponent\";\nimport Table from \"../../../../components/Table\";\nimport {\n  codeCondfirmationAlert,\n  saveCondfirmationAlert,\n} from \"../../../../lib/confirmationAlert\";\nimport { TextInput } from \"../../../../components/UpwardFields\";\nimport { format } from 'date-fns'\nimport AutorenewIcon from '@mui/icons-material/Autorenew';\nimport AccountBalanceIcon from '@mui/icons-material/AccountBalance';\nimport '../../../../style/laoding.css'\nimport { UpwardTable } from \"../../../../components/UpwardTable\";\nconst defaultCashBreakDown = [\n  { value1: \"1,000.00\", value2: \"\", value3: \"0.00\" },\n  { value1: \"500.00\", value2: \"\", value3: \"0.00\" },\n  { value1: \"200.00\", value2: \"\", value3: \"0.00\" },\n  { value1: \"100.00\", value2: \"\", value3: \"0.00\" },\n  { value1: \"50.00\", value2: \"\", value3: \"0.00\" },\n  { value1: \"20.00\", value2: \"\", value3: \"0.00\" },\n  { value1: \"10.00\", value2: \"\", value3: \"0.00\" },\n  { value1: \"5.00\", value2: \"\", value3: \"0.00\" },\n  { value1: \"2.00\", value2: \"\", value3: \"0.00\" },\n  { value1: \"1.00\", value2: \"\", value3: \"0.00\" },\n  { value1: \".50\", value2: \"\", value3: \"0.00\" },\n  { value1: \".25\", value2: \"\", value3: \"0.00\" },\n  { value1: \".10\", value2: \"\", value3: \"0.00\" },\n  { value1: \".05\", value2: \"\", value3: \"0.00\" },\n  { value1: \".01\", value2: \"\", value3: \"0.00\" },\n];\nconst buttons = [\n  {\n    title: \"Cash Collection\",\n    index: 0,\n  },\n  {\n    title: \"Check Collection\",\n    index: 1,\n  },\n  {\n    title: \"Selected Collection\",\n    index: 2,\n  },\n  {\n    title: \"Collection for Deposit\",\n    index: 3,\n  },\n];\n\nexport const reducer = (state: any, action: any) => {\n  switch (action.type) {\n    case \"UPDATE_FIELD\":\n      return {\n        ...state,\n        [action.field]: action.value,\n      };\n    default:\n      return state;\n  }\n};\nconst DepositContext = createContext<any>({\n  cashCollection: [],\n  setCashCollection: () => { },\n  checkCollection: [],\n  setCheckCollection: () => { },\n  selectedCollection: [],\n  setSelectedCollection: () => { },\n  collectionForDeposit: [],\n  setCollectionForDeposit: () => { },\n  tableRows: [],\n  updateTableRowsInput: () => { },\n  LoadingCashTable: false,\n  LoadingCheckTable: false,\n  setTotal: () => { },\n  total: \"0.00\",\n  TotalCashForDeposit: \"0.00\",\n  loadingSearchByDepositSlip: false,\n});\n\nexport default function Deposit() {\n  const depositSearch = useRef<HTMLInputElement>(null)\n  const inputSearchRef = useRef<HTMLInputElement>(null)\n  const refSlipCode = useRef<HTMLInputElement>(null)\n  const refDateDepo = useRef<HTMLInputElement>(null)\n  const refBankAcctCode = useRef<HTMLInputElement>(null)\n  const refBankAcctName = useRef<HTMLInputElement>(null)\n\n  const bankDepositSearch = useRef<HTMLInputElement>(null)\n  const _refTempSlipCode = useRef<string>(\"\")\n\n  const refBankAcctCodeTag = useRef('')\n  const refBankAcctNameTag = useRef('')\n  const refAcctID = useRef('')\n  const refAcctName = useRef('')\n  const refClassification = useRef('')\n  const refSubAccount = useRef('')\n  const refShortName = useRef('')\n\n  const { myAxios, user } = useContext(AuthContext);\n  const { currentStepIndex, step, goTo } = useMultipleComponent([\n    <CashCollection />,\n    <CheckCollection />,\n    <SelectedCollection />,\n    <CollectionForDeposit />,\n  ]);\n\n  const [cashCollection, setCashCollection] = useState<any>([])\n  const [checkCollection, setCheckCollection] = useState<any>([])\n  const [selectedRows, setSelectedRows] = useState<any>([])\n  const [selectedRowsCashIndex, setSelectedRowsCashIndex] = useState<any>([])\n  const [selectedRowsCheckedIndex, setSelectedRowsCheckedIndex] = useState<any>([])\n  const [collectionForDeposit, setCollectionForDeposit] = useState<any>([]);\n  const [tableRowsInputValue, setTableRowsInputValue] =\n    useState<Array<{ value1: string; value2: string; value3: string }>>(\n      defaultCashBreakDown\n    );\n  const [depositMode, setDepositMode] = useState('')\n  const [total, setTotal] = useState(\"0.00\");\n  const TotalCashForDeposit = selectedRows\n    .reduce((accumulator: number, currentValue: any) => {\n      const dd =\n        currentValue.Check_No || currentValue.Check_No !== \"\"\n          ? 0\n          : parseFloat(currentValue.Amount.replace(/,/g, \"\"));\n      return accumulator + dd;\n    }, 0.0)\n    .toLocaleString(\"en-US\", {\n      minimumFractionDigits: 2,\n      maximumFractionDigits: 2,\n    });\n\n  const updateTableRowsInput = (\n    fields: { value1: string; value2: string; value3: string },\n    idx: number\n  ) => {\n    setTableRowsInputValue((d) => {\n      return d.map((item, index) => {\n        if (idx === index) {\n          item = { ...item, ...fields };\n        }\n        return item;\n      });\n    });\n  };\n\n  const { isLoading: LoadingDepositSlipCode, refetch: RefetchDepositSlipCode } =\n    useQuery({\n      queryKey: \"deposit-slipcode\",\n      queryFn: async () =>\n        await myAxios.get(`/task/accounting/get-deposit-slipcode`, {\n          headers: {\n            Authorization: `Bearer ${user?.accessToken}`,\n          },\n        }),\n      refetchOnWindowFocus: false,\n      onSuccess: (data) => {\n        const response = data as any;\n        wait(100).then(() => {\n          if (refSlipCode.current) {\n            refSlipCode.current.value = response.data.slipcode[0].collectionID\n            _refTempSlipCode.current = response.data.slipcode[0].collectionID\n          }\n          if (refDateDepo.current) {\n            refDateDepo.current.value = format(new Date(), \"yyyy-MM-dd\")\n          }\n        })\n      },\n    });\n\n  const {\n    ModalComponent: ModalDepostitBanks,\n    openModal: openDepositBanks,\n    isLoading: isLoadingDepostitBanks,\n    closeModal: closeDepositBanks,\n  } = useQueryModalTable({\n    link: {\n      url: \"/task/accounting/getBanks\",\n      queryUrlName: \"bankDepositSearch\",\n    },\n    columns: [\n      { field: \"Account_Type\", headerName: \"Account_Type\", width: 200 },\n      { field: \"Account_No\", headerName: \"Account_No\", width: 170 },\n      {\n        field: \"Account_Name\",\n        headerName: \"Account_Name\",\n        flex: 1,\n      },\n    ],\n    queryKey: \"bank-deposit\",\n    uniqueId: \"Account_No\",\n    responseDataKey: \"banks\",\n    onSelected: (selectedRowData) => {\n      if (selectedRowData.length > 0) {\n        console.log(selectedRowData[0])\n        if (refBankAcctCode.current)\n          refBankAcctCode.current.value = selectedRowData[0].Account_No\n        if (refBankAcctName.current)\n          refBankAcctName.current.value = selectedRowData[0].Account_Name\n\n        refBankAcctCodeTag.current = selectedRowData[0]?.IDNo\n        refBankAcctNameTag.current = selectedRowData[0]?.Desc\n        refAcctID.current = selectedRowData[0]?.Account_ID\n        refAcctName.current = selectedRowData[0]?.Short\n        refShortName.current = selectedRowData[0]?.client_name\n        refClassification.current = selectedRowData[0]?.Sub_Acct\n        refSubAccount.current = selectedRowData[0]?.ShortName\n\n        closeDepositBanks();\n      }\n    },\n    searchRef: bankDepositSearch,\n  });\n\n  const { mutate: addDepositMutation, isLoading: addDepositMutationLoading } =\n    useMutation({\n      mutationKey: \"add-deposit\",\n      mutationFn: async (variables: any) => {\n        return await myAxios.post(\"/task/accounting/add-deposit\", variables, {\n          headers: {\n            Authorization: `Bearer ${user?.accessToken}`,\n          },\n        });\n      },\n      onSuccess: (res) => {\n        const resposnse = res as any;\n        if (resposnse.data.success) {\n          setSelectedRows([]);\n          setCollectionForDeposit([]);\n          RefetchDepositSlipCode();\n          setTableRowsInputValue(defaultCashBreakDown);\n          resetRefs()\n          refetchCashCollection()\n          refetchCheckCollection()\n          setSelectedRowsCashIndex([])\n          setSelectedRowsCheckedIndex([])\n          return Swal.fire({\n            position: \"center\",\n            icon: \"success\",\n            title: resposnse.data.message,\n            timer: 1500,\n          });\n        }\n        return Swal.fire({\n          position: \"center\",\n          icon: \"warning\",\n          title: resposnse.data.message,\n          timer: 1500,\n        });\n      },\n    });\n\n  const {\n    mutate: updateDepositMutation,\n    isLoading: updateDepositMutationLoading,\n  } = useMutation({\n    mutationKey: \"update-deposit\",\n    mutationFn: async (variables: any) => {\n      return await myAxios.post(\"/task/accounting/update-deposit\", variables, {\n        headers: {\n          Authorization: `Bearer ${user?.accessToken}`,\n        },\n      });\n    },\n    onSuccess: (res) => {\n      const resposnse = res as any;\n      if (resposnse.data.success) {\n        resetRefs()\n        setSelectedRows([]);\n        setCollectionForDeposit([]);\n        RefetchDepositSlipCode();\n        setTableRowsInputValue(defaultCashBreakDown);\n        resetRefs()\n        refetchCashCollection()\n        refetchCheckCollection()\n        setSelectedRowsCashIndex([])\n        setSelectedRowsCheckedIndex([])\n        return Swal.fire({\n          position: \"center\",\n          icon: \"success\",\n          title: resposnse.data.message,\n          timer: 1500,\n        });\n      }\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: resposnse.data.message,\n        timer: 1500,\n      });\n    },\n  });\n\n  const { mutate: searchByDepositSlip, isLoading: loadingSearchByDepositSlip } =\n    useMutation({\n      mutationKey: \"search-deposit-cash-check\",\n      mutationFn: async (variables: any) => {\n        return await myAxios.post(\n          \"/task/accounting/search-cash-check\",\n          variables,\n          {\n            headers: {\n              Authorization: `Bearer ${user?.accessToken}`,\n            },\n          }\n        );\n      },\n      onSuccess: (res) => {\n        const obj = res.data.data.obj\n        const cash = res.data.data.cash\n        const check = res.data.data.checks\n        const cash_breakdown = res.data.data.cash_breakdown\n\n        wait(100).then(() => {\n          if (refBankAcctCode.current)\n            refBankAcctCode.current.value = obj.refBankAcctCode\n          if (refBankAcctName.current)\n            refBankAcctName.current.value = obj.refBankAcctName\n          if (refDateDepo.current)\n            refDateDepo.current.value = format(new Date(obj.refDate), \"yyyy-MM-dd\")\n\n\n\n          refBankAcctCodeTag.current = obj?.refBankAcctCodeTag\n          refBankAcctNameTag.current = obj?.refBankAcctNameTag\n          refAcctID.current = obj?.refAcctID\n          refAcctName.current = obj?.refAcctName\n          refShortName.current = obj?.client_name\n          refClassification.current = obj?.refClassification\n          refSubAccount.current = obj?.refSubAccount\n\n          const cashIndex = cash\n            .map((obj: any, index: number) => obj.SlipCode !== null && obj.SlipCode !== '' ? index : null)\n            .filter((index: number) => index !== null);\n\n          const checkIndex = check\n            .map((obj: any, index: number) => obj.SlipCode !== null && obj.SlipCode !== '' ? index : null)\n            .filter((index: number) => index !== null);\n\n\n          setSelectedRowsCashIndex(cashIndex)\n          setSelectedRowsCheckedIndex(checkIndex)\n          setCashCollection(cash);\n          setCheckCollection(check);\n\n\n          const filteredCash = cash.filter((itm: any) => itm.SlipCode !== '' && itm.SlipCode === refSlipCode.current?.value)\n          const filteredCheck = check.filter((itm: any) => itm.SlipCode !== '' && itm.SlipCode === refSlipCode.current?.value)\n\n          if (filteredCash.length > 0) {\n            filteredCash.forEach((rowSelected: any) => {\n              setSelectedRows((d: any) => {\n\n                const newSelected: any = {\n                  Deposit: \"Cash\",\n                  Check_No: \"\",\n                  Check_Date: \"\",\n                  Bank: \"\",\n                  Amount: rowSelected.Amount,\n                  Name: rowSelected.Client_Name,\n                  RowIndex: d.length + 1,\n                  DRCode: rowSelected.DRCode,\n                  ORNo: rowSelected.OR_No,\n                  DRRemarks: \"\",\n                  IDNo: rowSelected.ID_No,\n                  TempOR: rowSelected.Temp_OR,\n                  Short: rowSelected.Short,\n                };\n\n                d = [...d, newSelected];\n                return d;\n              });\n            });\n          }\n          if (filteredCheck.length > 0) {\n            filteredCheck.forEach((rowSelected: any) => {\n              setSelectedRows((d: any) => {\n                const newSelected: any = {\n                  Deposit: \"Check\",//0\n                  Check_No: rowSelected.Check_No,//1\n                  Check_Date: rowSelected.Check_Date,//2\n                  Bank: rowSelected.Bank_Branch,//3\n                  Amount: rowSelected.Amount,//4\n                  Name: rowSelected.Client_Name,//5\n                  RowIndex: d.length + 1,//6\n                  DRCode: rowSelected.DRCode,//7\n                  ORNo: rowSelected.OR_No,//8\n                  DRRemarks: rowSelected.DRRemarks,//9\n                  IDNo: rowSelected.ID_No,//10\n                  TempOR: rowSelected.Temp_OR,//11\n                  Short: rowSelected.Short,//12\n                };\n                d = [...d, newSelected];\n                return d;\n              });\n\n\n              setCollectionForDeposit((d: any) => {\n                const newSelectedCheckForDeposit: any = {\n                  Bank: rowSelected.Bank_Branch,\n                  Check_No: rowSelected.Check_No,\n                  Amount: rowSelected.Amount,\n                  TempOR: rowSelected.Temp_OR,\n                };\n                d = [...d, newSelectedCheckForDeposit];\n                return d;\n              });\n            });\n          }\n          setTableRowsInputValue(cash_breakdown)\n        })\n\n        setDepositMode('edit')\n\n      },\n    });\n\n  const {\n    ModalComponent: ModalDeposit,\n    openModal: openDeposit,\n    isLoading: isLoadingDeposit,\n    closeModal: closeDeposit,\n  } = useQueryModalTable({\n    link: {\n      url: \"/task/accounting/search-deposit\",\n      queryUrlName: \"searchDeposit\",\n    },\n    columns: [\n      { field: \"Date\", headerName: \"Date\", width: 150 },\n      { field: \"SlipCode\", headerName: \"Slip Code\", width: 170 },\n      {\n        field: \"BankAccount\",\n        headerName: \"Bank Account\",\n        width: 170,\n      },\n      {\n        field: \"AccountName\",\n        headerName: \"Account Name\",\n        flex: 1,\n      },\n    ],\n    queryKey: \"deposit-search\",\n    uniqueId: \"SlipCode\",\n    responseDataKey: \"deposit\",\n    onSelected: (selectedRowData) => {\n      const SlipCode = selectedRowData[0].SlipCode;\n      searchByDepositSlip({ SlipCode });\n\n      wait(100).then(() => {\n        if (refSlipCode.current) {\n          refSlipCode.current.value = SlipCode\n        }\n      })\n\n      closeDeposit();\n    },\n    onCloseFunction: (value: any) => {\n      if (inputSearchRef.current) {\n        inputSearchRef.current.value = \"\"\n      }\n    },\n    searchRef: depositSearch,\n  });\n\n  const { isLoading: loadingCashCollection, refetch: refetchCashCollection } =\n    useQuery({\n      queryKey: \"get-cash-collection\",\n      queryFn: async () =>\n        await myAxios.get(`/task/accounting/get-cash-collection`, {\n          headers: {\n            Authorization: `Bearer ${user?.accessToken}`,\n          },\n        }),\n      refetchOnWindowFocus: false,\n      onSuccess: (data) => {\n        const response = data as any;\n        setCashCollection(response.data.cash)\n      },\n    });\n\n  const { isLoading: loadingCheckCollection, refetch: refetchCheckCollection } =\n    useQuery({\n      queryKey: \"get-check-collection\",\n      queryFn: async () =>\n        await myAxios.get(`/task/accounting/get-check-collection`, {\n          headers: {\n            Authorization: `Bearer ${user?.accessToken}`,\n          },\n        }),\n      refetchOnWindowFocus: false,\n      onSuccess: (data) => {\n        const response = data as any;\n        setCheckCollection(response.data.check)\n      },\n    });\n\n  const handleOnSave = (e: any) => {\n    e.preventDefault();\n    if (refBankAcctCode.current && refBankAcctCode.current?.value.length >= 200) {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: \"Bank Account is too long!\",\n        timer: 1500,\n      });\n    }\n    if (refBankAcctCode.current && refBankAcctCode.current?.value === \"\") {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: \"Please provide bank account\",\n        timer: 1500,\n      }).then((result) => {\n        wait(350).then(() => {\n          openDepositBanks();\n        });\n      });\n    }\n    if (selectedRows.length <= 0) {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: \"No selected collection to be deposit\",\n        timer: 1500,\n      });\n    }\n    if (TotalCashForDeposit.trim() !== total.trim()) {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: \"Cash breakdown is not balance\",\n        timer: 1500,\n      });\n    }\n    const state = {\n      depositSlip: refSlipCode.current?.value,\n      depositdate: refDateDepo.current?.value,\n      BankAcctCode: refBankAcctCode.current?.value,\n      BankAcctName: refBankAcctName.current?.value,\n      BankAcctCodeTag: refBankAcctCodeTag.current,\n      BankAcctNameTag: refBankAcctNameTag.current,\n      AcctID: refAcctID.current,\n      AcctName: refAcctName.current,\n      Classification: refClassification.current,\n      SubAccount: refSubAccount.current,\n      ShortName: refShortName.current,\n    }\n    if (depositMode === \"edit\") {\n      codeCondfirmationAlert({\n        isUpdate: true,\n        cb: (userCodeConfirmation) => {\n\n          updateDepositMutation({\n            ...state,\n            userCodeConfirmation,\n            selectedCollection: JSON.stringify(selectedRows),\n            tableRowsInputValue: JSON.stringify(tableRowsInputValue),\n          });\n        },\n      });\n    } else {\n      saveCondfirmationAlert({\n        isConfirm: () => {\n          addDepositMutation({\n            ...state,\n            selectedCollection: JSON.stringify(selectedRows),\n            tableRowsInputValue: JSON.stringify(tableRowsInputValue),\n          });\n        },\n      });\n    }\n  };\n\n  function resetRefs() {\n\n    if (refBankAcctCode.current) {\n      refBankAcctCode.current.value = ''\n    }\n    if (refBankAcctName.current) {\n      refBankAcctName.current.value = ''\n    }\n    if (bankDepositSearch.current)\n      bankDepositSearch.current.value = ''\n    refBankAcctCodeTag.current = ''\n    refBankAcctNameTag.current = ''\n    refAcctID.current = ''\n    refAcctName.current = ''\n    refClassification.current = ''\n    refSubAccount.current = ''\n    refShortName.current = ''\n  }\n\n  const disabledFields = depositMode === \"\";\n\n\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        flexDirection: \"column\",\n        width: \"100%\",\n        height: \"100%\",\n        flex: 1,\n      }}\n    >\n      <div\n        style={{\n          display: \"flex\",\n          alignItems: \"center\",\n          columnGap: \"5px\",\n        }}\n      >\n        {isLoadingDeposit ? (\n          <LoadingButton loading={isLoadingDeposit} />\n        ) : (\n          <TextInput\n            label={{\n              title: \"Search: \",\n              style: {\n                fontSize: \"12px\",\n                fontWeight: \"bold\",\n                width: \"50px\",\n              },\n            }}\n            input={{\n              className: \"search-input-up-on-key-down\",\n              type: \"search\",\n              onKeyDown: (e) => {\n                if (e.key === \"Enter\" || e.key === \"NumpadEnter\") {\n                  e.preventDefault();\n                  openDeposit(inputSearchRef.current?.value);\n                }\n                if (e.key === \"ArrowDown\") {\n                  e.preventDefault();\n                  const datagridview = document.querySelector(\n                    \".grid-container\"\n                  ) as HTMLDivElement;\n                  datagridview.focus();\n                }\n              },\n              style: { width: \"500px\" },\n            }}\n            inputRef={inputSearchRef}\n          />\n        )}\n        {disabledFields && (\n          <Button\n            sx={{\n              height: \"30px\",\n              fontSize: \"11px\",\n            }}\n            variant=\"contained\"\n            startIcon={<AddIcon sx={{ width: 15, height: 15 }} />}\n            id=\"entry-header-save-button\"\n            onClick={() => {\n              setDepositMode(\"add\")\n\n            }}\n          >\n            New\n          </Button>\n        )}\n        <LoadingButton\n          sx={{\n            height: \"30px\",\n            fontSize: \"11px\",\n          }}\n          id=\"save-entry-header\"\n          color=\"primary\"\n          variant=\"contained\"\n          type=\"submit\"\n          onClick={handleOnSave}\n          disabled={disabledFields}\n          startIcon={<SaveIcon sx={{ width: 15, height: 15 }} />}\n          loading={updateDepositMutationLoading || addDepositMutationLoading}\n        >\n          Save\n        </LoadingButton>\n        {!disabledFields && (\n          <Button\n            sx={{\n              height: \"30px\",\n              fontSize: \"11px\",\n            }}\n            variant=\"contained\"\n            startIcon={<CloseIcon sx={{ width: 15, height: 15 }} />}\n            color=\"error\"\n            onClick={() => {\n              Swal.fire({\n                title: \"Are you sure?\",\n                text: \"You won't be able to revert this!\",\n                icon: \"warning\",\n                showCancelButton: true,\n                confirmButtonColor: \"#3085d6\",\n                cancelButtonColor: \"#d33\",\n                confirmButtonText: \"Yes, cancel it!\",\n              }).then((result) => {\n                if (result.isConfirmed) {\n                  setDepositMode(\"\")\n                  setSelectedRows([]);\n                  setCollectionForDeposit([]);\n                  RefetchDepositSlipCode();\n                  setTableRowsInputValue(defaultCashBreakDown);\n                  resetRefs()\n                  refetchCheckCollection()\n                  refetchCashCollection()\n\n                }\n              });\n            }}\n          >\n            Cancel\n          </Button>\n        )}\n      </div>\n      <br />\n      <form\n        onKeyDown={(e) => {\n          if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n            e.preventDefault();\n            return;\n          }\n        }}\n        style={{\n          display: \"flex\",\n          gap: \"10px\",\n        }}\n      >\n        {LoadingDepositSlipCode ? \"Loading...\" : <TextInput\n          label={{\n            title: \"Slip Code: \",\n            style: {\n              fontSize: \"12px\",\n              fontWeight: \"bold\",\n              width: \"70px\",\n            },\n          }}\n          input={{\n            disabled: disabledFields,\n            className: \"search-input-up-on-key-down\",\n            type: \"text\",\n            style: { width: \"200px\" },\n            readOnly: true\n          }}\n          inputRef={refSlipCode}\n          icon={<AutorenewIcon sx={{ fontSize: \"18px\" }} />}\n          onIconClick={(e) => {\n            e.preventDefault()\n            RefetchDepositSlipCode()\n          }}\n        />}\n        <TextInput\n          label={{\n            title: \"Deposit Date: \",\n            style: {\n              fontSize: \"12px\",\n              fontWeight: \"bold\",\n              width: \"80px\",\n            },\n          }}\n          input={{\n            className: \"search-input-up-on-key-down\",\n            type: \"date\",\n            style: { width: \"200px\" },\n            disabled: disabledFields\n          }}\n          inputRef={refDateDepo}\n        />\n\n        {isLoadingDepostitBanks ? (\n          \"Loading...\"\n        ) : (\n          <TextInput\n            label={{\n              title: \"Bank Account: \",\n              style: {\n                fontSize: \"12px\",\n                fontWeight: \"bold\",\n                width: \"100px\",\n              },\n            }}\n            input={{\n              className: \"search-input-up-on-key-down\",\n              type: \"text\",\n              style: { width: \"200px\" },\n              onKeyDown: (e) => {\n                if (e.key === \"Enter\" || e.key === \"NumpadEnter\") {\n                  e.preventDefault();\n                  openDepositBanks(refBankAcctCode.current?.value)\n                }\n\n              },\n              disabled: disabledFields\n            }}\n            inputRef={refBankAcctCode}\n            icon={<AccountBalanceIcon sx={{ fontSize: \"18px\", color: disabledFields ? \"gray\" : \"black\" }} />}\n            onIconClick={(e) => {\n              e.preventDefault()\n              openDepositBanks(refBankAcctCode.current?.value)\n            }}\n            disableIcon={disabledFields}\n          />)}\n\n        <TextInput\n          label={{\n            title: \"Account Name: \",\n            style: {\n              fontSize: \"12px\",\n              fontWeight: \"bold\",\n              width: \"100px\",\n            },\n          }}\n          input={{\n            className: \"search-input-up-on-key-down\",\n            type: \"text\",\n            style: { width: \"200px\" },\n            readOnly: true,\n            disabled: disabledFields\n\n          }}\n          inputRef={refBankAcctName}\n        />\n        <button\n          // ref={submitButton}\n          style={{ display: \"none\" }}\n          type=\"submit\"\n        ></button>\n      </form>\n      <br />\n      <div>\n        <div style={{ display: \"flex\" }}>\n          {buttons.map((item, idx) => {\n            return (\n              <button\n                key={idx}\n                style={{\n                  border: \"none\",\n                  outline: \"none\",\n                  backgroundColor: \"rgba(51, 51, 51, 0.05)\",\n                  borderWidth: \"0\",\n                  color: currentStepIndex === idx ? \"#7e22ce\" : \"#333333\",\n                  cursor: \"pointer\",\n                  display: \"inline-block\",\n                  fontFamily: `\"Haas Grot Text R Web\", \"Helvetica Neue\", Helvetica, Arial, sans-serif`,\n                  fontSize: \"14px\",\n                  fontWeight: \"500\",\n                  lineHeight: \"20px\",\n                  listStyle: \"none\",\n                  margin: \"0\",\n                  padding: \"10px 12px\",\n                  textAlign: \"center\",\n                  transition: \"all 200ms\",\n                  verticalAlign: \"baseline\",\n                  whiteSpace: \"nowrap\",\n                  userSelect: \"none\",\n                  touchAction: \"manipulation\",\n                  position: \"relative\",\n                  overflow: \"hidden\",\n                }}\n                onClick={() => goTo(idx)}\n              >\n                <span\n                  style={{\n                    position: \"absolute\",\n                    top: 0,\n                    bottom: 0,\n                    left: 0,\n                    right: 0,\n                    background: \"rgba(206, 214, 211, 0.18)\",\n                    transition: \"all 200ms\",\n                    transform: slideAnimation(currentStepIndex, idx),\n                  }}\n                ></span>\n                {item.title}\n              </button>\n            );\n          })}\n        </div>\n      </div>\n      <br />\n      <DepositContext.Provider\n        value={{\n          myAxios,\n          user,\n          cashCollection,\n          setCashCollection,\n          checkCollection,\n          setCheckCollection,\n          selectedRows,\n          setSelectedRows,\n          collectionForDeposit,\n          setCollectionForDeposit,\n          total,\n          setTotal,\n          TotalCashForDeposit,\n          tableRows: tableRowsInputValue,\n          setTableRowsInputValue,\n          updateTableRowsInput,\n          loadingCheckCollection,\n          loadingCashCollection,\n          selectedRowsCashIndex,\n          setSelectedRowsCashIndex,\n          selectedRowsCheckedIndex,\n          setSelectedRowsCheckedIndex\n        }}\n      >\n        <div\n          style={{\n            display: \"flex\",\n            flexDirection: \"column\",\n            flex: 1,\n          }}\n          id=\"concatiner\"\n        >\n          {step}\n        </div>\n      </DepositContext.Provider>\n      {ModalDepostitBanks}\n      {ModalDeposit}\n      {loadingSearchByDepositSlip || updateDepositMutationLoading || addDepositMutationLoading && <div className=\"loading-component\"><div className=\"loader\"></div></div>}\n    </div>\n  );\n}\nfunction slideAnimation(activeButton: number, idx: number) {\n  if (activeButton === idx) {\n    return \"translateX(100%)\";\n  } else {\n    return \"translateX(0%)\";\n  }\n}\nfunction CashCollection() {\n  const {\n    cashCollection,\n    setSelectedRows,\n    selectedRowsCashIndex,\n    setSelectedRowsCashIndex,\n\n  } = useContext(DepositContext);\n\n  const table = useRef<any>(null);\n  const cashColumns = [\n    {\n      field: \"OR_No\",\n      headerName: \"OR No.\",\n      width: 270,\n    },\n    {\n      field: \"OR_Date\",\n      headerName: \"OR Date\",\n      width: 270,\n    },\n    {\n      field: \"Amount\",\n      headerName: \"Amount\",\n      width: 200,\n      type: \"number\",\n      cellClassName: \"super-app-theme--cell\",\n    },\n    {\n      field: \"Client_Name\",\n      headerName: \"Client Name\",\n      flex: 1,\n      width: 540,\n    },\n    {\n      field: \"Temp_OR\",\n      headerName: \"Temp_OR\",\n      hide: true,\n    },\n  ];\n\n  useEffect(() => {\n    table.current?.setSelectRows(\n      selectedRowsCashIndex\n    );\n  }, [selectedRowsCashIndex, table]);\n\n  const width = window.innerWidth - 70;\n  const height = window.innerHeight - 200;\n\n  //[checkSelected, table, loadingSearchByDepositSlip]\n  console.log(selectedRowsCashIndex)\n\n  return (\n    <div\n      style={{\n        flex: 1,\n        marginTop: \"10px\",\n        width: \"100%\",\n        position: \"relative\",\n      }}\n    >\n\n      <UpwardTable\n        isLoading={false}\n        ref={table}\n        rows={cashCollection}\n        column={cashColumns}\n        width={width}\n        height={height}\n        dataReadOnly={true}\n        freeze={true}\n        isMultipleSelect={true}\n        onSelectionChange={(selectedRow, rowIndex) => {\n          const rowSelected = selectedRow[0];\n          if (selectedRow.length > 0) {\n            if (selectedRowsCashIndex?.includes(rowIndex)) {\n              return\n            }\n            setSelectedRowsCashIndex((d: any) => [...d, rowIndex])\n            setSelectedRows((d: any) => {\n              const newSelected: any = {\n                Deposit: \"Cash\",\n                Check_No: \"\",\n                Check_Date: \"\",\n                Bank: \"\",\n                Amount: rowSelected.Amount,\n                Name: rowSelected.Client_Name,\n                RowIndex: d.length + 1,\n                DRCode: rowSelected.DRCode,\n                ORNo: rowSelected.OR_No,\n                DRRemarks: \"\",\n                IDNo: rowSelected.ID_No,\n                TempOR: rowSelected.Temp_OR,\n                Short: rowSelected.Short,\n              };\n\n              d = [...d, newSelected];\n              return d;\n            });\n\n          } else {\n\n          }\n        }}\n        inputsearchselector=\".manok\"\n      />\n      {/*               \n      <Box\n        style={{\n          height: `${document.getElementById(\"concatiner\")?.getBoundingClientRect()\n            .height\n            }px`,\n          width: \"100%\",\n          overflowX: \"scroll\",\n          position: \"absolute\",\n        }}\n      >\n        <Table\n          ref={table}\n          isLoading={loadingCashCollection}\n          columns={cashColumns}\n          rows={cashCollection}\n          table_id={\"Temp_OR\"}\n          isSingleSelection={true}\n          isRowFreeze={true}\n          dataSelection={(selection, data, code) => {\n            const rowSelected = data.filter(\n              (item: any) => item.Temp_OR === selection[0]\n            )[0];\n            if (rowSelected === undefined || rowSelected.length <= 0) {\n              return;\n            }\n\n\n            setSelectedRows((d: any) => {\n\n              const newSelected: any = {\n                Deposit: \"Cash\",\n                Check_No: \"\",\n                Check_Date: \"\",\n                Bank: \"\",\n                Amount: rowSelected.Amount,\n                Name: rowSelected.Client_Name,\n                RowIndex: d.length + 1,\n                DRCode: rowSelected.DRCode,\n                ORNo: rowSelected.OR_No,\n                DRRemarks: \"\",\n                IDNo: rowSelected.ID_No,\n                TempOR: rowSelected.Temp_OR,\n                Short: rowSelected.Short,\n              };\n\n              d = [...d, newSelected];\n              return d;\n            });\n          }}\n        />\n      </Box> */}\n    </div>\n  );\n}\nfunction CheckCollection() {\n  const {\n    checkCollection,\n    setSelectedRows,\n    setCollectionForDeposit,\n    selectedRowsCheckedIndex,\n    setSelectedRowsCheckedIndex\n\n  } = useContext(DepositContext)\n\n\n  const checkColumns = [\n    {\n      field: \"OR_No\",\n      headerName: \"OR No.\",\n      minWidth: 170,\n    },\n    {\n      field: \"OR_Date\",\n      headerName: \"OR Date\",\n      minWidth: 170,\n    },\n    {\n      field: \"Check_No\",\n      headerName: \"Check No\",\n      minWidth: 170,\n    },\n    {\n      field: \"Check_Date\",\n      headerName: \"Check Date\",\n      minWidth: 170,\n    },\n    {\n      field: \"Amount\",\n      headerName: \"Amount\",\n      minWidth: 160,\n      align: \"right\",\n    },\n    {\n      field: \"Bank_Branch\",\n      headerName: \"Bank/Branch\",\n      minWidth: 300,\n    },\n    {\n      field: \"Client_Name\",\n      headerName: \"Client Name\",\n      minWidth: 300,\n      flex: 1,\n    },\n    {\n      field: \"Temp_OR\",\n      headerName: \"Temp_OR\",\n      hide: true,\n    },\n  ];\n  const table = useRef<any>(null);\n\n  useEffect(() => {\n    table.current?.setSelectRows(\n      selectedRowsCheckedIndex\n    );\n  }, [selectedRowsCheckedIndex, table]);\n\n  const width = window.innerWidth - 70;\n  const height = window.innerHeight - 200;\n  // / [selectedRows, table, loadingSearchByDepositSlip]\n\n  return (\n    <div\n      style={{\n        marginTop: \"10px\",\n        width: \"100%\",\n        position: \"relative\",\n        flex: 1,\n      }}\n    >\n      <UpwardTable\n        isLoading={false}\n        ref={table}\n        rows={checkCollection}\n        column={checkColumns}\n        width={width}\n        height={height}\n        dataReadOnly={true}\n        freeze={true}\n        isMultipleSelect={true}\n        onSelectionChange={(selectedRow, rowIndex) => {\n          const rowSelected = selectedRow[0];\n          if (selectedRow.length > 0) {\n            if (selectedRowsCheckedIndex.includes(rowIndex)) {\n              return\n            }\n            setSelectedRowsCheckedIndex((d: any) => [...d, rowIndex])\n            setSelectedRows((d: any) => {\n              const newSelected: any = {\n                Deposit: \"Check\",//0\n                Check_No: rowSelected.Check_No,//1\n                Check_Date: rowSelected.Check_Date,//2\n                Bank: rowSelected.Bank_Branch,//3\n                Amount: rowSelected.Amount,//4\n                Name: rowSelected.Client_Name,//5\n                RowIndex: d.length + 1,//6\n                DRCode: rowSelected.DRCode,//7\n                ORNo: rowSelected.OR_No,//8\n                DRRemarks: rowSelected.DRRemarks,//9\n                IDNo: rowSelected.ID_No,//10\n                TempOR: rowSelected.Temp_OR,//11\n                Short: rowSelected.Short,//12\n              };\n              d = [...d, newSelected];\n              return d;\n            });\n\n\n            setCollectionForDeposit((d: any) => {\n              const newSelectedCheckForDeposit: any = {\n                Bank: rowSelected.Bank_Branch,\n                Check_No: rowSelected.Check_No,\n                Amount: rowSelected.Amount,\n                TempOR: rowSelected.Temp_OR,\n              };\n              d = [...d, newSelectedCheckForDeposit];\n              return d;\n            });\n          } else {\n\n          }\n        }}\n        inputsearchselector=\".manok\"\n      />\n      {/* <UpwardTable\n        isLoading={false}\n        ref={table}\n        rows={checkCollection}\n        column={checkColumns}\n        width={width}\n        height={height}\n        dataReadOnly={true}\n        onSelectionChange={(selectedRow, rowIndex) => {\n          const rowSelected = selectedRow[0];\n          if (selectedRow.length > 0) {\n            setSelectedRowsIndex(rowIndex)\n            setSelectedRows((d: any) => {\n              const newSelected: any = {\n                Deposit: \"Check\",//0\n                Check_No: rowSelected.Check_No,//1\n                Check_Date: rowSelected.Check_Date,//2\n                Bank: rowSelected.Bank_Branch,//3\n                Amount: rowSelected.Amount,//4\n                Name: rowSelected.Client_Name,//5\n                RowIndex: d.length + 1,//6\n                DRCode: rowSelected.DRCode,//7\n                ORNo: rowSelected.OR_No,//8\n                DRRemarks: rowSelected.DRRemarks,//9\n                IDNo: rowSelected.ID_No,//10\n                TempOR: rowSelected.Temp_OR,//11\n                Short: rowSelected.Short,//12\n              };\n              d = [...d, newSelected];\n              return d;\n            });\n\n\n            setCollectionForDeposit((d: any) => {\n              const newSelectedCheckForDeposit: any = {\n                Bank: rowSelected.Bank_Branch,\n                Check_No: rowSelected.Check_No,\n                Amount: rowSelected.Amount,\n                TempOR: rowSelected.Temp_OR,\n              };\n              d = [...d, newSelectedCheckForDeposit];\n              return d;\n            });\n          } else {\n\n          }\n        }}\n        inputsearchselector=\".manok\"\n      /> */}\n      {/*       \n      <Box\n        style={{\n          height: `${document.getElementById(\"concatiner\")?.getBoundingClientRect()\n            .height\n            }px`,\n          width: \"100%\",\n          overflowX: \"scroll\",\n          position: \"absolute\",\n        }}\n      >\n        <Table\n          ref={table}\n          isLoading={loadingCheckCollection}\n          columns={checkColumns}\n          rows={checkCollection}\n          table_id={\"Temp_OR\"}\n          isSingleSelection={true}\n          isRowFreeze={true}\n          dataSelection={(selection, data, code) => {\n            const rowSelected = data.filter(\n              (item: any) => item.Temp_OR === selection[0]\n            )[0];\n            if (rowSelected === undefined || rowSelected.length <= 0) {\n              return;\n            }\n\n            setSelectedRows((d: any) => {\n              const newSelected: any = {\n                Deposit: \"Check\",//0\n                Check_No: rowSelected.Check_No,//1\n                Check_Date: rowSelected.Check_Date,//2\n                Bank: rowSelected.Bank_Branch,//3\n                Amount: rowSelected.Amount,//4\n                Name: rowSelected.Client_Name,//5\n                RowIndex: d.length + 1,//6\n                DRCode: rowSelected.DRCode,//7\n                ORNo: rowSelected.OR_No,//8\n                DRRemarks: rowSelected.DRRemarks,//9\n                IDNo: rowSelected.ID_No,//10\n                TempOR: rowSelected.Temp_OR,//11\n                Short: rowSelected.Short,//12\n              };\n              d = [...d, newSelected];\n              return d;\n            });\n\n\n            setCollectionForDeposit((d: any) => {\n              const newSelectedCheckForDeposit: any = {\n                Bank: rowSelected.Bank_Branch,\n                Check_No: rowSelected.Check_No,\n                Amount: rowSelected.Amount,\n                TempOR: rowSelected.Temp_OR,\n              };\n              d = [...d, newSelectedCheckForDeposit];\n              return d;\n            });\n          }}\n        />\n      </Box> */}\n    </div>\n  );\n\n\n\n}\nfunction SelectedCollection() {\n\n  const {\n    selectedRows,\n    setSelectedRows,\n    setCollectionForDeposit,\n    setSelectedRowsCheckedIndex,\n    setSelectedRowsCashIndex,\n    checkCollection,\n    cashCollection\n  } = useContext(DepositContext);\n\n  const table = useRef<any>(null);\n  const selectedCollectionColumns = [\n    { field: \"Deposit\", headerName: \"Deposit\", flex: 1, minWidth: 170 },\n    { field: \"Check_No\", headerName: \"Check No\", flex: 1, minWidth: 170 },\n    {\n      field: \"Check_Date\",\n      headerName: \"Check Date\",\n      flex: 1,\n      minWidth: 170,\n    },\n    { field: \"Bank\", headerName: \"Bank/Branch\", flex: 1, minWidth: 200 },\n    { field: \"Amount\", headerName: \"Amount\", flex: 1, minWidth: 170 },\n    { field: \"Name\", headerName: \"Client Name\", flex: 1, minWidth: 400 },\n    // hide\n    { field: \"RowIndex\", headerName: \"RowIndex\", hide: true },\n    { field: \"DRCode\", headerName: \"DRCode\", hide: true },\n    { field: \"ORNo\", headerName: \"ORNo\", hide: true },\n    { field: \"DRRemarks\", headerName: \"DRRemarks\", hide: true },\n    { field: \"IDNo\", headerName: \"IDNo\", hide: true },\n    { field: \"TempOR\", headerName: \"TempOR\", hide: true },\n    { field: \"Short\", headerName: \"Short\", hide: true },\n  ];\n\n\n  const width = window.innerWidth - 70;\n  const height = window.innerHeight - 200;\n  return (\n    <div\n      style={{\n        marginTop: \"10px\",\n        width: \"100%\",\n        position: \"relative\",\n        flex: 1,\n      }}\n    >\n      <UpwardTable\n        isLoading={false}\n        ref={table}\n        rows={selectedRows}\n        column={selectedCollectionColumns}\n        width={width}\n        height={height}\n        dataReadOnly={true}\n        freeze={true}\n        isMultipleSelect={true}\n        onSelectionChange={(selectedRow, rowIndex) => {\n          const rowSelected = selectedRow[0];\n          if (selectedRow.length > 0) {\n            if (rowSelected.Deposit === \"Check\") {\n              const getRowIndex = checkCollection.findIndex((d: any) => d.Temp_OR === rowSelected.TempOR)\n\n              setSelectedRowsCheckedIndex((d: any) => {\n                const r = d.filter((d: any) => d !== getRowIndex)\n                return r\n              })\n            } else {\n              const getRowIndex = cashCollection.findIndex((d: any) => d.Temp_OR === rowSelected.TempOR)\n              setSelectedRowsCashIndex((d: any) => {\n                console.log(d, rowIndex)\n                const r = d.filter((d: any) => d !== getRowIndex)\n                return r\n              })\n\n            }\n            setSelectedRows((d: any) => {\n              return d.filter((item: any) => item.TempOR !== rowSelected.TempOR);\n            });\n            setCollectionForDeposit((d: any) => {\n              return d.filter((item: any) => item.TempOR !== rowSelected.TempOR);\n            });\n\n          } else {\n\n          }\n        }}\n        inputsearchselector=\".manok\"\n      />\n\n      {/* <Box\n        style={{\n          height: `${document.getElementById(\"concatiner\")?.getBoundingClientRect()\n            .height\n            }px`,\n          width: \"100%\",\n          overflowX: \"scroll\",\n          position: \"absolute\",\n        }}\n      >\n        <Table\n          ref={table}\n          isLoading={false}\n          columns={selectedCollectionColumns}\n          rows={selectedRows}\n          table_id={\"TempOR\"}\n          isSingleSelection={true}\n          isRowFreeze={false}\n          dataSelection={(selection, data, code) => {\n            const rowSelected = data.filter(\n              (item: any) => item.TempOR === selection[0]\n            )[0];\n            if (rowSelected === undefined || rowSelected.length <= 0) {\n              return;\n            }\n\n            setSelectedRows((d: any) => {\n              return d.filter((item: any) => item.TempOR !== selection[0]);\n            });\n            setCollectionForDeposit((d: any) => {\n              return d.filter((item: any) => item.TempOR !== selection[0]);\n            });\n          }}\n          getCellClassName={(params) => {\n            if (params.field === \"Deposit\" && params.value === \"Cash\") {\n              return \"cash\";\n            } else if (params.field === \"Deposit\" && params.value === \"Check\") {\n              return \"check\";\n            } else {\n              return \"\";\n            }\n          }}\n        />\n      </Box> */}\n    </div>\n  );\n\n\n}\nfunction CollectionForDeposit() {\n  const {\n    collectionForDeposit,\n    tableRows,\n    total,\n    setTotal,\n    TotalCashForDeposit,\n  } = useContext(DepositContext);\n  const table = useRef<any>(null);\n  useEffect(() => {\n    setTotal(\n      tableRows\n        ?.reduce((accumulator: any, currentValue: any) => {\n          return (\n            accumulator + parseFloat(currentValue.value3.replace(/,/g, \"\"))\n          );\n        }, 0.0)\n        .toLocaleString(\"en-US\", {\n          minimumFractionDigits: 2,\n          maximumFractionDigits: 2,\n        })\n    );\n  }, [tableRows, setTotal]);\n  const width = 600;\n  const height = window.innerHeight - 200;\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        gap: \"10px\",\n        height: \"auto \",\n      }}\n    >\n      <fieldset\n        style={{\n          flexDirection: \"column\",\n          gap: \"10px\",\n          border: \"1px solid #cbd5e1\",\n          borderRadius: \"5px\",\n          width: \"60%\",\n          position: \"relative\",\n        }}\n      >\n        <legend>Checks</legend>\n\n        <UpwardTable\n          isLoading={false}\n          ref={table}\n          rows={collectionForDeposit}\n          column={[\n            {\n              field: \"Bank\",\n              headerName: \"Bank/Branch\",\n              flex: 1,\n              width: 170,\n            },\n            {\n              field: \"Check_No\",\n              headerName: \"Check No\",\n              flex: 1,\n              width: 170,\n            },\n            {\n              field: \"Amount\",\n              headerName: \"Amount\",\n              flex: 1,\n              width: 300,\n            },\n          ]}\n          width={width}\n          height={height}\n          dataReadOnly={true}\n          freeze={true}\n          isMultipleSelect={true}\n          onSelectionChange={() => { }}\n          inputsearchselector=\".manok\"\n        />\n\n        {/* <div style={{ marginTop: \"10px\", width: \"100%\", position: \"relative\" }}>\n          <Box\n            style={{\n              height: \"530px\",\n              width: \"100%\",\n              overflowX: \"scroll\",\n              position: \"absolute\",\n            }}\n          >\n            <Table\n              ref={table}\n              isLoading={false}\n              checkboxSelection={false}\n              columns={[\n                {\n                  field: \"Bank\",\n                  headerName: \"Bank/Branch\",\n                  flex: 1,\n                  minWidth: 170,\n                },\n                {\n                  field: \"Check_No\",\n                  headerName: \"Check No\",\n                  flex: 1,\n                  minWidth: 170,\n                },\n                {\n                  field: \"Amount\",\n                  headerName: \"Amount\",\n                  flex: 1,\n                  minWidth: 170,\n                },\n              ]}\n              rows={collectionForDeposit}\n              table_id={\"TempOR\"}\n              isSingleSelection={true}\n              isRowFreeze={false}\n              isRowSelectable={() => false}\n              footerChildren={() => {\n                return <FooterCollectionForDepositCheck />;\n              }}\n              footerPaginationPosition={\"left-right\"}\n              showFooterSelectedCount={false}\n            />\n          </Box>\n        </div> */}\n      </fieldset>\n      <fieldset\n        style={{\n          flexDirection: \"column\",\n          gap: \"10px\",\n          padding: \"15px\",\n          border: \"1px solid #cbd5e1\",\n          borderRadius: \"5px\",\n          alignSelf: \"flex-end\",\n          display: \"flex\",\n          width: \"40%\",\n        }}\n      >\n        <legend\n          style={{\n            color: total === TotalCashForDeposit ? \"green\" : \"#ec4899\",\n          }}\n        >\n          Cash ( {TotalCashForDeposit} )\n        </legend>\n        <table\n          style={{\n            border: \"2px solid black\",\n            borderCollapse: \"collapse\",\n            marginTop: \"10px\",\n            width: \"100%\",\n          }}\n        >\n        \n          <thead>\n            <tr\n              style={{\n                borderBottom: \"2px solid black\",\n                fontSize: \"14px\",\n              }}\n            >\n              <th\n                style={{\n                  borderRight: \"2px solid black\",\n                }}\n              >\n                Denominations\n              </th>\n              <th\n                style={{\n                  borderRight: \"2px solid black\",\n                }}\n              >\n                QTY\n              </th>\n              <th\n                style={{\n                  borderRight: \"2px solid black\",\n                }}\n              >\n                Amount\n              </th>\n            </tr>\n          </thead>\n          <tbody>\n            {tableRows?.map((items: any, idx: number) => {\n              return (\n                <TrComponent\n                  key={idx}\n                  value1={items.value1}\n                  value2={items.value2}\n                  value3={items.value3}\n                  idx={idx}\n                />\n              );\n            })}\n          </tbody>\n          <tfoot>\n            <tr\n              style={{\n                borderTop: \"2px solid black\",\n                height: \"50px\",\n              }}\n            >\n              <td colSpan={3}>\n                <div\n                  style={{\n                    display: \"flex\",\n                    justifyContent: \"flex-end\",\n                    padding: \"0 10px  \",\n                  }}\n                >\n                  <div\n                    style={{\n                      display: \"flex\",\n                      alignItems: \"center\",\n                      width: \"250px\",\n                    }}\n                  >\n                    <span style={{ fontSize: \"14px\", marginRight: \"5px\" }}>\n                      Total Cash Deposit:\n                    </span>\n                    <input\n                      style={{\n                        fontWeight: \"bold\",\n                        border: \"1px solid black\",\n                        textAlign: \"right\",\n                        fontSize: \"15px\",\n                        width: \"117px\",\n                      }}\n                      value={total}\n                      onChange={(e) => {\n                        setTotal(e.target.value);\n                      }}\n                      readOnly={true}\n                    />\n                  </div>\n                </div>\n              </td>\n            </tr>\n          </tfoot>\n        </table>\n      </fieldset>\n    </div>\n  );\n}\nfunction TrComponent({ value1, value2, value3, idx }: any) {\n  const { updateTableRowsInput } = useContext(DepositContext);\n\n  const [input1, setInput1] = useState(value1);\n  const [input2, setInput2] = useState(value2);\n  const [input3, setInput3] = useState(value3);\n  const InputStyle: CSSProperties = {\n    textAlign: \"right\",\n    height: \"20px\",\n    borderRight: \"none\",\n    borderLeft: \"none\",\n    borderTop: \"none\",\n    outline: \"none\",\n    borderBottom: \"1px solid #cbd5e1\",\n    padding: \"0 8px\",\n    width: \"100%\",\n    fontSize: \"11px\",\n    margin: \"0\",\n\n  };\n\n  return (\n    <tr style={{ margin: \"0\", padding: \"0 !important\" }} >\n      <td\n        style={{\n          borderRight: \"2px solid black\", margin: \"0\", padding: \"0\"\n        }}\n      >\n        <input\n          type=\"text\"\n          style={InputStyle}\n          value={input1}\n          onChange={(e) => setInput1(e.target.value)}\n          readOnly={true}\n\n        />\n      </td>\n      <td\n        style={{\n          borderRight: \"2px solid black\",\n          overflow: \"hidden\", margin: 0, padding: \"0 !important\"\n        }}\n      >\n        <input\n          style={InputStyle}\n          value={input2}\n          onChange={(e) => {\n            let input1Value = input1;\n            setInput2(e.target.value);\n            if (input1.includes(\",\")) {\n              input1Value = input1.replace(/,/g, \"\").toString();\n            }\n            const valueFor3 = (\n              parseFloat(input1Value) *\n              (isNaN(parseInt(e.target.value)) ? 0 : parseInt(e.target.value))\n            ).toLocaleString(\"en-US\", {\n              minimumFractionDigits: 2,\n              maximumFractionDigits: 2,\n            });\n            setInput3(valueFor3);\n\n            updateTableRowsInput(\n              {\n                value1,\n                value2: e.target.value,\n                value3: valueFor3,\n              },\n              idx\n            );\n          }}\n        />\n      </td>\n      <td\n        style={{\n          borderRight: \"2px solid black\", margin: \"0\", padding: \"0 !important\"\n        }}\n      >\n        <input\n          type=\"text\"\n          style={InputStyle}\n          value={input3}\n          onChange={(e) => setInput3(e.target.value)}\n          readOnly={true}\n        />\n      </td>\n    </tr>\n  );\n}\nfunction FooterCollectionForDepositCheck() {\n  const { collectionForDeposit } = useContext(DepositContext);\n  return (\n    <Box\n      sx={{\n        px: 2,\n        py: 1,\n        display: \"flex\",\n        justifyContent: \"flex-end\",\n        borderTop: \"2px solid #e2e8f0\",\n      }}\n    >\n      <strong>\n        Total:{\" \"}\n        {collectionForDeposit\n          .reduce((sum: number, obj: any) => {\n            return sum + parseFloat(obj.Amount.replace(/,/g, \"\"));\n          }, 0)\n          .toLocaleString(\"en-US\", {\n            minimumFractionDigits: 2,\n            maximumFractionDigits: 2,\n          })}\n      </strong>\n    </Box>\n  );\n}\nfunction setNewStateValue(dispatch: any, obj: any) {\n  Object.entries(obj).forEach(([field, value]) => {\n    dispatch({ type: \"UPDATE_FIELD\", field, value });\n  });\n}\n","import { useState, ReactElement } from \"react\";\n\nexport default function useMultipleComponent(steps: ReactElement[]) {\n  const [currentStepIndex, setCurrentStepIndex] = useState(0);\n\n  function next() {\n    setCurrentStepIndex((i) => {\n      if (i >= steps.length - 1) {\n        return i;\n      }\n      return i + 1;\n    });\n  }\n  function back() {\n    setCurrentStepIndex((i) => {\n      if (i <= 0) {\n        return i;\n      }\n      return i + 1;\n    });\n  }\n  function goTo(index: number) {\n    setCurrentStepIndex(index);\n  }\n  return {\n    step: steps[currentStepIndex],\n    goTo,\n    back,\n    next,\n    isFirstStep: currentStepIndex !== 0,\n    isLastStep: currentStepIndex === steps.length - 1,\n    currentStepIndex,\n  };\n}\n","import { useContext, useState } from \"react\";\nimport { useQuery } from \"react-query\";\nimport { AuthContext, User } from \"../components/AuthContext\";\nimport {\n  GridRowSelectionModel,\n  GridCellParams,\n  GridTreeNode,\n} from \"@mui/x-data-grid\";\nimport ModalWithTable from \"../components/ModalWithTable\";\nimport { flushSync } from \"react-dom\";\nimport { AxiosResponse, AxiosInstance } from \"axios\";\nimport { GridRowParams } from \"@mui/x-data-grid\";\ninterface QueryModalTableParamsType {\n  link?: {\n    url: string;\n    queryUrlName: string;\n  };\n  uniqueId: string;\n  queryKey: string;\n  responseDataKey: string;\n  columns: Array<any>;\n  onSelected?: (selectedRowData: Array<any>, data: Array<any>) => void;\n  onRemoveSelected?: (data: Array<any>) => void;\n  onSuccess?: (data: any) => void;\n  searchRef?: React.RefObject<HTMLInputElement>;\n  onCellKeyDown?: any;\n  onCloseFunction?: (search: any) => void;\n  CustomizeAxios?: (\n    myAxios: AxiosInstance,\n    user: User | null,\n    link: QueryModalTableParamsType[\"link\"],\n    search?: string\n  ) => Promise<AxiosResponse<any, any>>;\n  isRowSelectable?: ((params: GridRowParams<any>) => boolean) | undefined;\n  getCellClassName?:\n    | ((params: GridCellParams<any, any, any, GridTreeNode>) => string)\n    | undefined;\n}\n\nasync function CustomizeAxiosFunc(\n  myAxios: AxiosInstance,\n  user: User | null,\n  link: QueryModalTableParamsType[\"link\"],\n  search: string = \"\"\n) {\n  return myAxios.get(`${link?.url}?${link?.queryUrlName}=${search}`, {\n    headers: {\n      Authorization: `Bearer ${user?.accessToken}`,\n    },\n  });\n}\n\nconst useQueryModalTable = ({\n  link,\n  uniqueId,\n  queryKey,\n  responseDataKey,\n  columns,\n  onSelected = () => {},\n  onRemoveSelected = () => {},\n  onSuccess = () => {},\n  searchRef,\n  onCellKeyDown,\n  onCloseFunction = () => {},\n  CustomizeAxios = CustomizeAxiosFunc,\n  isRowSelectable,\n  getCellClassName,\n}: QueryModalTableParamsType) => {\n  const { myAxios, user } = useContext(AuthContext);\n  const [show, setShowModal] = useState(false);\n  const [rows, setRows] = useState<GridRowSelectionModel>([]);\n  async function customizeAxiostool(search: string = \"\") {\n    return await CustomizeAxios(myAxios, user, link, search);\n  }\n  const { isLoading, refetch } = useQuery({\n    queryKey: queryKey,\n    queryFn: async () => await customizeAxiostool(),\n    onSuccess: (res) => {\n      const response = res as any;\n      setRows(response.data[responseDataKey]);\n      onSuccess(response);\n    },\n    refetchOnWindowFocus: false,\n  });\n\n  const openModal = (search: string = \"\") => {\n    flushSync(() => {\n      setShowModal(true);\n    });\n    if (searchRef?.current) {\n      searchRef.current.value = search;\n      customizeAxiostool(search).then((res: any) => {\n        if (!res?.data.success) {\n          return alert(`Error : ${res?.data.message}`);\n        }\n        const response = res as any;\n        setRows(response.data[responseDataKey]);\n        if (searchRef?.current) searchRef.current.focus();\n      });\n    }\n  };\n\n  const closeModal = () => {\n    setShowModal(false);\n    if (onCloseFunction) {\n      onCloseFunction(searchRef?.current?.value);\n    }\n  };\n\n  const ModalComponent = (\n    <ModalWithTable\n      getCellClassName={getCellClassName}\n      searchRef={searchRef}\n      showModal={show}\n      onCloseModal={() => {\n        setShowModal(false);\n        if (onCloseFunction) {\n          onCloseFunction(searchRef?.current?.value);\n        }\n      }}\n      onClickCloseIcon={() => {\n        setShowModal(false);\n        if (onCloseFunction) {\n          onCloseFunction(searchRef?.current?.value);\n        }\n      }}\n      searchOnChange={(e) => {\n        // myAxios\n        //   .get(`${link.url}?${link.queryUrlName}=${e.target.value}`, {\n        //     headers: {\n        //       Authorization: `Bearer ${user?.accessToken}`,\n        //     },\n        //   })\n        //   .then((res: any) => {\n        //     if (!res?.data.success) {\n        //       return alert(`Error : ${res?.data.message}`);\n        //     }\n        //     const response = res as any;\n        //     setRows(response.data[responseDataKey]);\n        //   });\n      }}\n      onSearchKeyEnter={(value) => {\n        customizeAxiostool(value).then((res: any) => {\n          if (!res?.data.success) {\n            return alert(`Error : ${res?.data.message}`);\n          }\n          const response = res as any;\n          setRows(response.data[responseDataKey]);\n        });\n      }}\n      onCellKeyDown={onCellKeyDown}\n      height={300}\n      isLoading={isLoading}\n      queryKey={queryKey}\n      columns={columns}\n      onSelectionChange={(rowSelectionModel, data) => {\n        if (rowSelectionModel.length <= 0) {\n          return onRemoveSelected(data);\n        }\n        const selectedIDs = new Set(rowSelectionModel);\n        const selectedRowData = data.filter((row: any) => {\n          return selectedIDs.has(row[uniqueId].toString());\n        });\n        if (selectedRowData.length <= 0) return;\n        onSelected(selectedRowData, data);\n      }}\n      id={uniqueId}\n      rows={rows}\n      setRows={setRows}\n      isRowSelectable={isRowSelectable}\n    />\n  );\n\n  return {\n    show,\n    rows,\n    isLoading,\n    openModal,\n    closeModal,\n    ModalComponent,\n    refetch,\n  };\n};\n\nexport default useQueryModalTable;\n","import Swal from \"sweetalert2\";\n\nexport function codeCondfirmationAlert(props: {\n  cb: (userCodeConfirmation: string) => void;\n  isUpdate: boolean;\n  isConfirm?: () => void;\n  isDeclined?: () => void;\n  text?: string;\n}) {\n  Swal.fire({\n    title: `Are you sure!`,\n    html: props?.text\n      ? props?.text\n      : props.isUpdate\n      ? `Are you sure you want to make this change?`\n      : \"Are you sure you want to delete this?\",\n    icon: \"warning\",\n    input: \"text\",\n    inputAttributes: {\n      autocapitalize: \"off\",\n    },\n    showCancelButton: true,\n    confirmButtonText: \"Save\",\n    confirmButtonColor: \"green\",\n    showLoaderOnConfirm: true,\n    preConfirm: async (userCodeConfirmation) => {\n      try {\n        props.cb(userCodeConfirmation);\n      } catch (error) {\n        Swal.showValidationMessage(`\n            Request failed: ${error}\n          `);\n      }\n    },\n    allowOutsideClick: () => !Swal.isLoading(),\n  }).then((result) => {\n    if (result.isConfirmed) {\n      if (props.isConfirm) {\n        return props.isConfirm();\n      }\n    }\n    if (props.isDeclined) {\n      props.isDeclined();\n    }\n  });\n}\n\nexport function saveCondfirmationAlert(props: {\n  isConfirm?: () => void;\n  isDeclined?: () => void;\n  text?: string;\n}) {\n  Swal.fire({\n    title: \"Are you sure?\",\n    text: props?.text ? props?.text : \"Do you want to proceed with saving?\",\n    icon: \"warning\",\n    showCancelButton: true,\n    confirmButtonColor: \"#3085d6\",\n    cancelButtonColor: \"#d33\",\n    confirmButtonText: \"Yes, save it!\",\n  }).then((result) => {\n    if (result.isConfirmed) {\n      if (props.isConfirm) {\n        return props.isConfirm();\n      }\n    }\n    if (props.isDeclined) {\n      props.isDeclined();\n    }\n  });\n}\n","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\"\n}), 'Add');\nexports.default = _default;","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 6v3l4-4-4-4v3c-4.42 0-8 3.58-8 8 0 1.57.46 3.03 1.24 4.26L6.7 14.8c-.45-.83-.7-1.79-.7-2.8 0-3.31 2.69-6 6-6zm6.76 1.74L17.3 9.2c.44.84.7 1.79.7 2.8 0 3.31-2.69 6-6 6v-3l-4 4 4 4v-3c4.42 0 8-3.58 8-8 0-1.57-.46-3.03-1.24-4.26z\"\n}), 'Autorenew');\nexports.default = _default;","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M17 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V7l-4-4zm-5 16c-1.66 0-3-1.34-3-3s1.34-3 3-3 3 1.34 3 3-1.34 3-3 3zm3-10H5V5h10v4z\"\n}), 'Save');\nexports.default = _default;","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bigint: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is');\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}"],"names":["style","position","top","left","transform","width","bgcolor","boxShadow","p","heigth","ModalWithTable","_ref","height","isLoading","columns","queryKey","onSelectionChange","rows","setRows","id","onCloseModal","showModal","onClickCloseIcon","searchOnChange","_ref$title","title","searchRef","_ref$onSearchKeyEnter","onCellKeyDown","onSearchKeyEnter","isRowSelectable","getCellClassName","mainId","generateRandomClass","_jsx","Modal","open","onClose","children","_jsxs","Box","sx","Typography","variant","component","mb","TextField","size","label","marginBottom","fullWidth","onChange","InputProps","inputRef","onKeyDown","e","_searchRef$current","code","preventDefault","current","value","keyBoardSelectionTable","className","concat","Table","isSingleSelection","isRowFreeze","dataSelection","selection","data","table_id","right","IconButton","color","onClick","CloseIcon","Math","floor","random","el","_rows$","document","querySelectorAll","classList","add","firstRowParent","querySelector","firstInput","focus","event","MouseEvent","bubbles","cancelable","view","window","dispatchEvent","addEventListener","es","key","remove","keyBoardUpDown","forEach","idx","_rows$idx","_rows","_rows$idx2","_rows2","length","TableContext","createContext","rowSelectionModel","footerChildren","footerPaginationPosition","showFooterSelectedCount","forwardRef","ref","_ref$CustomFooterComp","CustomFooterComponent","DefaultooterComponent","_ref$checkboxSelectio","checkboxSelection","_ref$footerChildren","_ref$footerPagination","_ref$showFooterSelect","_useState","useState","_useState2","_slicedToArray","selectedRows","setSelectedRows","useImperativeHandle","removeSelection","getSelectedRows","filter","item","includes","freezeArray","Provider","DataGrid","slots","loadingOverlay","LinearProgress","footer","initialState","pagination","paginationModel","pageSize","loading","getRowId","row","col","hide","showCellVerticalBorder","showColumnVerticalBorder","rowHeight","columnHeaderHeight","pageSizeOptions","_objectSpread","fill","background","padding","fontSize","display","fontWeight","onRowSelectionModelChange","selectionSet","Set","s","has","__","rowNode","_toConsumableArray","disableVirtualization","Pagination","_ref2","page","onPageChange","apiRef","useGridApiContext","pageCount","useGridSelector","gridPageCountSelector","MuiPagination","count","newPage","CustomPagination","props","GridPagination","ActionsComponent","_useContext","useContext","columnGap","justifyContent","px","alignItems","flexDirection","flex","TextInput","input","icon","_ref$iconPosition","iconPosition","_ref$disableIcon","disableIcon","_ref$onIconClick","onIconClick","useId","htmlFor","zIndex","cursor","pointerEvents","SelectInput","select","selectRef","_ref2$datasource","datasource","_ref2$values","values","_ref2$display","map","itm","ButtonField","_ref3","buttonRetRef","button","_ref3$tooltipText","tooltipText","_ref3$disabled","disabled","UpwardTable","UpwardTableRef","_pages$pageNumber","column","dataReadOnly","_ref$onSelectionChang","_ref$isMultipleSelect","isMultipleSelect","_ref$freeze","freeze","_ref$inputsearchselec","inputsearchselector","_ref$isRowSelectable","_ref$unSelectable","unSelectable","pages","setPages","_useState3","_useState4","pageNumber","setPageNumber","onSelectionChangeRef","useRef","onKeyDownRef","_useState5","_useState6","setColumns","_useState7","_useState8","hoveredColumn","setHoveredColumn","_useState9","_useState10","_useState11","_useState12","lastSelectedRowIndex","setLastSelectedRowIndex","_useState13","_useState14","selectedItems","setSelectedItems","divRef","_useState15","_useState16","_clickTimeout","_setClickTimeout","useEffect","_pages","arr","chunkSize","arguments","undefined","result","i","push","slice","formatArrayIntoChunks","startResize","index","stopPropagation","startX","clientX","startWidth","doDrag","moveEvent","newWidth","updatedColumns","stopDrag","removeEventListener","handleMouseEnter","handleMouseLeave","resetTableSelected","scrollIntoView","block","behavior","d","setSelectRows","selectRows","prevIndex","_row$querySelector","newPrevIndex","tagName","divInput","_row$querySelector2","minHeight","tabIndex","defaultValue","headerName","readOnly","onMouseDown","onMouseEnter","onMouseLeave","rowIndex","shiftKey","rangeStart","min","rangeEnd","max","newSelectedRows","selectedItemsParams","_getIndexAndData","selectedRowData","removeNullValue","newSelectedRowsFiltered","getIndexAndData","ctrlKey","metaKey","handleRowClick","onDoubleClick","clearTimeout","timeoutId","setTimeout","handleRowDoubleClick","handleRowKeyDown","colIndex","field","type","defaultCashBreakDown","value1","value2","value3","buttons","reducer","state","action","_defineProperty","DepositContext","cashCollection","setCashCollection","checkCollection","setCheckCollection","selectedCollection","setSelectedCollection","collectionForDeposit","setCollectionForDeposit","tableRows","updateTableRowsInput","LoadingCashTable","LoadingCheckTable","setTotal","total","TotalCashForDeposit","loadingSearchByDepositSlip","Deposit","_queryFn","_mutationFn","_mutationFn2","_mutationFn3","_queryFn2","_queryFn3","depositSearch","inputSearchRef","refSlipCode","refDateDepo","refBankAcctCode","refBankAcctName","bankDepositSearch","_refTempSlipCode","refBankAcctCodeTag","refBankAcctNameTag","refAcctID","refAcctName","refClassification","refSubAccount","refShortName","AuthContext","myAxios","user","_useMultipleComponent","useMultipleComponent","CashCollection","CheckCollection","SelectedCollection","CollectionForDeposit","currentStepIndex","step","goTo","selectedRowsCashIndex","setSelectedRowsCashIndex","selectedRowsCheckedIndex","setSelectedRowsCheckedIndex","tableRowsInputValue","setTableRowsInputValue","depositMode","setDepositMode","_useState17","_useState18","reduce","accumulator","currentValue","Check_No","parseFloat","Amount","replace","toLocaleString","minimumFractionDigits","maximumFractionDigits","_useQuery","useQuery","queryFn","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","get","headers","Authorization","accessToken","abrupt","sent","stop","apply","refetchOnWindowFocus","onSuccess","response","wait","then","slipcode","collectionID","format","Date","LoadingDepositSlipCode","RefetchDepositSlipCode","refetch","_useQueryModalTable","useQueryModalTable","link","url","queryUrlName","uniqueId","responseDataKey","onSelected","_selectedRowData$","_selectedRowData$2","_selectedRowData$3","_selectedRowData$4","_selectedRowData$5","_selectedRowData$6","_selectedRowData$7","console","log","Account_No","Account_Name","IDNo","Desc","Account_ID","Short","client_name","Sub_Acct","ShortName","closeDepositBanks","ModalDepostitBanks","ModalComponent","openDepositBanks","openModal","isLoadingDepostitBanks","closeModal","_useMutation","useMutation","mutationKey","mutationFn","_x","_callee2","variables","_context2","post","res","resposnse","success","resetRefs","refetchCashCollection","refetchCheckCollection","Swal","message","timer","addDepositMutation","mutate","addDepositMutationLoading","_useMutation2","_x2","_callee3","_context3","updateDepositMutation","updateDepositMutationLoading","_useMutation3","_x3","_callee4","_context4","obj","cash","check","checks","cash_breakdown","refDate","cashIndex","SlipCode","checkIndex","filteredCash","_refSlipCode$current","filteredCheck","_refSlipCode$current2","rowSelected","newSelected","Check_Date","Bank","Name","Client_Name","RowIndex","DRCode","ORNo","OR_No","DRRemarks","ID_No","TempOR","Temp_OR","Bank_Branch","newSelectedCheckForDeposit","searchByDepositSlip","_useQueryModalTable2","closeDeposit","onCloseFunction","ModalDeposit","openDeposit","isLoadingDeposit","_useQuery2","_callee5","_context5","loadingCashCollection","_useQuery3","_callee6","_context6","loadingCheckCollection","disabledFields","LoadingButton","_inputSearchRef$curre","Button","startIcon","AddIcon","_refBankAcctCode$curr","_refBankAcctCode$curr2","_refSlipCode$current3","_refDateDepo$current","_refBankAcctCode$curr3","_refBankAcctName$curr","trim","depositSlip","depositdate","BankAcctCode","BankAcctName","BankAcctCodeTag","BankAcctNameTag","AcctID","AcctName","Classification","SubAccount","codeCondfirmationAlert","isUpdate","cb","userCodeConfirmation","JSON","stringify","saveCondfirmationAlert","isConfirm","SaveIcon","text","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","isConfirmed","gap","AutorenewIcon","_refBankAcctCode$curr4","AccountBalanceIcon","_refBankAcctCode$curr5","border","outline","backgroundColor","borderWidth","fontFamily","lineHeight","listStyle","margin","textAlign","transition","verticalAlign","whiteSpace","userSelect","touchAction","overflow","bottom","slideAnimation","fields","activeButton","_useContext2","table","_table$current","innerWidth","innerHeight","marginTop","cellClassName","selectedRow","_useContext3","_table$current2","minWidth","align","_useContext4","getRowIndex","findIndex","_useContext5","borderRadius","alignSelf","borderCollapse","borderBottom","borderRight","items","TrComponent","borderTop","colSpan","marginRight","target","_useState19","_useState20","input1","setInput1","_useState21","_useState22","input2","setInput2","_useState23","_useState24","input3","setInput3","InputStyle","borderLeft","input1Value","toString","valueFor3","isNaN","parseInt","steps","setCurrentStepIndex","back","isFirstStep","isLastStep","CustomizeAxiosFunc","_CustomizeAxiosFunc","search","_args","_customizeAxiostool","_ref$onSelected","_ref$onRemoveSelected","onRemoveSelected","_ref$onSuccess","_ref$onCloseFunction","_ref$CustomizeAxios","CustomizeAxios","show","setShowModal","customizeAxiostool","_args2","flushSync","alert","_searchRef$current2","_searchRef$current3","selectedIDs","_preConfirm","html","inputAttributes","autocapitalize","showLoaderOnConfirm","preConfirm","error","allowOutsideClick","isDeclined","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","ReactPropTypesSecret","emptyFunction","emptyFunctionWithReset","resetWarningCache","module","shim","propName","componentName","location","propFullName","secret","err","Error","name","getShim","isRequired","ReactPropTypes","array","bigint","bool","func","number","object","string","symbol","any","arrayOf","element","elementType","instanceOf","node","objectOf","oneOf","oneOfType","shape","exact","checkPropTypes","PropTypes","_objectWithoutProperties","source","excluded","Object","getOwnPropertySymbols","sourceSymbolKeys","indexOf","prototype","propertyIsEnumerable","call"],"sourceRoot":""}