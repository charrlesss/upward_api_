{"version":3,"file":"static/js/698.676ef6b0.chunk.js","mappings":"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","sources":["components/Helmet.tsx","feautures/Admin/Task/Accounting/Deposit.tsx","lib/confirmationAlert.ts","../node_modules/@mui/icons-material/AccountBalance.js","../node_modules/@mui/icons-material/Add.js","../node_modules/@mui/icons-material/Autorenew.js","../node_modules/@mui/icons-material/Save.js"],"sourcesContent":["\r\nimport { Helmet } from \"react-helmet\";\r\n\r\nconst PageHelmet = ({ title = '' }: { title: string }) => {\r\n    const imgUrl = process.env.REACT_APP_IMAGE_URL;\r\n    return (\r\n        <Helmet>\r\n            <title>{title}</title>\r\n            <link rel=\"icon\" type=\"image/png\" href={`${imgUrl}/logo.png`} />\r\n        </Helmet>\r\n    );\r\n};\r\n\r\nexport default PageHelmet;","import {\n  useState,\n  createContext,\n  useContext,\n  CSSProperties,\n  useEffect,\n  useRef,\n  forwardRef,\n  Fragment,\n  useImperativeHandle,\n} from \"react\";\nimport { useMutation, useQuery } from \"react-query\";\nimport { AuthContext } from \"../../../../components/AuthContext\";\nimport { Button } from \"@mui/material\";\nimport useQueryModalTable from \"../../../../hooks/useQueryModalTable\";\nimport LoadingButton from \"@mui/lab/LoadingButton\";\nimport AddIcon from \"@mui/icons-material/Add\";\nimport SaveIcon from \"@mui/icons-material/Save\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport Swal from \"sweetalert2\";\nimport { wait } from \"@testing-library/user-event/dist/utils\";\nimport {\n  codeCondfirmationAlert,\n  saveCondfirmationAlert,\n} from \"../../../../lib/confirmationAlert\";\nimport { TextInput } from \"../../../../components/UpwardFields\";\nimport { format } from \"date-fns\";\nimport AutorenewIcon from \"@mui/icons-material/Autorenew\";\nimport AccountBalanceIcon from \"@mui/icons-material/AccountBalance\";\nimport \"../../../../style/laoding.css\";\nimport PageHelmet from \"../../../../components/Helmet\";\nimport SearchIcon from \"@mui/icons-material/Search\";\nimport { useUpwardTableModalSearchSafeMode } from \"../../../../components/DataGridViewReact\";\n\nconst defaultCashBreakDown = [\n  { value1: \"1,000.00\", value2: \"\", value3: \"0.00\" },\n  { value1: \"500.00\", value2: \"\", value3: \"0.00\" },\n  { value1: \"200.00\", value2: \"\", value3: \"0.00\" },\n  { value1: \"100.00\", value2: \"\", value3: \"0.00\" },\n  { value1: \"50.00\", value2: \"\", value3: \"0.00\" },\n  { value1: \"20.00\", value2: \"\", value3: \"0.00\" },\n  { value1: \"10.00\", value2: \"\", value3: \"0.00\" },\n  { value1: \"5.00\", value2: \"\", value3: \"0.00\" },\n  { value1: \"2.00\", value2: \"\", value3: \"0.00\" },\n  { value1: \"1.00\", value2: \"\", value3: \"0.00\" },\n  { value1: \".50\", value2: \"\", value3: \"0.00\" },\n  { value1: \".25\", value2: \"\", value3: \"0.00\" },\n  { value1: \".10\", value2: \"\", value3: \"0.00\" },\n  { value1: \".05\", value2: \"\", value3: \"0.00\" },\n  { value1: \".01\", value2: \"\", value3: \"0.00\" },\n];\nconst buttons = [\n  {\n    title: \"Cash Collection\",\n    index: 0,\n  },\n  {\n    title: \"Check Collection\",\n    index: 1,\n  },\n  {\n    title: \"Selected Collection\",\n    index: 2,\n  },\n  {\n    title: \"Collection for Deposit\",\n    index: 3,\n  },\n];\nconst cashColumns = [\n  {\n    key: \"OR_No\",\n    label: \"OR No.\",\n    width: 270,\n  },\n  {\n    key: \"OR_Date\",\n    label: \"OR Date\",\n    width: 270,\n  },\n  {\n    key: \"Amount\",\n    label: \"Amount\",\n    width: 200,\n    type: \"number\",\n    cellClassName: \"super-app-theme--cell\",\n  },\n  {\n    key: \"Client_Name\",\n    label: \"Client Name\",\n    flex: 1,\n    width: 540,\n  },\n  {\n    key: \"DRCode\",\n    label: \"DRCode\",\n    hide: true,\n  },\n  {\n    key: \"ID_No\",\n    label: \"ID_No\",\n    hide: true,\n  },\n  {\n    key: \"Short\",\n    label: \"Short\",\n    hide: true,\n  },\n  {\n    key: \"Temp_OR\",\n    label: \"Temp_OR\",\n    hide: true,\n  },\n];\n\nexport const reducer = (state: any, action: any) => {\n  switch (action.type) {\n    case \"UPDATE_FIELD\":\n      return {\n        ...state,\n        [action.field]: action.value,\n      };\n    default:\n      return state;\n  }\n};\n\nconst DepositContext = createContext<any>({\n  cashCollection: [],\n  setCashCollection: () => {},\n  checkCollection: [],\n  setCheckCollection: () => {},\n  selectedCollection: [],\n  setSelectedCollection: () => {},\n  collectionForDeposit: [],\n  setCollectionForDeposit: () => {},\n  tableRows: [],\n  updateTableRowsInput: () => {},\n  LoadingCashTable: false,\n  LoadingCheckTable: false,\n  setTotal: () => {},\n  total: \"0.00\",\n  TotalCashForDeposit: \"0.00\",\n  loadingSearchByDepositSlip: false,\n});\n\nexport default function Deposit() {\n  const [activeTab, setActiveTab] = useState(0);\n  const [buttonPosition, setButtonPosition] = useState<any>({});\n  const buttonsRef = useRef<Array<HTMLButtonElement | null>>([]);\n\n  const cashTable = useRef<any>(null);\n  const checkTable = useRef<any>(null);\n  const selectedTable = useRef<any>(null);\n  const collectionCheckTable = useRef<any>(null);\n\n  const depositSearch = useRef<HTMLInputElement>(null);\n  const inputSearchRef = useRef<HTMLInputElement>(null);\n  const refSlipCode = useRef<HTMLInputElement>(null);\n  const refDateDepo = useRef<HTMLInputElement>(null);\n  const refBankAcctCode = useRef<HTMLInputElement>(null);\n  const refBankAcctName = useRef<HTMLInputElement>(null);\n\n  const bankDepositSearch = useRef<HTMLInputElement>(null);\n  const _refTempSlipCode = useRef<string>(\"\");\n\n  const refBankAcctCodeTag = useRef(\"\");\n  const refBankAcctNameTag = useRef(\"\");\n  const refAcctID = useRef(\"\");\n  const refAcctName = useRef(\"\");\n  const refClassification = useRef(\"\");\n  const refSubAccount = useRef(\"\");\n  const refShortName = useRef(\"\");\n\n  const { myAxios, user } = useContext(AuthContext);\n  const { currentStepIndex, goTo } = useMultipleComponent([0, 1, 2, 3]);\n  const [cashCollection, setCashCollection] = useState<any>([]);\n  const [checkCollection, setCheckCollection] = useState<any>([]);\n  const [selectedRows, setSelectedRows] = useState<any>([]);\n  const [collectionForDeposit, setCollectionForDeposit] = useState<any>([]);\n  const [tableRowsInputValue, setTableRowsInputValue] =\n    useState<Array<{ value1: string; value2: string; value3: string }>>(\n      defaultCashBreakDown\n    );\n\n  const [selectedRowsCashIndex, setSelectedRowsCashIndex] = useState<any>([]);\n  const [selectedRowsCheckedIndex, setSelectedRowsCheckedIndex] = useState<any>(\n    []\n  );\n\n  const [depositMode, setDepositMode] = useState(\"\");\n  const [total, setTotal] = useState(\"0.00\");\n\n  const disabledFields = depositMode === \"\";\n\n  const TotalCashForDeposit = selectedRows\n    .reduce((accumulator: number, currentValue: any) => {\n      const dd =\n        currentValue.Check_No || currentValue.Check_No !== \"\"\n          ? 0\n          : parseFloat(currentValue.Amount.replace(/,/g, \"\"));\n      return accumulator + dd;\n    }, 0.0)\n    .toLocaleString(\"en-US\", {\n      minimumFractionDigits: 2,\n      maximumFractionDigits: 2,\n    });\n  const updateTableRowsInput = (\n    fields: { value1: string; value2: string; value3: string },\n    idx: number\n  ) => {\n    setTableRowsInputValue((d) => {\n      return d.map((item, index) => {\n        if (idx === index) {\n          item = { ...item, ...fields };\n        }\n        return item;\n      });\n    });\n  };\n  const { isLoading: LoadingDepositSlipCode, refetch: RefetchDepositSlipCode } =\n    useQuery({\n      queryKey: \"deposit-slipcode\",\n      queryFn: async () =>\n        await myAxios.get(`/task/accounting/get-deposit-slipcode`, {\n          headers: {\n            Authorization: `Bearer ${user?.accessToken}`,\n          },\n        }),\n      refetchOnWindowFocus: false,\n      onSuccess: (data) => {\n        const response = data as any;\n        wait(100).then(() => {\n          if (refSlipCode.current) {\n            refSlipCode.current.value = response.data.slipcode[0].collectionID;\n            _refTempSlipCode.current = response.data.slipcode[0].collectionID;\n          }\n        });\n      },\n    });\n\n  const { mutate: addDepositMutation, isLoading: addDepositMutationLoading } =\n    useMutation({\n      mutationKey: \"add-deposit\",\n      mutationFn: async (variables: any) => {\n        return await myAxios.post(\"/task/accounting/add-deposit\", variables, {\n          headers: {\n            Authorization: `Bearer ${user?.accessToken}`,\n          },\n        });\n      },\n      onSuccess: (res) => {\n        const resposnse = res as any;\n        if (resposnse.data.success) {\n          wait(100).then(() => {\n            resetTables();\n            resetRefs();\n            setTableRowsInputValue(defaultCashBreakDown);\n            setSelectedRows([]);\n            setCollectionForDeposit([]);\n            setSelectedRowsCashIndex([]);\n            setSelectedRowsCheckedIndex([]);\n\n            refetchCashCollection();\n            refetchCheckCollection();\n            RefetchDepositSlipCode();\n            setDepositMode(\"\");\n            goTo(0);\n          });\n\n          return Swal.fire({\n            position: \"center\",\n            icon: \"success\",\n            title: resposnse.data.message,\n            timer: 1500,\n          });\n        }\n        return Swal.fire({\n          position: \"center\",\n          icon: \"warning\",\n          title: resposnse.data.message,\n          timer: 1500,\n        });\n      },\n    });\n  const {\n    mutate: updateDepositMutation,\n    isLoading: updateDepositMutationLoading,\n  } = useMutation({\n    mutationKey: \"update-deposit\",\n    mutationFn: async (variables: any) => {\n      return await myAxios.post(\"/task/accounting/update-deposit\", variables, {\n        headers: {\n          Authorization: `Bearer ${user?.accessToken}`,\n        },\n      });\n    },\n    onSuccess: (res) => {\n      const resposnse = res as any;\n      if (resposnse.data.success) {\n        wait(100).then(() => {\n          resetTables();\n          resetRefs();\n          setTableRowsInputValue(defaultCashBreakDown);\n          setSelectedRows([]);\n          setCollectionForDeposit([]);\n          setSelectedRowsCashIndex([]);\n          setSelectedRowsCheckedIndex([]);\n\n          refetchCashCollection();\n          refetchCheckCollection();\n          RefetchDepositSlipCode();\n          setDepositMode(\"\");\n          goTo(0);\n        });\n        return Swal.fire({\n          position: \"center\",\n          icon: \"success\",\n          title: resposnse.data.message,\n          timer: 1500,\n        });\n      }\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: resposnse.data.message,\n        timer: 1500,\n      });\n    },\n  });\n  const { mutate: searchByDepositSlip, isLoading: loadingSearchByDepositSlip } =\n    useMutation({\n      mutationKey: \"search-deposit-cash-check\",\n      mutationFn: async (variables: any) => {\n        return await myAxios.post(\n          \"/task/accounting/search-cash-check\",\n          variables,\n          {\n            headers: {\n              Authorization: `Bearer ${user?.accessToken}`,\n            },\n          }\n        );\n      },\n      onSuccess: (res) => {\n        const obj = res.data.data.obj;\n        const cash = res.data.data.cash;\n        const check = res.data.data.checks;\n        const cash_breakdown = res.data.data.cash_breakdown;\n\n        setCashCollection([]);\n        setCheckCollection([]);\n        setSelectedRows([]);\n        setCollectionForDeposit([]);\n        setTableRowsInputValue([]);\n        wait(100).then(() => {\n          collectionCheckTable.current.resetTable();\n          selectedTable.current.resetTable();\n          cashTable.current.resetTable();\n          checkTable.current.resetTable();\n\n          if (refBankAcctCode.current)\n            refBankAcctCode.current.value = obj.refBankAcctCode;\n          if (refBankAcctName.current)\n            refBankAcctName.current.value = obj.refBankAcctName;\n          if (refDateDepo.current)\n            refDateDepo.current.value = format(\n              new Date(obj.refDate),\n              \"yyyy-MM-dd\"\n            );\n\n          refBankAcctCodeTag.current = obj?.refBankAcctCodeTag;\n          refBankAcctNameTag.current = obj?.refBankAcctNameTag;\n          refAcctID.current = obj?.refAcctID;\n          refAcctName.current = obj?.refAcctName;\n          refShortName.current = obj?.client_name;\n          refClassification.current = obj?.refClassification;\n          refSubAccount.current = obj?.refSubAccount;\n\n          cashTable.current.setDataFormated(cash);\n          checkTable.current.setDataFormated(check);\n          setCashCollection(cash);\n          setCheckCollection(check);\n          setTableRowsInputValue(cash_breakdown);\n\n          setTimeout(() => {\n            cash.forEach((d: any, idx: number) => {\n              if (\n                refSlipCode.current &&\n                d.SlipCode === refSlipCode.current.value\n              ) {\n                const row = cashTable.current\n                  .parentElement()\n                  .querySelector(`.tr-row-${idx}`);\n                const col = row.querySelectorAll(\"td\")[0];\n                const checkbox = col.querySelector(\"input\") as HTMLInputElement;\n                if (checkbox) {\n                  checkbox.click();\n                }\n              }\n            });\n\n            check.forEach((d: any, idx: number) => {\n              if (\n                refSlipCode.current &&\n                d.SlipCode === refSlipCode.current.value\n              ) {\n                const row = checkTable.current\n                  .parentElement()\n                  .querySelector(`.tr-row-${idx}`);\n                const col = row.querySelectorAll(\"td\")[0];\n                const checkbox = col.querySelector(\"input\") as HTMLInputElement;\n                if (checkbox) {\n                  checkbox.click();\n                }\n              }\n            });\n          }, 200);\n        });\n        setDepositMode(\"edit\");\n      },\n    });\n\n  const { isLoading: loadingCashCollection, refetch: refetchCashCollection } =\n    useQuery({\n      queryKey: \"get-cash-collection\",\n      queryFn: async () =>\n        await myAxios.get(`/task/accounting/get-cash-collection`, {\n          headers: {\n            Authorization: `Bearer ${user?.accessToken}`,\n          },\n        }),\n      onSuccess: (data) => {\n        const response = data as any;\n        if (depositMode === \"edit\") {\n          setCashCollection((d: any) => {\n            const filteredData = d.filter((itm: any) => {\n              return (\n                refSlipCode.current &&\n                itm.SlipCode === refSlipCode.current.value\n              );\n            });\n            return [...response.data.cash, ...filteredData];\n          });\n        } else {\n          setCashCollection(response.data.cash);\n          wait(100).then(() => {\n            cashTable.current.setDataFormated(response.data.cash);\n          });\n        }\n      },\n    });\n  const { isLoading: loadingCheckCollection, refetch: refetchCheckCollection } =\n    useQuery({\n      queryKey: \"get-check-collection\",\n      queryFn: async () =>\n        await myAxios.get(`/task/accounting/get-check-collection`, {\n          headers: {\n            Authorization: `Bearer ${user?.accessToken}`,\n          },\n        }),\n      onSuccess: (data) => {\n        const response = data as any;\n        if (depositMode === \"edit\") {\n          setCashCollection((d: any) => {\n            const filteredData = d.filter((itm: any) => {\n              return (\n                refSlipCode.current &&\n                itm.SlipCode === refSlipCode.current.value\n              );\n            });\n            return [...response.data.check, ...filteredData];\n          });\n        } else {\n          setCheckCollection(response.data.check);\n          wait(100).then(() => {\n            checkTable.current.setDataFormated(response.data.check);\n          });\n        }\n      },\n    });\n  const handleOnSave = (e: any) => {\n    e.preventDefault();\n    if (\n      refBankAcctCode.current &&\n      refBankAcctCode.current?.value.length >= 200\n    ) {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: \"Bank Account is too long!\",\n        timer: 1500,\n      });\n    }\n    if (refBankAcctCode.current && refBankAcctCode.current?.value === \"\") {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: \"Please provide bank account\",\n        timer: 1500,\n      }).then((result) => {\n        wait(350).then(() => {\n          bankOpenModal(refBankAcctCode.current?.value);\n        });\n      });\n    }\n    if (selectedRows.length <= 0) {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: \"No selected collection to be deposit\",\n        timer: 1500,\n      });\n    }\n    if (TotalCashForDeposit.trim() !== total.trim()) {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: \"Cash breakdown is not balance\",\n        timer: 1500,\n      });\n    }\n    const state = {\n      depositSlip: refSlipCode.current?.value,\n      depositdate: refDateDepo.current?.value,\n      BankAcctCode: refBankAcctCode.current?.value,\n      BankAcctName: refBankAcctName.current?.value,\n      BankAcctCodeTag: refBankAcctCodeTag.current,\n      BankAcctNameTag: refBankAcctNameTag.current,\n      AcctID: refAcctID.current,\n      AcctName: refAcctName.current,\n      Classification: refClassification.current,\n      SubAccount: refSubAccount.current,\n      ShortName: refShortName.current,\n    };\n    if (depositMode === \"edit\") {\n      codeCondfirmationAlert({\n        isUpdate: true,\n        cb: (userCodeConfirmation) => {\n          updateDepositMutation({\n            ...state,\n            userCodeConfirmation,\n            selectedCollection: JSON.stringify(selectedRows),\n            tableRowsInputValue: JSON.stringify(tableRowsInputValue),\n          });\n        },\n      });\n    } else {\n      saveCondfirmationAlert({\n        isConfirm: () => {\n          addDepositMutation({\n            ...state,\n            selectedCollection: JSON.stringify(selectedRows),\n            tableRowsInputValue: JSON.stringify(tableRowsInputValue),\n          });\n        },\n      });\n    }\n  };\n  function resetRefs() {\n    if (refBankAcctCode.current) {\n      refBankAcctCode.current.value = \"\";\n    }\n    if (refBankAcctName.current) {\n      refBankAcctName.current.value = \"\";\n    }\n    if (bankDepositSearch.current) bankDepositSearch.current.value = \"\";\n    refBankAcctCodeTag.current = \"\";\n    refBankAcctNameTag.current = \"\";\n    refAcctID.current = \"\";\n    refAcctName.current = \"\";\n    refClassification.current = \"\";\n    refSubAccount.current = \"\";\n    refShortName.current = \"\";\n  }\n  function resetTables() {\n    cashTable.current.resetTable();\n    checkTable.current.resetTable();\n    selectedTable.current.resetTable();\n    collectionCheckTable.current.resetTable();\n  }\n  const {\n    UpwardTableModalSearch: DepositUpwardTableModalSearch,\n    openModal: depositOpenModal,\n    closeModal: depositCloseModal,\n  } = useUpwardTableModalSearchSafeMode({\n    size: \"medium\",\n    link: \"/task/accounting/search-deposit\",\n    column: [\n      { key: \"Date\", label: \"Date\", width: 150 },\n      { key: \"SlipCode\", label: \"Slip Code\", width: 170 },\n      {\n        key: \"BankAccount\",\n        label: \"Bank Account\",\n        width: 170,\n      },\n      {\n        key: \"AccountName\",\n        label: \"Account Name\",\n        flex: 1,\n      },\n    ],\n    getSelectedItem: async (rowItm: any, _: any, rowIdx: any, __: any) => {\n      if (rowItm) {\n        console.log(rowItm);\n        searchByDepositSlip({ SlipCode: rowItm[1] });\n        wait(100).then(() => {\n          if (refSlipCode.current) {\n            refSlipCode.current.value = rowItm[1];\n          }\n        });\n        depositCloseModal();\n      }\n    },\n  });\n  const {\n    UpwardTableModalSearch: BankUpwardTableModalSearch,\n    openModal: bankOpenModal,\n    closeModal: bankCloseModal,\n  } = useUpwardTableModalSearchSafeMode({\n    link: \"/task/accounting/getBanks\",\n    column: [\n      { key: \"Account_Type\", label: \"Account_Type\", width: 80 },\n      { key: \"Account_No\", label: \"Account_No\", width: 130 },\n      {\n        key: \"Account_Name\",\n        label: \"Account_Name\",\n        width: 200,\n      },\n      {\n        key: \"IDNo\",\n        label: \"\",\n        width: 0,\n        hide: true,\n      },\n      {\n        key: \"Desc\",\n        label: \"\",\n        width: 0,\n        hide: true,\n      },\n      {\n        key: \"Account_ID\",\n        label: \"\",\n        width: 0,\n        hide: true,\n      },\n      {\n        key: \"Short\",\n        label: \"\",\n        width: 0,\n        hide: true,\n      },\n      {\n        key: \"client_name\",\n        label: \"\",\n        width: 0,\n        hide: true,\n      },\n      {\n        key: \"Sub_Acct\",\n        label: \"\",\n        width: 0,\n        hide: true,\n      },\n      {\n        key: \"ShortName\",\n        label: \"\",\n        width: 0,\n        hide: true,\n      },\n    ],\n    getSelectedItem: async (rowItm: any, _: any, rowIdx: any, __: any) => {\n      if (rowItm) {\n        wait(100).then(() => {\n          if (refBankAcctCode.current)\n            refBankAcctCode.current.value = rowItm[1]; // selectedRowData[0]?.Account_No;\n          if (refBankAcctName.current)\n            refBankAcctName.current.value = rowItm[2]; // selectedRowData[0]?.Account_Name;\n\n          refBankAcctCodeTag.current = rowItm[3]; // selectedRowData[0]?.IDNo;\n          refBankAcctNameTag.current = rowItm[4]; // selectedRowData[0]?.Desc;\n          refAcctID.current = rowItm[5]; //selectedRowData[0]?.Account_ID;\n          refAcctName.current = rowItm[6]; //selectedRowData[0]?.Short;\n          refShortName.current = rowItm[7]; //selectedRowData[0]?.client_name;\n          refClassification.current = rowItm[8]; //selectedRowData[0]?.Sub_Acct;\n          refSubAccount.current = rowItm[9]; //selectedRowData[0]?.ShortName;\n        });\n        bankCloseModal();\n      }\n    },\n  });\n\n  useEffect(() => {\n    setButtonPosition(buttonsRef.current[0]?.getBoundingClientRect());\n  }, []);\n  \n  const tabs = [\n    {\n      id: 0,\n      label: \"Cash Collection\",\n      content: <CashCollection />,\n    },\n    {\n      id: 1,\n      label: \"Check Collection\",\n      content: <CheckCollection />,\n    },\n    {\n      id: 2,\n      label: \"Selected Collection\",\n      content: <SelectedCollection />,\n    },\n    {\n      id: 3,\n      label: \"Collection for Deposit\",\n      content: <CollectionForDeposit />,\n    },\n  ];\n\n  return (\n    <>\n      <PageHelmet title=\"Deposit\" />\n      <DepositUpwardTableModalSearch />\n      <BankUpwardTableModalSearch />\n      <div\n        style={{\n          display: \"flex\",\n          flexDirection: \"column\",\n          width: \"100%\",\n          height: \"100%\",\n          flex: 1,\n          padding: \"5px\",\n          background: \"#F1F1F1\",\n        }}\n      >\n        <div\n          style={{\n            display: \"flex\",\n            alignItems: \"center\",\n            columnGap: \"5px\",\n            marginBottom: \"10px\",\n          }}\n        >\n          <TextInput\n            label={{\n              title: \"Search: \",\n              style: {\n                fontSize: \"12px\",\n                fontWeight: \"bold\",\n                width: \"50px\",\n              },\n            }}\n            input={{\n              className: \"search-input-up-on-key-down\",\n              type: \"search\",\n              onKeyDown: (e) => {\n                if (e.key === \"Enter\" || e.key === \"NumpadEnter\") {\n                  e.preventDefault();\n                  depositOpenModal(inputSearchRef.current?.value);\n                }\n              },\n              style: { width: \"500px\" },\n            }}\n            icon={<SearchIcon sx={{ fontSize: \"18px\" }} />}\n            onIconClick={(e) => {\n              e.preventDefault();\n              if (inputSearchRef.current)\n                depositOpenModal(inputSearchRef.current.value);\n            }}\n            inputRef={inputSearchRef}\n          />\n          {disabledFields && (\n            <Button\n              sx={{\n                height: \"22px\",\n                fontSize: \"11px\",\n              }}\n              variant=\"contained\"\n              startIcon={<AddIcon sx={{ width: 15, height: 15 }} />}\n              id=\"entry-header-save-button\"\n              onClick={() => {\n                setDepositMode(\"add\");\n              }}\n            >\n              New\n            </Button>\n          )}\n          <LoadingButton\n            sx={{\n              height: \"22px\",\n              fontSize: \"11px\",\n            }}\n            id=\"save-entry-header\"\n            color=\"primary\"\n            variant=\"contained\"\n            type=\"submit\"\n            onClick={handleOnSave}\n            disabled={disabledFields}\n            startIcon={<SaveIcon sx={{ width: 15, height: 15 }} />}\n            loading={updateDepositMutationLoading || addDepositMutationLoading}\n          >\n            Save\n          </LoadingButton>\n          {!disabledFields && (\n            <Button\n              sx={{\n                height: \"22px\",\n                fontSize: \"11px\",\n              }}\n              variant=\"contained\"\n              startIcon={<CloseIcon sx={{ width: 15, height: 15 }} />}\n              color=\"error\"\n              onClick={() => {\n                Swal.fire({\n                  title: \"Are you sure?\",\n                  text: \"You won't be able to revert this!\",\n                  icon: \"warning\",\n                  showCancelButton: true,\n                  confirmButtonColor: \"#3085d6\",\n                  cancelButtonColor: \"#d33\",\n                  confirmButtonText: \"Yes, cancel it!\",\n                }).then((result) => {\n                  if (result.isConfirmed) {\n                    wait(100).then(() => {\n                      resetTables();\n                      resetRefs();\n                      setTableRowsInputValue(defaultCashBreakDown);\n                      setSelectedRows([]);\n                      setCollectionForDeposit([]);\n                      setSelectedRowsCashIndex([]);\n                      setSelectedRowsCheckedIndex([]);\n\n                      refetchCashCollection();\n                      refetchCheckCollection();\n                      RefetchDepositSlipCode();\n                      setDepositMode(\"\");\n                      goTo(0);\n                    });\n                  }\n                });\n              }}\n            >\n              Cancel\n            </Button>\n          )}\n        </div>\n        <form\n          onKeyDown={(e) => {\n            if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n              e.preventDefault();\n              return;\n            }\n          }}\n          style={{\n            display: \"flex\",\n            gap: \"10px\",\n          }}\n        >\n          {LoadingDepositSlipCode ? (\n            \"Loading...\"\n          ) : (\n            <TextInput\n              label={{\n                title: \"Slip Code: \",\n                style: {\n                  fontSize: \"12px\",\n                  fontWeight: \"bold\",\n                  width: \"70px\",\n                },\n              }}\n              input={{\n                disabled: disabledFields,\n                className: \"search-input-up-on-key-down\",\n                type: \"text\",\n                style: { width: \"200px\" },\n              }}\n              inputRef={refSlipCode}\n              icon={<AutorenewIcon sx={{ fontSize: \"18px\" }} />}\n              onIconClick={(e) => {\n                e.preventDefault();\n                RefetchDepositSlipCode();\n              }}\n            />\n          )}\n          <TextInput\n            label={{\n              title: \"Deposit Date: \",\n              style: {\n                fontSize: \"12px\",\n                fontWeight: \"bold\",\n                width: \"80px\",\n              },\n            }}\n            input={{\n              defaultValue: format(new Date(), \"yyyy-MM-dd\"),\n              className: \"search-input-up-on-key-down\",\n              type: \"date\",\n              style: { width: \"200px\" },\n              disabled: disabledFields,\n            }}\n            inputRef={refDateDepo}\n          />\n          <TextInput\n            label={{\n              title: \"Bank Account: \",\n              style: {\n                fontSize: \"12px\",\n                fontWeight: \"bold\",\n                width: \"100px\",\n              },\n            }}\n            input={{\n              className: \"search-input-up-on-key-down\",\n              type: \"text\",\n              style: { width: \"200px\" },\n              onKeyDown: (e) => {\n                if (e.key === \"Enter\" || e.key === \"NumpadEnter\") {\n                  e.preventDefault();\n                  bankOpenModal(refBankAcctCode.current?.value);\n                }\n              },\n              disabled: disabledFields,\n            }}\n            inputRef={refBankAcctCode}\n            icon={\n              <AccountBalanceIcon\n                sx={{\n                  fontSize: \"18px\",\n                  color: disabledFields ? \"gray\" : \"black\",\n                }}\n              />\n            }\n            onIconClick={(e) => {\n              e.preventDefault();\n              bankOpenModal(refBankAcctCode.current?.value);\n            }}\n            disableIcon={disabledFields}\n          />\n\n          <TextInput\n            label={{\n              title: \"Account Name: \",\n              style: {\n                fontSize: \"12px\",\n                fontWeight: \"bold\",\n                width: \"100px\",\n              },\n            }}\n            input={{\n              className: \"search-input-up-on-key-down\",\n              type: \"text\",\n              style: { width: \"200px\" },\n              readOnly: true,\n              disabled: disabledFields,\n            }}\n            inputRef={refBankAcctName}\n          />\n          <button\n            // ref={submitButton}\n            style={{ display: \"none\" }}\n            type=\"submit\"\n          ></button>\n        </form>\n        <br />\n        <div style={{ display: \"flex\" }}>\n          {tabs.map((tab, index) => (\n            <button\n              ref={(el) => (buttonsRef.current[index] = el)}\n              key={tab.id}\n              onClick={(el) => {\n                setActiveTab(tab.id);\n                setButtonPosition(el.currentTarget.getBoundingClientRect());\n              }}\n              style={{\n                width: \"auto\",\n                fontSize: \"11px\",\n                padding: \"10px\",\n                cursor: \"pointer\",\n                backgroundColor: activeTab === tab.id ? \"white\" : \"transparent\",\n                color: activeTab === tab.id ? \"#0074cc\" : \"#000\",\n                border: \"none\",\n                borderRight:\n                  activeTab === tab.id\n                    ? tab.id === 0\n                      ? \"none\"\n                      : \"1px solid #0074cc\"\n                    : tab.id === 0\n                    ? \"none\"\n                    : \"1px solid #64748b\",\n                borderLeft:\n                  activeTab === tab.id\n                    ? tab.id === 2\n                      ? \"none\"\n                      : \"1px solid #0074cc\"\n                    : tab.id === 2\n                    ? \"none\"\n                    : \"1px solid #64748b\",\n                borderTop:\n                  activeTab === tab.id\n                    ? \"1px solid #0074cc\"\n                    : \"1px solid #64748b\",\n\n                // borderBottom:\n                //   activeTab === tab.id ? \"2px solid #007BFF\" : \"2px solid #ccc\",\n                textTransform: \"uppercase\",\n                fontWeight: \"bold\",\n              }}\n            >\n              {tab.label}\n            </button>\n          ))}\n        </div>\n        {/* <div>\n          <div style={{ display: \"flex\" }}>\n            {buttons.map((item, idx) => {\n              return (\n                <button\n                  key={idx}\n                  disabled={disabledFields}\n                  style={{\n                    border: \"1px solid #c0c0c0\",\n                    outline: \"none\",\n                    backgroundColor:\n                      currentStepIndex === idx\n                        ? \"#c0c0c0\"\n                        : \"rgba(51, 51, 51, 0.05)\",\n                    borderWidth: \"0\",\n                    color: \"black\",\n                    cursor: \"pointer\",\n                    display: \"inline-block\",\n                    fontFamily: `\"Haas Grot Text R Web\", \"Helvetica Neue\", Helvetica, Arial, sans-serif`,\n                    fontSize: \"14px\",\n                    fontWeight: \"500\",\n                    lineHeight: \"20px\",\n                    listStyle: \"none\",\n                    margin: \"0\",\n                    padding: \"10px 12px\",\n                    textAlign: \"center\",\n                    verticalAlign: \"baseline\",\n                    whiteSpace: \"nowrap\",\n                    userSelect: \"none\",\n                    touchAction: \"manipulation\",\n                    position: \"relative\",\n                    overflow: \"hidden\",\n                    borderRadius: \"0px\",\n                  }}\n                  onClick={() => {\n                    if (idx === 0) {\n                      refetchCashCollection();\n                    } else if (idx === 1) {\n                      refetchCheckCollection();\n                    }\n                    goTo(idx);\n                  }}\n                >\n                  <span\n                    style={{\n                      position: \"absolute\",\n                      top: 0,\n                      bottom: 0,\n                      left: 0,\n                      right: 0,\n                      background: \"rgba(206, 214, 211, 0.18)\",\n                      transition: \"all 200ms\",\n                      transform: slideAnimation(currentStepIndex, idx),\n                    }}\n                  ></span>\n                  {item.title}\n                </button>\n              );\n            })}\n          </div>\n        </div> */}\n        <DepositContext.Provider\n          value={{\n            cashCollection,\n            setCashCollection,\n            checkCollection,\n            setCheckCollection,\n            selectedRows,\n            setSelectedRows,\n            collectionForDeposit,\n            setCollectionForDeposit,\n            total,\n            setTotal,\n            TotalCashForDeposit,\n            tableRows: tableRowsInputValue,\n            setTableRowsInputValue,\n            updateTableRowsInput,\n            loadingCheckCollection,\n            loadingCashCollection,\n            selectedRowsCashIndex,\n            setSelectedRowsCashIndex,\n            selectedRowsCheckedIndex,\n            setSelectedRowsCheckedIndex,\n            cashTable,\n            checkTable,\n            selectedTable,\n            collectionCheckTable,\n            refetchCheckCollection,\n            refetchCashCollection,\n            disabledFields,\n          }}\n        >\n          <div\n            style={{\n              padding: \"7px\",\n              flex: 1,\n              display: \"flex\",\n              // borderTop: \"2px solid #007BFF\",\n              position: \"relative\",\n              flexDirection: \"column\",\n            }}\n          >\n            <div\n              style={{\n                position: \"absolute\",\n                top: \"-2px\",\n                left: 0,\n                width: `${(buttonPosition?.left as number) - 5 || 0}px`,\n                height: \"1px\",\n                background: \"#64748b\",\n              }}\n            ></div>\n            <div\n              style={{\n                position: \"absolute\",\n                top: \"-2px\",\n                right: 0,\n                left: `${(buttonPosition?.right as number) - 5 || 0}px`,\n                height: \"1px\",\n                background: \"#64748b\",\n              }}\n            ></div>\n            {tabs.map((tab) => (\n              <div\n                key={tab.id}\n                style={{\n                  display: activeTab === tab.id ? \"flex\" : \"none\", // Show only the active tab\n                  flex: 1,\n                  flexDirection: \"column\",\n                }}\n              >\n                {tab.content}\n              </div>\n            ))}\n          </div>\n          {/* <div\n            style={{\n              display: \"flex\",\n              flexDirection: \"column\",\n              flex: 1,\n            }}\n            id=\"concatiner\"\n          >\n            <div style={{ display: currentStepIndex === 0 ? \"block\" : \"none\" }}>\n              <CashCollection />\n            </div>\n            <div style={{ display: currentStepIndex === 1 ? \"block\" : \"none\" }}>\n              <CheckCollection />\n            </div>\n            <div style={{ display: currentStepIndex === 2 ? \"block\" : \"none\" }}>\n              <SelectedCollection />\n            </div>\n            <div style={{ display: currentStepIndex === 3 ? \"block\" : \"none\" }}>\n              <CollectionForDeposit />\n            </div>\n          </div> */}\n        </DepositContext.Provider>\n\n        {(loadingSearchByDepositSlip ||\n          updateDepositMutationLoading ||\n          addDepositMutationLoading) && (\n          <div className=\"loading-component\">\n            <div className=\"loader\"></div>\n          </div>\n        )}\n        <style>\n          {`\n            #upward-cutom-table tr td{\n            border-right:1px solid #f1f5f9 !important;\n            }\n\n            #upward-cutom-table tr:nth-child(odd) td {\n            background-color: #ffffff !important;\n            }\n            #upward-cutom-table tr:nth-child(even) td {\n            background-color: #f5f5f5 !important;\n            }\n            #upward-cutom-table tr.selected td {\n            background-color: #0076d7 !important;\n            color: #ffffff !important;\n            border-right:1px solid white !important;\n              border-bottom:1px solid white !important;\n            }\n\n            #upward-cutom-table tr.selected td input {\n            color: #ffffff !important;\n            }\n\n            `}\n        </style>\n      </div>\n    </>\n  );\n}\n\nfunction CashCollection() {\n  const { cashCollection, setSelectedRows, cashTable, disabledFields } =\n    useContext(DepositContext);\n\n  return (\n    <div\n      style={{\n        flex: 1,\n        marginTop: \"10px\",\n        width: \"100%\",\n        position: \"relative\",\n      }}\n    >\n      <DepositTable\n        disbaleTable={disabledFields}\n        ref={cashTable}\n        columns={cashColumns}\n        rows={cashCollection}\n        getSelectedItem={(\n          rowItm: any,\n          colItm: any,\n          rowIdx: any,\n          colIdx: any\n        ) => {\n          const rowSelected = rowItm;\n          setSelectedRows((d: any) => {\n            const newSelected: any = {\n              Deposit: \"Cash\",\n              Check_No: \"\",\n              Check_Date: \"\",\n              Bank: \"\",\n              Amount: rowSelected[2],\n              Name: rowSelected[3],\n              RowIndex: d.length + 1,\n              DRCode: rowSelected[4],\n              ORNo: rowSelected[0],\n              DRRemarks: \"\",\n              IDNo: rowSelected[5],\n              TempOR: rowSelected[7],\n              Short: rowSelected[6],\n            };\n\n            d = [...d, newSelected];\n            return d;\n          });\n        }}\n      />\n    </div>\n  );\n}\nfunction CheckCollection() {\n  const {\n    checkCollection,\n    setSelectedRows,\n    checkTable,\n    setCollectionForDeposit,\n    disabledFields,\n  } = useContext(DepositContext);\n  const checkColumns = [\n    {\n      key: \"OR_No\",\n      label: \"OR No.\",\n      width: 170,\n    },\n    {\n      key: \"OR_Date\",\n      label: \"OR Date\",\n      width: 170,\n    },\n    {\n      key: \"Check_No\",\n      label: \"Check No\",\n      width: 170,\n    },\n    {\n      key: \"Check_Date\",\n      label: \"Check Date\",\n      width: 170,\n    },\n    {\n      key: \"Amount\",\n      label: \"Amount\",\n      width: 160,\n      align: \"right\",\n      type: \"number\",\n    },\n    {\n      key: \"Bank_Branch\",\n      label: \"Bank/Branch\",\n      width: 300,\n    },\n    {\n      key: \"Client_Name\",\n      label: \"Client Name\",\n      width: 300,\n    },\n    {\n      key: \"Temp_OR\",\n      hide: true,\n    },\n    {\n      key: \"DRCode\",\n      hide: true,\n    },\n    {\n      key: \"DRRemarks\",\n      hide: true,\n    },\n    {\n      key: \"ID_No\",\n      hide: true,\n    },\n    {\n      key: \"Short\",\n      hide: true,\n    },\n    {\n      key: \"SlipCode\",\n      hide: true,\n    },\n  ];\n\n  return (\n    <div\n      style={{\n        marginTop: \"10px\",\n        width: \"100%\",\n        position: \"relative\",\n        flex: 1,\n      }}\n    >\n      <DepositTable\n        disbaleTable={disabledFields}\n        ref={checkTable}\n        columns={checkColumns}\n        rows={checkCollection}\n        getSelectedItem={(\n          rowItm: any,\n          colItm: any,\n          rowIdx: any,\n          colIdx: any\n        ) => {\n          const rowSelected = rowItm;\n          setSelectedRows((d: any) => {\n            const newSelected: any = {\n              Deposit: \"Check\", //0\n              Check_No: rowSelected[2], //1\n              Check_Date: rowSelected[3], //2\n              Bank: rowSelected[5], //3\n              Amount: rowSelected[4], //4\n              Name: rowSelected[6], //5\n              DRCode: rowSelected[8], //7\n              ORNo: rowSelected[0], //8\n              DRRemarks: rowSelected[9], //9\n              IDNo: rowSelected[10], //10\n              TempOR: rowSelected[7], //11\n              Short: rowSelected[11], //12\n            };\n            d = [...d, newSelected];\n            return d;\n          });\n\n          setCollectionForDeposit((d: any) => {\n            const newSelectedCheckForDeposit: any = {\n              Bank: rowSelected[5],\n              Check_No: rowSelected[2],\n              Amount: rowSelected[4],\n              TempOR: rowSelected[7],\n            };\n            d = [...d, newSelectedCheckForDeposit];\n            return d;\n          });\n        }}\n      />\n    </div>\n  );\n}\nfunction SelectedCollection() {\n  const {\n    setSelectedRows,\n    selectedRows,\n    selectedTable,\n    cashTable,\n    checkTable,\n    setCollectionForDeposit,\n    collectionForDeposit,\n    collectionCheckTable,\n  } = useContext(DepositContext);\n\n  const selectedCollectionColumns = [\n    { key: \"Deposit\", label: \"Deposit\", width: 170 },\n    { key: \"Check_No\", label: \"Check No\", width: 170 },\n    {\n      key: \"Check_Date\",\n      label: \"Check Date\",\n      width: 170,\n    },\n    { key: \"Bank\", label: \"Bank/Branch\", width: 200 },\n    {\n      key: \"Amount\",\n      label: \"Amount\",\n      width: 170,\n      type: \"number\",\n    },\n    { key: \"Name\", label: \"Client Name\", width: 400 },\n    // hide\n    { key: \"DRCode\", label: \"DRCode\", hide: true },\n    { key: \"ORNo\", label: \"ORNo\", hide: true },\n    { key: \"DRRemarks\", label: \"DRRemarks\", hide: true },\n    { key: \"IDNo\", label: \"IDNo\", hide: true },\n    { key: \"TempOR\", label: \"TempOR\", hide: true },\n    { key: \"Short\", label: \"Short\", hide: true },\n  ];\n\n  return (\n    <div\n      style={{\n        marginTop: \"10px\",\n        width: \"100%\",\n        position: \"relative\",\n        flex: 1,\n      }}\n    >\n      <DepositTableSelected\n        ref={selectedTable}\n        columns={selectedCollectionColumns}\n        rows={selectedRows}\n        getSelectedItem={(\n          rowItm: any,\n          colItm: any,\n          rowIdx: any,\n          colIdx: any\n        ) => {\n          const rowSelected = rowItm;\n          const selectedData = selectedTable.current.getData();\n\n          if (rowSelected[0] === \"Cash\") {\n            const cashData = cashTable.current.getData();\n            const getSelectedRow = cashTable.current.getSelectedRow();\n            const rowIdx = cashData.findIndex(\n              (itm: any) => itm[7] === rowSelected[10]\n            );\n            const index = getSelectedRow.indexOf(rowIdx);\n            if (index !== -1) {\n              getSelectedRow.splice(index, 1);\n            }\n            cashTable.current.setSelectedRow(getSelectedRow);\n          } else {\n            const cashData = checkTable.current.getData();\n            const getSelectedRow = checkTable.current.getSelectedRow();\n            const rowIdx = cashData.findIndex(\n              (itm: any) => itm[7] === rowSelected[10]\n            );\n            const index = getSelectedRow.indexOf(rowIdx);\n            if (index !== -1) {\n              getSelectedRow.splice(index, 1);\n            }\n            checkTable.current.setSelectedRow(getSelectedRow);\n          }\n\n          setSelectedRows((d: any) => {\n            if (d.length === 1 && d[0].TempOR === rowSelected[10]) {\n              return [];\n            }\n            return d.filter((itm: any) => itm.TempOR !== rowSelected[10]);\n          });\n\n          const newData = (d: any) => {\n            if (d.length === 1 && d[0].TempOR === rowSelected[10]) {\n              return [];\n            }\n            return d.filter((item: any) => item.TempOR !== rowSelected[10]);\n          };\n          const dd = newData(collectionForDeposit);\n          setCollectionForDeposit(dd);\n\n          const columns = collectionCheckTable.current?.getColumns();\n          collectionCheckTable.current?.setData(\n            dd.map((itm: any) => {\n              return columns.map((col: any) => itm[col.key]);\n            })\n          );\n\n          if (\n            selectedData.length === 1 &&\n            selectedData[0][10] === rowSelected[10]\n          ) {\n            return selectedTable.current.setData([]);\n          } else {\n            const newSelectedData = selectedData.filter((itm: any) => {\n              return itm[10] !== rowSelected[10];\n            });\n            selectedTable.current.setData(newSelectedData);\n          }\n        }}\n      />\n    </div>\n  );\n}\nfunction CollectionForDeposit() {\n  const {\n    collectionForDeposit,\n    tableRows,\n    total,\n    setTotal,\n    TotalCashForDeposit,\n    collectionCheckTable,\n  } = useContext(DepositContext);\n\n  useEffect(() => {\n    setTotal(\n      tableRows\n        ?.reduce((accumulator: any, currentValue: any) => {\n          return (\n            accumulator + parseFloat(currentValue.value3.replace(/,/g, \"\"))\n          );\n        }, 0.0)\n        .toLocaleString(\"en-US\", {\n          minimumFractionDigits: 2,\n          maximumFractionDigits: 2,\n        })\n    );\n  }, [tableRows, setTotal]);\n\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        gap: \"10px\",\n        height: \"auto \",\n      }}\n    >\n      <fieldset\n        style={{\n          flexDirection: \"column\",\n          gap: \"10px\",\n          border: \"1px solid #cbd5e1\",\n          borderRadius: \"5px\",\n          width: \"70%\",\n          position: \"relative\",\n        }}\n      >\n        <legend>Checks</legend>\n        <DepositTableSelected\n          isTableSelectable={false}\n          ref={collectionCheckTable}\n          width=\"100%\"\n          columns={[\n            {\n              key: \"Bank\",\n              label: \"Bank/Branch\",\n              width: 170,\n            },\n            {\n              key: \"Check_No\",\n              label: \"Check No\",\n              width: 170,\n            },\n            {\n              key: \"Amount\",\n              label: \"Amount\",\n              width: 300,\n              type: \"number\",\n            },\n          ]}\n          rows={collectionForDeposit}\n          getSelectedItem={(\n            rowItm: any,\n            colItm: any,\n            rowIdx: any,\n            colIdx: any\n          ) => {}}\n        />\n      </fieldset>\n      <fieldset\n        style={{\n          flexDirection: \"column\",\n          gap: \"10px\",\n          border: \"1px solid #cbd5e1\",\n          borderRadius: \"5px\",\n          alignSelf: \"flex-end\",\n          display: \"flex\",\n          width: \"30%\",\n        }}\n      >\n        <legend\n          style={{\n            color: total === TotalCashForDeposit ? \"green\" : \"#ec4899\",\n          }}\n        >\n          Cash ( {TotalCashForDeposit} )\n        </legend>\n        <table\n          id=\"cash-breakdown-table\"\n          style={{\n            border: \"2px solid black\",\n            borderCollapse: \"collapse\",\n            width: \"100%\",\n            background: \"white\",\n          }}\n        >\n          <thead>\n            <tr\n              style={{\n                borderBottom: \"2px solid black\",\n                fontSize: \"14px\",\n              }}\n            >\n              <th\n                style={{\n                  borderRight: \"2px solid black\",\n                }}\n              >\n                Denominations\n              </th>\n              <th\n                style={{\n                  borderRight: \"2px solid black\",\n                }}\n              >\n                QTY\n              </th>\n              <th\n                style={{\n                  borderRight: \"2px solid black\",\n                }}\n              >\n                Amount\n              </th>\n            </tr>\n          </thead>\n          <tbody>\n            {tableRows?.map((items: any, idx: number) => {\n              return (\n                <TrComponent\n                  key={idx}\n                  value1={items.value1}\n                  value2={items.value2}\n                  value3={items.value3}\n                  idx={idx}\n                />\n              );\n            })}\n          </tbody>\n          <tfoot>\n            <tr\n              style={{\n                borderTop: \"2px solid black\",\n                height: \"auto\",\n              }}\n            >\n              <td colSpan={3}>\n                <div\n                  style={{\n                    display: \"flex\",\n                    justifyContent: \"flex-end\",\n                  }}\n                >\n                  <div\n                    style={{\n                      display: \"flex\",\n                      alignItems: \"center\",\n                      width: \"100%\",\n                      textAlign: \"right\",\n                      justifyContent: \"flex-end\",\n                      columnGap: \"5px\",\n                    }}\n                  >\n                    <span style={{ fontSize: \"12px\", fontWeight: \"bold\" }}>\n                      Total Cash Deposit:\n                    </span>\n                    <input\n                      style={{\n                        fontWeight: \"bold\",\n                        border: \"1px solid black\",\n                        textAlign: \"right\",\n                        fontSize: \"13px\",\n                        width: \"180px\",\n                      }}\n                      value={total}\n                      onChange={(e) => {\n                        setTotal(e.target.value);\n                      }}\n                      readOnly={true}\n                    />\n                  </div>\n                </div>\n              </td>\n            </tr>\n          </tfoot>\n        </table>\n      </fieldset>\n    </div>\n  );\n}\nfunction TrComponent({ value1, value2, value3, idx }: any) {\n  const { updateTableRowsInput } = useContext(DepositContext);\n\n  const [input1, setInput1] = useState(value1);\n  const [input2, setInput2] = useState(value2);\n  const [input3, setInput3] = useState(value3);\n  const InputStyle: CSSProperties = {\n    textAlign: \"right\",\n    height: \"18px\",\n    borderRight: \"none\",\n    borderLeft: \"none\",\n    borderTop: \"none\",\n    outline: \"none\",\n    borderBottom: \"1px solid #cbd5e1\",\n    padding: \"0 8px\",\n    width: \"100%\",\n    fontSize: \"13px\",\n    margin: \"0 !important\",\n  };\n\n  return (\n    <tr>\n      <td\n        style={{\n          borderRight: \"2px solid black\",\n          margin: \"0\",\n          padding: \"0\",\n          height: \"15px\",\n        }}\n      >\n        <input\n          disabled={true}\n          className={`row-${idx} col-0`}\n          type=\"text\"\n          style={InputStyle}\n          value={input1}\n          onChange={(e) => setInput1(e.target.value)}\n          readOnly={true}\n        />\n      </td>\n      <td\n        style={{\n          borderRight: \"2px solid black\",\n          overflow: \"hidden\",\n          margin: 0,\n          padding: \"0 !important\",\n          height: \"15px\",\n        }}\n      >\n        <input\n          className={`row-${idx} col-1`}\n          style={InputStyle}\n          value={input2}\n          onChange={(e) => {\n            let input1Value = input1;\n            setInput2(e.target.value);\n            if (input1.includes(\",\")) {\n              input1Value = input1.replace(/,/g, \"\").toString();\n            }\n            const valueFor3 = (\n              parseFloat(input1Value) *\n              (isNaN(parseInt(e.target.value)) ? 0 : parseInt(e.target.value))\n            ).toLocaleString(\"en-US\", {\n              minimumFractionDigits: 2,\n              maximumFractionDigits: 2,\n            });\n            setInput3(valueFor3);\n\n            updateTableRowsInput(\n              {\n                value1,\n                value2: e.target.value,\n                value3: valueFor3,\n              },\n              idx\n            );\n          }}\n          onKeyDown={(e) => {\n            if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n              e.preventDefault();\n              const nextInput = document.querySelector(\n                `#cash-breakdown-table td .row-${idx + 1}.col-1`\n              ) as HTMLInputElement;\n              if (nextInput) {\n                nextInput.focus();\n              }\n            }\n          }}\n        />\n      </td>\n      <td\n        style={{\n          borderRight: \"2px solid black\",\n          margin: \"0\",\n          padding: \"0 !important\",\n          height: \"15px\",\n        }}\n      >\n        <input\n          disabled={true}\n          className={`row-${idx} col-2`}\n          type=\"text\"\n          style={InputStyle}\n          value={input3}\n          onChange={(e) => setInput3(e.target.value)}\n          readOnly={true}\n        />\n      </td>\n    </tr>\n  );\n}\nconst DepositTable = forwardRef(\n  (\n    {\n      columns,\n      rows,\n      height = \"400px\",\n      width = \"calc(100vw - 40px)\",\n      getSelectedItem,\n      disbaleTable = false,\n    }: any,\n    ref\n  ) => {\n    const parentElementRef = useRef<any>(null);\n    const [data, setData] = useState([]);\n    const [column, setColumn] = useState([]);\n    const [selectedRow, setSelectedRow] = useState<Array<any>>([]);\n    const [selectedRowIndex, setSelectedRowIndex] = useState<any>(0);\n\n    const totalRowWidth = column.reduce((a: any, b: any) => a + b.width, 0);\n\n    useEffect(() => {\n      if (columns.length > 0) {\n        setColumn(columns.filter((itm: any) => !itm.hide));\n      }\n    }, [columns]);\n\n    useEffect(() => {\n      if (rows.length > 0) {\n        setData(\n          rows.map((itm: any) => {\n            return columns.map((col: any) => itm[col.key]);\n          })\n        );\n      }\n    }, [rows, columns]);\n\n    useImperativeHandle(ref, () => ({\n      getData: () => {\n        return data;\n      },\n      setData: (newData: any) => {\n        setData(newData);\n      },\n      setSelectedRow: (rowIdx: any) => {\n        setSelectedRow(rowIdx);\n      },\n      getSelectedRow: (rowIdx: any) => {\n        return selectedRow;\n      },\n      getColumns: () => {\n        return columns;\n      },\n      resetTable: () => {\n        setData([]);\n        setSelectedRow([]);\n      },\n      setDataFormated: (newData: any) => {\n        setData(\n          newData.map((itm: any) => {\n            return columns.map((col: any) => itm[col.key]);\n          })\n        );\n      },\n      parentElement: () => {\n        return parentElementRef.current;\n      },\n    }));\n\n    return (\n      <Fragment>\n        <div\n          ref={parentElementRef}\n          style={{\n            width: \"100%\",\n            height,\n            overflow: \"auto\",\n            position: \"relative\",\n            pointerEvents: disbaleTable ? \"none\" : \"auto\",\n            border: disbaleTable ? \"2px solid #8c8f8e\" : \"2px solid #c0c0c0\",\n            boxShadow: `inset -2px -2px 0 #ffffff, \n                      inset 2px 2px 0 #808080`,\n            background: \"#dcdcdc\",\n          }}\n        >\n          <div\n            style={{\n              position: \"absolute\",\n              width: `${totalRowWidth}px`,\n              height: \"auto\",\n            }}\n          >\n            <table\n              id=\"upward-cutom-table\"\n              style={{\n                borderCollapse: \"collapse\",\n                width: \"100%\",\n                position: \"relative\",\n              }}\n            >\n              <thead>\n                <tr\n                  style={{\n                    background: \"#f0f0f0\",\n                  }}\n                >\n                  <th\n                   style={{\n                    width: \"30px\",\n                    border: \"none\",\n                    position: \"sticky\",\n                    top: 0,\n                    zIndex: 1,\n                    background: \"#f0f0f0\",\n                  }}\n                  ></th>\n                  {column.map((colItm: any, idx: number) => {\n                    return (\n                      <th\n                        key={idx}\n                        style={{\n                          width: colItm.width,\n                          borderRight: \"1px solid #e2e8f0\",\n                          position: \"sticky\",\n                          top: 0,\n                          zIndex: 1,\n                          background: \"#f0f0f0\",\n                          fontSize: \"12px\",\n                          padding: \"0px 5px\",\n                          textAlign:\n                            colItm.type === \"number\" ? \"center\" : \"left\",\n                        }}\n                      >\n                        {colItm.label}\n                      </th>\n                    );\n                  })}\n                </tr>\n              </thead>\n              <tbody>\n                {data?.map((rowItm: any, rowIdx: number) => {\n                  return (\n                    <tr\n                      key={rowIdx}\n                      className={`tr-row-${rowIdx} row ${\n                        selectedRow.includes(rowIdx) ||\n                        selectedRowIndex === rowIdx\n                          ? \"selected\"\n                          : \"\"\n                      }`}\n                    >\n                      <td\n                        style={{\n                          position: \"relative\",\n                          border: \"none\",\n                          cursor: \"pointer\",\n                          padding: 0,\n                          margin: 0,\n                          background: selectedRow.includes(rowIdx)\n                            ? \"#bae6fd\"\n                            : \"\",\n                        }}\n                      >\n                        <div\n                          style={{\n                            width: \"18px\",\n                            height: \"18px\",\n                            position: \"relative\",\n                            display: \"flex\",\n                            alignItems: \"center\",\n                            justifyContent: \"center\",\n                          }}\n                        >\n                          <input\n                            className=\"check-input\"\n                            style={{\n                              cursor: \"pointer\",\n                              background: \"transparent\",\n                            }}\n                            readOnly={true}\n                            type=\"checkbox\"\n                            checked={selectedRow.includes(rowIdx)}\n                            onClick={() => {\n                              if (selectedRow.includes(rowIdx)) {\n                                return;\n                              }\n\n                              setSelectedRow((d: any) => {\n                                return [...d, rowIdx];\n                              });\n\n                              if (getSelectedItem) {\n                                getSelectedItem(rowItm, null, rowIdx, null);\n                              }\n                            }}\n                          />\n                        </div>\n                      </td>\n\n                      {column.map((colItm: any, colIdx: number) => {\n                        return (\n                          <td\n                            onDoubleClick={() => {\n                              if (selectedRow.includes(rowIdx)) {\n                                return;\n                              }\n\n                              setSelectedRow((d: any) => {\n                                return [...d, rowIdx];\n                              });\n                              if (getSelectedItem) {\n                                getSelectedItem(rowItm, colItm, rowIdx, colIdx);\n                              }\n                            }}\n                            onClick={() => {\n                              setSelectedRowIndex(rowIdx);\n                            }}\n                            key={colIdx}\n                            style={{\n                              border: \"none\",\n                              fontSize: \"12px\",\n                              padding: \"0px 5px\",\n                              cursor: \"pointer\",\n                              height: \"20px\",\n                              userSelect: \"none\",\n                            }}\n                          >\n                            {\n                              <input\n                                readOnly={true}\n                                value={rowItm[colIdx]}\n                                style={{\n                                  width: colItm.width,\n                                  pointerEvents: \"none\",\n                                  border: \"none\",\n                                  background: \"transparent\",\n                                  userSelect: \"none\",\n                                  height: \"100%\",\n                                  textAlign:\n                                    colItm.type === \"number\" ? \"right\" : \"left\",\n                                }}\n                              />\n                            }\n                          </td>\n                        );\n                      })}\n                    </tr>\n                  );\n                })}\n              </tbody>\n            </table>\n          </div>\n        </div>\n      </Fragment>\n    );\n  }\n);\nconst DepositTableSelected = forwardRef(\n  (\n    {\n      columns,\n      rows,\n      height = \"400px\",\n      getSelectedItem,\n      disbaleTable = false,\n      isTableSelectable = true,\n    }: any,\n    ref\n  ) => {\n    const parentElementRef = useRef<any>(null);\n    const [data, setData] = useState([]);\n    const [column, setColumn] = useState([]);\n    const [selectedRow, setSelectedRow] = useState<any>(0);\n    const totalRowWidth = column.reduce((a: any, b: any) => a + b.width, 0);\n\n    useEffect(() => {\n      if (columns.length > 0) {\n        setColumn(columns.filter((itm: any) => !itm.hide));\n      }\n    }, [columns]);\n\n    useEffect(() => {\n      if (rows.length > 0) {\n        setData(\n          rows.map((itm: any) => {\n            return columns.map((col: any) => itm[col.key]);\n          })\n        );\n      }\n    }, [rows, columns]);\n\n    useImperativeHandle(ref, () => ({\n      getData: () => {\n        return data;\n      },\n      setData: (newData: any) => {\n        setData(newData);\n      },\n      getColumns: () => {\n        return columns;\n      },\n      resetTable: () => {\n        setData([]);\n        setSelectedRow(0);\n      },\n      setDataFormated: (newData: any) => {\n        setData(\n          newData.map((itm: any) => {\n            return columns.map((col: any) => itm[col.key]);\n          })\n        );\n      },\n    }));\n\n    return (\n      <Fragment>\n        <div\n          ref={parentElementRef}\n          style={{\n            width: \"100%\",\n            height,\n            overflow: \"auto\",\n            position: \"relative\",\n            pointerEvents: disbaleTable ? \"none\" : \"auto\",\n            border: disbaleTable ? \"2px solid #8c8f8e\" : \"2px solid #c0c0c0\",\n            boxShadow: `inset -2px -2px 0 #ffffff, \n                      inset 2px 2px 0 #808080`,\n            background: \"#dcdcdc\",\n          }}\n        >\n          <div\n            style={{\n              position: \"absolute\",\n              width: `${totalRowWidth}px`,\n              height: \"auto\",\n            }}\n          >\n            <table\n              id=\"upward-cutom-table\"\n              style={{\n                borderCollapse: \"collapse\",\n                width: \"100%\",\n                position: \"relative\",\n              }}\n            >\n              <thead>\n                <tr\n                  style={{\n                    background: \"#f0f0f0\",\n                  }}\n                >\n                  <th\n                    style={{\n                      width: \"30px\",\n                      border: \"none\",\n                      position: \"sticky\",\n                      top: 0,\n                      zIndex: 1,\n                      background: \"#f0f0f0\",\n                    }}\n                  ></th>\n                  {column.map((colItm: any, idx: number) => {\n                    return (\n                      <th\n                        key={idx}\n                        style={{\n                          width: colItm.width,\n                          borderRight: \"1px solid #e2e8f0\",\n                          position: \"sticky\",\n                          top: 0,\n                          zIndex: 1,\n                          fontSize: \"12px\",\n                          padding: \"0px 5px\",\n                          background: \"#f0f0f0\",\n                          textAlign:\n                            colItm.type === \"number\" ? \"center\" : \"left\",\n                        }}\n                      >\n                        {colItm.label}\n                      </th>\n                    );\n                  })}\n                </tr>\n              </thead>\n              <tbody>\n                {data?.map((rowItm: any, rowIdx: number) => {\n                  return (\n                    <tr\n                      key={rowIdx}\n                      className={`tr-row-${rowIdx} row ${\n                        selectedRow === rowIdx ? \"selected\" : \"\"\n                      }`}\n                    >\n                      <td\n                        style={{\n                          position: \"relative\",\n                          border: \"none\",\n                          cursor: \"pointer\",\n                          background: selectedRow === rowIdx ? \"#0076d\" : \"\",\n                          padding: 0,\n                          margin: 0,\n                        }}\n                      >\n                        <div\n                          style={{\n                            width: \"18px\",\n                            height: \"18px\",\n                            position: \"relative\",\n                            display: \"flex\",\n                            alignItems: \"center\",\n                            justifyContent: \"center\",\n                          }}\n                        >\n                          <input\n                            style={{\n                              cursor: \"pointer\",\n                              margin: \"0px !important\",\n                              position: \"absolute\",\n                            }}\n                            readOnly={true}\n                            checked={false}\n                            type=\"checkbox\"\n                            onClick={() => {\n                              if (!isTableSelectable) {\n                                return;\n                              }\n\n                              if (getSelectedItem) {\n                                getSelectedItem(rowItm, null, rowIdx, null);\n                              }\n                              setSelectedRow(null);\n                            }}\n                          />\n                        </div>\n                      </td>\n\n                      {column.map((colItm: any, colIdx: number) => {\n                        return (\n                          <td\n                            onDoubleClick={() => {\n                              if (!isTableSelectable) {\n                                return;\n                              }\n                              if (getSelectedItem) {\n                                getSelectedItem(rowItm, null, rowIdx, null);\n                              }\n                              setSelectedRow(null);\n                            }}\n                            onClick={() => {\n                              setSelectedRow(rowIdx);\n                            }}\n                            key={colIdx}\n                            style={{\n                              border: \"none\",\n                              fontSize: \"12px\",\n                              padding: \"0px 5px\",\n                              cursor: \"pointer\",\n                              height: \"20px\",\n                              userSelect: \"none\",\n                            }}\n                          >\n                            {\n                              <input\n                                readOnly={true}\n                                value={rowItm[colIdx]}\n                                style={{\n                                  width: colItm.width,\n                                  pointerEvents: \"none\",\n                                  border: \"none\",\n                                  background: \"transparent\",\n                                  userSelect: \"none\",\n                                  height: \"100%\",\n                                  textAlign:\n                                    colItm.type === \"number\" ? \"right\" : \"left\",\n                                }}\n                              />\n                            }\n                          </td>\n                        );\n                      })}\n                    </tr>\n                  );\n                })}\n              </tbody>\n            </table>\n          </div>\n        </div>\n      </Fragment>\n    );\n  }\n);\nfunction useMultipleComponent(steps: any) {\n  const [currentStepIndex, setCurrentStepIndex] = useState(0);\n\n  function goTo(index: number) {\n    // Ensure the index is within bounds\n    if (index >= 0 && index < steps.length) {\n      setCurrentStepIndex(index);\n    }\n  }\n\n  return {\n    goTo,\n    currentStepIndex,\n  };\n}\n","import Swal from \"sweetalert2\";\n\nexport function codeCondfirmationAlert(props: {\n  cb: (userCodeConfirmation: string) => void;\n  isUpdate: boolean;\n  isConfirm?: () => void;\n  isDeclined?: () => void;\n  text?: string;\n}) {\n  Swal.fire({\n    title: `Are you sure!`,\n    html: props?.text\n      ? props?.text\n      : props.isUpdate\n      ? `Are you sure you want to make this change?`\n      : \"Are you sure you want to delete this?\",\n    icon: \"warning\",\n    input: \"text\",\n    inputAttributes: {\n      autocapitalize: \"off\",\n    },\n    showCancelButton: true,\n    confirmButtonText: \"Save\",\n    confirmButtonColor: \"green\",\n    showLoaderOnConfirm: true,\n    preConfirm: async (userCodeConfirmation) => {\n      try {\n        props.cb(userCodeConfirmation);\n      } catch (error) {\n        Swal.showValidationMessage(`\n            Request failed: ${error}\n          `);\n      }\n    },\n    allowOutsideClick: () => !Swal.isLoading(),\n  }).then((result) => {\n    if (result.isConfirmed) {\n      if (props.isConfirm) {\n        return props.isConfirm();\n      }\n    }\n    if (props.isDeclined) {\n      props.isDeclined();\n    }\n  });\n}\n\nexport function saveCondfirmationAlert(props: {\n  isConfirm?: () => void;\n  isDeclined?: () => void;\n  text?: string;\n}) {\n  Swal.fire({\n    title: \"Are you sure?\",\n    text: props?.text ? props?.text : \"Do you want to proceed with saving?\",\n    icon: \"warning\",\n    showCancelButton: true,\n    confirmButtonColor: \"#3085d6\",\n    cancelButtonColor: \"#d33\",\n    confirmButtonText: \"Yes, save it!\",\n  }).then((result) => {\n    if (result.isConfirmed) {\n      if (props.isConfirm) {\n        return props.isConfirm();\n      }\n    }\n    if (props.isDeclined) {\n      props.isDeclined();\n    }\n  });\n}\n","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M4 10h3v7H4zm6.5 0h3v7h-3zM2 19h20v3H2zm15-9h3v7h-3zm-5-9L2 6v2h20V6z\"\n}), 'AccountBalance');\nexports.default = _default;","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\"\n}), 'Add');\nexports.default = _default;","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 6v3l4-4-4-4v3c-4.42 0-8 3.58-8 8 0 1.57.46 3.03 1.24 4.26L6.7 14.8c-.45-.83-.7-1.79-.7-2.8 0-3.31 2.69-6 6-6zm6.76 1.74L17.3 9.2c.44.84.7 1.79.7 2.8 0 3.31-2.69 6-6 6v-3l-4 4 4 4v-3c4.42 0 8-3.58 8-8 0-1.57-.46-3.03-1.24-4.26z\"\n}), 'Autorenew');\nexports.default = _default;","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M17 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V7l-4-4zm-5 16c-1.66 0-3-1.34-3-3s1.34-3 3-3 3 1.34 3 3-1.34 3-3 3zm3-10H5V5h10v4z\"\n}), 'Save');\nexports.default = _default;"],"names":["_ref","_ref$title","title","_jsxs","Helmet","children","_jsx","rel","type","href","concat","process","defaultCashBreakDown","value1","value2","value3","cashColumns","key","label","width","cellClassName","flex","hide","reducer","state","action","_objectSpread","_defineProperty","field","value","DepositContext","createContext","cashCollection","setCashCollection","checkCollection","setCheckCollection","selectedCollection","setSelectedCollection","collectionForDeposit","setCollectionForDeposit","tableRows","updateTableRowsInput","LoadingCashTable","LoadingCheckTable","setTotal","total","TotalCashForDeposit","loadingSearchByDepositSlip","Deposit","_queryFn","_mutationFn","_mutationFn2","_mutationFn3","_queryFn2","_queryFn3","_getSelectedItem","_getSelectedItem2","_useState","useState","_useState2","_slicedToArray","activeTab","setActiveTab","_useState3","_useState4","buttonPosition","setButtonPosition","buttonsRef","useRef","cashTable","checkTable","selectedTable","collectionCheckTable","inputSearchRef","refSlipCode","refDateDepo","refBankAcctCode","refBankAcctName","bankDepositSearch","_refTempSlipCode","refBankAcctCodeTag","refBankAcctNameTag","refAcctID","refAcctName","refClassification","refSubAccount","refShortName","_useContext","useContext","AuthContext","myAxios","user","_useMultipleComponent","steps","_useState43","_useState44","currentStepIndex","setCurrentStepIndex","goTo","index","length","useMultipleComponent","_useState5","_useState6","_useState7","_useState8","_useState9","_useState10","selectedRows","setSelectedRows","_useState11","_useState12","_useState13","_useState14","tableRowsInputValue","setTableRowsInputValue","_useState15","_useState16","selectedRowsCashIndex","setSelectedRowsCashIndex","_useState17","_useState18","selectedRowsCheckedIndex","setSelectedRowsCheckedIndex","_useState19","_useState20","depositMode","setDepositMode","_useState21","_useState22","disabledFields","reduce","accumulator","currentValue","Check_No","parseFloat","Amount","replace","toLocaleString","minimumFractionDigits","maximumFractionDigits","_useQuery","useQuery","queryKey","queryFn","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","get","headers","Authorization","accessToken","abrupt","sent","stop","apply","arguments","refetchOnWindowFocus","onSuccess","data","response","wait","then","current","slipcode","collectionID","LoadingDepositSlipCode","isLoading","RefetchDepositSlipCode","refetch","_useMutation","useMutation","mutationKey","mutationFn","_x","_callee2","variables","_context2","post","res","resposnse","success","resetTables","resetRefs","refetchCashCollection","refetchCheckCollection","Swal","position","icon","message","timer","addDepositMutation","mutate","addDepositMutationLoading","_useMutation2","_x2","_callee3","_context3","updateDepositMutation","updateDepositMutationLoading","_useMutation3","_x3","_callee4","_context4","obj","cash","check","checks","cash_breakdown","resetTable","format","Date","refDate","client_name","setDataFormated","setTimeout","forEach","d","idx","SlipCode","checkbox","parentElement","querySelector","querySelectorAll","click","searchByDepositSlip","_useQuery2","_callee5","_context5","filteredData","filter","itm","_toConsumableArray","loadingCashCollection","_useQuery3","_callee6","_context6","loadingCheckCollection","_useUpwardTableModalS","useUpwardTableModalSearchSafeMode","size","link","column","getSelectedItem","_x4","_x5","_x6","_x7","_callee7","rowItm","_","rowIdx","__","_context7","console","log","depositCloseModal","DepositUpwardTableModalSearch","UpwardTableModalSearch","depositOpenModal","openModal","closeModal","_useUpwardTableModalS2","_x8","_x9","_x10","_x11","_callee8","_context8","bankCloseModal","BankUpwardTableModalSearch","bankOpenModal","useEffect","_buttonsRef$current$","getBoundingClientRect","tabs","id","content","CashCollection","CheckCollection","SelectedCollection","CollectionForDeposit","_Fragment","PageHelmet","style","display","flexDirection","height","padding","background","alignItems","columnGap","marginBottom","TextInput","fontSize","fontWeight","input","className","onKeyDown","e","_inputSearchRef$curre","preventDefault","SearchIcon","sx","onIconClick","inputRef","Button","variant","startIcon","AddIcon","onClick","LoadingButton","color","_refBankAcctCode$curr","_refBankAcctCode$curr2","_refSlipCode$current","_refDateDepo$current","_refBankAcctCode$curr4","_refBankAcctName$curr","result","_refBankAcctCode$curr3","trim","depositSlip","depositdate","BankAcctCode","BankAcctName","BankAcctCodeTag","BankAcctNameTag","AcctID","AcctName","Classification","SubAccount","ShortName","codeCondfirmationAlert","isUpdate","cb","userCodeConfirmation","JSON","stringify","saveCondfirmationAlert","isConfirm","disabled","SaveIcon","loading","CloseIcon","text","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","isConfirmed","code","gap","AutorenewIcon","defaultValue","_refBankAcctCode$curr5","AccountBalanceIcon","_refBankAcctCode$curr6","disableIcon","readOnly","map","tab","ref","el","currentTarget","cursor","backgroundColor","border","borderRight","borderLeft","borderTop","textTransform","Provider","fields","item","top","left","right","_useContext2","marginTop","DepositTable","disbaleTable","columns","rows","colItm","colIdx","rowSelected","newSelected","Check_Date","Bank","Name","RowIndex","DRCode","ORNo","DRRemarks","IDNo","TempOR","Short","_useContext3","align","newSelectedCheckForDeposit","_useContext4","DepositTableSelected","_collectionCheckTable","_collectionCheckTable2","selectedData","getData","cashData","getSelectedRow","findIndex","indexOf","splice","setSelectedRow","dd","getColumns","setData","col","newSelectedData","_useContext5","borderRadius","isTableSelectable","alignSelf","borderCollapse","borderBottom","items","TrComponent","colSpan","justifyContent","textAlign","onChange","target","_useState23","_useState24","input1","setInput1","_useState25","_useState26","input2","setInput2","_useState27","_useState28","input3","setInput3","InputStyle","outline","margin","overflow","input1Value","includes","toString","valueFor3","isNaN","parseInt","nextInput","document","focus","forwardRef","_ref2","_ref2$height","_ref2$disbaleTable","parentElementRef","_useState29","_useState30","_useState31","_useState32","setColumn","_useState33","_useState34","selectedRow","_useState35","_useState36","selectedRowIndex","setSelectedRowIndex","totalRowWidth","a","b","useImperativeHandle","newData","Fragment","pointerEvents","boxShadow","zIndex","checked","onDoubleClick","userSelect","_ref3","_ref3$height","_ref3$disbaleTable","_ref3$isTableSelectab","_useState37","_useState38","_useState39","_useState40","_useState41","_useState42","props","_preConfirm","html","inputAttributes","autocapitalize","showLoaderOnConfirm","preConfirm","error","allowOutsideClick","isDeclined","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx"],"sourceRoot":""}