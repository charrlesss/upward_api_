{"version":3,"file":"static/js/8185.9942f1ae.chunk.js","mappings":"iMAMaA,GAAoBC,EAAAA,EAAAA,aAAW,SAAAC,EASpCC,GAAS,IARbC,EAAOF,EAAPE,QAAOC,EAAAH,EACPI,KAAAA,OAAI,IAAAD,EAAG,GAAEA,EAAAE,EAAAL,EACTM,OAAAA,OAAM,IAAAD,EAAG,QAAOA,EAChBE,EAAeP,EAAfO,gBACAC,EAASR,EAATQ,UAASC,EAAAT,EACTU,aAAAA,OAAY,IAAAD,GAAQA,EAAAE,EAAAX,EACpBY,kBAAAA,OAAiB,IAAAD,GAAOA,EACxBE,EAAcb,EAAda,eAEMC,GAAmBC,EAAAA,EAAAA,QAAY,MACrCC,GAAwBC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA7BI,EAAIF,EAAA,GAAEG,EAAOH,EAAA,GACpBI,GAA4BL,EAAAA,EAAAA,UAAS,IAAGM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAAjCE,EAAMD,EAAA,GAAEE,EAASF,EAAA,GACxBG,GAAsCT,EAAAA,EAAAA,UAAc,GAAEU,GAAAR,EAAAA,EAAAA,GAAAO,EAAA,GAA/CE,EAAWD,EAAA,GAAEE,EAAcF,EAAA,GAClCG,GAAgDb,EAAAA,EAAAA,UAAc,MAAKc,GAAAZ,EAAAA,EAAAA,GAAAW,EAAA,GAA5DE,EAAgBD,EAAA,GAAEE,EAAmBF,EAAA,GACtCG,EAAgBV,EAAOW,QAAO,SAACC,EAAQC,GAAM,OAAKD,EAAIC,EAAEC,KAAK,GAAE,GAwErE,OAtEAC,EAAAA,EAAAA,YAAU,WACFrC,EAAQsC,OAAS,GACjBf,EAAUvB,EAAQuC,QAAO,SAACC,GAAQ,OAAMA,EAAIC,IAAI,IAExD,GAAG,CAACzC,KAEJqC,EAAAA,EAAAA,YAAU,WACFnC,EAAKoC,OAAS,GACdnB,EAAQjB,EAAKwC,KAAI,SAACF,GACd,OAAOxC,EAAQ0C,KAAI,SAACC,GAAQ,OAAKH,EAAIG,EAAIC,IAAI,GACjD,IAER,GAAG,CAAC1C,EAAMF,KAEV6C,EAAAA,EAAAA,qBAAoB9C,GAAK,iBAAO,CAC5B+C,eAAgB,SAACC,GACb,OAAO7B,EAAK8B,MAAK,SAACC,GAAa,OAAKA,EAAS,KAAOF,CAAO,GAC/D,EACArB,YAAa,kBAAMA,CAAW,EAC9BwB,QAAS,WAEL,OADaC,EAAAA,EAAAA,GAAOjC,EAExB,EACAC,QAAS,SAACiC,GACNjC,EAAQiC,EACZ,EACAC,WAAY,WACR,OAAOrD,CACX,EACAsD,WAAY,WACRnC,EAAQ,IACRQ,EAAe,EACnB,EACA4B,eAAgB,WACZ,OAAOzB,CACX,EACAH,eAAgB,SAAC6B,GACb,OAAOzB,EAAoByB,EAC/B,EACAC,gBAAiB,SAACD,GACd,OAAO7B,EAAe6B,EAC1B,EACAE,gBAAiB,SAACN,GACdjC,EAAQiC,EAAQV,KAAI,SAACF,GACjB,OAAOxC,EAAQ0C,KAAI,SAACC,GAAQ,OAAKH,EAAIG,EAAIC,IAAI,GACjD,IACJ,EACAe,iBAAkB,WAmBd,OAlBaR,EAAAA,EAAAA,GAAOjC,GACawB,KAAI,SAACF,GAclC,MAba,CACToB,SAAUpB,EAAI,GACdqB,WAAYrB,EAAI,GAChBsB,WAAYtB,EAAI,GAChBuB,SAAUvB,EAAI,GACdwB,OAAQxB,EAAI,GACZyB,cAAezB,EAAI,GACnB0B,aAAc1B,EAAI,GAClB2B,YAAa3B,EAAI,GACjB4B,MAAO5B,EAAI,GACX6B,SAAU7B,EAAI,GAItB,GAGJ,EACH,KAGG8B,EAAAA,EAAAA,KAAA,OACIvE,IAAKa,EACL2D,OAAKC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CACDpC,MAAO,OACPhC,OAAAA,EACAqE,SAAU,OACVC,SAAU,WACVC,cAAenE,EAAe,OAAS,OACvCoE,OAAQpE,EAAe,oBAAsB,oBAC7CqE,UAAU,gFAEPlE,GAAc,IACjBmE,WAAY,YACdC,UAEFC,EAAAA,EAAAA,MAAA,OAAKT,MAAO,CAAEG,SAAU,WAAYtC,MAAM,GAAD6C,OAAKjD,EAAa,MAAM5B,OAAQ,QAAS2E,SAAA,EAC9EC,EAAAA,EAAAA,MAAA,SACIE,GAAG,qBACHX,MAAO,CACHY,eAAgB,WAChB/C,MAAO,OACPsC,SAAU,WACVI,WAAY,WACdC,SAAA,EACFT,EAAAA,EAAAA,KAAA,SAAAS,UACIC,EAAAA,EAAAA,MAAA,MAAAD,SAAA,EACIT,EAAAA,EAAAA,KAAA,MAAIC,MAAO,CACPnC,MAAO,OACPwC,OAAQ,OACRF,SAAU,SACVU,IAAK,EACLC,OAAQ,EACRP,WAAY,aAOZxD,EAAOoB,KAAI,SAAC4C,EAAaC,GACrB,OACIjB,EAAAA,EAAAA,KAAA,MAEIC,MAAO,CACHnC,MAAOkD,EAAOlD,MACdoD,YAAa,oBACbd,SAAU,SACVU,IAAK,EACLC,OAAQ,EACRP,WAAY,UACZW,SAAU,OACVC,UAAW,OACXC,QAAS,WAEXZ,SACJO,EAAOM,OAbAL,EAejB,UAIZjB,EAAAA,EAAAA,KAAA,SAAAS,SAEY,OAAJ7D,QAAI,IAAJA,OAAI,EAAJA,EAAMwB,KAAI,SAACmD,EAAaC,GAEpB,OACId,EAAAA,EAAAA,MAAA,MAAiBe,UAAS,GAAAd,OAAMvD,IAAgBoE,GAAYhE,IAAqBgE,EAAU,WAAa,IAAKf,SAAA,EACzGT,EAAAA,EAAAA,KAAA,MACIC,MAAO,CACHG,SAAU,WACVE,OAAQ,OACRoB,OAAQ,UACRlB,WAAYpD,IAAgBoE,EAAS,SAAW,GAChDH,QAAS,EACTM,OAAQ,GAEVlB,UACFT,EAAAA,EAAAA,KAAA,OAAKC,MAAO,CACRnC,MAAO,OACPhC,OAAQ,OACRsE,SAAU,WACVwB,QAAS,OACTC,WAAY,SACZC,eAAgB,UAClBrB,UACET,EAAAA,EAAAA,KAAA,SACIC,MAAO,CACHyB,OAAQ,UACRC,OAAQ,iBACRvB,SAAU,YAEd2B,UAAU,EACVC,QAASxE,IAAqBgE,EAC9BS,KAAK,WACLC,QAAS,WACA9F,IAGLqB,EAAoB+D,GAEhBzF,GACAA,EAAgBwF,EAAQ,KAAMC,EAAQ,MAE1CnE,EAAe,MAEnB,QAQRL,EAAOoB,KAAI,SAAC4C,EAAamB,GACrB,OACInC,EAAAA,EAAAA,KAAA,MACIyB,UAAS,UAAAd,OAAYa,EAAM,SAAAb,OAAQwB,EAAM,KACzCC,SAAU,EACVC,cAAe,WACNjG,IAGDoB,IAAqBgE,GACrB/D,EAAoB,MAEhB1B,GACAA,EAAgB,KAAM,KAAMyF,EAAQ,QAIxC/D,EAAoB+D,GAChBzF,GACAA,EAAgBwF,EAAQ,KAAMC,EAAQ,OAG9CnE,EAAe,MACnB,EACA6E,QAAS,WACL7E,EAAemE,EACnB,EACAxF,UAAW,SAACsG,GAuBR,GAtBItG,GACAA,EAAUuF,EAAQC,EAAQc,GAEhB,YAAVA,EAAEhE,IACFjB,GAAe,SAACkF,GACZ,IAAMC,EAAQC,KAAKC,IAAIH,EAAO,EAAG,GAC3BI,EAAKC,SAASC,cAAc,WAADlC,OAAY6B,IAI7C,OAHIG,GACAA,EAAGG,QAEAN,CACX,IACiB,cAAVF,EAAEhE,KACTjB,GAAe,SAACkF,GACZ,IAAMC,EAAQC,KAAKM,IAAIR,EAAO,EAAG3F,EAAKoB,OAAS,GACpC4E,SAASC,cAAc,WAADlC,OAAY6B,IAI7C,OAAOA,CACX,IAEW,UAAXF,EAAEU,MAA+B,gBAAXV,EAAEU,KAAwB,CAGhD,GAFAV,EAAEW,kBAEG7G,EACD,OAGJqB,EAAoB+D,GAChBzF,GACAA,EAAgBwF,EAAQ,KAAMC,EAAQ,MAE1CnE,EAAe,KACnB,CACJ,EAGA4C,MAAO,CACHK,OAAQ,OACRa,SAAU,OACVE,QAAS,UACTK,OAAQ,UACR5F,OAAQ,OACRoH,WAAY,QAEdzC,UAEET,EAAAA,EAAAA,KAAA,SACI+B,UAAU,EACV7C,MAAOqC,EAAOY,GACdlC,MAAO,CACHnC,MAAOkD,EAAOlD,MACduC,cAAe,OACfC,OAAQ,OACRE,WAAY,cACZ0C,WAAY,OACZpH,OAAQ,OACRsF,UAA2B,WAAhBJ,EAAOiB,KAAoB,QAAU,WAtBvDE,EA2BjB,MA1ICX,EA8IjB,UAIZxB,EAAAA,EAAAA,KAAA,SAAAS,SAAA,wxBA4BhB,G,kDCjUA,IAVmB,SAAHjF,GAA2C,IAAD2H,EAAA3H,EAApC4H,MAAAA,OAAK,IAAAD,EAAG,GAAEA,EAE5B,OACIzC,EAAAA,EAAAA,MAAC2C,EAAAA,EAAM,CAAA5C,SAAA,EACHT,EAAAA,EAAAA,KAAA,SAAAS,SAAQ2C,KACRpD,EAAAA,EAAAA,KAAA,QAAMsD,IAAI,OAAOrB,KAAK,YAAYsB,KAAI,GAAA5C,OAJ/B6C,IAI0C,iBAG7D,C,6LCiBO,SAASC,EAAiBjI,GAUL,IAT1BkI,EAAKlI,EAALkI,MACApC,EAAK9F,EAAL8F,MACAqC,EAAQnI,EAARmI,SACAC,EAAIpI,EAAJoI,KAAIC,EAAArI,EACJsI,aAAAA,OAAY,IAAAD,EAAG,MAAKA,EAAAE,EAAAvI,EACpBwI,YAAAA,OAAW,IAAAD,GAAQA,EAAAE,EAAAzI,EACnB0I,YAAAA,OAAW,IAAAD,EAAG,SAAC3B,GAAQ,EAAC2B,EAAAE,EAAA3I,EACxB4I,SAAAA,OAAQ,IAAAD,EAAG,SAAC7B,GAAQ,EAAC6B,EACrB9H,EAAcb,EAAda,eAGMuE,GAAKyD,EAAAA,EAAAA,SAILC,EAAe,SAACpF,GACpB,IAAKA,EAAO,OAAOA,EAGnB,IAAMqF,EAAQrF,EAAMsF,MAAM,KAM1B,OAHAD,EAAM,GAAKA,EAAM,GAAGE,QAAQ,wBAAyB,KAG9CF,EAAMG,KAAK,IACpB,EAGMC,EAAiB,SAACzF,GACtB,OAAOA,EAAMuF,QAAQ,KAAM,GAC7B,EAyDA,OACE/D,EAAAA,EAAAA,MAAA,OACET,OAAKC,EAAAA,EAAAA,GAAA,CACH0B,QAAS,OACTC,WAAY,SACZzB,SAAU,YACP/D,GACHoE,SAAA,EAEFT,EAAAA,EAAAA,KAAA,SAAAE,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAWoB,GAAK,IAAEsD,QAAShE,EAAGH,SAC3Ba,EAAM8B,SAERQ,GAAyB,UAAjBE,IACP9D,EAAAA,EAAAA,KAAA,OAAKC,MAAO,CAAEG,SAAU,WAAYyE,KAAM,MAAO9D,OAAQ,GAAIN,SAC1DmD,KAGL5D,EAAAA,EAAAA,KAAA,SAAAE,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CACEzE,IAAKkI,EACL/C,GAAIA,GACA8C,GAAK,IACTzB,KAAK,OACLhC,OAAKC,EAAAA,EAAAA,GAAA,CACHpE,OAAQ,QACL4H,EAAMzD,OAEXmE,SAAU,SAAC9B,IA3DI,SAACA,GACpB,IAAIpD,EAAQoD,EAAEwC,OAAO5F,MAGrBA,EAAQyF,EAAezF,IAST,MAHdA,EAAQyF,EAAezF,KAHT,2BAMY6F,KAAK7F,MAI7BoD,EAAEwC,OAAO5F,MAAQoF,EAAapF,GAGlC,CAwCQ8F,CAAa1C,GACb8B,EAAS9B,EACX,EACA2C,OAAQ,SAAC3C,IAzCI,SAACA,GAClB,IAAIpD,EAAQyF,EAAerC,EAAEwC,OAAO5F,OAGpCA,EA/CwB,SAACA,GAEzB,OAAKA,EAAMgG,SAAS,KAWI,IADVhG,EAAMsF,MAAM,KAChB,GAAGxG,OACJkB,EAAQ,IAIVA,EAfS,KAAVA,EACK,OAGAA,EAAQ,KAYrB,CA4BUiG,CAAkBjG,GAI1BoD,EAAEwC,OAAO5F,MAAQoF,EAAapF,EAChC,CAiCQkG,CAAW9C,EACb,KAGDsB,GAAyB,QAAjBE,IACP9D,EAAAA,EAAAA,KAAA,OAAKkC,QAASgC,EACZjE,MAAO,CACLG,SAAU,WACViF,MAAO,MACPvE,IAAK,MACLwE,UAAW,mBACXvE,OAAQ,EACRW,OAAQsC,EAAc,OAAS,UAC/BpC,QAAS,OACTC,WAAY,SACZC,eAAgB,SAChBtB,WAAY,QACZH,cAAe2D,EAAc,OAAS,QACtCvD,SACDmD,MAOX,CAGO,SAAS2B,EAASC,GASL,IARlB9B,EAAK8B,EAAL9B,MACApC,EAAKkE,EAALlE,MACAqC,EAAQ6B,EAAR7B,SACAC,EAAI4B,EAAJ5B,KAAI6B,EAAAD,EACJ1B,aAAAA,OAAY,IAAA2B,EAAG,MAAKA,EAAAC,EAAAF,EACpBxB,YAAAA,OAAW,IAAA0B,GAAQA,EACnBrJ,EAAcmJ,EAAdnJ,eAAcsJ,EAAAH,EACdtB,YAAAA,OAAW,IAAAyB,EAAG,SAACrD,GAAQ,EAACqD,EAElB/E,GAAKyD,EAAAA,EAAAA,SAGX,OACE3D,EAAAA,EAAAA,MAAA,OACET,OAAKC,EAAAA,EAAAA,GAAA,CACH0B,QAAS,OACTC,WAAY,SACZzB,SAAU,YACP/D,GACHoE,SAAA,EAEFT,EAAAA,EAAAA,KAAA,SAAAE,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAWoB,GAAK,IAAEsD,QAAShE,EAAGH,SAC3Ba,EAAM8B,SAERQ,GAAyB,UAAjBE,IACP9D,EAAAA,EAAAA,KAAA,OAAKC,MAAO,CAAEG,SAAU,WAAYyE,KAAM,MAAO9D,OAAQ,GAAIN,SAC1DmD,KAGL5D,EAAAA,EAAAA,KAAA,SAAAE,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CACEzE,IAAKkI,EACL/C,GAAIA,GACA8C,GAAK,IACTzD,OAAKC,EAAAA,EAAAA,GAAA,CACHpE,OAAQ,QACL4H,EAAMzD,UAGZ2D,GAAyB,QAAjBE,IACP9D,EAAAA,EAAAA,KAAA,OAAKkC,QAASgC,EACZjE,MAAO,CACLG,SAAU,WACViF,MAAO,MACPvE,IAAK,MACLwE,UAAW,mBACXvE,OAAQ,EACRW,OAAQsC,EAAc,OAAS,UAC/BpC,QAAS,OACTC,WAAY,SACZC,eAAgB,SAChBtB,WAAY,QACZH,cAAe2D,EAAc,OAAS,QACtCvD,SACDmD,MAOX,CAIO,SAASgC,EAAaC,GAQX,IAPhBC,EAAQD,EAARC,SACAxE,EAAKuE,EAALvE,MACAyE,EAASF,EAATE,UACAnC,EAAIiC,EAAJjC,KAAIoC,EAAAH,EACJ/B,aAAAA,OAAY,IAAAkC,EAAG,MAAKA,EAAAC,EAAAJ,EACpB7B,YAAAA,OAAW,IAAAiC,GAAQA,EAAAC,EAAAL,EACnB3B,YAAAA,OAAW,IAAAgC,EAAG,SAAC5D,GAAQ,EAAC4D,EAElBtF,GAAKyD,EAAAA,EAAAA,SAEX,OACE3D,EAAAA,EAAAA,MAAA,OACET,MAAO,CACL2B,QAAS,OACTC,WAAY,SACZzB,SAAU,YACVK,SAAA,EAEFT,EAAAA,EAAAA,KAAA,SAAAE,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAWoB,GAAK,IAAEsD,QAAShE,EAAGH,SAC3Ba,EAAM8B,SAERQ,GAAyB,UAAjBE,IACP9D,EAAAA,EAAAA,KAAA,OAAKC,MAAO,CAAEG,SAAU,WAAYyE,KAAM,MAAO9D,OAAQ,GAAIN,SAC1DmD,KAGL5D,EAAAA,EAAAA,KAAA,YAAAE,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CACEzE,IAAKsK,EACLnF,GAAIA,GACAkF,GAAQ,IACZ7F,OAAKC,EAAAA,EAAAA,GAAA,CACHpE,OAAQ,QACLgK,EAAS7F,UAIf2D,GAAyB,QAAjBE,IACP9D,EAAAA,EAAAA,KAAA,OAAKkC,QAASgC,EACZjE,MAAO,CACLG,SAAU,WACViF,MAAO,MACPvE,IAAK,MACLwE,UAAW,mBACXvE,OAAQ,EACRW,OAAQsC,EAAc,OAAS,UAC/BpC,QAAS,OACTC,WAAY,SACZC,eAAgB,SAChBtB,WAAY,QACZH,cAAe2D,EAAc,OAAS,QACtCvD,SACDmD,MAOX,CAGO,SAASuC,EAAWC,GAiBvB,IAhBFC,EAAMD,EAANC,OACA/E,EAAK8E,EAAL9E,MACAgF,EAASF,EAATE,UAASC,EAAAH,EACTI,WAAAA,OAAU,IAAAD,EAAG,GAAEA,EAAAE,EAAAL,EACfM,OAAAA,OAAM,IAAAD,EAAG,GAAEA,EAAAE,EAAAP,EACXxE,QAAAA,OAAO,IAAA+E,EAAG,GAAEA,EACZtK,EAAc+J,EAAd/J,eAWMuE,GAAKyD,EAAAA,EAAAA,SACX,OACE3D,EAAAA,EAAAA,MAAA,OACET,OAAKC,EAAAA,EAAAA,GAAA,CACH0B,QAAS,OACT9F,OAAQ,OACR+F,WAAY,UACTxF,GACHoE,SAAA,EAEFT,EAAAA,EAAAA,KAAA,SAAAE,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAWoB,GAAK,IAAEsD,QAAShE,EAAGH,SAC3Ba,EAAM8B,UAETpD,EAAAA,EAAAA,KAAA,UAAAE,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACMmG,GAAM,IACV5K,IAAK6K,EACL7E,UAAS,UAAAd,OAAY0F,EAAO5E,WAC5BxB,OAAKC,EAAAA,EAAAA,GAAA,CACHpE,OAAQ,QACLuK,EAAOpG,OACVQ,SAED+F,EAAWpI,KAAI,SAACF,EAAK+C,GACpB,OACEjB,EAAAA,EAAAA,KAAA,UAAkBd,MAAOhB,EAAIwI,GAAQjG,SAClCvC,EAAI0D,IADMX,EAIjB,SAIR,CAEO,SAAS2F,EAAWC,GAYvB,IAXFC,EAAYD,EAAZC,aACAC,EAAMF,EAANE,OAAMC,EAAAH,EACNI,YAAAA,OAAW,IAAAD,EAAG,GAAEA,EAChBvG,EAAQoG,EAARpG,SAAQyG,EAAAL,EACRM,SAAAA,OAAQ,IAAAD,GAAQA,EAQhB,OACExG,EAAAA,EAAAA,MAAA,OAAKe,UAAU,UAAShB,SAAA,EACtBT,EAAAA,EAAAA,KAAA,UAAAE,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CACEiH,SAAUA,GACNJ,GAAM,IACVtL,IAAKqL,EACL7G,OAAKC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAO6G,EAAO9G,OAAK,IAAEO,WAAa2G,EAA2B,UAAhB,gBAClD1F,UAAU,iBAAgBhB,SAEzBA,MAED0G,IAAYnH,EAAAA,EAAAA,KAAA,QAAMyB,UAAU,eAAchB,SAAEwG,MAGpD,C,mHCtWMG,GAAc7L,EAAAA,EAAAA,aAClB,SAAAC,EAiBE6L,GACI,IAADC,EAhBD1L,EAAIJ,EAAJI,KACAoB,EAAMxB,EAANwB,OACAc,EAAKtC,EAALsC,MACAhC,EAAMN,EAANM,OACAyL,EAAY/L,EAAZ+L,aAAYC,EAAAhM,EACZiM,kBAAAA,OAAiB,IAAAD,EAAG,WAAQ,EAACA,EAAAE,EAAAlM,EAC7BmM,iBAAAA,OAAgB,IAAAD,GAAQA,EAAAE,EAAApM,EACxBqM,OAAAA,OAAM,IAAAD,GAAQA,EACd5L,EAASR,EAATQ,UAAS8L,EAAAtM,EACTuM,oBAAAA,OAAmB,IAAAD,EAAG,+BAA8BA,EAAAE,EAAAxM,EACpDyM,gBAAAA,OAAe,IAAAD,GAAOA,EAAAE,EAAA1M,EACtB2M,aAAAA,OAAY,IAAAD,EAAG,kBAAM,CAAK,EAAAA,EAC1BE,EAAS5M,EAAT4M,UACAC,EAAY7M,EAAZ6M,aAIF7L,GAA0BC,EAAAA,EAAAA,UAAqB,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA3C8L,EAAK5L,EAAA,GAAE6L,EAAQ7L,EAAA,GACtBI,GAAoCL,EAAAA,EAAAA,UAAS,GAAEM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAAxC0L,EAAUzL,EAAA,GAAE0L,EAAa1L,EAAA,GAC1B2L,GAAuBnM,EAAAA,EAAAA,QAAOkL,GAC9BkB,GAAepM,EAAAA,EAAAA,QAAOP,GAC5BkB,GAA8BT,EAAAA,EAAAA,UAASO,EAAOiB,QAAO,SAACC,GAAG,OAAMA,EAAIC,IAAI,KAAEhB,GAAAR,EAAAA,EAAAA,GAAAO,EAAA,GAAlExB,EAAOyB,EAAA,GAAEyL,EAAUzL,EAAA,GAC1BG,GAA0Cb,EAAAA,EAAAA,UAAS,MAAKc,GAAAZ,EAAAA,EAAAA,GAAAW,EAAA,GAAjDuL,EAAatL,EAAA,GAAEuL,EAAgBvL,EAAA,GACtCwL,GAAwCtM,EAAAA,EAAAA,UAAwB,CAAC,IAAGuM,GAAArM,EAAAA,EAAAA,GAAAoM,EAAA,GAA7DE,EAAYD,EAAA,GAAEE,EAAeF,EAAA,GACpCG,GAAwD1M,EAAAA,EAAAA,UAAS,GAAE2M,GAAAzM,EAAAA,EAAAA,GAAAwM,EAAA,GAA5DE,EAAoBD,EAAA,GAAEE,EAAuBF,EAAA,GACpDG,IAA0C9M,EAAAA,EAAAA,UAAwB,IAAG+M,IAAA7M,EAAAA,EAAAA,GAAA4M,GAAA,GAA9DE,GAAaD,GAAA,GAAEE,GAAgBF,GAAA,GAChCG,IAASpN,EAAAA,EAAAA,QAAuB,MACtCqN,IAA0CnN,EAAAA,EAAAA,UAAS,MAAKoN,IAAAlN,EAAAA,EAAAA,GAAAiN,GAAA,GAAjDE,GAAaD,GAAA,GAAEE,GAAgBF,GAAA,IAGtC9L,EAAAA,EAAAA,YAAU,WACR,IAAMiM,EA6aZ,SAA+BC,GAG7B,IAHgE,IAAlBC,EAASC,UAAAnM,OAAA,QAAAoM,IAAAD,UAAA,GAAAA,UAAA,GAAG,IACtDE,EAAS,GAEJC,EAAI,EAAGA,EAAIL,EAAIjM,OAAQsM,GAAKJ,EAEnCG,EAAOE,KAAKN,EAAIO,MAAMF,EAAGA,EAAIJ,IAE/B,OAAOG,CACT,CArbqBI,CAAsB7O,EAAM,KAC3C2M,EAASyB,EACX,GAAG,CAACpO,IAEJ,IAAM8O,GAAc,SAAClI,EAAYF,GAC/BA,EAAEW,iBACFX,EAAEqI,kBAEF,IAAMC,EAAStI,EAAEuI,QACXC,EAAapP,EAAQ8G,GAAO1E,MAE5BiN,EAAS,SAACC,GACd,IAAMC,EAAWH,GAAcE,EAAUH,QAAUD,GAC7CM,GAAcrM,EAAAA,EAAAA,GAAOnD,GAC3BwP,EAAe1I,GAAO1E,MAAQmN,EAAW,GAAKA,EAAW,GACzDrC,EAAWsC,EACb,EAOAtI,SAASuI,iBAAiB,YAAaJ,GACvCnI,SAASuI,iBAAiB,WANT,SAAXC,IACJxI,SAASyI,oBAAoB,YAAaN,GAC1CnI,SAASyI,oBAAoB,UAAWD,EAC1C,GAIF,EACME,GAAmB,SAAC9I,GACxBsG,EAAiBtG,EACnB,EACM+I,GAAmB,WACvBzC,EAAiB,KACnB,GAuMAvK,EAAAA,EAAAA,qBAAoB8I,GAAgB,iBAAO,CACzCmE,mBAAoB,WAIlB,GAHAtC,EAAgB,CAAC,IACjBI,EAAwB,GACxBI,GAAiB,IACb9N,EAAKoC,OAAS,EAAG,CACnB,IAAMyN,EAAM7I,SAASC,cAAc,QAADlC,OAAS,IACxC,OAAH8K,QAAG,IAAHA,GAAAA,EAAKC,eAAe,CAAEC,MAAO,MAAOC,SAAU,UAChD,CACF,EACAC,iBAAkB,WAChB,OAAOpC,GAAc,EACvB,EACAqC,gBAAiB,WACf,OAAOlQ,EAAKqC,QAAO,SAAC8N,EAAG9K,GAAG,OAAKwI,GAAcvE,SAASjE,EAAI,GAC5D,EACA+K,eAAgB,WACd,OAAOpQ,EAAKqC,QAAO,SAAC8N,EAAG9K,GAAG,OAAKwI,GAAcvE,SAASjE,EAAI,GAC5D,EACAgL,iBAAkB,WAChB,OAAOtC,GAAOuC,OAChB,EACAC,uBAAwB,WACtB,OAAOlD,EAAa,EACtB,EACAmD,cAAe,SAACC,GACd,OAAO3C,GAAiB,CAAC2C,GAC3B,EACD,IAYD,OACErM,EAAAA,EAAAA,KAAA,OACEC,MAAO,CACL2B,QAAS,OACTE,eAAgB,UAElB9F,UArIkB,SAACsG,GAErB,GAAc,cAAVA,EAAEhE,IACJgE,EAAEW,iBACFiG,GAAgB,SAACoD,GAAoB,IAADC,EAClC,GAAwC,OAApCD,EAAUA,EAAUtO,OAAS,GAAa,MAAO,CAAC,GACtD,GAAIsO,EAAUA,EAAUtO,OAAS,IAAMpC,EAAKoC,OAAS,EACnD,MAAO,CAACpC,EAAKoC,OAAS,GAExB,IAAMwO,EAAeF,EAAUA,EAAUtO,OAAS,GAAK,EACjDyN,EAAM7I,SAASC,cAAc,QAADlC,OAAS6L,IAI3C,OAHG,OAAHf,QAAG,IAAHA,GAA2B,QAAxBc,EAAHd,EAAK5I,cAAc,gBAAQ,IAAA0J,GAA3BA,EAA6BzJ,QAE1B,OAAH2I,QAAG,IAAHA,GAAAA,EAAKC,eAAe,CAAEC,MAAO,MAAOC,SAAU,WACvC,CAACY,EACV,SACK,GAAc,YAAVlK,EAAEhE,IAAmB,CAG9B,GAFAgE,EAAEW,iBAE4C,IAA1CgG,EAAaA,EAAajL,OAAS,GAAU,CAC/C,IAAM0F,EAAQd,SAASC,cACrBkF,GAEF,GAAIrE,GAA2B,UAAlBA,EAAM+I,QACZ,OAAL/I,QAAK,IAALA,GAAAA,EAAOZ,aACF,GAAIY,GAA2B,QAAlBA,EAAM+I,QAAmB,CAC3C,IAAMC,EAAW9J,SAASC,cAAc,GAADlC,OAClCoH,EAAmB,WAGhB,OAAR2E,QAAQ,IAARA,GAAAA,EAAU5J,OACZ,CACF,CAEAoG,GAAgB,SAACoD,GAAoB,IAADK,EAClC,GAAwC,IAApCL,EAAUA,EAAUtO,OAAS,GAAU,MAAO,CAAC,GACnD,IAAMwO,EAAeF,EAAUA,EAAUtO,OAAS,GAAK,EACjDyN,EAAM7I,SAASC,cAAc,QAADlC,OAAS6L,IAI3C,OAFG,OAAHf,QAAG,IAAHA,GAAAA,EAAKC,eAAe,CAAEC,MAAO,MAAOC,SAAU,WAC3C,OAAHH,QAAG,IAAHA,GAA2B,QAAxBkB,EAAHlB,EAAK5I,cAAc,gBAAQ,IAAA8J,GAA3BA,EAA6B7J,QACtB,CAAC0J,EACV,GACF,CAEF,EAwF6B/L,UAEzBC,EAAAA,EAAAA,MAAA,OAAAD,SAAA,EACEC,EAAAA,EAAAA,MAAA,OAAKe,UAAU,oBAAmBhB,SAAA,EAChCT,EAAAA,EAAAA,KAAA,OACEC,MAAO,CACL2B,QAAS,OACTgL,cAAe,SACf9O,MAAM,GAAD6C,OAAK7C,EAAQ,GAAE,cACpBhC,OAAO,GAAD6E,OAAK7E,EAAS,IAAG,MACvB+Q,UAAW,SAEbpL,UAAU,cAAahB,UAEvBT,EAAAA,EAAAA,KAAA,OAAKyB,UAAU,cAAahB,UAC1BC,EAAAA,EAAAA,MAAA,OAAKjF,IAAKkO,GAAQlI,UAAS,kBAAqBW,UAAW,EAAE3B,SAAA,EAC3DT,EAAAA,EAAAA,KAAA,OACEyB,UAAU,uBACVxB,MAAO,CACLG,SAAU,SACVW,OAAQ,KACRD,IAAK,OACLN,WAAY,SACZC,SAED/E,EAAQ0C,KAAI,SAACC,EAAUmE,GAAa,OACnC9B,EAAAA,EAAAA,MAAA,OAEEe,UAAS,yBAAAd,OAA2BkI,IAAkBrG,EAAK,mBAAwB,IAEnFvC,MAAO,CAAEnC,MAAOO,EAAIP,MAAOhC,OAAQ,QAAU2E,SAAA,EAE7CT,EAAAA,EAAAA,KAAA,SACEC,MAAO,CAAE6M,WAAY,QACrBC,aAAc1O,EAAI2O,WAClBjL,UAAQ,EACRqC,SAAU,SAAC9B,GAAQ,KAErBtC,EAAAA,EAAAA,KAAA,OACEyB,UAAU,gBACVwL,YAAa,SAAC3K,GAAC,OAAKoI,GAAYlI,EAAOF,EAAE,EACzC4K,aAAc,SAAC5K,GACbA,EAAEW,iBACFqI,GAAiB9I,EACnB,EACA2K,aAAc,SAAC7K,GACbA,EAAEW,iBACFsI,IACF,MArBG/I,EAuBD,MAGQ,QADZ8E,EACLgB,EAAME,UAAW,IAAAlB,OAAA,EAAjBA,EAAmBlJ,KAAI,SAACqN,EAAU2B,GAAa,OAC9CpN,EAAAA,EAAAA,KAAA,OACEyB,UAAS,gBAAAd,OAAkByM,GAE3BlL,QAAS,SAACI,GAAC,OA7SN,SACrB8K,EACAC,GAiBA,GAAK1F,EAKH,GAAI0F,EAAMC,UAAqC,OAAzBjE,EAA+B,CAKnD,IAHA,IAAMkE,EAAa9K,KAAKM,IAAIsG,EAAsB+D,GAC5CI,EAAW/K,KAAKC,IAAI2G,EAAsB+D,GAC1CK,EAAiC,GAC9BnD,EAAIiD,EAAYjD,GAAKkD,EAAUlD,IACjCrB,EAAa/D,SAASoF,IACzBmD,EAAgBlD,KAAKD,GAIzB,IAAIoD,EAAkC,GAAA/M,QAAA9B,EAAAA,EAAAA,GACjC4K,IACAgE,GAGLvE,EAAgB,GAADvI,QAAA9B,EAAAA,EAAAA,GAAKoK,GAAiBwE,IACrC,IAGQE,EAxCZ,SAAyBC,GACvB,IAMMC,EANsBD,EAAgBxP,KAAI,SAAC2N,EAAG9K,GAClD,OAAKkH,EAAa4D,GAGX,KAFE,CAAE9K,IAAAA,EAAKrE,KAAMmP,EAGxB,IAC4C9N,QAAO,SAAC8N,GAAC,OAAW,OAANA,CAAU,IAC9DnP,EAAOiR,EAAgBzP,KAAI,SAACF,GAAQ,OAAKA,EAAItB,IAAI,IAIvD,MAAO,CAAE+Q,wBAHuBE,EAAgBzP,KAC9C,SAACF,GAAQ,OAAKA,EAAI+C,GAAG,IAEWrE,KAAAA,EACpC,CA4BMkR,CAJsBlS,EAAKqC,QAAO,SAAC8N,EAAG9K,GAAG,OACzCyM,EAAoBxI,SAASjE,EAAI,KAE3B0M,wBAGRjE,GAAiBiE,EAEnB,MAAO,GAAIN,EAAMU,SAAWV,EAAMW,QAEhC,GAAI/E,EAAa/D,SAASkI,KAAcvF,EAAQ,CAC9CqB,EAAgBD,EAAahL,QAAO,SAACqM,GAAC,OAAKA,IAAM8C,CAAQ,KACzD1D,IAAiB,SAACqC,GAEhB,OADAA,EAAIA,EAAE9N,QAAO,SAACqM,GAAC,OAAKA,IAAM8C,CAAQ,IAC3BrB,CACT,IACA,IAAI2B,EAAqCjE,GAAcxL,QACrD,SAACqM,GAAC,OAAKA,IAAM8C,CAAQ,IAGvB1D,GAAiBgE,EAEnB,KAAO,CACLxE,EAAgB,GAADvI,QAAA9B,EAAAA,EAAAA,GAAKoK,GAAY,CAAEmE,KAClC1D,IAAiB,SAACqC,GAEhB,OADAA,EAAExB,KAAK6C,GACArB,CACT,IACA,IAAI2B,EAAkC,GAAA/M,QAAA9B,EAAAA,EAAAA,GACjC4K,IAAa,CAChB2D,IAGF1D,GAAiBgE,EAEnB,MAGAxE,EAAgB,CAACkE,SA1DnBlE,EAAgB,CAACkE,IA6DnB9D,EAAwB8D,EAC1B,CA0NkCa,CAAeb,EAAU9K,EAAE,EAC3CD,cAAe,SAACC,GAGVwH,KACFoE,aAAapE,IACbC,GAAiB,OAGnB,IAAMoE,EAAiBC,YAAW,YAlOzB,SAC3BhB,EACAC,GAEA,IAAM5B,EAAM7P,EAAKwR,GACjB,IAAIjF,EAAasD,IACZxD,EAAL,CAGA,IAAIyF,EAAqC,GAQzC,GANEA,EADE/F,EACiB,GAAAhH,QAAA9B,EAAAA,EAAAA,GAAO4K,KAAa5K,EAAAA,EAAAA,GAAKoK,IAEtB,CAACmE,GAIrB3D,GAAcvE,SAASkI,KAAcvF,EAIvC,OAHA6F,EAAsBjE,GAAcxL,QAAO,SAACqM,GAAC,OAAKA,IAAM8C,CAAQ,IAChE1D,GAAiBgE,QACjBhF,EAAqBwD,QAAQ,GAAIkB,GAInC1D,GAAiBgE,GACjBhF,EAAqBwD,QAAQ,CAACT,GAAM2B,EAnBR,CAoB9B,CAyMsBiB,CAAqBjB,EACvB,GAAG,KAEHrD,GAAiBoE,EAInB,EACAnS,UAAW,SAACsG,GAINwH,KACFoE,aAAapE,IACbC,GAAiB,OAGnB,IAAMoE,EAAiBC,YAAW,YA3K7B,SAAC9L,GAGxB,GAFAA,EAAEqI,kBAEY,UAAVrI,EAAEhE,KAA6B,gBAAVgE,EAAEhE,IAAuB,CAEhD,GADAgE,EAAEW,kBACGgF,EAAiB,OAEtB,IAAIyF,EAAqC,GACnCN,EAAWnE,EAAaA,EAAajL,OAAS,GAElD0P,EADE/F,EACiB,GAAAhH,QAAA9B,EAAAA,EAAAA,GAAO4K,KAAa5K,EAAAA,EAAAA,GAAKoK,IAEtB,CAACmE,GAEzB,IAAM3B,EAAM7P,EAAK8R,EAAoBA,EAAoB1P,OAAS,IAClE,GAAImK,EAAasD,GACf,OAGF,GAAIhC,GAAcvE,SAASkI,KAAcvF,EAIvC,OAHA6F,EAAsBjE,GAAcxL,QAAO,SAACqM,GAAC,OAAKA,IAAM8C,CAAQ,IAChE1D,GAAiBgE,QACjBhF,EAAqBwD,QAAQ,GAAIkB,GAInC1D,GAAiBgE,GACjBhF,EAAqBwD,QAAQ,CAACT,GAAM2B,EACtC,MAAO,GAAc,WAAV9K,EAAEhE,KAA8B,cAAVgE,EAAEhE,IAAqB,CACtD,IAAK2J,EAAiB,OACtB,IAAMmF,EAAWnE,EAAaA,EAAajL,OAAS,GAE9C4P,EAAkBhS,EAAKqC,QAAO,SAAC8N,EAAG9K,GAAG,OACzCgI,EAAa/D,SAASjE,EAAI,IAGZ,OAAZ0H,QAAY,IAAZA,GAAAA,EAAcuD,UACJ,OAAZvD,QAAY,IAAZA,GAAAA,EAAcuD,QAAQ0B,EAAiBtL,EAAEhE,IAAK8O,GAElD,CACF,CAoIsBkB,CAAiBhM,EACnB,GAAG,KAEHyH,GAAiBoE,EAGnB,EACAI,cAAe,SAACjM,GAAC,OA5GV,SAAC+K,EAAYD,GACpCC,EAAMpK,iBACN,IAAMuL,EAAc5S,EAAKwR,GACrB/E,GACFA,EAAamG,EAAanB,EAE9B,CAsGwCoB,CAAiBnM,EAAG8K,EAAS,EAAC3M,SAEnD/E,EAAQ0C,KAAI,SAACC,EAAUqQ,GAAgB,OACtChO,EAAAA,EAAAA,MAAA,OAEET,MAAO,CAAEnC,MAAOO,EAAIP,OACpB2D,UAAS,aAAAd,OAAekI,IAAkB6F,EAAQ,mBAAwB,GAAE,SAAA/N,OAAQyM,EAAQ,SAAAzM,OAAQ+N,GAAWjO,SAAA,EAE/GT,EAAAA,EAAAA,KAAA,SACEd,MAAOuM,EAAIpN,EAAIsQ,OACfvK,SAAU,SAAC9B,GAAQ,EACnBP,SAAUwF,EACV9F,UAAS,GAAAd,OAAKsI,EAAa/D,SAASkI,GAChC,eACA,GAAE,KAAAzM,OACA8I,GAAcvE,SAASkI,GACvB,iBACA,GAAE,gCAAAzM,OAEK,WAAbtC,EAAI4D,KAAoB,SAAW,OAAM,mCAG3CjC,EAAAA,EAAAA,KAAA,OACEyB,UAAU,gBACVwL,YAAa,SAAC3K,GACZA,EAAEW,iBACFyH,GAAYgE,EAAUpM,EACxB,EACA4K,aAAc,SAAC5K,GACbA,EAAEW,iBACFqI,GAAiBoD,EACnB,EACAvB,aAAc,SAAC7K,GACbA,EAAEW,iBACFsI,IACF,MA/BGmD,EAiCD,KAzEHtB,EA2ED,WAMbhF,IAAapI,EAAAA,EAAAA,KAAA,OAAKyB,UAAU,gBAAehB,UAC1CT,EAAAA,EAAAA,KAAA,OAAKyB,UAAU,iBAGnBf,EAAAA,EAAAA,MAAA,OAAKe,UAAU,qBAAoBhB,SAAA,EACjCC,EAAAA,EAAAA,MAAA,OAAAD,SAAA,CAAK,aAAe,OAAJ7E,QAAI,IAAJA,OAAI,EAAJA,EAAMoC,WACtBgC,EAAAA,EAAAA,KAAA,OAAAS,UAAKT,EAAAA,EAAAA,KAAC4O,EAAAA,EAAU,CAACC,MAAOvG,EAAMtK,OAAQoG,SAAU,SAAC9B,EAAGpD,GAClDuJ,EAAcvJ,EAAQ,EACxB,aAMV,G,8pBC7cW4P,EAAsB,SAAHtT,GAQC,IAADuT,EAP9BC,EAAOxT,EAAPwT,QACAC,EAAIzT,EAAJyT,KACAjS,EAAMxB,EAANwB,OACAkS,EAAI1T,EAAJ0T,KACAzH,EAAiBjM,EAAjBiM,kBACA0H,EAAe3T,EAAf2T,gBAAeC,EAAA5T,EACf6T,aAAAA,OAAY,IAAAD,EAAG,WAAQ,EAACA,EAElBxO,GAAKyD,EAAAA,EAAAA,SACLiL,GAAiB/S,EAAAA,EAAAA,QAAyB,MAC1CgT,GAAWhT,EAAAA,EAAAA,QAAY,MACvBiT,GAAYjT,EAAAA,EAAAA,QAAY,MAC9BC,GAA6BC,EAAAA,EAAAA,WAAS,GAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAArCiT,EAAI/S,EAAA,GAAEgT,EAAYhT,EAAA,GACzBI,GAAwBL,EAAAA,EAAAA,UAAS,IAAGM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAA7BlB,EAAImB,EAAA,GAAE4S,EAAO5S,EAAA,GACpB6S,GAA8BC,EAAAA,EAAAA,aAAY,CACxCC,YAAalP,EACbmP,WAAW,SAADC,GAAA,OAAAjB,EAAAA,IAAAkB,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAE,SAAAC,EAAOC,GAAa,OAAAH,EAAAA,EAAAA,KAAAI,MAAA,SAAAC,GAAA,cAAAA,EAAAhO,KAAAgO,EAAAC,MAAA,cAAAD,EAAAC,KAAA,EACxBxB,EAAQyB,IAAI,GAAD9P,OACR,OAAJuO,QAAI,IAAJA,OAAI,EAAJA,EAAMwB,IAAG,KAAA/P,OAAQ,OAAJuO,QAAI,IAAJA,OAAI,EAAJA,EAAMyB,aAAY,KAAAhQ,OAAI0P,EAASO,QAC/C,CACEC,QAAS,CACPC,cAAc,UAADnQ,OAAgB,OAAJsO,QAAI,IAAJA,OAAI,EAAJA,EAAM8B,gBAGpC,cAAAR,EAAAS,OAAA,SAAAT,EAAAU,MAAA,wBAAAV,EAAAW,OAAA,GAAAd,EAAA,MAAAe,MAAA,KAAAhH,UAAA,EACHiH,UAAW,SAACC,GAEV1B,EADiB0B,EACAzU,KAAKuS,GACxB,IAdM/G,EAASwH,EAATxH,UAAWkJ,EAAM1B,EAAN0B,OAsBbC,GAAkBC,EAAAA,EAAAA,WAAS,SAACC,GAAK,OANjB,SAACA,GACP,KAAVA,GACFH,EAAO,CAAEV,OAAQa,GAErB,CAE4CC,CAAcD,EAAM,GAAE,KAY5DE,EAAa,WACjBjC,GAAa,GACbL,GACF,EA8FA,OAzFAtR,EAAAA,EAAAA,YAAU,WACJ0R,GAAQD,EAAUtD,UACpB0F,EAAAA,EAAAA,GAAK,MAAMC,MAAK,WAAO,IAADC,EACH,QAAjBA,EAAAtC,EAAUtD,eAAO,IAAA4F,GAAjBA,EAAmBhP,OACrB,GAEJ,GAAG,CAAC2M,EAAMD,IAmFH,CACLuC,OAjFA/R,EAAAA,EAAAA,KAAC+R,EAAAA,EAAK,CACJC,KAAMvC,EACNwC,QAAS,WACPvC,GAAa,EACf,EACA,kBAAgB,oBAChB,mBAAiB,0BAAyBjP,UAE1CT,EAAAA,EAAAA,KAAA,OAAKC,MAAO,CACVG,SAAU,WACVU,IAAK,MACL+D,KAAM,MACNS,UAAW,wBACXxH,MAAO,OACP0C,WAAY,OACZ0R,WAAY,OACZC,cAAe,OACfC,YAAa,OACbC,aAAc,QACd5R,UACAC,EAAAA,EAAAA,MAAA,OAAAD,SAAA,EACET,EAAAA,EAAAA,KAACuF,EAAAA,GAAS,CACRjE,MAAO,CAAErB,MAAO,CAAE2B,QAAS,SAC3B8B,MAAO,CACLjC,UAAW,8BACXQ,KAAM,OACNhC,MAAO,CAAEnC,MAAO,OAAQwU,aAAc,QACtClO,SAAU,SAAC9B,GACTA,EAAEW,iBACFsO,EAAgBjP,EAAEiQ,cAAcrT,MAClC,EACAlD,UAAW,SAACsG,GAKV,GAJc,UAAVA,EAAEhE,KAA6B,gBAAVgE,EAAEhE,MACzBgE,EAAEW,iBACFqO,EAAO,CAAEV,OAAStO,EAAEwC,OAAe5F,SAEvB,cAAVoD,EAAEhE,IAAqB,CACzBgE,EAAEW,iBACF,IAAMuP,EAAejD,EAASrD,QAAQD,mBAAmBpJ,cAAc,sCAGvEuL,YAAW,WACLoE,GACFA,EAAa1P,OACjB,GAAG,IACL,CACF,GAEFa,SAAU2L,KAEZtP,EAAAA,EAAAA,KAACoH,EAAAA,EAAW,CACV3L,IAAK8T,EACL3T,KAAMA,EACNoB,OAAQA,EAAOiB,QAAO,SAACC,GAAG,OAAMA,EAAIC,IAAI,IACxCL,MAlEI,IAmEJhC,OAlEK,IAmELyL,cAAc,EACdE,kBAAmBA,KAGrBzH,EAAAA,EAAAA,KAACyS,EAAAA,EAAU,CACTxS,MAAO,CACLG,SAAU,WACVU,IAAK,MACLuE,MAAO,QAET,aAAW,gBACXnD,QAASyP,EAAWlR,UAEpBT,EAAAA,EAAAA,KAAC0S,EAAAA,EAAS,CAACzS,MAAO,CAAEkB,SAAU,mBAatCwR,UA7GgB,SAAC/B,GACjBU,EAAO,CAAEV,OAAQA,IACjBlB,GAAa,GACbtB,YAAW,WAAO,IAADwE,EACXtD,EAAepD,UACjBoD,EAAepD,QAAQhN,MAAQ0R,GAEX,QAAtBgC,EAAAtD,EAAepD,eAAO,IAAA0G,GAAtBA,EAAwB9P,OAC1B,GAAG,IACL,EAqGE6O,WAAAA,EACAvJ,UAAAA,EAEJ,E,4ECxIayK,EAAU,SAACC,EAAYC,GAClC,MACO,iBADCA,EAAO9Q,MAEX/B,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACK4S,GAAK,IAAAE,EAAAA,EAAAA,GAAA,GACPD,EAAOpE,MAAQoE,EAAO7T,QAGlB4T,CAEb,EACaG,EAAY,CACvB,CAAE3U,IAAK,WAAYgD,MAAO,YAAaxD,MAAO,KAC9C,CAAEQ,IAAK,aAAcgD,MAAO,aAAcxD,MAAO,KACjD,CAAEQ,IAAK,aAAcgD,MAAO,SAAUxD,MAAO,IAAKmE,KAAM,UACxD,CAAE3D,IAAK,WAAYgD,MAAO,OAAQxD,MAAO,KACzC,CAAEQ,IAAK,SAAUgD,MAAO,SAAUxD,MAAO,KACzC,CACEQ,IAAK,gBACLgD,MAAO,kBACPxD,MAAO,KAET,CAAEQ,IAAK,eAAgBgD,MAAO,eAAgBxD,MAAO,KACrD,CAAEQ,IAAK,cAAegD,MAAO,eAAgBxD,MAAO,KACpD,CAAEQ,IAAK,QAASgD,MAAO,SAAUxD,MAAO,KACxC,CAAEQ,IAAK,WAAYgD,MAAO,YAAaxD,MAAO,IAAKK,MAAM,IAE9C+U,EAAkB,CAC7B,CAAEvE,MAAO,OAAQ3B,WAAY,gBAAiBlP,MAAO,KACrD,CAAE6Q,MAAO,SAAU3B,WAAY,UAAWlP,MAAO,KACjD,CACE6Q,MAAO,OACP3B,WAAY,OACZmG,KAAM,IAGGC,EAAiB,CAC5B,CAAEzE,MAAO,YAAa3B,WAAY,OAAQlP,MAAO,KACjD,CAAE6Q,MAAO,OAAQ3B,WAAY,YAAamG,KAAM,IAE5CE,EAAW,MAEF,SAASC,IAAkB,IAADC,EAAAxE,EAAAyE,EAAAC,EAAAjY,EAAAkY,EAAAC,EACjCpE,GAAWhT,EAAAA,EAAAA,QAAY,MAC7BqX,EAAgCC,EAAAA,SAAmC,MAAKC,GAAAnX,EAAAA,EAAAA,GAAAiX,EAAA,GAAjEG,EAAQD,EAAA,GAAEE,EAAWF,EAAA,GACtB9B,GAAOiC,QAAQF,GAOrBvX,IAAoCC,EAAAA,EAAAA,WAAS,GAAMC,IAAAC,EAAAA,EAAAA,GAAAH,GAAA,GAA5C0X,GAAUxX,GAAA,GAAEyX,GAAazX,GAAA,GAChCI,IAA0CL,EAAAA,EAAAA,UAAsB,IAAGM,IAAAJ,EAAAA,EAAAA,GAAAG,GAAA,GAA5DsX,GAAarX,GAAA,GAAEsX,GAAgBtX,GAAA,GACtCG,IAAkDT,EAAAA,EAAAA,WAAS,GAAMU,IAAAR,EAAAA,EAAAA,GAAAO,GAAA,GAA1DoX,GAAiBnX,GAAA,GAAEoX,GAAoBpX,GAAA,GAC9CG,IAAkCb,EAAAA,EAAAA,WAAS,GAAMc,IAAAZ,EAAAA,EAAAA,GAAAW,GAAA,GAA1CkX,GAASjX,GAAA,GAAEmS,GAAYnS,GAAA,GAIxBkX,IAAiBlY,EAAAA,EAAAA,QAAyB,MAEhDwM,IAA4CtM,EAAAA,EAAAA,UAAS,MAAKuM,IAAArM,EAAAA,EAAAA,GAAAoM,GAAA,GAAnD2L,GAAc1L,GAAA,GAAE2L,GAAiB3L,GAAA,GACxCG,IAA8B1M,EAAAA,EAAAA,UAAS,IAAG2M,IAAAzM,EAAAA,EAAAA,GAAAwM,GAAA,GAAnCyL,GAAOxL,GAAA,GAAEyL,GAAUzL,GAAA,GAE1B0L,IAA0BC,EAAAA,EAAAA,YAAWC,EAAAA,GAA7BhG,GAAO8F,GAAP9F,QAASC,GAAI6F,GAAJ7F,KACXgG,IAAY1Y,EAAAA,EAAAA,QAAyB,MAGrC2Y,IAAe3Y,EAAAA,EAAAA,QAAyB,MACxC4Y,IAAmB5Y,EAAAA,EAAAA,QAA0B,MAK7C6Y,IAAuB7Y,EAAAA,EAAAA,QAA0B,MACjD8Y,IAAgC9Y,EAAAA,EAAAA,QAAY,MAK5C+Y,IAAc/Y,EAAAA,EAAAA,QAAyB,MACvCgZ,IAAWhZ,EAAAA,EAAAA,QAAyB,MACpCiZ,IAAajZ,EAAAA,EAAAA,QAAyB,MACtCkZ,IAAclZ,EAAAA,EAAAA,QAA4B,MAC1CmZ,IAAenZ,EAAAA,EAAAA,QAAyB,MACxCoZ,IAAapZ,EAAAA,EAAAA,QAAyB,MACtCqZ,IAAiBrZ,EAAAA,EAAAA,QAAyB,MAC1CsZ,IAAYtZ,EAAAA,EAAAA,QAAO,IACnBuZ,IAAevZ,EAAAA,EAAAA,QAAO,IACtBwZ,IAAexZ,EAAAA,EAAAA,QAAO,IACtByZ,IAAWzZ,EAAAA,EAAAA,QAAO,IAElB0Z,IAAe1Z,EAAAA,EAAAA,QAA0B,MAGzC2Z,IAAc3Z,EAAAA,EAAAA,QAAO,IACrB4Z,IAAS5Z,EAAAA,EAAAA,QAAO,IAChB6Z,IAAgB7Z,EAAAA,EAAAA,QAAO,IAEvB8Z,IAAW9Z,EAAAA,EAAAA,QAAyB,MACpC+Z,IAAU/Z,EAAAA,EAAAA,QAAyB,MACnCga,IAAaha,EAAAA,EAAAA,QAA4B,MACzCia,IAAQja,EAAAA,EAAAA,QAAyB,MACjCka,IAAYla,EAAAA,EAAAA,QAAyB,MACrCma,IAAgBna,EAAAA,EAAAA,QAA4B,MAGlDoa,IACEC,EAAAA,EAAAA,UAAS,CACPvD,SAAU,iBACVwD,QAAQ,WAAD,OAAAtD,EAAAA,IAAAtD,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAE,SAAAC,IAAA,OAAAF,EAAAA,EAAAA,KAAAI,MAAA,SAAAC,GAAA,cAAAA,EAAAhO,KAAAgO,EAAAC,MAAA,cAAAD,EAAAC,KAAA,EACMxB,GAAQyB,IAAI,sCAAuC,CAC9DI,QAAS,CACPC,cAAc,UAADnQ,OAAgB,OAAJsO,SAAI,IAAJA,QAAI,EAAJA,GAAM8B,gBAEhC,KAAD,SAAAR,EAAAS,OAAA,SAAAT,EAAAU,MAAA,wBAAAV,EAAAW,OAAA,GAAAd,EAAA,MACHe,MAAA,KAAAhH,UAAA,EACD2M,sBAAsB,EACtB1F,UAAW,SAACC,GACV,IAAM0F,EAAW1F,GACjBO,EAAAA,EAAAA,MAAK,KAAKC,MAAK,WACbqE,GAAYhK,QAAU6K,EAASna,KAAKoa,MAAM,GAAGC,MACzCZ,GAASnK,UACXmK,GAASnK,QAAQhN,MAAQ6X,EAASna,KAAKoa,MAAM,GAAGC,MAEpD,GAEF,IApBeC,GAAmBP,GAA9BvO,UAAyC+O,GAAmBR,GAA5BS,QAuBxCxH,IAA6CC,EAAAA,EAAAA,aAAY,CACvDC,YAAauD,EACbtD,WAAW,SAADC,GAAA,OAAAjB,EAAAA,IAAAkB,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAE,SAAAkH,EAAOC,GAAc,OAAApH,EAAAA,EAAAA,KAAAI,MAAA,SAAAiH,GAAA,cAAAA,EAAAhV,KAAAgV,EAAA/G,MAAA,UACf,WAAZoE,GAAoB,CAAA2C,EAAA/G,KAAA,QACA,cAAf8G,EAAUE,KAAKD,EAAA/G,KAAA,EACTxB,GAAQyI,KAAK,8BAA+BH,EAAW,CAClEzG,QAAS,CACPC,cAAc,UAADnQ,OAAgB,OAAJsO,SAAI,IAAJA,QAAI,EAAJA,GAAM8B,gBAEhC,KAAD,EAOD,KAAD,SAAAwG,EAAAvG,OAAA,SAAAuG,EAAAtG,MAPE,OAEkB,cAAfqG,EAAUE,KAAKD,EAAA/G,KAAA,EACTxB,GAAQyI,KAAK,2BAA4BH,EAAW,CAC/DzG,QAAS,CACPC,cAAc,UAADnQ,OAAgB,OAAJsO,SAAI,IAAJA,QAAI,EAAJA,GAAM8B,gBAEjC,wBAAAwG,EAAArG,OAAA,GAAAmG,EAAA,MACHlG,MAAA,KAAAhH,UAAA,EACDiH,UAAW,SAACC,GACV,GAAIA,EAAIzU,KAAK8a,QAEX,OADAC,KACOC,IAAAA,KAAU,CACfxX,SAAU,SACVwD,KAAM,UACNR,MAAOiO,EAAIzU,KAAKib,QAChBC,mBAAmB,EACnBC,MAAO,OAIXH,IAAAA,KAAU,CACRxX,SAAU,SACVwD,KAAM,QACNR,MAAOiO,EAAIzU,KAAKib,QAChBC,mBAAmB,EACnBC,MAAO,MAEX,IArCMzG,GAAM1B,GAAN0B,OAAmB0G,GAAapI,GAAxBxH,UAyChB6P,IACEpI,EAAAA,EAAAA,aAAY,CACVC,YAAauD,EACbtD,WAAW,SAADmI,GAAA,OAAA1E,EAAAA,IAAAvD,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAE,SAAAgI,EAAOb,GAAc,OAAApH,EAAAA,EAAAA,KAAAI,MAAA,SAAA8H,GAAA,cAAAA,EAAA7V,KAAA6V,EAAA5H,MAAA,cAAA4H,EAAA5H,KAAA,EACzBxB,GAAQyI,KAAK,wCAAyCH,EAAW,CACrEzG,QAAS,CACPC,cAAc,UAADnQ,OAAgB,OAAJsO,SAAI,IAAJA,QAAI,EAAJA,GAAM8B,gBAEjC,cAAAqH,EAAApH,OAAA,SAAAoH,EAAAnH,MAAA,wBAAAmH,EAAAlH,OAAA,GAAAiH,EAAA,MAAAhH,MAAA,KAAAhH,UAAA,EACJiH,UAAU,SAADiH,GAAA,OAAA5E,EAAAA,IAAAxD,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAE,SAAAmI,EAAOjH,GAAG,IAAAkH,EAAAxB,EAAAyB,EAAAC,EAAAC,EAAAC,EAAAC,EAgBJC,EAAoB,OAAA3I,EAAAA,EAAAA,KAAAI,MAAC,SAADwI,GAAA,cAAAA,EAAAvW,KAAAuW,EAAAtI,MAAA,OA2BlC,GA3BcqI,EAAoB,SAAAE,EAAAC,GAAA,OAAAT,EAAAA,IAAAtI,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAnC,SAAA8I,EACEC,EACAxI,GAAW,IAAAyI,EAAAC,EAAA5W,EAAA,OAAA0N,EAAAA,EAAAA,KAAAI,MAAA,SAAA+I,GAAA,cAAAA,EAAA9W,KAAA8W,EAAA7I,MAAA,OAEL2I,EAA8B,GAAEC,GAAAlJ,EAAAA,EAAAA,KAAAC,MAAA,SAAAiJ,IAAA,IAAAE,EAAAC,EAAAxC,EAAAyC,EAAAC,EAAAC,EAAC,OAADxJ,EAAAA,EAAAA,KAAAI,MAAA,SAAAqJ,GAAA,cAAAA,EAAApX,KAAAoX,EAAAnJ,MAAA,OAGc,OAD5C8I,EAAYJ,EAAa1W,GACzB+W,EAAO,GAAA5Y,OAAM+P,EAAG,KAAA/P,OAAI2Y,EAAUM,gBAAcD,EAAAnJ,KAAA,EAC3BqJ,MAAMN,GAAS,KAAD,EAAvB,OAARxC,EAAQ4C,EAAA1I,KAAA0I,EAAAnJ,KAAA,EACKuG,EAASyC,OAAO,KAAD,EAA5BA,EAAIG,EAAA1I,KACJwI,EAAO,IAAIK,KAAK,CAACN,GAAOF,EAAUS,SAAU,CAChD9X,KAAMqX,EAAUU,WAEZN,EAAS,IAAIO,WACnBd,EAAgB5O,KACd,IAAI2P,SAAQ,SAACC,EAASC,GACpBV,EAAOW,OAAS,SAAUhN,GACxB8M,EAAQV,EACV,EACAC,EAAOY,QAAU,SAAUjN,GACzB+M,EAAO,IAAIG,MAAM,uBAAyBd,EAAKe,MACjD,EACAd,EAAOe,cAAchB,EACvB,KACA,yBAAAE,EAAAzI,OAAA,GAAAkI,EAAA,IAnBK5W,EAAQ,EAAE,KAAD,OAAEA,EAAQ0W,EAAalb,QAAM,CAAAqb,EAAA7I,KAAA,eAAA6I,EAAAqB,cAAAtB,IAAA,eAAE5W,IAAO6W,EAAA7I,KAAA,sBAAA6I,EAAArI,OAAA,SAqBjDmI,GAAe,wBAAAE,EAAAnI,OAAA,GAAA+H,EAAA,MACvB9H,MAAA,KAAAhH,UAAA,EA1CO,OAAHkH,QAAG,IAAHA,GAAAA,EAAKzU,KAAK8a,QAAQ,CAADoB,EAAAtI,KAAA,eAAAsI,EAAA9H,OAAA,SACb2J,MAAM,WAADha,OAAe,OAAH0Q,QAAG,IAAHA,OAAG,EAAHA,EAAKzU,KAAKib,WAAU,OAIW,GAAnDW,GADAzB,EAAW1F,GACOzU,KAAKge,kBAAkB,GAAGpC,QAC9CzB,EAASna,KAAKie,OAAO,GAAG,CAAD/B,EAAAtI,KAAA,SACsC,OAAzDkI,EAAcoC,KAAKC,MAA6B,QAAxBtC,EAAC1B,EAASna,KAAKie,OAAO,UAAE,IAAApC,OAAA,EAAvBA,EAAyBoC,QAAO/B,EAAAtI,KAAA,EAC5BqI,EACjCH,EAAY,GAAD/X,OACR6C,IAA+B,QAAA7C,OAAO6X,IACzC,KAAD,EAHyB,OAApBG,EAAoBG,EAAA7H,KAAA6H,EAAAtI,KAAA,GAIC0J,QAAQc,IAAIrC,GAAsB,KAAD,GAAtDC,EAAYE,EAAA7H,KAClBoD,GAAiBuE,GAAc,QA+BjCrJ,EAASrD,QAAQ9M,gBAAgB2X,EAASna,KAAKge,mBAE3CvE,GAASnK,UACXmK,GAASnK,QAAQhN,MAAQ6X,EAASna,KAAKge,kBAAkB,GAAGpC,QAE1D9B,GAAcxK,UAChBwK,GAAcxK,QAAQhN,MAAQ6X,EAASna,KAAKge,kBAAkB,GAAGK,MAE/D3E,GAAQpK,UACVoK,GAAQpK,QAAQhN,MAAQ6X,EAASna,KAAKge,kBAAkB,GAAGM,MAEzD1E,GAAMtK,UACRsK,GAAMtK,QAAQhN,MAAQ6X,EAASna,KAAKge,kBAAkB,GAAGO,KAEvD1E,GAAUvK,UACZuK,GAAUvK,QAAQhN,MAAQ6X,EAASna,KAAKge,kBAAkB,GAAGQ,SAE3D7E,GAAWrK,UACbqK,GAAWrK,QAAQhN,MAAQ6X,EAASna,KAAKge,kBAAkB,GAAGS,SAEhElF,GAAOjK,QAAU6K,EAASna,KAAKge,kBAAkB,GAAGU,KACpDlF,GAAclK,QAAU6K,EAASna,KAAKge,kBAAkB,GAAGW,YAAW,yBAAAzC,EAAA5H,OAAA,GAAAoH,EAAA,MAIvEnH,MAAA,KAAAhH,UAAA,IA/EWqR,GAAoBvD,GAA5B3G,OAAyCmK,GAAuBxD,GAAlC7P,UAmFtCsT,GAKI5M,EAAoB,CACtBE,QAAAA,GACAC,KAAAA,GACAC,KAAM,CACJwB,IAAK,wCACLC,aAAc,sBAEhB3T,OAAQ,CACN,CAAE2R,MAAO,OAAQ3B,WAAY,OAAQlP,MAAO,KAC5C,CAAE6Q,MAAO,OAAQ3B,WAAY,SAAUlP,MAAO,KAC9C,CAAE6Q,MAAO,UAAW3B,WAAY,cAAelP,MAAO,IAAKK,MAAM,GACjE,CACEwQ,MAAO,OACP3B,WAAY,OACZlP,MAAO,KAET,CACE6Q,MAAO,KACP3B,WAAY,KACZlP,MAAO,IACPK,MAAM,GAER,CACEwQ,MAAO,YACP3B,WAAY,YACZlP,MAAO,IACPK,MAAM,IAGVsJ,kBAAmB,SAACrK,GACdA,EAAYY,OAAS,KAEvB4T,EAAAA,EAAAA,MAAK,KAAKC,MAAK,WACbsE,GAAOjK,QAAU9O,EAAY,GAAGue,UAChCvF,GAAclK,QAAU9O,EAAY,GAAGme,YACnC/E,GAAMtK,UACRsK,GAAMtK,QAAQhN,MAAQ9B,EAAY,GAAGke,MAEnC5E,GAAcxK,UAChBwK,GAAcxK,QAAQhN,MAAQ9B,EAAY,GAAG6d,MAE3CxE,GAAUvK,UACZuK,GAAUvK,QAAQhN,MAAQ9B,EAAY,GAAGge,SAEvChe,EAAY,GAAGie,SAAsC,KAA3Bje,EAAY,GAAGie,SACvC9E,GAAWrK,UACbqK,GAAWrK,QAAQhN,MAAQ9B,EAAY,GAAGie,QAIhD,IAEAO,KAGJ,EAEAzM,gBAAiB,cA7DV0M,GAAiBH,GAAxB3J,MACY6J,GAAsBF,GAAlC/J,WACWmK,GAAqBJ,GAAhC/I,UACWoJ,GAA0BL,GAArCtT,UA8DF4T,GAKIlN,EAAoB,CACtBE,QAAAA,GACAC,KAAAA,GACAC,KAAM,CACJwB,IAAK,oCACLC,aAAc,kBAEhB3T,OAAQ,CACN,CAAE2R,MAAO,YAAa3B,WAAY,OAAQlP,MAAO,KACjD,CAAE6Q,MAAO,OAAQ3B,WAAY,YAAalP,MAAO,MAEnD2J,kBAAmB,SAACrK,GACdA,EAAYY,OAAS,IACvBoQ,YAAW,WACTyH,GAAU3J,QAAU9O,EAAY,GAAG6e,UAC/B1G,GAASrJ,UACXqJ,GAASrJ,QAAQhN,MAAQ9B,EAAY,GAAG8e,KAE5C,GAAG,KAEHC,KACA5H,IAAqB,GACrBnG,YAAW,WAAO,IAADgO,EACG,QAAlBA,EAAA5G,GAAWtJ,eAAO,IAAAkQ,GAAlBA,EAAoBtZ,OACtB,GAAG,KAEP,EACAuM,aAAc,WACZjB,YAAW,WACTmG,IAAqB,EACvB,GAAG,IACL,EACApF,gBAAiB,aApCVkN,GAAgBL,GAAvBjK,MACYoK,GAAqBH,GAAjCrK,WACW2K,GAAoBN,GAA/BrJ,UACW4J,GAAyBP,GAApC5T,UAoCFoU,GAKI1N,EAAoB,CACtBE,QAAAA,GACAC,KAAAA,GACAjS,OAAQ,CACN,CAAE2R,MAAO,OAAQ3B,WAAY,gBAAiBlP,MAAO,IACrD,CAAE6Q,MAAO,SAAU3B,WAAY,UAAWlP,MAAO,IACjD,CACE6Q,MAAO,OACP3B,WAAY,OACZlP,MAAO,MAGXoR,KAAM,CACJwB,IAAK,8BACLC,aAAc,kBAEhBlJ,kBAAmB,SAACrK,GAKQ,IAADqf,EAJrBrf,EAAYY,OAAS,IACvBwd,GAAqB,CAAEkB,OAAQtf,EAAY,GAAGob,SAC9C3D,GAAW,UACX8H,KACI1H,GAAU/I,UACK,QAAjBuQ,EAAAxH,GAAU/I,eAAO,IAAAuQ,GAAjBA,EAAmB3Z,SAGzB,EACAqM,gBAAiB,cA9BVyN,GAAcJ,GAArBzK,MACY4K,GAAmBH,GAA/B7K,WACWkL,GAAkBL,GAA7B7J,UACWmK,GAAuBN,GAAlCpU,UA8BI2U,IAAeC,EAAAA,EAAAA,cAAY,SAADC,GAAA,OAAAzhB,EAAAA,IAAAyU,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAC,SAAA+M,EAAO5a,GAAM,IAAA6a,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EA2BnCC,EAAYC,EAAAC,EAAA,OAAA3N,EAAAA,EAAAA,KAAAI,MAAC,SAADwN,GAAA,cAAAA,EAAAvb,KAAAub,EAAAtN,MAAA,OA1BmC,GA0B/CmN,EAAY,SAACD,GACpB,IAAMK,EAAQ3J,GACd,GAAI2J,EAAM/f,OAAS,EACjB,IADqB,IAADggB,EAAA,WAElB,IAAMvE,EAAOsE,EAAMzT,GACboP,EAAS,IAAIO,WACnByD,EAAanT,KACX,IAAI2P,SAAQ,SAACC,EAASC,GACpBV,EAAOW,OAAS,SAAUhN,GAAQ,IAAD4Q,EAC/B9D,EAAQ,CACN+D,QAAS,WACTnE,SAAUN,EAAKe,KACf2D,YAAyB,QAAdF,EAAE5Q,EAAMvI,cAAM,IAAAmZ,OAAA,EAAZA,EAAc5T,OAC3B2P,SAAUP,EAAKxX,KACfwX,KAAAA,GAEJ,EACAC,EAAOY,QAAU,SAAUjN,GACzB+M,EAAO,IAAIG,MAAM,uBAAyBd,EAAKe,MACjD,EACAd,EAAOe,cAAchB,EACvB,IAEJ,EApBSnP,EAAI,EAAGA,EAAIyT,EAAM/f,OAAQsM,IAAG0T,GAsBzC,EAnDMP,EAAelO,EAASrD,QAAQ7M,oBAElCmX,GAAMtK,SAAmC,KAAxBsK,GAAMtK,QAAQhN,MAAY,CAAA4e,EAAAtN,KAAA,eAAAsN,EAAA9M,OAAA,SACtC4G,IAAAA,KAAU,CACfxX,SAAU,SACVwD,KAAM,UACNR,MAAO,mCACP2U,MAAO,OACNlG,MAAK,WACNzD,YAAW,WAAO,IAADgQ,EACF,QAAbA,EAAA5H,GAAMtK,eAAO,IAAAkS,GAAbA,EAAeC,OACjB,GAAG,IACL,KAAE,YAEAZ,EAAazf,QAAU,GAAC,CAAA8f,EAAAtN,KAAA,eAAAsN,EAAA9M,OAAA,SACnB4G,IAAAA,KAAU,CACfxX,SAAU,SACVwD,KAAM,UACNR,MAAO,wBACP2U,MAAO,OACNlG,MAAK,WACN0C,IAAqB,EACvB,KAAE,OA8BuB,OAA3BoJ,EA3BMD,EAA2B,IA2BNI,EAAAtN,KAAA,GACF0J,QAAQc,IAAI0C,GAAc,KAAD,GAA5CE,EAAUE,EAAA7M,KACV4M,EAAgB,CACpBrF,OAAwB,QAAlB2E,EAAE9G,GAASnK,eAAO,IAAAiR,OAAA,EAAhBA,EAAkBje,MAC1Bic,IAAkB,QAAfiC,EAAE5G,GAAMtK,eAAO,IAAAkR,OAAA,EAAbA,EAAele,MACpBoc,KAAMnF,GAAOjK,QACbgP,KAAqB,QAAjBmC,EAAE/G,GAAQpK,eAAO,IAAAmR,OAAA,EAAfA,EAAiBne,MACvB+b,KAA2B,QAAvBqC,EAAE5G,GAAcxK,eAAO,IAAAoR,OAAA,EAArBA,EAAuBpe,MAC7Bmc,QAA2B,QAApBkC,EAAEhH,GAAWrK,eAAO,IAAAqR,OAAA,EAAlBA,EAAoBre,MAC7BQ,OAAyB,QAAnB8d,EAAE/G,GAAUvK,eAAO,IAAAsR,OAAA,EAAjBA,EAAmBte,MAC3Bof,OAAQxD,KAAKyD,UAAUd,IAET,WAAZ7I,IACF4J,EAAAA,EAAAA,GAAuB,CACrBC,UAAU,EACVC,GAAI,SAACC,GACHrN,IAAMpR,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EAAI2d,GAAa,IAAEc,qBAAAA,EAAsBf,WAAAA,IACnD,KAGFgB,EAAAA,EAAAA,GAAuB,CACrBC,UAAW,WACTvN,IAAMpR,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EAAI2d,GAAa,IAAED,WAAAA,IAC7B,IAEH,yBAAAE,EAAA5M,OAAA,GAAAgM,EAAA,MACF/L,MAAA,KAAAhH,UAAA,GAAE,CAACmH,GAAQ8C,GAAeQ,KAErBkK,GAAkB,SAACxc,GACvBA,EAAEW,iBACFkR,IAAc,EAChB,EACM4K,GAAkB,SAACzc,GACvBA,EAAEW,iBACFkR,IAAc,EAChB,EACM6K,GAAa,SAAC1c,GAClBA,EAAEW,iBACF,IAIyBgc,EAJnBC,EAAW5c,EAAE6c,aAAapB,MAC1BA,EAAQqB,MAAMC,KAAKH,GACnBI,EAAQ,GAAA3e,QAAA9B,EAAAA,EAAAA,GAAOuV,IAAkB2J,GAEvC,GADA5J,IAAc,IACVoL,EAAAA,EAAAA,WAAUD,GAEZ,OADoB,QAApBL,EAAA/J,GAAahJ,eAAO,IAAA+S,GAApBA,EAAsBZ,QACf1D,MAAM,gCAEbtG,GAAiBiL,EAErB,EAwGA,SAAS3H,KACP9C,GAAW,IACXtF,EAASrD,QAAQ7O,eAAe,MAChCkS,EAASrD,QAAQrP,QAAQ,IACzBsa,KAEIb,GAAQpK,UACVoK,GAAQpK,QAAQhN,OAAQsgB,EAAAA,EAAAA,GAAO,IAAItE,KAAQ,eAEzC3E,GAAWrK,UACbqK,GAAWrK,QAAQhN,MAAQ,IAEzBsX,GAAMtK,UACRsK,GAAMtK,QAAQhN,MAAQ,IAEpBuX,GAAUvK,UACZuK,GAAUvK,QAAQhN,MAAQ,IAExBwX,GAAcxK,UAChBwK,GAAcxK,QAAQhN,MAAQ,GAKlC,CACA,SAASoF,GAAamb,GACpB,OAAQA,GAAO,GAAGC,eAAe,QAAS,CACxCC,sBAAuB,EACvBC,sBAAuB,GAE3B,EAwIA7hB,EAAAA,EAAAA,YAAU,WACR,IAAM8hB,EAAgB,SAACxS,IAChBA,EAAMU,SAAWV,EAAMW,UAA0B,MAAdX,EAAM/O,MAC5C+O,EAAMpK,iBACN8Z,GAAa1P,GAEjB,EAGA,OADAyS,OAAO3U,iBAAiB,UAAW0U,GAC5B,WACLC,OAAOzU,oBAAoB,UAAWwU,EACxC,CACF,GAAG,CAAC9C,KAEJ,IAAMgD,GAA6B,KAAZnL,GAKvB,OACElU,EAAAA,EAAAA,MAAAsf,EAAAA,SAAA,CAAAvf,SAAA,EACET,EAAAA,EAAAA,KAACigB,EAAAA,EAAU,CAAC7c,MAAM,SAClB1C,EAAAA,EAAAA,MAAA,OACET,MAAO,CACLnC,MAAO,OACPhC,OAAQ,OACRqX,KAAM,EACN3S,WAAY,MACZa,QAAS,OACT6e,gBAAiB,WAEjBzf,SAAA,CAGD4b,GACAO,GACAf,IACD7b,EAAAA,EAAAA,KAACmgB,EAAAA,EAAG,CACFC,GAAI,SAACC,GAAK,OAAArN,EAAAA,EAAAA,GAAA,CACRpR,QAAS,OACTC,WAAY,SACZye,UAAW,QACVD,EAAME,YAAYC,KAAK,MAAQ,CAC9B5T,cAAe,SACf/K,WAAY,aACZsR,KAAM,EACNb,aAAc,QACf,EACA7R,UAEHC,EAAAA,EAAAA,MAAA,OACET,MAAO,CACL2B,QAAS,OACTC,WAAY,SACZye,UAAW,MACXhO,aAAc,QACd7R,SAAA,CAEDqc,IACC9c,EAAAA,EAAAA,KAACygB,EAAAA,EAAa,CAACC,QAAS5D,MAExB9c,EAAAA,EAAAA,KAACuF,EAAAA,GAAS,CACRjE,MAAO,CACL8B,MAAO,WACPnD,MAAO,CACLkB,SAAU,OACV2L,WAAY,OACZhP,MAAO,SAGX4F,MAAO,CACLjC,UAAW,8BACXQ,KAAM,SACNjG,UAAW,SAACsG,GACI,UAAVA,EAAEhE,KAA6B,gBAAVgE,EAAEhE,MACzBgE,EAAEW,iBACF4Z,GAAmBva,EAAEiQ,cAAcrT,OAEvC,EACAe,MAAO,CAAEnC,MAAO,UAGlB8F,MAAM5D,EAAAA,EAAAA,KAAC2gB,EAAAA,EAAU,CAACP,GAAI,CAAEjf,SAAU,UAClC+C,YAAa,SAAC5B,GACZA,EAAEW,iBACEwR,GAAevI,SACjB2Q,GAAmBpI,GAAevI,QAAQhN,MAE9C,EACAyE,SAAU8Q,KAGD,KAAZG,KACC5U,EAAAA,EAAAA,KAAC4gB,EAAAA,EAAM,CACLR,GAAI,CACFtkB,OAAQ,OACRqF,SAAU,QAEZ0f,QAAQ,YACRC,WAAW9gB,EAAAA,EAAAA,KAAC+gB,EAAAA,EAAO,CAACX,GAAI,CAAEtiB,MAAO,GAAIhC,OAAQ,MAC7C8E,GAAG,2BACHogB,MAAM,UACN9e,QAAS,WAEP2S,GAAW,MACb,EAAEpU,SACH,SAIHT,EAAAA,EAAAA,KAACygB,EAAAA,EAAa,CACZL,GAAI,CACFtkB,OAAQ,OACRqF,SAAU,QAEZ1F,IAAK0Z,GACLvU,GAAG,oBACHogB,MAAM,UACNH,QAAQ,YACR5e,KAAK,SACLC,QAAS6a,GACT5V,SAAsB,KAAZyN,GACV8L,QAAS1I,GACT8I,WAAW9gB,EAAAA,EAAAA,KAACihB,EAAAA,EAAQ,CAACb,GAAI,CAAEtiB,MAAO,GAAIhC,OAAQ,MAAS2E,SACxD,UAGa,QAAZmU,IAAiC,WAAZA,MACrB5U,EAAAA,EAAAA,KAAC4gB,EAAAA,EAAM,CACLR,GAAI,CACFtkB,OAAQ,OACRqF,SAAU,QAEZ0f,QAAQ,YACRC,WAAW9gB,EAAAA,EAAAA,KAAC0S,EAAAA,EAAS,CAAC0N,GAAI,CAAEtiB,MAAO,GAAIhC,OAAQ,MAC/CoG,QAAS,WACP0V,IAAAA,KAAU,CACRxU,MAAO,gBACP8d,KAAM,oCACNtd,KAAM,UACNud,kBAAkB,EAClBC,mBAAoB,UACpBC,kBAAmB,OACnBC,kBAAmB,oBAClBzP,MAAK,SAACxH,GACHA,EAAOkX,aACT5J,IAEJ,GACF,EACAqJ,MAAM,QAAOvgB,SACd,YAIHT,EAAAA,EAAAA,KAAC4gB,EAAAA,EAAM,CACLR,GAAI,CACFtkB,OAAQ,OACRqF,SAAU,QAEZgG,SAAsB,KAAZyN,GACViM,QAAQ,YACRC,WAAW9gB,EAAAA,EAAAA,KAAC+gB,EAAAA,EAAO,CAACX,GAAI,CAAEtiB,MAAO,GAAIhC,OAAQ,MAC7CoG,QAAS,YACPsf,EAAAA,EAAAA,YAAU,WACRjN,IAAqB,EACvB,KAEA3C,EAAAA,EAAAA,MAAK,KAAKC,MAAK,WAAO,IAAD4P,EACbC,EAAYnS,EAASrD,QAAQ7M,mBAC7BsiB,EAAuBD,EAAUA,EAAU1jB,OAAS,GACtDsX,GAAYpJ,UACdoJ,GAAYpJ,QAAQhN,MAAQ0iB,GACX,OAAfD,QAAe,IAAfA,OAAe,EAAfA,EAAiBriB,WAIrBiQ,EAASrD,QAAQ7O,eAAe,MAChCsX,GAAkB,MACC,QAAnB8M,EAAAnM,GAAYpJ,eAAO,IAAAuV,GAAnBA,EAAqB3e,OACvB,GACF,EACArH,IAAKwa,GAAaxV,SACnB,eAGDC,EAAAA,EAAAA,MAAA,OAAAD,SAAA,EACET,EAAAA,EAAAA,KAAC4gB,EAAAA,EAAM,CACLzZ,SAAsB,WAAZyN,GACVhU,GAAG,eACH,gBAAeoR,GAAO,kBAAe5H,EACrC,gBAAc,OACd,gBAAe4H,GAAO,YAAS5H,EAC/BlI,QAh5BM,SAACmL,GACnB2G,EAAY3G,EAAMkF,cACpB,EA+4Bc6N,GAAI,CACFtkB,OAAQ,OACRqF,SAAU,OACV6f,MAAO,QACPd,gBAAiB2B,EAAAA,EAAK,KACtB,UAAW,CACT3B,gBAAiB2B,EAAAA,EAAK,OAExBphB,SACH,WAGDC,EAAAA,EAAAA,MAACohB,EAAAA,EAAI,CACHlhB,GAAG,aACHmT,SAAUA,EACV/B,KAAMA,GACNC,QA95BM,WAClB+B,EAAY,KACd,EA65Bc+N,cAAe,CACb,kBAAmB,gBACnBthB,SAAA,EAEFT,EAAAA,EAAAA,KAACgiB,EAAAA,EAAQ,CAAC9f,QApeA,WACtB,IAAMub,EAAelO,EAASrD,QAAQ7M,oBAEtCmiB,EAAAA,EAAAA,YAAU,WAAO,IAADS,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EACRxP,EAAQ,CACZ0F,OAAwB,QAAlByJ,EAAE5L,GAASnK,eAAO,IAAA+V,OAAA,EAAhBA,EAAkB/iB,MAC1Bic,IAAkB,QAAf+G,EAAE1L,GAAMtK,eAAO,IAAAgW,OAAA,EAAbA,EAAehjB,MACpBoc,KAAMnF,GAAOjK,QACbgP,KAAqB,QAAjBiH,EAAE7L,GAAQpK,eAAO,IAAAiW,OAAA,EAAfA,EAAiBjjB,MACvB+b,KAA2B,QAAvBmH,EAAE1L,GAAcxK,eAAO,IAAAkW,OAAA,EAArBA,EAAuBljB,MAC7Bmc,QAA2B,QAApBgH,EAAE9L,GAAWrK,eAAO,IAAAmW,OAAA,EAAlBA,EAAoBnjB,MAC7BQ,OAAyB,QAAnB4iB,EAAE7L,GAAUvK,eAAO,IAAAoW,OAAA,EAAjBA,EAAmBpjB,OAG7BqjB,aAAaC,WAAW,eACxBD,aAAaE,QAAQ,aAAc3H,KAAKyD,UAAUd,IAClD8E,aAAaE,QAAQ,cAAe,SACpCF,aAAaE,QAAQ,eAAgB,QACrCF,aAAaE,QAAQ,SAAU,OAC/BF,aAAaE,QAAQ,QAAS3H,KAAKyD,UAAUzL,IAC7CyP,aAAaE,QACX,SACA3H,KAAKyD,UAAU,CACb,CAAEL,QAAS,WAAYwE,OAAQ,WAAY5kB,MAAO,QAClD,CAAEogB,QAAS,aAAcwE,OAAQ,OAAQ5kB,MAAO,SAChD,CAAEogB,QAAS,WAAYwE,OAAQ,OAAQ5kB,MAAO,SAC9C,CAAEogB,QAAS,aAAcwE,OAAQ,SAAU5kB,MAAO,QAClD,CAAEogB,QAAS,MAAOwE,OAAQ,MAAO5kB,MAAO,WAI5CykB,aAAaE,QACX,QACqB,UAAjB,OAAJxT,SAAI,IAAJA,QAAI,EAAJA,GAAM0T,YACF,kEACA,6EAER,IACA7C,OAAO9N,KAAK,mBAAoB,SAClC,EA6biDvR,SAAC,iBACpCT,EAAAA,EAAAA,KAACgiB,EAAAA,EAAQ,CAAC9f,QA7bC,YAqDvBsf,EAAAA,EAAAA,YAAU,WACR,IAAMoB,EAAgBC,EAAAA,eArDN,WAAO,IAADC,EAAAC,EACtB,OACEriB,EAAAA,EAAAA,MAAA,OAAAD,SAAA,EACET,EAAAA,EAAAA,KAAA,KACEC,MAAO,CACL+gB,MAAO,UACP7f,SAAU,OACVC,UAAW,SACXC,QAAS,EACT2hB,UAAW,MACX1Q,aAAc,GACd7R,SACH,WAGDT,EAAAA,EAAAA,KAAA,KACEC,MAAO,CACL+gB,MAAO,UACP7f,SAAU,OACVC,UAAW,SACXC,QAAS,EACTM,OAAQ,GACRlB,SAEoB,QAFpBqiB,EAEDpM,GAAcxK,eAAO,IAAA4W,OAAA,EAArBA,EAAuB5jB,SAE1Bc,EAAAA,EAAAA,KAAA,KACEC,MAAO,CACL+gB,MAAO,UACP7f,SAAU,OACVC,UAAW,SACXC,QAAS,EACTM,OAAQ,GACRlB,SAED0V,GAAOjK,WAEVlM,EAAAA,EAAAA,KAAA,KACEC,MAAO,CACL+gB,MAAO,UACP7f,SAAU,OACVC,UAAW,SACXC,QAAS,EACTM,OAAQ,QACRlB,SAEe,QAFfsiB,EAED1M,GAASnK,eAAO,IAAA6W,OAAA,EAAhBA,EAAkB7jB,UAI3B,CAGsD+jB,IACpDV,aAAaE,QAAQ,cAAeG,GACpCL,aAAaC,WAAW,cACxBD,aAAaE,QAAQ,cAAe,SACpCF,aAAaE,QAAQ,eAAgB,OACvC,IACA3C,OAAO9N,KAAK,mBAAoB,SAClC,EAgYkDvR,SAAC,6BAK7CT,EAAAA,EAAAA,KAAA,QACEhE,UAAW,SAACsG,GACK,UAAXA,EAAEU,MAA+B,gBAAXV,EAAEU,MAC1BV,EAAEW,gBAGN,EACAhD,MAAO,CACLqS,aAAc,QACd7R,UAEFT,EAAAA,EAAAA,KAACmgB,EAAAA,EAAG,CACFC,GAAI,SAACC,GAAK,OAAArN,EAAAA,EAAAA,GAAA,CACRpR,QAAS,OACT0e,UAAW,OACX1T,cAAe,OACdyT,EAAME,YAAYC,KAAK,MAAQ,CAC9B5T,cAAe,SACfsW,OAAQ,QACT,EACAziB,UAEHC,EAAAA,EAAAA,MAACyf,EAAAA,EAAG,CACFC,GAAI,CACFxe,QAAS,OACTuhB,IAAK,OACLrlB,MAAO,QACP2C,SAAA,EAEFC,EAAAA,EAAAA,MAAA,YACET,MACE,CACEkT,KAAM,EACNvR,QAAS,OACTgL,cAAe,SACfuW,IAAK,OACL9hB,QAAS,OACTf,OAAQ,oBACR8iB,aAAc,OAEjB3iB,SAAA,EAEDC,EAAAA,EAAAA,MAAA,OACET,MAAO,CACL2B,QAAS,OACTuhB,IAAK,QACL1iB,SAAA,CAEDyW,IACClX,EAAAA,EAAAA,KAACygB,EAAAA,EAAa,CAACC,QAASxJ,MAGxBlX,EAAAA,EAAAA,KAACuF,EAAAA,GAAS,CACRjE,MAAO,CACL8B,MAAO,gBACPnD,MAAO,CACLkB,SAAU,OACV2L,WAAY,OACZhP,MAAO,UAGX4F,MAAO,CACLyD,SAAU4Y,GACV9d,KAAM,OACNhC,MAAO,CAAEnC,MAAO,SAChB9B,UAAW,SAACsG,GACyC,IAAD+gB,EAApC,UAAV/gB,EAAEhE,KAA6B,gBAAVgE,EAAEhE,MACzBgE,EAAEW,iBACa,QAAfogB,EAAA/M,GAAQpK,eAAO,IAAAmX,GAAfA,EAAiBvgB,QAErB,GAEFa,SAAU0S,GACVzS,MAAM5D,EAAAA,EAAAA,KAACsjB,EAAAA,EAAc,CAAClD,GAAI,CAAEjf,SAAU,OAAQ6f,MAAOjB,GAAiB,OAAS,WAE/E/b,YAAa+b,MAKjB/f,EAAAA,EAAAA,KAACuF,EAAAA,GAAS,CACRjE,MAAO,CACL8B,MAAO,UACPnD,MAAO,CACLkB,SAAU,OACV2L,WAAY,OACZhP,MAAO,SAGX4F,MAAO,CACLyD,SAAU4Y,GACV9d,KAAM,OACN8K,cAAcyS,EAAAA,EAAAA,GAAO,IAAItE,KAAQ,cACjCjb,MAAO,CAAEnC,MAAO,SAChB9B,UAAW,SAACsG,GAC2C,IAADihB,EAArC,gBAAXjhB,EAAEU,MAAqC,UAAXV,EAAEU,OACd,QAAlBugB,EAAAhN,GAAWrK,eAAO,IAAAqX,GAAlBA,EAAoBzgB,QAExB,GAEFa,SAAU2S,SAMdtW,EAAAA,EAAAA,KAAC4F,EAAAA,GAAa,CACZtE,MAAO,CACL8B,MAAO,aACPnD,MAAO,CACLkB,SAAU,OACV2L,WAAY,OACZhP,MAAO,UAGXgI,SAAU,CACRlK,KAAM,EACNuL,SAAU4Y,GACV9f,MAAO,CAAEkT,KAAM,GACfnX,UAAW,SAACsG,GAE6E,IAADkhB,GADtFlhB,EAAEqI,kBACc,gBAAXrI,EAAEU,OAA2BV,EAAEgL,UAAyB,UAAXhL,EAAEU,OAAqBV,EAAEgL,YAC5D,QAAbkW,EAAAhN,GAAMtK,eAAO,IAAAsX,GAAbA,EAAe1gB,QAEnB,GAGFiD,UAAWwQ,SAKf7V,EAAAA,EAAAA,MAAA,YACET,MACE,CACEkT,KAAM,EACNvR,QAAS,OACTuhB,IAAK,OACL9hB,QAAS,QACTf,OAAQ,oBACR8iB,aAAc,MACdxW,cAAe,UAElBnM,SAAA,EAEDC,EAAAA,EAAAA,MAAA,OACET,MAAO,CAAEnC,MAAO,OAAQqV,KAAM,EAAGvR,QAAS,OAAQuhB,IAAK,QAAS1iB,SAAA,CAE/Dsb,IACC/b,EAAAA,EAAAA,KAACygB,EAAAA,EAAa,CAACC,QAAS3E,MAExB/b,EAAAA,EAAAA,KAACuF,EAAAA,GAAS,CACRjE,MAAO,CACL8B,MAAO,kBACPnD,MAAO,CACLkB,SAAU,OACV2L,WAAY,OACZhP,MAAO,UAGX4F,MAAO,CACLyD,SAAU4Y,GACV9d,KAAM,OACNhC,MAAO,CAAEnC,MAAO,QAAShC,OAAQ,QACjCE,UAAW,SAACsG,GACI,UAAVA,EAAEhE,KAA6B,gBAAVgE,EAAEhE,MACzBgE,EAAEW,iBACEuT,GAAMtK,SACR4P,GAAsBtF,GAAMtK,QAAQhN,OAG1C,GAEFyE,SAAU6S,GACV5S,MAAM5D,EAAAA,EAAAA,KAACyjB,EAAAA,EAAgB,CAACrD,GAAI,CAAEjf,SAAU,OAAQ6f,MAAOjB,GAAiB,OAAS,WACjF7b,YAAa,SAAC5B,GACZA,EAAEW,iBACEuT,GAAMtK,SACR4P,GAAsBtF,GAAMtK,QAAQhN,MAExC,EACA8E,YAAa+b,MAKjB/f,EAAAA,EAAAA,KAACuF,EAAAA,GAAS,CACRjE,MAAO,CACL8B,MAAO,YACPnD,MAAO,CACLkB,SAAU,OACV2L,WAAY,OACZhP,MAAO,SAGX4F,MAAO,CACLyD,SAAU4Y,GACV9d,KAAM,OACNhC,MAAO,CAAEnC,MAAO,OAAQhC,OAAQ,QAChCE,UAAW,SAACsG,GAC2C,IAADohB,EAArC,gBAAXphB,EAAEU,MAAqC,UAAXV,EAAEU,OACX,QAArB0gB,EAAAhN,GAAcxK,eAAO,IAAAwX,GAArBA,EAAuB5gB,QAE3B,GAEFa,SAAU8S,SAKd/V,EAAAA,EAAAA,MAAA,OACET,MAAO,CAAEnC,MAAO,OAAQ8D,QAAS,OAAQ0e,UAAW,QAAS7f,SAAA,EAE7DT,EAAAA,EAAAA,KAAC4F,EAAAA,GAAa,CACZtE,MAAO,CACL8B,MAAO,kBACPnD,MAAO,CACLkB,SAAU,OACV2L,WAAY,OACZhP,MAAO,UAGXgI,SAAU,CACRlK,KAAM,EACNuL,SAAU4Y,GACV9f,MAAO,CAAEnC,MAAO,SAChB9B,UAAW,SAACsG,GAE6E,IAADqhB,GADtFrhB,EAAEqI,kBACc,gBAAXrI,EAAEU,OAA2BV,EAAEgL,UAAyB,UAAXhL,EAAEU,OAAqBV,EAAEgL,YACjD,QAAxBqW,EAAAxO,GAAiBjJ,eAAO,IAAAyX,GAAxBA,EAA0BtF,QAE9B,GAGFtY,UAAW2Q,MAEb1W,EAAAA,EAAAA,KAAC4gB,EAAAA,EAAM,CACLR,GAAI,CACFtkB,OAAQ,OACRqF,SAAU,QAEZgG,SAAsB,KAAZyN,GACViM,QAAQ,YACRC,WAAW9gB,EAAAA,EAAAA,KAAC4jB,EAAAA,EAAY,CAACxD,GAAI,CAAEtiB,MAAO,GAAIhC,OAAQ,MAClDoG,QAAS,WACPwN,IAAa,EACf,EAAEjP,SACH,+BAQXT,EAAAA,EAAAA,KAAC1E,EAAAA,EAAiB,CAChBY,aAAc6jB,GACdtkB,IAAK8T,EACL3T,KAAM,GACNF,QAASuX,EACTlX,gBAAiB,SAACyS,EAAkBqV,EAAQC,GAC1C,GAAItV,EAAa,CACf,GACGA,EAAY,IAAyB,KAAnBA,EAAY,IAC9BA,EAAY,IAAyB,KAAnBA,EAAY,IAC9BA,EAAY,IAAyB,KAAnBA,EAAY,GAI/B,OAFAmG,GAAkB,MAClBpF,EAASrD,QAAQ7O,eAAe,MACzBua,IAAAA,KAAU,CACfxX,SAAU,SACVwD,KAAM,UACNR,MAAM,8BAADzC,OAAgC6N,EAAY,GAAE,gBAAA7N,OAAe6N,EAAY,GAAE,kBAChFsJ,mBAAmB,EACnBC,MAAO,QAGXyJ,EAAAA,EAAAA,YAAU,WACRjN,IAAqB,EACvB,KACA3C,EAAAA,EAAAA,MAAK,KAAKC,MAAK,WAEXyD,GAAYpJ,SACZqJ,GAASrJ,SACTsJ,GAAWtJ,SACXuJ,GAAYvJ,SACZwJ,GAAaxJ,SACbyJ,GAAWzJ,UAEXoJ,GAAYpJ,QAAQhN,MAAQsP,EAAY,GACxCkH,GAAaxJ,QAAQhN,MAAQsP,EAAY,GACzCmH,GAAWzJ,QAAQhN,MAAQoF,GAAayf,WAAWvV,EAAY,GAAG/J,QAAQ,KAAM,MAChF8Q,GAASrJ,QAAQhN,MAAQsP,EAAY,GACrCgH,GAAWtJ,QAAQhN,MAAQsP,EAAY,GACvCiH,GAAYvJ,QAAQhN,MAAQsP,EAAY,GACxCsH,GAAa5J,QAAUsC,EAAY,IAAM,GACzCuH,GAAa7J,QAAUsC,EAAY,IAAM,GACzCwH,GAAS9J,QAAUsC,EAAY,IAAM,GACrCqH,GAAU3J,QAAUsC,EAAY,GAEhCwV,QAAQC,IAAIzV,EAAY,IACxB+G,GAASrJ,QAAQpJ,QAErB,IAEA6R,GAAkBmP,EACpB,MACEnP,GAAkB,KAEtB,EACA3Y,UAAW,SAACwS,EAAkBsV,EAAexhB,GAC3C,GAAe,WAAXA,EAAEU,MAAgC,cAAXV,EAAEU,KAAsB,CAEjD,GACGwL,EAAY,IAAyB,KAAnBA,EAAY,IAC9BA,EAAY,IAAyB,KAAnBA,EAAY,IAC9BA,EAAY,IAAyB,KAAnBA,EAAY,GAK/B,OAHAmG,GAAkB,MAClBpF,EAASrD,QAAQ7O,eAAe,MAEzBua,IAAAA,KAAU,CACfxX,SAAU,SACVwD,KAAM,UACNR,MAAM,8BAADzC,OAAgC6N,EAAY,GAAE,gBAAA7N,OAAe6N,EAAY,GAAE,kBAChFsJ,mBAAmB,EACnBC,MAAO,OAKXH,IAAAA,KAAU,CACRxU,MAAO,gBACP8d,KAAK,sCAADvgB,OAAwC6N,EAAY,IACxD5K,KAAM,UACNud,kBAAkB,EAClBC,mBAAoB,UACpBC,kBAAmB,OACnBC,kBAAmB,oBAClBzP,MAAK,SAACxH,GACHA,EAAOkX,aACTnT,YAAW,WACT,IAAMtP,EAAUyQ,EAASrD,QAAQtN,UACjCE,EAAQolB,OAAOJ,EAAU,GACzBvU,EAASrD,QAAQrP,QAAQiC,GAEzB6V,GAAkB,MAClBpF,EAASrD,QAAQ7O,eAAe,KAClC,GAAG,IAEP,GACF,CACF,KAGF2C,EAAAA,EAAAA,KAAC+R,EAAAA,EAAK,CACJC,KAAMsC,GACNrC,QAAS,WACPsC,IAAqB,GACrBhF,EAASrD,QAAQ7O,eAAe,MAChCsX,GAAkB,KAEpB,EACA,kBAAgB,oBAChB,mBAAiB,0BAAyBlU,UAE1CC,EAAAA,EAAAA,MAACyf,EAAAA,EAAG,CACFC,GAAI,CACFhgB,SAAU,WACVU,IAAK,MACL+D,KAAM,MACNS,UAAW,wBACXxH,MAAO,OACPqmB,QAAS,mBACTC,EAAG,GACH3jB,SAAA,EAEFT,EAAAA,EAAAA,KAACqkB,EAAAA,EAAU,CAACzjB,GAAG,oBAAoBigB,QAAQ,KAAKyD,UAAU,KAAI7jB,SAAC,kBAG/DT,EAAAA,EAAAA,KAAA,UACAU,EAAAA,EAAAA,MAAA,OACET,MAAO,CACL2B,QAAS,OACT0e,UAAW,QACX7f,SAAA,EAEFC,EAAAA,EAAAA,MAAA,OACET,MAAO,CACL2B,QAAS,OACTgL,cAAe,SACfuW,IAAK,QACL1iB,SAAA,EAEFT,EAAAA,EAAAA,KAACuF,EAAAA,GAAS,CACRjE,MAAO,CACL8B,MAAO,cACPnD,MAAO,CACLkB,SAAU,OACV2L,WAAY,OACZhP,MAAO,SAGX4F,MAAO,CACLyD,SAA6B,OAAnBuN,GACVzS,KAAM,OACNhC,MAAO,CAAEnC,MAAO,SAChB9B,UAAW,SAACsG,GAC2C,IAADiiB,EAArC,gBAAXjiB,EAAEU,MAAqC,UAAXV,EAAEU,OAChB,QAAhBuhB,EAAAhP,GAASrJ,eAAO,IAAAqY,GAAhBA,EAAkBzhB,QAEtB,GAEFa,SAAU2R,KAEXiH,IACCvc,EAAAA,EAAAA,KAACygB,EAAAA,EAAa,CAACC,QAASnE,MAExBvc,EAAAA,EAAAA,KAACuF,EAAAA,GAAS,CACRjE,MAAO,CACL8B,MAAO,UACPnD,MAAO,CACLkB,SAAU,OACV2L,WAAY,OACZhP,MAAO,SAGX4F,MAAO,CACLzB,KAAM,OACNhC,MAAO,CAAEnC,MAAO,SAChB9B,UAAW,SAACsG,GACV,GAAe,gBAAXA,EAAEU,MAAqC,UAAXV,EAAEU,KAChC,OAAOsZ,GACLha,EAAEiQ,cAAcrT,MAGtB,GAEF0E,MAAM5D,EAAAA,EAAAA,KAACwkB,EAAAA,EAAkB,CAACpE,GAAI,CAAEjf,SAAU,UAC1C+C,YAAa,SAAC5B,GAEW,IAADmiB,GADtBniB,EAAEW,iBACEsS,GAASrJ,UACXoQ,GACkB,QADEmI,EAClBlP,GAASrJ,eAAO,IAAAuY,OAAA,EAAhBA,EAAkBvlB,MAGxB,EACAyE,SAAU4R,MAIdvV,EAAAA,EAAAA,KAACuF,EAAAA,GAAS,CACRjE,MAAO,CACL8B,MAAO,YACPnD,MAAO,CACLkB,SAAU,OACV2L,WAAY,OACZhP,MAAO,SAGX4F,MAAO,CACLzB,KAAM,OACNhC,MAAO,CAAEnC,MAAO,SAChB9B,UAAW,SAACsG,GAC2C,IAADoiB,EAArC,gBAAXpiB,EAAEU,MAAqC,UAAXV,EAAEU,OACb,QAAnB0hB,EAAAjP,GAAYvJ,eAAO,IAAAwY,GAAnBA,EAAqB5hB,QAEzB,GAEFa,SAAU6R,MAEZxV,EAAAA,EAAAA,KAAC4F,EAAAA,GAAa,CACZtE,MAAO,CACL8B,MAAO,aACPnD,MAAO,CACLkB,SAAU,OACV2L,WAAY,OACZhP,MAAO,SAGXgI,SAAU,CACRlK,KAAM,EACNuL,SAAU4Y,GACV9f,MAAO,CAAEkT,KAAM,GACfnX,UAAW,SAACsG,GAI2C,IAADqiB,EAHtC,UAAVriB,EAAEhE,KAAmBgE,EAAEgL,WAGZ,gBAAXhL,EAAEU,MAAqC,UAAXV,EAAEU,MACZ,QAApB2hB,EAAAjP,GAAaxJ,eAAO,IAAAyY,GAApBA,EAAsB7hB,QAE1B,GAEFiD,UAAW0P,SAGf/U,EAAAA,EAAAA,MAAA,OACET,MAAO,CACL2B,QAAS,OACTuhB,IAAK,OACLvW,cAAe,UACfnM,SAAA,EAGFT,EAAAA,EAAAA,KAACuF,EAAAA,GAAS,CACRjE,MAAO,CACL8B,MAAO,iBACPnD,MAAO,CACLkB,SAAU,OACV2L,WAAY,OACZhP,MAAO,SAGX4F,MAAO,CACLyD,SAAU4Y,GACV9d,KAAM,OACNhC,MAAO,CAAEnC,MAAO,SAChBiP,cAAc,IAAImO,MAAO0J,cAAcpgB,MAAM,KAAK,GAClDxI,UAAW,SAACsG,GAC2C,IAADuiB,EAArC,gBAAXviB,EAAEU,MAAqC,UAAXV,EAAEU,OACd,QAAlB6hB,EAAAlP,GAAWzJ,eAAO,IAAA2Y,GAAlBA,EAAoB/hB,QAExB,GAEFa,SAAU+R,MAGZhV,EAAAA,EAAAA,MAAA,OAAKT,MAAO,CACV2B,QAAS,QACTnB,SAAA,EACAT,EAAAA,EAAAA,KAAA,SAAOC,MAAO,CACZkB,SAAU,OACV2L,WAAY,OACZhP,MAAO,QACP2C,SAAC,cACHT,EAAAA,EAAAA,KAAC8kB,EAAAA,GAAa,CACZ7kB,MAAO,CACLkT,KAAM,GAERjU,MAAgC,QAA3BwU,EAAoB,QAApBC,EAAEgC,GAAWzJ,eAAO,IAAAyH,OAAA,EAAlBA,EAAoBzU,aAAK,IAAAwU,EAAAA,EAAI,GACpCqR,YAAapP,GACbqP,eAAe,EACfC,mBAAiB,EACjBC,sBAAoB,EACpBlpB,UAAW,SAACsG,GACV,GAAe,UAAXA,EAAEU,MAA+B,gBAAXV,EAAEU,KAAwB,CAAC,IAADmiB,EAAAC,EAC9CC,EAAiC,QAArBF,EAAGxP,GAAWzJ,eAAO,IAAAiZ,OAAA,EAAlBA,EAAoBjmB,MACnComB,EAAevB,WAAWsB,EAAa5gB,QAAQ,KAAM,KACrDkR,GAAWzJ,UACTqZ,MAAMD,GACR3P,GAAWzJ,QAAQhN,MAAQ,OAEtBmmB,EAAangB,SAAS,KAGzByQ,GAAWzJ,QAAQhN,MAAQoF,GAAaghB,GAFxC3P,GAAWzJ,QAAQhN,MAAK,GAAAyB,OAAM2D,GAAaghB,KAM3B,QAAtBF,EAAAxP,GAAe1J,eAAO,IAAAkZ,GAAtBA,EAAwBtiB,OAC1B,CACF,OAGgB,OAAnB4R,KACC1U,EAAAA,EAAAA,KAACuF,EAAAA,GAAS,CACRjE,MAAO,CACL8B,MAAO,iBACPnD,MAAO,CACLkB,SAAU,OACV2L,WAAY,OACZhP,MAAO,SAGX4F,MAAO,CACLyD,SAAU4Y,GACV9d,KAAM,SACNhC,MAAO,CAAEnC,MAAO,SAChB9B,UAAW,SAACsG,GACV,GAAe,gBAAXA,EAAEU,MAAqC,UAAXV,EAAEU,KAChC,IAAMwiB,EAAUpX,YAAW,WAAO,IAADqX,EACH,QAA5BA,EAAArQ,GAAqBlJ,eAAO,IAAAuZ,GAA5BA,EAA8BpH,QAC9BnQ,aAAasX,EACf,GAAG,IAEP,GAEF7hB,SAAUiS,YAKlB5V,EAAAA,EAAAA,KAAA,OACEC,MAAO,CACL2B,QAAS,OACTE,eAAgB,WAChBhE,MAAO,OACPklB,UAAW,QACXviB,UAEFC,EAAAA,EAAAA,MAAA,OAAKT,MAAO,CAAE2B,QAAS,OAAQuhB,IAAK,QAAS1iB,SAAA,EAC3CT,EAAAA,EAAAA,KAAC4gB,EAAAA,EAAM,CACLnlB,IAAK2Z,GACLrC,OAAQsC,GACR2L,MAAM,UACNH,QAAQ,YACR6E,UAA8B,OAAnBhR,GACXxS,QAAS,YAn8BzB,WAEE,SAASyjB,EACPC,EACAC,GAEA,IAAIpG,EAAMqG,SAASF,GAEnB,OADAnG,GAAYoG,GACDE,WAAWC,SAASJ,EAAI5nB,OAAQ,IAC7C,CACA,SAASioB,EAAcC,EAAiB5b,GACtC,IAAM6b,EAAc,IAAIjL,KACtBgL,GAIF,OAFAC,EAAYC,SAASD,EAAYE,WAAa/b,IAEvCkV,EAAAA,EAAAA,GAAO2G,EAAa,aAC7B,CAMA,GACE7Q,GAAYpJ,SACZqJ,GAASrJ,SACTsJ,GAAWtJ,SACXuJ,GAAYvJ,SACZwJ,GAAaxJ,SACbyJ,GAAWzJ,SACX0J,GAAe1J,QACf,CAGA,IAAMwV,EAAYnS,EAASrD,QAAQ7M,mBAC7BinB,EAAgB/W,EAASrD,QAAQjN,iBAOvC,GALuByiB,EAAUzjB,QAAO,SAACC,GACvC,OAAOoX,GAAYpJ,SAAWoJ,GAAYpJ,QAAQhN,QAAUhB,EAAIoB,QAClE,IAGmBtB,OAAS,GAAuB,OAAlBsoB,EAG/B,OAFA3L,MAAM,oCACNrF,GAAYpJ,QAAQpJ,QAGtB,GAAkC,KAA9BwS,GAAYpJ,QAAQhN,MAGtB,OAFAyb,MAAM,+BACNrF,GAAYpJ,QAAQpJ,QAEf,GAA+B,KAA3ByS,GAASrJ,QAAQhN,MAG1B,OAFAyb,MAAM,0BACNpF,GAASrJ,QAAQpJ,QAEZ,GAAiC,KAA7B0S,GAAWtJ,QAAQhN,MAG5B,OAFAyb,MAAM,4BACNnF,GAAWtJ,QAAQpJ,QAEd,IAzCT,SAAqBojB,GACnB,IAAMK,EAAO,IAAIrL,KAAKgL,GACtB,OAAOK,aAAgBrL,OAASqK,MAAMgB,EAAKC,UAC7C,CAsCcC,CAAY/Q,GAAaxJ,QAAQhN,OAG3C,OAFAyb,MAAM,sBACNjF,GAAaxJ,QAAQpJ,QAEhB,GAAIihB,WAAWpO,GAAWzJ,QAAQhN,MAAMuF,QAAQ,KAAM,MAAQ,EAGnE,OAFAkW,MAAM,uCACNhF,GAAWzJ,QAAQpJ,QAMrB,GACEwS,GAAYpJ,SACZqJ,GAASrJ,SACTsJ,GAAWtJ,SACXuJ,GAAYvJ,SACZwJ,GAAaxJ,SACbyJ,GAAWzJ,SACX0J,GAAe1J,QAKf,GAAIoa,EAAe,CACjB,IAAMlpB,EAAcmS,EAASrD,QAAQtN,UACrCxB,EAAYkpB,GAAe,GAAKhR,GAAYpJ,QAAQhN,MACpD9B,EAAYkpB,GAAe,GAAK5Q,GAAaxJ,QAAQhN,MACrD9B,EAAYkpB,GAAe,GAAK3Q,GAAWzJ,QAAQhN,MACnD9B,EAAYkpB,GAAe,GAAK/Q,GAASrJ,QAAQhN,MACjD9B,EAAYkpB,GAAe,GAAK9Q,GAAWtJ,QAAQhN,MACnD9B,EAAYkpB,GAAe,GAAK7Q,GAAYvJ,QAAQhN,MACpD9B,EAAYkpB,GAAe,GAAKxQ,GAAa5J,QAC7C9O,EAAYkpB,GAAe,GAAKvQ,GAAa7J,QAC7C9O,EAAYkpB,GAAe,GAAKtQ,GAAS9J,QACzC9O,EAAYkpB,GAAe,GAAKzQ,GAAU3J,QAC1CqD,EAASrD,QAAQrP,QAAQO,GACzBmS,EAASrD,QAAQ7O,eAAe,MAChCsX,GAAkB,KACpB,KAAO,CAEL,IADA,IAAM7V,EAAe,GAEfwL,EAAI,EACRA,EAAIwb,SAASlQ,GAAe1J,QAAQhN,OACpCoL,IACA,CACA,IAAM1N,EAAY,CAChB0C,SAAUqmB,EACRrQ,GAAYpJ,QAAQhN,MACpBoL,GAEF/K,WAAY0mB,EAAcvQ,GAAaxJ,QAAQhN,MAAOoL,GACtD9K,WAAYmW,GAAWzJ,QAAQhN,MAC/BO,SAAU8V,GAASrJ,QAAQhN,MAC3Ba,SAAU8V,GAAU3J,QACpBxM,OAAQ8V,GAAWtJ,QAAQhN,MAC3BS,cAAe8V,GAAYvJ,QAAQhN,MACnCU,aAAckW,GAAa5J,QAC3BrM,YAAakW,GAAa7J,QAC1BpM,MAAOkW,GAAS9J,SAElBpN,EAAQyL,KAAK3N,EACf,CACA2S,EAASrD,QAAQ9M,gBAAgBN,EAEnC,CAKFyV,IAAqB,EACvB,CAEF,CAg0BkBmS,EACF,EACAtG,GAAI,CACFtkB,OAAQ,OACRqF,SAAU,QACVV,SAEkB,OAAnBiU,GAA0B,SAAW,UAExC1U,EAAAA,EAAAA,KAAC4gB,EAAAA,EAAM,CACLI,MAAM,UACNH,QAAQ,YACRT,GAAI,CACFtkB,OAAQ,OACRqF,SAAU,QAEZe,QAAS,WACPqS,IAAqB,GACrBhF,EAASrD,QAAQ7O,eAAe,MAChCsX,GAAkB,KACpB,EAAElU,SACH,YAGDT,EAAAA,EAAAA,KAACyS,EAAAA,EAAU,CACTxS,MAAO,CACLG,SAAU,WACVU,IAAK,OACLuE,MAAO,QAET,aAAW,gBACXnD,QAAS,WACPqN,EAASrD,QAAQ7O,eAAe,MAChCsX,GAAkB,MAClBJ,IAAqB,EACvB,EAAE9T,UAEFT,EAAAA,EAAAA,KAAC0S,EAAAA,EAAS,iBAMpB1S,EAAAA,EAAAA,KAAA,OACEC,MAAO,CACL2B,QAAS4S,GAAY,OAAS,OAC9BpU,SAAU,WACVU,IAAK,EACL6lB,OAAQ,EACR9hB,KAAM,EACNQ,MAAO,EACP7E,WAAY,4BACZO,OAAQ,MACRe,eAAgB,SAChBD,WAAY,UACZpB,UAEFT,EAAAA,EAAAA,KAAA,OACEC,MAAO,CACLnC,MAAO,MACPhC,OAAQ,OACR2E,UAEFT,EAAAA,EAAAA,KAAA,OACEC,MAAO,CACLnC,MAAO,MACPhC,OAAQ,MACRqE,SAAU,OACVK,WAAY,QACZa,QAAS,OACTM,OAAQ,OACRZ,OAAQ,OACRR,UAAW,sCACXH,SAAU,YACVK,UAEFC,EAAAA,EAAAA,MAAA,OACET,MAAO,CACLnE,OAAQ,OACRgC,MAAO,OACPsC,SAAU,WACVwB,QAAS,OACTE,eAAgB,SAChBD,WAAY,SACZ+K,cAAe,UACfnM,SAAA,EAEFT,EAAAA,EAAAA,KAACyS,EAAAA,EAAU,CACT2N,GAAI,CACFhgB,SAAU,WACViF,MAAO,MACPvE,IAAK,OAEPoB,QAAS,WACPwN,IAAa,EACf,EAAEjP,UAEFT,EAAAA,EAAAA,KAAC0S,EAAAA,EAAS,OAEZhS,EAAAA,EAAAA,MAAA,OACET,MAAO,CACLnC,MAAO,OACPhC,OAAQ,QACRwE,OAAQ4T,GAAa,mBAAqB,kBAC1C/T,SAAU,OACVkB,QAAS,QAEXulB,YAAa7H,GACb8H,WAAY,SAACvkB,GAAC,OAAKA,EAAEW,gBAAgB,EACrC6jB,YAAahI,GACbiI,OAAQ/H,GAAWve,SAAA,EAEnBT,EAAAA,EAAAA,KAAA,OACEY,GAAG,mBACHX,MAAO,CACLnC,MAAO,OACPhC,OAAQ,OACR8F,QAAS,OACTuhB,IAAK,OACL6D,SAAU,QAEZJ,YAAa7H,GACb8H,WAAY,SAACvkB,GAAC,OAAKA,EAAEW,gBAAgB,EACrC6jB,YAAahI,GACbiI,OAAQ/H,GAAWve,SAElB2T,GAAchW,KAAI,SAACF,EAAK+C,GACvB,OACEjB,EAAAA,EAAAA,KAACinB,EAAAA,YAAW,CAEV/oB,IAAKA,EACLkW,cAAeA,GACfC,iBAAkBA,GAClB6S,UAAWhS,IAJNjU,EAOX,MAEDmT,GAAcpW,QAAU,IACvBgC,EAAAA,EAAAA,KAAA,OACEC,MAAO,CACLG,SAAU,WACVU,IAAK,MACL+D,KAAM,MACNS,UAAW,uBACXlE,UAAW,UACXX,UAEFT,EAAAA,EAAAA,KAACmnB,EAAAA,EAAqB,CACpB/G,GAAI,CAAEjf,SAAU,OAAQ6f,MAAO,gBAIrChhB,EAAAA,EAAAA,KAAA,SACEvE,IAAKyZ,GACLjT,KAAK,OACLmlB,UAAQ,EACRnnB,MAAO,CAAE2B,QAAS,OAAQpB,WAAY,SACtCI,GAAG,aACHwD,SAAU,SAAC9B,GACT,IAAM4c,EAAW5c,EAAEwC,OAAOiZ,MACpBA,EAAQqB,MAAMC,KAAKH,GACnBI,EAAQ,GAAA3e,QAAA9B,EAAAA,EAAAA,GAAOuV,IAAkB2J,GACvC,IAAIwB,EAAAA,EAAAA,WAAUD,GACZ,OAAO3E,MAAM,gCAEftG,GAAiBiL,EACnB,QAGJtf,EAAAA,EAAAA,KAAA,OACEC,MAAO,CACLnC,MAAO,QACP2C,UAEFT,EAAAA,EAAAA,KAAC4gB,EAAAA,EAAM,CACLyG,WAAS,EACTnlB,QAAS,WACP,IAAMolB,EAAY1kB,SAAS2kB,eAAe,cACjC,OAATD,QAAS,IAATA,GAAAA,EAAWjJ,OACb,EAAE5d,SACH,mCAQTuX,IACAyD,MAA4Bzb,EAAAA,EAAAA,KAAA,OAAKyB,UAAU,oBAAmBhB,UAACT,EAAAA,EAAAA,KAAA,OAAKyB,UAAU,kBAKxF,CAEO,SAAS+lB,EAAiBC,EAAeC,GAC9CC,OAAOC,QAAQF,GAAKG,SAAQ,SAAAzhB,GAAqB,IAADS,GAAAlK,EAAAA,EAAAA,GAAAyJ,EAAA,GAAlBuI,EAAK9H,EAAA,GAAE3H,EAAK2H,EAAA,GACxC4gB,EAAS,CAAExlB,KAAM,eAAgB0M,MAAAA,EAAOzP,MAAAA,GAC1C,GACF,CACO,SAAS0iB,GAAiBtiB,GAC/B,GAAIA,EAAU,CAEZ,IADA,IAAIwoB,GAAqBhC,SAASxmB,GAAY,GAAGymB,WAC1C+B,EAAkB9pB,OAASsB,EAAStB,QACzC8pB,EAAoB,IAAMA,EAE5B,OAAOA,CACT,CAEA,MAAO,KACT,C","sources":["components/DataGridViewReact.tsx","components/Helmet.tsx","components/UpwardFields.tsx","components/UpwardTable.tsx","hooks/useUpwardTableModal.tsx","feautures/Admin/Task/Accounting/PostDateChecks.tsx"],"sourcesContent":["import {\r\n    useState, useRef,\r\n    forwardRef, useEffect,\r\n    useImperativeHandle,\r\n} from \"react\";\r\n\r\nexport const DataGridViewReact = forwardRef(({\r\n    columns,\r\n    rows = [],\r\n    height = \"400px\",\r\n    getSelectedItem,\r\n    onKeyDown,\r\n    disbaleTable = false,\r\n    isTableSelectable = true,\r\n    containerStyle\r\n}: any, ref) => {\r\n    const parentElementRef = useRef<any>(null)\r\n    const [data, setData] = useState([])\r\n    const [column, setColumn] = useState([])\r\n    const [selectedRow, setSelectedRow] = useState<any>(0)\r\n    const [selectedRowIndex, setSelectedRowIndex] = useState<any>(null)\r\n    const totalRowWidth = column.reduce((a: any, b: any) => a + b.width, 0)\r\n\r\n    useEffect(() => {\r\n        if (columns.length > 0) {\r\n            setColumn(columns.filter((itm: any) => !itm.hide))\r\n        }\r\n    }, [columns])\r\n\r\n    useEffect(() => {\r\n        if (rows.length > 0) {\r\n            setData(rows.map((itm: any) => {\r\n                return columns.map((col: any) => itm[col.key])\r\n            }))\r\n        }\r\n    }, [rows, columns])\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        checkNoIsExist: (checkNo: string) => {\r\n            return data.some((subArray: any) => subArray[2] === checkNo);\r\n        },\r\n        selectedRow: () => selectedRow,\r\n        getData: () => {\r\n            const newData = [...data];\r\n            return newData\r\n        },\r\n        setData: (newData: any) => {\r\n            setData(newData)\r\n        },\r\n        getColumns: () => {\r\n            return columns\r\n        },\r\n        resetTable: () => {\r\n            setData([])\r\n            setSelectedRow(0)\r\n        },\r\n        getSelectedRow: () => {\r\n            return selectedRowIndex\r\n        },\r\n        setSelectedRow: (value: any) => {\r\n            return setSelectedRowIndex(value)\r\n        },\r\n        _setSelectedRow: (value: any) => {\r\n            return setSelectedRow(value)\r\n        },\r\n        setDataFormated: (newData: any) => {\r\n            setData(newData.map((itm: any) => {\r\n                return columns.map((col: any) => itm[col.key])\r\n            }))\r\n        },\r\n        getDataFormatted: () => {\r\n            const newData = [...data];\r\n            const newDataFormatted = newData.map((itm: any) => {\r\n                let newItm = {\r\n                    Check_No: itm[0],\r\n                    Check_Date: itm[1],\r\n                    Check_Amnt: itm[2],\r\n                    BankName: itm[3],\r\n                    Branch: itm[4],\r\n                    Check_Remarks: itm[5],\r\n                    Deposit_Slip: itm[6],\r\n                    DateDeposit: itm[7],\r\n                    OR_No: itm[8],\r\n                    BankCode: itm[9]\r\n\r\n                }\r\n                return newItm\r\n            })\r\n\r\n            return newDataFormatted\r\n        }\r\n    }))\r\n\r\n    return (\r\n        <div\r\n            ref={parentElementRef}\r\n            style={{\r\n                width: \"100%\",\r\n                height,\r\n                overflow: \"auto\",\r\n                position: \"relative\",\r\n                pointerEvents: disbaleTable ? \"none\" : \"auto\",\r\n                border: disbaleTable ? \"2px solid #8c8f8e\" : '2px solid #c0c0c0',\r\n                boxShadow: `inset -2px -2px 0 #ffffff, \r\n                        inset 2px 2px 0 #808080`,\r\n                ...containerStyle,\r\n                background: \"#dcdcdc\"\r\n            }}\r\n        >\r\n            <div style={{ position: \"absolute\", width: `${totalRowWidth}px`, height: \"auto\" }}>\r\n                <table\r\n                    id=\"upward-cutom-table\"\r\n                    style={{\r\n                        borderCollapse: \"collapse\",\r\n                        width: \"100%\",\r\n                        position: \"relative\",\r\n                        background: \"#dcdcdc\"\r\n                    }}>\r\n                    <thead >\r\n                        <tr>\r\n                            <th style={{\r\n                                width: '30px',\r\n                                border: \"none\",\r\n                                position: \"sticky\",\r\n                                top: 0,\r\n                                zIndex: 1,\r\n                                background: \"#f0f0f0\",\r\n\r\n                            }}\r\n                            >\r\n\r\n                            </th>\r\n                            {\r\n                                column.map((colItm: any, idx: number) => {\r\n                                    return (\r\n                                        <th\r\n                                            key={idx}\r\n                                            style={{\r\n                                                width: colItm.width,\r\n                                                borderRight: \"1px solid #e2e8f0\",\r\n                                                position: \"sticky\",\r\n                                                top: 0,\r\n                                                zIndex: 1,\r\n                                                background: \"#f0f0f0\",\r\n                                                fontSize: \"12px\",\r\n                                                textAlign: \"left\",\r\n                                                padding: \"0px 5px\",\r\n\r\n                                            }}\r\n                                        >{colItm.label}</th>\r\n                                    )\r\n                                })\r\n                            }\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {\r\n                            data?.map((rowItm: any, rowIdx: number) => {\r\n\r\n                                return (\r\n                                    <tr key={rowIdx} className={`${(selectedRow === rowIdx) || (selectedRowIndex === rowIdx) ? \"selected\" : \"\"}`}>\r\n                                        <td\r\n                                            style={{\r\n                                                position: \"relative\",\r\n                                                border: \"none\",\r\n                                                cursor: \"pointer\",\r\n                                                background: selectedRow === rowIdx ? \"#0076d\" : \"\",\r\n                                                padding: 0,\r\n                                                margin: 0,\r\n\r\n                                            }}>\r\n                                            <div style={{\r\n                                                width: \"18px\",\r\n                                                height: \"18px\",\r\n                                                position: \"relative\",\r\n                                                display: \"flex\",\r\n                                                alignItems: \"center\",\r\n                                                justifyContent: \"center\"\r\n                                            }}>\r\n                                                <input\r\n                                                    style={{\r\n                                                        cursor: \"pointer\",\r\n                                                        margin: \"0px !important\",\r\n                                                        position: \"absolute\",\r\n                                                    }}\r\n                                                    readOnly={true}\r\n                                                    checked={selectedRowIndex === rowIdx}\r\n                                                    type=\"checkbox\"\r\n                                                    onClick={() => {\r\n                                                        if (!isTableSelectable) {\r\n                                                            return\r\n                                                        }\r\n                                                        setSelectedRowIndex(rowIdx)\r\n\r\n                                                        if (getSelectedItem) {\r\n                                                            getSelectedItem(rowItm, null, rowIdx, null)\r\n                                                        }\r\n                                                        setSelectedRow(null)\r\n\r\n                                                    }}\r\n                                                />\r\n\r\n                                            </div>\r\n\r\n                                        </td>\r\n\r\n                                        {\r\n                                            column.map((colItm: any, colIdx: number) => {\r\n                                                return (\r\n                                                    <td\r\n                                                        className={`td row-${rowIdx} col-${colIdx} `}\r\n                                                        tabIndex={0}\r\n                                                        onDoubleClick={() => {\r\n                                                            if (!isTableSelectable) {\r\n                                                                return\r\n                                                            }\r\n                                                            if (selectedRowIndex === rowIdx) {\r\n                                                                setSelectedRowIndex(null)\r\n\r\n                                                                if (getSelectedItem) {\r\n                                                                    getSelectedItem(null, null, rowIdx, null)\r\n                                                                }\r\n                                                            } else {\r\n\r\n                                                                setSelectedRowIndex(rowIdx)\r\n                                                                if (getSelectedItem) {\r\n                                                                    getSelectedItem(rowItm, null, rowIdx, null)\r\n                                                                }\r\n                                                            }\r\n                                                            setSelectedRow(null)\r\n                                                        }}\r\n                                                        onClick={() => {\r\n                                                            setSelectedRow(rowIdx)\r\n                                                        }}\r\n                                                        onKeyDown={(e) => {\r\n                                                            if (onKeyDown) {\r\n                                                                onKeyDown(rowItm, rowIdx, e)\r\n                                                            }\r\n                                                            if (e.key === \"ArrowUp\") {\r\n                                                                setSelectedRow((prev: any) => {\r\n                                                                    const index = Math.max(prev - 1, 0)\r\n                                                                    const td = document.querySelector(`.td.row-${index}`) as HTMLTableDataCellElement\r\n                                                                    if (td) {\r\n                                                                        td.focus()\r\n                                                                    }\r\n                                                                    return index\r\n                                                                });\r\n                                                            } else if (e.key === \"ArrowDown\") {\r\n                                                                setSelectedRow((prev: any) => {\r\n                                                                    const index = Math.min(prev + 1, data.length - 1)\r\n                                                                    const td = document.querySelector(`.td.row-${index}`) as HTMLTableDataCellElement\r\n                                                                    if (td) {\r\n                                                                        // td.focus()\r\n                                                                    }\r\n                                                                    return index\r\n                                                                });\r\n                                                            }\r\n                                                            if (e.code === 'Enter' || e.code === 'NumpadEnter') {\r\n                                                                e.preventDefault()\r\n\r\n                                                                if (!isTableSelectable) {\r\n                                                                    return\r\n                                                                }\r\n\r\n                                                                setSelectedRowIndex(rowIdx)\r\n                                                                if (getSelectedItem) {\r\n                                                                    getSelectedItem(rowItm, null, rowIdx, null)\r\n                                                                }\r\n                                                                setSelectedRow(null)\r\n                                                            }\r\n                                                        }}\r\n                                                        key={colIdx}\r\n\r\n                                                        style={{\r\n                                                            border: \"none\",\r\n                                                            fontSize: \"12px\",\r\n                                                            padding: \"0px 5px\",\r\n                                                            cursor: \"pointer\",\r\n                                                            height: \"20px\",\r\n                                                            userSelect: \"none\",\r\n\r\n                                                        }}\r\n                                                    >{\r\n                                                            <input\r\n                                                                readOnly={true}\r\n                                                                value={rowItm[colIdx]}\r\n                                                                style={{\r\n                                                                    width: colItm.width,\r\n                                                                    pointerEvents: \"none\",\r\n                                                                    border: \"none\",\r\n                                                                    background: \"transparent\",\r\n                                                                    userSelect: \"none\",\r\n                                                                    height: \"100%\",\r\n                                                                    textAlign: colItm.type === 'number' ? \"right\" : \"left\"\r\n\r\n                                                                }} />\r\n                                                        }</td>\r\n                                                )\r\n                                            })\r\n                                        }\r\n                                    </tr>\r\n                                )\r\n                            })\r\n                        }\r\n                    </tbody>\r\n                </table>\r\n                <style>\r\n\r\n                    {`\r\n             #upward-cutom-table tr td{\r\n               border-right:1px solid #f1f5f9 !important;\r\n             }\r\n          \r\n              #upward-cutom-table tr:nth-child(odd) td {\r\n                  background-color: #ffffff !important;\r\n              }\r\n              #upward-cutom-table tr:nth-child(even) td {\r\n                  background-color: #f5f5f5 !important;\r\n              }\r\n              #upward-cutom-table tr.selected td {\r\n                  background-color: #0076d7 !important;\r\n                  color: #ffffff !important;\r\n                  border-right:1px solid white !important;\r\n              }\r\n              \r\n               #upward-cutom-table tr.selected td input {\r\n                  color: #ffffff !important;\r\n              }\r\n  \r\n              `}\r\n                </style>\r\n            </div>\r\n        </div>\r\n    )\r\n})","\r\nimport { Helmet } from \"react-helmet\";\r\n\r\nconst PageHelmet = ({ title = '' }: { title: string }) => {\r\n    const imgUrl = process.env.REACT_APP_IMAGE_URL;\r\n    return (\r\n        <Helmet>\r\n            <title>{title}</title>\r\n            <link rel=\"icon\" type=\"image/png\" href={`${imgUrl}/logo.png`} />\r\n        </Helmet>\r\n    );\r\n};\r\n\r\nexport default PageHelmet;","import { HtmlHTMLAttributes, InputHTMLAttributes, useId, ReactNode, useState, LegacyRef, HTMLInputTypeAttribute, TextareaHTMLAttributes, CSSProperties } from \"react\";\nimport \"../style/design.css\";\n\n\ninterface TextInputProps {\n  input: InputHTMLAttributes<HTMLInputElement>;\n  label: HtmlHTMLAttributes<HTMLLabelElement>;\n  inputRef?: React.RefObject<HTMLInputElement>;\n  icon?: ReactNode; // New prop for the icon\n  iconPosition?: 'start' | 'end'; // New prop to choose icon position\n  onIconClick?: React.MouseEventHandler<HTMLDivElement> | undefined,\n  disableIcon?: boolean\n  containerStyle?: CSSProperties\n}\n\ninterface TextAreaPrps {\n  textarea: TextareaHTMLAttributes<HTMLTextAreaElement>\n  label: HtmlHTMLAttributes<HTMLLabelElement>;\n  _inputRef: LegacyRef<HTMLTextAreaElement>\n  icon?: ReactNode; // New prop for the icon\n  iconPosition?: 'start' | 'end'; // New prop to choose icon position\n  onIconClick?: React.MouseEventHandler<HTMLDivElement> | undefined,\n  disableIcon?: boolean\n}\n\ninterface TextFormatedInputProps extends TextInputProps {\n  onChange?: React.ChangeEventHandler<HTMLInputElement> | undefined\n}\nexport function TextFormatedInput({\n  input,\n  label,\n  inputRef,\n  icon,\n  iconPosition = 'end', // Default position is 'end'\n  disableIcon = false,\n  onIconClick = (e) => { },\n  onChange = (e) => { },\n  containerStyle\n}: TextFormatedInputProps) {\n  // const [inputValue, setInputValue] = useState('');\n  const id = useId();\n\n\n  // Helper function to format numbers with commas\n  const formatNumber = (value: string) => {\n    if (!value) return value;\n\n    // Split the value into integer and decimal parts\n    const parts = value.split('.');\n\n    // Add commas to the integer part only\n    parts[0] = parts[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n\n    // Join the integer and decimal parts if decimal exists\n    return parts.join('.');\n  };\n\n  // Helper function to remove commas\n  const unformatNumber = (value: string) => {\n    return value.replace(/,/g, '');\n  };\n\n  // Function to ensure two decimal places\n  const ensureTwoDecimals = (value: string) => {\n    // If the value has no decimal part, append '.00'\n    if (!value.includes('.')) {\n      if (value === '') {\n        return '0.00';\n      } else {\n\n        return value + '.00';\n      }\n    }\n\n    // If the value has one decimal place, append '0'\n    const parts = value.split('.');\n    if (parts[1].length === 1) {\n      return value + '0';\n    }\n\n    // If it already has two decimal places, return as is\n    return value;\n  };\n\n  const handleChange = (e: any) => {\n    let value = e.target.value;\n\n    // Remove commas for processing\n    value = unformatNumber(value);\n\n    // Allow only numbers, commas, and one decimal point\n    const regex = /^-?\\d+(,\\d{3})*(\\.\\d*)?$/;\n\n    // Remove commas for processing\n    value = unformatNumber(value);\n\n    // Check if the value is valid\n    if (value === '' || regex.test(value)) {\n      // Set the formatted value back in the input field\n\n      //setInputValue(formatNumber(value));\n      e.target.value = formatNumber(value)\n\n    }\n  };\n\n  const handleBlur = (e: any) => {\n    let value = unformatNumber(e.target.value);\n\n    // Ensure the value has two decimal places\n    value = ensureTwoDecimals(value);\n\n    // Set the value with commas and .00 (if needed)\n    // setInputValue(formatNumber(value));\n    e.target.value = formatNumber(value)\n  };\n\n  return (\n    <div\n      style={{\n        display: 'flex',\n        alignItems: 'center',\n        position: 'relative',\n        ...containerStyle // Enable absolute positioning for icon\n      }}\n    >\n      <label {...label} htmlFor={id}>\n        {label.title}\n      </label>\n      {icon && iconPosition === 'start' && (\n        <div style={{ position: 'absolute', left: '8px', zIndex: 1 }}>\n          {icon}\n        </div>\n      )}\n      <input\n        ref={inputRef}\n        id={id}\n        {...input}\n        type=\"text\"\n        style={{\n          height: '100%',\n          ...input.style,\n        }}\n        onChange={(e) => {\n          handleChange(e)\n          onChange(e)\n        }}\n        onBlur={(e) => {\n          handleBlur(e)\n        }}  // Add .00 on blur\n\n      />\n      {icon && iconPosition === 'end' && (\n        <div onClick={onIconClick}\n          style={{\n            position: 'absolute',\n            right: '2px',\n            top: \"50%\",\n            transform: \"translateY(-50%)\",\n            zIndex: 1,\n            cursor: disableIcon ? \"none\" : \"pointer\",\n            display: \"flex\",\n            alignItems: \"center\",\n            justifyContent: \"center\",\n            background: \"white\",\n            pointerEvents: disableIcon ? \"none\" : \"auto\"\n          }}>\n          {icon}\n        </div>\n\n      )\n      }\n    </div >\n  );\n}\n\n\nexport function TextInput({\n  input,\n  label,\n  inputRef,\n  icon,\n  iconPosition = 'end', // Default position is 'end'\n  disableIcon = false,\n  containerStyle,\n  onIconClick = (e) => { }\n}: TextInputProps) {\n  const id = useId();\n\n\n  return (\n    <div\n      style={{\n        display: 'flex',\n        alignItems: 'center',\n        position: 'relative',\n        ...containerStyle\n      }}\n    >\n      <label {...label} htmlFor={id}>\n        {label.title}\n      </label>\n      {icon && iconPosition === 'start' && (\n        <div style={{ position: 'absolute', left: '8px', zIndex: 1 }}>\n          {icon}\n        </div>\n      )}\n      <input\n        ref={inputRef}\n        id={id}\n        {...input}\n        style={{\n          height: '100%',\n          ...input.style,\n        }}\n      />\n      {icon && iconPosition === 'end' && (\n        <div onClick={onIconClick}\n          style={{\n            position: 'absolute',\n            right: '2px',\n            top: \"50%\",\n            transform: \"translateY(-50%)\",\n            zIndex: 1,\n            cursor: disableIcon ? \"none\" : \"pointer\",\n            display: \"flex\",\n            alignItems: \"center\",\n            justifyContent: \"center\",\n            background: \"white\",\n            pointerEvents: disableIcon ? \"none\" : \"auto\",\n          }}>\n          {icon}\n        </div>\n\n      )\n      }\n    </div >\n  );\n}\n\n\n\nexport function TextAreaInput({\n  textarea,\n  label,\n  _inputRef,\n  icon,\n  iconPosition = 'end', // Default position is 'end'\n  disableIcon = false,\n  onIconClick = (e) => { }\n}: TextAreaPrps) {\n  const id = useId();\n\n  return (\n    <div\n      style={{\n        display: 'flex',\n        alignItems: 'center',\n        position: 'relative', // Enable absolute positioning for icon\n      }}\n    >\n      <label {...label} htmlFor={id}>\n        {label.title}\n      </label>\n      {icon && iconPosition === 'start' && (\n        <div style={{ position: 'absolute', left: '8px', zIndex: 1 }}>\n          {icon}\n        </div>\n      )}\n      <textarea\n        ref={_inputRef}\n        id={id}\n        {...textarea}\n        style={{\n          height: '100%',\n          ...textarea.style,\n        }}\n\n      />\n      {icon && iconPosition === 'end' && (\n        <div onClick={onIconClick}\n          style={{\n            position: 'absolute',\n            right: '2px',\n            top: \"50%\",\n            transform: \"translateY(-50%)\",\n            zIndex: 1,\n            cursor: disableIcon ? \"none\" : \"pointer\",\n            display: \"flex\",\n            alignItems: \"center\",\n            justifyContent: \"center\",\n            background: \"white\",\n            pointerEvents: disableIcon ? \"none\" : \"auto\"\n          }}>\n          {icon}\n        </div>\n\n      )\n      }\n    </div >\n  );\n}\n\n\nexport function SelectInput({\n  select,\n  label,\n  selectRef,\n  datasource = [],\n  values = \"\",\n  display = \"\",\n  containerStyle\n}: {\n  selectRef?: React.RefObject<HTMLSelectElement>;\n  labelRef?: React.RefObject<HTMLLabelElement>;\n  select: InputHTMLAttributes<HTMLSelectElement>;\n  label: HtmlHTMLAttributes<HTMLLabelElement>;\n  datasource: Array<any>;\n  values: string;\n  display: string;\n  containerStyle?: React.CSSProperties | undefined\n}) {\n  const id = useId();\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        height: \"18px\",\n        alignItems: \"center\",\n        ...containerStyle\n      }}\n    >\n      <label {...label} htmlFor={id}>\n        {label.title}\n      </label>\n      <select\n        {...select}\n        ref={selectRef}\n        className={`select ${select.className}`}\n        style={{\n          height: \"18px\",\n          ...select.style,\n        }}\n      >\n        {datasource.map((itm, idx) => {\n          return (\n            <option key={idx} value={itm[values]}>\n              {itm[display]}\n            </option>\n          );\n        })}\n      </select>\n    </div>\n  );\n}\n\nexport function ButtonField({\n  buttonRetRef,\n  button,\n  tooltipText = \"\",\n  children,\n  disabled = false,\n}: {\n  buttonRetRef?: React.RefObject<HTMLButtonElement>;\n  button: HtmlHTMLAttributes<HTMLButtonElement>;\n  tooltipText: string;\n  children: React.ReactNode;\n  disabled?: boolean;\n}) {\n  return (\n    <div className=\"tooltip\">\n      <button\n        disabled={disabled}\n        {...button}\n        ref={buttonRetRef}\n        style={{ ...button.style, background: !disabled ? \"transparent\" : \"#f1f1f1\" }}\n        className=\"tooltip-button\"\n      >\n        {children}\n      </button>\n      {!disabled && <span className=\"tooltip-text\">{tooltipText}</span>}\n    </div>\n  );\n}\n","import React, {\n  useState,\n  useRef,\n  useEffect,\n  forwardRef,\n  useImperativeHandle,\n} from \"react\";\nimport \"../style/datagridview.css\";\nimport { Pagination } from \"@mui/material\";\ninterface UpwardTablePropsType {\n  rows: Array<any>;\n  column: Array<any>;\n  width: number;\n  height: number;\n  dataReadOnly: boolean;\n  onSelectionChange?: (row: Array<any>, rowIndex: number) => void;\n  onKeyDown?: (row: Array<any>, key: string, rowIndex: number) => void;\n  isMultipleSelect?: boolean;\n  freeze?: boolean;\n  inputsearchselector?: string;\n  isRowSelectable?: boolean;\n  unSelectable?: (row: any) => boolean;\n  isLoading?: boolean,\n  onRightClick?: (rowSelected: any, event: any) => any\n}\nconst UpwardTable = forwardRef(\n  (\n    {\n      rows,\n      column,\n      width,\n      height,\n      dataReadOnly,\n      onSelectionChange = () => { },\n      isMultipleSelect = false,\n      freeze = false,\n      onKeyDown,\n      inputsearchselector = \".search-input-up-on-key-down\",\n      isRowSelectable = true,\n      unSelectable = () => false,\n      isLoading,\n      onRightClick\n    }: UpwardTablePropsType,\n    UpwardTableRef\n  ) => {\n    const [pages, setPages] = useState<Array<any>>([])\n    const [pageNumber, setPageNumber] = useState(0)\n    const onSelectionChangeRef = useRef(onSelectionChange);\n    const onKeyDownRef = useRef(onKeyDown);\n    const [columns, setColumns] = useState(column.filter((itm) => !itm.hide));\n    const [hoveredColumn, setHoveredColumn] = useState(null);\n    const [selectedRows, setSelectedRows] = useState<Array<number>>([0]);\n    const [lastSelectedRowIndex, setLastSelectedRowIndex] = useState(0);\n    const [selectedItems, setSelectedItems] = useState<Array<number>>([]);\n    const divRef = useRef<HTMLDivElement>(null);\n    const [_clickTimeout, _setClickTimeout] = useState(null);\n\n\n    useEffect(() => {\n      const _pages = formatArrayIntoChunks(rows, 100)\n      setPages(_pages)\n    }, [rows])\n\n    const startResize = (index: any, e: any) => {\n      e.preventDefault();\n      e.stopPropagation();\n\n      const startX = e.clientX;\n      const startWidth = columns[index].width;\n\n      const doDrag = (moveEvent: any) => {\n        const newWidth = startWidth + (moveEvent.clientX - startX);\n        const updatedColumns = [...columns];\n        updatedColumns[index].width = newWidth > 50 ? newWidth : 50; // Set minimum column width\n        setColumns(updatedColumns);\n      };\n\n      const stopDrag = () => {\n        document.removeEventListener(\"mousemove\", doDrag);\n        document.removeEventListener(\"mouseup\", stopDrag);\n      };\n\n      document.addEventListener(\"mousemove\", doDrag);\n      document.addEventListener(\"mouseup\", stopDrag);\n    };\n    const handleMouseEnter = (index: any) => {\n      setHoveredColumn(index); // Set the hovered column index\n    };\n    const handleMouseLeave = () => {\n      setHoveredColumn(null); // Reset hovered column index\n    };\n    const handleRowClick = (\n      rowIndex: any,\n      event: React.MouseEvent<HTMLDivElement, MouseEvent>\n    ) => {\n      function getIndexAndData(selectedRowData: Array<any>) {\n        const filterSelectrowData = selectedRowData.map((d, idx) => {\n          if (!unSelectable(d)) {\n            return { idx, data: d };\n          }\n          return null;\n        });\n        const removeNullValue = filterSelectrowData.filter((d) => d !== null);\n        const data = removeNullValue.map((itm: any) => itm.data);\n        const newSelectedRowsFiltered = removeNullValue.map(\n          (itm: any) => itm.idx\n        );\n        return { newSelectedRowsFiltered, data };\n      }\n\n      if (!isMultipleSelect) {\n        // Single selection mode\n        setSelectedRows([rowIndex]);\n      } else {\n        // Multiple selection mode\n        if (event.shiftKey && lastSelectedRowIndex !== null) {\n          // Shift + Click: Select range between last clicked row and current clicked row\n          const rangeStart = Math.min(lastSelectedRowIndex, rowIndex);\n          const rangeEnd = Math.max(lastSelectedRowIndex, rowIndex);\n          const newSelectedRows: Array<number> = [];\n          for (let i = rangeStart; i <= rangeEnd; i++) {\n            if (!selectedRows.includes(i)) {\n              newSelectedRows.push(i);\n            }\n          }\n\n          let selectedItemsParams: Array<number> = [\n            ...selectedItems,\n            ...newSelectedRows,\n          ];\n\n          setSelectedRows([...selectedRows, ...newSelectedRows]);\n          const selectedRowData = rows.filter((d, idx) =>\n            selectedItemsParams.includes(idx)\n          );\n          const { newSelectedRowsFiltered } =\n            getIndexAndData(selectedRowData);\n\n          setSelectedItems(newSelectedRowsFiltered);\n          // onSelectionChangeRef.current(data, rowIndex);\n        } else if (event.ctrlKey || event.metaKey) {\n          // Ctrl (or Cmd on macOS) + Click: Toggle row selection\n          if (selectedRows.includes(rowIndex) && !freeze) {\n            setSelectedRows(selectedRows.filter((i) => i !== rowIndex));\n            setSelectedItems((d) => {\n              d = d.filter((i) => i !== rowIndex);\n              return d;\n            });\n            let selectedItemsParams: Array<number> = selectedItems.filter(\n              (i) => i !== rowIndex\n            );\n\n            setSelectedItems(selectedItemsParams);\n            // onSelectionChangeRef.current(selectedRowData, rowIndex);\n          } else {\n            setSelectedRows([...selectedRows, rowIndex]);\n            setSelectedItems((d) => {\n              d.push(rowIndex);\n              return d;\n            });\n            let selectedItemsParams: Array<number> = [\n              ...selectedItems,\n              rowIndex,\n            ];\n\n            setSelectedItems(selectedItemsParams);\n            // onSelectionChangeRef.current(selectedRowData, rowIndex);\n          }\n        } else {\n          // Regular click in multiple selection mode: Single click to select a row\n          setSelectedRows([rowIndex]);\n        }\n      }\n      setLastSelectedRowIndex(rowIndex); // Update the last selected index\n    };\n    const handleRowDoubleClick = (\n      rowIndex: any,\n      event: React.MouseEvent<HTMLDivElement, MouseEvent>\n    ) => {\n      const row = rows[rowIndex];\n      if (unSelectable(row)) return;\n      if (!isRowSelectable) return;\n\n\n      let selectedItemsParams: Array<number> = [];\n      if (isMultipleSelect) {\n        selectedItemsParams = [...selectedItems, ...selectedRows];\n      } else {\n        selectedItemsParams = [rowIndex];\n      }\n\n\n      if (selectedItems.includes(rowIndex) && !freeze) {\n        selectedItemsParams = selectedItems.filter((i) => i !== rowIndex);\n        setSelectedItems(selectedItemsParams);\n        onSelectionChangeRef.current([], rowIndex);\n        return;\n      }\n\n      setSelectedItems(selectedItemsParams);\n      onSelectionChangeRef.current([row], rowIndex);\n    };\n    const handleKeyDown = (e: any) => {\n\n      if (e.key === \"ArrowDown\") {\n        e.preventDefault();\n        setSelectedRows((prevIndex: any) => {\n          if (prevIndex[prevIndex.length - 1] === null) return [0];\n          if (prevIndex[prevIndex.length - 1] >= rows.length - 1) {\n            return [rows.length - 1];\n          }\n          const newPrevIndex = prevIndex[prevIndex.length - 1] + 1;\n          const row = document.querySelector(`.row-${newPrevIndex}`);\n          row?.querySelector(\"input\")?.focus();\n\n          row?.scrollIntoView({ block: \"end\", behavior: \"smooth\" });\n          return [newPrevIndex];\n        });\n      } else if (e.key === \"ArrowUp\") {\n        e.preventDefault();\n\n        if (selectedRows[selectedRows.length - 1] === 0) {\n          const input = document.querySelector(\n            inputsearchselector\n          ) as HTMLInputElement;\n          if (input && input.tagName === \"INPUT\") {\n            input?.focus();\n          } else if (input && input.tagName === \"DIV\") {\n            const divInput = document.querySelector(\n              `${inputsearchselector} input`\n            ) as HTMLInputElement;\n\n            divInput?.focus();\n          }\n        }\n\n        setSelectedRows((prevIndex: any) => {\n          if (prevIndex[prevIndex.length - 1] === 0) return [0];\n          const newPrevIndex = prevIndex[prevIndex.length - 1] - 1;\n          const row = document.querySelector(`.row-${newPrevIndex}`);\n\n          row?.scrollIntoView({ block: \"end\", behavior: \"smooth\" });\n          row?.querySelector(\"input\")?.focus();\n          return [newPrevIndex];\n        });\n      }\n\n    };\n    const handleRowKeyDown = (e: any) => {\n      e.stopPropagation()\n\n      if (e.key === \"Enter\" || e.key === \"NumpadEnter\") {\n        e.preventDefault();\n        if (!isRowSelectable) return;\n\n        let selectedItemsParams: Array<number> = [];\n        const rowIndex = selectedRows[selectedRows.length - 1];\n        if (isMultipleSelect) {\n          selectedItemsParams = [...selectedItems, ...selectedRows];\n        } else {\n          selectedItemsParams = [rowIndex];\n        }\n        const row = rows[selectedItemsParams[selectedItemsParams.length - 1]];\n        if (unSelectable(row)) {\n          return;\n        }\n\n        if (selectedItems.includes(rowIndex) && !freeze) {\n          selectedItemsParams = selectedItems.filter((i) => i !== rowIndex);\n          setSelectedItems(selectedItemsParams);\n          onSelectionChangeRef.current([], rowIndex);\n          return;\n        }\n\n        setSelectedItems(selectedItemsParams);\n        onSelectionChangeRef.current([row], rowIndex);\n      } else if (e.key === \"Delete\" || e.key === \"Backspace\") {\n        if (!isRowSelectable) return;\n        const rowIndex = selectedRows[selectedRows.length - 1];\n\n        const selectedRowData = rows.filter((d, idx) =>\n          selectedRows.includes(idx)\n        );\n\n        if (onKeyDownRef?.current) {\n          onKeyDownRef?.current(selectedRowData, e.key, rowIndex);\n        }\n      }\n    }\n    useImperativeHandle(UpwardTableRef, () => ({\n      resetTableSelected: () => {\n        setSelectedRows([0]);\n        setLastSelectedRowIndex(0);\n        setSelectedItems([]);\n        if (rows.length > 0) {\n          const row = document.querySelector(`.row-${0}`);\n          row?.scrollIntoView({ block: \"end\", behavior: \"smooth\" });\n        }\n      },\n      getSelectedIndex: () => {\n        return selectedItems[0];\n      },\n      getSelectedRows: () => {\n        return rows.filter((d, idx) => selectedItems.includes(idx));\n      },\n      getFirstColumn: () => {\n        return rows.filter((d, idx) => selectedItems.includes(idx));\n      },\n      getParentElement: () => {\n        return divRef.current\n      },\n      getSelectedRowsOnClick: () => {\n        return selectedRows[0];\n      },\n      setSelectRows: (indx: number) => {\n        return setSelectedItems([indx])\n      },\n    }));\n\n    const handleRightClick = (event: any, rowIndex: number) => {\n      event.preventDefault();\n      const rowSelected = rows[rowIndex]\n      if (onRightClick) {\n        onRightClick(rowSelected, event)\n      }\n    };\n\n\n\n    return (\n      <div\n        style={{\n          display: \"flex\",\n          justifyContent: \"center\",\n        }}\n        onKeyDown={handleKeyDown}\n      >\n        <div>\n          <div className=\"table-frame-color\">\n            <div\n              style={{\n                display: \"flex\",\n                flexDirection: \"column\",\n                width: `${width - 10}px        `,\n                height: `${height - 135}px`,\n                minHeight: \"270px\"\n              }}\n              className=\"table-frame\"\n            >\n              <div className=\"table-panel\">\n                <div ref={divRef} className={`grid-container `} tabIndex={-1}>\n                  <div\n                    className=\"grid-row grid-header\"\n                    style={{\n                      position: \"sticky\",\n                      zIndex: \"10\",\n                      top: \"-1px\",\n                      background: \"white\",\n                    }}\n                  >\n                    {columns.map((col: any, index: number) => (\n                      <div\n                        key={index}\n                        className={`grid-cell header-cell ${hoveredColumn === index ? `highlight-column` : \"\"\n                          }`} // Add the class if hovered\n                        style={{ width: col.width, height: \"20px\", }}\n                      >\n                        <input\n                          style={{ fontWeight: \"bold\" }}\n                          defaultValue={col.headerName}\n                          readOnly\n                          onChange={(e) => { }}\n                        />\n                        <div\n                          className=\"resize-handle\"\n                          onMouseDown={(e) => startResize(index, e)}\n                          onMouseEnter={(e) => {\n                            e.preventDefault();\n                            handleMouseEnter(index);\n                          }} // On hover\n                          onMouseLeave={(e) => {\n                            e.preventDefault();\n                            handleMouseLeave();\n                          }} // On mouse leave\n                        />\n                      </div>\n                    ))}\n                  </div>\n                  {pages[pageNumber]?.map((row: any, rowIndex: any) => (\n                    <div\n                      className={`grid-row row-${rowIndex}`} // Highlight selected row\n                      key={rowIndex}\n                      onClick={(e) => handleRowClick(rowIndex, e)}\n                      onDoubleClick={(e) => {\n                        // e.stopPropagation()\n\n                        if (_clickTimeout) {\n                          clearTimeout(_clickTimeout);\n                          _setClickTimeout(null);\n                        }\n\n                        const timeoutId: any = setTimeout(() => {\n                          handleRowDoubleClick(rowIndex, e)\n                        }, 200);\n\n                        _setClickTimeout(timeoutId);\n\n\n\n                      }}\n                      onKeyDown={(e) => {\n\n                        // e.stopPropagation()\n\n                        if (_clickTimeout) {\n                          clearTimeout(_clickTimeout);\n                          _setClickTimeout(null);\n                        }\n\n                        const timeoutId: any = setTimeout(() => {\n                          handleRowKeyDown(e)\n                        }, 200);\n\n                        _setClickTimeout(timeoutId);\n\n\n                      }}\n                      onContextMenu={(e) => handleRightClick(e, rowIndex)}\n                    >\n                      {columns.map((col: any, colIndex: number) => (\n                        <div\n                          key={colIndex}\n                          style={{ width: col.width }}\n                          className={`grid-cell ${hoveredColumn === colIndex ? `highlight-column` : \"\"} row-${rowIndex} col-${colIndex}`}\n                        >\n                          <input\n                            value={row[col.field]}\n                            onChange={(e) => { }}\n                            readOnly={dataReadOnly}\n                            className={`${selectedRows.includes(rowIndex)\n                              ? \"selected-row\"\n                              : \"\"\n                              } ${selectedItems.includes(rowIndex)\n                                ? \"selected-items\"\n                                : \"\"\n                              }\n                          ${col.type === \"number\" ? \"number\" : \"text\"}\n                          `}\n                          />\n                          <div\n                            className=\"resize-handle\"\n                            onMouseDown={(e) => {\n                              e.preventDefault();\n                              startResize(colIndex, e);\n                            }}\n                            onMouseEnter={(e) => {\n                              e.preventDefault();\n                              handleMouseEnter(colIndex);\n                            }} // On hover\n                            onMouseLeave={(e) => {\n                              e.preventDefault();\n                              handleMouseLeave();\n                            }} // On mouse leave\n                          />\n                        </div>\n                      ))}\n                    </div>\n                  ))}\n                </div>\n              </div>\n            </div>\n\n            {isLoading && <div className=\"table-loading\">\n              <div className=\"loader\"></div>\n            </div>}\n          </div>\n          <div className=\"table-panel-footer\" >\n            <div>Records : {rows?.length}</div>\n            <div><Pagination count={pages.length} onChange={(e, value) => {\n              setPageNumber(value - 1)\n            }} />\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n);\nfunction formatArrayIntoChunks(arr: Array<any>, chunkSize = 100) {\n  let result = [];\n\n  for (let i = 0; i < arr.length; i += chunkSize) {\n    // Use slice to create chunks of 'chunkSize'\n    result.push(arr.slice(i, i + chunkSize));\n  }\n  return result;\n}\nexport { UpwardTable, };\n","import { useEffect, useRef, useState, useId } from \"react\";\nimport \"../style/upwardtablemodel.css\";\nimport { TextInput } from \"../components/UpwardFields\";\nimport { UpwardTable } from \"../components/UpwardTable\";\nimport { throttle } from \"lodash\";\nimport { AxiosInstance } from \"axios\";\nimport { User } from \"../components/AuthContext\";\nimport { useMutation } from \"react-query\";\nimport { wait } from \"../lib/wait\";\nimport { IconButton, Modal } from '@mui/material'\nimport CloseIcon from \"@mui/icons-material/Close\";\n\n\ninterface UseUpwardTableModalProps {\n  myAxios: AxiosInstance;\n  user: User | null;\n  column: Array<any>;\n  link: {\n    url: string;\n    queryUrlName: string;\n  };\n  onSelectionChange: (selectedRow: any) => void;\n  onModalClose?: () => void;\n  responseDataKey: string;\n}\nexport const useUpwardTableModal = ({\n  myAxios,\n  user,\n  column,\n  link,\n  onSelectionChange,\n  responseDataKey,\n  onModalClose = () => { },\n}: UseUpwardTableModalProps) => {\n  const id = useId();\n  const inputSearchRef = useRef<HTMLInputElement>(null);\n  const tableRef = useRef<any>(null);\n  const parentRef = useRef<any>(null);\n  const [show, setShowModal] = useState(false);\n  const [rows, setRows] = useState([]);\n  const { isLoading, mutate } = useMutation({\n    mutationKey: id,\n    mutationFn: async (variable: any) =>\n      await myAxios.get(\n        `${link?.url}?${link?.queryUrlName}=${variable.search}`,\n        {\n          headers: {\n            Authorization: `Bearer ${user?.accessToken}`,\n          },\n        }\n      ),\n    onSuccess: (res) => {\n      const response = res as any;\n      setRows(response.data[responseDataKey]);\n    },\n  });\n  const performSearch = (query: string) => {\n    if (query === \"\") {\n      mutate({ search: query });\n    }\n  };\n  // Throttle the search function to limit it to once every 500ms\n  const throttledSearch = throttle((query) => performSearch(query), 500)\n\n  const openModal = (search: string) => {\n    mutate({ search: search });\n    setShowModal(true);\n    setTimeout(() => {\n      if (inputSearchRef.current) {\n        inputSearchRef.current.value = search;\n      }\n      inputSearchRef.current?.focus();\n    }, 150);\n  };\n  const closeModal = () => {\n    setShowModal(false);\n    onModalClose();\n  };\n\n  const width = 460;\n  const height = 530;\n\n  useEffect(() => {\n    if (show && parentRef.current) {\n      wait(1050).then(() => {\n        parentRef.current?.focus();\n      })\n    }\n  }, [show, parentRef]);\n\n  const ModalComponent = (\n    <Modal\n      open={show}\n      onClose={() => {\n        setShowModal(false);\n      }}\n      aria-labelledby=\"modal-modal-title\"\n      aria-describedby=\"modal-modal-description\"\n    >\n      <div style={{\n        position: \"absolute\",\n        top: \"50%\",\n        left: \"50%\",\n        transform: \"translate(-50%, -50%)\",\n        width: \"auto\",\n        background: \"#fff\",\n        paddingTop: \"30px\",\n        paddingBottom: \"20px\",\n        paddingLeft: \"10px\",\n        paddingRight: \"10px\"\n      }}>\n        <div >\n          <TextInput\n            label={{ style: { display: \"none\" } }}\n            input={{\n              className: \"search-input-up-on-key-down\",\n              type: \"text\",\n              style: { width: \"100%\", marginBottom: \"20px\" },\n              onChange: (e) => {\n                e.preventDefault();\n                throttledSearch(e.currentTarget.value);\n              },\n              onKeyDown: (e) => {\n                if (e.key === \"Enter\" || e.key === \"NumpadEnter\") {\n                  e.preventDefault();\n                  mutate({ search: (e.target as any).value });\n                }\n                if (e.key === \"ArrowDown\") {\n                  e.preventDefault();\n                  const datagridview = tableRef.current.getParentElement().querySelector(\n                    `.grid-container .row-0.col-0 input`\n                  ) as HTMLDivElement;\n                  setTimeout(() => {\n                    if (datagridview)\n                      datagridview.focus();\n                  }, 100)\n                }\n              },\n            }}\n            inputRef={inputSearchRef}\n          />\n          <UpwardTable\n            ref={tableRef}\n            rows={rows}\n            column={column.filter((itm) => !itm.hide)}\n            width={width}\n            height={height}\n            dataReadOnly={true}\n            onSelectionChange={onSelectionChange}\n          />\n\n          <IconButton\n            style={{\n              position: \"absolute\",\n              top: \"5px\",\n              right: \"10px\",\n            }}\n            aria-label=\"search-client\"\n            onClick={closeModal}\n          >\n            <CloseIcon style={{ fontSize: \"15px\" }} />\n          </IconButton>\n\n\n        </div>\n      </div>\n\n    </Modal>\n\n  );\n\n  return {\n    Modal: ModalComponent,\n    openModal,\n    closeModal,\n    isLoading,\n  };\n};\n","import React, { useContext, useState, useRef, useEffect, useCallback, forwardRef, useImperativeHandle } from \"react\";\nimport {\n  Box,\n  Typography,\n  Button,\n  IconButton,\n  Modal,\n  MenuItem,\n  Menu,\n} from \"@mui/material\";\nimport AddIcon from \"@mui/icons-material/Add\";\nimport { useMutation, useQuery } from \"react-query\";\nimport Swal from \"sweetalert2\";\nimport SaveIcon from \"@mui/icons-material/Save\";\nimport { AuthContext } from \"../../../../components/AuthContext\";\nimport PersonSearchIcon from \"@mui/icons-material/PersonSearch\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport { flushSync } from \"react-dom\";\nimport { LoadingButton } from \"@mui/lab\";\nimport RestartAltIcon from \"@mui/icons-material/RestartAlt\";\nimport DownloadIcon from \"@mui/icons-material/Download\";\nimport {\n  codeCondfirmationAlert,\n  saveCondfirmationAlert,\n} from \"../../../../lib/confirmationAlert\";\nimport DriveFolderUploadIcon from \"@mui/icons-material/DriveFolderUpload\";\nimport { DisplayFile, checkFile } from \"../Claims/Claims\";\nimport ReactDOMServer from \"react-dom/server\";\nimport { grey } from \"@mui/material/colors\";\nimport { useUpwardTableModal } from \"../../../../hooks/useUpwardTableModal\";\nimport { TextAreaInput, TextInput } from \"../../../../components/UpwardFields\";\nimport AccountBalanceIcon from '@mui/icons-material/AccountBalance';\nimport { NumericFormat } from \"react-number-format\";\nimport { format } from \"date-fns\";\nimport PageHelmet from \"../../../../components/Helmet\";\nimport { wait } from \"@testing-library/user-event/dist/utils\";\nimport SearchIcon from '@mui/icons-material/Search';\nimport { DataGridViewReact } from \"../../../../components/DataGridViewReact\";\n\n\n\nexport const reducer = (state: any, action: any) => {\n  switch (action.type) {\n    case \"UPDATE_FIELD\":\n      return {\n        ...state,\n        [action.field]: action.value,\n      };\n    default:\n      return state;\n  }\n};\nexport const pdcColumn = [\n  { key: \"Check_No\", label: \"Check No.\", width: 150 },\n  { key: \"Check_Date\", label: \"Check Date\", width: 150 },\n  { key: \"Check_Amnt\", label: \"Amount\", width: 150, type: \"number\" },\n  { key: \"BankName\", label: \"Bank\", width: 200 },\n  { key: \"Branch\", label: \"Branch\", width: 200 },\n  {\n    key: \"Check_Remarks\",\n    label: \"Checked Remarks\",\n    width: 350,\n  },\n  { key: \"Deposit_Slip\", label: \"Deposit Slip\", width: 150 },\n  { key: \"DateDeposit\", label: \"Date Deposit\", width: 150 },\n  { key: \"OR_No\", label: \"OR Num\", width: 150 },\n  { key: \"BankCode\", label: \"Bank Code\", width: 150, hide: true },\n];\nexport const pdcSearchColumn = [\n  { field: \"Date\", headerName: \"Date Received\", width: 160 },\n  { field: \"Ref_No\", headerName: \"Ref No.\", width: 160 },\n  {\n    field: \"Name\",\n    headerName: \"Name\",\n    flex: 1,\n  },\n];\nexport const pdcBanksColumn = [\n  { field: \"Bank_Code\", headerName: \"Code\", width: 130 },\n  { field: \"Bank\", headerName: \"Bank Name\", flex: 1 },\n];\nconst queryKey = \"pdc\";\n\nexport default function PostDateChecks() {\n  const tableRef = useRef<any>(null);\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\n  const open = Boolean(anchorEl);\n  const handleClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n    setAnchorEl(event.currentTarget);\n  };\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n  const [isDragging, setIsDragging] = useState(false);\n  const [selectedFiles, setSelectedFiles] = useState<Array<File>>([]);\n  const [openPdcInputModal, setOpenPdcInputModal] = useState(false);\n  const [showModal, setShowModal] = useState(false);\n\n\n\n  const searchInputRef = useRef<HTMLInputElement>(null);\n\n  const [hasSelectedRow, setHasSelectedRow] = useState(null)\n  const [pdcMode, setPdcMode] = useState('')\n\n  const { myAxios, user } = useContext(AuthContext);\n  const searchRef = useRef<HTMLInputElement>(null);\n\n  // pdc form save button\n  const fileInputRef = useRef<HTMLInputElement>(null);\n  const savePDCButtonRef = useRef<HTMLButtonElement>(null);\n\n\n  //check modal refs\n\n  const checkModalSaveButton = useRef<HTMLButtonElement>(null);\n  const checkModalSaveButtonActionRef = useRef<any>(null);\n  // search modal auto focus on load\n\n\n  // modal \n  const _checknoRef = useRef<HTMLInputElement>(null);\n  const _bankRef = useRef<HTMLInputElement>(null);\n  const _branchRef = useRef<HTMLInputElement>(null);\n  const _remarksRef = useRef<HTMLTextAreaElement>(null);\n  const _chekdateRef = useRef<HTMLInputElement>(null);\n  const _amountRef = useRef<HTMLInputElement>(null);\n  const _checkcountRef = useRef<HTMLInputElement>(null);\n  const _bankCode = useRef('');\n  const _slipCodeRef = useRef('');\n  const _slipDateRef = useRef('');\n  const _checkOR = useRef('');\n\n  const addRefButton = useRef<HTMLButtonElement>(null);\n\n\n  const subRefNoRef = useRef('');\n  const PNoRef = useRef('');\n  const subAccountRef = useRef('');\n\n  const refNoRef = useRef<HTMLInputElement>(null);\n  const dateRef = useRef<HTMLInputElement>(null);\n  const remakrsRef = useRef<HTMLTextAreaElement>(null);\n  const pnRef = useRef<HTMLInputElement>(null);\n  const branchRef = useRef<HTMLInputElement>(null);\n  const clientnameRef = useRef<HTMLTextAreaElement>(null);\n\n\n  const { isLoading: newRefNumberLoading, refetch: refetchNewRefNumber } =\n    useQuery({\n      queryKey: \"new-ref-number\",\n      queryFn: async () => {\n        return await myAxios.get(\"/task/accounting/pdc-new-ref-number\", {\n          headers: {\n            Authorization: `Bearer ${user?.accessToken}`,\n          },\n        });\n      },\n      refetchOnWindowFocus: false,\n      onSuccess: (res) => {\n        const response = res as any;\n        wait(100).then(() => {\n          subRefNoRef.current = response.data.RefNo[0].pdcID\n          if (refNoRef.current) {\n            refNoRef.current.value = response.data.RefNo[0].pdcID\n          }\n        })\n\n      },\n    });\n\n  const { mutate, isLoading: loadingAddNew } = useMutation({\n    mutationKey: queryKey,\n    mutationFn: async (variables: any) => {\n      if (pdcMode === \"update\") {\n        delete variables.mode;\n        return await myAxios.post(\"/task/accounting/update-pdc\", variables, {\n          headers: {\n            Authorization: `Bearer ${user?.accessToken}`,\n          },\n        });\n      }\n      delete variables.mode;\n      return await myAxios.post(\"/task/accounting/add-pdc\", variables, {\n        headers: {\n          Authorization: `Bearer ${user?.accessToken}`,\n        },\n      });\n    },\n    onSuccess: (res) => {\n      if (res.data.success) {\n        resetPDC()\n        return Swal.fire({\n          position: \"center\",\n          icon: \"success\",\n          title: res.data.message,\n          showConfirmButton: false,\n          timer: 1500,\n        });\n      }\n\n      Swal.fire({\n        position: \"center\",\n        icon: \"error\",\n        title: res.data.message,\n        showConfirmButton: false,\n        timer: 1500,\n      });\n    },\n  });\n  //selecte search\n\n  const { mutate: mutateSelectedSearch, isLoading: isLoadingSelectedSearch } =\n    useMutation({\n      mutationKey: queryKey,\n      mutationFn: async (variables: any) =>\n        await myAxios.post(\"/task/accounting/get-search-pdc-check\", variables, {\n          headers: {\n            Authorization: `Bearer ${user?.accessToken}`,\n          },\n        }),\n      onSuccess: async (res) => {\n        if (!res?.data.success) {\n          return alert(`Error : ${res?.data.message}`);\n        }\n\n        const response = res as any;\n        const Ref_No = response.data.getSearchPDCCheck[0].Ref_No;\n        if (response.data.upload[0]) {\n          const uploadFiles = JSON.parse(response.data.upload[0]?.upload);\n          const newObjContainerBasic = await formatDataToDocument(\n            uploadFiles,\n            `${process.env.REACT_APP_IMAGE_URL}pdc/${Ref_No}`\n          );\n          const fileSelected = await Promise.all(newObjContainerBasic);\n          setSelectedFiles(fileSelected);\n        }\n        async function formatDataToDocument(\n          dataDocument: Array<any>,\n          url: string\n        ) {\n          const newObjContainer: Array<any> = [];\n          for (let index = 0; index < dataDocument.length; index++) {\n            const basicItem = dataDocument[index];\n            const mainURL = `${url}/${basicItem.uniqueFilename}`;\n            const response = await fetch(mainURL);\n            const blob = await response.blob();\n            const file = new File([blob], basicItem.fileName, {\n              type: basicItem.fileType,\n            });\n            const reader = new FileReader();\n            newObjContainer.push(\n              new Promise((resolve, reject) => {\n                reader.onload = function (event) {\n                  resolve(file);\n                };\n                reader.onerror = function (event) {\n                  reject(new Error(\"Error reading file: \" + file.name));\n                };\n                reader.readAsDataURL(file);\n              })\n            );\n          }\n          return newObjContainer;\n        }\n\n        tableRef.current.setDataFormated(response.data.getSearchPDCCheck)\n\n        if (refNoRef.current) {\n          refNoRef.current.value = response.data.getSearchPDCCheck[0].Ref_No\n        }\n        if (clientnameRef.current) {\n          clientnameRef.current.value = response.data.getSearchPDCCheck[0].Name\n        }\n        if (dateRef.current) {\n          dateRef.current.value = response.data.getSearchPDCCheck[0].Date\n        }\n        if (pnRef.current) {\n          pnRef.current.value = response.data.getSearchPDCCheck[0].PNo\n        }\n        if (branchRef.current) {\n          branchRef.current.value = response.data.getSearchPDCCheck[0].Acronym\n        }\n        if (remakrsRef.current) {\n          remakrsRef.current.value = response.data.getSearchPDCCheck[0].Remarks\n        }\n        PNoRef.current = response.data.getSearchPDCCheck[0].IDNo\n        subAccountRef.current = response.data.getSearchPDCCheck[0].sub_account\n\n\n\n      },\n    });\n\n  // policy ids search table modal\n  const {\n    Modal: ModalSearchPdcIDs,\n    closeModal: closeModalSearchPdcIDs,\n    openModal: openModalSearchPdcIDs,\n    isLoading: isLoadingModalSearchPdcIDs,\n  } = useUpwardTableModal({\n    myAxios,\n    user,\n    link: {\n      url: \"/task/accounting/search-pdc-policy-id\",\n      queryUrlName: \"searchPdcPolicyIds\",\n    },\n    column: [\n      { field: \"Type\", headerName: \"Type\", width: 130 },\n      { field: \"IDNo\", headerName: \"ID No.\", width: 200 },\n      { field: \"chassis\", headerName: \"Chassis No.\", width: 200, hide: true },\n      {\n        field: \"Name\",\n        headerName: \"Name\",\n        width: 350,\n      },\n      {\n        field: \"ID\",\n        headerName: \"ID\",\n        width: 300,\n        hide: true,\n      },\n      {\n        field: \"client_id\",\n        headerName: \"client_id\",\n        width: 200,\n        hide: true,\n      },\n    ],\n    onSelectionChange: (selectedRow: any) => {\n      if (selectedRow.length > 0) {\n\n        wait(100).then(() => {\n          PNoRef.current = selectedRow[0].client_id\n          subAccountRef.current = selectedRow[0].sub_account\n          if (pnRef.current) {\n            pnRef.current.value = selectedRow[0].IDNo\n          }\n          if (clientnameRef.current) {\n            clientnameRef.current.value = selectedRow[0].Name\n          }\n          if (branchRef.current) {\n            branchRef.current.value = selectedRow[0].Acronym\n          }\n          if (selectedRow[0].Remarks && selectedRow[0].Remarks !== '') {\n            if (remakrsRef.current) {\n              remakrsRef.current.value = selectedRow[0].Remarks\n            }\n          }\n\n        })\n\n        closeModalSearchPdcIDs();\n\n      }\n    },\n\n    responseDataKey: \"clientsId\",\n  });\n\n  // bank search table modal\n  const {\n    Modal: ModalSearchBanks,\n    closeModal: closeModalSearchBanks,\n    openModal: openModalSearchBanks,\n    isLoading: isLoadingModalSearchbanks,\n  } = useUpwardTableModal({\n    myAxios,\n    user,\n    link: {\n      url: \"/task/accounting/search-pdc-banks\",\n      queryUrlName: \"searchPdcBanks\",\n    },\n    column: [\n      { field: \"Bank_Code\", headerName: \"Code\", width: 100 },\n      { field: \"Bank\", headerName: \"Bank Name\", width: 350 },\n    ],\n    onSelectionChange: (selectedRow: any) => {\n      if (selectedRow.length > 0) {\n        setTimeout(() => {\n          _bankCode.current = selectedRow[0].Bank_Code\n          if (_bankRef.current) {\n            _bankRef.current.value = selectedRow[0].Bank\n          }\n        }, 100)\n\n        closeModalSearchBanks();\n        setOpenPdcInputModal(true);\n        setTimeout(() => {\n          _branchRef.current?.focus()\n        }, 100);\n      }\n    },\n    onModalClose: () => {\n      setTimeout(() => {\n        setOpenPdcInputModal(true);\n      }, 100);\n    },\n    responseDataKey: \"pdcBanks\",\n  });\n  // pdc search table modal\n  const {\n    Modal: UpwardPDCModal,\n    closeModal: closeUpwardPDCModal,\n    openModal: openUpwardPDCModal,\n    isLoading: isLoadingModalSearchPDC,\n  } = useUpwardTableModal({\n    myAxios,\n    user,\n    column: [\n      { field: \"Date\", headerName: \"Date Received\", width: 90 },\n      { field: \"Ref_No\", headerName: \"Ref No.\", width: 80 },\n      {\n        field: \"Name\",\n        headerName: \"Name\",\n        width: 320,\n      },\n    ],\n    link: {\n      url: \"/task/accounting/search-pdc\",\n      queryUrlName: \"searchPDCInput\",\n    },\n    onSelectionChange: (selectedRow: any) => {\n      if (selectedRow.length > 0) {\n        mutateSelectedSearch({ ref_no: selectedRow[0].Ref_No });\n        setPdcMode('update')\n        closeUpwardPDCModal();\n        if (searchRef.current) {\n          searchRef.current?.focus();\n        }\n      }\n    },\n    responseDataKey: \"searchPDC\",\n  });\n\n  const handleOnSave = useCallback(async (e: any) => {\n    const pdcTableData = tableRef.current.getDataFormatted()\n\n    if (pnRef.current && pnRef.current.value === \"\") {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: \"Please provide loan information!\",\n        timer: 1500,\n      }).then(() => {\n        setTimeout(() => {\n          pnRef.current?.click();\n        }, 350);\n      });\n    }\n    if (pdcTableData.length <= 0) {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: \"Please provide entry!\",\n        timer: 1500,\n      }).then(() => {\n        setOpenPdcInputModal(true);\n      });\n    }\n\n    const filePromises: Array<any> = [];\n    function fileTransfer(filePromises: Array<any>) {\n      const files = selectedFiles;\n      if (files.length > 0) {\n        for (let i = 0; i < files.length; i++) {\n          const file = files[i];\n          const reader = new FileReader();\n          filePromises.push(\n            new Promise((resolve, reject) => {\n              reader.onload = function (event) {\n                resolve({\n                  datakey: \"pdc_file\",\n                  fileName: file.name,\n                  fileContent: event.target?.result,\n                  fileType: file.type,\n                  file,\n                });\n              };\n              reader.onerror = function (event) {\n                reject(new Error(\"Error reading file: \" + file.name));\n              };\n              reader.readAsDataURL(file);\n            })\n          );\n        }\n      }\n    }\n    fileTransfer(filePromises);\n    const fileToSave = await Promise.all(filePromises);\n    const stateSubmited = {\n      Ref_No: refNoRef.current?.value,\n      PNo: pnRef.current?.value,\n      IDNo: PNoRef.current,\n      Date: dateRef.current?.value,\n      Name: clientnameRef.current?.value,\n      Remarks: remakrsRef.current?.value,\n      Branch: branchRef.current?.value,\n      checks: JSON.stringify(pdcTableData),\n    };\n    if (pdcMode === \"update\") {\n      codeCondfirmationAlert({\n        isUpdate: true,\n        cb: (userCodeConfirmation) => {\n          mutate({ ...stateSubmited, userCodeConfirmation, fileToSave });\n        },\n      });\n    } else {\n      saveCondfirmationAlert({\n        isConfirm: () => {\n          mutate({ ...stateSubmited, fileToSave });\n        },\n      });\n    }\n  }, [mutate, selectedFiles, pdcMode])\n\n  const handleDragLeave = (e: React.DragEvent<HTMLDivElement>) => {\n    e.preventDefault();\n    setIsDragging(false);\n  };\n  const handleDragEnter = (e: React.DragEvent<HTMLDivElement>) => {\n    e.preventDefault();\n    setIsDragging(true);\n  };\n  const handleDrop = (e: React.DragEvent<HTMLDivElement>) => {\n    e.preventDefault();\n    const fileList = e.dataTransfer.files;\n    const files = Array.from(fileList);\n    const newFiles = [...selectedFiles, ...files];\n    setIsDragging(false);\n    if (checkFile(newFiles)) {\n      fileInputRef.current?.click();\n      return alert(\"file is not valid Extention!\");\n    } else {\n      setSelectedFiles(newFiles);\n    }\n  };\n  const clickPDCReceipt = () => {\n    const pdcTableData = tableRef.current.getDataFormatted()\n\n    flushSync(() => {\n      const state = {\n        Ref_No: refNoRef.current?.value,\n        PNo: pnRef.current?.value,\n        IDNo: PNoRef.current,\n        Date: dateRef.current?.value,\n        Name: clientnameRef.current?.value,\n        Remarks: remakrsRef.current?.value,\n        Branch: branchRef.current?.value,\n      };\n\n      localStorage.removeItem(\"printString\");\n      localStorage.setItem(\"dataString\", JSON.stringify(pdcTableData));\n      localStorage.setItem(\"paper-width\", \"8.5in\");\n      localStorage.setItem(\"paper-height\", \"11in\");\n      localStorage.setItem(\"module\", \"pdc\");\n      localStorage.setItem(\"state\", JSON.stringify(state));\n      localStorage.setItem(\n        \"column\",\n        JSON.stringify([\n          { datakey: \"Check_No\", header: \"CHECK NO\", width: \"80px\" },\n          { datakey: \"Check_Date\", header: \"DATE\", width: \"130px\" },\n          { datakey: \"BankName\", header: \"BANK\", width: \"240px\" },\n          { datakey: \"Check_Amnt\", header: \"AMOUNT\", width: \"70px\" },\n          { datakey: \"SEQ\", header: \"SEQ\", width: \"30px\" },\n        ])\n      );\n\n      localStorage.setItem(\n        \"title\",\n        user?.department === \"UMIS\"\n          ? \"UPWARD MANAGEMENT INSURANCE SERVICES\\n Post Date Checks Receipt\"\n          : \"UPWARD CONSULTANCY SERVICES AND MANAGEMENT INC.\\n Post Date Checks Receipt\"\n      );\n    });\n    window.open(\"/dashboard/print\", \"_blank\");\n  };\n  const clickPDCLabeling = () => {\n    let printString = () => {\n      return (\n        <div>\n          <p\n            style={{\n              color: \"#d1d5db\",\n              fontSize: \"11px\",\n              textAlign: \"center\",\n              padding: 0,\n              marginTop: \"8px\",\n              marginBottom: 0,\n            }}\n          >\n            UCSMI\n          </p>\n          <p\n            style={{\n              color: \"#d1d5db\",\n              fontSize: \"11px\",\n              textAlign: \"center\",\n              padding: 0,\n              margin: 0,\n            }}\n          >\n            {clientnameRef.current?.value}\n          </p>\n          <p\n            style={{\n              color: \"#d1d5db\",\n              fontSize: \"11px\",\n              textAlign: \"center\",\n              padding: 0,\n              margin: 0,\n            }}\n          >\n            {PNoRef.current}\n          </p>\n          <p\n            style={{\n              color: \"#d1d5db\",\n              fontSize: \"11px\",\n              textAlign: \"center\",\n              padding: 0,\n              margin: \"20px\",\n            }}\n          >\n            {refNoRef.current?.value}\n          </p>\n        </div>\n      );\n    };\n\n    flushSync(() => {\n      const elementString = ReactDOMServer.renderToString(printString());\n      localStorage.setItem(\"printString\", elementString);\n      localStorage.removeItem(\"dataString\");\n      localStorage.setItem(\"paper-width\", \"8.5in\");\n      localStorage.setItem(\"paper-height\", \"11in\");\n    });\n    window.open(\"/dashboard/print\", \"_blank\");\n  };\n\n  function resetPDC() {\n    setPdcMode('')\n    tableRef.current.setSelectedRow(null)\n    tableRef.current.setData([])\n    refetchNewRefNumber()\n\n    if (dateRef.current) {\n      dateRef.current.value = format(new Date(), \"yyyy-MM-dd\")\n    }\n    if (remakrsRef.current) {\n      remakrsRef.current.value = ''\n    }\n    if (pnRef.current) {\n      pnRef.current.value = ''\n    }\n    if (branchRef.current) {\n      branchRef.current.value = ''\n    }\n    if (clientnameRef.current) {\n      clientnameRef.current.value = ''\n    }\n\n\n\n  }\n  function formatNumber(num: number) {\n    return (num || 0).toLocaleString(\"en-US\", {\n      minimumFractionDigits: 2,\n      maximumFractionDigits: 2,\n    })\n  }\n  function handleCheckDetailsSave() {\n\n    function incrementStringNumbers(\n      str: string,\n      increment: number\n    ) {\n      let num = parseInt(str);\n      num = num + increment;\n      return num.toString().padStart(str.length, \"0\");\n    }\n    function incrementDate(dateString: any, i: number) {\n      const currentDate = new Date(\n        dateString\n      );\n      currentDate.setMonth(currentDate.getMonth() + i);\n\n      return format(currentDate, 'yyyy-MM-dd')\n    }\n    function isValidDate(dateString: string): boolean {\n      const date = new Date(dateString);\n      return date instanceof Date && !isNaN(date.getTime());\n    }\n\n    if (\n      _checknoRef.current &&\n      _bankRef.current &&\n      _branchRef.current &&\n      _remarksRef.current &&\n      _chekdateRef.current &&\n      _amountRef.current &&\n      _checkcountRef.current\n    ) {\n\n\n      const tableRows = tableRef.current.getDataFormatted()\n      const selectedIndex = tableRef.current.getSelectedRow()\n\n      const filteredChecks = tableRows.filter((itm: any) => {\n        return _checknoRef.current && _checknoRef.current.value === itm.Check_No\n      })\n\n\n      if (filteredChecks.length > 0 && selectedIndex === null) {\n        alert('check no. is already exist!')\n        _checknoRef.current.focus()\n        return\n      }\n      if (_checknoRef.current.value === '') {\n        alert('check no. is required!')\n        _checknoRef.current.focus()\n        return\n      } else if (_bankRef.current.value === '') {\n        alert('bank is required!')\n        _bankRef.current.focus()\n        return\n      } else if (_branchRef.current.value === '') {\n        alert('branch is required!')\n        _branchRef.current.focus()\n        return\n      } else if (!isValidDate(_chekdateRef.current.value)) {\n        alert('invalid date!')\n        _chekdateRef.current.focus()\n        return\n      } else if (parseFloat(_amountRef.current.value.replace(/,/g, '')) <= 0) {\n        alert('amount must be greater than 0!')\n        _amountRef.current.focus()\n        return\n      }\n\n\n\n      if (\n        _checknoRef.current &&\n        _bankRef.current &&\n        _branchRef.current &&\n        _remarksRef.current &&\n        _chekdateRef.current &&\n        _amountRef.current &&\n        _checkcountRef.current\n      ) {\n\n\n\n        if (selectedIndex) {\n          const selectedRow = tableRef.current.getData()\n          selectedRow[selectedIndex][0] = _checknoRef.current.value\n          selectedRow[selectedIndex][1] = _chekdateRef.current.value\n          selectedRow[selectedIndex][2] = _amountRef.current.value\n          selectedRow[selectedIndex][3] = _bankRef.current.value\n          selectedRow[selectedIndex][4] = _branchRef.current.value\n          selectedRow[selectedIndex][5] = _remarksRef.current.value\n          selectedRow[selectedIndex][6] = _slipCodeRef.current\n          selectedRow[selectedIndex][7] = _slipDateRef.current\n          selectedRow[selectedIndex][8] = _checkOR.current\n          selectedRow[selectedIndex][9] = _bankCode.current\n          tableRef.current.setData(selectedRow)\n          tableRef.current.setSelectedRow(null)\n          setHasSelectedRow(null)\n        } else {\n          const newData: any = []\n          for (\n            let i = 0;\n            i < parseInt(_checkcountRef.current.value);\n            i++\n          ) {\n            const data: any = {\n              Check_No: incrementStringNumbers(\n                _checknoRef.current.value,\n                i\n              ),\n              Check_Date: incrementDate(_chekdateRef.current.value, i),\n              Check_Amnt: _amountRef.current.value,\n              BankName: _bankRef.current.value,\n              BankCode: _bankCode.current,\n              Branch: _branchRef.current.value,\n              Check_Remarks: _remarksRef.current.value,\n              Deposit_Slip: _slipCodeRef.current,\n              DateDeposit: _slipDateRef.current,\n              OR_No: _checkOR.current,\n            };\n            newData.push(data)\n          }\n          tableRef.current.setDataFormated(newData)\n\n        }\n      }\n\n\n\n      setOpenPdcInputModal(false);\n    }\n\n  }\n\n\n  useEffect(() => {\n    const handleKeyDown = (event: any) => {\n      if ((event.ctrlKey || event.metaKey) && event.key === 's') {\n        event.preventDefault();\n        handleOnSave(event);\n      }\n    };\n\n    window.addEventListener('keydown', handleKeyDown);\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [handleOnSave]);\n\n  const isDisableField = pdcMode === \"\";\n\n\n\n\n  return (\n    <>\n      <PageHelmet title=\"PDC\" />\n      <div\n        style={{\n          width: \"100%\",\n          height: \"100%\",\n          flex: 1,\n          background: \"red\",\n          padding: \"10px\",\n          backgroundColor: \"#F1F1F1\",\n\n        }}\n      >\n\n        {ModalSearchBanks}\n        {UpwardPDCModal}\n        {ModalSearchPdcIDs}\n        <Box\n          sx={(theme) => ({\n            display: \"flex\",\n            alignItems: \"center\",\n            columnGap: \"20px\",\n            [theme.breakpoints.down(\"sm\")]: {\n              flexDirection: \"column\",\n              alignItems: \"flex-start\",\n              flex: 1,\n              marginBottom: \"15px\",\n            },\n          })}\n        >\n          <div\n            style={{\n              display: \"flex\",\n              alignItems: \"center\",\n              columnGap: \"5px\",\n              marginBottom: \"15px\",\n            }}\n          >\n            {isLoadingModalSearchPDC ? (\n              <LoadingButton loading={isLoadingModalSearchPDC} />\n            ) : (\n              <TextInput\n                label={{\n                  title: \"Search: \",\n                  style: {\n                    fontSize: \"12px\",\n                    fontWeight: \"bold\",\n                    width: \"50px\",\n                  },\n                }}\n                input={{\n                  className: \"search-input-up-on-key-down\",\n                  type: \"search\",\n                  onKeyDown: (e) => {\n                    if (e.key === \"Enter\" || e.key === \"NumpadEnter\") {\n                      e.preventDefault();\n                      openUpwardPDCModal(e.currentTarget.value);\n                    }\n                  },\n                  style: { width: \"500px\" },\n                }}\n\n                icon={<SearchIcon sx={{ fontSize: \"18px\" }} />}\n                onIconClick={(e) => {\n                  e.preventDefault()\n                  if (searchInputRef.current)\n                    openUpwardPDCModal(searchInputRef.current.value);\n\n                }}\n                inputRef={searchInputRef}\n              />\n            )}\n            {pdcMode === \"\" && (\n              <Button\n                sx={{\n                  height: \"30px\",\n                  fontSize: \"11px\",\n                }}\n                variant=\"contained\"\n                startIcon={<AddIcon sx={{ width: 15, height: 15 }} />}\n                id=\"entry-header-save-button\"\n                color=\"primary\"\n                onClick={() => {\n\n                  setPdcMode('add')\n                }}\n              >\n                New\n              </Button>\n            )}\n            <LoadingButton\n              sx={{\n                height: \"30px\",\n                fontSize: \"11px\",\n              }}\n              ref={savePDCButtonRef}\n              id=\"save-entry-header\"\n              color=\"success\"\n              variant=\"contained\"\n              type=\"submit\"\n              onClick={handleOnSave}\n              disabled={pdcMode === \"\"}\n              loading={loadingAddNew}\n              startIcon={<SaveIcon sx={{ width: 15, height: 15 }} />}\n            >\n              Save\n            </LoadingButton>\n            {(pdcMode === \"add\" || pdcMode === \"update\") && (\n              <Button\n                sx={{\n                  height: \"30px\",\n                  fontSize: \"11px\",\n                }}\n                variant=\"contained\"\n                startIcon={<CloseIcon sx={{ width: 15, height: 15 }} />}\n                onClick={() => {\n                  Swal.fire({\n                    title: \"Are you sure?\",\n                    text: \"You won't be able to revert this!\",\n                    icon: \"warning\",\n                    showCancelButton: true,\n                    confirmButtonColor: \"#3085d6\",\n                    cancelButtonColor: \"#d33\",\n                    confirmButtonText: \"Yes, cancel it!\",\n                  }).then((result) => {\n                    if (result.isConfirmed) {\n                      resetPDC()\n                    }\n                  });\n                }}\n                color=\"error\"\n              >\n                Cancel\n              </Button>\n            )}\n            <Button\n              sx={{\n                height: \"30px\",\n                fontSize: \"11px\",\n              }}\n              disabled={pdcMode === \"\"}\n              variant=\"contained\"\n              startIcon={<AddIcon sx={{ width: 15, height: 15 }} />}\n              onClick={() => {\n                flushSync(() => {\n                  setOpenPdcInputModal(true);\n                });\n\n                wait(100).then(() => {\n                  const tableRows = tableRef.current.getDataFormatted()\n                  const getLastCheck_No: any = tableRows[tableRows.length - 1];\n                  if (_checknoRef.current) {\n                    _checknoRef.current.value = incrementCheckNo(\n                      getLastCheck_No?.Check_No\n                    );\n                  }\n\n                  tableRef.current.setSelectedRow(null)\n                  setHasSelectedRow(null)\n                  _checknoRef.current?.focus();\n                })\n              }}\n              ref={addRefButton}\n            >\n              Add Check\n            </Button>\n            <div>\n              <Button\n                disabled={pdcMode !== \"update\"}\n                id=\"basic-button\"\n                aria-controls={open ? \"basic-menu\" : undefined}\n                aria-haspopup=\"true\"\n                aria-expanded={open ? \"true\" : undefined}\n                onClick={handleClick}\n                sx={{\n                  height: \"30px\",\n                  fontSize: \"11px\",\n                  color: \"white\",\n                  backgroundColor: grey[600],\n                  \"&:hover\": {\n                    backgroundColor: grey[700],\n                  },\n                }}\n              >\n                Print\n              </Button>\n              <Menu\n                id=\"basic-menu\"\n                anchorEl={anchorEl}\n                open={open}\n                onClose={handleClose}\n                MenuListProps={{\n                  \"aria-labelledby\": \"basic-button\",\n                }}\n              >\n                <MenuItem onClick={clickPDCReceipt}>PDC Receipt</MenuItem>\n                <MenuItem onClick={clickPDCLabeling}>PDC Labeling</MenuItem>\n              </Menu>\n            </div>\n          </div>\n        </Box>\n        <form\n          onKeyDown={(e) => {\n            if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n              e.preventDefault();\n              return;\n            }\n          }}\n          style={{\n            marginBottom: \"20px\",\n          }}\n        >\n          <Box\n            sx={(theme) => ({\n              display: \"flex\",\n              columnGap: \"15px\",\n              flexDirection: \"row\",\n              [theme.breakpoints.down(\"md\")]: {\n                flexDirection: \"column\",\n                rowGap: \"10px\",\n              },\n            })}\n          >\n            <Box\n              sx={{\n                display: \"flex\",\n                gap: \"10px\",\n                width: \"100%\",\n              }}\n            >\n              <fieldset\n                style={\n                  {\n                    flex: 1,\n                    display: \"flex\",\n                    flexDirection: \"column\",\n                    gap: \"10px\",\n                    padding: \"15px\",\n                    border: \"1px solid #cbd5e1\",\n                    borderRadius: \"5px\",\n                  } as any\n                }\n              >\n                <div\n                  style={{\n                    display: \"flex\",\n                    gap: \"15px\",\n                  }}\n                >\n                  {newRefNumberLoading ? (\n                    <LoadingButton loading={newRefNumberLoading} />\n                  ) : (\n\n                    <TextInput\n                      label={{\n                        title: \"Reference No.\",\n                        style: {\n                          fontSize: \"12px\",\n                          fontWeight: \"bold\",\n                          width: \"100px\",\n                        },\n                      }}\n                      input={{\n                        disabled: isDisableField,\n                        type: \"text\",\n                        style: { width: \"300px\" },\n                        onKeyDown: (e) => {\n                          if (e.key === \"Enter\" || e.key === \"NumpadEnter\") {\n                            e.preventDefault();\n                            dateRef.current?.focus()\n                          }\n                        }\n                      }}\n                      inputRef={refNoRef}\n                      icon={<RestartAltIcon sx={{ fontSize: \"18px\", color: isDisableField ? \"gray\" : \"black\" }} />}\n\n                      disableIcon={isDisableField}\n                    />\n\n                  )}\n\n                  <TextInput\n                    label={{\n                      title: \"Date : \",\n                      style: {\n                        fontSize: \"12px\",\n                        fontWeight: \"bold\",\n                        width: \"50px\",\n                      },\n                    }}\n                    input={{\n                      disabled: isDisableField,\n                      type: \"date\",\n                      defaultValue: format(new Date(), \"yyyy-MM-dd\"),\n                      style: { width: \"190px\" },\n                      onKeyDown: (e) => {\n                        if (e.code === \"NumpadEnter\" || e.code === 'Enter') {\n                          remakrsRef.current?.focus()\n                        }\n                      }\n                    }}\n                    inputRef={dateRef}\n                  />\n\n\n                </div>\n\n                <TextAreaInput\n                  label={{\n                    title: \"Remarks : \",\n                    style: {\n                      fontSize: \"12px\",\n                      fontWeight: \"bold\",\n                      width: \"100px\",\n                    },\n                  }}\n                  textarea={{\n                    rows: 2,\n                    disabled: isDisableField,\n                    style: { flex: 1 },\n                    onKeyDown: (e) => {\n                      e.stopPropagation()\n                      if ((e.code === \"NumpadEnter\" && !e.shiftKey) || (e.code === 'Enter' && !e.shiftKey)) {\n                        pnRef.current?.focus()\n                      }\n                    },\n\n                  }}\n                  _inputRef={remakrsRef}\n                />\n\n\n              </fieldset>\n              <fieldset\n                style={\n                  {\n                    flex: 1,\n                    display: \"flex\",\n                    gap: \"10px\",\n                    padding: \" 15px\",\n                    border: \"1px solid #cbd5e1\",\n                    borderRadius: \"5px\",\n                    flexDirection: \"column\",\n                  } as any\n                }\n              >\n                <div\n                  style={{ width: \"100%\", flex: 1, display: \"flex\", gap: \"15px\" }}\n                >\n                  {isLoadingModalSearchPdcIDs ? (\n                    <LoadingButton loading={isLoadingModalSearchPdcIDs} />\n                  ) : (\n                    <TextInput\n                      label={{\n                        title: \"PN/Client ID : \",\n                        style: {\n                          fontSize: \"12px\",\n                          fontWeight: \"bold\",\n                          width: \"100px\",\n                        },\n                      }}\n                      input={{\n                        disabled: isDisableField,\n                        type: \"text\",\n                        style: { width: \"250px\", height: \"22px\" },\n                        onKeyDown: (e) => {\n                          if (e.key === \"Enter\" || e.key === \"NumpadEnter\") {\n                            e.preventDefault();\n                            if (pnRef.current) {\n                              openModalSearchPdcIDs(pnRef.current.value)\n                            }\n                          }\n                        }\n                      }}\n                      inputRef={pnRef}\n                      icon={<PersonSearchIcon sx={{ fontSize: \"18px\", color: isDisableField ? \"gray\" : \"black\" }} />}\n                      onIconClick={(e) => {\n                        e.preventDefault()\n                        if (pnRef.current) {\n                          openModalSearchPdcIDs(pnRef.current.value)\n                        }\n                      }}\n                      disableIcon={isDisableField}\n                    />\n\n                  )}\n\n                  <TextInput\n                    label={{\n                      title: \"Branch : \",\n                      style: {\n                        fontSize: \"12px\",\n                        fontWeight: \"bold\",\n                        width: \"70px\",\n                      },\n                    }}\n                    input={{\n                      disabled: isDisableField,\n                      type: \"text\",\n                      style: { width: \"auto\", height: \"22px\" },\n                      onKeyDown: (e) => {\n                        if (e.code === \"NumpadEnter\" || e.code === 'Enter') {\n                          clientnameRef.current?.focus()\n                        }\n                      }\n                    }}\n                    inputRef={branchRef}\n                  />\n\n                </div>\n\n                <div\n                  style={{ width: \"100%\", display: \"flex\", columnGap: \"10px\" }}\n                >\n                  <TextAreaInput\n                    label={{\n                      title: \"Clients Name : \",\n                      style: {\n                        fontSize: \"12px\",\n                        fontWeight: \"bold\",\n                        width: \"100px\",\n                      },\n                    }}\n                    textarea={{\n                      rows: 2,\n                      disabled: isDisableField,\n                      style: { width: \"325px\" },\n                      onKeyDown: (e) => {\n                        e.stopPropagation()\n                        if ((e.code === \"NumpadEnter\" && !e.shiftKey) || (e.code === 'Enter' && !e.shiftKey)) {\n                          savePDCButtonRef.current?.click();\n                        }\n                      },\n\n                    }}\n                    _inputRef={clientnameRef}\n                  />\n                  <Button\n                    sx={{\n                      height: \"27px\",\n                      fontSize: \"11px\",\n                    }}\n                    disabled={pdcMode === \"\"}\n                    variant=\"contained\"\n                    startIcon={<DownloadIcon sx={{ width: 15, height: 15 }} />}\n                    onClick={() => {\n                      setShowModal(true);\n                    }}\n                  >\n                    Upload Check\n                  </Button>\n                </div>\n              </fieldset>\n            </Box>\n          </Box>\n        </form>\n        <DataGridViewReact\n          disbaleTable={isDisableField}\n          ref={tableRef}\n          rows={[]}\n          columns={pdcColumn}\n          getSelectedItem={(rowSelected: any, _: any, RowIndex: any) => {\n            if (rowSelected) {\n              if (\n                (rowSelected[6] && rowSelected[6] !== \"\") ||\n                (rowSelected[7] && rowSelected[7] !== \"\") ||\n                (rowSelected[8] && rowSelected[8] !== \"\")\n              ) {\n                setHasSelectedRow(null)\n                tableRef.current.setSelectedRow(null)\n                return Swal.fire({\n                  position: \"center\",\n                  icon: \"warning\",\n                  title: `Unable to delete. Check No ${rowSelected[0]} is already ${rowSelected[8]} issued of OR!`,\n                  showConfirmButton: false,\n                  timer: 1500,\n                });\n              }\n              flushSync(() => {\n                setOpenPdcInputModal(true);\n              })\n              wait(100).then(() => {\n                if (\n                  _checknoRef.current &&\n                  _bankRef.current &&\n                  _branchRef.current &&\n                  _remarksRef.current &&\n                  _chekdateRef.current &&\n                  _amountRef.current\n                ) {\n                  _checknoRef.current.value = rowSelected[0]\n                  _chekdateRef.current.value = rowSelected[1]\n                  _amountRef.current.value = formatNumber(parseFloat(rowSelected[2].replace(/,/g, '')))\n                  _bankRef.current.value = rowSelected[3]\n                  _branchRef.current.value = rowSelected[4]\n                  _remarksRef.current.value = rowSelected[5]\n                  _slipCodeRef.current = rowSelected[6] || \"\"\n                  _slipDateRef.current = rowSelected[7] || \"\"\n                  _checkOR.current = rowSelected[8] || \"\"\n                  _bankCode.current = rowSelected[9]\n\n                  console.log(rowSelected[0])\n                  _bankRef.current.focus()\n                }\n              })\n\n              setHasSelectedRow(RowIndex)\n            } else {\n              setHasSelectedRow(null)\n            }\n          }}\n          onKeyDown={(rowSelected: any, RowIndex: any, e: any) => {\n            if (e.code === \"Delete\" || e.code === \"Backspace\") {\n\n              if (\n                (rowSelected[6] && rowSelected[6] !== \"\") ||\n                (rowSelected[7] && rowSelected[7] !== \"\") ||\n                (rowSelected[8] && rowSelected[8] !== \"\")\n              ) {\n                setHasSelectedRow(null)\n                tableRef.current.setSelectedRow(null)\n\n                return Swal.fire({\n                  position: \"center\",\n                  icon: \"warning\",\n                  title: `Unable to delete. Check No ${rowSelected[0]} is already ${rowSelected[8]} issued of OR!`,\n                  showConfirmButton: false,\n                  timer: 1500,\n                });\n              }\n\n\n              Swal.fire({\n                title: \"Are you sure?\",\n                text: `You won't to delete this Check No. ${rowSelected[0]}`,\n                icon: \"warning\",\n                showCancelButton: true,\n                confirmButtonColor: \"#3085d6\",\n                cancelButtonColor: \"#d33\",\n                confirmButtonText: \"Yes, delete it!\",\n              }).then((result) => {\n                if (result.isConfirmed) {\n                  setTimeout(() => {\n                    const newData = tableRef.current.getData()\n                    newData.splice(RowIndex, 1);\n                    tableRef.current.setData(newData)\n\n                    setHasSelectedRow(null)\n                    tableRef.current.setSelectedRow(null)\n                  }, 100)\n                }\n              });\n            }\n          }}\n        />\n\n        <Modal\n          open={openPdcInputModal}\n          onClose={() => {\n            setOpenPdcInputModal(false);\n            tableRef.current.setSelectedRow(null)\n            setHasSelectedRow(null)\n\n          }}\n          aria-labelledby=\"modal-modal-title\"\n          aria-describedby=\"modal-modal-description\"\n        >\n          <Box\n            sx={{\n              position: \"absolute\" as \"absolute\",\n              top: \"50%\",\n              left: \"50%\",\n              transform: \"translate(-50%, -50%)\",\n              width: \"auto\",\n              bgcolor: \"background.paper\",\n              p: 4,\n            }}\n          >\n            <Typography id=\"modal-modal-title\" variant=\"h6\" component=\"h2\">\n              Check Detail\n            </Typography>\n            <br />\n            <div\n              style={{\n                display: \"flex\",\n                columnGap: \"10px\",\n              }}\n            >\n              <div\n                style={{\n                  display: \"flex\",\n                  flexDirection: \"column\",\n                  gap: \"10px\",\n                }}\n              >\n                <TextInput\n                  label={{\n                    title: \"Check No : \",\n                    style: {\n                      fontSize: \"12px\",\n                      fontWeight: \"bold\",\n                      width: \"70px\",\n                    },\n                  }}\n                  input={{\n                    disabled: hasSelectedRow !== null,\n                    type: \"text\",\n                    style: { width: \"190px\" },\n                    onKeyDown: (e) => {\n                      if (e.code === \"NumpadEnter\" || e.code === 'Enter') {\n                        _bankRef.current?.focus()\n                      }\n                    },\n                  }}\n                  inputRef={_checknoRef}\n                />\n                {isLoadingModalSearchbanks ? (\n                  <LoadingButton loading={isLoadingModalSearchbanks} />\n                ) : (\n                  <TextInput\n                    label={{\n                      title: \"Bank : \",\n                      style: {\n                        fontSize: \"12px\",\n                        fontWeight: \"bold\",\n                        width: \"70px\",\n                      },\n                    }}\n                    input={{\n                      type: \"text\",\n                      style: { width: \"190px\" },\n                      onKeyDown: (e) => {\n                        if (e.code === \"NumpadEnter\" || e.code === 'Enter') {\n                          return openModalSearchBanks(\n                            e.currentTarget.value\n                          );\n                        }\n                      }\n                    }}\n                    icon={<AccountBalanceIcon sx={{ fontSize: \"18px\" }} />}\n                    onIconClick={(e) => {\n                      e.preventDefault()\n                      if (_bankRef.current) {\n                        openModalSearchBanks(\n                          _bankRef.current?.value\n                        );\n                      }\n                    }}\n                    inputRef={_bankRef}\n                  />\n                )}\n\n                <TextInput\n                  label={{\n                    title: \"Branch : \",\n                    style: {\n                      fontSize: \"12px\",\n                      fontWeight: \"bold\",\n                      width: \"70px\",\n                    },\n                  }}\n                  input={{\n                    type: \"text\",\n                    style: { width: \"190px\" },\n                    onKeyDown: (e) => {\n                      if (e.code === \"NumpadEnter\" || e.code === 'Enter') {\n                        _remarksRef.current?.focus()\n                      }\n                    },\n                  }}\n                  inputRef={_branchRef}\n                />\n                <TextAreaInput\n                  label={{\n                    title: \"Remarks : \",\n                    style: {\n                      fontSize: \"12px\",\n                      fontWeight: \"bold\",\n                      width: \"70px\",\n                    },\n                  }}\n                  textarea={{\n                    rows: 4,\n                    disabled: isDisableField,\n                    style: { flex: 1 },\n                    onKeyDown: (e) => {\n                      if (e.key === \"Enter\" && e.shiftKey) {\n                        return\n                      }\n                      if (e.code === \"NumpadEnter\" || e.code === 'Enter') {\n                        _chekdateRef.current?.focus()\n                      }\n                    },\n                  }}\n                  _inputRef={_remarksRef}\n                />\n              </div>\n              <div\n                style={{\n                  display: \"flex\",\n                  gap: \"10px\",\n                  flexDirection: \"column\",\n                }}\n              >\n\n                <TextInput\n                  label={{\n                    title: \"Check Dated : \",\n                    style: {\n                      fontSize: \"12px\",\n                      fontWeight: \"bold\",\n                      width: \"90px\",\n                    },\n                  }}\n                  input={{\n                    disabled: isDisableField,\n                    type: \"date\",\n                    style: { width: \"190px\" },\n                    defaultValue: new Date().toISOString().split(\"T\")[0],\n                    onKeyDown: (e) => {\n                      if (e.code === \"NumpadEnter\" || e.code === 'Enter') {\n                        _amountRef.current?.focus()\n                      }\n                    },\n                  }}\n                  inputRef={_chekdateRef}\n                />\n\n                <div style={{\n                  display: \"flex\"\n                }}>\n                  <label style={{\n                    fontSize: \"12px\",\n                    fontWeight: \"bold\",\n                    width: \"90px\",\n                  }}>Amount :</label>\n                  <NumericFormat\n                    style={{\n                      flex: 1\n                    }}\n                    value={_amountRef.current?.value ?? \"\"}\n                    getInputRef={_amountRef}\n                    allowNegative={false}\n                    thousandSeparator\n                    valueIsNumericString\n                    onKeyDown={(e) => {\n                      if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n                        let currentValue = _amountRef.current?.value as string;\n                        let numericValue = parseFloat(currentValue.replace(/,/g, ''));\n                        if (_amountRef.current) {\n                          if (isNaN(numericValue)) {\n                            _amountRef.current.value = \"0.00\";\n                          } else {\n                            if (!currentValue.includes(\".\")) {\n                              _amountRef.current.value = `${formatNumber(numericValue)}`;\n                            } else {\n                              _amountRef.current.value = formatNumber(numericValue);\n                            }\n                          }\n                        }\n                        _checkcountRef.current?.focus()\n                      }\n                    }}\n                  />\n                </div>\n                {hasSelectedRow === null && (\n                  <TextInput\n                    label={{\n                      title: \"Check Count : \",\n                      style: {\n                        fontSize: \"12px\",\n                        fontWeight: \"bold\",\n                        width: \"90px\",\n                      },\n                    }}\n                    input={{\n                      disabled: isDisableField,\n                      type: \"number\",\n                      style: { width: \"190px\" },\n                      onKeyDown: (e) => {\n                        if (e.code === \"NumpadEnter\" || e.code === 'Enter') {\n                          const timeout = setTimeout(() => {\n                            checkModalSaveButton.current?.click();\n                            clearTimeout(timeout);\n                          }, 100);\n                        }\n                      },\n                    }}\n                    inputRef={_checkcountRef}\n                  />\n                )}\n              </div>\n            </div>\n            <div\n              style={{\n                display: \"flex\",\n                justifyContent: \"flex-end\",\n                width: \"100%\",\n                marginTop: \"10px\",\n              }}\n            >\n              <div style={{ display: \"flex\", gap: \"10px\" }}>\n                <Button\n                  ref={checkModalSaveButton}\n                  action={checkModalSaveButtonActionRef}\n                  color=\"primary\"\n                  variant=\"contained\"\n                  autoFocus={hasSelectedRow !== null}\n                  onClick={() => {\n                    handleCheckDetailsSave()\n                  }}\n                  sx={{\n                    height: \"30px\",\n                    fontSize: \"11px\",\n                  }}\n                >\n                  {hasSelectedRow !== null ? \"Update\" : \"Save\"}\n                </Button>\n                <Button\n                  color=\"success\"\n                  variant=\"contained\"\n                  sx={{\n                    height: \"30px\",\n                    fontSize: \"11px\",\n                  }}\n                  onClick={() => {\n                    setOpenPdcInputModal(false);\n                    tableRef.current.setSelectedRow(null)\n                    setHasSelectedRow(null)\n                  }}\n                >\n                  Cancel\n                </Button>\n                <IconButton\n                  style={{\n                    position: \"absolute\",\n                    top: \"10px\",\n                    right: \"10px\",\n                  }}\n                  aria-label=\"search-client\"\n                  onClick={() => {\n                    tableRef.current.setSelectedRow(null)\n                    setHasSelectedRow(null)\n                    setOpenPdcInputModal(false);\n                  }}\n                >\n                  <CloseIcon />\n                </IconButton>\n              </div>\n            </div>\n          </Box>\n        </Modal>\n        <div\n          style={{\n            display: showModal ? \"flex\" : \"none\",\n            position: \"absolute\",\n            top: 0,\n            bottom: 0,\n            left: 0,\n            right: 0,\n            background: \"rgba(158, 155, 157, 0.31)\",\n            zIndex: \"999\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n          }}\n        >\n          <div\n            style={{\n              width: \"90%\",\n              height: \"90%\",\n            }}\n          >\n            <div\n              style={{\n                width: \"90%\",\n                height: \"90%\",\n                overflow: \"auto\",\n                background: \"white\",\n                padding: \"20px\",\n                margin: \"auto\",\n                zIndex: \"9929\",\n                boxShadow: \" -1px 1px 13px 6px rgba(0,0,0,0.54)\",\n                position: \"relative\",\n              }}\n            >\n              <div\n                style={{\n                  height: \"100%\",\n                  width: \"100%\",\n                  position: \"relative\",\n                  display: \"flex\",\n                  justifyContent: \"center\",\n                  alignItems: \"center\",\n                  flexDirection: \"column\",\n                }}\n              >\n                <IconButton\n                  sx={{\n                    position: \"absolute\",\n                    right: \"5px\",\n                    top: \"5px\",\n                  }}\n                  onClick={() => {\n                    setShowModal(false);\n                  }}\n                >\n                  <CloseIcon />\n                </IconButton>\n                <div\n                  style={{\n                    width: \"100%\",\n                    height: \"500px\",\n                    border: isDragging ? \"5px dashed green\" : \"5px dashed grey\",\n                    overflow: \"auto\",\n                    padding: \"10px\",\n                  }}\n                  onDragEnter={handleDragEnter}\n                  onDragOver={(e) => e.preventDefault()}\n                  onDragLeave={handleDragLeave}\n                  onDrop={handleDrop}\n                >\n                  <div\n                    id=\"upload-container\"\n                    style={{\n                      width: \"100%\",\n                      height: \"100%\",\n                      display: \"flex\",\n                      gap: \"10px\",\n                      flexWrap: \"wrap\",\n                    }}\n                    onDragEnter={handleDragEnter}\n                    onDragOver={(e) => e.preventDefault()}\n                    onDragLeave={handleDragLeave}\n                    onDrop={handleDrop}\n                  >\n                    {selectedFiles.map((itm, idx) => {\n                      return (\n                        <DisplayFile\n                          key={idx}\n                          itm={itm}\n                          selectedFiles={selectedFiles}\n                          setSelectedFiles={setSelectedFiles}\n                          fileInput={fileInputRef}\n                        />\n                      );\n                    })}\n                  </div>\n                  {selectedFiles.length <= 0 && (\n                    <div\n                      style={{\n                        position: \"absolute\",\n                        top: \"50%\",\n                        left: \"50%\",\n                        transform: \"translate(-50%,-50%)\",\n                        textAlign: \"center\",\n                      }}\n                    >\n                      <DriveFolderUploadIcon\n                        sx={{ fontSize: \"20em\", color: \"#64748b\" }}\n                      />\n                    </div>\n                  )}\n                  <input\n                    ref={fileInputRef}\n                    type=\"file\"\n                    multiple\n                    style={{ display: \"none\", background: \"white\" }}\n                    id=\"input-file\"\n                    onChange={(e) => {\n                      const fileList = e.target.files as FileList;\n                      const files = Array.from(fileList);\n                      const newFiles = [...selectedFiles, ...files];\n                      if (checkFile(newFiles)) {\n                        return alert(\"file is not valid Extention!\");\n                      }\n                      setSelectedFiles(newFiles);\n                    }}\n                  />\n                </div>\n                <div\n                  style={{\n                    width: \"100%\",\n                  }}\n                >\n                  <Button\n                    fullWidth\n                    onClick={() => {\n                      const inputFile = document.getElementById(\"input-file\");\n                      inputFile?.click();\n                    }}\n                  >\n                    CLick it to upload\n                  </Button>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        {(loadingAddNew ||\n          isLoadingSelectedSearch) && <div className=\"loading-component\"><div className=\"loader\"></div></div>}\n\n      </div>\n    </>\n  );\n}\n\nexport function setNewStateValue(dispatch: any, obj: any) {\n  Object.entries(obj).forEach(([field, value]) => {\n    dispatch({ type: \"UPDATE_FIELD\", field, value });\n  });\n}\nexport function incrementCheckNo(Check_No: string) {\n  if (Check_No) {\n    let incrementedNumber = (parseInt(Check_No) + 1).toString();\n    while (incrementedNumber.length < Check_No.length) {\n      incrementedNumber = \"0\" + incrementedNumber;\n    }\n    return incrementedNumber;\n  }\n\n  return \"001\";\n}\n"],"names":["DataGridViewReact","forwardRef","_ref","ref","columns","_ref$rows","rows","_ref$height","height","getSelectedItem","onKeyDown","_ref$disbaleTable","disbaleTable","_ref$isTableSelectabl","isTableSelectable","containerStyle","parentElementRef","useRef","_useState","useState","_useState2","_slicedToArray","data","setData","_useState3","_useState4","column","setColumn","_useState5","_useState6","selectedRow","setSelectedRow","_useState7","_useState8","selectedRowIndex","setSelectedRowIndex","totalRowWidth","reduce","a","b","width","useEffect","length","filter","itm","hide","map","col","key","useImperativeHandle","checkNoIsExist","checkNo","some","subArray","getData","_toConsumableArray","newData","getColumns","resetTable","getSelectedRow","value","_setSelectedRow","setDataFormated","getDataFormatted","Check_No","Check_Date","Check_Amnt","BankName","Branch","Check_Remarks","Deposit_Slip","DateDeposit","OR_No","BankCode","_jsx","style","_objectSpread","overflow","position","pointerEvents","border","boxShadow","background","children","_jsxs","concat","id","borderCollapse","top","zIndex","colItm","idx","borderRight","fontSize","textAlign","padding","label","rowItm","rowIdx","className","cursor","margin","display","alignItems","justifyContent","readOnly","checked","type","onClick","colIdx","tabIndex","onDoubleClick","e","prev","index","Math","max","td","document","querySelector","focus","min","code","preventDefault","userSelect","_ref$title","title","Helmet","rel","href","process","TextFormatedInput","input","inputRef","icon","_ref$iconPosition","iconPosition","_ref$disableIcon","disableIcon","_ref$onIconClick","onIconClick","_ref$onChange","onChange","useId","formatNumber","parts","split","replace","join","unformatNumber","htmlFor","left","target","test","handleChange","onBlur","includes","ensureTwoDecimals","handleBlur","right","transform","TextInput","_ref2","_ref2$iconPosition","_ref2$disableIcon","_ref2$onIconClick","TextAreaInput","_ref3","textarea","_inputRef","_ref3$iconPosition","_ref3$disableIcon","_ref3$onIconClick","SelectInput","_ref4","select","selectRef","_ref4$datasource","datasource","_ref4$values","values","_ref4$display","ButtonField","_ref5","buttonRetRef","button","_ref5$tooltipText","tooltipText","_ref5$disabled","disabled","UpwardTable","UpwardTableRef","_pages$pageNumber","dataReadOnly","_ref$onSelectionChang","onSelectionChange","_ref$isMultipleSelect","isMultipleSelect","_ref$freeze","freeze","_ref$inputsearchselec","inputsearchselector","_ref$isRowSelectable","isRowSelectable","_ref$unSelectable","unSelectable","isLoading","onRightClick","pages","setPages","pageNumber","setPageNumber","onSelectionChangeRef","onKeyDownRef","setColumns","hoveredColumn","setHoveredColumn","_useState9","_useState10","selectedRows","setSelectedRows","_useState11","_useState12","lastSelectedRowIndex","setLastSelectedRowIndex","_useState13","_useState14","selectedItems","setSelectedItems","divRef","_useState15","_useState16","_clickTimeout","_setClickTimeout","_pages","arr","chunkSize","arguments","undefined","result","i","push","slice","formatArrayIntoChunks","startResize","stopPropagation","startX","clientX","startWidth","doDrag","moveEvent","newWidth","updatedColumns","addEventListener","stopDrag","removeEventListener","handleMouseEnter","handleMouseLeave","resetTableSelected","row","scrollIntoView","block","behavior","getSelectedIndex","getSelectedRows","d","getFirstColumn","getParentElement","current","getSelectedRowsOnClick","setSelectRows","indx","prevIndex","_row$querySelector","newPrevIndex","tagName","divInput","_row$querySelector2","flexDirection","minHeight","fontWeight","defaultValue","headerName","onMouseDown","onMouseEnter","onMouseLeave","rowIndex","event","shiftKey","rangeStart","rangeEnd","newSelectedRows","selectedItemsParams","newSelectedRowsFiltered","selectedRowData","removeNullValue","getIndexAndData","ctrlKey","metaKey","handleRowClick","clearTimeout","timeoutId","setTimeout","handleRowDoubleClick","handleRowKeyDown","onContextMenu","rowSelected","handleRightClick","colIndex","field","Pagination","count","useUpwardTableModal","_mutationFn","myAxios","user","link","responseDataKey","_ref$onModalClose","onModalClose","inputSearchRef","tableRef","parentRef","show","setShowModal","setRows","_useMutation","useMutation","mutationKey","mutationFn","_x","_asyncToGenerator","_regeneratorRuntime","mark","_callee","variable","wrap","_context","next","get","url","queryUrlName","search","headers","Authorization","accessToken","abrupt","sent","stop","apply","onSuccess","res","mutate","throttledSearch","throttle","query","performSearch","closeModal","wait","then","_parentRef$current","Modal","open","onClose","paddingTop","paddingBottom","paddingLeft","paddingRight","marginBottom","currentTarget","datagridview","IconButton","CloseIcon","openModal","_inputSearchRef$curre","reducer","state","action","_defineProperty","pdcColumn","pdcSearchColumn","flex","pdcBanksColumn","queryKey","PostDateChecks","_queryFn","_mutationFn2","_onSuccess","_amountRef$current$va","_amountRef$current2","_React$useState","React","_React$useState2","anchorEl","setAnchorEl","Boolean","isDragging","setIsDragging","selectedFiles","setSelectedFiles","openPdcInputModal","setOpenPdcInputModal","showModal","searchInputRef","hasSelectedRow","setHasSelectedRow","pdcMode","setPdcMode","_useContext","useContext","AuthContext","searchRef","fileInputRef","savePDCButtonRef","checkModalSaveButton","checkModalSaveButtonActionRef","_checknoRef","_bankRef","_branchRef","_remarksRef","_chekdateRef","_amountRef","_checkcountRef","_bankCode","_slipCodeRef","_slipDateRef","_checkOR","addRefButton","subRefNoRef","PNoRef","subAccountRef","refNoRef","dateRef","remakrsRef","pnRef","branchRef","clientnameRef","_useQuery","useQuery","queryFn","refetchOnWindowFocus","response","RefNo","pdcID","newRefNumberLoading","refetchNewRefNumber","refetch","_callee2","variables","_context2","mode","post","success","resetPDC","Swal","message","showConfirmButton","timer","loadingAddNew","_useMutation2","_x2","_callee3","_context3","_x3","_callee5","_formatDataToDocument","Ref_No","_response$data$upload","uploadFiles","newObjContainerBasic","fileSelected","formatDataToDocument","_context6","_x4","_x5","_callee4","dataDocument","newObjContainer","_loop","_context5","basicItem","mainURL","blob","file","reader","_context4","uniqueFilename","fetch","File","fileName","fileType","FileReader","Promise","resolve","reject","onload","onerror","Error","name","readAsDataURL","delegateYield","alert","getSearchPDCCheck","upload","JSON","parse","all","Name","Date","PNo","Acronym","Remarks","IDNo","sub_account","mutateSelectedSearch","isLoadingSelectedSearch","_useUpwardTableModal","client_id","closeModalSearchPdcIDs","ModalSearchPdcIDs","openModalSearchPdcIDs","isLoadingModalSearchPdcIDs","_useUpwardTableModal2","Bank_Code","Bank","closeModalSearchBanks","_branchRef$current","ModalSearchBanks","openModalSearchBanks","isLoadingModalSearchbanks","_useUpwardTableModal3","_searchRef$current","ref_no","closeUpwardPDCModal","UpwardPDCModal","openUpwardPDCModal","isLoadingModalSearchPDC","handleOnSave","useCallback","_x6","_callee6","_refNoRef$current","_pnRef$current2","_dateRef$current","_clientnameRef$curren","_remakrsRef$current","_branchRef$current2","pdcTableData","filePromises","fileTransfer","fileToSave","stateSubmited","_context7","files","_loop2","_event$target","datakey","fileContent","_pnRef$current","click","checks","stringify","codeCondfirmationAlert","isUpdate","cb","userCodeConfirmation","saveCondfirmationAlert","isConfirm","handleDragLeave","handleDragEnter","handleDrop","_fileInputRef$current","fileList","dataTransfer","Array","from","newFiles","checkFile","format","num","toLocaleString","minimumFractionDigits","maximumFractionDigits","handleKeyDown","window","isDisableField","_Fragment","PageHelmet","backgroundColor","Box","sx","theme","columnGap","breakpoints","down","LoadingButton","loading","SearchIcon","Button","variant","startIcon","AddIcon","color","SaveIcon","text","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","isConfirmed","flushSync","_checknoRef$current","tableRows","getLastCheck_No","incrementCheckNo","grey","Menu","MenuListProps","MenuItem","_refNoRef$current2","_pnRef$current3","_dateRef$current2","_clientnameRef$curren2","_remakrsRef$current2","_branchRef$current3","localStorage","removeItem","setItem","header","department","elementString","ReactDOMServer","_clientnameRef$curren3","_refNoRef$current3","marginTop","printString","rowGap","gap","borderRadius","_dateRef$current3","RestartAltIcon","_remakrsRef$current3","_pnRef$current4","PersonSearchIcon","_clientnameRef$curren4","_savePDCButtonRef$cur","DownloadIcon","_","RowIndex","parseFloat","console","log","splice","bgcolor","p","Typography","component","_bankRef$current","AccountBalanceIcon","_bankRef$current2","_remarksRef$current","_chekdateRef$current","toISOString","_amountRef$current","NumericFormat","getInputRef","allowNegative","thousandSeparator","valueIsNumericString","_amountRef$current3","_checkcountRef$curren","currentValue","numericValue","isNaN","timeout","_checkModalSaveButton","autoFocus","incrementStringNumbers","str","increment","parseInt","toString","padStart","incrementDate","dateString","currentDate","setMonth","getMonth","selectedIndex","date","getTime","isValidDate","handleCheckDetailsSave","bottom","onDragEnter","onDragOver","onDragLeave","onDrop","flexWrap","DisplayFile","fileInput","DriveFolderUploadIcon","multiple","fullWidth","inputFile","getElementById","setNewStateValue","dispatch","obj","Object","entries","forEach","incrementedNumber"],"sourceRoot":""}