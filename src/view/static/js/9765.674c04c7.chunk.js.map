{"version":3,"file":"static/js/9765.674c04c7.chunk.js","mappings":"4TAGe,SAASA,EAAgBC,GAY/B,IAXPC,EAAKD,EAALC,MACAC,EAAIF,EAAJE,KACAC,EAAQH,EAARG,SACAC,EAAKJ,EAALI,MACAC,EAASL,EAATK,UACAC,EAAQN,EAARM,SACAC,EAAaP,EAAbO,cACAC,EAASR,EAATQ,UACAC,EAAST,EAATS,UAASC,EAAAV,EACTW,SAAAA,OAAQ,IAAAD,EAAG,QAAOA,EACfE,GAAIC,EAAAA,EAAAA,GAAAb,EAAAc,GAEP,OACEC,EAAAA,EAAAA,KAACC,EAAAA,EAAoB,CAACC,YAAaC,EAAAA,EAAeC,UAChDJ,EAAAA,EAAAA,KAACK,EAAAA,GAAUC,EAAAA,EAAAA,GAAA,CACXC,mBAAoB,CAACC,MAAO,SAC1BnB,MAAOA,EACPD,SAAUA,EACVqB,IAAKjB,EACLkB,UAAW,CACThB,WAASY,EAAAA,EAAAA,GAAA,CACPK,KAAM,QACNzB,MAAAA,EACAC,KAAAA,EACAG,UAAAA,EACAC,SAAUA,EACVE,UAAAA,GAEGC,IAGPkB,gBAAiB,CACfC,GAAI,CACFL,MAAO,UAGXK,GAAI,CACFjB,SAAAA,EACAkB,SAAU,CAAEC,YAAa,SACzB,qBAAsB,CAAEC,SAAU,QAClC,wCAAyC,CACvCC,IAAK,UAGLpB,KAIZ,C,mOCfMqB,EAAQ,CACZC,SAAU,WACVF,IAAK,MACLG,KAAM,MACNC,UAAW,wBACXC,MAAO,MACPC,QAAS,mBACTC,UAAW,GACXC,EAAG,EACHC,OAAQ,QAGK,SAASC,EAAc1C,GAmBZ,IAlBxB2C,EAAM3C,EAAN2C,OACAC,EAAS5C,EAAT4C,UAEAC,GADQ7C,EAAR8C,SACO9C,EAAP6C,SACAE,EAAiB/C,EAAjB+C,kBAEAC,GADOhD,EAAPiD,QACIjD,EAAJgD,MACAE,EAAElD,EAAFkD,GACAC,EAAYnD,EAAZmD,aACAC,EAASpD,EAAToD,UACAC,EAAgBrD,EAAhBqD,iBACAC,EAActD,EAAdsD,eAAcC,EAAAvD,EACdwD,MAAAA,OAAK,IAAAD,EAAG,GAAEA,EACVE,EAASzD,EAATyD,UACaC,GAAA1D,EAAb2D,cAAa3D,EACb4D,kBAAAA,OAAgB,IAAAF,EAAG,WAAO,EAACA,EAC3BG,EAAe7D,EAAf6D,gBACAC,EAAgB9D,EAAhB8D,iBAEMC,EAASC,IAEf,OACEjD,EAAAA,EAAAA,KAACkD,EAAAA,EAAK,CACJC,KAAMd,EACNe,QAAShB,EACT,kBAAgB,oBAChB,mBAAiB,0BAAyBhC,UAE1CiD,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CAACzC,GAAIK,EAAMd,SAAA,EACbJ,EAAAA,EAAAA,KAACuD,EAAAA,EAAU,CAACpB,GAAG,oBAAoBqB,QAAQ,KAAKC,UAAU,KAAKC,GAAI,EAAEtD,SAClEqC,KAEHzC,EAAAA,EAAAA,KAAC2D,EAAAA,EAAS,CACRhD,KAAK,QACLzB,MAAM,SACNO,WAAS,EACTL,SAAUmD,EACVqB,WAAY,CACVrE,SAAUmD,EACVxB,MAAO,CAAEU,OAAQ,OAAQZ,SAAU,QACnC6C,cACE7D,EAAAA,EAAAA,KAAC8D,EAAAA,EAAc,CAAC3C,SAAS,MAAKf,UAC5BJ,EAAAA,EAAAA,KAAC+D,EAAAA,EAAU,CACTC,QAAS,WAAO,IAADC,EACbpB,EAA0B,OAATH,QAAS,IAATA,GAAkB,QAATuB,EAATvB,EAAWwB,eAAO,IAAAD,OAAT,EAATA,EAAoB5E,MACvC,EACA8E,KAAK,MAAK/D,UAEVJ,EAAAA,EAAAA,KAACoE,EAAAA,EAAU,SAKnBC,KAAK,SACL/E,UAAW,SAACgF,GAC2C,IAADC,EAArC,UAAXD,EAAEE,MAA+B,gBAAXF,EAAEE,OAC1BF,EAAEG,iBACF5B,EAA0B,OAATH,QAAS,IAATA,GAAkB,QAAT6B,EAAT7B,EAAWwB,eAAO,IAAAK,OAAT,EAATA,EAAoBlF,QAEvCqF,EACEJ,EACAtB,EACS,OAATN,QAAS,IAATA,OAAS,EAATA,EAAWwB,QAEf,EACArD,GAAI,CACF8D,aAAc,OACd,qBAAsB,CAAE3D,SAAU,QAClC,wCAAyC,CAAEC,IAAK,YAGpDjB,EAAAA,EAAAA,KAAA,OACE4E,UAAS,GAAAC,OAAK7B,EAAM,mCACpB9B,MAAO,CAAEC,SAAU,WAAYS,OAAO,GAADiD,OAAKjD,EAAS,GAAE,OAAOxB,UAE5DJ,EAAAA,EAAAA,KAAC8E,EAAAA,EAAK,CACJC,mBAAmB,EACnBC,aAAa,EACblD,QAASA,EACTD,UAAWA,EACXoD,cAAe,SAACC,EAAWC,EAAMX,GAC/BxC,EAAkBkD,EAAWC,EAC/B,EACAC,SAAUjD,EACVF,KAAMA,EACNa,gBAAiBA,EACjBC,iBAAkBA,OAItB/C,EAAAA,EAAAA,KAAA,OAAKkB,MAAO,CAAEC,SAAU,WAAYF,IAAK,OAAQoE,MAAO,QAASjF,UAC/DJ,EAAAA,EAAAA,KAAC+D,EAAAA,EAAU,CACT,aAAW,gBACXvD,MAAM,YACNwD,QAAS1B,EAAiBlC,UAE1BJ,EAAAA,EAAAA,KAACsF,EAAAA,EAAS,YAMtB,CAEO,SAASrC,IAGd,MADoB,QADCsC,KAAKC,MAAsB,IAAhBD,KAAKE,SAGvC,CAyBO,SAASf,EACdJ,EACAM,EACAc,GAEA,IAAM1C,EAAS4B,EACf,GAAe,cAAXN,EAAEE,KAAsB,CAAC,IAADmB,EACpB1D,EAAO2D,SAASC,iBAAiB,IAADhB,OAAK7B,EAAM,sBACjDsB,EAAEG,iBACK,QAAPkB,EAAA1D,EAAK,UAAE,IAAA0D,GAAPA,EAASG,UAAUC,IAAI,kBAhC3B,SAAwBnB,EAAmBc,GACzC,IAAMM,EAAiBJ,SAASK,cAAc,IAADpB,OACvCD,EAAS,sBAETsB,EAA2B,OAAdF,QAAc,IAAdA,OAAc,EAAdA,EAAgBC,cAAc,SACvC,OAAVC,QAAU,IAAVA,GAAAA,EAAYC,QACZ,IAAMC,EAAQ,IAAIC,WAAW,aAAc,CACzCC,SAAS,EACTC,YAAY,EACZC,KAAMC,SAEM,OAAdT,QAAc,IAAdA,GAAAA,EAAgBU,cAAcN,GACpB,OAAVF,QAAU,IAAVA,GAAAA,EAAYS,iBAAiB,WAAW,SAACC,GACxB,YAAXA,EAAGC,MACLD,EAAGnC,iBACHiB,EAAGS,SAEU,YAAXS,EAAGC,MACS,OAAdb,QAAc,IAAdA,GAAAA,EAAgBF,UAAUgB,OAAO,kBAErC,GACF,CAYIC,CAAenC,EAAWc,GAC1BzD,EAAK+E,SAAQ,SAACtB,EAAIuB,GAChBvB,EAAGiB,iBAAiB,WAAW,SAACC,GAC9B,GAAe,YAAXA,EAAGC,IAAmB,CAAC,IAADK,EAAAC,EACxB,GAAIF,GAAO,EACT,OAMF,OAHAL,EAAGnC,iBACM,QAATyC,EAAAjF,EAAKgF,UAAI,IAAAC,GAATA,EAAWpB,UAAUgB,OAAO,uBACf,QAAbK,EAAAlF,EAAKgF,EAAM,UAAE,IAAAE,GAAbA,EAAerB,UAAUC,IAAI,kBAE/B,CACA,GAAe,cAAXa,EAAGC,IAAqB,CAAC,IAADO,EAAAC,EAE1B,GADAT,EAAGnC,iBACCwC,GAAOhF,EAAKqF,OAAS,EACvB,OAEO,QAATF,EAAAnF,EAAKgF,UAAI,IAAAG,GAATA,EAAWtB,UAAUgB,OAAO,kBACf,QAAbO,EAAApF,EAAKgF,EAAM,UAAE,IAAAI,GAAbA,EAAevB,UAAUC,IAAI,iBAC/B,CACF,GACF,GACF,CACF,C,qFC7MO,SAASwB,EAAsBtI,GAclC,IAbFkG,EAAIlG,EAAJkG,KACAqC,EAAMvI,EAANuI,OACAC,EAAiBxI,EAAjBwI,kBACAC,EAAezI,EAAfyI,gBAAeC,EAAA1I,EACf+B,SAAAA,OAAQ,IAAA2G,EAAG,OAAMA,EAAAC,EAAA3I,EACjB4I,cAAAA,OAAa,IAAAD,EAAG,EAACA,EASXE,EAAsB,GACxBC,EAAW,EACXC,EAAmB,GAEjBC,EADgBrC,SAASK,cAAc,YAE7BiC,wBAAwBtG,OAAS8F,EAwCjD,OAtCAvC,EAAK6B,SAAQ,SAACmB,EAAUlB,GACtBkB,EAAMV,EAAkBU,GACxB,IAAMC,EAAgBxC,SAASK,cAAc,YACvCoC,EAAYzC,SAAS0C,cAAc,SACnCC,EAAUF,EAAUG,YAEtBL,EAAIM,eACFR,EAAYF,GAAYF,EAAgB,KAC1CE,GAAYE,EAAYF,GAG5BP,EAAOR,SAAQ,SAAC0B,GACd,IAAMC,EAAWJ,EAAQK,aACzBP,EAAUnH,MAAM2H,WAAa,SAC7BR,EAAUnH,MAAMI,MAAK,OACrB+G,EAAUnH,MAAMF,SAAWA,EAjD1B,SACL2H,EACAG,EACAC,EACAX,EACAC,GAEAM,EAASzH,MAAMI,MAAQyH,EACvBJ,EAASK,YAAcF,EACvBV,EAAca,YAAYZ,EAC5B,CAyCMa,CACEP,EACAR,EAAIO,EAAIS,SACRT,EAAIpH,MACJ8G,EACAC,EAEJ,IACAN,GAAYQ,EAAQL,wBAAwBtG,OAC5CwG,EAAcgB,YAAYf,GAC1BL,EAAKqB,KAAKlB,IAERJ,GAAYE,GACXhB,IAAQ9B,EAAKmC,OAAS,GAAKS,EAAWE,KAEvCH,EAAQuB,KAAKrB,GACbD,EAAW,EACXC,EAAO,GAEX,IAEOF,CACT,CACO,IAAMwB,EAAW,SAAAC,GAAA,OAAAC,EAAAA,IAAAC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,EAAAC,GAAA,IAAA1E,EAAAqC,EAAAC,EAAAC,EAAAoC,EAAAC,EAAA/I,EAAA6G,EAAA,OAAA6B,EAAAA,EAAAA,KAAAM,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAOZ,GANbhF,EAAI0E,EAAJ1E,KACAqC,EAAMqC,EAANrC,OACAC,EAAiBoC,EAAjBpC,kBACAC,EAAemC,EAAfnC,gBACAoC,EAAED,EAAFC,GAAEC,EAAAF,EACF7I,SAAAA,OAAQ,IAAA+I,EAAG,OAAMA,EACjBlC,EAAagC,EAAbhC,mBAoBauC,IAATjF,EAAkB,CAAA8E,EAAAE,KAAA,eAAAF,EAAAI,OAAA,SAAS,IAAE,WAC7BP,EAAG,CAADG,EAAAE,KAAA,eAAAF,EAAAI,OAAA,SACGP,EAAG,CACR3E,KAAAA,EACAqC,OAAAA,EACAC,kBAAAA,EACAC,gBAAAA,KACA,cAAAuC,EAAAI,OAAA,SAGG9C,EAAuB,CAC5BpC,KAAAA,EACAqC,OAAAA,EACAC,kBAAAA,EACAC,gBAAAA,EACA1G,SAAAA,EACA6G,cAAAA,KACA,wBAAAoC,EAAAK,OAAA,GAAAV,EAAA,MACHW,MAAA,KAAAC,UAAA,C,yKCxEKC,GAAeC,EAAAA,EAAAA,eASlB,CACDzI,KAAM,GACN0I,kBAAmB,GACnBC,eAAgB,kBAAM5K,EAAAA,EAAAA,KAAA,SAAW,EACjC6K,yBAA0B,aAC1BC,yBAAyB,IAErBhG,GAAQiG,EAAAA,EAAAA,aACZ,SAAA9L,EAoBEwB,GACI,IAnBFoB,EAAS5C,EAAT4C,UACAC,EAAO7C,EAAP6C,QACAG,EAAIhD,EAAJgD,KACAmD,EAAQnG,EAARmG,SACAL,EAAiB9F,EAAjB8F,kBACAC,EAAW/F,EAAX+F,YACAC,EAAahG,EAAbgG,cAAa+F,EAAA/L,EACbgM,sBAAAA,OAAqB,IAAAD,EAAGE,EAAqBF,EAC7ClI,EAAe7D,EAAf6D,gBACAC,EAAgB9D,EAAhB8D,iBAAgBoI,EAAAlM,EAChBmM,kBAAAA,OAAiB,IAAAD,GAAOA,EAAAE,EAAApM,EACxB2L,eAAAA,OAAc,IAAAS,EAAG,SACfV,EACA1I,GAAgB,OACbjC,EAAAA,EAAAA,KAAA,SAAW,EAAAqL,EAAAC,EAAArM,EAChB4L,yBAAAA,OAAwB,IAAAS,EAAG,aAAYA,EAAAC,EAAAtM,EACvC6L,wBAAAA,OAAuB,IAAAS,GAAOA,EAIhCC,GAAwCC,EAAAA,EAAAA,UAAc,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAlDI,EAAYF,EAAA,GAAEG,EAAeH,EAAA,GAgBpC,SAAS1J,EAAkBkD,EAAgBC,EAAWX,GAChDS,GACFA,EAAcC,EAAWC,EAAMX,EAEnC,EAlBAsH,EAAAA,EAAAA,qBAAoBrL,GAAK,iBAAO,CAC9BsL,gBAAiB,WACfF,EAAgB,GAClB,EACAG,gBAAiB,WACf,OAAO/J,EAAKgK,QAAO,SAACC,GAAS,OACf,OAAZN,QAAY,IAAZA,OAAY,EAAZA,EAAcO,SAASD,EAAK9G,GAAU,GAE1C,EACAyG,gBAAiB,SAAC1G,GAChB0G,EAAgB1G,EAClB,EACD,IAOD,IAAIiH,EAA0B,GAE9B,OACEpM,EAAAA,EAAAA,KAACyK,EAAa4B,SAAQ,CACpBhN,MAAO,CACLyL,wBAAAA,EACAD,yBAAAA,EACAF,kBAAmBiB,EACnB3J,KAAAA,EACA2I,eAAAA,GACAxK,UAEFJ,EAAAA,EAAAA,KAACsM,EAAAA,GAAQ,CACPC,MAAO,CACLC,eAAgBC,EAAAA,EAChBC,OAAQzB,GAEV0B,aAAc,CACZC,WAAY,CAAEC,gBAAiB,CAAEC,SAAU,MAE7CC,QAASlL,EACTmL,SAAU,SAACC,GAAG,OAAKA,EAAI7H,EAAS,EAChCtD,QAASA,EAAQmK,QAAO,SAACvD,GAAQ,OAAMA,EAAIwE,IAAI,IAC/CjL,KAAMA,EACNkL,wBAAwB,EACxBC,0BAA0B,EAC1BhC,kBAAmBA,EACnBT,kBAAmBiB,EACnByB,UAAW,GACXC,mBAAoB,GACpBC,gBAAiB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,KACtC1M,IAAEP,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CACA,UAAW,CACTE,MAAO,WAET,WAAY,CACVA,MAAO,WAET,cAAe,CACbA,MAAO,SAET,aAAc,CACZA,MAAO,UAET,iBAAkB,CAChBA,MAAO,OAET,YAAa,CACXA,MAAO,OAET,wCAAyC,CACvCA,MAAO,QACP,sBAAuB,CACrBgN,KAAM,YAGV,oBAAqB,CACnBC,WAAY,UACZjN,MAAO,QACP,sBAAuB,CACrBgN,KAAM,UAGV,2BAA4B,CAC1BC,WAAY,UACZjN,MAAO,QACP,sBAAuB,CACrBgN,KAAM,UAGV,2BAA4B,CAC1BC,WAAY,UACZjN,MAAO,QACP,sBAAuB,CACrBgN,KAAM,UAGV,gCAAiC,CAC/BE,QAAS,iBAGR,CACD,+BAAgC,CAC9BD,WAAY,UACZjN,MAAO,QACPQ,SAAU,QAGZ,gGACE,CACE2M,QAAS5I,GAAqBC,EAAc,OAAS,QACrDwI,KAAM,SAEV,qFACE,CACEG,QAAS5I,GAAqBC,EAAc,OAAS,WAGxD,CACDhE,SAAU,GACV4M,WAAY,IACZ,+BAAgC,CAC9BhM,OAAQ,OACRN,MAAO,QAET,mCAAoC,CAClCM,OAAQ,OACRN,MAAO,UAQbuM,0BAA2B,SAAC3I,GAC1B,GAAIF,EAAa,CACf,GAAIE,EAAUoC,QAAU,EAAG,OAE3B,GADA8E,EAAclH,EACV0G,EAAaO,SAASC,EAAYA,EAAY9E,OAAS,IACzD,OAKF,OAHAuE,EAAgB3G,QAEhBlD,EAAkB,CAACkD,EAAUA,EAAUoC,OAAS,IAAKrF,EAAM,KAE7D,CAEA,IAAK+C,GAAeD,EAClB,GAAI6G,IAA4B,OAAZA,QAAY,IAAZA,OAAY,EAAZA,EAActE,QAAS,EAAG,CAC5C,IAAMwG,EAAe,IAAIC,IAAInC,GAC7BC,EACE3G,EAAU+G,QAAO,SAAC+B,GAAM,OAAMF,EAAaG,IAAID,EAAE,IAErD,MACEnC,EAAgB3G,QAGlB2G,EAAgB3G,GAGlBlD,EAAkB,CAACkD,EAAUA,EAAUoC,OAAS,IAAKrF,EAAM,KAC7D,EACAW,cAAe,SAACsL,EAASrH,GAEvB,GADmB,CAAC,cAAe,QAAS,SAAU,aACtCsF,SAAStF,EAAIrC,MAI7B,OADAqC,EAAIpC,iBACa,UAAboC,EAAIrC,MAAiC,gBAAbqC,EAAIrC,KAC1BO,IAAsBC,EACjB6G,GAAgB,SAAC1G,GACtB,OAAIA,GAAQA,EAAKmC,OAAS,GAAKnC,EAAK,KAAO+I,EAAGC,QAAQhM,IACpDH,EAAkB,GAAIC,EAAM4E,EAAIrC,MACzB,KAETxC,EAAkB,CAACkM,EAAGC,QAAQhM,IAAKF,EAAM4E,EAAIrC,MACtC,CAAC0J,EAAGC,QAAQhM,IACrB,SAEA0J,GAAgB,SAAC1G,GACf,OACEA,IACCH,GACDG,EAAKmC,OAAS,GACdnC,EAAKgH,SAAS+B,EAAGC,QAAQhM,KAEzBgD,EAAOA,EAAK8G,QAAO,SAACC,GAAS,OAAKA,IAASgC,EAAGC,QAAQhM,EAAE,IACxDH,EAAkB,GAAIC,EAAM4E,EAAIrC,MACzBW,GAGPA,GACAH,GACAG,EAAKmC,OAAS,GACdnC,EAAKgH,SAAS+B,EAAGC,QAAQhM,IAElBgD,GAETnD,EAAkB,CAACkM,EAAGC,QAAQhM,IAAKF,EAAM4E,EAAIrC,MACvC,GAANK,QAAAuJ,EAAAA,EAAAA,GAAWjJ,GAAI,CAAE+I,EAAGC,QAAQhM,KAC9B,IAIa,WAAb0E,EAAIrC,MAAkC,cAAbqC,EAAIrC,MAC/BqH,EAAgB,CAACqC,EAAGC,QAAQhM,KACrBH,EAAkB,CAACkM,EAAGC,QAAQhM,IAAKF,EAAM4E,EAAIrC,YAFtD,CAIF,EACA6J,uBAAqB,EACrBvL,gBAAiBA,EACjBC,iBAAkBA,KAI1B,IAIF,SAASuL,EAAUzE,GAIoD,IAHrE0E,EAAI1E,EAAJ0E,KACAC,EAAY3E,EAAZ2E,aACA5J,EAASiF,EAATjF,UAEM6J,GAASC,EAAAA,EAAAA,KACTC,GAAYC,EAAAA,EAAAA,GAAgBH,EAAQI,EAAAA,IAE1C,OACE7O,EAAAA,EAAAA,KAAC8O,EAAAA,EAAa,CACZtL,QAAQ,WACRhD,MAAM,UACNoE,UAAWA,EACXmK,MAAOJ,EACPJ,KAAMA,EAAO,EACbnP,SAAU,SAACgH,EAAO4I,GAChBR,EAAapI,EAAc4I,EAAU,EACvC,GAGN,CAEA,SAASC,EAAiBC,GACxB,OAAOlP,EAAAA,EAAAA,KAACmP,EAAAA,GAAc7O,EAAAA,EAAAA,GAAA,CAAC8O,iBAAkBd,GAAgBY,GAC3D,CACA,SAAShE,EACPgE,GAEA,IAAAG,GAMIC,EAAAA,EAAAA,YAAW7E,GALbE,EAAiB0E,EAAjB1E,kBACAG,EAAuBuE,EAAvBvE,wBACAD,EAAwBwE,EAAxBxE,yBACAD,EAAcyE,EAAdzE,eACA3I,EAAIoN,EAAJpN,KAEF,OACEoB,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CACFzC,GAAI,CACF0O,UAAW,OACX5B,QAAS,OACTrM,MAAO,OACPkO,eAAgB,gBAChBC,GAAI,EACJC,WAAY,SACZC,cAC+B,eAA7B9E,EAA4C,cAAgB,OAC9DzK,SAAA,EAEFJ,EAAAA,EAAAA,KAACiP,GAAgB3O,EAAAA,EAAAA,GAAA,GAAK4O,KACtB7L,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CACFzC,GAAI,CACF8M,QAAS,OACT6B,eAC+B,eAA7B3E,EACI,aACA,WACN+E,KAAM,EACNF,WAAY,UACZtP,SAAA,CAED0K,IACCzH,EAAAA,EAAAA,MAAA,OAAAjD,SAAA,CAAK,YAA2B,OAAjBuK,QAAiB,IAAjBA,OAAiB,EAAjBA,EAAmBrD,WAEpCtH,EAAAA,EAAAA,KAAA,OAAAI,SAAMwK,EAAeD,EAAmB1I,UAIhD,CApEA,K,+UCzRM4N,EAAe,CACnB,oBACA,yBACA,WACA,iCACA,iBACA,iBACA,iBACA,SACA,OACA,IAEIC,EAAY,CAChB,aACA,cACA,uBACA,qBACA,qBAEItI,EAAS,CACb,CAAE2B,QAAS,cAAe4G,OAAQ,kBAAmBzO,MAAO,SAC5D,CAAE6H,QAAS,cAAe4G,OAAQ,eAAgBzO,MAAO,SACzD,CAAE6H,QAAS,WAAY4G,OAAQ,aAAczO,MAAO,SACpD,CAAE6H,QAAS,YAAa4G,OAAQ,cAAezO,MAAO,SACtD,CAAE6H,QAAS,UAAW4G,OAAQ,YAAazO,MAAO,SAClD,CAAE6H,QAAS,eAAgB4G,OAAQ,gBAAiBzO,MAAO,SAC3D,CAAE6H,QAAS,YAAa4G,OAAQ,aAAczO,MAAO,SACrD,CAAE6H,QAAS,aAAc4G,OAAQ,aAAczO,MAAO,SACtD,CACE6H,QAAS,cACT4G,OAAQ,eACRzO,MAAO,QACP+C,KAAM,UAER,CACE8E,QAAS,iBACT4G,OAAQ,kBACRzO,MAAO,QACP+C,KAAM,UAER,CACE8E,QAAS,gBACT4G,OAAQ,iBACRzO,MAAO,SAET,CAAE6H,QAAS,WAAY4G,OAAQ,YAAazO,MAAO,SACnD,CAAE6H,QAAS,SAAU4G,OAAQ,SAAUzO,MAAO,UAEhD,SAAS0O,EAAO/Q,GAAsD,IAAnDgR,EAAKhR,EAALgR,MAAOC,EAAQjR,EAARiR,SAClBC,GAAuBC,EAAAA,EAAAA,QAAyB,OAEtDC,EAAAA,EAAAA,YAAU,WACRH,EAAS,CACP7L,KAAM,eACNiM,MAAO,QACPjR,MAAOkR,EAAWN,IAEtB,GAAG,CAACA,EAAOC,IAEX,IAAAM,GAKIC,EAAAA,EAAAA,GAAmB,CACrBC,KAAM,CACJC,IAAK,iCACLC,aAAc,gBAEhB9O,QAAS,CACP,CAAEwO,MAAO,WAAYO,WAAY,aAAcvP,MAAO,KACtD,CAAEgP,MAAO,cAAeO,WAAY,QAASvP,MAAO,KACpD,CAAEgP,MAAO,OAAQO,WAAY,UAAWvP,MAAO,MAEjDS,SAAU,aACV+O,SAAU,WACVC,gBAAiB,cACjBC,WAAY,SAACC,GACXC,EAAkB,CAChBC,OAAQ,CACNhS,KAAM,WACNE,MAAO4R,EAAgB,GAAGG,YAG9BF,EAAkB,CAChBC,OAAQ,CACNhS,KAAM,cACNE,MAAO4R,EAAgB,GAAGI,eAG9BC,GACF,EACA5O,UAAWyN,IAhCKoB,EAAWf,EAA3BgB,eACWC,EAAoBjB,EAA/B3O,UACW6P,EAAelB,EAA1BmB,UACYL,EAAgBd,EAA5BoB,WAgCIV,EAAoB,SAAC5M,GACzB,IAAAuN,EAAwBvN,EAAE6M,OAAlBhS,EAAI0S,EAAJ1S,KAAME,EAAKwS,EAALxS,MACd6Q,EAAS,CAAE7L,KAAM,eAAgBiM,MAAOnR,EAAME,MAAAA,GAChD,EAEA,OACEgE,EAAAA,EAAAA,MAAA,OACEnC,MAAO,CACLwM,QAAS,QACTtN,SAAA,EAEFJ,EAAAA,EAAAA,KAAC2D,EAAAA,EAAS,CACRzE,MAAM,QACNO,WAAS,EACTN,KAAK,QACLE,MAAO4Q,EAAMxN,MACbrD,SAAU8R,EACVjP,KAAM,EACN6P,WAAS,EACTlO,WAAY,CACV1C,MAAO,CAAEU,OAAQ,QAASZ,SAAU,SAEtCH,GAAI,CACF+O,KAAM,EACN,qBAAsB,CAAE5O,SAAU,QAClC,wCAAyC,CAAEC,IAAK,YAGpDoC,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CACFzC,GAAI,SAACkR,GAAK,OAAAC,EAAAA,EAAAA,GAAA,CACRpQ,OAAQ,OACR+L,QAAS,OACTsE,oBAAqB,gBACrBC,IAAK,OACLC,OAAQ,UACPJ,EAAMK,YAAYC,KAAK,MAAQ,CAC9BJ,oBAAqB,iBACtB,EACA7R,SAAA,EAEHiD,EAAAA,EAAAA,MAACiP,EAAAA,EAAW,CACV7S,WAAS,EACT+D,QAAQ,WACR7C,KAAK,QACLE,GAAI,CACF,qBAAsB,CACpBG,SAAU,OACVyM,WAAY,QACZ8E,OAAQ,GACR7E,QAAS,SAEX,wCAAyC,CAAEzM,IAAK,SAChDb,SAAA,EAEFJ,EAAAA,EAAAA,KAACwS,EAAAA,EAAU,CAACrQ,GAAG,SAAQ/B,SAAC,YACxBiD,EAAAA,EAAAA,MAACoP,EAAAA,EAAM,CACLC,QAAQ,SACRrT,MAAO4Q,EAAM0C,OACbzT,MAAM,SACNC,KAAK,SACLC,SAAU,SAACkF,GACT4M,EAAkB5M,EACpB,EACAzD,GAAI,CACFe,OAAQ,OACRZ,SAAU,QACVZ,SAAA,EAEFJ,EAAAA,EAAAA,KAAC4S,EAAAA,EAAQ,CAACvT,MAAO,EAAEe,SAAC,SACpBJ,EAAAA,EAAAA,KAAC4S,EAAAA,EAAQ,CAACvT,MAAO,EAAEe,SAAC,aACpBJ,EAAAA,EAAAA,KAAC4S,EAAAA,EAAQ,CAACvT,MAAO,EAAEe,SAAC,YACpBJ,EAAAA,EAAAA,KAAC4S,EAAAA,EAAQ,CAACvT,MAAO,EAAEe,SAAC,gBAGxBiD,EAAAA,EAAAA,MAACiP,EAAAA,EAAW,CACV7S,WAAS,EACT+D,QAAQ,WACR7C,KAAK,QACLE,GAAI,CACF,qBAAsB,CACpBG,SAAU,OACVyM,WAAY,QACZ8E,OAAQ,GACR7E,QAAS,SAEX,wCAAyC,CAAEzM,IAAK,SAChDb,SAAA,EAEFJ,EAAAA,EAAAA,KAACwS,EAAAA,EAAU,CAACrQ,GAAG,SAAQ/B,SAAC,YACxBiD,EAAAA,EAAAA,MAACoP,EAAAA,EAAM,CACLC,QAAQ,SACRrT,MAAO4Q,EAAM4C,OACb3T,MAAM,SACNC,KAAK,SACLC,SAAU,SAACkF,GACT4M,EAAkB5M,EACpB,EACAzD,GAAI,CACFe,OAAQ,OACRZ,SAAU,QACVZ,SAAA,EAEFJ,EAAAA,EAAAA,KAAC4S,EAAAA,EAAQ,CAACvT,MAAO,EAAEe,SAAC,kBACpBJ,EAAAA,EAAAA,KAAC4S,EAAAA,EAAQ,CAACvT,MAAO,EAAEe,SAAC,gBACpBJ,EAAAA,EAAAA,KAAC4S,EAAAA,EAAQ,CAACvT,MAAO,EAAEe,SAAC,oBACpBJ,EAAAA,EAAAA,KAAC4S,EAAAA,EAAQ,CAACvT,MAAO,EAAEe,SAAC,mBACpBJ,EAAAA,EAAAA,KAAC4S,EAAAA,EAAQ,CAACvT,MAAO,EAAEe,SAAC,gBACpBJ,EAAAA,EAAAA,KAAC4S,EAAAA,EAAQ,CAACvT,MAAO,EAAEe,SAAC,qBAGN,IAAjB6P,EAAM4C,QACLxP,EAAAA,EAAAA,MAACiP,EAAAA,EAAW,CACVzR,GAAI,CACFS,MAAO,OACPwR,YAAa,OACb,qBAAsB,CACpB9R,SAAU,OACVyM,WAAY,QACZ8E,OAAQ,GACR7E,QAAS,SAEX,wCAAyC,CAAEzM,IAAK,UAChDb,SAAA,EAEFJ,EAAAA,EAAAA,KAACwS,EAAAA,EAAU,CAACrQ,GAAG,aAAY/B,SAAC,iBAC5BJ,EAAAA,EAAAA,KAACyS,EAAAA,EAAM,CACLC,QAAQ,aACRrT,MAAO4Q,EAAM8C,WACb3T,SAAU8R,EACVhS,MAAM,cACNyB,KAAK,QACLxB,KAAK,aACL0B,GAAI,CACFe,OAAQ,OACRZ,SAAU,QACVZ,SAED0P,EAAUkD,KAAI,SAAC7K,EAAKlB,GACnB,OACEjH,EAAAA,EAAAA,KAAC4S,EAAAA,EAAQ,CAAWvT,MAAO4H,EAAI7G,SAC5B+H,GADYlB,EAInB,SAGe,IAAjBgJ,EAAM4C,QACRxP,EAAAA,EAAAA,MAAA4P,EAAAA,SAAA,CAAA7S,SAAA,CACGqR,GACCzR,EAAAA,EAAAA,KAACkT,EAAAA,EAAa,CAACnG,QAAS0E,KAExBpO,EAAAA,EAAAA,MAACiP,EAAAA,EAAW,CACVzR,GAAI,CACFsS,WAAY,YACZ7R,MAAO,OACP,qBAAsB,CACpBN,SAAU,OACVyM,WAAY,QACZ8E,OAAQ,GACR7E,QAAS,SAEX,wCAAyC,CACvCzM,IAAK,SAGTuC,QAAQ,WACR7C,KAAK,QAAOP,SAAA,EAEZJ,EAAAA,EAAAA,KAACwS,EAAAA,EAAU,CAACY,QAAQ,YAAWhT,SAAC,gBAChCJ,EAAAA,EAAAA,KAACqT,EAAAA,EAAa,CACZxS,GAAI,CACFe,OAAQ,OACRZ,SAAU,OACVsS,OAAQ,CACN7F,WAAY,QAGhBlO,SAAU4Q,EACVhR,KAAK,WACLE,MAAO4Q,EAAMmB,SACbhS,SAAU8R,EACV/O,GAAG,YACH7C,UAAW,SAACgF,GACV,GAAe,UAAXA,EAAEE,MAA+B,gBAAXF,EAAEE,KAC1B,OAAOkN,EAAgBzB,EAAMmB,SAEjC,EACAvN,cACE7D,EAAAA,EAAAA,KAAC8D,EAAAA,EAAc,CAAC3C,SAAS,MAAKf,UAC5BJ,EAAAA,EAAAA,KAAC+D,EAAAA,EAAU,CACTC,QAAS,WACP0N,EAAgBzB,EAAMmB,SACxB,EACAjN,KAAK,MACL3D,MAAM,YAAWJ,UAEjBJ,EAAAA,EAAAA,KAACuT,EAAAA,EAAgB,QAIvBrU,MAAM,mBAIZc,EAAAA,EAAAA,KAAC2D,EAAAA,EAAS,CACRxE,KAAK,cACLD,MAAM,eACNyB,KAAK,QACLtB,MAAO4Q,EAAMoB,YACbjS,SAAU8R,EACVtN,WAAY,CACV1C,MAAO,CACLU,OAAQ,OACRZ,SAAU,OACVR,MAAO,QAETgT,UAAU,GAEZ3S,GAAI,CACFsS,WAAY,YACZ7R,MAAO,OACP,qBAAsB,CAAEN,SAAU,QAClC,wCAAyC,CACvCC,IAAK,eAMboC,EAAAA,EAAAA,MAAA4P,EAAAA,SAAA,CAAA7S,SAAA,EACEiD,EAAAA,EAAAA,MAACiP,EAAAA,EAAW,CACV7S,WAAS,EACT+D,QAAQ,WACR7C,KAAK,QACLE,GAAI,CACF,qBAAsB,CACpBG,SAAU,OACVyM,WAAY,QACZ8E,OAAQ,GACR7E,QAAS,SAEX,wCAAyC,CAAEzM,IAAK,SAChDb,SAAA,EAEFJ,EAAAA,EAAAA,KAACwS,EAAAA,EAAU,CAACrQ,GAAG,gBAAe/B,SAAC,iBAC/BiD,EAAAA,EAAAA,MAACoP,EAAAA,EAAM,CACLtQ,GAAG,gBACHjD,MAAM,cACNG,MAAO4Q,EAAMwD,WACbtU,KAAK,aACLC,SAAU8R,EACVrQ,GAAI,CACFe,OAAQ,OACRZ,SAAU,QACVZ,SAAA,EAEFJ,EAAAA,EAAAA,KAAC4S,EAAAA,EAAQ,CAACvT,MAAO,UAAUe,SAAC,aAC5BJ,EAAAA,EAAAA,KAAC4S,EAAAA,EAAQ,CAACvT,MAAO,SAASe,SAAC,YAC3BJ,EAAAA,EAAAA,KAAC4S,EAAAA,EAAQ,CAACvT,MAAO,SAASe,SAAC,kBAG/BJ,EAAAA,EAAAA,KAAC0T,EAAiB,CAChBxD,SAAUA,EACVD,MAAOA,EACPiB,kBAAmBA,OAKxBK,OAIT,CAEe,SAASoC,IAAgB,IAADC,EAC/BjH,EAAe,CACnBkG,OAAQ,EACRY,WAAY,UACZI,SAAU,IAAIC,KACdC,OAAQ,IAAID,KACZE,WAAW,IAAIF,MAAOG,cAAcC,WAAWC,OAAO,GACtD1R,MAAO,GACP2O,SAAU,GACVC,YAAa,GACb0B,WAAY,EACZJ,OAAQ,GAEVhG,EAAalK,MAAQ8N,EAAW5D,GAChC,IAAA0C,GAA0BC,EAAAA,EAAAA,YAAW8E,EAAAA,GAA7BC,EAAOhF,EAAPgF,QAASC,EAAIjF,EAAJiF,KAoDjB,OACEtU,EAAAA,EAAAA,KAACuU,EAAAA,GAAY,CACX/M,OAAQA,EACRmF,aAAcA,EACdqD,QAAS,SAACC,EAAOC,GAAQ,OACvBlQ,EAAAA,EAAAA,KAACwU,EAAO,CAACvE,MAAOA,EAAOC,SAAUA,GAAY,EAE/CuE,eA3D8C,SACzBlL,EAAAmL,EAAAC,GAAA,OAAAf,EAAAA,IAAAnK,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAzB,SAAAC,EAA0BgL,EAAcC,EAAiB5E,GAAU,IAAA6E,EAAAC,EAAA,OAAArL,EAAAA,EAAAA,KAAAM,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EAC1CkK,EAAQW,KAC7B,mCACA/E,EACA,CACEgF,QAAS,CACPC,cAAc,UAADrQ,OAAgB,OAAJyP,QAAI,IAAJA,OAAI,EAAJA,EAAMa,gBAGnC,KAAD,EARa,OAARL,EAAQ7K,EAAAmL,KAAAnL,EAAAE,KAAA,EASS2K,EAAS3P,KAAK,KAAD,EAA9B4P,EAAQ9K,EAAAmL,MACd9L,EAAAA,EAAAA,IAAY,CACVnE,KAAM4P,EAASM,OACf7N,OAAAA,EACAC,kBAAmB,SAACU,GAAS,IAADmN,EASnBC,EARDC,EAAqB3F,EAAa4F,OAEtB,KAAftN,EAAIwK,QACY,OAAfxK,EAAIwK,aACWvI,IAAfjC,EAAIwK,QACS,MAAfxK,EAAI4H,OAIJ5H,EAAIwK,OAAS6C,EAAmBE,SAAmB,QAAXH,EAACpN,EAAIwK,cAAM,IAAA4C,OAAA,EAAVA,EAAYrB,YAAa,GAFlE/L,EAAIwK,OAAS,MAmBf,OAfAxK,EAAI4K,WAAajD,EAAU4F,SAAuB,QAAfJ,EAACnN,EAAI4K,kBAAU,IAAAuC,OAAA,EAAdA,EAAgBpB,aACjC,MAAf/L,EAAI4H,SACN5H,EAAIwN,YAAcC,WAChBzN,EAAIwN,YAAYE,QAAQ,KAAM,KAC9BC,eAAe,QAAS,CACxBC,sBAAuB,EACvBC,sBAAuB,IAEzB7N,EAAI8N,eAAiBL,WACnBzN,EAAI8N,eAAeJ,QAAQ,KAAM,KACjCC,eAAe,QAAS,CACxBC,sBAAuB,EACvBC,sBAAuB,KAGpB7N,CACT,EACAnH,SAAU,OACV0G,gBAAiB,MAChBwO,MAAK,SAACpO,GACP8M,EAAQ9M,GACR+M,GAAW,EACb,IAAG,wBAAA5K,EAAAK,OAAA,GAAAV,EAAA,MACJW,MAAA,KAAAC,UAAA,EAUG2L,kBAAmB,GACnBC,UAAW,SAACjR,EAAM8K,GAChB,OAAO9K,EAAK6N,KAAI,SAACqD,EAAYC,GAC3B,OACEjT,EAAAA,EAAAA,MAAA,OAAKuB,UAAU,gBAAexE,SAAA,EAC5BJ,EAAAA,EAAAA,KAAA,OAAK4E,UAAU,SAAS1D,MAAO,CAAEU,OAAQ,WACzC5B,EAAAA,EAAAA,KAAA,OAAK4E,UAAU,UAASxE,UACtBiD,EAAAA,EAAAA,MAAA,SAAAjD,SAAA,EACEiD,EAAAA,EAAAA,MAAA,SAAAjD,SAAA,CACG6P,EAAMxN,MAAM8T,MAAM,MAAMvD,KAAI,SAACwD,EAAWvP,GACvC,OACEjH,EAAAA,EAAAA,KAAA,MAAAI,UACEJ,EAAAA,EAAAA,KAAA,MACEkB,MAAO,CACLF,SAAU,OACV4M,WAAY,OACZ6I,UAAW,QAEbC,QAASlP,EAAOF,OAAOlH,SAEtBoW,KATIvP,EAab,KACAjH,EAAAA,EAAAA,KAAA,MAAIkB,MAAO,CAAEU,OAAQ,WACrB5B,EAAAA,EAAAA,KAAA,MAAIkB,MAAO,CAAEyV,aAAc,mBAAoBvW,SAC5CoH,EAAOwL,KAAI,SAAC7K,EAAUyO,GACrB,OACE5W,EAAAA,EAAAA,KAAA,MACE6W,cAAe,SAACvS,GAAC,OACfwS,EAAAA,EAAAA,IAA4BxS,EAAG6D,EAAIgB,QAAShE,EAAK,EAEnDjE,MAAO,CACLI,MAAO6G,EAAI7G,MACXN,SAAU,OACV4M,WAAY,QACZxN,SAGD+H,EAAI4H,QAFA6G,EAKX,UAGJ5W,EAAAA,EAAAA,KAAA,SAAAI,SACGiW,EAAMrD,KAAI,SAAC+D,EAAcH,GACxB,OACEvT,EAAAA,EAAAA,MAAC2T,EAAAA,SAAc,CAAA5W,SAAA,CACO,MAAnB2W,EAAQhH,SACP/P,EAAAA,EAAAA,KAAA,MACEkB,MAAO,CAAEU,OAAmB,IAAXgV,EAAe,OAAS,WAG7C5W,EAAAA,EAAAA,KAAA,MAAAI,SACGoH,EAAOwL,KAAI,SAACiE,EAAcC,GACzB,OACElX,EAAAA,EAAAA,KAAA,MACEgE,QAASmT,EAAAA,GACTvS,UAAS,8BAAAC,OAAgCyR,EAAU,SAAAzR,OAAQ+R,EAAM,SAAA/R,OAAQqS,GAEzEhW,MAAO,CACLF,SACqB,MAAnB+V,EAAQhH,OAAiB,OAAS,OACpCnC,WACqB,MAAnBmJ,EAAQhH,OAAiB,MAAQ,MACnCqH,YACsB,gBAApBH,EAAQ9N,SACW,MAAnB4N,EAAQhH,OACJ,OACA,GACNzO,MAAM,GAADuD,OAAKoS,EAAQ3V,MAAK,eACvBmV,UAC+B,QAA7BM,EAAQE,EAAQ9N,SACZ,SACiB,WAAjB8N,EAAQ5S,KACR,QACA,QACNjE,SAED2W,EAAQE,EAAQ9N,UApBZ+N,EAuBX,QAnCiBN,EAuCzB,YAINvT,EAAAA,EAAAA,MAAA,OACEuB,UAAU,SACV1D,MAAO,CACLU,OAAQ,OACR+L,QAAS,OACT6B,eAAgB,iBAChBpP,SAAA,EAEFJ,EAAAA,EAAAA,KAAA,KAAGkB,MAAO,CAAEF,SAAU,OAAQ4M,WAAY,QAASxN,SAAC,gBAGpDiD,EAAAA,EAAAA,MAAA,KAAGnC,MAAO,CAAEF,SAAU,OAAQ4M,WAAY,QAASxN,SAAA,CAAC,QAC5CkW,EAAa,EAAE,OAAKnR,EAAKmC,eApGDgP,EAyGxC,GACF,EACAe,WAAY,OACZC,UAAW,QAGjB,CAEA,SAAS/G,EAAWN,GAClB,MAAM,wDAANpL,OAKF,SAA4BoL,GAC1B,IAAIsH,EAAa,GACjB,GAAyB,UAArBtH,EAAMwD,WACR8D,EAAatH,EAAM4D,SAAS2D,mBAAmB,QAAS,CACtDC,KAAM,UACNC,MAAO,OACPC,IAAK,iBAEF,GAAyB,YAArB1H,EAAMwD,WACf8D,EAAatH,EAAM4D,SAAS2D,mBAAmB,QAAS,CACtDC,KAAM,UACNC,MAAO,cAEJ,GAAyB,WAArBzH,EAAMwD,WAAyB,CACxC,IACAmE,EAoBJ,SAAyBC,EAAmB7D,GAC1C,IAAM8D,EAAY,IAAIhE,KAAK+D,EAAW,EAAG,GACnCE,EAAU,IAAIjE,KAAK+D,EAAY7D,EAAW,GAAI,IAE9CgE,EAAqBF,EAAU7D,cAC/BgE,EAAmBF,EAAQ9D,cAEjC,OAAIgE,EAAmBD,EACd,CACLA,mBAAoBC,EACpBA,iBAAkBD,GAGb,CACLA,mBAAAA,EACAC,iBAAAA,EAGN,CAtCqDC,CADpC,IAAIpE,KAAK7D,EAAM4D,UAAUI,cAGpCyB,SAASzF,EAAM+D,YAFTgE,EAAkBJ,EAAlBI,mBAAoBC,EAAgBL,EAAhBK,iBAI5BV,EAAU,GAAA1S,OAAMmT,EAAkB,KAAAnT,OAAIoT,EACxC,KAAO,CACL,IAAMpE,EAAW5D,EAAM4D,SAAS2D,mBAAmB,QAAS,CAC1DE,MAAO,OACPC,IAAK,YAED5D,EAAS9D,EAAM8D,OAAOyD,mBAAmB,QAAS,CACtDC,KAAM,UACNC,MAAO,OACPC,IAAK,YAEPJ,EAAU,GAAA1S,OAAMgP,EAAQ,OAAAhP,OAAMkP,EAChC,CAEA,OAAOwD,CACT,CAvCiEY,CAC7DlI,GACD,MAEH,CAuDA,SAASyD,EAAiBlK,GAA+C,IAA5CyG,EAAKzG,EAALyG,MAAOC,EAAQ1G,EAAR0G,SAAUgB,EAAiB1H,EAAjB0H,kBACtCkH,GAAchI,EAAAA,EAAAA,QAAoB,MAClCiI,GAAYjI,EAAAA,EAAAA,QAAoB,MAEtC,OACE/M,EAAAA,EAAAA,MAAC2T,EAAAA,SAAc,CAAA5W,SAAA,CACS,WAArB6P,EAAMwD,aACLpQ,EAAAA,EAAAA,MAAC2T,EAAAA,SAAc,CAAA5W,SAAA,EACbJ,EAAAA,EAAAA,KAAChB,EAAAA,EAAgB,CACfS,WAAW,EACXP,MAAM,YACNE,SAAU,SAACC,GACT6Q,EAAS,CACP7L,KAAM,eACNiM,MAAO,WACPjR,MAAOA,GAEX,EACAA,MAAO,IAAIyU,KAAK7D,EAAM4D,UACtBvU,UAAW,SAACgF,GACV,GAAe,UAAXA,EAAEE,MAA+B,gBAAXF,EAAEE,KAC1B,IAAM8T,EAAUC,YAAW,WAAO,IAADC,EAAAC,EACZ,QAAnBD,EAAAJ,EAAYlU,eAAO,IAAAsU,GAAyB,QAAzBC,EAAnBD,EAAqBvS,cAAc,iBAAS,IAAAwS,GAA5CA,EAA8CC,QAC9CC,aAAaL,EACf,GAAG,IAEP,EACA9Y,cAAe4Y,EACf1Y,UAAW,CACTkB,gBAAiB,CACfM,MAAO,CACLF,SAAU,SAGd4C,WAAY,CACV1C,MAAO,CAAEU,OAAQ,OAAQZ,SAAU,aAIzChB,EAAAA,EAAAA,KAAChB,EAAAA,EAAgB,CACfS,WAAW,EACXP,MAAM,UACNE,SAAU,SAACC,GACT6Q,EAAS,CACP7L,KAAM,eACNiM,MAAO,SACPjR,MAAOA,GAEX,EACAA,MAAO,IAAIyU,KAAK7D,EAAM8D,QACtBzU,UAAW,SAACgF,GACV,GAAe,UAAXA,EAAEE,MAA+B,gBAAXF,EAAEE,KAC1B,IAAM8T,EAAUC,YAAW,WAAO,IAADK,EAAAC,EACd,QAAjBD,EAAAP,EAAUnU,eAAO,IAAA0U,GAAyB,QAAzBC,EAAjBD,EAAmB3S,cAAc,iBAAS,IAAA4S,GAA1CA,EAA4CH,QAC5CC,aAAaL,EACf,GAAG,IAEP,EACA9Y,cAAe6Y,EACf3Y,UAAW,CACTkB,gBAAiB,CACfM,MAAO,CACLF,SAAU,SAGd4C,WAAY,CACV1C,MAAO,CAAEU,OAAQ,OAAQZ,SAAU,gBAO7CqC,EAAAA,EAAAA,MAACpD,EAAAA,EAAoB,CAACC,YAAaC,EAAAA,EAAeC,SAAA,CAC1B,YAArB6P,EAAMwD,aACLzT,EAAAA,EAAAA,KAACK,EAAAA,EAAU,CACTQ,GAAI,CACFS,MAAO,OACP,wCAAyC,CAAEL,IAAK,SAElDP,UAAW,CACThB,UAAW,CACTiB,KAAM,QACNxB,KAAM,GACNyB,gBAAiB,CACfM,MAAO,CACLF,SAAU,SAGd4C,WAAY,CACV1C,MAAO,CAAEU,OAAQ,OAAQZ,SAAU,WAIzC9B,MAAO,OACP4Z,MAAO,CAAC,QAAS,QACjBzZ,MAAO4Q,EAAM4D,SACbzU,SAAU,SAACC,GACT6Q,EAAS,CACP7L,KAAM,eACNiM,MAAO,WACPjR,MAAOA,GAEX,IAGkB,WAArB4Q,EAAMwD,aACLpQ,EAAAA,EAAAA,MAAC2T,EAAAA,SAAc,CAAA5W,SAAA,EACbJ,EAAAA,EAAAA,KAACK,EAAAA,EAAU,CACTQ,GAAI,CACFS,MAAO,OACP,wCAAyC,CAAEL,IAAK,SAElDP,UAAW,CACThB,UAAW,CACTiB,KAAM,QACNxB,KAAM,GACNI,SAAU6Y,EACVxX,gBAAiB,CACfM,MAAO,CACLF,SAAU,SAGd4C,WAAY,CACV1C,MAAO,CAAEU,OAAQ,OAAQZ,SAAU,WAIzC9B,MAAO,OACP4Z,MAAO,CAAC,QACRzZ,MAAO4Q,EAAM4D,SACbzU,SAAU,SAACC,GACT6Q,EAAS,CACP7L,KAAM,eACNiM,MAAO,WACPjR,MAAOA,GAEX,KAEFW,EAAAA,EAAAA,KAAC2D,EAAAA,EAAS,CACRU,KAAK,SACLnF,MAAM,aACNC,KAAK,YACLE,MAAO4Q,EAAM+D,UACb5U,SAAU8R,EACVtN,WAAY,CACV1C,MAAO,CAAEU,OAAQ,OAAQZ,SAAU,SAErCH,GAAI,CACF+O,KAAM,EACN,qBAAsB,CAAE5O,SAAU,QAClC,wCAAyC,CAAEC,IAAK,mBAQhE,C,gIC5xBsC,SA8BvB8X,EAAkBxP,EAAAmL,EAAAC,GAAA,OAAAqE,EAAAA,IAAAvP,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAjC,SAAAC,EACEyK,EACAC,EACA5D,GAAuC,IAAAuI,EAAAC,EAAA1O,UAAA,OAAAd,EAAAA,EAAAA,KAAAM,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACpB,OAAnB8O,EAAcC,EAAA5R,OAAA,QAAA8C,IAAA8O,EAAA,GAAAA,EAAA,GAAG,GAAEjP,EAAAI,OAAA,SAEZgK,EAAQ8E,IAAI,GAADtU,OAAQ,OAAJ6L,QAAI,IAAJA,OAAI,EAAJA,EAAMC,IAAG,KAAA9L,OAAQ,OAAJ6L,QAAI,IAAJA,OAAI,EAAJA,EAAME,aAAY,KAAA/L,OAAIoU,GAAU,CACjEhE,QAAS,CACPC,cAAc,UAADrQ,OAAgB,OAAJyP,QAAI,IAAJA,OAAI,EAAJA,EAAMa,iBAEjC,wBAAAlL,EAAAK,OAAA,GAAAV,EAAA,MACHW,MAAA,KAAAC,UAAA,CAsID,IApI2B,SAAHvL,GAeU,IAADma,EAAAC,EAd/B3I,EAAIzR,EAAJyR,KACAI,EAAQ7R,EAAR6R,SACA/O,EAAQ9C,EAAR8C,SACAgP,EAAe9R,EAAf8R,gBACAjP,EAAO7C,EAAP6C,QAAOwX,EAAAra,EACP+R,WAAAA,OAAU,IAAAsI,EAAG,WAAO,EAACA,EAAAC,EAAAta,EACrBua,iBAAAA,OAAgB,IAAAD,EAAG,WAAO,EAACA,EAAAE,EAAAxa,EAC3Bya,UAAAA,OAAS,IAAAD,EAAG,WAAO,EAACA,EACpB/W,EAASzD,EAATyD,UACAE,EAAa3D,EAAb2D,cAAa+W,EAAA1a,EACb2a,gBAAAA,OAAe,IAAAD,EAAG,WAAO,EAACA,EAAAE,EAAA5a,EAC1B6a,eAAAA,OAAc,IAAAD,EAAGd,EAAkBc,EACnC/W,EAAe7D,EAAf6D,gBACAC,EAAgB9D,EAAhB8D,iBAEAsM,GAA0BC,EAAAA,EAAAA,YAAW8E,EAAAA,GAA7BC,EAAOhF,EAAPgF,QAASC,EAAIjF,EAAJiF,KACjB9I,GAA6BC,EAAAA,EAAAA,WAAS,GAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAArCuO,EAAIrO,EAAA,GAAEsO,EAAYtO,EAAA,GACzBuO,GAAwBxO,EAAAA,EAAAA,UAAgC,IAAGyO,GAAAvO,EAAAA,EAAAA,GAAAsO,EAAA,GAApDhY,EAAIiY,EAAA,GAAEhY,EAAOgY,EAAA,GAAwC,SAC7CC,IAAkB,OAAAf,EAAAA,IAAA3P,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAjC,SAAAyQ,IAAA,IAAAnB,EAAAoB,EAAA7P,UAAA,OAAAd,EAAAA,EAAAA,KAAAM,MAAA,SAAAsQ,GAAA,cAAAA,EAAApQ,KAAAoQ,EAAAnQ,MAAA,OAAqD,OAAnB8O,EAAcoB,EAAA/S,OAAA,QAAA8C,IAAAiQ,EAAA,GAAAA,EAAA,GAAG,GAAEC,EAAAnQ,KAAA,EACtC2P,EAAezF,EAASC,EAAM5D,EAAMuI,GAAQ,KAAD,SAAAqB,EAAAjQ,OAAA,SAAAiQ,EAAAlF,MAAA,wBAAAkF,EAAAhQ,OAAA,GAAA8P,EAAA,MACzD7P,MAAA,KAAAC,UAAA,CACD,IAAA+P,GAA+BC,EAAAA,EAAAA,UAAS,CACtCzY,SAAUA,EACV0Y,QAAQ,WAAD,OAAApB,EAAAA,IAAA5P,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAE,SAAA+Q,IAAA,OAAAhR,EAAAA,EAAAA,KAAAM,MAAA,SAAA2Q,GAAA,cAAAA,EAAAzQ,KAAAyQ,EAAAxQ,MAAA,cAAAwQ,EAAAxQ,KAAA,EAAkBgQ,IAAoB,cAAAQ,EAAAtQ,OAAA,SAAAsQ,EAAAvF,MAAA,wBAAAuF,EAAArQ,OAAA,GAAAoQ,EAAA,MAAAnQ,MAAA,KAAAC,UAAA,EAC/CkP,UAAW,SAACkB,GACV,IAAM9F,EAAW8F,EACjB1Y,EAAQ4S,EAAS3P,KAAK4L,IACtB2I,EAAU5E,EACZ,EACA+F,sBAAsB,IARhBhZ,EAAS0Y,EAAT1Y,UAAWiZ,EAAOP,EAAPO,QAmGnB,MAAO,CACLf,KAAAA,EACA9X,KAAAA,EACAJ,UAAAA,EACA8P,UA5FgB,WAA0B,IAAzBsH,EAAczO,UAAAlD,OAAA,QAAA8C,IAAAI,UAAA,GAAAA,UAAA,GAAG,IAClCuQ,EAAAA,EAAAA,YAAU,WACRf,GAAa,EACf,IACa,OAATtX,QAAS,IAATA,GAAAA,EAAWwB,UACbxB,EAAUwB,QAAQ7E,MAAQ4Z,EAC1BkB,EAAmBlB,GAAQ/C,MAAK,SAAC0E,GAC/B,GAAQ,OAAHA,QAAG,IAAHA,IAAAA,EAAKzV,KAAK6V,QACb,OAAOC,MAAM,WAADpW,OAAe,OAAH+V,QAAG,IAAHA,OAAG,EAAHA,EAAKzV,KAAK+V,UAGpChZ,EADiB0Y,EACAzV,KAAK4L,IACT,OAATrO,QAAS,IAATA,GAAAA,EAAWwB,SAASxB,EAAUwB,QAAQiC,OAC5C,IAEJ,EA8EEyL,WA5EiB,WAEK,IAAD3N,GADrB+V,GAAa,GACTJ,IACFA,EAAyB,OAATlX,QAAS,IAATA,GAAkB,QAATuB,EAATvB,EAAWwB,eAAO,IAAAD,OAAT,EAATA,EAAoB5E,MAExC,EAwEEmS,gBArEAxR,EAAAA,EAAAA,KAAC2B,EAAAA,GAAc,CACboB,iBAAkBA,EAClBL,UAAWA,EACXL,UAAW0X,EACX3X,aAAc,WAEU,IAADmC,GADrByV,GAAa,GACTJ,IACFA,EAAyB,OAATlX,QAAS,IAATA,GAAkB,QAAT6B,EAAT7B,EAAWwB,eAAO,IAAAK,OAAT,EAATA,EAAoBlF,MAExC,EACAiD,iBAAkB,WAEM,IAAD6Y,GADrBnB,GAAa,GACTJ,IACFA,EAAyB,OAATlX,QAAS,IAATA,GAAkB,QAATyY,EAATzY,EAAWwB,eAAO,IAAAiX,OAAT,EAATA,EAAoB9b,MAExC,EACAkD,eAAgB,SAAC+B,GAaf,EAEFzB,iBAAkB,SAACxD,GACjB8a,EAAmB9a,GAAO6W,MAAK,SAAC0E,GAC9B,GAAQ,OAAHA,QAAG,IAAHA,IAAAA,EAAKzV,KAAK6V,QACb,OAAOC,MAAM,WAADpW,OAAe,OAAH+V,QAAG,IAAHA,OAAG,EAAHA,EAAKzV,KAAK+V,UAGpChZ,EADiB0Y,EACAzV,KAAK4L,GACxB,GACF,EACAnO,cAAeA,EACfhB,OAAQ,IACRC,UAAWA,EACXE,SAAUA,EACVD,QAASA,EACTE,kBAAmB,SAAC2I,EAAmBxF,GACrC,GAAIwF,EAAkBrD,QAAU,EAC9B,OAAOkS,EAAiBrU,GAE1B,IAAMiW,EAAc,IAAIrN,IAAIpD,GACtBsG,EAAkB9L,EAAK8G,QAAO,SAACgB,GACnC,OAAOmO,EAAYnN,IAAIhB,EAAI6D,GAAUoD,WACvC,IACIjD,EAAgB3J,QAAU,GAC9B0J,EAAWC,EAAiB9L,EAC9B,EACAhD,GAAI2O,EACJ7O,KAAMA,EACNC,QAASA,EACTY,gBAAiBA,IAWnBgY,QAAAA,EAEJ,C,4BCnLIO,EAAyBC,EAAQ,OAIrCC,EAAQ,OAAU,EAClB,IAAIC,EAAiBH,EAAuBC,EAAQ,QAChDG,EAAcH,EAAQ,OACtBI,GAAW,EAAIF,EAAeG,SAAS,EAAc,EAAIF,EAAYG,KAAK,SAAU,CACtFC,GAAI,KACJC,GAAI,IACJC,EAAG,KACF,MAAmB,EAAIN,EAAYG,KAAK,OAAQ,CACjDI,EAAG,kQACF,MAAO,gBACVT,EAAQ,EAAUG,C,2BCddL,EAAyBC,EAAQ,OAIrCC,EAAQ,OAAU,EAClB,IAAIC,EAAiBH,EAAuBC,EAAQ,QAChDG,EAAcH,EAAQ,OACtBI,GAAW,EAAIF,EAAeG,UAAuB,EAAIF,EAAYG,KAAK,OAAQ,CACpFI,EAAG,+OACD,UACJT,EAAQ,EAAUG,C,uECZH,SAAS5b,EAAyBmc,EAAQC,GACvD,GAAc,MAAVD,EAAgB,MAAO,CAAC,EAC5B,IACIpV,EAAKsV,EADLhL,GAAS,OAA6B8K,EAAQC,GAElD,GAAIE,OAAOC,sBAAuB,CAChC,IAAIC,EAAmBF,OAAOC,sBAAsBJ,GACpD,IAAKE,EAAI,EAAGA,EAAIG,EAAiBhV,OAAQ6U,IACvCtV,EAAMyV,EAAiBH,GACnBD,EAASK,QAAQ1V,IAAQ,GACxBuV,OAAOI,UAAUC,qBAAqBC,KAAKT,EAAQpV,KACxDsK,EAAOtK,GAAOoV,EAAOpV,GAEzB,CACA,OAAOsK,CACT,C","sources":["components/DatePicker.tsx","components/ModalWithTable.tsx","components/PrintPreview/dataCore.ts","components/Table.tsx","feautures/Admin/Reports/Claims/claims.tsx","hooks/useQueryModalTable.tsx","../node_modules/@mui/icons-material/PersonSearch.js","../node_modules/@mui/icons-material/Search.js","../node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js"],"sourcesContent":["import { LocalizationProvider } from \"@mui/x-date-pickers/LocalizationProvider\";\nimport { AdapterDateFns } from \"@mui/x-date-pickers/AdapterDateFns\";\nimport { DatePicker } from \"@mui/x-date-pickers\";\nexport default function CustomDatePicker({\n  label,\n  name,\n  onChange,\n  value,\n  onKeyDown,\n  inputRef,\n  datePickerRef,\n  fullWidth,\n  textField,\n  minWidth = \"200px\",\n  ...rest\n}: any) {\n  return (\n    <LocalizationProvider dateAdapter={AdapterDateFns}>\n      <DatePicker\n      floatingLabelStyle={{color: \"black\" }}\n        value={value}\n        onChange={onChange}\n        ref={datePickerRef}\n        slotProps={{\n          textField: {\n            size: \"small\",\n            label,\n            name,\n            onKeyDown,\n            inputRef: inputRef,\n            fullWidth,\n\n            ...textField,\n          },\n        }}\n        InputLabelProps={{\n          sx: {\n            color: \"black\",\n          },\n        }}\n        sx={{\n          minWidth,\n          fieldset: { borderColor: \"black\" },\n          \".MuiFormLabel-root\": { fontSize: \"14px\" },\n          \".MuiFormLabel-root[data-shrink=false]\": {\n            top: \"-5px\",\n          },\n        }}\n        {...rest}\n      />\n    </LocalizationProvider>\n  );\n}\n","import React from \"react\";\nimport {\n  GridRowSelectionModel,\n  GridRowParams,\n  GridCellParams,\n  GridTreeNode,\n} from \"@mui/x-data-grid\";\nimport { Modal, Box, Typography, IconButton, TextField, InputAdornment } from \"@mui/material\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport Table from \"./Table\";\nimport SearchIcon from \"@mui/icons-material/Search\";\n\ninterface ModalWithTableParams {\n  height: number;\n  isLoading: boolean;\n  queryKey: string;\n  columns: Array<any>;\n  onSelectionChange: (rowSelectionModel: Array<any>, data: Array<any>) => void;\n  setRows: React.Dispatch<React.SetStateAction<GridRowSelectionModel>>;\n  rows: GridRowSelectionModel;\n  id: string;\n  onCloseModal: () => void;\n  onClickCloseIcon: () => void;\n  showModal: boolean;\n  searchOnChange:\n    | React.ChangeEventHandler<HTMLInputElement | HTMLTextAreaElement>\n    | undefined;\n  title?: string;\n  searchRef?: React.RefObject<HTMLInputElement>;\n  onCellKeyDown?: any;\n  onSearchKeyEnter?: (search: string) => void;\n  isRowSelectable?: ((params: GridRowParams<any>) => boolean) | undefined;\n  getCellClassName?:\n    | ((params: GridCellParams<any, any, any, GridTreeNode>) => string)\n    | undefined;\n}\n\nconst style = {\n  position: \"absolute\" as \"absolute\",\n  top: \"50%\",\n  left: \"50%\",\n  transform: \"translate(-50%, -50%)\",\n  width: \"70%\",\n  bgcolor: \"background.paper\",\n  boxShadow: 24,\n  p: 4,\n  heigth: \"auto\",\n};\n\nexport default function ModalWithTable({\n  height,\n  isLoading,\n  queryKey,\n  columns,\n  onSelectionChange,\n  setRows,\n  rows,\n  id,\n  onCloseModal,\n  showModal,\n  onClickCloseIcon,\n  searchOnChange,\n  title = \"\",\n  searchRef,\n  onCellKeyDown,\n  onSearchKeyEnter = () => {},\n  isRowSelectable,\n  getCellClassName,\n}: ModalWithTableParams) {\n  const mainId = generateRandomClass();\n\n  return (\n    <Modal\n      open={showModal}\n      onClose={onCloseModal}\n      aria-labelledby=\"modal-modal-title\"\n      aria-describedby=\"modal-modal-description\"\n    >\n      <Box sx={style}>\n        <Typography id=\"modal-modal-title\" variant=\"h6\" component=\"h2\" mb={2}>\n          {title}\n        </Typography>\n        <TextField\n          size=\"small\"\n          label=\"Search\"\n          fullWidth\n          onChange={searchOnChange}\n          InputProps={{\n            inputRef: searchRef,\n            style: { height: \"27px\", fontSize: \"14px\" },\n            endAdornment: (\n              <InputAdornment position=\"end\">\n                <IconButton\n                  onClick={() => {\n                    onSearchKeyEnter(searchRef?.current?.value as string);\n                  }}\n                  edge=\"end\"\n                >\n                  <SearchIcon />\n                </IconButton>\n              </InputAdornment>\n            ),\n          }}\n          type=\"search\"\n          onKeyDown={(e) => {\n            if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n              e.preventDefault();\n              onSearchKeyEnter(searchRef?.current?.value as string);\n            }\n            keyBoardSelectionTable(\n              e,\n              mainId,\n              searchRef?.current as HTMLInputElement\n            );\n          }}\n          sx={{\n            marginBottom: \"10px\",\n            \".MuiFormLabel-root\": { fontSize: \"14px\" },\n            \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n          }}\n        />\n        <div\n          className={`${mainId} main-table-selection-container`}\n          style={{ position: \"relative\", height: `${height + 20}px` }}\n        >\n          <Table\n            isSingleSelection={true}\n            isRowFreeze={false}\n            columns={columns}\n            isLoading={isLoading}\n            dataSelection={(selection, data, code) => {\n              onSelectionChange(selection, data);\n            }}\n            table_id={id}\n            rows={rows}\n            isRowSelectable={isRowSelectable}\n            getCellClassName={getCellClassName}\n          />\n        </div>\n\n        <div style={{ position: \"absolute\", top: \"10px\", right: \"10px\" }}>\n          <IconButton\n            aria-label=\"search-client\"\n            color=\"secondary\"\n            onClick={onClickCloseIcon}\n          >\n            <CloseIcon />\n          </IconButton>\n        </div>\n      </Box>\n    </Modal>\n  );\n}\n\nexport function generateRandomClass() {\n  const randomNumber = Math.floor(Math.random() * 10000);\n  const randomClass = \"main-\" + randomNumber;\n  return randomClass;\n}\n\nfunction keyBoardUpDown(className: string, el: HTMLElement) {\n  const firstRowParent = document.querySelector(\n    `.${className} .MuiDataGrid-row`\n  );\n  const firstInput = firstRowParent?.querySelector(\"input\");\n  firstInput?.focus();\n  const event = new MouseEvent(\"mouseenter\", {\n    bubbles: true,\n    cancelable: true,\n    view: window,\n  });\n  firstRowParent?.dispatchEvent(event);\n  firstInput?.addEventListener(\"keydown\", (es: any) => {\n    if (es.key === \"ArrowUp\") {\n      es.preventDefault();\n      el.focus();\n    }\n    if (es.key === \"ArrowUp\") {\n      firstRowParent?.classList.remove(\"hover-keyboard\");\n    }\n  });\n}\n\nexport function keyBoardSelectionTable(\n  e: React.KeyboardEvent<HTMLDivElement>,\n  className: string,\n  el: HTMLElement\n) {\n  const mainId = className;\n  if (e.code === \"ArrowDown\") {\n    const rows = document.querySelectorAll(`.${mainId} .MuiDataGrid-row`);\n    e.preventDefault();\n    rows[0]?.classList.add(\"hover-keyboard\");\n    keyBoardUpDown(className, el);\n    rows.forEach((el, idx) => {\n      el.addEventListener(\"keydown\", (es: any) => {\n        if (es.key === \"ArrowUp\") {\n          if (idx <= 0) {\n            return;\n          }\n\n          es.preventDefault();\n          rows[idx]?.classList.remove(\"hover-keyboard\");\n          rows[idx - 1]?.classList.add(\"hover-keyboard\");\n          return;\n        }\n        if (es.key === \"ArrowDown\") {\n          es.preventDefault();\n          if (idx >= rows.length - 1) {\n            return;\n          }\n          rows[idx]?.classList.remove(\"hover-keyboard\");\n          rows[idx + 1]?.classList.add(\"hover-keyboard\");\n        }\n      });\n    });\n  }\n}\n","export function getTableCellHeight(\r\n  tempCell: HTMLTableCellElement,\r\n  content: string,\r\n  columnWidth: string,\r\n  contentElment: Element,\r\n  tempTable: HTMLTableElement\r\n) {\r\n  tempCell.style.width = columnWidth;\r\n  tempCell.textContent = content;\r\n  contentElment.appendChild(tempTable);\r\n}\r\n\r\nexport function defaultArrangeDataCore({\r\n  data,\r\n  column,\r\n  beforeArrangeData,\r\n  adjustMaxHeight,\r\n  fontSize = \"11px\",\r\n  summaryHeight = 0,\r\n}: {\r\n  data: any;\r\n  column: Array<any>;\r\n  beforeArrangeData: (itm: any) => any;\r\n  adjustMaxHeight: number;\r\n  fontSize: string;\r\n  summaryHeight?: number;\r\n}) {\r\n  const newData: Array<any> = [];\r\n  let trHeight = 0;\r\n  let temp: Array<any> = [];\r\n  const contentElment = document.querySelector(\".content\") as Element;\r\n  const maxHeight =\r\n    contentElment.getBoundingClientRect().height - adjustMaxHeight;\r\n\r\n  data.forEach((itm: any, idx: number) => {\r\n    itm = beforeArrangeData(itm);\r\n    const contentElment = document.querySelector(\".content\") as Element;\r\n    const tempTable = document.createElement(\"table\");\r\n    const tempRow = tempTable.insertRow();\r\n\r\n    if (itm.summaryReport) {\r\n      if (maxHeight - trHeight <= summaryHeight + 20) {\r\n        trHeight += maxHeight - trHeight;\r\n      }\r\n    }\r\n    column.forEach((col) => {\r\n      const tempCell = tempRow.insertCell();\r\n      tempTable.style.visibility = \"hidden\";\r\n      tempTable.style.width = `100%`;\r\n      tempTable.style.fontSize = fontSize;\r\n\r\n      getTableCellHeight(\r\n        tempCell,\r\n        itm[col.datakey],\r\n        col.width,\r\n        contentElment,\r\n        tempTable\r\n      );\r\n    });\r\n    trHeight += tempRow.getBoundingClientRect().height;\r\n    contentElment.removeChild(tempTable);\r\n    temp.push(itm);\r\n    if (\r\n      trHeight >= maxHeight ||\r\n      (idx === data.length - 1 && trHeight < maxHeight)\r\n    ) {\r\n      newData.push(temp);\r\n      trHeight = 0;\r\n      temp = [];\r\n    }\r\n  });\r\n\r\n  return newData;\r\n}\r\nexport const arrangeData = async ({\r\n  data,\r\n  column,\r\n  beforeArrangeData,\r\n  adjustMaxHeight,\r\n  cb,\r\n  fontSize = \"11px\",\r\n  summaryHeight,\r\n}: {\r\n  data: any;\r\n  column: Array<any>;\r\n  beforeArrangeData: (itm: any) => any;\r\n  adjustMaxHeight: number;\r\n  cb?: ({\r\n    data,\r\n    column,\r\n    beforeArrangeData,\r\n    adjustMaxHeight,\r\n  }: {\r\n    data: any;\r\n    column: Array<any>;\r\n    beforeArrangeData: (itm: any) => any;\r\n    adjustMaxHeight: number;\r\n  }) => any[];\r\n  fontSize?: string;\r\n  summaryHeight?: number;\r\n}) => {\r\n  if (data === undefined) return [];\r\n  if (cb) {\r\n    return cb({\r\n      data,\r\n      column,\r\n      beforeArrangeData,\r\n      adjustMaxHeight,\r\n    });\r\n  }\r\n\r\n  return defaultArrangeDataCore({\r\n    data,\r\n    column,\r\n    beforeArrangeData,\r\n    adjustMaxHeight,\r\n    fontSize,\r\n    summaryHeight,\r\n  });\r\n};\r\n","import {\n  useState,\n  useContext,\n  createContext,\n  ReactElement,\n  forwardRef,\n  useImperativeHandle,\n} from \"react\";\nimport { Box, LinearProgress } from \"@mui/material\";\nimport {\n  DataGrid,\n  GridSlotsComponentsProps,\n  gridPageCountSelector,\n  GridPagination,\n  useGridApiContext,\n  useGridSelector,\n  GridRowSelectionModel,\n  GridColDef,\n  GridRowParams,\n  GridCellParams,\n  GridTreeNode,\n} from \"@mui/x-data-grid\";\nimport { TablePaginationProps } from \"@mui/material/TablePagination\";\nimport MuiPagination from \"@mui/material/Pagination\";\n\ninterface TableProps {\n  isLoading: boolean;\n  columns: Array<any>;\n  rows: Array<any>;\n  table_id: string;\n  isSingleSelection: boolean;\n  isRowFreeze: boolean;\n  dataSelection?: (selection: any, data: any, code: string | null) => void;\n  CustomFooterComponent?: any;\n  isRowSelectable?: ((params: GridRowParams<any>) => boolean) | undefined;\n  getCellClassName?:\n    | ((params: GridCellParams<any, any, any, GridTreeNode>) => string)\n    | undefined;\n  footerChildren?: (\n    rowSelectionModel: GridRowSelectionModel,\n    rows: Array<any>\n  ) => ReactElement;\n  footerPaginationPosition?: string;\n  showFooterSelectedCount?: boolean;\n  checkboxSelection?: boolean | undefined;\n}\n\nconst TableContext = createContext<{\n  rowSelectionModel: GridRowSelectionModel;\n  rows: Array<any>;\n  footerPaginationPosition?: string;\n  showFooterSelectedCount?: boolean;\n  footerChildren: (\n    rowSelectionModel: GridRowSelectionModel,\n    rows: Array<any>\n  ) => ReactElement;\n}>({\n  rows: [],\n  rowSelectionModel: [],\n  footerChildren: () => <div></div>,\n  footerPaginationPosition: \"right-left\",\n  showFooterSelectedCount: true,\n});\nconst Table = forwardRef(\n  (\n    {\n      isLoading,\n      columns,\n      rows,\n      table_id,\n      isSingleSelection,\n      isRowFreeze,\n      dataSelection,\n      CustomFooterComponent = DefaultooterComponent,\n      isRowSelectable,\n      getCellClassName,\n      checkboxSelection = true,\n      footerChildren = (\n        rowSelectionModel: GridRowSelectionModel,\n        rows: Array<any>\n      ) => <div></div>,\n      footerPaginationPosition = \"right-left\",\n      showFooterSelectedCount = true,\n    }: TableProps,\n    ref\n  ) => {\n    const [selectedRows, setSelectedRows] = useState<any>([]);\n\n    useImperativeHandle(ref, () => ({\n      removeSelection: () => {\n        setSelectedRows([]);\n      },\n      getSelectedRows: () => {\n        return rows.filter((item: any) =>\n          selectedRows?.includes(item[table_id])\n        );\n      },\n      setSelectedRows: (data: Array<any>) => {\n        setSelectedRows(data);\n      },\n    }));\n\n    function onSelectionChange(selection: any, data: any, code: string | null) {\n      if (dataSelection) {\n        dataSelection(selection, data, code);\n      }\n    }\n    let freezeArray: Array<any> = [];\n\n    return (\n      <TableContext.Provider\n        value={{\n          showFooterSelectedCount,\n          footerPaginationPosition,\n          rowSelectionModel: selectedRows,\n          rows,\n          footerChildren,\n        }}\n      >\n        <DataGrid\n          slots={{\n            loadingOverlay: LinearProgress,\n            footer: CustomFooterComponent,\n          }}\n          initialState={{\n            pagination: { paginationModel: { pageSize: 35 } },\n          }}\n          loading={isLoading}\n          getRowId={(row) => row[table_id]}\n          columns={columns.filter((col: any) => !col.hide) as GridColDef<any>[]}\n          rows={rows}\n          showCellVerticalBorder={true}\n          showColumnVerticalBorder={true}\n          checkboxSelection={checkboxSelection}\n          rowSelectionModel={selectedRows}\n          rowHeight={25}\n          columnHeaderHeight={35}\n          pageSizeOptions={[10, 20, 35, 50, 75, 100]}\n          sx={{\n            \"& .cash\": {\n              color: \"#ec4899\",\n            },\n            \"& .check\": {\n              color: \"#0891b2\",\n            },\n            \"& .approved\": {\n              color: \"green\",\n            },\n            \"& .pending\": {\n              color: \"orange\",\n            },\n            \"& .disapproved\": {\n              color: \"red\",\n            },\n            \"& .normal\": {\n              color: \"red\",\n            },\n            \"& .MuiDataGrid-row.Mui-selected:hover\": {\n              color: \"black\",\n              \"& .MuiSvgIcon-root \": {\n                fill: \"#3b82f6\",\n              },\n            },\n            \"& .hover-keyboard\": {\n              background: \"#2563eb\",\n              color: \"white\",\n              \"& .MuiSvgIcon-root \": {\n                fill: \"white\",\n              },\n            },\n            \"& .MuiDataGrid-row:hover\": {\n              background: \"#2563eb\",\n              color: \"white\",\n              \"& .MuiSvgIcon-root \": {\n                fill: \"white\",\n              },\n            },\n            \"& .MuiDataGrid-row.hover\": {\n              background: \"#2563eb\",\n              color: \"white\",\n              \"& .MuiSvgIcon-root \": {\n                fill: \"white\",\n              },\n            },\n            \"& .MuiTablePagination-root p \": {\n              padding: \"0 !important\",\n            },\n\n            ...{\n              \"& .MuiDataGrid-columnHeaders\": {\n                background: \"#64748b\",\n                color: \"white\",\n                fontSize: \"14px\",\n                // borderBottomColor: \"#38bdf8\",\n              },\n              \"& .MuiDataGrid-columnHeaderCheckbox .MuiDataGrid-columnHeaderTitleContainer .MuiSvgIcon-root \":\n                {\n                  display: isSingleSelection || isRowFreeze ? \"none\" : \"block\",\n                  fill: \"white\",\n                },\n              \"& .MuiDataGrid-columnHeaderCheckbox .MuiDataGrid-columnHeaderTitleContainer input \":\n                {\n                  display: isSingleSelection || isRowFreeze ? \"none\" : \"block\",\n                },\n            },\n            ...{\n              fontSize: 13,\n              fontWeight: 500,\n              \"& .MuiDataGrid-checkboxInput\": {\n                height: \"27px\",\n                width: \"27px\",\n              },\n              \"& .MuiDataGrid-checkboxInput svg\": {\n                height: \"20px\",\n                width: \"20px\",\n              },\n            },\n          }}\n          // onRowDoubleClick={(e, r) => {\n          //   console.log(e, r);\n          // }}\n\n          onRowSelectionModelChange={(selection) => {\n            if (isRowFreeze) {\n              if (selection.length <= 0) return;\n              freezeArray = selection;\n              if (selectedRows.includes(freezeArray[freezeArray.length - 1]))\n                return;\n\n              setSelectedRows(selection);\n\n              onSelectionChange([selection[selection.length - 1]], rows, null);\n              return;\n            }\n\n            if (!isRowFreeze && isSingleSelection) {\n              if (selectedRows && selectedRows?.length > 0) {\n                const selectionSet = new Set(selectedRows);\n                setSelectedRows(\n                  selection.filter((s: any) => !selectionSet.has(s))\n                );\n              } else {\n                setSelectedRows(selection);\n              }\n            } else {\n              setSelectedRows(selection);\n            }\n\n            onSelectionChange([selection[selection.length - 1]], rows, null);\n          }}\n          onCellKeyDown={(__: any, key: any) => {\n            const keyFinding = [\"NumpadEnter\", \"Enter\", \"Delete\", \"Backspace\"];\n            if (!keyFinding.includes(key.code)) {\n              return;\n            }\n            key.preventDefault();\n            if (key.code === \"Enter\" || key.code === \"NumpadEnter\") {\n              if (isSingleSelection && !isRowFreeze) {\n                return setSelectedRows((data: any) => {\n                  if (data && data.length > 0 && data[0] === __.rowNode.id) {\n                    onSelectionChange([], rows, key.code);\n                    return [];\n                  }\n                  onSelectionChange([__.rowNode.id], rows, key.code);\n                  return [__.rowNode.id];\n                });\n              } else {\n                setSelectedRows((data: any) => {\n                  if (\n                    data &&\n                    !isRowFreeze &&\n                    data.length > 0 &&\n                    data.includes(__.rowNode.id)\n                  ) {\n                    data = data.filter((item: any) => item !== __.rowNode.id);\n                    onSelectionChange([], rows, key.code);\n                    return data;\n                  }\n                  if (\n                    data &&\n                    isRowFreeze &&\n                    data.length > 0 &&\n                    data.includes(__.rowNode.id)\n                  ) {\n                    return data;\n                  }\n                  onSelectionChange([__.rowNode.id], rows, key.code);\n                  return [...data, __.rowNode.id];\n                });\n              }\n              return;\n            }\n            if (key.code === \"Delete\" || key.code === \"Backspace\") {\n              setSelectedRows([__.rowNode.id]);\n              return onSelectionChange([__.rowNode.id], rows, key.code);\n            }\n          }}\n          disableVirtualization\n          isRowSelectable={isRowSelectable}\n          getCellClassName={getCellClassName}\n        />\n      </TableContext.Provider>\n    );\n  }\n);\n\nexport default Table;\nfunction Pagination({\n  page,\n  onPageChange,\n  className,\n}: Pick<TablePaginationProps, \"page\" | \"onPageChange\" | \"className\">) {\n  const apiRef = useGridApiContext();\n  const pageCount = useGridSelector(apiRef, gridPageCountSelector);\n\n  return (\n    <MuiPagination\n      variant=\"outlined\"\n      color=\"primary\"\n      className={className}\n      count={pageCount}\n      page={page + 1}\n      onChange={(event, newPage) => {\n        onPageChange(event as any, newPage - 1);\n      }}\n    />\n  );\n}\n\nfunction CustomPagination(props: any) {\n  return <GridPagination ActionsComponent={Pagination} {...props} />;\n}\nfunction DefaultooterComponent(\n  props: NonNullable<GridSlotsComponentsProps[\"footer\"]>\n) {\n  const {\n    rowSelectionModel,\n    showFooterSelectedCount,\n    footerPaginationPosition,\n    footerChildren,\n    rows,\n  } = useContext(TableContext);\n  return (\n    <Box\n      sx={{\n        columnGap: \"50px\",\n        display: \"flex\",\n        width: \"100%\",\n        justifyContent: \"space-between\",\n        px: 3,\n        alignItems: \"center\",\n        flexDirection:\n          footerPaginationPosition === \"right-left\" ? \"row-reverse\" : \"row\",\n      }}\n    >\n      <CustomPagination {...props} />\n      <Box\n        sx={{\n          display: \"flex\",\n          justifyContent:\n            footerPaginationPosition === \"right-left\"\n              ? \"flex-start\"\n              : \"flex-end\",\n          flex: 1,\n          alignItems: \"center\",\n        }}\n      >\n        {showFooterSelectedCount && (\n          <div>Selected:{rowSelectionModel?.length}</div>\n        )}\n        <div>{footerChildren(rowSelectionModel, rows)}</div>\n      </Box>\n    </Box>\n  );\n}\n","import React, { useContext, useEffect, useRef } from \"react\";\r\nimport { AuthContext } from \"../../../../components/AuthContext\";\r\nimport PrintPreview, {\r\n  columnSelection,\r\n  copiedByHeaderOnDoubleClick,\r\n} from \"../../../../components/PrintPreview/PrintPreview\";\r\nimport { arrangeData } from \"../../../../components/PrintPreview/dataCore\";\r\nimport {\r\n  Box,\r\n  FormControl,\r\n  IconButton,\r\n  InputAdornment,\r\n  InputLabel,\r\n  MenuItem,\r\n  OutlinedInput,\r\n  Select,\r\n  TextField,\r\n} from \"@mui/material\";\r\nimport { DatePicker, LocalizationProvider } from \"@mui/x-date-pickers\";\r\nimport { AdapterDateFns } from \"@mui/x-date-pickers/AdapterDateFns\";\r\nimport CustomDatePicker from \"../../../../components/DatePicker\";\r\nimport useQueryModalTable from \"../../../../hooks/useQueryModalTable\";\r\nimport { LoadingButton } from \"@mui/lab\";\r\nimport PersonSearchIcon from \"@mui/icons-material/PersonSearch\";\r\n\r\nconst claimsStatus = [\r\n  \"With Offer Letter\",\r\n  \"With Lacking Documents\",\r\n  \"With LOA\",\r\n  \"Submitted to Insurance Company\",\r\n  \"For Evaluation\",\r\n  \"For Inspection\",\r\n  \"For Check Prep\",\r\n  \"Denied\",\r\n  \"Done\",\r\n  \"\",\r\n];\r\nconst claimType = [\r\n  \"OWN DAMAGE\",\r\n  \"LOST/CARNAP\",\r\n  \"VTPL-PROPERTY DAMAGE\",\r\n  \"VTPL-BODILY INJURY\",\r\n  \"THIRD PARTY-DEATH\",\r\n];\r\nconst column = [\r\n  { datakey: \"AssuredName\", header: \"Name of Clients\", width: \"400px\" },\r\n  { datakey: \"UnitInsured\", header: \"Unit Insured\", width: \"400px\" },\r\n  { datakey: \"PolicyNo\", header: \"Policy No.\", width: \"160px\" },\r\n  { datakey: \"ChassisNo\", header: \"Chassis No.\", width: \"160px\" },\r\n  { datakey: \"PlateNo\", header: \"Plate No.\", width: \"160px\" },\r\n  { datakey: \"DateReceived\", header: \"Date Received\", width: \"130px\" },\r\n  { datakey: \"DateClaim\", header: \"Date Claim\", width: \"130px\" },\r\n  { datakey: \"claim_type\", header: \"Claim Type\", width: \"230px\" },\r\n  {\r\n    datakey: \"AmountClaim\",\r\n    header: \"Amount Claim\",\r\n    width: \"160px\",\r\n    type: \"number\",\r\n  },\r\n  {\r\n    datakey: \"AmountApproved\",\r\n    header: \"Amount Approved\",\r\n    width: \"160px\",\r\n    type: \"number\",\r\n  },\r\n  {\r\n    datakey: \"dateInspected\",\r\n    header: \"Date Inspected\",\r\n    width: \"130px\",\r\n  },\r\n  { datakey: \"NameTPPD\", header: \"Name TPPD\", width: \"300px\" },\r\n  { datakey: \"status\", header: \"Status\", width: \"230px\" },\r\n];\r\nfunction Setting({ state, dispatch }: { state: any; dispatch: any }) {\r\n  const policySearchInputRef = useRef<HTMLInputElement>(null);\r\n\r\n  useEffect(() => {\r\n    dispatch({\r\n      type: \"UPDATE_FIELD\",\r\n      field: \"title\",\r\n      value: setupTitle(state),\r\n    });\r\n  }, [state, dispatch]);\r\n\r\n  const {\r\n    ModalComponent: PolicyModal,\r\n    isLoading: isLoadingPolicyModal,\r\n    openModal: openPolicyModal,\r\n    closeModal: closePolicyModal,\r\n  } = useQueryModalTable({\r\n    link: {\r\n      url: \"/task/claims/claims/get-policy\",\r\n      queryUrlName: \"searchPolicy\",\r\n    },\r\n    columns: [\r\n      { field: \"PolicyNo\", headerName: \"Policy No.\", width: 300 },\r\n      { field: \"AssuredName\", headerName: \"Name.\", width: 350 },\r\n      { field: \"IDNo\", headerName: \"ID No..\", width: 200 },\r\n    ],\r\n    queryKey: \"get-policy\",\r\n    uniqueId: \"PolicyNo\",\r\n    responseDataKey: \"claimPolicy\",\r\n    onSelected: (selectedRowData) => {\r\n      handleInputChange({\r\n        target: {\r\n          name: \"PolicyNo\",\r\n          value: selectedRowData[0].PolicyNo,\r\n        },\r\n      });\r\n      handleInputChange({\r\n        target: {\r\n          name: \"AssuredName\",\r\n          value: selectedRowData[0].AssuredName,\r\n        },\r\n      });\r\n      closePolicyModal();\r\n    },\r\n    searchRef: policySearchInputRef,\r\n  });\r\n\r\n  const handleInputChange = (e: any) => {\r\n    const { name, value } = e.target;\r\n    dispatch({ type: \"UPDATE_FIELD\", field: name, value });\r\n  };\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        padding: \"10px\",\r\n      }}\r\n    >\r\n      <TextField\r\n        label=\"Title\"\r\n        fullWidth\r\n        name=\"title\"\r\n        value={state.title}\r\n        onChange={handleInputChange}\r\n        rows={6}\r\n        multiline\r\n        InputProps={{\r\n          style: { height: \"140px\", fontSize: \"12px\" },\r\n        }}\r\n        sx={{\r\n          flex: 1,\r\n          \".MuiFormLabel-root\": { fontSize: \"14px\" },\r\n          \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\r\n        }}\r\n      />\r\n      <Box\r\n        sx={(theme) => ({\r\n          height: \"100%\",\r\n          display: \"grid\",\r\n          gridTemplateColumns: \"repeat(2,1fr)\",\r\n          gap: \"10px\",\r\n          margin: \"10px 0\",\r\n          [theme.breakpoints.down(\"sm\")]: {\r\n            gridTemplateColumns: \"repeat(1,1fr)\",\r\n          },\r\n        })}\r\n      >\r\n        <FormControl\r\n          fullWidth\r\n          variant=\"outlined\"\r\n          size=\"small\"\r\n          sx={{\r\n            \".MuiFormLabel-root\": {\r\n              fontSize: \"14px\",\r\n              background: \"white\",\r\n              zIndex: 99,\r\n              padding: \"0 3px\",\r\n            },\r\n            \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\r\n          }}\r\n        >\r\n          <InputLabel id=\"status\">Status</InputLabel>\r\n          <Select\r\n            labelId=\"status\"\r\n            value={state.status}\r\n            label=\"Status\"\r\n            name=\"status\"\r\n            onChange={(e) => {\r\n              handleInputChange(e);\r\n            }}\r\n            sx={{\r\n              height: \"27px\",\r\n              fontSize: \"14px\",\r\n            }}\r\n          >\r\n            <MenuItem value={0}>All</MenuItem>\r\n            <MenuItem value={1}>Ongoing</MenuItem>\r\n            <MenuItem value={2}>Denied</MenuItem>\r\n            <MenuItem value={3}>Done</MenuItem>\r\n          </Select>\r\n        </FormControl>\r\n        <FormControl\r\n          fullWidth\r\n          variant=\"outlined\"\r\n          size=\"small\"\r\n          sx={{\r\n            \".MuiFormLabel-root\": {\r\n              fontSize: \"14px\",\r\n              background: \"white\",\r\n              zIndex: 99,\r\n              padding: \"0 3px\",\r\n            },\r\n            \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\r\n          }}\r\n        >\r\n          <InputLabel id=\"report\">Report</InputLabel>\r\n          <Select\r\n            labelId=\"report\"\r\n            value={state.format}\r\n            label=\"Report\"\r\n            name=\"format\"\r\n            onChange={(e) => {\r\n              handleInputChange(e);\r\n            }}\r\n            sx={{\r\n              height: \"27px\",\r\n              fontSize: \"14px\",\r\n            }}\r\n          >\r\n            <MenuItem value={0}>Date Created</MenuItem>\r\n            <MenuItem value={2}>Date Claim</MenuItem>\r\n            <MenuItem value={3}>Date Inspected</MenuItem>\r\n            <MenuItem value={4}>Date Received</MenuItem>\r\n            <MenuItem value={5}>Claim Type</MenuItem>\r\n            <MenuItem value={6}>Policy No.</MenuItem>\r\n          </Select>\r\n        </FormControl>\r\n        {state.format === 5 ? (\r\n          <FormControl\r\n            sx={{\r\n              width: \"100%\",\r\n              marginRight: \"10px\",\r\n              \".MuiFormLabel-root\": {\r\n                fontSize: \"14px\",\r\n                background: \"white\",\r\n                zIndex: 99,\r\n                padding: \"0 3px\",\r\n              },\r\n              \".MuiFormLabel-root[data-shrink=false]\": { top: \"-12px\" },\r\n            }}\r\n          >\r\n            <InputLabel id=\"claim-type\">Claim Types</InputLabel>\r\n            <Select\r\n              labelId=\"claim-type\"\r\n              value={state.claim_type}\r\n              onChange={handleInputChange}\r\n              label=\"Claim Types\"\r\n              size=\"small\"\r\n              name=\"claim_type\"\r\n              sx={{\r\n                height: \"27px\",\r\n                fontSize: \"14px\",\r\n              }}\r\n            >\r\n              {claimType.map((itm, idx) => {\r\n                return (\r\n                  <MenuItem key={idx} value={idx}>\r\n                    {itm}\r\n                  </MenuItem>\r\n                );\r\n              })}\r\n            </Select>\r\n          </FormControl>\r\n        ) : state.format === 6 ? (\r\n          <>\r\n            {isLoadingPolicyModal ? (\r\n              <LoadingButton loading={isLoadingPolicyModal} />\r\n            ) : (\r\n              <FormControl\r\n                sx={{\r\n                  gridColumn: \"1/ span 2\",\r\n                  width: \"100%\",\r\n                  \".MuiFormLabel-root\": {\r\n                    fontSize: \"14px\",\r\n                    background: \"white\",\r\n                    zIndex: 99,\r\n                    padding: \"0 3px\",\r\n                  },\r\n                  \".MuiFormLabel-root[data-shrink=false]\": {\r\n                    top: \"-5px\",\r\n                  },\r\n                }}\r\n                variant=\"outlined\"\r\n                size=\"small\"\r\n              >\r\n                <InputLabel htmlFor=\"policy-no\">Policy No.</InputLabel>\r\n                <OutlinedInput\r\n                  sx={{\r\n                    height: \"27px\",\r\n                    fontSize: \"14px\",\r\n                    legend: {\r\n                      background: \"red\",\r\n                    },\r\n                  }}\r\n                  inputRef={policySearchInputRef}\r\n                  name=\"PolicyNo\"\r\n                  value={state.PolicyNo}\r\n                  onChange={handleInputChange}\r\n                  id=\"policy-no\"\r\n                  onKeyDown={(e) => {\r\n                    if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\r\n                      return openPolicyModal(state.PolicyNo);\r\n                    }\r\n                  }}\r\n                  endAdornment={\r\n                    <InputAdornment position=\"end\">\r\n                      <IconButton\r\n                        onClick={() => {\r\n                          openPolicyModal(state.PolicyNo);\r\n                        }}\r\n                        edge=\"end\"\r\n                        color=\"secondary\"\r\n                      >\r\n                        <PersonSearchIcon />\r\n                      </IconButton>\r\n                    </InputAdornment>\r\n                  }\r\n                  label=\"Policy No.\"\r\n                />\r\n              </FormControl>\r\n            )}\r\n            <TextField\r\n              name=\"AssuredName\"\r\n              label=\"Assured Name\"\r\n              size=\"small\"\r\n              value={state.AssuredName}\r\n              onChange={handleInputChange}\r\n              InputProps={{\r\n                style: {\r\n                  height: \"27px\",\r\n                  fontSize: \"14px\",\r\n                  color: \"whie\",\r\n                },\r\n                readOnly: true,\r\n              }}\r\n              sx={{\r\n                gridColumn: \"1/ span 2\",\r\n                width: \"100%\",\r\n                \".MuiFormLabel-root\": { fontSize: \"14px\" },\r\n                \".MuiFormLabel-root[data-shrink=false]\": {\r\n                  top: \"-5px\",\r\n                },\r\n              }}\r\n            />\r\n          </>\r\n        ) : (\r\n          <>\r\n            <FormControl\r\n              fullWidth\r\n              variant=\"outlined\"\r\n              size=\"small\"\r\n              sx={{\r\n                \".MuiFormLabel-root\": {\r\n                  fontSize: \"14px\",\r\n                  background: \"white\",\r\n                  zIndex: 99,\r\n                  padding: \"0 3px\",\r\n                },\r\n                \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\r\n              }}\r\n            >\r\n              <InputLabel id=\"dateFormat_id\">Date Format</InputLabel>\r\n              <Select\r\n                id=\"dateFormat_id\"\r\n                label=\"Date Format\"\r\n                value={state.dateFormat}\r\n                name=\"dateFormat\"\r\n                onChange={handleInputChange}\r\n                sx={{\r\n                  height: \"27px\",\r\n                  fontSize: \"14px\",\r\n                }}\r\n              >\r\n                <MenuItem value={\"Monthly\"}>Monthly</MenuItem>\r\n                <MenuItem value={\"Yearly\"}>Yearly</MenuItem>\r\n                <MenuItem value={\"Custom\"}>Custom</MenuItem>\r\n              </Select>\r\n            </FormControl>\r\n            <ShowDateSelection\r\n              dispatch={dispatch}\r\n              state={state}\r\n              handleInputChange={handleInputChange}\r\n            />\r\n          </>\r\n        )}\r\n\r\n        {PolicyModal}\r\n      </Box>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default function ClaimsReport() {\r\n  const initialState = {\r\n    format: 0,\r\n    dateFormat: \"Monthly\",\r\n    dateFrom: new Date(),\r\n    dateTo: new Date(),\r\n    yearCount: new Date().getFullYear().toString().slice(-2),\r\n    title: \"\",\r\n    PolicyNo: \"\",\r\n    AssuredName: \"\",\r\n    claim_type: 0,\r\n    status: 0,\r\n  };\r\n  initialState.title = setupTitle(initialState);\r\n  const { myAxios, user } = useContext(AuthContext);\r\n  async function fetchTable(setData: any, setLoading: any, state: any) {\r\n    const response = await myAxios.post(\r\n      \"/task/claims/claims/report-claim\",\r\n      state,\r\n      {\r\n        headers: {\r\n          Authorization: `Bearer ${user?.accessToken}`,\r\n        },\r\n      }\r\n    );\r\n    const jsonData = await response.data;\r\n    arrangeData({\r\n      data: jsonData.report,\r\n      column,\r\n      beforeArrangeData: (itm) => {\r\n        const claimsStatusSorted = claimsStatus.sort();\r\n        if (\r\n          (itm.status === \"\" ||\r\n            itm.status === null ||\r\n            itm.status === undefined) &&\r\n          itm.header === \"0\"\r\n        ) {\r\n          itm.status = \"---\";\r\n        } else {\r\n          itm.status = claimsStatusSorted[parseInt(itm.status?.toString()) -1];\r\n        }\r\n        itm.claim_type = claimType[parseInt(itm.claim_type?.toString())];\r\n        if (itm.header === \"0\") {\r\n          itm.AmountClaim = parseFloat(\r\n            itm.AmountClaim.replace(/,/g, \"\")\r\n          ).toLocaleString(\"en-US\", {\r\n            minimumFractionDigits: 2,\r\n            maximumFractionDigits: 2,\r\n          });\r\n          itm.AmountApproved = parseFloat(\r\n            itm.AmountApproved.replace(/,/g, \"\")\r\n          ).toLocaleString(\"en-US\", {\r\n            minimumFractionDigits: 2,\r\n            maximumFractionDigits: 2,\r\n          });\r\n        }\r\n        return itm;\r\n      },\r\n      fontSize: \"16px\",\r\n      adjustMaxHeight: 200,\r\n    }).then((newData) => {\r\n      setData(newData);\r\n      setLoading(false);\r\n    });\r\n  }\r\n\r\n  return (\r\n    <PrintPreview\r\n      column={column}\r\n      initialState={initialState}\r\n      Setting={(state, dispatch) => (\r\n        <Setting state={state} dispatch={dispatch} />\r\n      )}\r\n      onReportSubmit={fetchTable}\r\n      scaleDefaultValue={80}\r\n      drawTable={(data, state) => {\r\n        return data.map((pages: any, pageNumber: number) => {\r\n          return (\r\n            <div className=\"page out-page\" key={pageNumber}>\r\n              <div className=\"header\" style={{ height: \"50px\" }}></div>\r\n              <div className=\"content\">\r\n                <table>\r\n                  <thead>\r\n                    {state.title.split(\"\\n\").map((t: string, idx: number) => {\r\n                      return (\r\n                        <tr key={idx}>\r\n                          <th\r\n                            style={{\r\n                              fontSize: \"15px\",\r\n                              fontWeight: \"bold\",\r\n                              textAlign: \"left\",\r\n                            }}\r\n                            colSpan={column.length}\r\n                          >\r\n                            {t}\r\n                          </th>\r\n                        </tr>\r\n                      );\r\n                    })}\r\n                    <tr style={{ height: \"40px\" }}></tr>\r\n                    <tr style={{ borderBottom: \"1px solid black\" }}>\r\n                      {column.map((itm: any, rowIdx: number) => {\r\n                        return (\r\n                          <th\r\n                            onDoubleClick={(e) =>\r\n                              copiedByHeaderOnDoubleClick(e, itm.datakey, data)\r\n                            }\r\n                            style={{\r\n                              width: itm.width,\r\n                              fontSize: \"15px\",\r\n                              fontWeight: \"bold\",\r\n                            }}\r\n                            key={rowIdx}\r\n                          >\r\n                            {itm.header}\r\n                          </th>\r\n                        );\r\n                      })}\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    {pages.map((rowItem: any, rowIdx: number) => {\r\n                      return (\r\n                        <React.Fragment key={rowIdx}>\r\n                          {rowItem.header === \"1\" && (\r\n                            <tr\r\n                              style={{ height: rowIdx === 0 ? \"10px\" : \"30px\" }}\r\n                            ></tr>\r\n                          )}\r\n                          <tr>\r\n                            {column.map((colItem: any, colIdx: number) => {\r\n                              return (\r\n                                <td\r\n                                  onClick={columnSelection}\r\n                                  className={`editable not-looking  page-${pageNumber} row-${rowIdx}_col-${colIdx}`}\r\n                                  key={colIdx}\r\n                                  style={{\r\n                                    fontSize:\r\n                                      rowItem.header === \"1\" ? \"15px\" : \"14px\",\r\n                                    fontWeight:\r\n                                      rowItem.header === \"1\" ? \"700\" : \"500\",\r\n                                    paddingLeft:\r\n                                      colItem.datakey === \"AssuredName\" &&\r\n                                      rowItem.header === \"0\"\r\n                                        ? \"50px\"\r\n                                        : \"\",\r\n                                    width: `${colItem.width} !important`,\r\n                                    textAlign:\r\n                                      rowItem[colItem.datakey] === \"---\"\r\n                                        ? \"center\"\r\n                                        : colItem.type === \"number\"\r\n                                        ? \"right\"\r\n                                        : \"left\",\r\n                                  }}\r\n                                >\r\n                                  {rowItem[colItem.datakey]}\r\n                                </td>\r\n                              );\r\n                            })}\r\n                          </tr>\r\n                        </React.Fragment>\r\n                      );\r\n                    })}\r\n                  </tbody>\r\n                </table>\r\n              </div>\r\n              <div\r\n                className=\"footer\"\r\n                style={{\r\n                  height: \"50px\",\r\n                  display: \"flex\",\r\n                  justifyContent: \"space-between\",\r\n                }}\r\n              >\r\n                <p style={{ fontSize: \"12px\", fontWeight: \"bold\" }}>\r\n                  01/01/2024\r\n                </p>\r\n                <p style={{ fontSize: \"12px\", fontWeight: \"bold\" }}>\r\n                  Page {pageNumber + 1} of {data.length}\r\n                </p>\r\n              </div>\r\n            </div>\r\n          );\r\n        });\r\n      }}\r\n      pageHeight={\"11in\"}\r\n      pageWidth={\"14in\"}\r\n    />\r\n  );\r\n}\r\n\r\nfunction setupTitle(state: any) {\r\n  return `UPWARD MANAGEMENT INSURANCE SERVICES\\nClaims Report (${DateToStringFormat(\r\n    state\r\n  )})\r\n`;\r\n}\r\nfunction DateToStringFormat(state: any) {\r\n  let dateString = \"\";\r\n  if (state.dateFormat === \"Daily\") {\r\n    dateString = state.dateFrom.toLocaleDateString(\"en-US\", {\r\n      year: \"numeric\",\r\n      month: \"long\",\r\n      day: \"numeric\",\r\n    });\r\n  } else if (state.dateFormat === \"Monthly\") {\r\n    dateString = state.dateFrom.toLocaleDateString(\"en-US\", {\r\n      year: \"numeric\",\r\n      month: \"long\",\r\n    });\r\n  } else if (state.dateFormat === \"Yearly\") {\r\n    const year = new Date(state.dateFrom).getFullYear();\r\n    const { startYearFormatted, endYearFormatted } = formatYearRange(\r\n      year,\r\n      parseInt(state.yearCount)\r\n    );\r\n    dateString = `${startYearFormatted}-${endYearFormatted}`;\r\n  } else {\r\n    const dateFrom = state.dateFrom.toLocaleDateString(\"en-US\", {\r\n      month: \"long\",\r\n      day: \"numeric\",\r\n    });\r\n    const dateTo = state.dateTo.toLocaleDateString(\"en-US\", {\r\n      year: \"numeric\",\r\n      month: \"long\",\r\n      day: \"numeric\",\r\n    });\r\n    dateString = `${dateFrom} - ${dateTo}`;\r\n  }\r\n\r\n  return dateString;\r\n}\r\nfunction formatYearRange(startYear: number, yearCount: number) {\r\n  const startDate = new Date(startYear, 0, 1); // Month is 0-based, so 0 is January\r\n  const endDate = new Date(startYear + yearCount, 11, 31); // Last day of the last year\r\n\r\n  const startYearFormatted = startDate.getFullYear();\r\n  const endYearFormatted = endDate.getFullYear();\r\n\r\n  if (endYearFormatted < startYearFormatted) {\r\n    return {\r\n      startYearFormatted: endYearFormatted,\r\n      endYearFormatted: startYearFormatted,\r\n    };\r\n  } else {\r\n    return {\r\n      startYearFormatted,\r\n      endYearFormatted,\r\n    };\r\n  }\r\n}\r\nfunction ShowDateSelection({ state, dispatch, handleInputChange }: any) {\r\n  const dateFromRef = useRef<HTMLElement>(null);\r\n  const dateToRef = useRef<HTMLElement>(null);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {state.dateFormat === \"Custom\" && (\r\n        <React.Fragment>\r\n          <CustomDatePicker\r\n            fullWidth={true}\r\n            label=\"Date From\"\r\n            onChange={(value: any) => {\r\n              dispatch({\r\n                type: \"UPDATE_FIELD\",\r\n                field: \"dateFrom\",\r\n                value: value,\r\n              });\r\n            }}\r\n            value={new Date(state.dateFrom)}\r\n            onKeyDown={(e: any) => {\r\n              if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\r\n                const timeout = setTimeout(() => {\r\n                  dateFromRef.current?.querySelector(\"button\")?.click();\r\n                  clearTimeout(timeout);\r\n                }, 150);\r\n              }\r\n            }}\r\n            datePickerRef={dateFromRef}\r\n            textField={{\r\n              InputLabelProps: {\r\n                style: {\r\n                  fontSize: \"14px\",\r\n                },\r\n              },\r\n              InputProps: {\r\n                style: { height: \"27px\", fontSize: \"14px\" },\r\n              },\r\n            }}\r\n          />\r\n          <CustomDatePicker\r\n            fullWidth={true}\r\n            label=\"Date To\"\r\n            onChange={(value: any) => {\r\n              dispatch({\r\n                type: \"UPDATE_FIELD\",\r\n                field: \"dateTo\",\r\n                value: value,\r\n              });\r\n            }}\r\n            value={new Date(state.dateTo)}\r\n            onKeyDown={(e: any) => {\r\n              if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\r\n                const timeout = setTimeout(() => {\r\n                  dateToRef.current?.querySelector(\"button\")?.click();\r\n                  clearTimeout(timeout);\r\n                }, 150);\r\n              }\r\n            }}\r\n            datePickerRef={dateToRef}\r\n            textField={{\r\n              InputLabelProps: {\r\n                style: {\r\n                  fontSize: \"14px\",\r\n                },\r\n              },\r\n              InputProps: {\r\n                style: { height: \"27px\", fontSize: \"14px\" },\r\n              },\r\n            }}\r\n          />\r\n        </React.Fragment>\r\n      )}\r\n\r\n      <LocalizationProvider dateAdapter={AdapterDateFns}>\r\n        {state.dateFormat === \"Monthly\" && (\r\n          <DatePicker\r\n            sx={{\r\n              width: \"100%\",\r\n              \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\r\n            }}\r\n            slotProps={{\r\n              textField: {\r\n                size: \"small\",\r\n                name: \"\",\r\n                InputLabelProps: {\r\n                  style: {\r\n                    fontSize: \"14px\",\r\n                  },\r\n                },\r\n                InputProps: {\r\n                  style: { height: \"27px\", fontSize: \"14px\" },\r\n                },\r\n              },\r\n            }}\r\n            label={\"Date\"}\r\n            views={[\"month\", \"year\"]}\r\n            value={state.dateFrom}\r\n            onChange={(value) => {\r\n              dispatch({\r\n                type: \"UPDATE_FIELD\",\r\n                field: \"dateFrom\",\r\n                value: value,\r\n              });\r\n            }}\r\n          />\r\n        )}\r\n        {state.dateFormat === \"Yearly\" && (\r\n          <React.Fragment>\r\n            <DatePicker\r\n              sx={{\r\n                width: \"100%\",\r\n                \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\r\n              }}\r\n              slotProps={{\r\n                textField: {\r\n                  size: \"small\",\r\n                  name: \"\",\r\n                  inputRef: dateFromRef,\r\n                  InputLabelProps: {\r\n                    style: {\r\n                      fontSize: \"14px\",\r\n                    },\r\n                  },\r\n                  InputProps: {\r\n                    style: { height: \"27px\", fontSize: \"14px\" },\r\n                  },\r\n                },\r\n              }}\r\n              label={\"Date\"}\r\n              views={[\"year\"]}\r\n              value={state.dateFrom}\r\n              onChange={(value) => {\r\n                dispatch({\r\n                  type: \"UPDATE_FIELD\",\r\n                  field: \"dateFrom\",\r\n                  value: value,\r\n                });\r\n              }}\r\n            />\r\n            <TextField\r\n              type=\"number\"\r\n              label=\"Year Count\"\r\n              name=\"yearCount\"\r\n              value={state.yearCount}\r\n              onChange={handleInputChange}\r\n              InputProps={{\r\n                style: { height: \"27px\", fontSize: \"12px\" },\r\n              }}\r\n              sx={{\r\n                flex: 1,\r\n                \".MuiFormLabel-root\": { fontSize: \"14px\" },\r\n                \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\r\n              }}\r\n            />\r\n          </React.Fragment>\r\n        )}\r\n      </LocalizationProvider>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import { useContext, useState } from \"react\";\nimport { useQuery } from \"react-query\";\nimport { AuthContext, User } from \"../components/AuthContext\";\nimport {\n  GridRowSelectionModel,\n  GridCellParams,\n  GridTreeNode,\n} from \"@mui/x-data-grid\";\nimport ModalWithTable from \"../components/ModalWithTable\";\nimport { flushSync } from \"react-dom\";\nimport { AxiosResponse, AxiosInstance } from \"axios\";\nimport { GridRowParams } from \"@mui/x-data-grid\";\ninterface QueryModalTableParamsType {\n  link?: {\n    url: string;\n    queryUrlName: string;\n  };\n  uniqueId: string;\n  queryKey: string;\n  responseDataKey: string;\n  columns: Array<any>;\n  onSelected?: (selectedRowData: Array<any>, data: Array<any>) => void;\n  onRemoveSelected?: (data: Array<any>) => void;\n  onSuccess?: (data: any) => void;\n  searchRef?: React.RefObject<HTMLInputElement>;\n  onCellKeyDown?: any;\n  onCloseFunction?: (search: any) => void;\n  CustomizeAxios?: (\n    myAxios: AxiosInstance,\n    user: User | null,\n    link: QueryModalTableParamsType[\"link\"],\n    search?: string\n  ) => Promise<AxiosResponse<any, any>>;\n  isRowSelectable?: ((params: GridRowParams<any>) => boolean) | undefined;\n  getCellClassName?:\n    | ((params: GridCellParams<any, any, any, GridTreeNode>) => string)\n    | undefined;\n}\n\nasync function CustomizeAxiosFunc(\n  myAxios: AxiosInstance,\n  user: User | null,\n  link: QueryModalTableParamsType[\"link\"],\n  search: string = \"\"\n) {\n  return myAxios.get(`${link?.url}?${link?.queryUrlName}=${search}`, {\n    headers: {\n      Authorization: `Bearer ${user?.accessToken}`,\n    },\n  });\n}\n\nconst useQueryModalTable = ({\n  link,\n  uniqueId,\n  queryKey,\n  responseDataKey,\n  columns,\n  onSelected = () => {},\n  onRemoveSelected = () => {},\n  onSuccess = () => {},\n  searchRef,\n  onCellKeyDown,\n  onCloseFunction = () => {},\n  CustomizeAxios = CustomizeAxiosFunc,\n  isRowSelectable,\n  getCellClassName,\n}: QueryModalTableParamsType) => {\n  const { myAxios, user } = useContext(AuthContext);\n  const [show, setShowModal] = useState(false);\n  const [rows, setRows] = useState<GridRowSelectionModel>([]);\n  async function customizeAxiostool(search: string = \"\") {\n    return await CustomizeAxios(myAxios, user, link, search);\n  }\n  const { isLoading, refetch } = useQuery({\n    queryKey: queryKey,\n    queryFn: async () => await customizeAxiostool(),\n    onSuccess: (res) => {\n      const response = res as any;\n      setRows(response.data[responseDataKey]);\n      onSuccess(response);\n    },\n    refetchOnWindowFocus: false,\n  });\n\n  const openModal = (search: string = \"\") => {\n    flushSync(() => {\n      setShowModal(true);\n    });\n    if (searchRef?.current) {\n      searchRef.current.value = search;\n      customizeAxiostool(search).then((res: any) => {\n        if (!res?.data.success) {\n          return alert(`Error : ${res?.data.message}`);\n        }\n        const response = res as any;\n        setRows(response.data[responseDataKey]);\n        if (searchRef?.current) searchRef.current.focus();\n      });\n    }\n  };\n\n  const closeModal = () => {\n    setShowModal(false);\n    if (onCloseFunction) {\n      onCloseFunction(searchRef?.current?.value);\n    }\n  };\n\n  const ModalComponent = (\n    <ModalWithTable\n      getCellClassName={getCellClassName}\n      searchRef={searchRef}\n      showModal={show}\n      onCloseModal={() => {\n        setShowModal(false);\n        if (onCloseFunction) {\n          onCloseFunction(searchRef?.current?.value);\n        }\n      }}\n      onClickCloseIcon={() => {\n        setShowModal(false);\n        if (onCloseFunction) {\n          onCloseFunction(searchRef?.current?.value);\n        }\n      }}\n      searchOnChange={(e) => {\n        // myAxios\n        //   .get(`${link.url}?${link.queryUrlName}=${e.target.value}`, {\n        //     headers: {\n        //       Authorization: `Bearer ${user?.accessToken}`,\n        //     },\n        //   })\n        //   .then((res: any) => {\n        //     if (!res?.data.success) {\n        //       return alert(`Error : ${res?.data.message}`);\n        //     }\n        //     const response = res as any;\n        //     setRows(response.data[responseDataKey]);\n        //   });\n      }}\n      onSearchKeyEnter={(value) => {\n        customizeAxiostool(value).then((res: any) => {\n          if (!res?.data.success) {\n            return alert(`Error : ${res?.data.message}`);\n          }\n          const response = res as any;\n          setRows(response.data[responseDataKey]);\n        });\n      }}\n      onCellKeyDown={onCellKeyDown}\n      height={300}\n      isLoading={isLoading}\n      queryKey={queryKey}\n      columns={columns}\n      onSelectionChange={(rowSelectionModel, data) => {\n        if (rowSelectionModel.length <= 0) {\n          return onRemoveSelected(data);\n        }\n        const selectedIDs = new Set(rowSelectionModel);\n        const selectedRowData = data.filter((row: any) => {\n          return selectedIDs.has(row[uniqueId].toString());\n        });\n        if (selectedRowData.length <= 0) return;\n        onSelected(selectedRowData, data);\n      }}\n      id={uniqueId}\n      rows={rows}\n      setRows={setRows}\n      isRowSelectable={isRowSelectable}\n    />\n  );\n\n  return {\n    show,\n    rows,\n    isLoading,\n    openModal,\n    closeModal,\n    ModalComponent,\n    refetch,\n  };\n};\n\nexport default useQueryModalTable;\n","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)([/*#__PURE__*/(0, _jsxRuntime.jsx)(\"circle\", {\n  cx: \"10\",\n  cy: \"8\",\n  r: \"4\"\n}, \"0\"), /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M10.35 14.01C7.62 13.91 2 15.27 2 18v2h9.54c-2.47-2.76-1.23-5.89-1.19-5.99zm9.08 4.01c.36-.59.57-1.28.57-2.02 0-2.21-1.79-4-4-4s-4 1.79-4 4 1.79 4 4 4c.74 0 1.43-.22 2.02-.57L20.59 22 22 20.59l-2.57-2.57zM16 18c-1.1 0-2-.9-2-2s.9-2 2-2 2 .9 2 2-.9 2-2 2z\"\n}, \"1\")], 'PersonSearch');\nexports.default = _default;","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z\"\n}), 'Search');\nexports.default = _default;","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}"],"names":["CustomDatePicker","_ref","label","name","onChange","value","onKeyDown","inputRef","datePickerRef","fullWidth","textField","_ref$minWidth","minWidth","rest","_objectWithoutProperties","_excluded","_jsx","LocalizationProvider","dateAdapter","AdapterDateFns","children","DatePicker","_objectSpread","floatingLabelStyle","color","ref","slotProps","size","InputLabelProps","sx","fieldset","borderColor","fontSize","top","style","position","left","transform","width","bgcolor","boxShadow","p","heigth","ModalWithTable","height","isLoading","columns","queryKey","onSelectionChange","rows","setRows","id","onCloseModal","showModal","onClickCloseIcon","searchOnChange","_ref$title","title","searchRef","_ref$onSearchKeyEnter","onCellKeyDown","onSearchKeyEnter","isRowSelectable","getCellClassName","mainId","generateRandomClass","Modal","open","onClose","_jsxs","Box","Typography","variant","component","mb","TextField","InputProps","endAdornment","InputAdornment","IconButton","onClick","_searchRef$current","current","edge","SearchIcon","type","e","_searchRef$current2","code","preventDefault","keyBoardSelectionTable","marginBottom","className","concat","Table","isSingleSelection","isRowFreeze","dataSelection","selection","data","table_id","right","CloseIcon","Math","floor","random","el","_rows$","document","querySelectorAll","classList","add","firstRowParent","querySelector","firstInput","focus","event","MouseEvent","bubbles","cancelable","view","window","dispatchEvent","addEventListener","es","key","remove","keyBoardUpDown","forEach","idx","_rows$idx","_rows","_rows$idx2","_rows2","length","defaultArrangeDataCore","column","beforeArrangeData","adjustMaxHeight","_ref$fontSize","_ref$summaryHeight","summaryHeight","newData","trHeight","temp","maxHeight","getBoundingClientRect","itm","contentElment","tempTable","createElement","tempRow","insertRow","summaryReport","col","tempCell","insertCell","visibility","content","columnWidth","textContent","appendChild","getTableCellHeight","datakey","removeChild","push","arrangeData","_x","_ref3","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_ref2","cb","_ref2$fontSize","wrap","_context","prev","next","undefined","abrupt","stop","apply","arguments","TableContext","createContext","rowSelectionModel","footerChildren","footerPaginationPosition","showFooterSelectedCount","forwardRef","_ref$CustomFooterComp","CustomFooterComponent","DefaultooterComponent","_ref$checkboxSelectio","checkboxSelection","_ref$footerChildren","_ref$footerPagination","_ref$showFooterSelect","_useState","useState","_useState2","_slicedToArray","selectedRows","setSelectedRows","useImperativeHandle","removeSelection","getSelectedRows","filter","item","includes","freezeArray","Provider","DataGrid","slots","loadingOverlay","LinearProgress","footer","initialState","pagination","paginationModel","pageSize","loading","getRowId","row","hide","showCellVerticalBorder","showColumnVerticalBorder","rowHeight","columnHeaderHeight","pageSizeOptions","fill","background","padding","display","fontWeight","onRowSelectionModelChange","selectionSet","Set","s","has","__","rowNode","_toConsumableArray","disableVirtualization","Pagination","page","onPageChange","apiRef","useGridApiContext","pageCount","useGridSelector","gridPageCountSelector","MuiPagination","count","newPage","CustomPagination","props","GridPagination","ActionsComponent","_useContext","useContext","columnGap","justifyContent","px","alignItems","flexDirection","flex","claimsStatus","claimType","header","Setting","state","dispatch","policySearchInputRef","useRef","useEffect","field","setupTitle","_useQueryModalTable","useQueryModalTable","link","url","queryUrlName","headerName","uniqueId","responseDataKey","onSelected","selectedRowData","handleInputChange","target","PolicyNo","AssuredName","closePolicyModal","PolicyModal","ModalComponent","isLoadingPolicyModal","openPolicyModal","openModal","closeModal","_e$target","multiline","theme","_defineProperty","gridTemplateColumns","gap","margin","breakpoints","down","FormControl","zIndex","InputLabel","Select","labelId","status","MenuItem","format","marginRight","claim_type","map","_Fragment","LoadingButton","gridColumn","htmlFor","OutlinedInput","legend","PersonSearchIcon","readOnly","dateFormat","ShowDateSelection","ClaimsReport","_fetchTable","dateFrom","Date","dateTo","yearCount","getFullYear","toString","slice","AuthContext","myAxios","user","PrintPreview","_Setting","onReportSubmit","_x2","_x3","setData","setLoading","response","jsonData","post","headers","Authorization","accessToken","sent","report","_itm$claim_type","_itm$status","claimsStatusSorted","sort","parseInt","AmountClaim","parseFloat","replace","toLocaleString","minimumFractionDigits","maximumFractionDigits","AmountApproved","then","scaleDefaultValue","drawTable","pages","pageNumber","split","t","textAlign","colSpan","borderBottom","rowIdx","onDoubleClick","copiedByHeaderOnDoubleClick","rowItem","React","colItem","colIdx","columnSelection","paddingLeft","pageHeight","pageWidth","dateString","toLocaleDateString","year","month","day","_formatYearRange","startYear","startDate","endDate","startYearFormatted","endYearFormatted","formatYearRange","DateToStringFormat","dateFromRef","dateToRef","timeout","setTimeout","_dateFromRef$current","_dateFromRef$current$","click","clearTimeout","_dateToRef$current","_dateToRef$current$qu","views","CustomizeAxiosFunc","_CustomizeAxiosFunc","search","_args","get","_customizeAxiostool","_queryFn","_ref$onSelected","_ref$onRemoveSelected","onRemoveSelected","_ref$onSuccess","onSuccess","_ref$onCloseFunction","onCloseFunction","_ref$CustomizeAxios","CustomizeAxios","show","setShowModal","_useState3","_useState4","customizeAxiostool","_callee2","_args2","_context2","_useQuery","useQuery","queryFn","_callee3","_context3","res","refetchOnWindowFocus","refetch","flushSync","success","alert","message","_searchRef$current3","selectedIDs","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","cx","cy","r","d","source","excluded","i","Object","getOwnPropertySymbols","sourceSymbolKeys","indexOf","prototype","propertyIsEnumerable","call"],"sourceRoot":""}