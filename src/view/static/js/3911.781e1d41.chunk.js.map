{"version":3,"file":"static/js/3911.781e1d41.chunk.js","mappings":"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","sources":["feautures/LandingPage.tsx"],"sourcesContent":["import { useState, FormEvent, useContext } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { AuthContext } from \"../components/AuthContext\";\nimport { useMutation } from \"react-query\";\nimport { wait } from \"../lib/wait\";\nimport axios , { AxiosInstance } from \"axios\";\nimport Swal from \"sweetalert2\";\nimport \"../style/landingpage.css\"\nimport \"../style/laoding.css\"\n\nasync function Login(\n  myAxios: AxiosInstance,\n  username: string,\n  password: string\n) {\n  return await myAxios.post(\n    \"/login\",\n    {\n      username,\n      password,\n    },\n    { withCredentials: true }\n  );\n}\n\n\n\nexport  default function LandingPage() {\n  const navigate = useNavigate();\n  const [errors, setErrors] = useState({\n    username: false,\n    password: false,\n    success: false,\n    message: \"\",\n  });\n  const { setUser, myAxios } = useContext(AuthContext);\n  const { mutate, isLoading } = useMutation({\n    mutationKey: \"login\",\n    mutationFn: async (variables: { username: string; password: string }) =>\n      wait(1200).then(\n        async () => await Login(myAxios, variables.username, variables.password)\n      ),\n    onSuccess: (res) => {\n      if (res.data.username) {\n        return setErrors({\n          username: true,\n          password: false,\n          success: false,\n          message: res.data.message,\n        });\n      }\n      if (res.data.password) {\n        return setErrors({\n          username: false,\n          password: true,\n          success: false,\n          message: res.data.message,\n        });\n      }\n      setErrors({\n        username: false,\n        password: false,\n        success: true,\n        message: res.data.message,\n      });\n      Swal.fire({\n        position: \"center\",\n        icon: \"success\",\n        title: res.data.message,\n        showConfirmButton: false,\n        timer: 800,\n      }).then(() => {\n        setUser(res.data.user);\n        myAxios\n          .post(\"/get-user-details\", {\n            department: res.data.user?.department,\n            userAccess: res.data.user?.userAccess,\n            is_admin: res.data.user?.is_master_admin,\n            ACCESS_TOKEN: res.data.user?.accessToken,\n            REFRESH_TOKEN: res.data.user?.refreshToken,\n            ...res.data?.cokie,\n          })\n          .then((res) => {\n            console.log(res);\n          });\n        if (res.data.user.is_master_admin) {\n          navigate(\"/master-admin-dashboard\");\n        } else {\n          axios.get('http://localhost:7624/open-report', {\n            withCredentials: true\n          }).then((res) => {\n            if (!res.data.success) {\n              alert(res.data.message)\n            }\n          })\n            .catch(console.log)\n\n            \n          navigate(\"/dashboard\");\n        }\n      });\n    },\n  });\n  const [showPassword, setShowPassword] = useState(false);\n  async function onSubmit(e: FormEvent) {\n    e.preventDefault();\n    const formData = new FormData(e.currentTarget as HTMLFormElement);\n    mutate({\n      username: formData.get(\"username\") as string,\n      password: formData.get(\"password\") as string,\n    });\n  }\n  \n  \n\n  return (\n    <div className=\"main-landing-page\">\n      <form className=\"content\" onSubmit={onSubmit}>\n        <img\n          alt=\"Upward Insurance\"\n          src={process.env.REACT_APP_IMAGE_URL + \"logo.png\"}\n          style={{ width: \"120px\", height: \"auto\", background: \"white\" }}\n        />\n        <h3 style={{ fontWeight: \"400\", marginBottom: \"30px\" }}>LOGIN TO UPWARD INSURANCE</h3>\n        <div className=\"content-field\">\n          <div>\n            <label htmlFor=\"username\"> USERNAME</label>\n            <input\n              name=\"username\"\n              id=\"username\"\n              className={errors.username ? \"error\" : \"\"}\n              onFocus={() =>\n                setErrors({\n                  username: false,\n                  password: false,\n                  success: false,\n                  message: \"\",\n                })}\n            />\n            {errors.username && <p className=\"warning-text\">{errors.username && errors.message}</p>}\n          </div>\n        </div>\n        <div className=\"content-field\" style={{ marginTop: \"15px\" }}>\n          <div>\n            <label htmlFor=\"password\"> PASSWORD</label>\n            <input\n              name=\"password\"\n              id=\"password\"\n              type={showPassword ? \"text\" : \"password\"}\n              className={errors.password ? \"error\" : \"\"}\n              onFocus={() =>\n                setErrors({\n                  username: false,\n                  password: false,\n                  success: false,\n                  message: \"\",\n                })}\n            />\n            {errors.password && <p className=\"warning-text\">{errors.message}</p>}\n          </div>\n        </div>\n        <div style={{ display: \"flex\", alignItems: \"center\", columnGap: \"10px\", marginTop: \"10px\" }}>\n          <input name=\"showpass\" id=\"showpass\" type=\"checkbox\" style={{ padding: \"0\", margin: 0 }} onChange={(e) => {\n            console.log(e.currentTarget.checked)\n            setShowPassword(e.currentTarget?.checked)\n          }} />\n          <label htmlFor=\"showpass\" style={{ fontSize: \"10px\", cursor: \"pointer\", padding: \"0\", margin: 0 }}>SHOW PASSWORD</label>\n        </div>\n        <button>SUBMIT</button>\n      </form>\n      {isLoading && <div className=\"loading-component\"><div className=\"loader\"></div></div>}\n    </div>\n  )\n  // return (\n  //   <Box\n  //     sx={{\n  //       display: \"flex\",\n  //       justifyContent: \"center\",\n  //       alignItems: \"center\",\n  //       height: \"100vh\",\n  //       width: \"100%\",\n  //     }}\n  //   >\n  //     <Box\n  //       sx={(theme) => ({\n  //         boxSizing: \"border-box\",\n  //         width: \"400px\",\n  //         height: \"350px\",\n  //         padding: \"30px\",\n  //         borderRadius: \"3px\",\n  //         [theme.breakpoints.down(\"sm\")]: {\n  //           width: \"100%\",\n  //           padding: \"50px 15px\",\n  //           height: \"auto\",\n  //         },\n  //       })}\n  //     >\n  //       <Box\n  //         sx={{\n  //           display: \"flex\",\n  //           alignItems: \"center\",\n  //           justifyContent: \"center\",\n  //           marginBottom: \"30px\",\n  //           flexDirection: \"column\",\n  //         }}\n  //       >\n  //         <img\n  //           alt=\"Upward Insurance\"\n  //           src={process.env.REACT_APP_IMAGE_URL + \"logo.png\"}\n  //           style={{ width: \"120px\", height: \"120px\" }}\n  //         />\n  //         <h3\n  //           style={{\n  //             fontFamily: \"sans-serif\",\n  //             color: \"black\",\n  //             fontWeight: \"500\",\n  //             letterSpacing: \"1.5px\",\n  //           }}\n  //         >\n  //           LOGIN YOUR ACCOUNT\n  //         </h3>\n  //       </Box>\n  //       {errors.success && (\n  //         <Alert severity=\"success\" sx={{ marginBottom: \"20px\" }}>\n  //           {errors.message}\n  //         </Alert>\n  //       )}\n  //       <form onSubmit={onSubmit}>\n  //         <div style={{ marginBottom: \"15px\" }}>\n  //           <TextField\n  //             label=\"username\"\n  //             fullWidth\n  //             size=\"small\"\n  //             name=\"username\"\n  //             type=\"text\"\n  //             error={errors.username}\n  //             required\n  //             helperText={errors.username && errors.message}\n  //             onFocus={() =>\n  //               setErrors({\n  //                 username: false,\n  //                 password: false,\n  //                 success: false,\n  //                 message: \"\",\n  //               })\n  //             }\n  //           />\n  //         </div>\n  //         <div style={{ marginBottom: \"15px\" }}>\n  //           <FormControl\n  //             fullWidth\n  //             variant=\"outlined\"\n  //             size=\"small\"\n  //             error={errors.password}\n  //             required={true}\n  //             onFocus={() =>\n  //               setErrors({\n  //                 username: false,\n  //                 password: false,\n  //                 success: false,\n  //                 message: \"\",\n  //               })\n  //             }\n  //           >\n  //             <InputLabel htmlFor=\"outlined-adornment-password\">\n  //               password\n  //             </InputLabel>\n  //             <OutlinedInput\n  //               name=\"password\"\n  //               id=\"outlined-adornment-password\"\n  //               type={showPassword ? \"text\" : \"password\"}\n  //               endAdornment={\n  //                 <InputAdornment position=\"end\">\n  //                   <IconButton\n  //                     aria-label=\"toggle password visibility\"\n  //                     onClick={handleClickShowPassword}\n  //                     onMouseDown={handleMouseDownPassword}\n  //                     edge=\"end\"\n  //                   >\n  //                     {showPassword ? <VisibilityOff /> : <Visibility />}\n  //                   </IconButton>\n  //                 </InputAdornment>\n  //               }\n  //               label=\"password\"\n  //             />\n  //             {errors.password && (\n  //               <FormHelperText>{errors.message}</FormHelperText>\n  //             )}\n  //           </FormControl>\n  //         </div>\n  //         <Box sx={{ position: \"relative\", width: \"100%\" }}>\n  //           <Button\n  //             variant=\"contained\"\n  //             sx={{ width: \"100%\" }}\n  //             disabled={isLoading}\n  //             type=\"submit\"\n  //           >\n  //             Login\n  //           </Button>\n  //           {isLoading && (\n  //             <CircularProgress\n  //               size={24}\n  //               sx={{\n  //                 color: green[500],\n  //                 position: \"absolute\",\n  //                 top: \"50%\",\n  //                 left: \"50%\",\n  //                 marginTop: \"-12px\",\n  //                 marginLeft: \"-12px\",\n  //               }}\n  //             />\n  //           )}\n  //         </Box>\n  //       </form>\n  //     </Box>\n  //   </Box>\n  // );\n}\n"],"names":["Login","_x","_x2","_x3","_Login","_asyncToGenerator","_regeneratorRuntime","mark","_callee","myAxios","username","password","wrap","_context","prev","next","post","withCredentials","abrupt","sent","stop","apply","arguments","LandingPage","_mutationFn","_onSubmit","navigate","useNavigate","_useState","useState","success","message","_useState2","_slicedToArray","errors","setErrors","_useContext","useContext","AuthContext","setUser","_useMutation","useMutation","mutationKey","mutationFn","_x4","_callee3","variables","_context3","wait","then","_callee2","_context2","onSuccess","res","data","Swal","position","icon","title","showConfirmButton","timer","_res$data$user","_res$data$user2","_res$data$user3","_res$data$user4","_res$data$user5","_res$data","user","_objectSpread","department","userAccess","is_admin","is_master_admin","ACCESS_TOKEN","accessToken","REFRESH_TOKEN","refreshToken","cokie","console","log","axios","get","alert","catch","mutate","isLoading","_useState3","_useState4","showPassword","setShowPassword","_jsxs","className","children","onSubmit","_x5","_callee4","e","formData","_context4","preventDefault","FormData","currentTarget","_jsx","alt","src","process","style","width","height","background","fontWeight","marginBottom","htmlFor","name","id","onFocus","marginTop","type","display","alignItems","columnGap","padding","margin","onChange","_e$currentTarget","checked","fontSize","cursor"],"sourceRoot":""}