{"version":3,"file":"static/js/2562.fd5dfefa.chunk.js","mappings":"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","sources":["feautures/Admin/Task/Claims/Claims.tsx"],"sourcesContent":["import React, {\n  useContext,\n  useId,\n  useReducer,\n  useRef,\n  useState,\n  useEffect,\n  useImperativeHandle,\n  forwardRef,\n} from \"react\";\nimport useQueryModalTable from \"../../../../hooks/useQueryModalTable\";\nimport {\n  Button,\n  FormControl,\n  IconButton,\n  InputAdornment,\n  InputLabel,\n  MenuItem,\n  OutlinedInput,\n  Select,\n  TextField,\n  Menu,\n  Stack,\n} from \"@mui/material\";\nimport LoadingButton from \"@mui/lab/LoadingButton\";\nimport PersonSearchIcon from \"@mui/icons-material/PersonSearch\";\nimport { AuthContext } from \"../../../../components/AuthContext\";\nimport CloudDownloadIcon from \"@mui/icons-material/CloudDownload\";\nimport RemoveRedEyeIcon from \"@mui/icons-material/RemoveRedEye\";\nimport HighlightOffIcon from \"@mui/icons-material/HighlightOff\";\nimport CloudUploadIcon from \"@mui/icons-material/CloudUpload\";\nimport CustomDatePicker from \"../../../../components/DatePicker\";\nimport { useMutation, useQuery } from \"react-query\";\nimport RestartAltIcon from \"@mui/icons-material/RestartAlt\";\nimport Swal from \"sweetalert2\";\nimport { flushSync } from \"react-dom\";\nimport { codeCondfirmationAlert } from \"../../../../lib/confirmationAlert\";\nimport ReactDOMServer from \"react-dom/server\";\nimport format from \"date-fns/format\";\nimport \"../../../../style/claim.css\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\nimport VisibilityIcon from \"@mui/icons-material/Visibility\";\nimport { grey } from \"@mui/material/colors\";\nimport { NumericFormatCustom } from \"../../../../components/NumberFormat\";\nimport ArticleIcon from \"@mui/icons-material/Article\";\n\nconst initialClaimState = {\n  claims_id: \"\",\n  dateReported: null,\n  dateAccident: null,\n  dateInspected: null,\n  department: 1,\n  remarks: \"\",\n  search: \"\",\n  mode: \"\",\n  claim_no: \"\",\n};\nconst initialPolicyState = {\n  policy: \"\",\n  claim_type: 0,\n  insurance: \"\",\n  PolicyNo: \"\",\n  PlateNo: \"\",\n  Model: \"\",\n  BodyType: \"\",\n  Make: \"\",\n  ChassisNo: \"\",\n  MotorNo: \"\",\n  ORNo: \"\",\n  CoverNo: \"\",\n  BLTFileNo: \"\",\n  AssuredName: \"\",\n  IDNo: \"\",\n  totaDue: \"00.00\",\n  totalpaid: \"00.00\",\n  balance: \"00.00\",\n  remitted: \"00.00\",\n  Account: \"\",\n  status: 0,\n  DateFrom: \"\",\n  DateTo: \"\",\n  DateReceived: null,\n  DateClaim: null,\n  AmountClaim: \"\",\n  AmountApproved: \"\",\n  NameTPPD: \"\",\n};\nconst claimType = [\n  \"OWN DAMAGE\",\n  \"CARNAP\",\n  \"VTPL-PROPERTY DAMAGE\",\n  \"VTPL-BODILY INJURY\",\n  \"THIRD PARTY-DEATH\",\n];\nconst basicDocuments = [\n  { label: \"Policy\", name: \"policyFile\" },\n  { label: \"ENDORCEMENT\", name: \"endorsement\" },\n  { label: \"OR of Premium Payment\", name: \"OPP\" },\n  {\n    label: \"Official Receipt and Certificate of Registration\",\n    name: \"ORCR\",\n  },\n  {\n    label: \"Drivers License and Official Receipt\",\n    name: \"DLOR\",\n  },\n  { label: \"Police Report\", name: \"PR\" },\n  { label: \"Driver's Affidavit\", name: \"DA\" },\n  { label: \"Stencil of Motor and Chassis No.\", name: \"SMCN\" },\n];\nconst insuranceDocuments = [\n  { label: \"LOA\", name: \"loa\" },\n  { label: \"Offer Letter\", name: \"offerLetter\" },\n  { label: \"Comparative Evaluation\", name: \"CE\" },\n];\nconst claimsStatus = [\n  \"Ongoing Repair\",\n  \"With Offer Letter\",\n  \"With Lacking Documents\",\n  \"With LOA\",\n  \"Submitted to Insurance Company\",\n  \"For Evaluation\",\n  \"For Inspection\",\n  \"For Check Preparation\",\n  \"Denied\",\n  \"Done\",\n  \"\",\n];\nconst renderFields = () => {\n  const arrs = [\n    [\n      { label: \"Copies of Colored Picture\", name: \"ct1_1\" },\n      { label: \"Copy of Repair Estimate\", name: \"ct1_2\" },\n    ],\n    [\n      { label: \"Complaint Sheet\", name: \"ct2_1\" },\n      { label: \"Alarm Sheet\", name: \"ct2_2\" },\n      { label: \"Original Keys\", name: \"ct2_3\" },\n      { label: \"Certificate of NO RECOVERY\", name: \"ct2_4\" },\n    ],\n    [\n      { label: \"Copies of Colored Picture\", name: \"ct3_1\" },\n      { label: \"Copy of Repair Estimate\", name: \"ct3_2\" },\n      { label: \"Certificate of Registration and OR\", name: \"ct3_3\" },\n      { label: \"Photocopy of Driver's license\", name: \"ct3_4\" },\n      { label: \"Certificate of NO Claim from Insurer\", name: \"ct3_5\" },\n    ],\n    [\n      { label: \"Medical Certificate\", name: \"ct4_1\" },\n      { label: \"Receipt of Medicine/Drugs\", name: \"ct4_2\" },\n      { label: \"Hospital Bill\", name: \"ct4_3\" },\n      { label: \"Birth Certificate\", name: \"ct4_4\" },\n      { label: \"Affidavit of Desistance\", name: \"ct4_5\" },\n    ],\n    [\n      { label: \"Death Certificate, ID\", name: \"ct5_1\" },\n      { label: \"Marriage Contract \", name: \"ct5_2\" },\n      { label: \"Funeral/Burial Official Receipts\", name: \"ct5_3\" },\n    ],\n  ];\n  return arrs;\n};\nexport const reducer = (state: any, action: any) => {\n  switch (action.type) {\n    case \"UPDATE_FIELD\":\n      return {\n        ...state,\n        [action.field]: action.value,\n      };\n    default:\n      return state;\n  }\n};\n\nfunction Claims() {\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\n  const [claimsSubmited, setClaimsSubmited] = useState([]);\n  const { myAxios, user } = useContext(AuthContext);\n  const [claimState, claimDispatch] = useReducer(reducer, initialClaimState);\n  const [policyState, policyDispatch] = useReducer(reducer, initialPolicyState);\n  const [listofClaim, setListofClaim] = useState<Array<any>>([]);\n  const [showModal, setShowModal] = useState(false);\n  const searchClaimInputRef = useRef<HTMLInputElement>(null);\n  const policySearchInputRef = useRef<HTMLInputElement>(null);\n  const datePickerRef = useRef<HTMLElement>(null);\n  const dateAccidentRef = useRef<HTMLElement>(null);\n  const dateInspectedRef = useRef<HTMLElement>(null);\n  const { isLoading: isLoadingClaimsId, refetch: refetchClaimsId } = useQuery({\n    queryKey: \"get-claims-id\",\n    queryFn: async () =>\n      await myAxios.get(`/task/claims/claims/get-claims-id`, {\n        headers: {\n          Authorization: `Bearer ${user?.accessToken}`,\n        },\n      }),\n    refetchOnWindowFocus: false,\n    onSuccess(res) {\n      claimDispatch({\n        type: \"UPDATE_FIELD\",\n        field: \"claims_id\",\n        value: res.data.claim_id[0].id,\n      });\n    },\n  });\n  const open = Boolean(anchorEl);\n  const handleClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n    setAnchorEl(event.currentTarget);\n  };\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n  const handleInputChange = (e: any) => {\n    const { name, value } = e.target;\n    claimDispatch({ type: \"UPDATE_FIELD\", field: name, value });\n  };\n  const { isLoading: isLoadingSelectedSearch, mutate: mutateSelectedSearch } =\n    useMutation({\n      mutationFn: (variable: any) => {\n        return myAxios.post(\n          \"/task/claims/claims/selected-search-claims\",\n          variable,\n          {\n            headers: {\n              Authorization: `Bearer ${user?.accessToken}`,\n            },\n          }\n        );\n      },\n      onSuccess(res) {\n        const formattedSelectedData = res.data.formattedSelectedData;\n        const claims_id = res.data.claims_id;\n        const policyTypeContainer: Array<any> = [];\n        formattedSelectedData.map(async (item: any) => {\n          policyTypeContainer.push(\n            parseInt(item.policyState.claim_type?.toString())\n          );\n          const basicDocuments: Array<any> = item.basicFileCustom;\n          const otherDocuments: Array<any> = item.otherFileCustom;\n          const insuranceDocuments: Array<any> = item.insuranceFileCustom;\n          const newObjContainerBasic = await formatDataToDocument(\n            basicDocuments,\n            `${process.env.REACT_APP_IMAGE_URL}claim-files/${claims_id}/${item.id}/Basic-Document/`\n          );\n\n          const newObjContainerOther = await formatDataToDocument(\n            otherDocuments,\n            `${process.env.REACT_APP_IMAGE_URL}claim-files/${claims_id}/${item.id}/Other-Document/`\n          );\n\n          const newObjContainerInsurance = await formatDataToDocument(\n            insuranceDocuments,\n            `${process.env.REACT_APP_IMAGE_URL}claim-files/${claims_id}/${item.id}/Insurance-Document/`\n          );\n\n          item.basicFileCustom = await Promise.all(newObjContainerBasic);\n          item.otherFileCustom = await Promise.all(newObjContainerOther);\n          item.insuranceFileCustom = await Promise.all(\n            newObjContainerInsurance\n          );\n\n          return item;\n        });\n        async function formatDataToDocument(\n          dataDocument: Array<any>,\n          url: string\n        ) {\n          const newObjContainer: Array<any> = [];\n          for (let index = 0; index < dataDocument.length; index++) {\n            const basicItem = dataDocument[index];\n            const mainURL = `${url}/${basicItem.uniqueFilename}`;\n            const response = await fetch(mainURL);\n            const blob = await response.blob();\n            const file = new File([blob], basicItem.fileName, {\n              type: basicItem.fileType,\n            });\n            const reader = new FileReader();\n            newObjContainer.push(\n              new Promise((resolve, reject) => {\n                reader.onload = function (event) {\n                  resolve({\n                    fileContent: event.target?.result,\n                    datakey: basicItem.datakey,\n                    fileName: basicItem.fileName,\n                    fileType: basicItem.fileType,\n                    file,\n                  });\n                };\n                reader.onerror = function (event) {\n                  reject(new Error(\"Error reading file: \" + file.name));\n                };\n                reader.readAsDataURL(file);\n              })\n            );\n          }\n          return newObjContainer;\n        }\n        setListofClaim(policyTypeContainer);\n        setNewStateValue(policyDispatch, formattedSelectedData[0].policyState);\n        setClaimsSubmited(formattedSelectedData);\n      },\n    });\n  const { isLoading: isLoadingClaimSave, mutate: mutateClaimSave } =\n    useMutation({\n      mutationKey: \"save-claim\",\n      mutationFn: async (variable: any) =>\n        await myAxios.post(\"/task/claims/claims/save\", variable, {\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${user?.accessToken}`,\n          },\n        }),\n      onSuccess(res) {\n        const response = res as any;\n\n        if (response.data.success) {\n          setNewStateValue(claimDispatch, initialClaimState);\n          setNewStateValue(policyDispatch, initialPolicyState);\n          setClaimsSubmited([]);\n          refetchClaimsId();\n\n          return Swal.fire({\n            position: \"center\",\n            icon: \"success\",\n            title: response.data.message,\n            timer: 1500,\n          });\n        }\n        return Swal.fire({\n          position: \"center\",\n          icon: \"warning\",\n          title: response.data.message,\n          timer: 1500,\n        });\n      },\n    });\n  const {\n    isLoading: isLoadingClaimSelectedPolicyDetails,\n    mutate: mutateClaimSelectedPolicyDetails,\n  } = useMutation({\n    mutationKey: \"get-selected-policy-details\",\n    mutationFn: async (variable: any) =>\n      await myAxios.post(\n        \"/task/claims/claims/get-selected-policy-details\",\n        variable,\n        {\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${user?.accessToken}`,\n          },\n        }\n      ),\n    onSuccess(res) {\n      const response = res as any;\n\n      if (response.data.success && response.data.data.length > 0) {\n        console.log(response);\n        setNewStateValue(policyDispatch, response.data.data[0]);\n      }\n      closePolicyModal();\n    },\n  });\n  const {\n    ModalComponent: SearchClaimModal,\n    isLoading: isLoadingClaimModal,\n    openModal: openClaimModal,\n    closeModal: closeClaimModal,\n  } = useQueryModalTable({\n    link: {\n      url: \"/task/claims/claims/search-claims\",\n      queryUrlName: \"searchClaims\",\n    },\n    columns: [\n      { field: \"claims_id\", headerName: \"Ref No.\", width: 300 },\n      { field: \"AssuredName\", headerName: \"Name\", width: 350 },\n      { field: \"PolicyNo\", headerName: \"Policy No.\", width: 200 },\n      { field: \"IDNo\", headerName: \"ID No.\", width: 200 },\n      { field: \"ChassisNo\", headerName: \"Chassis No.\", width: 200 },\n      { field: \"MotorNo\", headerName: \"Motor No.\", width: 200 },\n      { field: \"PlateNo\", headerName: \"Plate No.\", width: 200 },\n    ],\n    queryKey: \"search-claims\",\n    uniqueId: \"claims_id\",\n    responseDataKey: \"claims\",\n    onSelected: (selectedRowData) => {\n      mutateSelectedSearch({ selectedRowData });\n      setNewStateValue(claimDispatch, {\n        claims_id: selectedRowData[0].claims_id,\n        dateReported: selectedRowData[0].dateReported,\n        dateAccident: selectedRowData[0].dateAccident,\n        dateInspected: selectedRowData[0].dateInspected,\n        department: parseInt(selectedRowData[0].department),\n        remarks: selectedRowData[0].remarks,\n        claim_no: \"\",\n        mode: \"update\",\n      });\n      closeClaimModal();\n    },\n    searchRef: searchClaimInputRef,\n  });\n  const {\n    ModalComponent: PolicyModal,\n    isLoading: isLoadingPolicyModal,\n    openModal: openPolicyModal,\n    closeModal: closePolicyModal,\n  } = useQueryModalTable({\n    link: {\n      url: \"/task/claims/claims/get-policy\",\n      queryUrlName: \"searchPolicy\",\n    },\n    columns: [\n      { field: \"PolicyNo\", headerName: \"Policy No.\", width: 300 },\n      { field: \"AssuredName\", headerName: \"Name.\", width: 350 },\n      { field: \"IDNo\", headerName: \"ID No.\", width: 200 },\n      { field: \"ChassisNo\", headerName: \"Chassis No.\", width: 200 },\n    ],\n    queryKey: \"get-policy\",\n    uniqueId: \"PolicyNo\",\n    responseDataKey: \"claimPolicy\",\n    onSelected: (selectedRowData) => {\n      setNewStateValue(policyDispatch, selectedRowData[0]);\n      mutateClaimSelectedPolicyDetails({\n        PolicyNo: selectedRowData[0].PolicyNo,\n      });\n    },\n    searchRef: policySearchInputRef,\n  });\n\n  function sortList(data: any) {\n    if (data.length <= 0) {\n      return [];\n    }\n    const sortedData = data.sort((a: any, b: any) => {\n      if (a.id < b.id) {\n        return -1;\n      }\n      if (a.id > b.id) {\n        return 1;\n      }\n      return 0;\n    });\n    return sortedData;\n  }\n  const handleTdClick = (itm: any) => {\n    flushSync(() => {\n      setShowModal(true);\n    });\n    const groupByLabel = (arr: any) => {\n      const grouped: any = {};\n      arr.forEach((item: any) => {\n        if (!grouped[item.datakey]) {\n          grouped[item.datakey] = [];\n        }\n        grouped[item.datakey].push(item);\n      });\n\n      return Object.entries(grouped);\n    };\n    const displayFile = (groupedData: Array<any>) => {\n      groupedData.forEach(([datakey, items]: any) => {\n        const fileList = new DataTransfer();\n        const input = document.querySelector(\n          `#${datakey} input`\n        ) as HTMLInputElement;\n        items.forEach((itm: any) => {\n          fileList.items.add(itm.file);\n        });\n        input.files = fileList.files;\n        input.dispatchEvent(new Event(\"change\", { bubbles: true }));\n      });\n    };\n    setNewStateValue(policyDispatch, itm.policyState);\n    displayFile(groupByLabel(itm.basicFileCustom));\n    displayFile(groupByLabel(itm.otherFileCustom));\n    displayFile(groupByLabel(itm.insuranceFileCustom));\n    handleInputChange({\n      target: { name: \"claim_no\", value: itm.id },\n    });\n  };\n\n  const clickClaimInformationSheet = () => {\n    localStorage.setItem(\"paper-width\", \"8.5in\");\n    localStorage.setItem(\"paper-height\", \"13in\");\n    let printString = (claimdsDetails: any) => {\n      return (\n        <div>\n          <div\n            style={{\n              borderBottom: \"3px solid black\",\n            }}\n          >\n            <h3\n              style={{\n                textAlign: \"center\",\n                fontWeight: \"bold\",\n              }}\n            >\n              {claimdsDetails.department === 0\n                ? \"UPWARD INSURANCE SERVICES AND MANAGEMENT INC.\"\n                : \"UPWARD CONSULTANT SERVICES AND MANAGEMENT INC.\"}\n            </h3>\n          </div>\n          <h1\n            style={{\n              textAlign: \"center\",\n              fontWeight: \"bolder\",\n            }}\n          >\n            CLAIMS INFORMATION SHEET\n          </h1>\n          <p\n            style={{\n              textAlign: \"right\",\n              fontSize: \"16px\",\n              fontWeight: \"bold\",\n            }}\n          >\n            <p\n              style={{\n                textAlign: \"right\",\n                fontSize: \"16px\",\n              }}\n            >\n              <span style={{ fontWeight: \"bolder\" }}>CLAIM NO.: </span>\n              <span style={{ fontWeight: \"bold\" }}>\n                {\" \"}\n                {claimdsDetails.claims_id}\n              </span>\n            </p>\n          </p>\n          <div\n            style={{\n              minHeight: \"200px\",\n              maxHeight: \"auto\",\n              marginBottom: \"20px\",\n              display: \"flex\",\n              border: \"2px solid black\",\n            }}\n          >\n            <div\n              style={{\n                flex: 1,\n                minHeight: \"200px\",\n                maxHeight: \"auto\",\n                borderRight: \"2px solid black\",\n                display: \"flex\",\n                flexDirection: \"column\",\n                rowGap: \"5px\",\n              }}\n            >\n              <div\n                style={{\n                  width: \"100%\",\n                  display: \"flex\",\n                  padding: \"0 10px\",\n                  boxSizing: \"border-box\",\n                }}\n              >\n                <span\n                  style={{\n                    flex: 1,\n                    textAlign: \"left\",\n                    fontWeight: \"bolder\",\n                  }}\n                >\n                  Assured's Name\n                </span>\n                <span style={{ width: \"40px\", textAlign: \"left\" }}>:</span>\n                <span\n                  style={{\n                    flex: 1,\n                    textAlign: \"left\",\n                    fontWeight: \"bold\",\n                  }}\n                >\n                  {claimdsDetails.AssuredName}\n                </span>\n              </div>\n              <div\n                style={{\n                  width: \"100%\",\n                  display: \"flex\",\n                  padding: \"0 10px\",\n                  boxSizing: \"border-box\",\n                }}\n              >\n                <span\n                  style={{\n                    flex: 1,\n                    textAlign: \"left\",\n                    fontWeight: \"bolder\",\n                  }}\n                >\n                  Unit Insured\n                </span>\n                <span style={{ width: \"40px\", textAlign: \"left\" }}>:</span>\n                <span\n                  style={{\n                    flex: 1,\n                    textAlign: \"left\",\n                    fontWeight: \"bold\",\n                  }}\n                >\n                  {claimdsDetails.policy === \"COM\" ||\n                  claimdsDetails.policy === \"TPL\"\n                    ? `${claimdsDetails.Model} ${claimdsDetails.Make} ${claimdsDetails.BodyType}`\n                    : `${\n                        claimdsDetails.policy === \"PA\"\n                          ? \"Group Personal Accident\"\n                          : claimdsDetails.policy\n                      }`}\n                </span>\n              </div>\n              {claimdsDetails.policy === \"VPolicy\" && (\n                <>\n                  <div\n                    style={{\n                      width: \"100%\",\n                      display: \"flex\",\n                      padding: \"0 10px\",\n                      boxSizing: \"border-box\",\n                    }}\n                  >\n                    <span\n                      style={{\n                        flex: 1,\n                        textAlign: \"left\",\n                        fontWeight: \"bolder\",\n                      }}\n                    >\n                      Engine No.\n                    </span>\n                    <span style={{ width: \"40px\", textAlign: \"left\" }}>:</span>\n                    <span\n                      style={{\n                        flex: 1,\n                        textAlign: \"left\",\n                        fontWeight: \"bold\",\n                      }}\n                    >\n                      {claimdsDetails.MotorNo}\n                    </span>\n                  </div>\n                  <div\n                    style={{\n                      width: \"100%\",\n                      display: \"flex\",\n                      padding: \"0 10px\",\n                      boxSizing: \"border-box\",\n                    }}\n                  >\n                    <span\n                      style={{\n                        flex: 1,\n                        textAlign: \"left\",\n                        fontWeight: \"bolder\",\n                      }}\n                    >\n                      Chassis No.\n                    </span>\n                    <span style={{ width: \"40px\", textAlign: \"left\" }}>:</span>\n                    <span\n                      style={{\n                        flex: 1,\n                        textAlign: \"left\",\n                        fontWeight: \"bold\",\n                      }}\n                    >\n                      {claimdsDetails.ChassisNo}\n                    </span>\n                  </div>\n                </>\n              )}\n              <div\n                style={{\n                  width: \"100%\",\n                  display: \"flex\",\n                  padding: \"0 10px\",\n                  boxSizing: \"border-box\",\n                }}\n              >\n                <span\n                  style={{\n                    flex: 1,\n                    textAlign: \"left\",\n                    fontWeight: \"bolder\",\n                  }}\n                >\n                  Inception\n                </span>\n                <span style={{ width: \"40px\", textAlign: \"left\" }}>:</span>\n                <span\n                  style={{\n                    flex: 1,\n                    textAlign: \"left\",\n                    fontWeight: \"bold\",\n                  }}\n                >\n                  {`${format(\n                    new Date(claimdsDetails.DateFrom),\n                    \"MMMM d, yyyy\"\n                  )} - ${format(new Date(claimdsDetails.DateTo), \"yyyy\")}`}\n                </span>\n              </div>\n\n              <div\n                style={{\n                  width: \"100%\",\n                  display: \"flex\",\n                  padding: \"0 10px\",\n                  boxSizing: \"border-box\",\n                }}\n              >\n                <span\n                  style={{\n                    flex: 1,\n                    textAlign: \"left\",\n                    fontWeight: \"bolder\",\n                  }}\n                >\n                  Type of Claim\n                </span>\n                <span style={{ width: \"40px\", textAlign: \"left\" }}>:</span>\n                <div style={{ flex: 1 }}>\n                  {listofClaim.map((d: any, idx) => {\n                    return (\n                      <p\n                        style={{\n                          textAlign: \"left\",\n                          fontWeight: \"bold\",\n                          padding: \"0\",\n                          margin: \"0\",\n                        }}\n                        key={idx}\n                      >\n                        {claimType[d]}\n                      </p>\n                    );\n                  })}\n                </div>\n              </div>\n            </div>\n            <div\n              style={{\n                width: \"220px\",\n                alignSelf: \"self-start\",\n                minHeight: \"200px\",\n                maxHeight: \"auto\",\n                display: \"flex\",\n                flexDirection: \"column\",\n              }}\n            >\n              <div\n                style={{\n                  flex: 1,\n                  borderBottom: \"2px solid black\",\n                  padding: \"0 10px\",\n                }}\n              >\n                <p\n                  style={{\n                    fontWeight: \"bolder\",\n                    marginLeft: 0,\n                    marginTop: 0,\n                    marginRight: 0,\n                    marginBottom: \"10px\",\n                    padding: 0,\n                  }}\n                >\n                  Date Prepared:\n                </p>\n                <p\n                  style={{\n                    fontWeight: \"bold\",\n                    margin: 0,\n                    padding: 0,\n                  }}\n                >\n                  {format(new Date(), \"MMMM d, yyyy\")}\n                </p>\n              </div>\n              <div\n                style={{\n                  flex: 1,\n                  borderBottom: \"2px solid black\",\n                  padding: \"0 10px\",\n                }}\n              >\n                <p\n                  style={{\n                    fontWeight: \"bolder\",\n                    marginLeft: 0,\n                    marginTop: 0,\n                    marginRight: 0,\n                    marginBottom: \"10px\",\n                    padding: 0,\n                  }}\n                >\n                  Policy No.\n                </p>\n                <p\n                  style={{\n                    fontWeight: \"bold\",\n                    margin: 0,\n                    padding: 0,\n                  }}\n                >\n                  {claimdsDetails.PolicyNo}\n                </p>\n              </div>\n              <div\n                style={{\n                  flex: 1,\n                  padding: \"0 10px\",\n                }}\n              >\n                <p\n                  style={{\n                    fontWeight: \"bolder\",\n                    marginLeft: 0,\n                    marginTop: 0,\n                    marginRight: 0,\n                    marginBottom: \"10px\",\n                    padding: 0,\n                  }}\n                >\n                  Date of Accident\n                </p>\n                <p\n                  style={{\n                    fontWeight: \"bold\",\n                    margin: 0,\n                    padding: 0,\n                  }}\n                >\n                  {format(new Date(claimState.dateAccident), \"MMMM d, yyyy\")}\n                </p>\n              </div>\n            </div>\n          </div>\n          <div\n            style={{\n              border: \"2px solid black\",\n              height: \"170px\",\n              position: \"relative\",\n            }}\n          >\n            <p\n              style={{\n                borderBottom: \"2px solid black\",\n                padding: \"2px 5px\",\n                margin: \"0\",\n                fontWeight: \"bold\",\n                textAlign: \"left\",\n              }}\n            >\n              {claimdsDetails.department === 0\n                ? \"Under Writer\"\n                : \"Insurance Coordinator\"}\n            </p>\n            <p\n              style={{\n                width: \"200px\",\n                borderTop: \"2px solid black\",\n                padding: \"0\",\n                margin: \"0\",\n                fontWeight: \"bold\",\n                position: \"absolute\",\n                right: \"0\",\n                bottom: \"20px\",\n                textAlign: \"center\",\n              }}\n            >\n              {claimdsDetails.department === 0\n                ? \"Angelo Dacula\"\n                : \"Rina Fernandez\"}\n            </p>\n          </div>\n          <div\n            style={{\n              borderBottom: \"2px solid black\",\n              borderLeft: \"2px solid black\",\n              borderRight: \"2px solid black\",\n              height: \"170px\",\n              position: \"relative\",\n            }}\n          >\n            <p\n              style={{\n                borderBottom: \"2px solid black\",\n                padding: \"2px 5px\",\n                margin: \"0\",\n                fontWeight: \"bold\",\n                textAlign: \"left\",\n              }}\n            >\n              Accounting\n            </p>\n            <p\n              style={{\n                width: \"200px\",\n                borderTop: \"2px solid black\",\n                padding: \"0\",\n                margin: \"0\",\n                fontWeight: \"bold\",\n                position: \"absolute\",\n                right: \"0\",\n                bottom: \"20px\",\n                textAlign: \"center\",\n              }}\n            >\n              Gina Rondina\n            </p>\n            <div\n              style={{\n                padding: \"2px 5px\",\n                margin: \"0\",\n                fontWeight: \"bold\",\n                height: \"100%\",\n                display: \"flex\",\n                flexDirection: \"column\",\n                alignItems: \"center\",\n              }}\n            >\n              <div>\n                <div\n                  style={{\n                    textAlign: \"left\",\n                  }}\n                >\n                  <span\n                    style={{\n                      margin: 0,\n                      padding: 0,\n                    }}\n                  >\n                    {parseFloat(\n                      claimdsDetails.balance.toString().replace(/,/, \"\")\n                    ) <= 0\n                      ? \"Fully Paid,\"\n                      : \"Not Fully Paid,\"}\n                  </span>\n                  <span\n                    style={{\n                      margin: 0,\n                      padding: 0,\n                    }}\n                  >\n                    {parseFloat(\n                      claimdsDetails.balance.toString().replace(/,/, \"\")\n                    ) <= 0\n                      ? \"\"\n                      : ` Total balance : ${claimdsDetails.balance}`}\n                  </span>\n                </div>\n                <div>\n                  <span>\n                    {parseFloat(\n                      claimdsDetails.remitted.toString().replace(/,/, \"\")\n                    ) <= 0\n                      ? \"Not Remitted\"\n                      : \"Remitted\"}\n                  </span>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div\n            style={{\n              borderBottom: \"2px solid black\",\n              borderLeft: \"2px solid black\",\n              borderRight: \"2px solid black\",\n              height: \"170px\",\n              marginBottom: \"20px\",\n            }}\n          >\n            <p\n              style={{\n                padding: \"2px 5px\",\n                margin: \"0\",\n                fontWeight: \"bold\",\n                textAlign: \"left\",\n              }}\n            >\n              Remarks:\n            </p>\n            <pre\n              style={{\n                padding: \"2px 5px\",\n                margin: \"0\",\n                fontWeight: \"bold\",\n                textAlign: \"left\",\n                fontSize: \"15px\",\n              }}\n            >\n              {claimdsDetails.remarks}\n            </pre>\n          </div>\n          <div\n            style={{\n              border: \"2px solid black\",\n              height: \"140px\",\n              display: \"flex\",\n              justifyContent: \"space-around\",\n              flexDirection: \"column\",\n            }}\n          >\n            <p\n              style={{\n                padding: \"2px\",\n                margin: \"0\",\n              }}\n            >\n              <span\n                style={{\n                  fontWeight: \"bold\",\n                }}\n              >\n                Prepared by\n              </span>\n              <span\n                style={{\n                  margin: \"0\",\n                  fontWeight: \"bold\",\n                  marginLeft: \"100px\",\n                }}\n              >\n                Checked by\n              </span>\n            </p>\n            <div\n              style={{\n                display: \"flex\",\n                width: \"100%\",\n                height: \"auto\",\n                justifyContent: \"space-between\",\n                padding: \"0 10px\",\n                boxSizing: \"border-box\",\n              }}\n            >\n              <div style={{ textAlign: \"center\" }}>\n                <p\n                  style={{\n                    fontWeight: \"bolder\",\n                    fontSize: \"19px \",\n                    margin: 0,\n                    padding: 0,\n                  }}\n                >\n                  Pio Mendoza\n                </p>\n                <p\n                  style={{\n                    fontSize: \"13px\",\n                    fontWeight: \"bold\",\n                    margin: 0,\n                    padding: 0,\n                  }}\n                >\n                  Claims Officer\n                </p>\n              </div>\n              <div\n                style={{\n                  display: \"flex\",\n                  justifyContent: \"space-between\",\n                }}\n              >\n                <div style={{ textAlign: \"center\" }}>\n                  <p\n                    style={{\n                      fontWeight: \"bolder\",\n                      margin: 0,\n                      padding: 0,\n                      fontSize: \"19px \",\n                    }}\n                  >\n                    Mary Grace Lanera\n                  </p>\n                  <p\n                    style={{\n                      fontSize: \"13px\",\n                      fontWeight: \"bold\",\n                      margin: 0,\n                      padding: 0,\n                    }}\n                  >\n                    Operations Supervisor\n                  </p>\n                </div>\n              </div>\n              <div\n                style={{\n                  display: \"flex\",\n                  justifyContent: \"space-between\",\n                }}\n              >\n                <div style={{ textAlign: \"center\" }}>\n                  <p\n                    style={{\n                      fontWeight: \"bolder\",\n                      margin: 0,\n                      padding: 0,\n                      fontSize: \"19px \",\n                    }}\n                  >\n                    Leo Aquino\n                  </p>\n                  <p\n                    style={{\n                      fontSize: \"13px\",\n                      fontWeight: \"bold\",\n                      margin: 0,\n                      padding: 0,\n                    }}\n                  >\n                    General Manager\n                  </p>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      );\n    };\n    flushSync(() => {\n      const elementString = ReactDOMServer.renderToString(\n        printString({\n          ...claimState,\n          ...policyState,\n        })\n      );\n\n      localStorage.setItem(\"printString\", elementString);\n    });\n    window.open(\"/dashboard/print\", \"_blank\");\n\n    handleClose();\n  };\n  if (isLoadingClaimSelectedPolicyDetails) {\n    return <div>Loading...</div>;\n  }\n\n  return (\n    <div\n      style={{ display: \"flex\", columnGap: \"10px\", flexDirection: \"column\" }}\n    >\n      <div style={{ display: \"flex\", columnGap: \"10px\" }}>\n        {isLoadingClaimModal ? (\n          <LoadingButton loading={isLoadingClaimModal} />\n        ) : (\n          <FormControl\n            sx={{\n              width: \"400px\",\n              \".MuiFormLabel-root\": {\n                fontSize: \"14px\",\n                background: \"white\",\n                zIndex: 99,\n                padding: \"0 3px\",\n              },\n              \".MuiFormLabel-root[data-shrink=false]\": {\n                top: \"-5px\",\n              },\n            }}\n            variant=\"outlined\"\n            size=\"small\"\n          >\n            <InputLabel htmlFor=\"search-claim-id\">Search</InputLabel>\n            <OutlinedInput\n              sx={{\n                height: \"27px\",\n                fontSize: \"14px\",\n                legend: {\n                  background: \"red\",\n                },\n              }}\n              inputRef={policySearchInputRef}\n              name=\"search\"\n              value={claimState.search}\n              onChange={handleInputChange}\n              id=\"search-claim-id\"\n              onKeyDown={(e) => {\n                if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n                  return openClaimModal(claimState.search);\n                }\n              }}\n              endAdornment={\n                <InputAdornment position=\"end\">\n                  <IconButton\n                    onClick={() => {\n                      openClaimModal(claimState.search);\n                    }}\n                    edge=\"end\"\n                    color=\"secondary\"\n                  >\n                    <PersonSearchIcon />\n                  </IconButton>\n                </InputAdornment>\n              }\n              label=\"Search\"\n            />\n          </FormControl>\n        )}\n        {isLoadingClaimsId ? (\n          <LoadingButton loading={isLoadingClaimsId} />\n        ) : (\n          <FormControl\n            variant=\"outlined\"\n            size=\"small\"\n            sx={{\n              width: \"140px\",\n              \".MuiFormLabel-root\": {\n                fontSize: \"14px\",\n                background: \"white\",\n                zIndex: 99,\n                padding: \"0 3px\",\n              },\n              \".MuiFormLabel-root[data-shrink=false]\": { top: \"-1px\" },\n            }}\n          >\n            <InputLabel htmlFor=\"claims_id\">Claim ID.</InputLabel>\n            <OutlinedInput\n              sx={{\n                height: \"27px\",\n                fontSize: \"14px\",\n              }}\n              fullWidth\n              label=\"Claim ID.\"\n              name=\"claims_id\"\n              value={claimState.claims_id}\n              onChange={handleInputChange}\n              onKeyDown={(e) => {\n                if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n                  e.preventDefault();\n                  return refetchClaimsId();\n                }\n              }}\n              readOnly={true}\n              id=\"claims_id\"\n              endAdornment={\n                <InputAdornment position=\"end\">\n                  <IconButton\n                    color=\"secondary\"\n                    edge=\"end\"\n                    onClick={() => {\n                      refetchClaimsId();\n                    }}\n                  >\n                    <RestartAltIcon />\n                  </IconButton>\n                </InputAdornment>\n              }\n            />\n          </FormControl>\n        )}\n        <div>\n          <Button\n            disabled={claimState.mode !== \"update\"}\n            id=\"basic-button\"\n            aria-controls={open ? \"basic-menu\" : undefined}\n            aria-haspopup=\"true\"\n            aria-expanded={open ? \"true\" : undefined}\n            onClick={handleClick}\n            sx={{\n              height: \"30px\",\n              fontSize: \"11px\",\n              color: \"white\",\n              backgroundColor: grey[600],\n              \"&:hover\": {\n                backgroundColor: grey[700],\n              },\n            }}\n          >\n            Print\n          </Button>\n          <Menu\n            id=\"basic-menu\"\n            anchorEl={anchorEl}\n            open={open}\n            onClose={handleClose}\n            MenuListProps={{\n              \"aria-labelledby\": \"basic-button\",\n            }}\n          >\n            <MenuItem onClick={clickClaimInformationSheet}>\n              Claim Information Sheet\n            </MenuItem>\n          </Menu>\n        </div>\n        <Button\n          id=\"basic-button\"\n          aria-haspopup=\"true\"\n          sx={{\n            height: \"30px\",\n            fontSize: \"11px\",\n          }}\n          color=\"primary\"\n          variant=\"contained\"\n          onClick={() => {\n            if (policyState.PolicyNo === \"\") {\n              Swal.fire({\n                title: \"Opppss!\",\n                text: `You need to select policy first!`,\n                icon: \"warning\",\n                showCancelButton: true,\n                confirmButtonColor: \"#3085d6\",\n                cancelButtonColor: \"#d33\",\n                confirmButtonText: `Yes, select policy!`,\n              }).then((result) => {\n                if (result.isConfirmed) {\n                  openPolicyModal(policyState.PolicyNo);\n                }\n              });\n              return;\n            }\n            setNewStateValue(policyDispatch, {\n              claim_type: 0,\n              status: 0,\n              DateReceived: null,\n              DateClaim: null,\n              AmountClaim: \"\",\n              AmountApproved: \"\",\n              NameTPPD: \"\",\n            });\n            setShowModal(true);\n          }}\n        >\n          ADD\n        </Button>\n        <LoadingButton\n          loading={isLoadingClaimSave}\n          id=\"basic-button\"\n          aria-haspopup=\"true\"\n          sx={{\n            height: \"30px\",\n            fontSize: \"11px\",\n          }}\n          variant=\"contained\"\n          color=\"success\"\n          onClick={() => {\n            Swal.fire({\n              title: \"Are you sure?\",\n              text: `You want to ${\n                claimState.mode === \"update\" ? \"save changes!\" : \"save it!\"\n              }`,\n              icon: \"warning\",\n              showCancelButton: true,\n              confirmButtonColor: \"#3085d6\",\n              cancelButtonColor: \"#d33\",\n              confirmButtonText: `Yes, ${\n                claimState.mode === \"update\" ? \"save changes!\" : \"save it!\"\n              } `,\n            }).then(async (result) => {\n              if (result.isConfirmed) {\n                if (claimState.mode === \"update\") {\n                  return codeCondfirmationAlert({\n                    isUpdate: true,\n                    cb: (userCodeConfirmation) => {\n                      mutateClaimSave({\n                        ...claimState,\n                        claimsSubmited,\n                        userCodeConfirmation,\n                      });\n                    },\n                  });\n                } else {\n                  return mutateClaimSave({ ...claimState, claimsSubmited });\n                }\n              }\n            });\n          }}\n        >\n          {claimState.mode === \"update\" ? \"SAVE CHANGES\" : \"SAVE\"}\n        </LoadingButton>\n        {claimState.mode === \"update\" && (\n          <Button\n            variant=\"contained\"\n            color=\"error\"\n            aria-haspopup=\"true\"\n            sx={{\n              height: \"30px\",\n              fontSize: \"11px\",\n            }}\n            onClick={() => {\n              Swal.fire({\n                title: \"Are you sure?\",\n                text: `You want to discard the changes!`,\n                icon: \"warning\",\n                showCancelButton: true,\n                confirmButtonColor: \"#3085d6\",\n                cancelButtonColor: \"#d33\",\n                confirmButtonText: \"Yes, discard it!\",\n              }).then(async (result) => {\n                if (result.isConfirmed) {\n                  setNewStateValue(claimDispatch, initialClaimState);\n                  setNewStateValue(policyDispatch, initialPolicyState);\n                  setClaimsSubmited([]);\n                  refetchClaimsId();\n                }\n              });\n            }}\n          >\n            Discard Changes\n          </Button>\n        )}\n        {policyState.PolicyNo !== \"\" && claimState.mode !== \"update\" && (\n          <Button\n            id=\"basic-button\"\n            aria-haspopup=\"true\"\n            sx={{\n              height: \"30px\",\n              fontSize: \"11px\",\n            }}\n            color=\"error\"\n            variant=\"contained\"\n            onClick={() => {\n              Swal.fire({\n                title: \"Are you sure?\",\n                text: `You want to cancel!`,\n                icon: \"warning\",\n                showCancelButton: true,\n                confirmButtonColor: \"#3085d6\",\n                cancelButtonColor: \"#d33\",\n                confirmButtonText: `Yes, Cancel it!`,\n              }).then(async (result) => {\n                if (result.isConfirmed) {\n                  setNewStateValue(claimDispatch, initialClaimState);\n                  setNewStateValue(policyDispatch, initialPolicyState);\n                  setClaimsSubmited([]);\n                  refetchClaimsId();\n                }\n              });\n            }}\n          >\n            CANCEL\n          </Button>\n        )}\n      </div>\n      <div style={{ display: \"flex\", marginTop: \"20px\", columnGap: \"10px\" }}>\n        <CustomDatePicker\n          textField={{\n            InputLabelProps: {\n              style: {\n                fontSize: \"14px\",\n              },\n            },\n            InputProps: {\n              style: { height: \"27px\", fontSize: \"14px\" },\n            },\n          }}\n          label=\"Date Reported\"\n          onChange={(value: any) => {\n            claimDispatch({\n              type: \"UPDATE_FIELD\",\n              field: \"dateReported\",\n              value: value,\n            });\n          }}\n          value={\n            claimState.dateReported ? new Date(claimState.dateReported) : null\n          }\n          onKeyDown={(e: any) => {\n            if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n              const timeout = setTimeout(() => {\n                datePickerRef.current?.querySelector(\"button\")?.click();\n                clearTimeout(timeout);\n              }, 150);\n            }\n          }}\n          datePickerRef={datePickerRef}\n        />\n        <CustomDatePicker\n          textField={{\n            InputLabelProps: {\n              style: {\n                fontSize: \"14px\",\n              },\n            },\n            InputProps: {\n              style: { height: \"27px\", fontSize: \"14px\" },\n            },\n          }}\n          label=\"Date Accident\"\n          onChange={(value: any) => {\n            claimDispatch({\n              type: \"UPDATE_FIELD\",\n              field: \"dateAccident\",\n              value: value,\n            });\n          }}\n          value={\n            claimState.dateAccident ? new Date(claimState.dateAccident) : null\n          }\n          onKeyDown={(e: any) => {\n            if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n              const timeout = setTimeout(() => {\n                dateAccidentRef.current?.querySelector(\"button\")?.click();\n                clearTimeout(timeout);\n              }, 150);\n            }\n          }}\n          datePickerRef={dateAccidentRef}\n        />\n        <CustomDatePicker\n          textField={{\n            InputLabelProps: {\n              style: {\n                fontSize: \"14px\",\n              },\n            },\n            InputProps: {\n              style: { height: \"27px\", fontSize: \"14px\" },\n            },\n          }}\n          label=\"Date Inspected\"\n          onChange={(value: any) => {\n            claimDispatch({\n              type: \"UPDATE_FIELD\",\n              field: \"dateInspected\",\n              value: value,\n            });\n          }}\n          value={\n            claimState.dateInspected ? new Date(claimState.dateInspected) : null\n          }\n          onKeyDown={(e: any) => {\n            if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n              const timeout = setTimeout(() => {\n                dateInspectedRef.current?.querySelector(\"button\")?.click();\n                clearTimeout(timeout);\n              }, 150);\n            }\n          }}\n          datePickerRef={dateInspectedRef}\n        />\n        <FormControl\n          sx={{\n            width: \"200px\",\n            \".MuiFormLabel-root\": {\n              fontSize: \"14px\",\n              background: \"white\",\n              zIndex: 99,\n              padding: \"0 3px\",\n            },\n            \".MuiFormLabel-root[data-shrink=false]\": { top: \"-12px\" },\n          }}\n        >\n          <InputLabel id=\"department-field\">Department</InputLabel>\n          <Select\n            labelId=\"department-field\"\n            value={claimState.department}\n            onChange={handleInputChange}\n            label=\"department\"\n            size=\"small\"\n            name=\"department\"\n            sx={{\n              height: \"27px\",\n              fontSize: \"14px\",\n            }}\n            fullWidth\n          >\n            {[\"UMIS\", \"UCSMI\"].map((itm, idx) => {\n              return (\n                <MenuItem key={idx} value={idx}>\n                  {itm}\n                </MenuItem>\n              );\n            })}\n          </Select>\n        </FormControl>\n        <TextField\n          name=\"remarks\"\n          label=\"Remarks\"\n          size=\"small\"\n          value={claimState.remarks}\n          onChange={handleInputChange}\n          InputProps={{\n            style: {\n              height: \"27px\",\n              fontSize: \"14px\",\n              color: \"whie\",\n            },\n          }}\n          sx={{\n            width: \"100%\",\n            \".MuiFormLabel-root\": { fontSize: \"14px\" },\n            \".MuiFormLabel-root[data-shrink=false]\": {\n              top: \"-5px\",\n            },\n          }}\n        />\n      </div>\n      <fieldset\n        style={{\n          display: \"flex\",\n          columnGap: \"15px\",\n          padding: \"10px\",\n          border: \"1px solid #cbd5e1\",\n          borderRadius: \"5px\",\n          position: \"relative\",\n        }}\n      >\n        <legend>Policy Details</legend>\n        <div\n          style={{\n            display: \"flex\",\n            width: \"100%\",\n            gap: \"15px\",\n            flexDirection: \"column\",\n          }}\n        >\n          <div\n            style={{\n              flex: \"1\",\n              display: \"grid\",\n              gridTemplateColumns: \"repeat(4,1fr)\",\n              gap: \"7px\",\n            }}\n          >\n            {isLoadingPolicyModal ? (\n              <LoadingButton loading={isLoadingPolicyModal} />\n            ) : (\n              <FormControl\n                sx={{\n                  width: \"100%\",\n                  \".MuiFormLabel-root\": {\n                    fontSize: \"14px\",\n                    background: \"white\",\n                    zIndex: 99,\n                    padding: \"0 3px\",\n                  },\n                  \".MuiFormLabel-root[data-shrink=false]\": {\n                    top: \"-5px\",\n                  },\n                }}\n                variant=\"outlined\"\n                size=\"small\"\n              >\n                <InputLabel htmlFor=\"policy-no\">Policy No.</InputLabel>\n                <OutlinedInput\n                  sx={{\n                    height: \"27px\",\n                    fontSize: \"14px\",\n                    legend: {\n                      background: \"red\",\n                    },\n                  }}\n                  inputRef={policySearchInputRef}\n                  name=\"PolicyNo\"\n                  value={policyState.PolicyNo}\n                  onChange={handleInputChange}\n                  id=\"policy-no\"\n                  onKeyDown={(e) => {\n                    if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n                      return openPolicyModal(policyState.PolicyNo);\n                    }\n                  }}\n                  endAdornment={\n                    <InputAdornment position=\"end\">\n                      <IconButton\n                        disabled={policyState.mode === \"\"}\n                        onClick={() => {\n                          openPolicyModal(policyState.PolicyNo);\n                        }}\n                        edge=\"end\"\n                        color=\"secondary\"\n                      >\n                        <PersonSearchIcon />\n                      </IconButton>\n                    </InputAdornment>\n                  }\n                  label=\"Policy No.\"\n                />\n              </FormControl>\n            )}\n            <TextField\n              name=\"policy\"\n              label=\"Policy\"\n              size=\"small\"\n              value={policyState.policy}\n              onChange={handleInputChange}\n              InputProps={{\n                style: {\n                  height: \"27px\",\n                  fontSize: \"14px\",\n                  color: \"whie\",\n                },\n                readOnly: true,\n              }}\n              sx={{\n                \".MuiFormLabel-root\": { fontSize: \"14px\" },\n                \".MuiFormLabel-root[data-shrink=false]\": {\n                  top: \"-5px\",\n                },\n              }}\n            />\n            <TextField\n              name=\"AssuredName\"\n              label=\"Assured Name\"\n              size=\"small\"\n              value={policyState.AssuredName}\n              onChange={handleInputChange}\n              InputProps={{\n                style: {\n                  height: \"27px\",\n                  fontSize: \"14px\",\n                  color: \"whie\",\n                },\n                readOnly: true,\n              }}\n              sx={{\n                gridColumn: \"3/ span 2\",\n                width: \"100%\",\n                \".MuiFormLabel-root\": { fontSize: \"14px\" },\n                \".MuiFormLabel-root[data-shrink=false]\": {\n                  top: \"-5px\",\n                },\n              }}\n            />\n            <TextField\n              name=\"Account\"\n              label=\"Account Insurance\"\n              size=\"small\"\n              value={policyState.Account}\n              onChange={handleInputChange}\n              InputProps={{\n                style: { height: \"27px\", fontSize: \"14px\" },\n                readOnly: true,\n              }}\n              sx={{\n                width: \"100%\",\n                \".MuiFormLabel-root\": { fontSize: \"14px\" },\n                \".MuiFormLabel-root[data-shrink=false]\": {\n                  top: \"-5px\",\n                },\n              }}\n            />\n            <TextField\n              name=\"Model\"\n              label=\"Model\"\n              size=\"small\"\n              value={policyState.Model}\n              onChange={handleInputChange}\n              InputProps={{\n                style: { height: \"27px\", fontSize: \"14px\" },\n                readOnly: true,\n              }}\n              sx={{\n                width: \"100%\",\n                \".MuiFormLabel-root\": { fontSize: \"14px\" },\n                \".MuiFormLabel-root[data-shrink=false]\": {\n                  top: \"-5px\",\n                },\n              }}\n            />\n            <TextField\n              name=\"PlateNo\"\n              label=\"Plate No\"\n              size=\"small\"\n              value={policyState.PlateNo}\n              onChange={handleInputChange}\n              InputProps={{\n                style: { height: \"27px\", fontSize: \"14px\" },\n                readOnly: true,\n              }}\n              sx={{\n                width: \"100%\",\n                \".MuiFormLabel-root\": { fontSize: \"14px\" },\n                \".MuiFormLabel-root[data-shrink=false]\": {\n                  top: \"-5px\",\n                },\n              }}\n            />\n            <TextField\n              name=\"ChassisNo\"\n              label=\"Chassis No\"\n              size=\"small\"\n              value={policyState.ChassisNo}\n              onChange={handleInputChange}\n              InputProps={{\n                style: { height: \"27px\", fontSize: \"14px\" },\n                readOnly: true,\n              }}\n              sx={{\n                width: \"100%\",\n                \".MuiFormLabel-root\": { fontSize: \"14px\" },\n                \".MuiFormLabel-root[data-shrink=false]\": {\n                  top: \"-5px\",\n                },\n              }}\n            />\n            <TextField\n              name=\"MotorNo.\"\n              label=\"Motor No\"\n              size=\"small\"\n              value={policyState.MotorNo}\n              onChange={handleInputChange}\n              InputProps={{\n                style: { height: \"27px\", fontSize: \"14px\" },\n                readOnly: true,\n              }}\n              sx={{\n                width: \"100%\",\n                \".MuiFormLabel-root\": { fontSize: \"14px\" },\n                \".MuiFormLabel-root[data-shrink=false]\": {\n                  top: \"-5px\",\n                },\n              }}\n            />\n            <TextField\n              name=\"CoverNo\"\n              label=\"Cover No\"\n              size=\"small\"\n              value={policyState.CoverNo}\n              onChange={handleInputChange}\n              InputProps={{\n                style: { height: \"27px\", fontSize: \"14px\" },\n                readOnly: true,\n              }}\n              sx={{\n                width: \"100%\",\n                \".MuiFormLabel-root\": { fontSize: \"14px\" },\n                \".MuiFormLabel-root[data-shrink=false]\": {\n                  top: \"-5px\",\n                },\n              }}\n            />\n            <TextField\n              name=\"BLTFileNo\"\n              label=\"BLTFileNo\"\n              size=\"small\"\n              value={policyState.BLTFileNo}\n              onChange={handleInputChange}\n              InputProps={{\n                style: { height: \"27px\", fontSize: \"14px\" },\n                readOnly: true,\n              }}\n              sx={{\n                width: \"100%\",\n                \".MuiFormLabel-root\": { fontSize: \"14px\" },\n                \".MuiFormLabel-root[data-shrink=false]\": {\n                  top: \"-5px\",\n                },\n              }}\n            />\n            <TextField\n              name=\"BodyType\"\n              label=\"Body Type\"\n              size=\"small\"\n              value={policyState.BodyType}\n              onChange={handleInputChange}\n              InputProps={{\n                style: { height: \"27px\", fontSize: \"14px\" },\n                readOnly: true,\n              }}\n              sx={{\n                width: \"100%\",\n                \".MuiFormLabel-root\": { fontSize: \"14px\" },\n                \".MuiFormLabel-root[data-shrink=false]\": {\n                  top: \"-5px\",\n                },\n              }}\n            />\n            <TextField\n              name=\"Make\"\n              label=\"Make\"\n              size=\"small\"\n              value={policyState.Make}\n              onChange={handleInputChange}\n              InputProps={{\n                style: { height: \"27px\", fontSize: \"14px\" },\n                readOnly: true,\n              }}\n              sx={{\n                width: \"100%\",\n                \".MuiFormLabel-root\": { fontSize: \"14px\" },\n                \".MuiFormLabel-root[data-shrink=false]\": {\n                  top: \"-5px\",\n                },\n              }}\n            />\n            <TextField\n              name=\"ORNo\"\n              label=\"OR No.\"\n              size=\"small\"\n              value={policyState.ORNo}\n              onChange={handleInputChange}\n              InputProps={{\n                style: { height: \"27px\", fontSize: \"14px\" },\n                readOnly: true,\n              }}\n              sx={{\n                width: \"100%\",\n                \".MuiFormLabel-root\": { fontSize: \"14px\" },\n                \".MuiFormLabel-root[data-shrink=false]\": {\n                  top: \"-5px\",\n                },\n              }}\n            />\n          </div>\n          <div\n            style={{\n              display: \"grid\",\n              gap: \"15px\",\n              flex: \"1\",\n              gridTemplateColumns: \"repeat(4,1fr)\",\n            }}\n          >\n            <fieldset\n              style={{\n                display: \"flex\",\n                gap: \"15px\",\n                border: \"1px solid #cbd5e1\",\n                borderRadius: \"5px\",\n                gridTemplateColumns: \"repeat(4,1fr)\",\n                gridColumn: \"1 / span 3\",\n              }}\n            >\n              <legend>Client Payment</legend>\n              <TextField\n                name=\"totaDue\"\n                label=\"Total Due\"\n                size=\"small\"\n                value={policyState.totaDue}\n                onChange={handleInputChange}\n                InputProps={{\n                  style: { height: \"27px\", fontSize: \"14px\" },\n                  readOnly: true,\n                }}\n                sx={{\n                  width: \"100%\",\n                  \".MuiFormLabel-root\": { fontSize: \"14px\" },\n                  \".MuiFormLabel-root[data-shrink=false]\": {\n                    top: \"-5px\",\n                  },\n                }}\n              />\n              <TextField\n                name=\"totalpaid\"\n                label=\"Total Paid\"\n                size=\"small\"\n                value={policyState.totalpaid}\n                onChange={handleInputChange}\n                InputProps={{\n                  style: { height: \"27px\", fontSize: \"14px\" },\n                  readOnly: true,\n                }}\n                sx={{\n                  width: \"100%\",\n                  \".MuiFormLabel-root\": { fontSize: \"14px\" },\n                  \".MuiFormLabel-root[data-shrink=false]\": {\n                    top: \"-5px\",\n                  },\n                }}\n              />\n              <TextField\n                name=\"balance\"\n                label=\"Balance\"\n                size=\"small\"\n                value={policyState.balance}\n                onChange={handleInputChange}\n                InputProps={{\n                  style: { height: \"27px\", fontSize: \"14px\" },\n                  readOnly: true,\n                }}\n                sx={{\n                  width: \"100%\",\n                  \".MuiFormLabel-root\": { fontSize: \"14px\" },\n                  \".MuiFormLabel-root[data-shrink=false]\": {\n                    top: \"-5px\",\n                  },\n                }}\n              />\n            </fieldset>\n            <fieldset\n              style={{\n                display: \"flex\",\n                border: \"1px solid #cbd5e1\",\n                borderRadius: \"5px\",\n              }}\n            >\n              <legend>Insurance Payment</legend>\n              <TextField\n                name=\"remitted\"\n                label=\"Remitted\"\n                size=\"small\"\n                value={policyState.remitted}\n                onChange={handleInputChange}\n                InputProps={{\n                  style: { height: \"27px\", fontSize: \"14px\" },\n                  readOnly: true,\n                }}\n                sx={{\n                  width: \"100%\",\n                  \".MuiFormLabel-root\": { fontSize: \"14px\" },\n                  \".MuiFormLabel-root[data-shrink=false]\": {\n                    top: \"-5px\",\n                  },\n                }}\n              />\n            </fieldset>\n          </div>\n        </div>\n      </fieldset>\n      <div\n        style={{\n          marginTop: \"20px\",\n          border: \"1px solid #94a3b8\",\n          minHeight: \"600px\",\n        }}\n      >\n        <h1 style={{ textAlign: \"center\" }}>LIST OF CLAIMS</h1>\n        <div style={{ padding: \"20px\", display: \"flex\", flexWrap: \"wrap\" }}>\n          <table\n            style={{\n              borderCollapse: \"collapse\",\n              width: \"100%\",\n              fontSize: \"13px\",\n            }}\n            className=\"claim-list\"\n          >\n            <thead>\n              <tr style={{ borderBottom: \"1px solid black\" }}>\n                <th>ACTION</th>\n                <th>CLAIM TYPE</th>\n                <th>STATUS</th>\n                <th>DATE RECEIVED</th>\n                <th>DATE CLAIM</th>\n                <th>AMOUNT CLAIM</th>\n                <th>AMOUNT APPROVED</th>\n              </tr>\n            </thead>\n            <tbody>\n              {claimsSubmited.length > 0 &&\n                sortList(claimsSubmited)?.map((itm: any, idx: number) => {\n                  const statusArray = claimsStatus.sort();\n                  return (\n                    <tr key={idx}>\n                      <td className=\"left\">\n                        <Stack\n                          direction=\"row\"\n                          alignItems=\"center\"\n                          spacing={1}\n                          justifyContent={\"center\"}\n                        >\n                          <IconButton\n                            size=\"small\"\n                            color=\"secondary\"\n                            onClick={() => handleTdClick(itm)}\n                          >\n                            <VisibilityIcon fontSize=\"inherit\" />\n                          </IconButton>\n                          <IconButton\n                            size=\"small\"\n                            color=\"info\"\n                            onClick={() => {\n                              const title = document.createElement(\"h1\");\n                              const div = document.createElement(\"div\");\n                              const content = document.createElement(\"div\");\n                              title.textContent = \"Claim Summary\";\n                              const contentchild =\n                                document.createElement(\"div\");\n                              const buttonClose =\n                                document.createElement(\"button\");\n                              const body = document.body;\n\n                              const basic = itm.basicFileCustom.map(\n                                (d: any) => d.datakey\n                              );\n\n                              const uniqueBasicArray = basic.filter(\n                                (item: any, index: number) =>\n                                  basic.indexOf(item) === index\n                              );\n\n                              const other = itm.otherFileCustom.map(\n                                (d: any) => d.datakey\n                              );\n                              const uniqueOtherArray = other.filter(\n                                (item: any, index: number) =>\n                                  other.indexOf(item) === index\n                              );\n\n                              const insuranceFile = itm.insuranceFileCustom.map(\n                                (d: any) => d.datakey\n                              );\n\n                              const uniqueInsuranceArray = insuranceFile.filter(\n                                (item: any, index: number) =>\n                                  insuranceFile.indexOf(item) === index\n                              );\n\n                              const tableString = (\n                                <table style={{ fontSize: \"12px\" }}>\n                                  <tbody>\n                                    <tr>\n                                      <td className=\"datakey\">Claim Type</td>\n                                      <td>\n                                        {claimType[itm.policyState.claim_type]}\n                                      </td>\n                                    </tr>\n                                    <tr>\n                                      <td className=\"datakey\">Status</td>\n                                      <td>\n                                        {statusArray[itm.policyState.status]}\n                                      </td>\n                                    </tr>\n                                    <tr>\n                                      <td className=\"datakey\">Date Received</td>\n                                      <td>\n                                        {itm.policyState.DateReceived\n                                          ? format(\n                                              new Date(\n                                                itm.policyState.DateReceived\n                                              ),\n                                              \"yyyy/MM/dd\"\n                                            )\n                                          : \"Not Set\"}\n                                      </td>\n                                    </tr>\n                                    <tr>\n                                      <td className=\"datakey\">Date Claim</td>\n                                      <td>\n                                        {itm.policyState.DateClaim\n                                          ? format(\n                                              new Date(\n                                                itm.policyState.DateClaim\n                                              ),\n                                              \"yyyy/MM/dd\"\n                                            )\n                                          : \"Not Set\"}\n                                      </td>\n                                    </tr>\n                                    <tr>\n                                      <td className=\"datakey\">Amount Claim</td>\n                                      <td>\n                                        {itm.policyState.AmountClaim ?? \"\"}\n                                      </td>\n                                    </tr>\n                                    <tr>\n                                      <td className=\"datakey\">\n                                        Amount Approved\n                                      </td>\n                                      <td>\n                                        {itm.policyState.AmountApproved ?? \"\"}\n                                      </td>\n                                    </tr>\n                                    {itm.policyState.claim_type > 1 && (\n                                      <tr>\n                                        <td className=\"datakey\">\n                                          Name of Third Party\n                                        </td>\n                                        <td>{itm.policyState.NameTPPD}</td>\n                                      </tr>\n                                    )}\n                                    <tr\n                                      style={{\n                                        borderTop: \"1px solid black\",\n                                        borderBottom: \"1px solid black\",\n                                      }}\n                                    >\n                                      <td\n                                        colSpan={2}\n                                        style={{\n                                          fontWeight: \"bolder\",\n                                          padding: \"5px\",\n                                          color: \"#d97706\",\n                                        }}\n                                      >\n                                        Basic Document\n                                      </td>\n                                    </tr>\n                                    {basicDocuments.map((itm, idx) => {\n                                      return (\n                                        <tr key={idx}>\n                                          <td className=\"datakey\">\n                                            {itm.label}\n                                          </td>\n                                          <td>\n                                            {uniqueBasicArray.includes(\n                                              itm.name\n                                            ) ? (\n                                              <span style={{ color: \"green\" }}>\n                                                <svg\n                                                  xmlns=\"http://www.w3.org/2000/svg\"\n                                                  width=\"20px\"\n                                                  height=\"20px\"\n                                                  viewBox=\"0 0 24 24\"\n                                                  fill=\"none\"\n                                                >\n                                                  <path\n                                                    d=\"M4 14L9 19L20 8M6 8.88889L9.07692 12L16 5\"\n                                                    stroke=\"green\"\n                                                    strokeWidth=\"2\"\n                                                    strokeLinecap=\"round\"\n                                                    strokeLinejoin=\"round\"\n                                                  />\n                                                </svg>\n                                              </span>\n                                            ) : (\n                                              <span style={{ color: \"grey\" }}>\n                                                <svg\n                                                  xmlns=\"http://www.w3.org/2000/svg\"\n                                                  width=\"15px\"\n                                                  height=\"15px\"\n                                                  viewBox=\"0 0 24 24\"\n                                                  fill=\"none\"\n                                                >\n                                                  <path\n                                                    d=\"M20.7457 3.32851C20.3552 2.93798 19.722 2.93798 19.3315 3.32851L12.0371 10.6229L4.74275 3.32851C4.35223 2.93798 3.71906 2.93798 3.32854 3.32851C2.93801 3.71903 2.93801 4.3522 3.32854 4.74272L10.6229 12.0371L3.32856 19.3314C2.93803 19.722 2.93803 20.3551 3.32856 20.7457C3.71908 21.1362 4.35225 21.1362 4.74277 20.7457L12.0371 13.4513L19.3315 20.7457C19.722 21.1362 20.3552 21.1362 20.7457 20.7457C21.1362 20.3551 21.1362 19.722 20.7457 19.3315L13.4513 12.0371L20.7457 4.74272C21.1362 4.3522 21.1362 3.71903 20.7457 3.32851Z\"\n                                                    fill=\"grey\"\n                                                  />\n                                                </svg>\n                                              </span>\n                                            )}\n                                          </td>\n                                        </tr>\n                                      );\n                                    })}\n                                    <tr\n                                      style={{\n                                        borderTop: \"1px solid black\",\n                                        borderBottom: \"1px solid black\",\n                                      }}\n                                    >\n                                      <td\n                                        colSpan={2}\n                                        style={{\n                                          fontWeight: \"bolder\",\n                                          padding: \"5px\",\n                                          color: \"#d97706\",\n                                        }}\n                                      >\n                                        Other Document\n                                      </td>\n                                    </tr>\n                                    {renderFields()[\n                                      itm.policyState.claim_type\n                                    ].map((itm, idx) => {\n                                      return (\n                                        <tr key={idx}>\n                                          <td className=\"datakey\">\n                                            {itm.label}\n                                          </td>\n                                          <td>\n                                            {uniqueOtherArray.includes(\n                                              itm.name\n                                            ) ? (\n                                              <span style={{ color: \"green\" }}>\n                                                <svg\n                                                  xmlns=\"http://www.w3.org/2000/svg\"\n                                                  width=\"20px\"\n                                                  height=\"20px\"\n                                                  viewBox=\"0 0 24 24\"\n                                                  fill=\"none\"\n                                                >\n                                                  <path\n                                                    d=\"M4 14L9 19L20 8M6 8.88889L9.07692 12L16 5\"\n                                                    stroke=\"green\"\n                                                    strokeWidth=\"2\"\n                                                    strokeLinecap=\"round\"\n                                                    strokeLinejoin=\"round\"\n                                                  />\n                                                </svg>\n                                              </span>\n                                            ) : (\n                                              <span style={{ color: \"grey\" }}>\n                                                <svg\n                                                  xmlns=\"http://www.w3.org/2000/svg\"\n                                                  width=\"15px\"\n                                                  height=\"15px\"\n                                                  viewBox=\"0 0 24 24\"\n                                                  fill=\"none\"\n                                                >\n                                                  <path\n                                                    d=\"M20.7457 3.32851C20.3552 2.93798 19.722 2.93798 19.3315 3.32851L12.0371 10.6229L4.74275 3.32851C4.35223 2.93798 3.71906 2.93798 3.32854 3.32851C2.93801 3.71903 2.93801 4.3522 3.32854 4.74272L10.6229 12.0371L3.32856 19.3314C2.93803 19.722 2.93803 20.3551 3.32856 20.7457C3.71908 21.1362 4.35225 21.1362 4.74277 20.7457L12.0371 13.4513L19.3315 20.7457C19.722 21.1362 20.3552 21.1362 20.7457 20.7457C21.1362 20.3551 21.1362 19.722 20.7457 19.3315L13.4513 12.0371L20.7457 4.74272C21.1362 4.3522 21.1362 3.71903 20.7457 3.32851Z\"\n                                                    fill=\"grey\"\n                                                  />\n                                                </svg>\n                                              </span>\n                                            )}\n                                          </td>\n                                        </tr>\n                                      );\n                                    })}\n                                    <tr\n                                      style={{\n                                        borderTop: \"1px solid black\",\n                                        borderBottom: \"1px solid black\",\n                                      }}\n                                    >\n                                      <td\n                                        colSpan={2}\n                                        style={{\n                                          fontWeight: \"bolder\",\n                                          padding: \"5px\",\n                                          color: \"#d97706\",\n                                        }}\n                                      >\n                                        Insurance Documents\n                                      </td>\n                                    </tr>\n                                    {insuranceDocuments.map((itm, idx) => {\n                                      return (\n                                        <tr key={idx}>\n                                          <td className=\"datakey\">\n                                            {itm.label}\n                                          </td>\n                                          <td>\n                                            {uniqueInsuranceArray.includes(\n                                              itm.name\n                                            ) ? (\n                                              <span style={{ color: \"green\" }}>\n                                                <svg\n                                                  xmlns=\"http://www.w3.org/2000/svg\"\n                                                  width=\"20px\"\n                                                  height=\"20px\"\n                                                  viewBox=\"0 0 24 24\"\n                                                  fill=\"none\"\n                                                >\n                                                  <path\n                                                    d=\"M4 14L9 19L20 8M6 8.88889L9.07692 12L16 5\"\n                                                    stroke=\"green\"\n                                                    strokeWidth=\"2\"\n                                                    strokeLinecap=\"round\"\n                                                    strokeLinejoin=\"round\"\n                                                  />\n                                                </svg>\n                                              </span>\n                                            ) : (\n                                              <span style={{ color: \"grey\" }}>\n                                                <svg\n                                                  xmlns=\"http://www.w3.org/2000/svg\"\n                                                  width=\"15px\"\n                                                  height=\"15px\"\n                                                  viewBox=\"0 0 24 24\"\n                                                  fill=\"none\"\n                                                >\n                                                  <path\n                                                    d=\"M20.7457 3.32851C20.3552 2.93798 19.722 2.93798 19.3315 3.32851L12.0371 10.6229L4.74275 3.32851C4.35223 2.93798 3.71906 2.93798 3.32854 3.32851C2.93801 3.71903 2.93801 4.3522 3.32854 4.74272L10.6229 12.0371L3.32856 19.3314C2.93803 19.722 2.93803 20.3551 3.32856 20.7457C3.71908 21.1362 4.35225 21.1362 4.74277 20.7457L12.0371 13.4513L19.3315 20.7457C19.722 21.1362 20.3552 21.1362 20.7457 20.7457C21.1362 20.3551 21.1362 19.722 20.7457 19.3315L13.4513 12.0371L20.7457 4.74272C21.1362 4.3522 21.1362 3.71903 20.7457 3.32851Z\"\n                                                    fill=\"grey\"\n                                                  />\n                                                </svg>\n                                              </span>\n                                            )}\n                                          </td>\n                                        </tr>\n                                      );\n                                    })}\n                                  </tbody>\n                                </table>\n                              );\n                              const elementString =\n                                ReactDOMServer.renderToString(tableString);\n                              contentchild.innerHTML = elementString;\n\n                              div.appendChild(content);\n                              content.appendChild(buttonClose);\n                              content.appendChild(title);\n                              content.appendChild(contentchild);\n                              div.className = \"summary-modal \";\n                              content.className = \"content \";\n                              div.id = \"summary-modal\";\n\n                              buttonClose?.addEventListener(\"click\", () => {\n                                body.removeChild(div);\n                              });\n                              content?.addEventListener(\"click\", (e) => {\n                                e.stopPropagation();\n                              });\n\n                              div?.addEventListener(\"click\", () => {\n                                body.removeChild(div);\n                              });\n                              buttonClose.innerHTML = `\n                              <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewBox=\"0 0 24 24\" fill=\"none\">\n                              <path d=\"M20.7457 3.32851C20.3552 2.93798 19.722 2.93798 19.3315 3.32851L12.0371 10.6229L4.74275 3.32851C4.35223 2.93798 3.71906 2.93798 3.32854 3.32851C2.93801 3.71903 2.93801 4.3522 3.32854 4.74272L10.6229 12.0371L3.32856 19.3314C2.93803 19.722 2.93803 20.3551 3.32856 20.7457C3.71908 21.1362 4.35225 21.1362 4.74277 20.7457L12.0371 13.4513L19.3315 20.7457C19.722 21.1362 20.3552 21.1362 20.7457 20.7457C21.1362 20.3551 21.1362 19.722 20.7457 19.3315L13.4513 12.0371L20.7457 4.74272C21.1362 4.3522 21.1362 3.71903 20.7457 3.32851Z\" fill=\"#0F0F0F\"/>\n                              </svg>\n                              `;\n\n                              body.appendChild(div);\n                            }}\n                          >\n                            <ArticleIcon fontSize=\"inherit\" />\n                          </IconButton>\n                          <IconButton\n                            size=\"small\"\n                            color=\"error\"\n                            onClick={() => {\n                              Swal.fire({\n                                title: \"Are you sure?\",\n                                text: `You want to delete it!, won't be able to revert this!`,\n                                icon: \"warning\",\n                                showCancelButton: true,\n                                confirmButtonColor: \"#3085d6\",\n                                cancelButtonColor: \"#d33\",\n                                confirmButtonText: \"Yes, Delete it!\",\n                              }).then(async (result) => {\n                                if (result.isConfirmed) {\n                                  setClaimsSubmited((d) => {\n                                    d = d.filter((d: any) => d.id !== itm.id);\n                                    return d;\n                                  });\n                                }\n                              });\n                            }}\n                          >\n                            <DeleteIcon fontSize=\"inherit\" />\n                          </IconButton>\n                        </Stack>\n                      </td>\n                      <td onDoubleClick={() => handleTdClick(itm)}>\n                        {claimType[itm.policyState.claim_type]}\n                      </td>\n                      <td onDoubleClick={() => handleTdClick(itm)}>\n                        {statusArray[itm.policyState.status] === \"\"\n                          ? \"Status not set\"\n                          : statusArray[itm.policyState.status]}\n                      </td>\n                      <td\n                        onDoubleClick={() => handleTdClick(itm)}\n                        className=\"center\"\n                      >\n                        {itm.policyState.DateReceived\n                          ? format(\n                              new Date(itm.policyState.DateReceived),\n                              \"yyyy-MM-dd\"\n                            )\n                          : \"Date Received not set\"}\n                      </td>\n                      <td\n                        onDoubleClick={() => handleTdClick(itm)}\n                        className=\"center\"\n                      >\n                        {itm.policyState.DateClaim\n                          ? format(\n                              new Date(itm.policyState.DateClaim),\n                              \"yyyy-MM-dd\"\n                            )\n                          : \"Date Claim not set\"}\n                      </td>\n\n                      <td\n                        onDoubleClick={() => handleTdClick(itm)}\n                        className=\"center\"\n                      >\n                        {itm.policyState.AmountClaim === \"\"\n                          ? \"0.00\"\n                          : itm.policyState.AmountClaim}\n                      </td>\n                      <td\n                        onDoubleClick={() => handleTdClick(itm)}\n                        className=\"center\"\n                      >\n                        {itm.policyState.AmountApproved === \"\"\n                          ? \"0.00\"\n                          : itm.policyState.AmountApproved}\n                      </td>\n                    </tr>\n                  );\n                })}\n            </tbody>\n          </table>\n        </div>\n      </div>\n      {SearchClaimModal}\n      {showModal && (\n        <div\n          style={{\n            position: \"absolute\",\n            top: 0,\n            bottom: 0,\n            left: 0,\n            right: 0,\n            background: \"rgba(158, 155, 157, 0.31)\",\n            zIndex: \"999\",\n            display: \"flex\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n          }}\n        >\n          <div\n            style={{\n              width: \"90%\",\n              height: \"90%\",\n              overflow: \"auto\",\n              background: \"white\",\n              padding: \"20px\",\n              margin: \"auto\",\n              zIndex: \"9929\",\n              boxShadow: \" -1px 1px 13px 6px rgba(0,0,0,0.54)\",\n            }}\n          >\n            <ClaimModal\n              handleCloseModal={() => {\n                setShowModal(false);\n              }}\n              setClaimsSubmited={setClaimsSubmited}\n              claim_no={claimState.claim_no}\n              policyState={policyState}\n              policyDispatch={policyDispatch}\n              claimDispatch={claimDispatch}\n            />\n          </div>\n        </div>\n      )}\n      {isLoadingSelectedSearch && (\n        <div\n          style={{\n            position: \"absolute\",\n            top: \"0\",\n            left: \"0\",\n            right: \"0\",\n            bottom: \"0\",\n            background: \"rgba(158, 155, 157, 0.31)\",\n            zIndex: \"999\",\n            display: \"flex\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n          }}\n        >\n          <img\n            src={`${process.env.REACT_APP_IMAGE_URL}image/loading.gif`}\n            style={{ width: \"80px\", height: \"80px\" }}\n            alt=\"we\"\n          />\n        </div>\n      )}\n      {PolicyModal}\n    </div>\n  );\n}\n\nfunction ClaimModal({\n  handleCloseModal,\n  setClaimsSubmited,\n  claim_no,\n  policyDispatch,\n  policyState,\n  claimDispatch,\n}: any) {\n  const otherFileInputRef = useRef<any>(null);\n  const DateReceivedRef = useRef<HTMLDivElement>(null);\n  const DateClaimceivedRef = useRef<HTMLDivElement>(null);\n  const AmountClaimInputRef = useRef<HTMLInputElement>(null);\n  const AmountApprovedInputRef = useRef<HTMLInputElement>(null);\n  const handleInputChange = (e: any) => {\n    const { name, value } = e.target;\n    policyDispatch({ type: \"UPDATE_FIELD\", field: name, value });\n  };\n  const handleModalSave = () => {\n    Swal.fire({\n      title: \"Are you sure?\",\n      text: `You want to save it!, won't be able to revert this!`,\n      icon: \"warning\",\n      showCancelButton: true,\n      confirmButtonColor: \"#3085d6\",\n      cancelButtonColor: \"#d33\",\n      confirmButtonText: \"Yes, Save it!\",\n    }).then(async (result) => {\n      function filetransfer(arr: Array<any>, fileBasicPromises: Array<any>) {\n        const dataFile: any = [];\n        arr.forEach((itm) => {\n          const input: any = document.querySelector(`#${itm.name} input`);\n          const files = input.files;\n          dataFile.push({\n            files,\n            datakey: itm.name,\n          });\n          if (files.length > 0) {\n            for (let i = 0; i < files.length; i++) {\n              const file = files[i];\n              const reader = new FileReader();\n              fileBasicPromises.push(\n                new Promise((resolve, reject) => {\n                  reader.onload = function (event) {\n                    resolve({\n                      datakey: itm.name,\n                      fileName: file.name,\n                      fileContent: event.target?.result,\n                      fileType: file.type,\n                      file,\n                    });\n                  };\n                  reader.onerror = function (event) {\n                    reject(new Error(\"Error reading file: \" + file.name));\n                  };\n                  reader.readAsDataURL(file);\n                })\n              );\n            }\n          }\n        });\n        return fileBasicPromises;\n      }\n      if (result.isConfirmed) {\n        const fileBasicPromises: Array<any> = [];\n        filetransfer(basicDocuments, fileBasicPromises);\n\n        let fileOtherPromises: Array<any> = [];\n        renderFields().forEach((parent) => {\n          filetransfer(parent, fileOtherPromises);\n        });\n\n        const fileInsurancePromises: Array<any> = [];\n        filetransfer(insuranceDocuments, fileInsurancePromises);\n\n        const basicFileCustom = await Promise.all(fileBasicPromises);\n        const otherFileCustom = await Promise.all(fileOtherPromises);\n        const insuranceFileCustom = await Promise.all(fileInsurancePromises);\n\n        setClaimsSubmited((d: any) => {\n          let id = \"\";\n\n          if (claim_no && claim_no.trim() !== \"\") {\n            id = claim_no;\n            d = d.filter((itm: any) => itm.id !== claim_no);\n          } else {\n            id = padNumber(d.length + 1, 3);\n          }\n\n          d.push({\n            id,\n            policyState,\n            basicFileCustom,\n            otherFileCustom,\n            insuranceFileCustom,\n          });\n          return d;\n        });\n        claimDispatch({\n          type: \"UPDATE_FIELD\",\n          field: \"claim_no\",\n          value: \"\",\n        });\n        handleInputChange({\n          target: {\n            name: \"claim_type\",\n            value: 0,\n          },\n        });\n        handleInputChange({\n          target: {\n            name: \"status\",\n            value: 0,\n          },\n        });\n        handleCloseModal();\n      }\n      function padNumber(number: number, length: number) {\n        return String(number).padStart(length, \"0\");\n      }\n    });\n  };\n\n  return (\n    <>\n      <div\n        style={{\n          width: \"100%\",\n          height: \"auto\",\n          position: \"relative\",\n        }}\n      >\n        <div\n          style={{\n            height: \"30px\",\n            marginBottom: \"20px\",\n            display: \"flex\",\n            justifyContent: \"space-between\",\n            gap: \"10px\",\n          }}\n        >\n          <div\n            style={{\n              width: \"100%\",\n              display: \"flex\",\n              gap: \"10px\",\n              justifyContent: \"flex-end\",\n              padding: \"10px 20px\",\n            }}\n          >\n            <div\n              style={{\n                display: \"flex\",\n                columnGap: \"10px\",\n              }}\n            >\n              <Button\n                id=\"basic-button\"\n                aria-haspopup=\"true\"\n                sx={{\n                  height: \"30px\",\n                  fontSize: \"11px\",\n                }}\n                variant=\"contained\"\n                color=\"success\"\n                onClick={handleModalSave}\n              >\n                SAVE\n              </Button>\n              <Button\n                id=\"basic-button\"\n                aria-haspopup=\"true\"\n                sx={{\n                  height: \"30px\",\n                  fontSize: \"11px\",\n                }}\n                variant=\"contained\"\n                color=\"error\"\n                onClick={() => {\n                  Swal.fire({\n                    title: \"Are you sure?\",\n                    text: `You want to cancel it!, won't be able to revert this!`,\n                    icon: \"warning\",\n                    showCancelButton: true,\n                    confirmButtonColor: \"#3085d6\",\n                    cancelButtonColor: \"#d33\",\n                    confirmButtonText: \"Yes, Cancel it!\",\n                  }).then(async (result) => {\n                    if (result.isConfirmed) {\n                      claimDispatch({\n                        type: \"UPDATE_FIELD\",\n                        field: \"claim_no\",\n                        value: \"\",\n                      });\n                      handleInputChange({\n                        target: {\n                          name: \"claim_type\",\n                          value: 0,\n                        },\n                      });\n                      handleInputChange({\n                        target: {\n                          name: \"status\",\n                          value: 0,\n                        },\n                      });\n                      handleCloseModal();\n                      return;\n                    }\n                  });\n                }}\n              >\n                CANCEL\n              </Button>\n            </div>\n          </div>\n        </div>\n        <div>\n          <div style={{ display: \"flex\", gap: \"10px\", flexWrap: \"wrap\" }}>\n            <FormControl\n              sx={{\n                width: \"300px\",\n                marginRight: \"10px\",\n                \".MuiFormLabel-root\": {\n                  fontSize: \"14px\",\n                  background: \"white\",\n                  zIndex: 99,\n                  padding: \"0 3px\",\n                },\n                \".MuiFormLabel-root[data-shrink=false]\": { top: \"-12px\" },\n              }}\n            >\n              <InputLabel id=\"claim-type\">Claim Types</InputLabel>\n              <Select\n                labelId=\"claim-type\"\n                value={policyState.claim_type}\n                onChange={(e) => {\n                  handleInputChange(e);\n                  otherFileInputRef.current?.resetFileUpload();\n                }}\n                label=\"Claim Types\"\n                size=\"small\"\n                name=\"claim_type\"\n                sx={{\n                  height: \"27px\",\n                  fontSize: \"14px\",\n                }}\n                fullWidth\n              >\n                {claimType.map((itm, idx) => {\n                  return (\n                    <MenuItem key={idx} value={idx}>\n                      {itm}\n                    </MenuItem>\n                  );\n                })}\n              </Select>\n            </FormControl>\n            <FormControl\n              sx={{\n                width: \"300px\",\n                marginRight: \"10px\",\n                \".MuiFormLabel-root\": {\n                  fontSize: \"14px\",\n                  background: \"white\",\n                  zIndex: 99,\n                  padding: \"0 3px\",\n                },\n                \".MuiFormLabel-root[data-shrink=false]\": { top: \"-12px\" },\n              }}\n            >\n              <InputLabel id=\"status\">Status</InputLabel>\n              <Select\n                labelId=\"status\"\n                value={policyState.status}\n                onChange={handleInputChange}\n                label=\"Status\"\n                size=\"small\"\n                name=\"status\"\n                sx={{\n                  height: \"27px\",\n                  fontSize: \"14px\",\n                }}\n                fullWidth\n              >\n                {claimsStatus.sort().map((itm, idx) => {\n                  return (\n                    <MenuItem key={idx} value={idx}>\n                      {itm}\n                    </MenuItem>\n                  );\n                })}\n              </Select>\n            </FormControl>\n            <CustomDatePicker\n              textField={{\n                InputLabelProps: {\n                  style: {\n                    fontSize: \"14px\",\n                  },\n                },\n                InputProps: {\n                  style: { height: \"27px\", fontSize: \"14px\" },\n                },\n              }}\n              label=\"Date Received\"\n              onChange={(value: any) => {\n                policyDispatch({\n                  type: \"UPDATE_FIELD\",\n                  field: \"DateReceived\",\n                  value: value,\n                });\n              }}\n              value={\n                policyState.DateReceived\n                  ? new Date(policyState.DateReceived)\n                  : null\n              }\n              onKeyDown={(e: any) => {\n                if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n                  const timeout = setTimeout(() => {\n                    DateReceivedRef.current?.querySelector(\"button\")?.click();\n                    clearTimeout(timeout);\n                  }, 150);\n                }\n              }}\n              datePickerRef={DateReceivedRef}\n            />\n            <CustomDatePicker\n              textField={{\n                InputLabelProps: {\n                  style: {\n                    fontSize: \"14px\",\n                  },\n                },\n                InputProps: {\n                  style: { height: \"27px\", fontSize: \"14px\" },\n                },\n              }}\n              label=\"Date of Claim\"\n              onChange={(value: any) => {\n                policyDispatch({\n                  type: \"UPDATE_FIELD\",\n                  field: \"DateClaim\",\n                  value: value,\n                });\n              }}\n              value={\n                policyState.DateClaim ? new Date(policyState.DateClaim) : null\n              }\n              onKeyDown={(e: any) => {\n                if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n                  const timeout = setTimeout(() => {\n                    DateClaimceivedRef.current\n                      ?.querySelector(\"button\")\n                      ?.click();\n                    clearTimeout(timeout);\n                  }, 150);\n                }\n              }}\n              datePickerRef={DateClaimceivedRef}\n            />\n            <TextField\n              label=\"Amount Claim\"\n              size=\"small\"\n              name=\"AmountClaim\"\n              value={policyState.AmountClaim}\n              onChange={handleInputChange}\n              onBlur={() => {\n                policyDispatch({\n                  type: \"UPDATE_FIELD\",\n                  field: \"AmountClaim\",\n                  value: parseFloat(\n                    (policyState.AmountClaim === \"\"\n                      ? \"0\"\n                      : policyState.AmountClaim\n                    ).replace(/,/g, \"\")\n                  ).toFixed(2),\n                });\n              }}\n              InputProps={{\n                inputComponent: NumericFormatCustom as any,\n                inputRef: AmountClaimInputRef,\n                style: { height: \"27px\", fontSize: \"14px\" },\n              }}\n              sx={{\n                width: \"160px\",\n                \".MuiFormLabel-root\": { fontSize: \"14px\" },\n                \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n              }}\n            />\n            <TextField\n              label=\"Amount Approved\"\n              size=\"small\"\n              name=\"AmountApproved\"\n              value={policyState.AmountApproved}\n              onChange={handleInputChange}\n              onBlur={() => {\n                policyDispatch({\n                  type: \"UPDATE_FIELD\",\n                  field: \"AmountApproved\",\n                  value: parseFloat(\n                    (policyState.AmountApproved === \"\"\n                      ? \"0\"\n                      : policyState.AmountApproved\n                    ).replace(/,/g, \"\")\n                  ).toFixed(2),\n                });\n              }}\n              InputProps={{\n                inputComponent: NumericFormatCustom as any,\n                inputRef: AmountApprovedInputRef,\n                style: { height: \"27px\", fontSize: \"14px\" },\n              }}\n              sx={{\n                width: \"160px\",\n                \".MuiFormLabel-root\": { fontSize: \"14px\" },\n                \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n              }}\n            />\n            {policyState.claim_type > 1 && (\n              <TextField\n                name=\"NameTPPD\"\n                label=\"Name of Third Party\"\n                size=\"small\"\n                value={policyState.NameTPPD}\n                onChange={handleInputChange}\n                InputProps={{\n                  style: {\n                    height: \"27px\",\n                    fontSize: \"14px\",\n                    color: \"whie\",\n                  },\n                }}\n                sx={{\n                  width: \"400px\",\n                  \".MuiFormLabel-root\": { fontSize: \"14px\" },\n                  \".MuiFormLabel-root[data-shrink=false]\": {\n                    top: \"-5px\",\n                  },\n                }}\n              />\n            )}\n          </div>\n          <fieldset\n            style={{\n              marginTop: \"10px\",\n              display: \"flex\",\n              columnGap: \"10px\",\n              padding: \"15px\",\n              border: \"1px solid #cbd5e1\",\n              borderRadius: \"5px\",\n            }}\n          >\n            <legend>Basic Documents</legend>\n            <BasicDocument state={policyState} />\n          </fieldset>\n          <fieldset\n            style={{\n              marginTop: \"10px\",\n              display: \"flex\",\n              columnGap: \"10px\",\n              padding: \"15px\",\n              border: \"1px solid #cbd5e1\",\n              borderRadius: \"5px\",\n            }}\n          >\n            <legend>Other Documents</legend>\n            <OtherDocument\n              state={policyState}\n              otherFileInputRef={otherFileInputRef}\n            />\n          </fieldset>\n          <fieldset\n            style={{\n              marginTop: \"10px\",\n              display: \"flex\",\n              columnGap: \"10px\",\n              padding: \"15px\",\n              border: \"1px solid #cbd5e1\",\n              borderRadius: \"5px\",\n            }}\n          >\n            <legend>Insurance Documents</legend>\n            <InsuranceDocument state={policyState} />\n          </fieldset>\n        </div>\n      </div>\n    </>\n  );\n}\nfunction BasicDocument({ state }: any) {\n  const [activeListBasicDocument, setActiveListBasicDocument] =\n    useState(\"policyFile\");\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        width: \"100%\",\n        height: \"500px\",\n        maxHeight: \"500px\",\n        flexDirection: \"column\",\n      }}\n    >\n      <div\n        style={{\n          display: \"flex\",\n          paddingRight: \"10px\",\n          minWidth: \"300px\",\n        }}\n      >\n        {basicDocuments.map((itm, idx) => {\n          return (\n            <MyButton\n              key={idx}\n              itm={itm}\n              setActiveListBasicDocument={setActiveListBasicDocument}\n              activeListBasicDocument={activeListBasicDocument}\n              disabled={state.mode === \"\"}\n            />\n          );\n        })}\n      </div>\n      {basicDocuments.map((itm, idx) => {\n        return (\n          <div\n            key={idx}\n            style={{\n              flex: 1,\n              width: \"100%\",\n              position: \"relative\",\n              display: itm.name === activeListBasicDocument ? \"block\" : \"none\",\n            }}\n            id={itm.name}\n          >\n            <FileUploadInput />\n          </div>\n        );\n      })}\n    </div>\n  );\n}\nexport default Claims;\nfunction OtherDocument({ state, otherFileInputRef }: any) {\n  const [activeListBasicDocument, setActiveListBasicDocument] =\n    useState(\"policyFile\");\n\n  useEffect(() => {\n    const data = renderFields();\n    setActiveListBasicDocument(data[state.claim_type][0].name);\n  }, [state.claim_type]);\n\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        width: \"100%\",\n        height: \"500px\",\n        maxHeight: \"500px\",\n        flexDirection: \"column\",\n      }}\n    >\n      <div\n        style={{\n          display: \"flex\",\n          paddingRight: \"10px\",\n          minWidth: \"300px\",\n        }}\n      >\n        {renderFields().map((r, Ridx) => {\n          return (\n            <div\n              key={Ridx}\n              style={{\n                display: state.claim_type === Ridx ? \"block\" : \"none\",\n              }}\n            >\n              {r.map((c, cIdx) => {\n                return (\n                  <MyButton\n                    key={cIdx}\n                    itm={c}\n                    setActiveListBasicDocument={setActiveListBasicDocument}\n                    activeListBasicDocument={activeListBasicDocument}\n                    disabled={state.mode === \"\"}\n                  />\n                );\n              })}\n            </div>\n          );\n        })}\n      </div>\n      {renderFields().map((r, Ridx) => {\n        return (\n          <React.Fragment key={Ridx}>\n            {r.map((c, cIdx) => {\n              return (\n                <div\n                  key={cIdx}\n                  style={{\n                    flex: 1,\n                    width: \"100%\",\n                    position: \"relative\",\n                    display:\n                      c.name === activeListBasicDocument ? \"block\" : \"none\",\n                  }}\n                  id={c.name}\n                >\n                  <FileUploadInput ref={otherFileInputRef} />\n                </div>\n              );\n            })}\n          </React.Fragment>\n        );\n      })}\n    </div>\n  );\n}\nfunction InsuranceDocument({ state }: any) {\n  const [activeListBasicDocument, setActiveListBasicDocument] = useState(\"loa\");\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        width: \"100%\",\n        height: \"500px\",\n        maxHeight: \"500px\",\n        flexDirection: \"column\",\n      }}\n    >\n      <div\n        style={{\n          display: \"flex\",\n          paddingRight: \"10px\",\n          minWidth: \"300px\",\n        }}\n      >\n        {insuranceDocuments.map((itm, idx) => {\n          return (\n            <MyButton\n              key={idx}\n              itm={itm}\n              setActiveListBasicDocument={setActiveListBasicDocument}\n              activeListBasicDocument={activeListBasicDocument}\n              disabled={state.mode === \"\"}\n            />\n          );\n        })}\n      </div>\n      {insuranceDocuments.map((itm, idx) => {\n        return (\n          <div\n            key={idx}\n            style={{\n              flex: 1,\n              width: \"100%\",\n              position: \"relative\",\n              display: itm.name === activeListBasicDocument ? \"block\" : \"none\",\n            }}\n            id={itm.name}\n          >\n            <FileUploadInput />\n          </div>\n        );\n      })}\n    </div>\n  );\n}\nfunction MyButton({\n  setActiveListBasicDocument,\n  activeListBasicDocument,\n  itm,\n  disabled,\n}: any) {\n  const [isHovered, setIsHovered] = useState(false);\n  const handleMouseEnter = () => {\n    setIsHovered(true);\n  };\n\n  const handleMouseLeave = () => {\n    setIsHovered(false);\n  };\n\n  return (\n    <button\n      onClick={() => {\n        setActiveListBasicDocument(itm.name);\n      }}\n      onMouseEnter={handleMouseEnter}\n      onMouseLeave={handleMouseLeave}\n      style={{\n        padding: \"10px\",\n        fontSize: \"13px\",\n        cursor: \"pointer\",\n        background:\n          activeListBasicDocument === itm.name\n            ? \"black\"\n            : isHovered\n            ? \"#f1f5f9\"\n            : \"transparent\",\n        color: activeListBasicDocument === itm.name ? \"white\" : \"black\",\n        border: \"none\",\n        textAlign: \"left\",\n      }}\n    >\n      {itm.label}\n    </button>\n  );\n}\nexport function setNewStateValue(dispatch: any, obj: any) {\n  Object.entries(obj).forEach(([field, value]) => {\n    dispatch({ type: \"UPDATE_FIELD\", field, value });\n  });\n}\nexport const FileUploadInput = forwardRef((props, ref) => {\n  const [selectedFiles, setSelectedFiles] = useState<Array<File>>([]);\n  const id = useId();\n  const fileInput = useRef<HTMLInputElement>(null);\n  const [isDragging, setIsDragging] = useState(false);\n  const handleDragLeave = (e: React.DragEvent<HTMLDivElement>) => {\n    e.preventDefault();\n    setIsDragging(false);\n  };\n  const handleDragEnter = (e: React.DragEvent<HTMLDivElement>) => {\n    e.preventDefault();\n    setIsDragging(true);\n  };\n  const handleDrop = (e: React.DragEvent<HTMLDivElement>) => {\n    e.preventDefault();\n    const fileList = e.dataTransfer.files;\n    const files = Array.from(fileList);\n    const newFiles = [...selectedFiles, ...files];\n    setIsDragging(false);\n    if (checkFile(newFiles)) {\n      fileInput.current?.click();\n      return alert(\"file is not valid Extention!\");\n    } else {\n      setSelectedFiles(newFiles);\n    }\n  };\n  const handleFileChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const fileList = e.target.files as FileList;\n\n    const files = Array.from(fileList);\n    const newFiles = [...selectedFiles, ...files];\n    if (checkFile(newFiles)) {\n      return alert(\"file is not valid Extention!\");\n    }\n    setSelectedFiles(newFiles);\n  };\n\n  useEffect(() => {\n    if (selectedFiles.length <= 0) return;\n    function arrayToFileList(filesArray: Array<File>) {\n      const dataTransfer = new DataTransfer();\n      filesArray.forEach((file) => {\n        dataTransfer.items.add(file);\n      });\n      return dataTransfer.files;\n    }\n    const fileList = arrayToFileList(selectedFiles);\n    if (fileInput.current) {\n      fileInput.current.files = fileList;\n    }\n  }, [selectedFiles]);\n\n  useImperativeHandle(ref, () => ({\n    resetFileUpload: () => {\n      setSelectedFiles([]);\n    },\n  }));\n\n  return (\n    <>\n      <button\n        onClick={() => {\n          setSelectedFiles([]);\n          const form = document.getElementById(id)\n            ?.parentElement as HTMLFormElement;\n          form.reset();\n        }}\n        id=\"reset-buton\"\n        style={{\n          display: \"none\",\n        }}\n      >\n        resetALl\n      </button>\n      <div>\n        <div\n          style={{\n            display: \"flex\",\n            flexWrap: \"wrap\",\n            gap: \"5px\",\n            height: \"400px\",\n            width: \"100%\",\n            background: \"#f8fafc\",\n            overflow: \"auto\",\n            border: isDragging ? \"1px solid #c026d3\" : \"1px solid #cbd5e1\",\n            boxSizing: \"border-box\",\n            padding: \"10px\",\n          }}\n          onDragEnter={handleDragEnter}\n          onDragOver={(e) => e.preventDefault()}\n          onDragLeave={handleDragLeave}\n          onDrop={handleDrop}\n        >\n          <div\n            style={{\n              height: \"auto\",\n              width: \"100%\",\n              display: \"flex\",\n              flexWrap: \"wrap\",\n              ...(selectedFiles.length <= 0 && {\n                alignItems: \"center\",\n                textAlign: \"center\",\n                justifyContent: \"center\",\n              }),\n              gap: \"10px\",\n              marginBottom: \"50px\",\n            }}\n            onDragEnter={handleDragEnter}\n            onDragOver={(e) => e.preventDefault()}\n            onDragLeave={handleDragLeave}\n            onDrop={handleDrop}\n          >\n            {selectedFiles.length <= 0 ? (\n              <CloudUploadIcon\n                sx={{ fontSize: \"8em\", color: \"#d1d5db\", zIndex: \"2\" }}\n              />\n            ) : (\n              selectedFiles.map((itm, idx) => {\n                return (\n                  <DisplayFile\n                    key={idx}\n                    itm={itm}\n                    selectedFiles={selectedFiles}\n                    setSelectedFiles={setSelectedFiles}\n                    fileInput={fileInput}\n                  />\n                );\n              })\n            )}\n          </div>\n        </div>\n        <div\n          style={{\n            position: \"absolute\",\n            top: \"50%\",\n            left: \"50%\",\n            transform: \"translate(-50%,-50%)\",\n          }}\n          draggable={false}\n        ></div>\n      </div>\n      <form\n        style={{\n          position: \"absolute\",\n          bottom: \"1px\",\n          left: \"1px\",\n          right: \"1px\",\n          zIndex: \"4\",\n        }}\n      >\n        <label\n          style={{\n            display: \"block\",\n            fontSize: \"13px\",\n            fontWeight: \"500\",\n            textAlign: \"center\",\n            cursor: \"pointer\",\n            padding: \" 10px\",\n            background: \"#0d9488\",\n            color: \"white\",\n          }}\n          htmlFor={id}\n        >\n          Click to Upload File\n        </label>\n        <input\n          ref={fileInput}\n          style={{ display: \"none\" }}\n          id={id}\n          type=\"file\"\n          onChange={handleFileChange}\n          accept=\".jpg,.jpeg,.png,.pdf\"\n          multiple\n        />\n      </form>\n    </>\n  );\n});\nexport function DisplayFile({\n  itm,\n  selectedFiles,\n  setSelectedFiles,\n  fileInput,\n}: {\n  itm: File;\n  selectedFiles: Array<File>;\n  setSelectedFiles: React.Dispatch<React.SetStateAction<File[]>>;\n  fileInput: React.RefObject<HTMLInputElement>;\n}) {\n  const objectUrl = URL.createObjectURL(itm);\n  return (\n    <div\n      id=\"image-card\"\n      style={{\n        position: \"relative\",\n        width: \"200px\",\n        height: \"200px\",\n        textAlign: \"center\",\n        boxShadow: \"10px 10px 28px -7px rgba(0,0,0,0.75)\",\n        border: \"1px solid #cbd5e1\",\n      }}\n    >\n      {itm.type.startsWith(\"image/\") ? (\n        <div\n          style={{\n            width: \"100%\",\n            height: \"100%\",\n            display: \"flex\",\n            alignItems: \"center\",\n          }}\n        >\n          <img\n            src={objectUrl}\n            alt=\"img-sss\"\n            style={{ width: \"100%\", height: \"auto\" }}\n          />\n        </div>\n      ) : (\n        <iframe\n          title=\"dasdseasd\"\n          src={objectUrl}\n          style={{ width: \"100%\" }}\n        ></iframe>\n      )}\n      <div\n        style={{\n          position: \"absolute\",\n          bottom: \"0\",\n          left: \"0\",\n          right: \"0\",\n          background: \"white\",\n          padding: \"5px\",\n          display: \"flex\",\n          columnGap: \"10px\",\n          justifyContent: \"center\",\n        }}\n      >\n        <IconButton\n          color=\"primary\"\n          edge=\"end\"\n          onClick={() => {\n            window.open(objectUrl, \"_blank\");\n          }}\n        >\n          <RemoveRedEyeIcon />\n        </IconButton>\n        <IconButton\n          color=\"success\"\n          edge=\"end\"\n          onClick={() => {\n            var downloadLink: any = document.createElement(\"a\");\n            downloadLink.href = objectUrl;\n            downloadLink.download = itm.name;\n            downloadLink.click();\n          }}\n        >\n          <CloudDownloadIcon />\n        </IconButton>\n        <IconButton\n          color=\"error\"\n          edge=\"end\"\n          onClick={() => {\n            const filesToRemove = [itm.name];\n            const filteredFiles = selectedFiles.filter((file) => file !== itm);\n            setSelectedFiles(filteredFiles);\n            const newFileList = filterFileList(\n              fileInput.current?.files as FileList,\n              filesToRemove\n            );\n            if (fileInput.current && fileInput.current.files) {\n              fileInput.current.files = newFileList;\n            }\n            function filterFileList(\n              fileList: FileList,\n              filesToRemove: Array<string>\n            ) {\n              const dataTransfer = new DataTransfer();\n              for (let i = 0; i < fileList.length; i++) {\n                if (!filesToRemove.includes(fileList[i].name)) {\n                  dataTransfer.items.add(fileList[i]);\n                }\n              }\n              return dataTransfer.files;\n            }\n          }}\n        >\n          <HighlightOffIcon />\n        </IconButton>\n      </div>\n    </div>\n  );\n}\n\nexport function checkFile(newFiles: Array<File>) {\n  let isNotExt = false;\n  const fileTypes = [\"application/pdf\", \"image/jpg\", \"image/jpeg\", \"image/png\"];\n  const newFileTpes = newFiles.map((itm) => itm.type);\n  newFileTpes.forEach((fileType) => {\n    if (!fileTypes.includes(fileType)) {\n      isNotExt = true;\n      return;\n    }\n  });\n  return isNotExt;\n}\n"],"names":["initialClaimState","claims_id","dateReported","dateAccident","dateInspected","department","remarks","search","mode","claim_no","initialPolicyState","policy","claim_type","insurance","PolicyNo","PlateNo","Model","BodyType","Make","ChassisNo","MotorNo","ORNo","CoverNo","BLTFileNo","AssuredName","IDNo","totaDue","totalpaid","balance","remitted","Account","status","DateFrom","DateTo","DateReceived","DateClaim","AmountClaim","AmountApproved","NameTPPD","claimType","basicDocuments","label","name","insuranceDocuments","claimsStatus","renderFields","reducer","state","action","type","_objectSpread","_defineProperty","field","value","ClaimModal","_ref8","handleCloseModal","setClaimsSubmited","policyDispatch","policyState","claimDispatch","otherFileInputRef","useRef","DateReceivedRef","DateClaimceivedRef","AmountClaimInputRef","AmountApprovedInputRef","handleInputChange","e","_e$target2","target","_jsx","_Fragment","children","_jsxs","style","width","height","position","marginBottom","display","justifyContent","gap","padding","columnGap","Button","id","sx","fontSize","variant","color","onClick","_ref9","Swal","title","text","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","then","_x10","_asyncToGenerator","_regeneratorRuntime","mark","_callee10","result","filetransfer","fileBasicPromises","fileOtherPromises","fileInsurancePromises","basicFileCustom","otherFileCustom","insuranceFileCustom","padNumber","wrap","_context11","prev","next","number","length","String","padStart","arr","dataFile","forEach","itm","files","document","querySelector","concat","push","datakey","_loop2","file","i","reader","FileReader","Promise","resolve","reject","onload","event","_event$target2","fileName","fileContent","fileType","onerror","Error","readAsDataURL","isConfirmed","parent","all","sent","d","trim","filter","stop","apply","arguments","_ref10","_x11","_callee11","_context12","abrupt","flexWrap","FormControl","marginRight","background","zIndex","top","InputLabel","Select","labelId","onChange","_otherFileInputRef$cu","current","resetFileUpload","size","fullWidth","map","idx","MenuItem","sort","CustomDatePicker","textField","InputLabelProps","InputProps","Date","onKeyDown","code","timeout","setTimeout","_DateReceivedRef$curr","_DateReceivedRef$curr2","click","clearTimeout","datePickerRef","_DateClaimceivedRef$c","_DateClaimceivedRef$c2","TextField","onBlur","parseFloat","replace","toFixed","inputComponent","NumericFormatCustom","inputRef","marginTop","border","borderRadius","BasicDocument","OtherDocument","InsuranceDocument","_ref11","_useState7","useState","_useState8","_slicedToArray","activeListBasicDocument","setActiveListBasicDocument","maxHeight","flexDirection","paddingRight","minWidth","MyButton","disabled","flex","FileUploadInput","_queryFn","_mutationFn","_mutationFn2","_sortList","data","_React$useState","React","_React$useState2","anchorEl","setAnchorEl","_useState","_useState2","claimsSubmited","_useContext","useContext","AuthContext","myAxios","user","_useReducer","useReducer","_useReducer2","claimState","_useReducer3","_useReducer4","_useState3","_useState4","listofClaim","setListofClaim","_useState5","_useState6","showModal","setShowModal","searchClaimInputRef","policySearchInputRef","dateAccidentRef","dateInspectedRef","_useQuery","useQuery","queryKey","queryFn","_callee","_context","get","headers","Authorization","accessToken","refetchOnWindowFocus","onSuccess","res","claim_id","isLoadingClaimsId","isLoading","refetchClaimsId","refetch","open","Boolean","handleClose","_e$target","_useMutation","useMutation","mutationFn","variable","post","_ref","_formatDataToDocument","formattedSelectedData","policyTypeContainer","formatDataToDocument","_x2","_x3","_callee3","dataDocument","url","newObjContainer","_loop","index","_context4","basicItem","mainURL","response","blob","_context3","uniqueFilename","fetch","File","_event$target","delegateYield","_x","_callee2","item","_item$policyState$cla","otherDocuments","newObjContainerBasic","newObjContainerOther","newObjContainerInsurance","_context2","parseInt","toString","process","setNewStateValue","isLoadingSelectedSearch","mutateSelectedSearch","mutate","_useMutation2","mutationKey","_x4","_callee4","_context5","success","message","timer","isLoadingClaimSave","mutateClaimSave","_useMutation3","_x5","_callee5","_context6","console","log","closePolicyModal","isLoadingClaimSelectedPolicyDetails","mutateClaimSelectedPolicyDetails","_useQueryModalTable","useQueryModalTable","link","queryUrlName","columns","headerName","uniqueId","responseDataKey","onSelected","selectedRowData","closeClaimModal","searchRef","SearchClaimModal","ModalComponent","isLoadingClaimModal","openClaimModal","openModal","closeModal","_useQueryModalTable2","PolicyModal","isLoadingPolicyModal","openPolicyModal","handleTdClick","flushSync","groupByLabel","grouped","Object","entries","displayFile","groupedData","_ref2","_ref3","items","fileList","DataTransfer","input","add","dispatchEvent","Event","bubbles","LoadingButton","loading","htmlFor","OutlinedInput","legend","endAdornment","InputAdornment","IconButton","edge","PersonSearchIcon","preventDefault","readOnly","RestartAltIcon","undefined","currentTarget","backgroundColor","grey","Menu","onClose","MenuListProps","localStorage","setItem","claimdsDetails","elementString","ReactDOMServer","borderBottom","textAlign","fontWeight","minHeight","borderRight","rowGap","boxSizing","format","margin","alignSelf","marginLeft","borderTop","right","bottom","borderLeft","alignItems","window","_ref4","_x6","_callee6","_context7","codeCondfirmationAlert","isUpdate","cb","userCodeConfirmation","_ref5","_x7","_callee7","_context8","_ref6","_x8","_callee8","_context9","_datePickerRef$curren","_datePickerRef$curren2","_dateAccidentRef$curr","_dateAccidentRef$curr2","_dateInspectedRef$cur","_dateInspectedRef$cur2","gridTemplateColumns","gridColumn","borderCollapse","className","a","b","statusArray","Stack","direction","spacing","VisibilityIcon","_itm$policyState$Amou","_itm$policyState$Amou2","createElement","div","content","textContent","contentchild","buttonClose","body","basic","uniqueBasicArray","indexOf","other","uniqueOtherArray","insuranceFile","uniqueInsuranceArray","tableString","colSpan","includes","xmlns","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","innerHTML","appendChild","addEventListener","removeChild","stopPropagation","ArticleIcon","_ref7","_x9","_callee9","_context10","DeleteIcon","onDoubleClick","left","overflow","boxShadow","src","alt","_ref12","_useState9","_useState10","useEffect","r","Ridx","c","cIdx","ref","_ref13","_useState11","_useState12","_ref14","_useState13","_useState14","isHovered","setIsHovered","onMouseEnter","onMouseLeave","cursor","dispatch","obj","_ref15","_ref16","forwardRef","props","_useState15","_useState16","selectedFiles","setSelectedFiles","useId","fileInput","_useState17","_useState18","isDragging","setIsDragging","handleDragLeave","handleDragEnter","handleDrop","_fileInput$current","dataTransfer","Array","from","newFiles","_toConsumableArray","checkFile","alert","filesArray","arrayToFileList","useImperativeHandle","_document$getElementB","getElementById","parentElement","reset","onDragEnter","onDragOver","onDragLeave","onDrop","CloudUploadIcon","DisplayFile","transform","draggable","accept","multiple","_ref17","objectUrl","URL","createObjectURL","startsWith","RemoveRedEyeIcon","downloadLink","href","download","CloudDownloadIcon","_fileInput$current2","filesToRemove","filteredFiles","newFileList","filterFileList","HighlightOffIcon","isNotExt","fileTypes"],"sourceRoot":""}