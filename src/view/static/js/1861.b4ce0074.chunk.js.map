{"version":3,"file":"static/js/1861.b4ce0074.chunk.js","mappings":"4TAGe,SAASA,EAAgBC,GAY/B,IAXPC,EAAKD,EAALC,MACAC,EAAIF,EAAJE,KACAC,EAAQH,EAARG,SACAC,EAAKJ,EAALI,MACAC,EAASL,EAATK,UACAC,EAAQN,EAARM,SACAC,EAAaP,EAAbO,cACAC,EAASR,EAATQ,UACAC,EAAST,EAATS,UAASC,EAAAV,EACTW,SAAAA,OAAQ,IAAAD,EAAG,QAAOA,EACfE,GAAIC,EAAAA,EAAAA,GAAAb,EAAAc,GAEP,OACEC,EAAAA,EAAAA,KAACC,EAAAA,EAAoB,CAACC,YAAaC,EAAAA,EAAeC,UAChDJ,EAAAA,EAAAA,KAACK,EAAAA,GAAUC,EAAAA,EAAAA,GAAA,CACXC,mBAAoB,CAACC,MAAO,SAC1BnB,MAAOA,EACPD,SAAUA,EACVqB,IAAKjB,EACLkB,UAAW,CACThB,WAASY,EAAAA,EAAAA,GAAA,CACPK,KAAM,QACNzB,MAAAA,EACAC,KAAAA,EACAG,UAAAA,EACAC,SAAUA,EACVE,UAAAA,GAEGC,IAGPkB,gBAAiB,CACfC,GAAI,CACFL,MAAO,UAGXK,GAAI,CACFjB,SAAAA,EACAkB,SAAU,CAAEC,YAAa,SACzB,qBAAsB,CAAEC,SAAU,QAClC,wCAAyC,CACvCC,IAAK,UAGLpB,KAIZ,C,iIC5CaqB,EAAsBC,EAAAA,YAGjC,SAA6BC,EAAOX,GACpC,IAAQrB,EAAuBgC,EAAvBhC,SAAaiC,GAAKvB,EAAAA,EAAAA,GAAKsB,EAAKrB,GAEpC,OACEC,EAAAA,EAAAA,KAACsB,EAAAA,IAAahB,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACRe,GAAK,IACTE,YAAad,EACbe,cAAe,SAACC,GACdrC,EAAS,CACPsC,OAAQ,CACNvC,KAAMiC,EAAMjC,KACZE,MAAOoC,EAAOpC,QAGpB,EACAsC,eAAe,EACfC,mBAAiB,EACjBC,sBAAoB,IAI1B,G,mHCFMC,GAAcC,EAAAA,EAAAA,aAClB,SAAA9C,EAiBE+C,GACI,IAADC,EAhBDC,EAAIjD,EAAJiD,KACAC,EAAMlD,EAANkD,OACAC,EAAKnD,EAALmD,MACAC,EAAMpD,EAANoD,OACAC,EAAYrD,EAAZqD,aAAYC,EAAAtD,EACZuD,kBAAAA,OAAiB,IAAAD,EAAG,WAAQ,EAACA,EAAAE,EAAAxD,EAC7ByD,iBAAAA,OAAgB,IAAAD,GAAQA,EAAAE,EAAA1D,EACxB2D,OAAAA,OAAM,IAAAD,GAAQA,EACdrD,EAASL,EAATK,UAASuD,EAAA5D,EACT6D,oBAAAA,OAAmB,IAAAD,EAAG,+BAA8BA,EAAAE,EAAA9D,EACpD+D,gBAAAA,OAAe,IAAAD,GAAOA,EAAAE,EAAAhE,EACtBiE,aAAAA,OAAY,IAAAD,EAAG,kBAAM,CAAK,EAAAA,EAC1BE,EAASlE,EAATkE,UACAC,EAAYnE,EAAZmE,aAIFC,GAA0BC,EAAAA,EAAAA,UAAqB,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA3CI,EAAKF,EAAA,GAAEG,EAAQH,EAAA,GACtBI,GAAoCL,EAAAA,EAAAA,UAAS,GAAEM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAAxCE,EAAUD,EAAA,GAAEE,EAAaF,EAAA,GAC1BG,GAAuBC,EAAAA,EAAAA,QAAOxB,GAC9ByB,GAAeD,EAAAA,EAAAA,QAAO1E,GAC5B4E,GAA8BZ,EAAAA,EAAAA,UAASnB,EAAOgC,QAAO,SAACC,GAAG,OAAMA,EAAIC,IAAI,KAAEC,GAAAd,EAAAA,EAAAA,GAAAU,EAAA,GAAlEK,EAAOD,EAAA,GAAEE,EAAUF,EAAA,GAC1BG,GAA0CnB,EAAAA,EAAAA,UAAS,MAAKoB,GAAAlB,EAAAA,EAAAA,GAAAiB,EAAA,GAAjDE,EAAaD,EAAA,GAAEE,EAAgBF,EAAA,GACtCG,GAAwCvB,EAAAA,EAAAA,UAAwB,CAAC,IAAGwB,GAAAtB,EAAAA,EAAAA,GAAAqB,EAAA,GAA7DE,EAAYD,EAAA,GAAEE,EAAeF,EAAA,GACpCG,GAAwD3B,EAAAA,EAAAA,UAAS,GAAE4B,GAAA1B,EAAAA,EAAAA,GAAAyB,EAAA,GAA5DE,EAAoBD,EAAA,GAAEE,EAAuBF,EAAA,GACpDG,IAA0C/B,EAAAA,EAAAA,UAAwB,IAAGgC,IAAA9B,EAAAA,EAAAA,GAAA6B,GAAA,GAA9DE,GAAaD,GAAA,GAAEE,GAAgBF,GAAA,GAChCG,IAASzB,EAAAA,EAAAA,QAAuB,MACtC0B,IAA0CpC,EAAAA,EAAAA,UAAS,MAAKqC,IAAAnC,EAAAA,EAAAA,GAAAkC,GAAA,GAAjDE,GAAaD,GAAA,GAAEE,GAAgBF,GAAA,IAGtCG,EAAAA,EAAAA,YAAU,WACR,IAAMC,EA0aZ,SAA+BC,GAG7B,IAHgE,IAAlBC,EAASC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,IACtDG,EAAS,GAEJC,EAAI,EAAGA,EAAIN,EAAIG,OAAQG,GAAKL,EAEnCI,EAAOE,KAAKP,EAAIQ,MAAMF,EAAGA,EAAIL,IAE/B,OAAOI,CACT,CAlbqBI,CAAsBvE,EAAM,KAC3CwB,EAASqC,EACX,GAAG,CAAC7D,IAEJ,IAAMwE,GAAc,SAACC,EAAYC,GAC/BA,EAAEC,iBACFD,EAAEE,kBAEF,IAAMC,EAASH,EAAEI,QACXC,EAAa1C,EAAQoC,GAAOvE,MAE5B8E,EAAS,SAACC,GACd,IAAMC,EAAWH,GAAcE,EAAUH,QAAUD,GAC7CM,GAAcC,EAAAA,EAAAA,GAAO/C,GAC3B8C,EAAeV,GAAOvE,MAAQgF,EAAW,GAAKA,EAAW,GACzD5C,EAAW6C,EACb,EAOAE,SAASC,iBAAiB,YAAaN,GACvCK,SAASC,iBAAiB,WANT,SAAXC,IACJF,SAASG,oBAAoB,YAAaR,GAC1CK,SAASG,oBAAoB,UAAWD,EAC1C,GAIF,EACME,GAAmB,SAAChB,GACxB/B,EAAiB+B,EACnB,EACMiB,GAAmB,WACvBhD,EAAiB,KACnB,GA8MAiD,EAAAA,EAAAA,qBAAoB7F,GAAgB,iBAAO,CACzC8F,mBAAoB,WAIlB,GAHA9C,EAAgB,CAAC,IACjBI,EAAwB,GACxBI,GAAiB,IACbtD,EAAKiE,OAAS,EAAG,CACnB,IAAM4B,EAAMR,SAASS,cAAc,QAADC,OAAS,IACxC,OAAHF,QAAG,IAAHA,GAAAA,EAAKG,eAAe,CAAEC,MAAO,MAAOC,SAAU,UAChD,CACF,EACAC,gBAAiB,WACf,OAAOnG,EAAKiC,QAAO,SAACmE,EAAGC,GAAG,OAAKhD,GAAciD,SAASD,EAAI,GAC5D,EACAE,cAAe,SAACC,GACdlD,GAAiBkD,EACnB,EACD,IAYD,OACE1I,EAAAA,EAAAA,KAAA,OACE2I,MAAO,CACLC,QAAS,OACTC,eAAgB,UAElBvJ,UAzHkB,SAACsH,GAErB,GAAc,cAAVA,EAAEkC,IACJlC,EAAEC,iBACF7B,GAAgB,SAAC+D,GAAoB,IAADC,EAClC,GAAwC,OAApCD,EAAUA,EAAU5C,OAAS,GAAa,MAAO,CAAC,GACtD,GAAI4C,EAAUA,EAAU5C,OAAS,IAAMjE,EAAKiE,OAAS,EACnD,MAAO,CAACjE,EAAKiE,OAAS,GAExB,IAAM8C,EAAeF,EAAUA,EAAU5C,OAAS,GAAK,EACjD4B,EAAMR,SAASS,cAAc,QAADC,OAASgB,IAI3C,OAHG,OAAHlB,QAAG,IAAHA,GAA2B,QAAxBiB,EAAHjB,EAAKC,cAAc,gBAAQ,IAAAgB,GAA3BA,EAA6BE,QAE1B,OAAHnB,QAAG,IAAHA,GAAAA,EAAKG,eAAe,CAAEC,MAAO,MAAOC,SAAU,WACvC,CAACa,EACV,SACK,GAAc,YAAVrC,EAAEkC,IAAmB,CAG9B,GAFAlC,EAAEC,iBAE4C,IAA1C9B,EAAaA,EAAaoB,OAAS,GAAU,CAC/C,IAAMgD,EAAQ5B,SAASS,cACrBlF,GAEF,GAAIqG,GAA2B,UAAlBA,EAAMC,QACZ,OAALD,QAAK,IAALA,GAAAA,EAAOD,aACF,GAAIC,GAA2B,QAAlBA,EAAMC,QAAmB,CAC3C,IAAMC,EAAW9B,SAASS,cAAc,GAADC,OAClCnF,EAAmB,WAGhB,OAARuG,QAAQ,IAARA,GAAAA,EAAUH,OACZ,CACF,CAEAlE,GAAgB,SAAC+D,GAAoB,IAADO,EAClC,GAAwC,IAApCP,EAAUA,EAAU5C,OAAS,GAAU,MAAO,CAAC,GACnD,IAAM8C,EAAeF,EAAUA,EAAU5C,OAAS,GAAK,EACjD4B,EAAMR,SAASS,cAAc,QAADC,OAASgB,IAI3C,OAFG,OAAHlB,QAAG,IAAHA,GAAAA,EAAKG,eAAe,CAAEC,MAAO,MAAOC,SAAU,WAC3C,OAAHL,QAAG,IAAHA,GAA2B,QAAxBuB,EAAHvB,EAAKC,cAAc,gBAAQ,IAAAsB,GAA3BA,EAA6BJ,QACtB,CAACD,EACV,GACF,CAEF,EA4E6B7I,UAEzBmJ,EAAAA,EAAAA,MAAA,OAAAnJ,SAAA,EACEmJ,EAAAA,EAAAA,MAAA,OAAKC,UAAU,oBAAmBpJ,SAAA,EAChCJ,EAAAA,EAAAA,KAAA,OACE2I,MAAO,CACLC,QAAS,OACTa,cAAe,SACfrH,MAAM,GAAD6F,OAAK7F,EAAQ,GAAE,cACpBC,OAAO,GAAD4F,OAAK5F,EAAS,IAAG,MACvBqH,UAAW,SAEbF,UAAU,cAAapJ,UAEvBJ,EAAAA,EAAAA,KAAA,OAAKwJ,UAAU,cAAapJ,UAC1BmJ,EAAAA,EAAAA,MAAA,OAAK9I,IAAKgF,GAAQ+D,UAAS,kBAAqBG,UAAW,EAAEvJ,SAAA,EAC3DJ,EAAAA,EAAAA,KAAA,OACEwJ,UAAU,uBACVb,MAAO,CACLiB,SAAU,SACVC,OAAQ,KACR5I,IAAK,OACL6I,WAAY,SACZ1J,SAEDmE,EAAQwF,KAAI,SAACC,EAAUrD,GAAa,OACnC4C,EAAAA,EAAAA,MAAA,OAEEC,UAAS,yBAAAvB,OAA2BtD,IAAkBgC,EAAK,mBAAwB,IAEnFgC,MAAO,CAAEvG,MAAO4H,EAAI5H,MAAOC,OAAQ,QAAUjC,SAAA,EAE7CJ,EAAAA,EAAAA,KAAA,SACE2I,MAAO,CAAEsB,WAAY,QACrBC,aAAcF,EAAIG,WAClBC,UAAQ,EACRhL,SAAU,SAACwH,GAAQ,KAErB5G,EAAAA,EAAAA,KAAA,OACEwJ,UAAU,gBACVa,YAAa,SAACzD,GAAC,OAAKF,GAAYC,EAAOC,EAAE,EACzC0D,aAAc,SAAC1D,GACbA,EAAEC,iBACFc,GAAiBhB,EACnB,EACA4D,aAAc,SAAC3D,GACbA,EAAEC,iBACFe,IACF,MArBGjB,EAuBD,MAGQ,QADZ1E,EACLwB,EAAMI,UAAW,IAAA5B,OAAA,EAAjBA,EAAmB8H,KAAI,SAAChC,EAAUyC,GAAa,OAC9CxK,EAAAA,EAAAA,KAAA,OACEwJ,UAAS,gBAAAvB,OAAkBuC,GAE3BC,QAAS,SAAC7D,GAAC,OAxSN,SACrB4D,EACAE,GAiBA,GAAKhI,EAKH,GAAIgI,EAAMC,UAAqC,OAAzBxF,EAA+B,CAKnD,IAHA,IAAMyF,EAAaC,KAAKC,IAAI3F,EAAsBqF,GAC5CO,EAAWF,KAAKG,IAAI7F,EAAsBqF,GAC1CS,EAAiC,GAC9B3E,EAAIsE,EAAYtE,GAAKyE,EAAUzE,IACjCvB,EAAayD,SAASlC,IACzB2E,EAAgB1E,KAAKD,GAIzB,IAAI4E,EAAkC,GAAAjD,QAAAX,EAAAA,EAAAA,GACjC/B,IACA0F,GAGLjG,EAAgB,GAADiD,QAAAX,EAAAA,EAAAA,GAAKvC,GAAiBkG,IACrC,IAGAE,EAxCJ,SAAyBC,GACvB,IAMMC,EANsBD,EAAgBrB,KAAI,SAACzB,EAAGC,GAClD,OAAKrF,EAAaoF,GAGX,KAFE,CAAEC,IAAAA,EAAK+C,KAAMhD,EAGxB,IAC4CnE,QAAO,SAACmE,GAAC,OAAW,OAANA,CAAU,IAC9DgD,EAAOD,EAAgBtB,KAAI,SAAC3F,GAAQ,OAAKA,EAAIkH,IAAI,IAIvD,MAAO,CAAEC,wBAHuBF,EAAgBtB,KAC9C,SAAC3F,GAAQ,OAAKA,EAAImE,GAAG,IAEW+C,KAAAA,EACpC,CA4BME,CAJsBtJ,EAAKiC,QAAO,SAACmE,EAAGC,GAAG,OACzC2C,EAAoB1C,SAASD,EAAI,KAE3BgD,EAAuBJ,EAAvBI,wBAA6BJ,EAAJG,KAGjC9F,GAAiB+F,EAEnB,MAAO,GAAIb,EAAMe,SAAWf,EAAMgB,QAEhC,GAAI3G,EAAayD,SAASgC,KAAc5H,EAAQ,CAC9CoC,EAAgBD,EAAaZ,QAAO,SAACmC,GAAC,OAAKA,IAAMkE,CAAQ,KACzDhF,IAAiB,SAAC8C,GAEhB,OADAA,EAAIA,EAAEnE,QAAO,SAACmC,GAAC,OAAKA,IAAMkE,CAAQ,IAC3BlC,CACT,IACA,IAAI4C,EAAqC3F,GAAcpB,QACrD,SAACmC,GAAC,OAAKA,IAAMkE,CAAQ,IAECtI,EAAKiC,QAAO,SAACmE,EAAGC,GAAG,OACzC2C,EAAoB1C,SAASD,EAAI,IAGnC/C,GAAiB0F,EAEnB,KAAO,CACLlG,EAAgB,GAADiD,QAAAX,EAAAA,EAAAA,GAAKvC,GAAY,CAAEyF,KAClChF,IAAiB,SAAC8C,GAEhB,OADAA,EAAE/B,KAAKiE,GACAlC,CACT,IACA,IAAI4C,EAAkC,GAAAjD,QAAAX,EAAAA,EAAAA,GACjC/B,IAAa,CAChBiF,IAGsBtI,EAAKiC,QAAO,SAACmE,EAAGC,GAAG,OACzC2C,EAAoB1C,SAASD,EAAI,IAGnC/C,GAAiB0F,EAEnB,MAGAlG,EAAgB,CAACwF,SAjEnBxF,EAAgB,CAACwF,IAoEnBpF,EAAwBoF,EAC1B,CA8MkCmB,CAAenB,EAAU5D,EAAE,EAC3CgF,cAAe,SAAChF,GAGVhB,KACFiG,aAAajG,IACbC,GAAiB,OAGnB,IAAMiG,EAAiBC,YAAW,YAtNzB,SAC3BvB,EACAE,GAEA,IAAM3C,EAAM7F,EAAKsI,GACjB,IAAItH,EAAa6E,IACZ/E,EAAL,CAGA,IAAIkI,EAAqC,GAQzC,GANEA,EADExI,EACiB,GAAAuF,QAAAX,EAAAA,EAAAA,GAAO/B,KAAa+B,EAAAA,EAAAA,GAAKvC,IAEtB,CAACyF,GAIrBjF,GAAciD,SAASgC,KAAc5H,EAIvC,OAHAsI,EAAsB3F,GAAcpB,QAAO,SAACmC,GAAC,OAAKA,IAAMkE,CAAQ,IAChEhF,GAAiB0F,QACjBnH,EAAqBiI,QAAQ,GAAIxB,GAInChF,GAAiB0F,GACjBnH,EAAqBiI,QAAQ,CAACjE,GAAMyC,EAnBR,CAoB9B,CA6LsByB,CAAqBzB,EACvB,GAAG,KAEH3E,GAAiBiG,EAInB,EACAxM,UAAW,SAACsH,GAINhB,KACFiG,aAAajG,IACbC,GAAiB,OAGnB,IAAMiG,EAAiBC,YAAW,YA/J7B,SAACnF,GAGxB,GAFAA,EAAEE,kBAEY,UAAVF,EAAEkC,KAA6B,gBAAVlC,EAAEkC,IAAuB,CAEhD,GADAlC,EAAEC,kBACG7D,EAAiB,OAEtB,IAAIkI,EAAqC,GACnCV,EAAWzF,EAAaA,EAAaoB,OAAS,GAElD+E,EADExI,EACiB,GAAAuF,QAAAX,EAAAA,EAAAA,GAAO/B,KAAa+B,EAAAA,EAAAA,GAAKvC,IAEtB,CAACyF,GAEzB,IAAMzC,EAAM7F,EAAKgJ,EAAoBA,EAAoB/E,OAAS,IAClE,GAAIjD,EAAa6E,GACf,OAGF,GAAIxC,GAAciD,SAASgC,KAAc5H,EAIvC,OAHAsI,EAAsB3F,GAAcpB,QAAO,SAACmC,GAAC,OAAKA,IAAMkE,CAAQ,IAChEhF,GAAiB0F,QACjBnH,EAAqBiI,QAAQ,GAAIxB,GAInChF,GAAiB0F,GACjBnH,EAAqBiI,QAAQ,CAACjE,GAAMyC,EACtC,MAAO,GAAc,WAAV5D,EAAEkC,KAA8B,cAAVlC,EAAEkC,IAAqB,CACtD,IAAK9F,EAAiB,OACtB,IAAMwH,EAAWzF,EAAaA,EAAaoB,OAAS,GAE9CiF,EAAkBlJ,EAAKiC,QAAO,SAACmE,EAAGC,GAAG,OACzCxD,EAAayD,SAASD,EAAI,IAGZ,OAAZtE,QAAY,IAAZA,GAAAA,EAAc+H,UACJ,OAAZ/H,QAAY,IAAZA,GAAAA,EAAc+H,QAAQZ,EAAiBxE,EAAEkC,IAAK0B,GAElD,CACF,CAwHsB0B,CAAiBtF,EACnB,GAAG,KAEHf,GAAiBiG,EAGnB,EACAK,cAAe,SAACvF,GAAC,OA5GV,SAAC8D,EAAYF,GACpCE,EAAM7D,iBACN,IAAMuF,EAAclK,EAAKsI,GACrBpH,GACFA,EAAagJ,EAAY1B,EAE7B,CAsGwC2B,CAAiBzF,EAAG4D,EAAS,EAACpK,SAEnDmE,EAAQwF,KAAI,SAACC,EAAUsC,GAAgB,OACtC/C,EAAAA,EAAAA,MAAA,OAEEZ,MAAO,CAAEvG,MAAO4H,EAAI5H,OACpBoH,UAAS,aAAAvB,OAAetD,IAAkB2H,EAAQ,mBAAwB,IACrElM,SAAA,EAELJ,EAAAA,EAAAA,KAAA,SACEX,MAAO0I,EAAIiC,EAAIuC,OACfnN,SAAU,SAACwH,GAAQ,EACnBwD,SAAU9H,EACVkH,UAAS,GAAAvB,OAAKlD,EAAayD,SAASgC,GAChC,eACA,GAAE,KAAAvC,OACA1C,GAAciD,SAASgC,GACvB,iBACA,GAAE,gCAAAvC,OAEK,WAAb+B,EAAIwC,KAAoB,SAAW,OAAM,mCAG3CxM,EAAAA,EAAAA,KAAA,OACEwJ,UAAU,gBACVa,YAAa,SAACzD,GACZA,EAAEC,iBACFH,GAAY4F,EAAU1F,EACxB,EACA0D,aAAc,SAAC1D,GACbA,EAAEC,iBACFc,GAAiB2E,EACnB,EACA/B,aAAc,SAAC3D,GACbA,EAAEC,iBACFe,IACF,MAhCG0E,EAkCD,KA1EH9B,EA4ED,WAMbrH,IAAanD,EAAAA,EAAAA,KAAA,OAAKwJ,UAAU,gBAAepJ,UAC1CJ,EAAAA,EAAAA,KAAA,OAAKwJ,UAAU,iBAGnBD,EAAAA,EAAAA,MAAA,OAAKC,UAAU,qBAAoBpJ,SAAA,EACjCmJ,EAAAA,EAAAA,MAAA,OAAAnJ,SAAA,CAAK,aAAW8B,EAAKiE,WACrBnG,EAAAA,EAAAA,KAAA,OAAAI,UAAKJ,EAAAA,EAAAA,KAACyM,EAAAA,EAAU,CAACC,MAAOjJ,EAAM0C,OAAQ/G,SAAU,SAACwH,EAAGvH,GAClDyE,EAAczE,EAAQ,EACxB,aAMV,G,wkBC1bIsN,EAAe,CACnBC,UAAW,GACXC,MAAO,GACPC,UAAW,IAAIC,KACfC,YAAa,GACbC,YAAa,GAEbC,KAAM,GACNC,SAAU,GACVC,QAAS,GACTC,YAAa,GACbC,KAAM,GACNC,WAAY,GACZC,QAAS,GACTC,OAAQ,GACRC,MAAO,GACPC,QAAS,GACTC,UAAW,IAAIb,KACfc,QAAS,GACTC,QAAS,GACTC,QAAS,GACTC,MAAO,GACPC,QAAS,UACTC,QAAS,GACTC,WAAY,KACZC,WAAY,GACZC,YAAa,GACbC,aAAc,GAEdC,YAAY,EACZC,mBAAoB,IAAIzB,KACxB0B,QAAS,GACTC,OAAQ,GACRC,SAAU,IAGCC,EAAU,SAACC,EAAYC,GAClC,MACO,iBADCA,EAAOtC,MAEXlM,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACKuO,GAAK,IAAAE,EAAAA,EAAAA,GAAA,GACPD,EAAOvC,MAAQuC,EAAOzP,QAGlBwP,CAEb,EAEMG,EAA4B,CAChC,CAAEzC,MAAO,OAAQpC,WAAY,OAAQvK,SAAU,KAC/C,CAAE2M,MAAO,WAAYpC,WAAY,eAAgBvK,SAAU,KAC3D,CACE2M,MAAO,cACPpC,WAAY,cACZ8E,KAAM,EACNrP,SAAU,KAEZ,CAAE2M,MAAO,aAAcpC,WAAY,OAAQ8E,KAAM,EAAGrP,SAAU,KAC9D,CAAE2M,MAAO,QAASpC,WAAY,QAASvK,SAAU,IACjD,CAAE2M,MAAO,SAAUpC,WAAY,SAAUvK,SAAU,KACnD,CAAE2M,MAAO,UAAWpC,WAAY,WAAYvK,SAAU,IACtD,CAAE2M,MAAO,YAAapC,WAAY,aAAcvK,SAAU,KAE1D,CAAE2M,MAAO,UAAWpC,WAAY,KAAMvK,SAAU,KAChD,CACE2M,MAAO,UACPpC,WAAY,UACZ8E,KAAM,EACNrP,SAAU,KAEZ,CAAE2M,MAAO,QAASpC,WAAY,QAASvK,SAAU,KACjD,CAAE2M,MAAO,UAAWpC,WAAY,WAAYvK,SAAU,KACtD,CAAE2M,MAAO,UAAWpC,WAAY,UAAW8E,KAAM,EAAGrP,SAAU,KAC9D,CAAE2M,MAAO,SAAUpC,WAAY,SAAU9F,MAAM,GAC/C,CAAEkI,MAAO,OAAQpC,WAAY,OAAQ8E,KAAM,EAAGrP,SAAU,IAAKyE,MAAM,GACnE,CACEkI,MAAO,aACPpC,WAAY,aACZ8E,KAAM,EACNrP,SAAU,IACVyE,MAAM,GAER,CACEkI,MAAO,SACPpC,WAAY,SACZ9F,MAAM,IAqBK,SAAS6K,IAAoB,IAADC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EACzCnM,GAAwCC,EAAAA,EAAAA,WAAS,GAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAhDoM,GAAYlM,EAAA,GAAEmM,GAAenM,EAAA,GACpCI,IAAgCL,EAAAA,EAAAA,UAAS,CAAEqM,EAAG,EAAGC,EAAG,IAAIhM,IAAAJ,EAAAA,EAAAA,GAAAG,GAAA,GAAjDiG,GAAQhG,GAAA,GAAEiM,GAAWjM,GAAA,GAE5BM,IAAoDZ,EAAAA,EAAAA,UAAc,MAAKgB,IAAAd,EAAAA,EAAAA,GAAAU,GAAA,GAAhE4L,GAAkBxL,GAAA,GAAEyL,GAAqBzL,GAAA,GAIhD0L,KADkBhM,EAAAA,EAAAA,QAAuB,OACfiM,EAAAA,EAAAA,YAAWC,EAAAA,IAA7BC,GAAOH,GAAPG,QAASC,GAAIJ,GAAJI,KACjBC,IAA0BC,EAAAA,EAAAA,YAAW1B,EAASjC,GAAa4D,IAAA/M,EAAAA,EAAAA,GAAA6M,GAAA,GAApDxB,GAAK0B,GAAA,GAAEC,GAAQD,GAAA,GACtB9L,IAAgCnB,EAAAA,EAAAA,WAAS,GAAMoB,IAAAlB,EAAAA,EAAAA,GAAAiB,GAAA,GAAxCgM,GAAQ/L,GAAA,GAAEgM,GAAWhM,GAAA,GAC5BG,IAAwCvB,EAAAA,EAAAA,WAAS,GAAMwB,IAAAtB,EAAAA,EAAAA,GAAAqB,GAAA,GAAhD8L,GAAY7L,GAAA,GAAE8L,GAAe9L,GAAA,GACpCG,IAAsC3B,EAAAA,EAAAA,WAAS,GAAM4B,IAAA1B,EAAAA,EAAAA,GAAAyB,GAAA,GAA9C4L,GAAW3L,GAAA,GAAE4L,GAAc5L,GAAA,GAClCG,IAA8C/B,EAAAA,EAAAA,UAAS,CACrDyN,MAAM,EACNC,SAAU,KACV1L,IAAA9B,EAAAA,EAAAA,GAAA6B,GAAA,GAHK4L,GAAe3L,GAAA,GAAE4L,GAAkB5L,GAAA,GAK1CI,IAAkDpC,EAAAA,EAAAA,UAAS,IAAGqC,IAAAnC,EAAAA,EAAAA,GAAAkC,GAAA,GAC9DyL,IADwBxL,GAAA,GAAsBA,GAAA,IACVrC,EAAAA,EAAAA,UAAS,KAAG8N,IAAA5N,EAAAA,EAAAA,GAAA2N,GAAA,GAChDE,IADiBD,GAAA,GAAeA,GAAA,IAE9B9N,EAAAA,EAAAA,UAAgC,KAAGgO,IAAA9N,EAAAA,EAAAA,GAAA6N,GAAA,GAD9BE,GAAgBD,GAAA,GAAEE,GAAmBF,GAAA,GAItCG,IAAcC,EAAAA,EAAAA,kBACdlS,IAAgBwE,EAAAA,EAAAA,QAAoB,MACpC2N,IAAqB3N,EAAAA,EAAAA,QAAoB,MACzC4N,IAAoB5N,EAAAA,EAAAA,QAA0B,MAC9C6N,IAAsB7N,EAAAA,EAAAA,QAAyB,MAC/C8N,IAAsB9N,EAAAA,EAAAA,QAAyB,MAE/C+N,IAAa/N,EAAAA,EAAAA,QAAyB,MACtCgO,IAAkBhO,EAAAA,EAAAA,QAAyB,MAC3CiO,IAASjO,EAAAA,EAAAA,QAAyB,MAClCkO,IAAgBlO,EAAAA,EAAAA,QAAyB,MACzCmO,IAAanO,EAAAA,EAAAA,QAAyB,MAEtCoO,IAA0BpO,EAAAA,EAAAA,QAAyB,MACnDqO,IAAiBrO,EAAAA,EAAAA,QAAyB,MAC1CsO,IAAetO,EAAAA,EAAAA,QAAyB,MACxCuO,IAAQvO,EAAAA,EAAAA,QAAY,MAGpBwO,IAAUxO,EAAAA,EAAAA,QAAyB,MACnCyO,IAAiBzO,EAAAA,EAAAA,QAAyB,MAC1C0O,IAAgB1O,EAAAA,EAAAA,QAAyB,MACzC2O,IAAY3O,EAAAA,EAAAA,QAAyB,MACrC4O,IAAa5O,EAAAA,EAAAA,QAAyB,MACtC6O,IAAe7O,EAAAA,EAAAA,QAAyB,MACxC8O,IAAY9O,EAAAA,EAAAA,QAAyB,MACrC+O,IAAW/O,EAAAA,EAAAA,QAAyB,MACpCgP,IAAahP,EAAAA,EAAAA,QAAyB,MAG5CiP,IAGIC,EAAAA,EAAAA,aAAY,CACdC,YAAa,sCACbC,WAAW,SAADC,GAAA,OAAAlE,EAAAA,IAAAmE,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAE,SAAAC,EAAOC,GAAa,OAAAH,EAAAA,EAAAA,KAAAI,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACxB3D,GAAQ4D,KACZ,2CACAL,EACA,CACEM,QAAS,CACPC,cAAc,UAADhM,OAAgB,OAAJmI,SAAI,IAAJA,QAAI,EAAJA,GAAM8D,gBAGpC,cAAAN,EAAAO,OAAA,SAAAP,EAAAQ,MAAA,wBAAAR,EAAAS,OAAA,GAAAZ,EAAA,MAAAa,MAAA,KAAApO,UAAA,EACHqO,UAAW,SAACC,GACV,IAAMC,EAAWD,EACjBE,QAAQC,IAAIF,IACZG,EAAAA,EAAAA,YAAU,WACRC,aAAaC,WAAW,eACxBD,aAAaE,QAAQ,aAAcC,KAAKC,UAAUR,EAASnJ,KAAK4J,MAAMC,aACtEN,aAAaE,QAAQ,cAAe,SACpCF,aAAaE,QAAQ,eAAgB,QACrCF,aAAaE,QAAQ,SAAU,qBAC/BF,aAAaE,QAAQ,QAASC,KAAKC,UAAUR,EAASnJ,KAAK4J,MAAME,oBACjEP,aAAaE,QACX,SACAC,KAAKC,UAAU,CACb,CAAEI,QAAS,UAAWC,OAAQ,UAAWlT,MAAO,SAChD,CAAEiT,QAAS,WAAYC,OAAQ,WAAYlT,MAAO,SAClD,CAAEiT,QAAS,QAASC,OAAQ,QAASlT,MAAO,SAC5C,CAAEiT,QAAS,SAAUC,OAAQ,SAAUlT,MAAO,YAGlDyS,aAAaE,QACX,QACqB,UAAjB,OAAJ3E,SAAI,IAAJA,QAAI,EAAJA,GAAMmF,YACF,yCACA,oDAER,IACAC,OAAOC,KAAK,mBAAoB,SAIlC,IA5CQC,GAAazC,GAArB0C,OACWC,GAAgB3C,GAA3B9P,UA+CF0S,IAGIC,EAAAA,EAAAA,UAAS,CACXC,SAAU,+BACVC,QAAQ,WAAD,OAAA5G,EAAAA,IAAAkE,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAE,SAAAyC,IAAA,OAAA1C,EAAAA,EAAAA,KAAAI,MAAA,SAAAuC,GAAA,cAAAA,EAAArC,KAAAqC,EAAApC,MAAA,cAAAoC,EAAApC,KAAA,EACD3D,GAAQgG,IAAI,iDAAkD,CAClEnC,QAAS,CACPC,cAAc,UAADhM,OAAgB,OAAJmI,SAAI,IAAJA,QAAI,EAAJA,GAAM8D,gBAEjC,cAAAgC,EAAA/B,OAAA,SAAA+B,EAAA9B,MAAA,wBAAA8B,EAAA7B,OAAA,GAAA4B,EAAA,MAAA3B,MAAA,KAAApO,UAAA,EACJkQ,sBAAsB,EACtB7B,UAAW,SAACjJ,GACV,IAAMmJ,EAAWnJ,EACjBkF,GAAS,CACPhE,KAAM,eACND,MAAO,QACPlN,MAAOoV,EAASnJ,KAAK+K,YAAY,GAAGC,KAEtC9F,GAAS,CACPhE,KAAM,eACND,MAAO,YACPlN,MAAOoV,EAASnJ,KAAK+K,YAAY,GAAGC,IAExC,IAvBWC,GAA8BV,GAAzC1S,UACSqT,GAA8BX,GAAvCY,QAyBFC,IAGIxD,EAAAA,EAAAA,aAAY,CACdC,YAAa,wBACbC,WAAW,SAADuD,GAAA,OAAAtH,EAAAA,IAAAiE,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAE,SAAAoD,EAAOlD,GAAa,OAAAH,EAAAA,EAAAA,KAAAI,MAAA,SAAAkD,GAAA,cAAAA,EAAAhD,KAAAgD,EAAA/C,MAAA,cAAA+C,EAAA/C,KAAA,EACxB3D,GAAQ4D,KACZ,2DACAL,EACA,CACEM,QAAS,CACPC,cAAc,UAADhM,OAAgB,OAAJmI,SAAI,IAAJA,QAAI,EAAJA,GAAM8D,gBAGpC,cAAA2C,EAAA1C,OAAA,SAAA0C,EAAAzC,MAAA,wBAAAyC,EAAAxC,OAAA,GAAAuC,EAAA,MAAAtC,MAAA,KAAApO,UAAA,EACHqO,UAAW,SAACC,GACV,IAAMC,EAAWD,EACjB,OAAIC,EAASnJ,KAAKwL,SAChBrF,GAAYsF,kBAAkB,0BAC9BjG,IAAe,GACfkG,EAAiBxG,GAAU7D,GAC3B6J,KACAhF,GAAoB,IACpBN,GAAmB,CACjBH,MAAM,EACNC,SAAU,KAGLiG,IAAAA,KAAU,CACfrN,SAAU,SACVsN,KAAM,UACNC,MAAO1C,EAASnJ,KAAK8L,QACrBC,MAAO,QAGJJ,IAAAA,KAAU,CACfrN,SAAU,SACVsN,KAAM,UACNC,MAAO1C,EAASnJ,KAAK8L,QACrBC,MAAO,MAEX,IAxCQC,GAAyBZ,GAAjCf,OACW4B,GAA6Bb,GAAxCvT,UA0CFqU,IAAuDtE,EAAAA,EAAAA,aAAY,CACjEC,YAAa,OACbC,WAAW,SAADqE,GAAA,OAAAnI,EAAAA,IAAAgE,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAE,SAAAkE,EAAOhE,GAAa,OAAAH,EAAAA,EAAAA,KAAAI,MAAA,SAAAgE,GAAA,cAAAA,EAAA9D,KAAA8D,EAAA7D,MAAA,cAAA6D,EAAA7D,KAAA,EACxB3D,GAAQ4D,KAAK,wCAAyCL,EAAU,CACpEM,QAAS,CACPC,cAAc,UAADhM,OAAgB,OAAJmI,SAAI,IAAJA,QAAI,EAAJA,GAAM8D,gBAEjC,cAAAyD,EAAAxD,OAAA,SAAAwD,EAAAvD,MAAA,wBAAAuD,EAAAtD,OAAA,GAAAqD,EAAA,MAAApD,MAAA,KAAApO,UAAA,EACJqO,UAAW,SAACC,GACV,IAAMC,EAAWD,EACjBhD,GAAoB,IACpBA,GAAoBiD,EAASnJ,KAAKsM,MAClClH,IAAY,EACd,IAbcmH,GAASL,GAAjB7B,OAA8BmC,GAAYN,GAAvBrU,UAgB3B4U,IAGI7E,EAAAA,EAAAA,aAAY,CACdC,YAAa,yBACbC,WAAW,SAAD4E,GAAA,OAAAzI,EAAAA,IAAA+D,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAE,SAAAyE,EAAOvE,GAAa,OAAAH,EAAAA,EAAAA,KAAAI,MAAA,SAAAuE,GAAA,cAAAA,EAAArE,KAAAqE,EAAApE,MAAA,cAAAoE,EAAApE,KAAA,EACxB3D,GAAQ4D,KACZ,4DACAL,EACA,CACEM,QAAS,CACPC,cAAc,UAADhM,OAAgB,OAAJmI,SAAI,IAAJA,QAAI,EAAJA,GAAM8D,gBAGpC,cAAAgE,EAAA/D,OAAA,SAAA+D,EAAA9D,MAAA,wBAAA8D,EAAA7D,OAAA,GAAA4D,EAAA,MAAA3D,MAAA,KAAApO,UAAA,EACHqO,UAAW,SAACC,GACV,IAAMC,EAAWD,EACjB,OAAIC,EAASnJ,KAAKwL,SAChBrF,GAAYsF,kBAAkB,0BAC9BjG,IAAe,GACfkG,EAAiBxG,GAAU7D,GAC3B6J,KACAhF,GAAoB,IACpBN,GAAmB,CACjBH,MAAM,EACNC,SAAU,KAELiG,IAAAA,KAAU,CACfrN,SAAU,SACVsN,KAAM,UACNC,MAAO1C,EAASnJ,KAAK8L,QACrBC,MAAO,QAGJJ,IAAAA,KAAU,CACfrN,SAAU,SACVsN,KAAM,UACNC,MAAO1C,EAASnJ,KAAK8L,QACrBC,MAAO,MAEX,IAvCQc,GAA0BJ,GAAlCpC,OACWyC,GAA2BL,GAAtC5U,UAyCFkV,IAGInF,EAAAA,EAAAA,aAAY,CACdC,YAAa,sCACbC,WAAW,SAADkF,GAAA,OAAA9I,EAAAA,IAAA8D,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAE,SAAA+E,EAAO7E,GAAa,OAAAH,EAAAA,EAAAA,KAAAI,MAAA,SAAA6E,GAAA,cAAAA,EAAA3E,KAAA2E,EAAA1E,MAAA,cAAA0E,EAAA1E,KAAA,EACxB3D,GAAQ4D,KACZ,2EACAL,EACA,CACEM,QAAS,CACPC,cAAc,UAADhM,OAAgB,OAAJmI,SAAI,IAAJA,QAAI,EAAJA,GAAM8D,gBAGpC,cAAAsE,EAAArE,OAAA,SAAAqE,EAAApE,MAAA,wBAAAoE,EAAAnE,OAAA,GAAAkE,EAAA,MAAAjE,MAAA,KAAApO,UAAA,EACHqO,UAAW,SAACC,GACV,IACMiE,EADWjE,EACSlJ,KAAKoN,yBAC/BC,EAAuDF,EAAS,GAAxDzL,EAAW2L,EAAX3L,YAAaF,EAAS6L,EAAT7L,UAAWD,EAAK8L,EAAL9L,MAAOI,EAAW0L,EAAX1L,YACvCuD,GAAS,CACPhE,KAAM,eACND,MAAO,YACPlN,MAAOwN,IAET2D,GAAS,CACPhE,KAAM,eACND,MAAO,QACPlN,MAAOwN,IAET2D,GAAS,CACPhE,KAAM,eACND,MAAO,YACPlN,MAAOyN,IAET0D,GAAS,CACPhE,KAAM,eACND,MAAO,cACPlN,MAAO2N,IAETwD,GAAS,CACPhE,KAAM,eACND,MAAO,cACPlN,MAAO4N,IAETuE,GAAoBiH,GAIpB3H,IAAe,EACjB,IAhDQ8H,GAAiCP,GAAzC1C,OACWkD,GAAwCR,GAAnDlV,UAkDF2V,IAKIC,EAAAA,EAAAA,GAAmB,CACrBC,KAAM,CACJC,IAAK,8DACLC,aAAc,0BAEhB3U,QAAS,CACP,CAAEgI,MAAO,aAAcpC,WAAY,OAAQ/H,MAAO,KAClD,CAAEmK,MAAO,YAAapC,WAAY,UAAW/H,MAAO,KACpD,CACEmK,MAAO,cACPpC,WAAY,cACZ8E,KAAM,IAGV8G,SAAU,2BACVoD,SAAU,YACVC,gBAAiB,SACjBC,WAAY,SAACjO,EAAiBE,GAC5BsN,GAAkC,CAChCU,UAAWlO,EAAgB,GAAGkO,YAEhCC,GAAkB,CAChB7X,OAAQ,CAAErC,MAAO,OAAQF,KAAM,cAEjCqS,GAAoB,IACpBN,GAAmB,CACjBH,MAAM,EACNC,SAAU,KAGZwI,IACF,EACAC,gBAAiB,SAACpa,GAChBmR,GAAS,CAAEhE,KAAM,eAAgBD,MAAO,SAAUlN,MAAAA,GACpD,EACAqa,UAAWtH,KAvCKuH,GAA2Bb,GAA3Cc,eACWC,GAA0Bf,GAArCgB,UACWC,GAA+BjB,GAA1C3V,UACYqW,GAA2BV,GAAvCkB,WAuCFC,IAKIlB,EAAAA,EAAAA,GAAmB,CACrBC,KAAM,CACJC,IAAK,qDACLC,aAAc,sBAEhB3U,QAAS,CACP,CAAEgI,MAAO,YAAapC,WAAY,eAAgB/H,MAAO,KACzD,CAAEmK,MAAO,aAAcpC,WAAY,iBAAkB/H,MAAO,KAC5D,CACEmK,MAAO,QACPpC,WAAY,QACZ8E,KAAM,IAGV8G,SAAU,oBACVoD,SAAU,YACVC,gBAAiB,oBACjBC,WAAY,SAACjO,EAAiBE,GAC5BkF,GAAS,CACPhE,KAAM,eACND,MAAO,OACPlN,MAAO+L,EAAgB,GAAG8O,YAE5B1J,GAAS,CACPhE,KAAM,eACND,MAAO,WACPlN,MAAO+L,EAAgB,GAAG+O,aAE5BC,KAEArO,YAAW,WAAO,IAADsO,EACG,QAAlBA,EAAAtI,GAAW/F,eAAO,IAAAqO,GAAlBA,EAAoBnR,OACtB,GAAG,IACL,EACAwQ,UAAWtH,KAtCKkI,GAAuBL,GAAvCL,eACWW,GAAsBN,GAAjCH,UACWU,GAA2BP,GAAtC9W,UACYiX,GAAuBH,GAAnCD,WAsCFS,IAKI1B,EAAAA,EAAAA,GAAmB,CACrBC,KAAM,CACJC,IAAK,wCACLC,aAAc,sBAEhB3U,QAAS,CACP,CAAEgI,MAAO,OAAQpC,WAAY,OAAQ/H,MAAO,KAC5C,CAAEmK,MAAO,OAAQpC,WAAY,SAAU/H,MAAO,KAC9C,CACEmK,MAAO,OACPpC,WAAY,OACZ8E,KAAM,GAER,CACE1C,MAAO,KACPpC,WAAY,KACZ9F,MAAM,IAGV0R,SAAU,8BACVoD,SAAU,OACVC,gBAAiB,YACjBC,WAAY,SAACjO,GACPuF,IACFH,GAAS,CACPhE,KAAM,eACND,MAAO,QACPlN,MAAO+L,EAAgB,GAAGsP,OAG5BC,KACA5O,YAAW,WAAO,IAAD6O,EACD,QAAdA,EAAA3I,GAAOjG,eAAO,IAAA4O,GAAdA,EAAgB1R,OAClB,GAAG,OAEHsH,GAAS,CACPhE,KAAM,eACND,MAAO,aACPlN,MAAO+L,EAAgB,GAAGsP,OAE5BlK,GAAS,CACPhE,KAAM,eACND,MAAO,OACPlN,MAAO+L,EAAgB,GAAGkC,OAE5BkD,GAAS,CACPhE,KAAM,eACND,MAAO,UACPlN,MAAO+L,EAAgB,GAAGyP,cAE5BrK,GAAS,CACPhE,KAAM,eACND,MAAO,cACPlN,MAAO+L,EAAgB,GAAG0P,YAE5BtK,GAAS,CACPhE,KAAM,eACND,MAAO,UACPlN,MAAO+L,EAAgB,GAAGoC,UAE5BmN,KACA5O,YAAW,WAAO,IAADgP,EACM,QAArBA,EAAA7I,GAAclG,eAAO,IAAA+O,GAArBA,EAAuB7R,OACzB,GAAG,KAEP,EACAwQ,UAAWrH,KAtEK2I,GAA0BP,GAA1Cb,eACWqB,GAAyBR,GAApCX,UACWoB,GAA8BT,GAAzCtX,UACYwX,GAA0BF,GAAtCT,WAsEFmB,IAKIpC,EAAAA,EAAAA,GAAmB,CACrBC,KAAM,CACJC,IAAK,2DACLC,aAAc,yBAEhB3U,QAAS,CACP,CAAEgI,MAAO,OAAQpC,WAAY,OAAQ/H,MAAO,KAC5C,CACEmK,MAAO,cACPpC,WAAY,cACZ8E,KAAM,IAGV8G,SAAU,0BACVoD,SAAU,OACVC,gBAAiB,wBACjBC,WAAY,SAACjO,GACXoF,GAAS,CACPhE,KAAM,eACND,MAAO,UACPlN,MAAO+L,EAAgB,GAAGgQ,OAE5B5K,GAAS,CACPhE,KAAM,eACND,MAAO,UACPlN,MAAO+L,EAAgB,GAAGiQ,cAE5BC,KACAvP,YAAW,WAAO,IAADwP,EACG,QAAlBA,EAAApJ,GAAWnG,eAAO,IAAAuP,GAAlBA,EAAoBrS,OACtB,GAAG,IACL,EACAwQ,UAAWrH,KApCKmJ,GAAuBL,GAAvCvB,eACW6B,GAAsBN,GAAjCrB,UACW4B,GAA2BP,GAAtChY,UACYmY,GAAuBH,GAAnCnB,YAoCFlU,EAAAA,EAAAA,YAAU,WACR,IAAM4H,EAAQ6D,GAAiBoK,QAAO,SAACC,EAAWC,GAChD,OAAOD,EAAIE,WAAWD,EAAKnO,MAAMqO,QAAQ,KAAM,IACjD,GAAG,GACGtO,EAAS8D,GAAiBoK,QAAO,SAACC,EAAWC,GACjD,OAAOD,EAAIE,WAAWD,EAAKpO,OAAOsO,QAAQ,KAAM,IAClD,GAAG,GACHvL,GAAS,CACPhE,KAAM,eACND,MAAO,aACPlN,MAAOqO,EAAMsO,QAAQ,KAEvBxL,GAAS,CACPhE,KAAM,eACND,MAAO,cACPlN,MAAOoO,EAAOuO,QAAQ,KAExBxL,GAAS,CACPhE,KAAM,eACND,MAAO,eACPlN,OAAQqO,EAAQD,GAAQuO,QAAQ,IAEpC,GAAG,CAACzK,KAEJ,IAAMgI,GAAoB,SAAC3S,GACzB,IAAAqV,EAAwBrV,EAAElF,OAAlBvC,EAAI8c,EAAJ9c,KAAME,EAAK4c,EAAL5c,MACdmR,GAAS,CAAEhE,KAAM,eAAgBD,MAAOpN,EAAME,MAAAA,GAChD,EA6FA,SAAS6c,KAOP,GANIC,MAAML,WAAWjN,GAAMpB,WACzBoB,GAAMpB,OAAS,QAEb0O,MAAML,WAAWjN,GAAMnB,UACzBmB,GAAMnB,MAAQ,QAEG,KAAfmB,GAAM3B,MAAkC,KAAnB2B,GAAM1B,SAC7B,OAAOoN,GAAuB1L,GAAM3B,MAGtC,GAA0B,KAAtB2B,GAAMxB,aAA2C,KAArBwB,GAAMtB,WACpC,OAAO0N,GAA0BpM,GAAMtB,YAEzC,GAAIsB,GAAMpB,SAAWoB,GAAMnB,MACzB,OAAOuJ,IAAAA,KAAU,CACfrN,SAAU,SACVsN,KAAM,UACNC,MAAO,oDACPE,MAAO,OAGX,GAAmB,YAAfxI,GAAM3B,MAAwC,KAAlB2B,GAAMlB,QACpC,OAAOsJ,IAAAA,KAAU,CACfrN,SAAU,SACVsN,KAAM,UACNC,MAAO,yBACPE,MAAO,OAIX,GAAsB,KAAlBxI,GAAMhB,QACR,OAAO4N,GAAuB5M,GAAMhB,SAGtC,GAAoB,KAAhBgB,GAAMb,OAA+B,YAAfa,GAAM3B,KAE9B,OADA0D,IAAgB,GACTqK,GAA0BpM,GAAMb,OAGzC,GAAIa,GAAM3B,KAAK/G,QAAU,IACvB,OAAO8Q,IAAAA,KAAU,CACfrN,SAAU,SACVsN,KAAM,UACNC,MAAO,oBACPE,MAAO,OAGX,GAAIxI,GAAMtB,WAAWpH,QAAU,IAC7B,OAAO8Q,IAAAA,KAAU,CACfrN,SAAU,SACVsN,KAAM,UACNC,MAAO,2BACPE,MAAO,OAGX,GAAIxI,GAAMnB,MAAMvH,QAAU,IACxB,OAAO8Q,IAAAA,KAAU,CACfrN,SAAU,SACVsN,KAAM,UACNC,MAAO,qBACPE,MAAO,OAGX,GAAIxI,GAAMpB,OAAOtH,QAAU,IACzB,OAAO8Q,IAAAA,KAAU,CACfrN,SAAU,SACVsN,KAAM,UACNC,MAAO,sBACPE,MAAO,OAGX,GAAIxI,GAAMlB,QAAQxH,QAAU,IAC1B,OAAO8Q,IAAAA,KAAU,CACfrN,SAAU,SACVsN,KAAM,UACNC,MAAO,wBACPE,MAAO,OAGX,GAAIxI,GAAMhB,QAAQ1H,QAAU,IAC1B,OAAO8Q,IAAAA,KAAU,CACfrN,SAAU,SACVsN,KAAM,UACNC,MAAO,kBACPE,MAAO,OAGX,GAAIxI,GAAMb,MAAM7H,QAAU,IACxB,OAAO8Q,IAAAA,KAAU,CACfrN,SAAU,SACVsN,KAAM,UACNC,MAAO,sBACPE,MAAO,OAGX,GAAIxI,GAAMX,QAAQ/H,QAAU,IAC1B,OAAO8Q,IAAAA,KAAU,CACfrN,SAAU,SACVsN,KAAM,UACNC,MAAO,uBACPE,MAAO,OAIX,SAAS+E,EAAWC,GAClB,IAAMC,EAAWD,EAAMlW,OAASkW,EAAMA,EAAMlW,OAAS,GAAGoW,OAAS,MAIjE,OAHqBC,SAASF,EAASG,WAAWC,MAAM,OAAO,IAAM,GAClED,WACAE,SAAS,EAAG,IAEjB,CAEA1F,IAAAA,KAAU,CACRE,MAAOlG,GAAgBF,KAAI,+EAG3B6L,KAAM,oCACN1F,KAAM,UACN2F,kBAAkB,EAClBC,mBAAoB,UACpBC,kBAAmB,OACnBC,kBAAmB/L,GAAgBF,KAC/B,kBACA,eACHkM,MAAK,SAAC5W,GACP,GAAIA,EAAO6W,YAAa,CACtB1L,IAAoB,SAAClJ,GAOnB,GANmB,YAAfuG,GAAM3B,KACR2B,GAAMjB,UCp3BH,SAAoBuP,GAEjC,IAAMC,EAAc,IAAIrQ,KAAKoQ,GACvBE,GAAO,IAAMD,EAAYE,WAAW9W,OAAO,GAKjD,OAJe,KAAO4W,EAAYG,WAAa,IAAI/W,OAAO,GAI3C,IAAM6W,EAAM,IAHdD,EAAYI,aAI3B,CD22B8BC,CAAW5O,GAAMjB,WAEnCiB,GAAMjB,UAAY,GAGE,QAAlBiB,GAAMZ,SAAoC,YAAfY,GAAM3B,KAAoB,CACvD,IAAIwQ,EAE8C,IAA9C5B,WAAWjN,GAAMnB,MAAMqO,QAAQ,KAAM,MACvC2B,EAAa5B,WAAWjN,GAAMnB,MAAMqO,QAAQ,KAAM,KAAO,KACzDlN,GAAMnB,MAAQgQ,EAAWC,eAAe,QAAS,CAC/CC,sBAAuB,EACvBC,sBAAuB,MAGzBH,EAAa5B,WAAWjN,GAAMpB,OAAOsO,QAAQ,KAAM,KAAO,KAC1DlN,GAAMpB,OAASiQ,EAAWC,eAAe,QAAS,CAChDC,sBAAuB,EACvBC,sBAAuB,KAKzBvV,EADE2I,GAAgBF,KACdzI,EAAEyB,KAAI,SAAC8R,GAOT,OANI5K,GAAgBD,WAAa6K,EAAKU,SACpCV,GAAIvb,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACCub,GACAhN,KAGAgN,CACT,IAEC,GAAA5T,QAAAX,EAAAA,EAAAA,GACIgB,GAAC,EAAAhI,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAECuO,IAAK,IACR0N,OAAQH,EAAW9T,OAKzB,IAAIwV,EAAwB,IAAbJ,EAEmC,IAA9C5B,WAAWjN,GAAMnB,MAAMqO,QAAQ,KAAM,KACvClN,GAAMnB,MAAQoQ,EAASH,eAAe,QAAS,CAC7CC,sBAAuB,EACvBC,sBAAuB,IAGzBhP,GAAMpB,OAASqQ,EAASH,eAAe,QAAS,CAC9CC,sBAAuB,EACvBC,sBAAuB,IAG3BvV,EAAC,GAAAL,QAAAX,EAAAA,EAAAA,GACIgB,GAAC,EAAAhI,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAECuO,IAAK,IACR3B,KAAM,UACNC,SAAU,YACVoP,OAAQH,EAAW9T,MAGzB,KAAO,CACL,IAAMmF,EAASqO,WACbjN,GAAMpB,OAAOsO,QAAQ,KAAM,KAC3B4B,eAAe,QAAS,CACxBC,sBAAuB,EACvBC,sBAAuB,IAEnBnQ,EAAQoO,WACZjN,GAAMnB,MAAMqO,QAAQ,KAAM,KAC1B4B,eAAe,QAAS,CACxBC,sBAAuB,EACvBC,sBAAuB,IAMzB,GAHAhP,GAAMpB,OAASA,EACfoB,GAAMnB,MAAQA,EAEVuD,GAAgBF,KAUlB,OATazI,EAAEyB,KAAI,SAAC8R,GAOlB,OANI5K,GAAgBD,WAAa6K,EAAKU,SACpCV,GAAIvb,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACCub,GACAhN,KAGAgN,CACT,IAGFvT,EAAC,GAAAL,QAAAX,EAAAA,EAAAA,GACIgB,GAAC,EAAAhI,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAECuO,IAAK,IACR0N,OAAQH,EAAW9T,MAGzB,CAEA,OAAOA,CACT,IAEA,IAAMyV,EAAa,CACjB7Q,KAAM,GACNC,SAAU,GACVC,QAAS,GACTC,YAAa,GACbC,KAAM,GACNC,WAAY,GACZE,OAAQ,GACRC,MAAO,GACPG,QAAS,GACTC,QAAS,GACTC,QAAS,GACTE,QAAS,UACTC,QAAS,GACTV,QAAS,GACTG,QAAS,GACTC,UAAW,IAAIb,MAEjBiK,EAAiBxG,IAAQlQ,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAOuO,IAAUkP,IAC1C7M,GAAmB,CAAEH,MAAM,EAAOC,SAAU,MAC5CgN,EAAAA,EAAAA,GAAK,KAAKf,MAAK,WAAO,IAADgB,EACC,QAApBA,EAAA3L,GAAatG,eAAO,IAAAiS,GAApBA,EAAsB/U,OACxB,GACF,CACF,GACF,CAoBA,IAp4ByBlD,GAo4BnBkY,GAAoC,KAAnBrP,GAAMF,SACvBvM,GAAQoT,OAAO2I,WAAa,GAC5B9b,GAASmT,OAAO4I,YAAc,IAOpC,OACE7U,EAAAA,EAAAA,MAAA,OACEkB,QAAS,WANXiF,IAAgB,GAQRI,IACFC,GAAsB,KAE1B,EACApH,MAAO,CACLC,QAAS,OACTa,cAAe,SACfrH,MAAO,OACPC,OAAQ,OACR4M,KAAM,GACN7O,SAAA,EAEFmJ,EAAAA,EAAAA,MAAA,OACEZ,MAAO,CACLC,QAAS,OACTyV,WAAY,SACZC,UAAW,OACXle,SAAA,EAEFmJ,EAAAA,EAAAA,MAAA,OACEZ,MAAO,CACLC,QAAS,OACTyV,WAAY,SACZC,UAAW,OACXle,SAAA,CAED2Z,IACC/Z,EAAAA,EAAAA,KAACue,EAAAA,EAAa,CAACC,QAASzE,MAExB/Z,EAAAA,EAAAA,KAACye,EAAAA,EAAS,CACRvf,MAAM,SACNyB,KAAK,QACLxB,KAAK,SACLE,MAAOwP,GAAMH,OACbtP,SAAUma,GACVja,UAAW,SAACsH,GACV,GAAe,UAAXA,EAAEsG,MAA+B,gBAAXtG,EAAEsG,KAE1B,OADAtG,EAAEC,iBACKgT,GACJjT,EAAElF,OAA4BrC,MAGrC,EACAqf,WAAY,CACV/V,MAAO,CAAEtG,OAAQ,OAAQrB,SAAU,SAErCH,GAAI,CACFuB,MAAO,QACPC,OAAQ,OACR,qBAAsB,CAAErB,SAAU,QAClC,wCAAyC,CAAEC,IAAK,WAKlC,KAAnB4N,GAAMF,WACL3O,EAAAA,EAAAA,KAAC2e,EAAAA,EAAM,CACL9d,GAAI,CACFwB,OAAQ,OACRrB,SAAU,QAEZ4d,QAAQ,YACRC,WAAW7e,EAAAA,EAAAA,KAAC8e,EAAAA,EAAO,CAACje,GAAI,CAAEuB,MAAO,GAAIC,OAAQ,MAC7CiU,GAAG,2BACH7L,QAAS,WACP8O,GAAkB,CAChB7X,OAAQ,CAAErC,MAAO,MAAOF,KAAM,aAElC,EACAqB,MAAM,UAASJ,SAChB,SAIHJ,EAAAA,EAAAA,KAACue,EAAAA,EAAa,CACZ1d,GAAI,CACFwB,OAAQ,OACRrB,SAAU,QAEZwd,QAASjH,GACTwH,SAA6B,KAAnBlQ,GAAMF,SAChBlE,QAhdV,WACE,MAAoB,KAAhBoE,GAAMhC,MACDoK,IAAAA,KAAU,CACfrN,SAAU,SACVsN,KAAM,UACNC,MAAO,mCACPE,MAAO,OAGe,KAAtBxI,GAAM7B,YACDiK,IAAAA,KAAU,CACfrN,SAAU,SACVsN,KAAM,UACNC,MAAO,8BACPE,MAAO,OACN4F,MAAK,YACNe,EAAAA,EAAAA,GAAK,KAAKf,MAAK,WAAO,IAAD+B,EACQ,QAA3BA,EAAAnN,GAAoB7F,eAAO,IAAAgT,GAA3BA,EAA6B9V,OAC/B,GACF,IAGsB,KAArB2F,GAAMT,YAA2C,KAAtBS,GAAMR,aACZ,SAArBQ,GAAMT,YAA+C,SAAtBS,GAAMR,YAE/B4I,IAAAA,KAAU,CACfrN,SAAU,SACVsN,KAAM,UACNC,MACE,qFACFE,MAAO,OACN4F,MAAK,YACNe,EAAAA,EAAAA,GAAK,KAAKf,MAAK,WAAQ,GACzB,IAEEpO,GAAMT,aAAeS,GAAMR,YACtB4I,IAAAA,KAAU,CACfrN,SAAU,SACVsN,KAAM,UACNC,MACE,iFACFE,MAAO,OACN4F,MAAK,YACNe,EAAAA,EAAAA,GAAK,KAAKf,MAAK,WAAQ,GACzB,SAEqB,SAAnBpO,GAAMF,UACRsQ,EAAAA,EAAAA,GAAuB,CACrBC,UAAU,EACVC,GAAI,SAACC,GACH9H,GAA0B,CACxBzG,YAAAA,GACAhE,MAAOgC,GAAMhC,MACbC,UAAW+B,GAAM/B,UACjBE,YAAa6B,GAAM7B,YACnBC,YAAa4B,GAAM5B,YACnBsE,iBAAAA,GACA6N,qBAAAA,GAEJ,KAGFC,EAAAA,EAAAA,GAAuB,CACrBC,UAAW,WACThI,GAA0B,CACxBzG,YAAAA,GACAhE,MAAOgC,GAAMhC,MACbC,UAAW+B,GAAM/B,UACjBE,YAAa6B,GAAM7B,YACnBC,YAAa4B,GAAM5B,YACnBsE,iBAAAA,IAEJ,IAGN,EAsYU/Q,MAAM,UACNoe,QAAQ,YAAWxe,SACpB,SAGmB,KAAnByO,GAAMF,WACL3O,EAAAA,EAAAA,KAACue,EAAAA,EAAa,CACZ1d,GAAI,CACFwB,OAAQ,OACRrB,SAAU,QAEZ4d,QAAQ,YACRC,WAAW7e,EAAAA,EAAAA,KAACuf,EAAAA,EAAS,CAAC1e,GAAI,CAAEuB,MAAO,GAAIC,OAAQ,MAC/C7B,MAAM,QACNiK,QAAS,WACPwM,IAAAA,KAAU,CACRE,MAAO,gBACPyF,KAAM,oCACN1F,KAAM,UACN2F,kBAAkB,EAClBC,mBAAoB,UACpBC,kBAAmB,OACnBC,kBAAmB,oBAClBC,MAAK,SAAC5W,GACHA,EAAO6W,cACT1G,KACA+C,GAAkB,CAChB7X,OAAQ,CAAErC,MAAO,GAAIF,KAAM,cAE7B6X,EAAiBxG,GAAU7D,GAC3B6E,GAAoB,IAEpBN,GAAmB,CACjBH,MAAM,EACNC,SAAU,KAGhB,GACF,EACA+N,SAA6B,KAAnBlQ,GAAMF,SAAgBvO,SACjC,YAIHJ,EAAAA,EAAAA,KAACue,EAAAA,EAAa,CACZ1d,GAAI,CACFwB,OAAQ,OACRrB,SAAU,OACV8I,WAAY0V,EAAAA,EAAW,KACvB,SAAU,CACR1V,WAAY0V,EAAAA,EAAW,OAG3B/U,QAzbV,YACEwU,EAAAA,EAAAA,GAAuB,CACrBC,UAAU,EACVtC,KAAK,iCAAD3U,OAAmC4G,GAAMhC,OAC7CsS,GAAI,SAACC,GACHjH,GAA2B,CACzBtL,MAAOgC,GAAMhC,MACbC,UAAW+B,GAAM/B,UACjBsS,qBAAAA,GAEJ,GAEJ,EA8aUZ,QAASpG,GACT2G,SAA6B,SAAnBlQ,GAAMF,SAChBiQ,QAAQ,YACRC,WAAW7e,EAAAA,EAAAA,KAACyf,EAAAA,EAAiB,CAAC5e,GAAI,CAAEuB,MAAO,GAAIC,OAAQ,MAASjC,SACjE,UAGDJ,EAAAA,EAAAA,KAACue,EAAAA,EAAa,CACZC,QAAS5I,GACTmJ,SAA6B,SAAnBlQ,GAAMF,SAChB2H,GAAG,eACH,gBAAc,OACd7L,QAnLV,WACEiL,GAAc,CAAE4D,UAAWzK,GAAMhC,OACnC,EAkLUhM,GAAI,CACFwB,OAAQ,OACRrB,SAAU,OACVR,MAAO,QACPkf,gBAAiBC,EAAAA,EAAK,KACtB,UAAW,CACTD,gBAAiBC,EAAAA,EAAK,OAExBvf,SACH,cAIHmJ,EAAAA,EAAAA,MAAA,OACEZ,MAAO,CACL3H,SAAU,OACV4e,OAAQ,oBACRxd,MAAO,OACPwG,QAAS,OACT0V,UAAW,OACXjc,OAAQ,OACRgc,WAAY,SACZxV,eAAgB,UAChBzI,SAAA,EAEFmJ,EAAAA,EAAAA,MAAA,KAAGZ,MAAO,CAAEkX,OAAQ,EAAGC,QAAS,EAAGtf,MAAO,SAAUJ,SAAA,EAClDJ,EAAAA,EAAAA,KAAA,QAAM2I,MAAO,CAAE3H,SAAU,QAASZ,SAAC,gBAAkB,KAACJ,EAAAA,EAAAA,KAAA,UAAAI,SAASmR,GAAiBpL,aAElFoD,EAAAA,EAAAA,MAAA,KAAGZ,MAAO,CAAEkX,OAAQ,EAAGC,QAAS,EAAGtf,MAAO,SAAUJ,SAAA,EAClDJ,EAAAA,EAAAA,KAAA,QAAM2I,MAAO,CAAE3H,SAAU,QAASZ,SAAC,iBAAmB,KAACJ,EAAAA,EAAAA,KAAA,UAAAI,SAASyO,GAAMT,iBAExE7E,EAAAA,EAAAA,MAAA,KAAGZ,MAAO,CAAEkX,OAAQ,EAAGC,QAAS,EAAGtf,MAAO,SAAUJ,SAAA,EAClDJ,EAAAA,EAAAA,KAAA,QAAM2I,MAAO,CAAE3H,SAAU,QAASZ,SAAC,kBAAoB,KAACJ,EAAAA,EAAAA,KAAA,UAAAI,SAASyO,GAAMR,kBAEzE9E,EAAAA,EAAAA,MAAA,KAAGZ,MAAO,CAAEkX,OAAQ,EAAGC,QAAS,EAAGtf,MAAO,SAAUJ,SAAA,EAClDJ,EAAAA,EAAAA,KAAA,QAAM2I,MAAO,CAAE3H,SAAU,QAASZ,SAAC,aAAgB,KACnDJ,EAAAA,EAAAA,KAAA,UACE2I,MAAO,CACLnI,MACEsb,WAAWjN,GAAMP,aAAayN,QAAQ,KAAM,KAAO,EAC/C,MACA,SACN3b,SAEDyO,GAAMP,yBAKf/E,EAAAA,EAAAA,MAAA,YACEZ,MAAO,CACLiX,OAAQ,oBACRG,aAAc,MACdnW,SAAU,WACVxH,MAAO,OACPC,OAAQ,OACRuG,QAAS,OACToX,UAAW,OACXC,IAAK,OACLH,QAAS,QACT1f,SAAA,CAEDmW,IACCvW,EAAAA,EAAAA,KAACue,EAAAA,EAAa,CAACC,QAASjI,MAExBhN,EAAAA,EAAAA,MAAC2W,EAAAA,EAAW,CACVtB,QAAQ,WACRje,KAAK,QACLoe,SAAUb,GACVrd,GAAI,CACFuB,MAAO,QACP,qBAAsB,CACpBpB,SAAU,OACV8I,WAAY,QACZD,OAAQ,GACRiW,QAAS,SAEX,wCAAyC,CAAE7e,IAAK,SAChDb,SAAA,EAEFJ,EAAAA,EAAAA,KAACmgB,EAAAA,EAAU,CAACC,QAAQ,wBAAuBhgB,SAAC,mBAG5CJ,EAAAA,EAAAA,KAACqgB,EAAAA,EAAa,CACZxf,GAAI,CACFwB,OAAQ,OACRrB,SAAU,QAEZ+d,SAAUb,GACVze,WAAS,EACTP,MAAM,gBACNC,KAAK,QACLE,MAAOwP,GAAMhC,MACbzN,SAAUma,GACVja,UAAW,SAACsH,GAC2C,IAAD0Z,EAArC,UAAX1Z,EAAEsG,MAA+B,gBAAXtG,EAAEsG,OAC1BtG,EAAEC,iBACa,QAAfyZ,EAAA9N,GAAQxG,eAAO,IAAAsU,GAAfA,EAAiBpX,QAGrB,EACAkB,SAA+B,WAAjB,OAAJgG,SAAI,IAAJA,QAAI,EAAJA,GAAMmF,YAChBe,GAAG,wBACHiK,cACEvgB,EAAAA,EAAAA,KAACwgB,EAAAA,EAAc,CAAC5W,SAAS,MAAKxJ,UAC5BJ,EAAAA,EAAAA,KAACygB,EAAAA,EAAU,CACThgB,IAAKmR,GACLmN,SAAUb,GACV,aAAW,gBACX1d,MAAM,YACNkgB,KAAK,MACLjW,QAAS,WACP+L,IACF,EAAEpW,UAEFJ,EAAAA,EAAAA,KAAC2gB,EAAAA,EAAc,cAO3B3gB,EAAAA,EAAAA,KAAChB,EAAAA,EAAgB,CACfS,WAAW,EACXsf,SAAUb,GACVhf,MAAM,OACNE,SAAU,SAACC,GACTmR,GAAS,CACPhE,KAAM,eACND,MAAO,YACPlN,MAAOA,GAEX,EACAA,MAAO,IAAI0N,KAAK8B,GAAM/B,WACtBvN,SAAUiT,GACVlT,UAAW,SAACsH,GAC2C,IAADga,EAArC,UAAXha,EAAEsG,MAA+B,gBAAXtG,EAAEsG,OAKC,QAA3B0T,EAAA/O,GAAoB7F,eAAO,IAAA4U,GAA3BA,EAA6B1X,QAEjC,EACA1J,cAAeA,GACfE,UAAW,CACTkB,gBAAiB,CACf+H,MAAO,CACL3H,SAAU,SAGd0d,WAAY,CACV/V,MAAO,CAAEtG,OAAQ,OAAQrB,SAAU,OAAQoB,MAAO,cAIxDpC,EAAAA,EAAAA,KAACye,EAAAA,EAAS,CACRM,SAAUb,GACVhf,MAAM,cACNyB,KAAK,QACLxB,KAAK,cACLE,MAAOwP,GAAM7B,YACb5N,SAAUma,GACVja,UAAW,SAACsH,GAC2C,IAADia,EAArC,UAAXja,EAAEsG,MAA+B,gBAAXtG,EAAEsG,OAC1BtG,EAAEC,iBACyB,QAA3Bga,EAAA/O,GAAoB9F,eAAO,IAAA6U,GAA3BA,EAA6B3X,QAEjC,EACAwV,WAAY,CACV/V,MAAO,CAAEtG,OAAQ,OAAQrB,SAAU,QACnCzB,SAAUsS,IAEZhR,GAAI,CACFoO,KAAM,EACN5M,OAAQ,OACR,qBAAsB,CAAErB,SAAU,QAClC,wCAAyC,CAAEC,IAAK,YAGpDjB,EAAAA,EAAAA,KAACye,EAAAA,EAAS,CACRM,SAAUb,GACVhf,MAAM,cACNyB,KAAK,QACLxB,KAAK,cACLE,MAAOwP,GAAM5B,YACb7N,SAAUma,GACVja,UAAW,SAACsH,GAC2C,IAADka,EAArC,UAAXla,EAAEsG,MAA+B,gBAAXtG,EAAEsG,OAC1BtG,EAAEC,iBACkB,QAApBia,EAAAxO,GAAatG,eAAO,IAAA8U,GAApBA,EAAsB5X,QAE1B,EACAwV,WAAY,CACVnf,SAAUuS,GACVnJ,MAAO,CAAEtG,OAAQ,OAAQrB,SAAU,SAErCH,GAAI,CACFoO,KAAM,EACN5M,OAAQ,OACR,qBAAsB,CAAErB,SAAU,QAClC,wCAAyC,CAAEC,IAAK,eAItDsI,EAAAA,EAAAA,MAAA,YACEZ,MAAO,CACLiX,OAAQ,oBACRG,aAAc,MACdnW,SAAU,WACVxH,MAAO,OACPC,OAAQ,OACR2d,UAAW,OAEXF,QAAS,QACT1f,SAAA,EAEFmJ,EAAAA,EAAAA,MAAA,OACEZ,MAAO,CACLC,QAAS,OACTqX,IAAK,QACL7f,SAAA,CAEDoa,IACCxa,EAAAA,EAAAA,KAACue,EAAAA,EAAa,CAACC,QAAShE,MAExBjR,EAAAA,EAAAA,MAAC2W,EAAAA,EAAW,CACVtB,QAAQ,WACRje,KAAK,QACLoe,SAAUb,GACVrd,GAAI,CACFuB,MAAO,QACP,qBAAsB,CACpBpB,SAAU,OACV8I,WAAY,QACZD,OAAQ,GACRiW,QAAS,SAEX,wCAAyC,CAAE7e,IAAK,SAChDb,SAAA,EAEFJ,EAAAA,EAAAA,KAACmgB,EAAAA,EAAU,CAACC,QAAQ,mBAAkBhgB,SAAC,UACvCJ,EAAAA,EAAAA,KAACqgB,EAAAA,EAAa,CACZxf,GAAI,CACFwB,OAAQ,OACRrB,SAAU,QAEZoJ,UAAQ,EACR2U,SAAUb,GACVze,WAAS,EACTP,MAAM,OACNC,KAAK,OACLI,SAAU+S,GACVjT,MAAOwP,GAAM3B,KACb9N,SAAUma,GACVja,UAAW,SAACsH,GACV,GAAe,UAAXA,EAAEsG,MAA+B,gBAAXtG,EAAEsG,KAE1B,OADAtG,EAAEC,iBACK0T,GAAuB1L,GAAM3B,KAExC,EACAoJ,GAAG,mBACHiK,cACEvgB,EAAAA,EAAAA,KAACwgB,EAAAA,EAAc,CAAC5W,SAAS,MAAKxJ,UAC5BJ,EAAAA,EAAAA,KAACygB,EAAAA,EAAU,CACThgB,IAAKmR,GACLmN,SAAUb,GACV,aAAW,gBACX1d,MAAM,YACNkgB,KAAK,MACLjW,QAAS,WACP8P,GAAuB1L,GAAM3B,KAC/B,EAAE9M,UAEFJ,EAAAA,EAAAA,KAAC2gB,EAAAA,EAAc,cAO3B3gB,EAAAA,EAAAA,KAACye,EAAAA,EAAS,CACRM,SAAUb,GACVhf,MAAM,eACNyB,KAAK,QACLxB,KAAK,WACLE,MAAOwP,GAAM1B,SACb/N,SAAUma,GACVja,UAAW,SAACsH,GAIP,IAADma,GAFW,UAAXna,EAAEsG,MACU,gBAAXtG,EAAEsG,MAA6C,KAAnB2B,GAAM1B,YAEnCvG,EAAEC,iBACmB,QAArBka,EAAArO,GAAc1G,eAAO,IAAA+U,GAArBA,EAAuB7X,QAG3B,EACAwV,WAAY,CACV/V,MAAO,CAAEtG,OAAQ,OAAQrB,SAAU,QACnCzB,SAAUkT,IAEZ5R,GAAI,CACFoO,KAAM,EACN,qBAAsB,CAAEjO,SAAU,QAClC,wCAAyC,CAAEC,IAAK,YAGpDjB,EAAAA,EAAAA,KAACye,EAAAA,EAAS,CACRM,SAAUb,GACVhf,MAAM,cACNyB,KAAK,QACLxB,KAAK,cACLE,MAAOwP,GAAMxB,YACbjO,SAAUma,GACVja,UAAW,SAACsH,GAIP,IAADoa,GAFW,UAAXpa,EAAEsG,MACU,gBAAXtG,EAAEsG,MAAgD,KAAtB2B,GAAMxB,eAEnCzG,EAAEC,iBACgB,QAAlBma,EAAAjP,GAAW/F,eAAO,IAAAgV,GAAlBA,EAAoB9X,QAGxB,EACAwV,WAAY,CACV/V,MAAO,CAAEtG,OAAQ,OAAQrB,SAAU,QACnCzB,SAAUmT,IAEZ7R,GAAI,CACFuB,MAAO,QACP,qBAAsB,CAAEpB,SAAU,QAClC,wCAAyC,CAAEC,IAAK,WAGnDia,IACClb,EAAAA,EAAAA,KAACue,EAAAA,EAAa,CAACC,QAAStD,MAExB3R,EAAAA,EAAAA,MAAC2W,EAAAA,EAAW,CACVtB,QAAQ,WACRje,KAAK,QACLoe,SAAUb,GACVrd,GAAI,CACFuB,MAAO,QACP,qBAAsB,CACpBpB,SAAU,OACV8I,WAAY,QACZD,OAAQ,GACRiW,QAAS,SAEX,wCAAyC,CAAE7e,IAAK,SAChDb,SAAA,EAEFJ,EAAAA,EAAAA,KAACmgB,EAAAA,EAAU,CAACC,QAAQ,uBAAsBhgB,SAAC,SAC3CJ,EAAAA,EAAAA,KAACqgB,EAAAA,EAAa,CACZjW,UAAQ,EACRvJ,GAAI,CACFwB,OAAQ,OACRrB,SAAU,QAEZzB,SAAUwS,GACVgN,SAAUb,GACVze,WAAS,EACTP,MAAM,MACNC,KAAK,aACLE,MAAOwP,GAAMtB,WACbnO,SAAUma,GACVja,UAAW,SAACsH,GACV,GAAe,UAAXA,EAAEsG,MAA+B,gBAAXtG,EAAEsG,KAG1B,OAFAtG,EAAEC,iBACF+J,IAAgB,GACTqK,GAA0BpM,GAAMtB,WAE3C,EACA+I,GAAG,uBACHiK,cACEvgB,EAAAA,EAAAA,KAACwgB,EAAAA,EAAc,CAAC5W,SAAS,MAAKxJ,UAC5BJ,EAAAA,EAAAA,KAACygB,EAAAA,EAAU,CACThgB,IAAKmR,GACLmN,SAAUb,GACV,aAAW,gBACX1d,MAAM,YACNkgB,KAAK,MACLjW,QAAS,WACPwQ,GAA0BpM,GAAMtB,WAClC,EAAEnN,UAEFJ,EAAAA,EAAAA,KAAC2gB,EAAAA,EAAc,cAO3B3gB,EAAAA,EAAAA,KAACye,EAAAA,EAAS,CACRM,SAAUb,GACVhf,MAAM,QACNyB,KAAK,QACLxB,KAAK,QACLE,MAAOwP,GAAMnB,MACbtO,SAAUma,GACVja,UAAW,SAACsH,GAC2C,IAADqa,EAArC,UAAXra,EAAEsG,MAA+B,gBAAXtG,EAAEsG,OAC1BtG,EAAEC,iBACe,QAAjBoa,EAAAtO,GAAU3G,eAAO,IAAAiV,GAAjBA,EAAmB/X,QAEvB,EACAgY,OAAQ,SAACta,GACPA,EAAEC,iBACF,IAAIsa,EAAM,IACLhF,MAAML,WAAWjN,GAAMnB,UAC1ByT,EAAMtS,GAAMnB,OAEd8C,GAAS,CACPhE,KAAM,eACND,MAAO,QACPlN,MAAOyc,WAAWqF,EAAI1E,WAAWV,QAAQ,KAAM,KAAKC,QAAQ,IAEhE,EACA0C,WAAY,CACV0C,eAAgBlgB,EAAAA,EAChB3B,SAAU2S,GACVvJ,MAAO,CAAEtG,OAAQ,OAAQrB,SAAU,SAErCH,GAAI,CACFuB,MAAO,QACP,qBAAsB,CAAEpB,SAAU,QAClC,wCAAyC,CAAEC,IAAK,YAGpDjB,EAAAA,EAAAA,KAACye,EAAAA,EAAS,CACRM,SAAUb,GACVhf,MAAM,SACNyB,KAAK,QACLxB,KAAK,SACLE,MAAOwP,GAAMpB,OACbrO,SAAUma,GACVja,UAAW,SAACsH,GAGuB,IAADya,EAEvBC,EAJM,UAAX1a,EAAEsG,MAA+B,gBAAXtG,EAAEsG,OAC1BtG,EAAEC,iBACiB,YAAfgI,GAAM3B,KACU,QAAlBmU,EAAAzO,GAAW5G,eAAO,IAAAqV,GAAlBA,EAAoBnY,QAEH,QAAjBoY,EAAAxO,GAAU9G,eAAO,IAAAsV,GAAjBA,EAAmBpY,QAGzB,EACAqY,QAAS,SAAC3a,GACRA,EAAEC,iBACiB,YAAfgI,GAAM3B,MACRsD,GAAS,CACPhE,KAAM,eACND,MAAO,SACPlN,MAAOwP,GAAMP,cAGnB,EACA4S,OAAQ,SAACta,GACPA,EAAEC,iBACF,IAAIsa,EAAM,IACLhF,MAAML,WAAWjN,GAAMpB,WAC1B0T,EAAMtS,GAAMpB,QAEd+C,GAAS,CACPhE,KAAM,eACND,MAAO,SACPlN,MAAOyc,WAAWqF,EAAI1E,WAAWV,QAAQ,KAAM,KAAKC,QAAQ,IAEhE,EACA0C,WAAY,CACV0C,eAAgBlgB,EAAAA,EAChByH,MAAO,CAAEtG,OAAQ,OAAQrB,SAAU,QACnCzB,SAAUoT,IAEZ9R,GAAI,CACFuB,MAAO,QACP,qBAAsB,CAAEpB,SAAU,QAClC,wCAAyC,CAAEC,IAAK,YAGpDjB,EAAAA,EAAAA,KAACye,EAAAA,EAAS,CACRM,SAAUb,IAAiC,YAAfrP,GAAM3B,KAClChO,MAAM,WACNyB,KAAK,QACLxB,KAAK,UACLE,MAAOwP,GAAMlB,QACbvO,SAAUma,GACVja,UAAW,SAACsH,GAC2C,IAAD4a,EAArC,UAAX5a,EAAEsG,MAA+B,gBAAXtG,EAAEsG,OAC1BtG,EAAEC,iBACkB,QAApB2a,EAAA3O,GAAa7G,eAAO,IAAAwV,GAApBA,EAAsBtY,QAE1B,EACAwV,WAAY,CACVnf,SAAUqT,GACVjK,MAAO,CAAEtG,OAAQ,OAAQrB,SAAU,SAErCH,GAAI,CACFuB,MAAO,QACP,qBAAsB,CAAEpB,SAAU,QAClC,wCAAyC,CAAEC,IAAK,eAItDsI,EAAAA,EAAAA,MAAA,OACEZ,MAAO,CACLC,QAAS,OACTqX,IAAK,OACLD,UAAW,QACX5f,SAAA,CAEc,YAAfyO,GAAM3B,MACLlN,EAAAA,EAAAA,KAAChB,EAAAA,EAAgB,CACfS,WAAW,EACXsf,SAAUb,IAAiC,YAAfrP,GAAM3B,KAClChO,MAAM,aACNE,SAAU,SAACC,GACTmR,GAAS,CACPhE,KAAM,eACND,MAAO,YACPlN,MAAOA,GAEX,EACAA,MAAOwP,GAAMjB,UACbtO,UAAW,SAACsH,GAC2C,IAAD6a,EAArC,UAAX7a,EAAEsG,MAA+B,gBAAXtG,EAAEsG,OAOT,QAAjBuU,EAAA3O,GAAU9G,eAAO,IAAAyV,GAAjBA,EAAmBvY,QAEvB,EACA1J,cAAemS,GACfpS,SAAUsT,GACVnT,UAAW,CACTkB,gBAAiB,CACf+H,MAAO,CACL3H,SAAU,SAGd0d,WAAY,CACV/V,MAAO,CAAEtG,OAAQ,OAAQrB,SAAU,OAAQoB,MAAO,cAKxDpC,EAAAA,EAAAA,KAACye,EAAAA,EAAS,CACRM,SAAUb,IAAiC,YAAfrP,GAAM3B,KAClChO,MAAM,aACNyB,KAAK,QACLxB,KAAK,YACLuf,WAAY,CACV/V,MAAO,CAAEtG,OAAQ,OAAQrB,SAAU,SAErCH,GAAI,CACFuB,MAAO,QACP,qBAAsB,CAAEpB,SAAU,QAClC,wCAAyC,CAAEC,IAAK,WAIrDya,IACC1b,EAAAA,EAAAA,KAACue,EAAAA,EAAa,CAACC,QAAS9C,MAExBnS,EAAAA,EAAAA,MAAC2W,EAAAA,EAAW,CACVtB,QAAQ,WACRje,KAAK,QACLoe,SAAUb,GACVrd,GAAI,CACFuB,MAAO,QACP,qBAAsB,CACpBpB,SAAU,OACV8I,WAAY,QACZD,OAAQ,GACRiW,QAAS,SAEX,wCAAyC,CAAE7e,IAAK,SAChDb,SAAA,EAEFJ,EAAAA,EAAAA,KAACmgB,EAAAA,EAAU,CAACC,QAAQ,KAAIhgB,SAAC,QACzBJ,EAAAA,EAAAA,KAACqgB,EAAAA,EAAa,CACZ9gB,SAAUuT,GACVjS,GAAI,CACFwB,OAAQ,OACRrB,SAAU,QAEZoJ,UAAQ,EACR3K,WAAS,EACTP,MAAM,KACNC,KAAK,UACLE,MAAOwP,GAAMhB,QACbzO,SAAUma,GACVja,UAAW,SAACsH,GACV,GAAe,UAAXA,EAAEsG,MAA+B,gBAAXtG,EAAEsG,KAE1B,OADAtG,EAAEC,iBACK4U,GAAuB5M,GAAMhB,QAExC,EACAyI,GAAG,KACHiK,cACEvgB,EAAAA,EAAAA,KAACwgB,EAAAA,EAAc,CAAC5W,SAAS,MAAKxJ,UAC5BJ,EAAAA,EAAAA,KAACygB,EAAAA,EAAU,CACThgB,IAAKmR,GACLmN,SAAUb,GACV,aAAW,gBACX1d,MAAM,YACNkgB,KAAK,MACLjW,QAAS,WACPgR,GAAuB5M,GAAMhB,QAC/B,EAAEzN,UAEFJ,EAAAA,EAAAA,KAAC2gB,EAAAA,EAAc,cAO3B3gB,EAAAA,EAAAA,KAACye,EAAAA,EAAS,CACRM,SAAUb,GACVhf,MAAM,UACNyB,KAAK,QACLxB,KAAK,UACLE,MAAOwP,GAAMd,QACb3O,SAAUma,GACVja,UAAW,SAACsH,GAGuB,IAAD8a,EAEvBC,EAJM,UAAX/a,EAAEsG,MAA+B,gBAAXtG,EAAEsG,OAC1BtG,EAAEC,iBACiB,YAAfgI,GAAM3B,KACe,QAAvBwU,EAAA1P,GAAgBhG,eAAO,IAAA0V,GAAvBA,EAAyBxY,QAEX,QAAdyY,EAAA1P,GAAOjG,eAAO,IAAA2V,GAAdA,EAAgBzY,QAGtB,EACAwV,WAAY,CACV/V,MAAO,CAAEtG,OAAQ,OAAQrB,SAAU,QACnCzB,SAAU4S,IAEZtR,GAAI,CACFoO,KAAM,EACN,qBAAsB,CAAEjO,SAAU,QAClC,wCAAyC,CAAEC,IAAK,WAGpC,YAAf4N,GAAM3B,OACLlN,EAAAA,EAAAA,KAACye,EAAAA,EAAS,CACRM,SAAUb,GACVhf,MAAM,QACNyB,KAAK,QACLxB,KAAK,QACLE,MAAOwP,GAAMb,MACb5O,SAAUma,GACVja,UAAW,SAACsH,GACV,GAAe,UAAXA,EAAEsG,MAA+B,gBAAXtG,EAAEsG,KAE1B,OADAtG,EAAEC,iBACKqV,IAEX,EACAwC,WAAY,CACVtU,UAAU,EACV7K,SAAUwT,GACVpK,MAAO,CAAEtG,OAAQ,OAAQrB,SAAU,SAErCH,GAAI,CACFuB,MAAO,QACP,qBAAsB,CAAEpB,SAAU,QAClC,wCAAyC,CAAEC,IAAK,WAKtC,YAAf4N,GAAM3B,OACLlN,EAAAA,EAAAA,KAAA4hB,EAAAA,SAAA,CAAAxhB,SACG8a,IACClb,EAAAA,EAAAA,KAACue,EAAAA,EAAa,CAACC,QAAStD,MAExB3R,EAAAA,EAAAA,MAAC2W,EAAAA,EAAW,CACVtB,QAAQ,WACRje,KAAK,QACLoe,SAAUb,GACVrd,GAAI,CACFuB,MAAO,QACP,qBAAsB,CACpBpB,SAAU,OACV8I,WAAY,QACZD,OAAQ,GACRiW,QAAS,SAEX,wCAAyC,CAAE7e,IAAK,SAChDb,SAAA,EAEFJ,EAAAA,EAAAA,KAACmgB,EAAAA,EAAU,CAACC,QAAQ,sBAAqBhgB,SAAC,WAC1CJ,EAAAA,EAAAA,KAACqgB,EAAAA,EAAa,CACZjW,UAAQ,EACRvJ,GAAI,CACFwB,OAAQ,OACRrB,SAAU,QAEZzB,SAAUyS,GACV+M,SAAUb,GACVze,WAAS,EACTP,MAAM,QACNC,KAAK,QACLE,MAAOwP,GAAMb,MACb5O,SAAUma,GACVja,UAAW,SAACsH,GACV,GAAe,UAAXA,EAAEsG,MAA+B,gBAAXtG,EAAEsG,KAG1B,OAFAtG,EAAEC,iBACF+J,IAAgB,GACTqK,GAA0BpM,GAAMb,MAE3C,EACAsI,GAAG,sBACHiK,cACEvgB,EAAAA,EAAAA,KAACwgB,EAAAA,EAAc,CAAC5W,SAAS,MAAKxJ,UAC5BJ,EAAAA,EAAAA,KAACygB,EAAAA,EAAU,CACThgB,IAAKmR,GACLmN,SAAUb,GACV1d,MAAM,YACNkgB,KAAK,MACLjW,QAAS,WACPwQ,GAA0BpM,GAAMb,MAClC,EAAE5N,UAEFJ,EAAAA,EAAAA,KAAC2gB,EAAAA,EAAc,gBAS/BpX,EAAAA,EAAAA,MAAC2W,EAAAA,EAAW,CACVvf,KAAK,QACLie,QAAQ,WACR/d,GAAI,CACFuB,MAAO,QACP,qBAAsB,CACpBpB,SAAU,OACV8I,WAAY,QACZD,OAAQ,GACRiW,QAAS,SAEX,wCAAyC,CAAE7e,IAAK,SAChDb,SAAA,EAEFJ,EAAAA,EAAAA,KAACmgB,EAAAA,EAAU,CAAC7J,GAAG,yBAAwBlW,SAAC,cACxCmJ,EAAAA,EAAAA,MAACsY,EAAAA,EAAM,CACLC,QAAQ,yBACRziB,MAAOwP,GAAMZ,QACb9O,KAAK,UACLC,SAAUma,GACVwI,WAAS,EACTlhB,GAAI,CACFwB,OAAQ,OACRrB,SAAU,QAEZzB,SAAU0S,GACV8M,SAAUb,GAAe9d,SAAA,EAGzBJ,EAAAA,EAAAA,KAACgiB,EAAAA,EAAQ,CAAC3iB,MAAM,MAAMC,UAAW,SAACsH,GACjB,UAAXA,EAAEsG,MAA+B,gBAAXtG,EAAEsG,OAC1BtG,EAAEC,kBACFmX,EAAAA,EAAAA,GAAK,KAAKf,MAAK,WAAO,IAADgF,EACD,QAAlBA,EAAAjP,GAAWhH,eAAO,IAAAiW,GAAlBA,EAAoB/Y,OACtB,IAGJ,EAAE9I,SAAC,SACHJ,EAAAA,EAAAA,KAACgiB,EAAAA,EAAQ,CAAC3iB,MAAO,UAAWC,UAAW,SAACsH,GACvB,UAAXA,EAAEsG,MAA+B,gBAAXtG,EAAEsG,OAC1BtG,EAAEC,kBACFmX,EAAAA,EAAAA,GAAK,KAAKf,MAAK,WAAO,IAADiF,EACD,QAAlBA,EAAAlP,GAAWhH,eAAO,IAAAkW,GAAlBA,EAAoBhZ,OACtB,IAEJ,EAAE9I,SAAC,mBAGPJ,EAAAA,EAAAA,KAACye,EAAAA,EAAS,CACRM,SAAUb,GACVhf,MAAM,iBACNyB,KAAK,QACLxB,KAAK,UACLE,MAAOwP,GAAMX,QACb9O,SAAUma,GACVja,UAAW,SAACsH,GACK,UAAXA,EAAEsG,MAA+B,gBAAXtG,EAAEsG,OAC1BtG,EAAEC,iBACFqV,KAEJ,EACAwC,WAAY,CACV/V,MAAO,CAAEtG,OAAQ,OAAQrB,SAAU,QACnCzB,SAAUyT,IAEZnS,GAAI,CACFuB,MAAO,QACP,qBAAsB,CAAEpB,SAAU,QAClC,wCAAyC,CAAEC,IAAK,YAGpDjB,EAAAA,EAAAA,KAAC2e,EAAAA,EAAM,CACLI,SAAUb,GACVrd,GAAI,CACFwB,OAAQ,OACRrB,SAAU,QAEZ4d,QAAQ,YACRC,WAAW7e,EAAAA,EAAAA,KAACmiB,EAAAA,EAAQ,CAACthB,GAAI,CAAEG,SAAU,UACrCyJ,QAAS,WACPyR,IACF,EACA1b,MAAM,UAASJ,SAChB,oBAsGLJ,EAAAA,EAAAA,KAAC8B,EAAAA,EAAW,CACVqB,UAAWoU,IACTsB,IACAf,GACFrX,IAAK8R,GACLrQ,MAr8DmB8D,GAq8DKuL,GAp8DvBvL,GAAI+D,KAAI,SAAC3F,GAad,OAZAA,EAAIsJ,MAAQoO,WACV1X,EAAIsJ,MAAM+O,WAAWV,QAAQ,KAAM,KACnC4B,eAAe,QAAS,CACxBC,sBAAuB,EACvBC,sBAAuB,IAEzBzZ,EAAIqJ,OAASqO,WACX1X,EAAIqJ,OAAOgP,WAAWV,QAAQ,KAAM,KACpC4B,eAAe,QAAS,CACxBC,sBAAuB,EACvBC,sBAAuB,IAElBzZ,CACT,KAu7DMjC,OAAQ6M,EACR5M,MAAOA,GACPC,OAAQA,GACRC,cAAc,EACdE,kBAAmB,SAACiW,GAClB,IAAMrM,EAAcqM,EAAS,GAC7B,KAAIA,EAAStS,OAAS,GAiBf,CACL,IAAM4X,EAAa,CACjB7Q,KAAM,GACNC,SAAU,GACVC,QAAS,GACTC,YAAa,GACbC,KAAM,GACNC,WAAY,GACZE,OAAQ,GACRC,MAAO,GACPG,QAAS,GACTC,QAAS,GACTC,QAAS,GACTE,QAAS,UACTC,QAAS,GACTP,QAAS,GACTC,UAAW,IAAIb,MAIjB,OAFAiK,EAAiBxG,IAAQlQ,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAOuO,IAAUkP,SAC1C7M,GAAmB,CAAEH,MAAM,EAAOC,SAAU,IAE9C,CArCEgG,EAAiBxG,IAAQlQ,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACpB8L,GAAW,IACdwB,UAAW,IAAIb,KAAKX,EAAYwB,WAChChB,UAAWiC,GAAMjC,UACjBC,MAAOgC,GAAMhC,MACbC,UAAW+B,GAAM/B,UACjBE,YAAa6B,GAAM7B,YACnBC,YAAa4B,GAAM5B,YACnBmB,WAAYS,GAAMT,WAClBC,YAAaQ,GAAMR,YACnBC,aAAcO,GAAMP,gBAEtB4C,GAAmB,CACjBH,MAAM,EACNC,SAAU5E,EAAYmQ,QAwB5B,EACAjd,UAAW,SAACyI,EAAKe,GAEf,GAAY,WAARA,GAA4B,cAARA,OAAxB,CACE,IAAMsD,EAAcrE,EAAI,GAExBkP,IAAAA,KAAU,CACRE,MAAM,mCACNyF,KAAM,oCACN1F,KAAM,UACN2F,kBAAkB,EAClBC,mBAAoB,UACpBC,kBAAmB,OACnBC,kBAAmB,oBAClBC,MAAK,SAAC5W,GACP,GAAIA,EAAO6W,YACT,OAAO1L,IAAoB,SAAClJ,GAC1B,OAAOA,EAAEnE,QACP,SAACie,GAAU,OAAKA,EAAM7F,SAAWnQ,EAAYmQ,MAAM,GAEvD,GAEJ,GAEF,CAuCF,EACAnZ,aAAc,SAACgJ,EAAa1B,GAC1BgK,QAAQC,IAAIvI,GACZ1B,EAAM5D,kBACN+I,GAAY,CAAEF,EAAGjF,EAAM2X,MAAOzS,EAAGlF,EAAM4X,QACvC5S,IAAgB,GAChBK,GAAsB3D,EACxB,EACAtJ,oBAAoB,YAGtB9C,EAAAA,EAAAA,KAACuiB,EAAAA,EAAK,CAAC9M,KAAMhF,GAAU+R,QAAS,kBAAM9R,IAAY,EAAM,EAACtQ,UACvDmJ,EAAAA,EAAAA,MAACkZ,EAAAA,EAAG,CACF5hB,GAAI,CACF+I,SAAU,WACV3I,IAAK,MACLyhB,KAAM,MACNC,UAAW,wBACXvgB,MAAO,IACPwgB,QAAS,mBACTC,EAAG,GACHziB,SAAA,EAEFJ,EAAAA,EAAAA,KAACygB,EAAAA,EAAU,CACT9X,MAAO,CACLiB,SAAU,WACV3I,IAAK,OACL6hB,MAAO,QAET,aAAW,gBACXrY,QAAS,kBAAMiG,IAAY,EAAM,EAACtQ,UAElCJ,EAAAA,EAAAA,KAACuf,EAAAA,EAAS,OAEZvf,EAAAA,EAAAA,KAAC+iB,EAAAA,EAAU,CACTzM,GAAG,oBACHsI,QAAQ,KACRoE,UAAU,KACVniB,GAAI,CAAEoiB,aAAc,QAAS7iB,SAC9B,UAGDmJ,EAAAA,EAAAA,MAAA,OACEZ,MAAO,CACLvG,MAAO,SACPhC,SAAA,EAEFmJ,EAAAA,EAAAA,MAAA,OACEZ,MAAO,CACLvG,MAAO,OACPwG,QAAS,OACTqa,aAAc,OACdpa,eAAgB,gBAChBwV,WAAY,UACZje,SAAA,EAEFJ,EAAAA,EAAAA,KAACC,EAAAA,EAAoB,CAACC,YAAaC,EAAAA,EAAeC,UAChDJ,EAAAA,EAAAA,KAACK,EAAAA,EAAU,CACTQ,GAAI,CACFuB,MAAO,QACP,wCAAyC,CAAEnB,IAAK,SAElDP,UAAW,CACThB,UAAW,CACTiB,KAAM,QACNxB,KAAM,GACNyB,gBAAiB,CACf+H,MAAO,CACL3H,SAAU,SAGd0d,WAAY,CACV/V,MAAO,CAAEtG,OAAQ,OAAQrB,SAAU,WAIzC9B,MAAO,qBACPgkB,MAAO,CAAC,QAAS,QACjB7jB,MAAOwP,GAAML,mBACbpP,SAAU,SAACC,GACTmR,GAAS,CACPhE,KAAM,eACND,MAAO,qBACPlN,MAAOA,GAEX,OAGJW,EAAAA,EAAAA,KAACmjB,EAAAA,EAAgB,CACftiB,GAAI,CACFwB,OAAQ,OACR,wBAAyB,CACvBrB,SAAU,SAGdoiB,SACEpjB,EAAAA,EAAAA,KAACqjB,EAAAA,EAAQ,CACP1iB,KAAK,QACL2iB,QAASzU,GAAMN,WACfnP,SAAU,SAACwH,GACT4J,GAAS,CACPhE,KAAM,eACND,MAAO,aACPlN,OAAQwP,GAAMN,YAElB,IAGJrP,MAAM,yBAGVqK,EAAAA,EAAAA,MAAC2W,EAAAA,EAAW,CACVzgB,WAAS,EACTkB,KAAK,QACLie,QAAQ,WACR/d,GAAI,CACF,qBAAsB,CACpBG,SAAU,OACV8I,WAAY,QACZD,OAAQ,GACRiW,QAAS,SAEX,wCAAyC,CAAE7e,IAAK,SAChDb,SAAA,EAEFJ,EAAAA,EAAAA,KAACmgB,EAAAA,EAAU,CAAC7J,GAAG,2BAA0BlW,SAAC,iBAC1CmJ,EAAAA,EAAAA,MAACsY,EAAAA,EAAM,CACLC,QAAQ,2BACRziB,MAAOwP,GAAMJ,QACbtP,KAAK,UACLC,SAAUma,GACVwI,WAAS,EACTlhB,GAAI,CACFwB,OAAQ,OACRrB,SAAU,QACVZ,SAAA,EAEFJ,EAAAA,EAAAA,KAACgiB,EAAAA,EAAQ,CAAC3iB,MAAO,GAAGe,SAAC,OACrBJ,EAAAA,EAAAA,KAACgiB,EAAAA,EAAQ,CAAC3iB,MAAO,IAAIe,SAAC,mCACtBmJ,EAAAA,EAAAA,MAACyY,EAAAA,EAAQ,CAAC3iB,MAAO,IAAIe,SAAA,CAClB,IAAI,+CAGPJ,EAAAA,EAAAA,KAACgiB,EAAAA,EAAQ,CAAC3iB,MAAO,IAAIe,SAAC,qBACtBJ,EAAAA,EAAAA,KAACgiB,EAAAA,EAAQ,CAAC3iB,MAAO,IAAIe,SAAC,oBACtBJ,EAAAA,EAAAA,KAACgiB,EAAAA,EAAQ,CAAC3iB,MAAO,IAAIe,SAAC,8BACtBJ,EAAAA,EAAAA,KAACgiB,EAAAA,EAAQ,CAAC3iB,MAAO,IAAIe,SAAC,8BACtBJ,EAAAA,EAAAA,KAACgiB,EAAAA,EAAQ,CAAC3iB,MAAO,IAAIe,SAAC,gBACtBJ,EAAAA,EAAAA,KAACgiB,EAAAA,EAAQ,CAAC3iB,MAAO,IAAIe,SAAC,8BACtBJ,EAAAA,EAAAA,KAACgiB,EAAAA,EAAQ,CAAC3iB,MAAO,IAAIe,SAAC,4BACtBJ,EAAAA,EAAAA,KAACgiB,EAAAA,EAAQ,CAAC3iB,MAAO,IAAIe,SAAC,sCAGtBJ,EAAAA,EAAAA,KAACgiB,EAAAA,EAAQ,CAAC3iB,MAAO,KAAKe,SAAC,wCAGvBJ,EAAAA,EAAAA,KAACgiB,EAAAA,EAAQ,CAAC3iB,MAAO,KAAKe,SAAC,2CAK7BmJ,EAAAA,EAAAA,MAAA,OACEZ,MAAO,CACLC,QAAS,OACT0V,UAAW,OACXD,WAAY,WACZ2B,UAAW,QACX5f,SAAA,EAEFJ,EAAAA,EAAAA,KAACue,EAAAA,EAAa,CACZC,QAAS1G,GACTtX,MAAM,UACNoe,QAAQ,YACRnU,QAAS,kBAAMoN,GAAUhJ,GAAM,EAACzO,SACjC,gBAGDJ,EAAAA,EAAAA,KAAC2e,EAAAA,EACC,CACAne,MAAM,QACNoe,QAAQ,YACRnU,QAAS,kBAAMiG,IAAY,EAAM,EAACtQ,SACnC,mBAMNka,GACAU,GACAQ,GACA7B,GAEAlK,KACClG,EAAAA,EAAAA,MAAA,OACEZ,MAAO,CACLiB,SAAU,WACV3I,IAAK2I,GAASgG,EACd8S,KAAM9Y,GAAS+F,EACf+P,gBAAiB,QACjBI,QAAS,OACTF,OAAQ,kBACRG,aAAc,MACdwD,UAAW,+BACX1Z,OAAQ,IACRjB,QAAS,OACTa,cAAe,SACf+Z,OAAQ,OACRpjB,SAAA,EAEFJ,EAAAA,EAAAA,KAAC2e,EAAAA,EAAM,CACL9d,GAAI,CACFwB,OAAQ,OACRrB,SAAU,QAEZ4d,QAAQ,YACRnU,QAAS,WAEHqF,IACFmH,IAAAA,KAAU,CACRE,MAAM,mCACNyF,KAAM,oCACN1F,KAAM,UACN2F,kBAAkB,EAClBC,mBAAoB,UACpBC,kBAAmB,OACnBC,kBAAmB,oBAClBC,MAAK,SAAC5W,GACHA,EAAO6W,cACT1L,IAAoB,SAAClJ,GACnB,OAAOA,EAAEnE,QACP,SAACie,GAAU,OAAKA,EAAM7F,SAAWzM,GAAmByM,MAAM,GAE9D,IACAxM,GAAsB,MAE1B,GAEJ,EAAE3P,SAAE,eACJ0P,IAAkD,YAA5BA,GAAmB5C,OACzClN,EAAAA,EAAAA,KAAC2e,EAAAA,EAAM,CAACC,QAAQ,YACd/d,GAAI,CACFwB,OAAQ,OACRrB,SAAU,QAEZyJ,QAl7CZ,WACEsF,GAAsB,MAClBD,KACF+E,aAAaC,WAAW,eACxBD,aAAaE,QAAQ,cAAe,UACpCF,aAAaE,QAAQ,eAAgB,WACrCF,aAAaE,QAAQ,SAAU,2BAC/BF,aAAaE,QAAQ,QAASC,KAAKC,UAAUnF,KAC7C+E,aAAaE,QAAQ,aAAcC,KAAKC,UAAU,KAClDJ,aAAaE,QAAQ,SAASC,KAAKC,UAAU,KAC7CJ,aAAaE,QAAS,QAAS,KAEjCS,OAAOC,KAAK,mBAAoB,SAClC,EAq6C2CrV,SAAC,eAK9C,CAEA,SAAS4W,EAAiBxG,EAAeiT,GACvCC,OAAOC,QAAQF,GAAKG,SAAQ,SAAA3kB,GAAqB,IAAD4kB,GAAArgB,EAAAA,EAAAA,GAAAvE,EAAA,GAAlBsN,EAAKsX,EAAA,GAAExkB,EAAKwkB,EAAA,GACxCrT,EAAS,CAAEhE,KAAM,eAAgBD,MAAAA,EAAOlN,MAAAA,GAC1C,GACF,C,4BEr7EIykB,EAAyBC,EAAQ,OAIrCC,EAAQ,OAAU,EAClB,IAAIC,EAAiBH,EAAuBC,EAAQ,QAChDG,EAAcH,EAAQ,OACtBI,GAAW,EAAIF,EAAeG,UAAuB,EAAIF,EAAYG,KAAK,OAAQ,CACpF/b,EAAG,oOACD,cACJ0b,EAAQ,EAAUG,C,sBCGlB,IAhBmB,CACjB,GAAI,UACJ,IAAK,UACL,IAAK,UACL,IAAK,UACL,IAAK,UACL,IAAK,UACL,IAAK,UACL,IAAK,UACL,IAAK,UACL,IAAK,UACLG,KAAM,UACNC,KAAM,UACNC,KAAM,UACNC,KAAM,U","sources":["components/DatePicker.tsx","components/NumberFormat.tsx","components/UpwardTable.tsx","feautures/Admin/Task/Accounting/CashDisbursement.tsx","lib/formatDate.ts","../node_modules/@mui/icons-material/RestartAlt.js","../node_modules/@mui/material/colors/deepOrange.js"],"sourcesContent":["import { LocalizationProvider } from \"@mui/x-date-pickers/LocalizationProvider\";\nimport { AdapterDateFns } from \"@mui/x-date-pickers/AdapterDateFns\";\nimport { DatePicker } from \"@mui/x-date-pickers\";\nexport default function CustomDatePicker({\n  label,\n  name,\n  onChange,\n  value,\n  onKeyDown,\n  inputRef,\n  datePickerRef,\n  fullWidth,\n  textField,\n  minWidth = \"200px\",\n  ...rest\n}: any) {\n  return (\n    <LocalizationProvider dateAdapter={AdapterDateFns}>\n      <DatePicker\n      floatingLabelStyle={{color: \"black\" }}\n        value={value}\n        onChange={onChange}\n        ref={datePickerRef}\n        slotProps={{\n          textField: {\n            size: \"small\",\n            label,\n            name,\n            onKeyDown,\n            inputRef: inputRef,\n            fullWidth,\n\n            ...textField,\n          },\n        }}\n        InputLabelProps={{\n          sx: {\n            color: \"black\",\n          },\n        }}\n        sx={{\n          minWidth,\n          fieldset: { borderColor: \"black\" },\n          \".MuiFormLabel-root\": { fontSize: \"14px\" },\n          \".MuiFormLabel-root[data-shrink=false]\": {\n            top: \"-5px\",\n          },\n        }}\n        {...rest}\n      />\n    </LocalizationProvider>\n  );\n}\n","import React from \"react\";\nimport { NumericFormat, NumericFormatProps } from \"react-number-format\";\n\ninterface CustomProps {\n  onChange: (event: { target: { name: string; value: string } }) => void;\n  name: string;\n}\n\nexport const NumericFormatCustom = React.forwardRef<\n  NumericFormatProps,\n  CustomProps\n>(function NumericFormatCustom(props, ref) {\n  const { onChange, ...other } = props;\n\n  return (\n    <NumericFormat\n      {...other}\n      getInputRef={ref}\n      onValueChange={(values) => {\n        onChange({\n          target: {\n            name: props.name,\n            value: values.value,\n          },\n        });\n      }}\n      allowNegative={false}\n      thousandSeparator\n      valueIsNumericString\n      //   prefix=\"$\"\n    />\n  );\n});\n","\n\nimport React, {\n  useState,\n  useRef,\n  useEffect,\n  forwardRef,\n  useImperativeHandle,\n} from \"react\";\n\nimport \"../style/datagridview.css\";\nimport { Pagination } from \"@mui/material\";\n\ninterface UpwardTablePropsType {\n  rows: Array<any>;\n  column: Array<any>;\n  width: number;\n  height: number;\n  dataReadOnly: boolean;\n  onSelectionChange?: (row: Array<any>, rowIndex: number) => void;\n  onKeyDown?: (row: Array<any>, key: string, rowIndex: number) => void;\n  isMultipleSelect?: boolean;\n  freeze?: boolean;\n  inputsearchselector?: string;\n  isRowSelectable?: boolean;\n  unSelectable?: (row: any) => boolean;\n  isLoading?: boolean,\n  onRightClick?: (rowSelected: any,event: any) => any\n}\n\nconst UpwardTable = forwardRef(\n  (\n    {\n      rows,\n      column,\n      width,\n      height,\n      dataReadOnly,\n      onSelectionChange = () => { },\n      isMultipleSelect = false,\n      freeze = false,\n      onKeyDown,\n      inputsearchselector = \".search-input-up-on-key-down\",\n      isRowSelectable = true,\n      unSelectable = () => false,\n      isLoading,\n      onRightClick\n    }: UpwardTablePropsType,\n    UpwardTableRef\n  ) => {\n    const [pages, setPages] = useState<Array<any>>([])\n    const [pageNumber, setPageNumber] = useState(0)\n    const onSelectionChangeRef = useRef(onSelectionChange);\n    const onKeyDownRef = useRef(onKeyDown);\n    const [columns, setColumns] = useState(column.filter((itm) => !itm.hide));\n    const [hoveredColumn, setHoveredColumn] = useState(null);\n    const [selectedRows, setSelectedRows] = useState<Array<number>>([0]);\n    const [lastSelectedRowIndex, setLastSelectedRowIndex] = useState(0);\n    const [selectedItems, setSelectedItems] = useState<Array<number>>([]);\n    const divRef = useRef<HTMLDivElement>(null);\n    const [_clickTimeout, _setClickTimeout] = useState(null);\n\n\n    useEffect(() => {\n      const _pages = formatArrayIntoChunks(rows, 100)\n      setPages(_pages)\n    }, [rows])\n\n    const startResize = (index: any, e: any) => {\n      e.preventDefault();\n      e.stopPropagation();\n\n      const startX = e.clientX;\n      const startWidth = columns[index].width;\n\n      const doDrag = (moveEvent: any) => {\n        const newWidth = startWidth + (moveEvent.clientX - startX);\n        const updatedColumns = [...columns];\n        updatedColumns[index].width = newWidth > 50 ? newWidth : 50; // Set minimum column width\n        setColumns(updatedColumns);\n      };\n\n      const stopDrag = () => {\n        document.removeEventListener(\"mousemove\", doDrag);\n        document.removeEventListener(\"mouseup\", stopDrag);\n      };\n\n      document.addEventListener(\"mousemove\", doDrag);\n      document.addEventListener(\"mouseup\", stopDrag);\n    };\n    const handleMouseEnter = (index: any) => {\n      setHoveredColumn(index); // Set the hovered column index\n    };\n    const handleMouseLeave = () => {\n      setHoveredColumn(null); // Reset hovered column index\n    };\n    const handleRowClick = (\n      rowIndex: any,\n      event: React.MouseEvent<HTMLDivElement, MouseEvent>\n    ) => {\n      function getIndexAndData(selectedRowData: Array<any>) {\n        const filterSelectrowData = selectedRowData.map((d, idx) => {\n          if (!unSelectable(d)) {\n            return { idx, data: d };\n          }\n          return null;\n        });\n        const removeNullValue = filterSelectrowData.filter((d) => d !== null);\n        const data = removeNullValue.map((itm: any) => itm.data);\n        const newSelectedRowsFiltered = removeNullValue.map(\n          (itm: any) => itm.idx\n        );\n        return { newSelectedRowsFiltered, data };\n      }\n\n      if (!isMultipleSelect) {\n        // Single selection mode\n        setSelectedRows([rowIndex]);\n      } else {\n        // Multiple selection mode\n        if (event.shiftKey && lastSelectedRowIndex !== null) {\n          // Shift + Click: Select range between last clicked row and current clicked row\n          const rangeStart = Math.min(lastSelectedRowIndex, rowIndex);\n          const rangeEnd = Math.max(lastSelectedRowIndex, rowIndex);\n          const newSelectedRows: Array<number> = [];\n          for (let i = rangeStart; i <= rangeEnd; i++) {\n            if (!selectedRows.includes(i)) {\n              newSelectedRows.push(i);\n            }\n          }\n\n          let selectedItemsParams: Array<number> = [\n            ...selectedItems,\n            ...newSelectedRows,\n          ];\n\n          setSelectedRows([...selectedRows, ...newSelectedRows]);\n          const selectedRowData = rows.filter((d, idx) =>\n            selectedItemsParams.includes(idx)\n          );\n          const { newSelectedRowsFiltered, data } =\n            getIndexAndData(selectedRowData);\n\n          setSelectedItems(newSelectedRowsFiltered);\n          // onSelectionChangeRef.current(data, rowIndex);\n        } else if (event.ctrlKey || event.metaKey) {\n          // Ctrl (or Cmd on macOS) + Click: Toggle row selection\n          if (selectedRows.includes(rowIndex) && !freeze) {\n            setSelectedRows(selectedRows.filter((i) => i !== rowIndex));\n            setSelectedItems((d) => {\n              d = d.filter((i) => i !== rowIndex);\n              return d;\n            });\n            let selectedItemsParams: Array<number> = selectedItems.filter(\n              (i) => i !== rowIndex\n            );\n            const selectedRowData = rows.filter((d, idx) =>\n              selectedItemsParams.includes(idx)\n            );\n\n            setSelectedItems(selectedItemsParams);\n            // onSelectionChangeRef.current(selectedRowData, rowIndex);\n          } else {\n            setSelectedRows([...selectedRows, rowIndex]);\n            setSelectedItems((d) => {\n              d.push(rowIndex);\n              return d;\n            });\n            let selectedItemsParams: Array<number> = [\n              ...selectedItems,\n              rowIndex,\n            ];\n\n            const selectedRowData = rows.filter((d, idx) =>\n              selectedItemsParams.includes(idx)\n            );\n\n            setSelectedItems(selectedItemsParams);\n            // onSelectionChangeRef.current(selectedRowData, rowIndex);\n          }\n        } else {\n          // Regular click in multiple selection mode: Single click to select a row\n          setSelectedRows([rowIndex]);\n        }\n      }\n      setLastSelectedRowIndex(rowIndex); // Update the last selected index\n    };\n    const handleRowDoubleClick = (\n      rowIndex: any,\n      event: React.MouseEvent<HTMLDivElement, MouseEvent>\n    ) => {\n      const row = rows[rowIndex];\n      if (unSelectable(row)) return;\n      if (!isRowSelectable) return;\n\n\n      let selectedItemsParams: Array<number> = [];\n      if (isMultipleSelect) {\n        selectedItemsParams = [...selectedItems, ...selectedRows];\n      } else {\n        selectedItemsParams = [rowIndex];\n      }\n\n\n      if (selectedItems.includes(rowIndex) && !freeze) {\n        selectedItemsParams = selectedItems.filter((i) => i !== rowIndex);\n        setSelectedItems(selectedItemsParams);\n        onSelectionChangeRef.current([], rowIndex);\n        return;\n      }\n\n      setSelectedItems(selectedItemsParams);\n      onSelectionChangeRef.current([row], rowIndex);\n    };\n    const handleKeyDown = (e: any) => {\n\n      if (e.key === \"ArrowDown\") {\n        e.preventDefault();\n        setSelectedRows((prevIndex: any) => {\n          if (prevIndex[prevIndex.length - 1] === null) return [0];\n          if (prevIndex[prevIndex.length - 1] >= rows.length - 1) {\n            return [rows.length - 1];\n          }\n          const newPrevIndex = prevIndex[prevIndex.length - 1] + 1;\n          const row = document.querySelector(`.row-${newPrevIndex}`);\n          row?.querySelector(\"input\")?.focus();\n\n          row?.scrollIntoView({ block: \"end\", behavior: \"smooth\" });\n          return [newPrevIndex];\n        });\n      } else if (e.key === \"ArrowUp\") {\n        e.preventDefault();\n\n        if (selectedRows[selectedRows.length - 1] === 0) {\n          const input = document.querySelector(\n            inputsearchselector\n          ) as HTMLInputElement;\n          if (input && input.tagName === \"INPUT\") {\n            input?.focus();\n          } else if (input && input.tagName === \"DIV\") {\n            const divInput = document.querySelector(\n              `${inputsearchselector} input`\n            ) as HTMLInputElement;\n\n            divInput?.focus();\n          }\n        }\n\n        setSelectedRows((prevIndex: any) => {\n          if (prevIndex[prevIndex.length - 1] === 0) return [0];\n          const newPrevIndex = prevIndex[prevIndex.length - 1] - 1;\n          const row = document.querySelector(`.row-${newPrevIndex}`);\n\n          row?.scrollIntoView({ block: \"end\", behavior: \"smooth\" });\n          row?.querySelector(\"input\")?.focus();\n          return [newPrevIndex];\n        });\n      }\n\n    };\n    const handleRowKeyDown = (e: any) => {\n      e.stopPropagation()\n\n      if (e.key === \"Enter\" || e.key === \"NumpadEnter\") {\n        e.preventDefault();\n        if (!isRowSelectable) return;\n\n        let selectedItemsParams: Array<number> = [];\n        const rowIndex = selectedRows[selectedRows.length - 1];\n        if (isMultipleSelect) {\n          selectedItemsParams = [...selectedItems, ...selectedRows];\n        } else {\n          selectedItemsParams = [rowIndex];\n        }\n        const row = rows[selectedItemsParams[selectedItemsParams.length - 1]];\n        if (unSelectable(row)) {\n          return;\n        }\n\n        if (selectedItems.includes(rowIndex) && !freeze) {\n          selectedItemsParams = selectedItems.filter((i) => i !== rowIndex);\n          setSelectedItems(selectedItemsParams);\n          onSelectionChangeRef.current([], rowIndex);\n          return;\n        }\n\n        setSelectedItems(selectedItemsParams);\n        onSelectionChangeRef.current([row], rowIndex);\n      } else if (e.key === \"Delete\" || e.key === \"Backspace\") {\n        if (!isRowSelectable) return;\n        const rowIndex = selectedRows[selectedRows.length - 1];\n\n        const selectedRowData = rows.filter((d, idx) =>\n          selectedRows.includes(idx)\n        );\n\n        if (onKeyDownRef?.current) {\n          onKeyDownRef?.current(selectedRowData, e.key, rowIndex);\n        }\n      }\n    }\n    useImperativeHandle(UpwardTableRef, () => ({\n      resetTableSelected: () => {\n        setSelectedRows([0]);\n        setLastSelectedRowIndex(0);\n        setSelectedItems([]);\n        if (rows.length > 0) {\n          const row = document.querySelector(`.row-${0}`);\n          row?.scrollIntoView({ block: \"end\", behavior: \"smooth\" });\n        }\n      },\n      getSelectedRows: () => {\n        return rows.filter((d, idx) => selectedItems.includes(idx));\n      },\n      setSelectRows: (selectRows: any) => {\n        setSelectedItems(selectRows)\n      }\n    }));\n\n    const handleRightClick = (event: any, rowIndex: number) => {\n      event.preventDefault();\n      const rowSelected = rows[rowIndex]\n      if (onRightClick) {\n        onRightClick(rowSelected,event)\n      }\n    };\n\n\n\n    return (\n      <div\n        style={{\n          display: \"flex\",\n          justifyContent: \"center\",\n        }}\n        onKeyDown={handleKeyDown}\n      >\n        <div>\n          <div className=\"table-frame-color\">\n            <div\n              style={{\n                display: \"flex\",\n                flexDirection: \"column\",\n                width: `${width - 10}px        `,\n                height: `${height - 135}px`,\n                minHeight: \"270px\"\n              }}\n              className=\"table-frame\"\n            >\n              <div className=\"table-panel\">\n                <div ref={divRef} className={`grid-container `} tabIndex={-1}>\n                  <div\n                    className=\"grid-row grid-header\"\n                    style={{\n                      position: \"sticky\",\n                      zIndex: \"10\",\n                      top: \"-1px\",\n                      background: \"white\",\n                    }}\n                  >\n                    {columns.map((col: any, index: number) => (\n                      <div\n                        key={index}\n                        className={`grid-cell header-cell ${hoveredColumn === index ? `highlight-column` : \"\"\n                          }`} // Add the class if hovered\n                        style={{ width: col.width, height: \"20px\", }}\n                      >\n                        <input\n                          style={{ fontWeight: \"bold\" }}\n                          defaultValue={col.headerName}\n                          readOnly\n                          onChange={(e) => { }}\n                        />\n                        <div\n                          className=\"resize-handle\"\n                          onMouseDown={(e) => startResize(index, e)}\n                          onMouseEnter={(e) => {\n                            e.preventDefault();\n                            handleMouseEnter(index);\n                          }} // On hover\n                          onMouseLeave={(e) => {\n                            e.preventDefault();\n                            handleMouseLeave();\n                          }} // On mouse leave\n                        />\n                      </div>\n                    ))}\n                  </div>\n                  {pages[pageNumber]?.map((row: any, rowIndex: any) => (\n                    <div\n                      className={`grid-row row-${rowIndex}`} // Highlight selected row\n                      key={rowIndex}\n                      onClick={(e) => handleRowClick(rowIndex, e)}\n                      onDoubleClick={(e) => {\n                        // e.stopPropagation()\n\n                        if (_clickTimeout) {\n                          clearTimeout(_clickTimeout);\n                          _setClickTimeout(null);\n                        }\n\n                        const timeoutId: any = setTimeout(() => {\n                          handleRowDoubleClick(rowIndex, e)\n                        }, 200);\n\n                        _setClickTimeout(timeoutId);\n\n\n\n                      }}\n                      onKeyDown={(e) => {\n\n                        // e.stopPropagation()\n\n                        if (_clickTimeout) {\n                          clearTimeout(_clickTimeout);\n                          _setClickTimeout(null);\n                        }\n\n                        const timeoutId: any = setTimeout(() => {\n                          handleRowKeyDown(e)\n                        }, 200);\n\n                        _setClickTimeout(timeoutId);\n\n\n                      }}\n                      onContextMenu={(e) => handleRightClick(e, rowIndex)}\n                    >\n                      {columns.map((col: any, colIndex: number) => (\n                        <div\n                          key={colIndex}\n                          style={{ width: col.width }}\n                          className={`grid-cell ${hoveredColumn === colIndex ? `highlight-column` : \"\"\n                            }`}\n                        >\n                          <input\n                            value={row[col.field]}\n                            onChange={(e) => { }}\n                            readOnly={dataReadOnly}\n                            className={`${selectedRows.includes(rowIndex)\n                              ? \"selected-row\"\n                              : \"\"\n                              } ${selectedItems.includes(rowIndex)\n                                ? \"selected-items\"\n                                : \"\"\n                              }\n                          ${col.type === \"number\" ? \"number\" : \"text\"}\n                          `}\n                          />\n                          <div\n                            className=\"resize-handle\"\n                            onMouseDown={(e) => {\n                              e.preventDefault();\n                              startResize(colIndex, e);\n                            }}\n                            onMouseEnter={(e) => {\n                              e.preventDefault();\n                              handleMouseEnter(colIndex);\n                            }} // On hover\n                            onMouseLeave={(e) => {\n                              e.preventDefault();\n                              handleMouseLeave();\n                            }} // On mouse leave\n                          />\n                        </div>\n                      ))}\n                    </div>\n                  ))}\n                </div>\n              </div>\n            </div>\n\n            {isLoading && <div className=\"table-loading\">\n              <div className=\"loader\"></div>\n            </div>}\n          </div>\n          <div className=\"table-panel-footer\" >\n            <div>Records : {rows.length}</div>\n            <div><Pagination count={pages.length} onChange={(e, value) => {\n              setPageNumber(value - 1)\n            }} />\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n);\n\nfunction formatArrayIntoChunks(arr: Array<any>, chunkSize = 100) {\n  let result = [];\n\n  for (let i = 0; i < arr.length; i += chunkSize) {\n    // Use slice to create chunks of 'chunkSize'\n    result.push(arr.slice(i, i + chunkSize));\n  }\n  return result;\n}\n\n\n\n\n\nexport { UpwardTable, };\n","import { useReducer, useContext, useState, useRef, useEffect } from \"react\";\nimport {\n  TextField,\n  Button,\n  FormControl,\n  InputAdornment,\n  IconButton,\n  InputLabel,\n  OutlinedInput,\n  Select,\n  MenuItem,\n  Modal,\n  Typography,\n  Box,\n  Checkbox,\n  FormControlLabel,\n} from \"@mui/material\";\nimport CustomDatePicker from \"../../../../components/DatePicker\";\nimport LoadingButton from \"@mui/lab/LoadingButton\";\nimport AddIcon from \"@mui/icons-material/Add\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport Swal from \"sweetalert2\";\nimport { AuthContext } from \"../../../../components/AuthContext\";\nimport RestartAltIcon from \"@mui/icons-material/RestartAlt\";\nimport { useMutation, useQuery, useQueryClient } from \"react-query\";\nimport { NumericFormatCustom } from \"../../../../components/NumberFormat\";\nimport useQueryModalTable from \"../../../../hooks/useQueryModalTable\";\nimport { wait } from \"../../../../lib/wait\";\nimport { GridRowSelectionModel } from \"@mui/x-data-grid\";\nimport NotInterestedIcon from \"@mui/icons-material/NotInterested\";\nimport { LocalizationProvider } from \"@mui/x-date-pickers/LocalizationProvider\";\nimport { AdapterDateFns } from \"@mui/x-date-pickers/AdapterDateFns\";\nimport { DatePicker } from \"@mui/x-date-pickers\";\nimport { deepOrange, grey } from \"@mui/material/colors\";\nimport formatDate from \"../../../../lib/formatDate\";\nimport Table from \"../../../../components/Table\";\nimport {\n  codeCondfirmationAlert,\n  saveCondfirmationAlert,\n} from \"../../../../lib/confirmationAlert\";\nimport ReactDOMServer from \"react-dom/server\";\nimport { flushSync } from \"react-dom\";\nimport SaveIcon from \"@mui/icons-material/Save\";\nimport { UpwardTable } from \"../../../../components/UpwardTable\";\n\nconst initialState = {\n  sub_refNo: \"\",\n  refNo: \"\",\n  dateEntry: new Date(),\n  explanation: \"\",\n  particulars: \"\",\n\n  code: \"\",\n  acctName: \"\",\n  subAcct: \"\",\n  subAcctName: \"\",\n  IDNo: \"\",\n  ClientName: \"\",\n  address: \"\",\n  credit: \"\",\n  debit: \"\",\n  checkNo: \"\",\n  checkDate: new Date(),\n  TC_Code: \"\",\n  TC_Desc: \"\",\n  remarks: \"\",\n  Payto: \"\",\n  vatType: \"NON-VAT\",\n  invoice: \"\",\n  BranchCode: \"HO\",\n  totalDebit: \"\",\n  totalCredit: \"\",\n  totalBalance: \"\",\n\n  jobAutoExp: false,\n  jobTransactionDate: new Date(),\n  jobType: \"\",\n  search: \"\",\n  cashMode: \"\",\n};\n\nexport const reducer = (state: any, action: any) => {\n  switch (action.type) {\n    case \"UPDATE_FIELD\":\n      return {\n        ...state,\n        [action.field]: action.value,\n      };\n    default:\n      return state;\n  }\n};\n\nconst selectedCollectionColumns = [\n  { field: \"code\", headerName: \"Code\", minWidth: 150 },\n  { field: \"acctName\", headerName: \"Account Name\", minWidth: 300 },\n  {\n    field: \"subAcctName\",\n    headerName: \"Sub Account\",\n    flex: 1,\n    minWidth: 170,\n  },\n  { field: \"ClientName\", headerName: \"Name\", flex: 1, minWidth: 300 },\n  { field: \"debit\", headerName: \"Debit\", minWidth: 80 },\n  { field: \"credit\", headerName: \"Credit\", minWidth: 100 },\n  { field: \"checkNo\", headerName: \"Check No\", minWidth: 80 },\n  { field: \"checkDate\", headerName: \"Check Date\", minWidth: 100 },\n  // hide\n  { field: \"TC_Code\", headerName: \"TC\", minWidth: 100 },\n  {\n    field: \"remarks\",\n    headerName: \"Remarks\",\n    flex: 1,\n    minWidth: 300,\n  },\n  { field: \"Payto\", headerName: \"Payto\", minWidth: 300 },\n  { field: \"vatType\", headerName: \"Vat Type\", minWidth: 100 },\n  { field: \"invoice\", headerName: \"Invoice\", flex: 1, minWidth: 200 },\n  { field: \"TempID\", headerName: \"TempId\", hide: true },\n  { field: \"IDNo\", headerName: \"I.D.\", flex: 1, minWidth: 300, hide: true },\n  {\n    field: \"BranchCode\",\n    headerName: \"BranchCode\",\n    flex: 1,\n    minWidth: 300,\n    hide: true,\n  },\n  {\n    field: \"addres\",\n    headerName: \"addres\",\n    hide: true,\n  },\n];\n\nfunction formatDebitCredit(arr: Array<any>) {\n  return arr.map((itm) => {\n    itm.debit = parseFloat(\n      itm.debit.toString().replace(/,/g, \"\")\n    ).toLocaleString(\"en-US\", {\n      minimumFractionDigits: 2,\n      maximumFractionDigits: 2,\n    });\n    itm.credit = parseFloat(\n      itm.credit.toString().replace(/,/g, \"\")\n    ).toLocaleString(\"en-US\", {\n      minimumFractionDigits: 2,\n      maximumFractionDigits: 2,\n    });\n    return itm;\n  });\n}\nexport default function CashDisbursement() {\n  const [modalVisible, setModalVisible] = useState(false);\n  const [position, setPosition] = useState({ x: 0, y: 0 });\n\n  const [rigthClickSelected, setRigthClickSelected] = useState<any>(null);\n\n\n  const refParent = useRef<HTMLDivElement>(null);\n  const { myAxios, user } = useContext(AuthContext);\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const [openJobs, setOpenJobs] = useState(false);\n  const [isPayToEnter, setIsPayToEnter] = useState(false);\n  const [hasSelected, setHasSelected] = useState(false);\n  const [editTransaction, setEditTransaction] = useState({\n    edit: false,\n    updateId: \"\",\n  });\n\n  const [PrintPayeeDetails, setPrintPayeeDetails] = useState([])\n  const [PrintTable, setPrintTable] = useState([])\n  const [cashDisbursement, setCashDisbursement] =\n    useState<GridRowSelectionModel>([]);\n\n\n  const queryClient = useQueryClient();\n  const datePickerRef = useRef<HTMLElement>(null);\n  const checkDatePickerRef = useRef<HTMLElement>(null);\n  const reloadIDButtonRef = useRef<HTMLButtonElement>(null);\n  const explanationInputRef = useRef<HTMLInputElement>(null);\n  const particularsInputRef = useRef<HTMLInputElement>(null);\n\n  const idInputRef = useRef<HTMLInputElement>(null);\n  const idInputRefPayTo = useRef<HTMLInputElement>(null);\n  const vatRef = useRef<HTMLInputElement>(null);\n  const debitInputRef = useRef<HTMLInputElement>(null);\n  const tcInputRef = useRef<HTMLInputElement>(null);\n\n  const chartAccountSearchInput = useRef<HTMLInputElement>(null);\n  const IdsSearchInput = useRef<HTMLInputElement>(null);\n  const codeInputRef = useRef<HTMLInputElement>(null);\n  const table = useRef<any>(null);\n\n\n  const dateRef = useRef<HTMLInputElement>(null)\n  const accountNameRef = useRef<HTMLInputElement>(null)\n  const subAccountRef = useRef<HTMLInputElement>(null)\n  const creditRef = useRef<HTMLInputElement>(null)\n  const checkNoRef = useRef<HTMLInputElement>(null)\n  const checkDateRef = useRef<HTMLInputElement>(null)\n  const tcDateRef = useRef<HTMLInputElement>(null)\n  const paytoRef = useRef<HTMLInputElement>(null)\n  const invoiceRef = useRef<HTMLInputElement>(null)\n\n\n  const {\n    mutate: mutateOnPrint,\n    isLoading: isLoadingOnPrint,\n  } = useMutation({\n    mutationKey: \"get-selected-search-general-journal\",\n    mutationFn: async (variable: any) =>\n      await myAxios.post(\n        \"/task/accounting/cash-disbursement/print\",\n        variable,\n        {\n          headers: {\n            Authorization: `Bearer ${user?.accessToken}`,\n          },\n        }\n      ),\n    onSuccess: (res) => {\n      const response = res as any;\n      console.log(response)\n      flushSync(() => {\n        localStorage.removeItem(\"printString\");\n        localStorage.setItem(\"dataString\", JSON.stringify(response.data.print.PrintTable));\n        localStorage.setItem(\"paper-width\", \"8.5in\");\n        localStorage.setItem(\"paper-height\", \"11in\");\n        localStorage.setItem(\"module\", \"cash-disbursement\");\n        localStorage.setItem(\"state\", JSON.stringify(response.data.print.PrintPayeeDetails));\n        localStorage.setItem(\n          \"column\",\n          JSON.stringify([\n            { datakey: \"Account\", header: \"ACCOUNT\", width: \"200px\" },\n            { datakey: \"Identity\", header: \"IDENTITY\", width: \"277px\" },\n            { datakey: \"Debit\", header: \"DEBIT\", width: \"100px\" },\n            { datakey: \"Credit\", header: \"CREDIT\", width: \"100px\" },\n          ])\n        );\n        localStorage.setItem(\n          \"title\",\n          user?.department === \"UMIS\"\n            ? \"UPWARD MANAGEMENT INSURANCE SERVICES\\n\"\n            : \"UPWARD CONSULTANCY SERVICES AND MANAGEMENT INC.\\n\"\n        );\n      });\n      window.open(\"/dashboard/print\", \"_blank\");\n\n\n\n    },\n  });\n\n\n  const {\n    isLoading: loadingGeneralJournalGenerator,\n    refetch: refetchGeneralJournalGenerator,\n  } = useQuery({\n    queryKey: \"general-journal-id-generator\",\n    queryFn: async () =>\n      await myAxios.get(`/task/accounting/cash-disbursement/generate-id`, {\n        headers: {\n          Authorization: `Bearer ${user?.accessToken}`,\n        },\n      }),\n    refetchOnWindowFocus: false,\n    onSuccess: (data) => {\n      const response = data as any;\n      dispatch({\n        type: \"UPDATE_FIELD\",\n        field: \"refNo\",\n        value: response.data.generatedId[0].id,\n      });\n      dispatch({\n        type: \"UPDATE_FIELD\",\n        field: \"sub_refNo\",\n        value: response.data.generatedId[0].id,\n      });\n    },\n  });\n\n  const {\n    mutate: addCashDisbursementMutate,\n    isLoading: loadingCashDisbursementMutate,\n  } = useMutation({\n    mutationKey: \"add-cash-disbursement\",\n    mutationFn: async (variable: any) =>\n      await myAxios.post(\n        \"/task/accounting/cash-disbursement/add-cash-disbursement\",\n        variable,\n        {\n          headers: {\n            Authorization: `Bearer ${user?.accessToken}`,\n          },\n        }\n      ),\n    onSuccess: (res) => {\n      const response = res as any;\n      if (response.data.success) {\n        queryClient.invalidateQueries(\"search-general-journal\");\n        setHasSelected(false);\n        setNewStateValue(dispatch, initialState);\n        refetchGeneralJournalGenerator();\n        setCashDisbursement([]);\n        setEditTransaction({\n          edit: false,\n          updateId: \"\",\n        });\n\n        return Swal.fire({\n          position: \"center\",\n          icon: \"success\",\n          title: response.data.message,\n          timer: 1500,\n        });\n      }\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: response.data.message,\n        timer: 1500,\n      });\n    },\n  });\n\n  const { mutate: mutateJob, isLoading: isLoadingJob } = useMutation({\n    mutationKey: \"jobs\",\n    mutationFn: async (variable: any) =>\n      await myAxios.post(\"/task/accounting/general-journal/jobs\", variable, {\n        headers: {\n          Authorization: `Bearer ${user?.accessToken}`,\n        },\n      }),\n    onSuccess: (res) => {\n      const response = res as any;\n      setCashDisbursement([]);\n      setCashDisbursement(response.data.jobs);\n      setOpenJobs(false);\n    },\n  });\n\n  const {\n    mutate: mutateVoidCashDisbursement,\n    isLoading: loadingVoidCashDisbursement,\n  } = useMutation({\n    mutationKey: \"void-cash-disbursement\",\n    mutationFn: async (variable: any) =>\n      await myAxios.post(\n        \"/task/accounting/cash-disbursement/void-cash-disbursement\",\n        variable,\n        {\n          headers: {\n            Authorization: `Bearer ${user?.accessToken}`,\n          },\n        }\n      ),\n    onSuccess: (res) => {\n      const response = res as any;\n      if (response.data.success) {\n        queryClient.invalidateQueries(\"search-general-journal\");\n        setHasSelected(false);\n        setNewStateValue(dispatch, initialState);\n        refetchGeneralJournalGenerator();\n        setCashDisbursement([]);\n        setEditTransaction({\n          edit: false,\n          updateId: \"\",\n        });\n        return Swal.fire({\n          position: \"center\",\n          icon: \"success\",\n          title: response.data.message,\n          timer: 1500,\n        });\n      }\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: response.data.message,\n        timer: 1500,\n      });\n    },\n  });\n\n  const {\n    mutate: getSearchSelectedCashDisbursement,\n    isLoading: loadingGetSearchSelectedCashDisbursement,\n  } = useMutation({\n    mutationKey: \"get-selected-search-general-journal\",\n    mutationFn: async (variable: any) =>\n      await myAxios.post(\n        \"/task/accounting/cash-disbursement/get-selected-search-cash-disbursement\",\n        variable,\n        {\n          headers: {\n            Authorization: `Bearer ${user?.accessToken}`,\n          },\n        }\n      ),\n    onSuccess: (res) => {\n      const response = res as any;\n      const selected = response.data.selectedCashDisbursement;\n      const { explanation, dateEntry, refNo, particulars } = selected[0];\n      dispatch({\n        type: \"UPDATE_FIELD\",\n        field: \"sub_refNo\",\n        value: refNo,\n      });\n      dispatch({\n        type: \"UPDATE_FIELD\",\n        field: \"refNo\",\n        value: refNo,\n      });\n      dispatch({\n        type: \"UPDATE_FIELD\",\n        field: \"dateEntry\",\n        value: dateEntry,\n      });\n      dispatch({\n        type: \"UPDATE_FIELD\",\n        field: \"explanation\",\n        value: explanation,\n      });\n      dispatch({\n        type: \"UPDATE_FIELD\",\n        field: \"particulars\",\n        value: particulars,\n      });\n      setCashDisbursement(selected);\n\n\n\n      setHasSelected(true);\n    },\n  });\n\n  const {\n    ModalComponent: ModalSearchCashDisbursement,\n    openModal: openSearchCashDisbursement,\n    isLoading: isLoadingSearchCashDisbursement,\n    closeModal: closeSearchCashDisbursement,\n  } = useQueryModalTable({\n    link: {\n      url: \"/task/accounting/cash-disbursement/search-cash-disbursement\",\n      queryUrlName: \"searchCashDisbursement\",\n    },\n    columns: [\n      { field: \"Date_Entry\", headerName: \"Date\", width: 130 },\n      { field: \"Source_No\", headerName: \"Ref No.\", width: 250 },\n      {\n        field: \"Explanation\",\n        headerName: \"Explanation\",\n        flex: 1,\n      },\n    ],\n    queryKey: \"search-cash-disbursement\",\n    uniqueId: \"Source_No\",\n    responseDataKey: \"search\",\n    onSelected: (selectedRowData, data) => {\n      getSearchSelectedCashDisbursement({\n        Source_No: selectedRowData[0].Source_No,\n      });\n      handleInputChange({\n        target: { value: \"edit\", name: \"cashMode\" },\n      });\n      setCashDisbursement([]);\n      setEditTransaction({\n        edit: false,\n        updateId: \"\",\n      });\n\n      closeSearchCashDisbursement();\n    },\n    onCloseFunction: (value: any) => {\n      dispatch({ type: \"UPDATE_FIELD\", field: \"search\", value });\n    },\n    searchRef: chartAccountSearchInput,\n  });\n\n  const {\n    ModalComponent: ModalChartAccountSearch,\n    openModal: openChartAccountSearch,\n    isLoading: isLoadingChartAccountSearch,\n    closeModal: closeChartAccountSearch,\n  } = useQueryModalTable({\n    link: {\n      url: \"/task/accounting/general-journal/get-chart-account\",\n      queryUrlName: \"chartAccountSearch\",\n    },\n    columns: [\n      { field: \"Acct_Code\", headerName: \"Account Code\", width: 130 },\n      { field: \"Acct_Title\", headerName: \"Account Title.\", width: 250 },\n      {\n        field: \"Short\",\n        headerName: \"Short\",\n        flex: 1,\n      },\n    ],\n    queryKey: \"get-chart-account\",\n    uniqueId: \"Acct_Code\",\n    responseDataKey: \"getChartOfAccount\",\n    onSelected: (selectedRowData, data) => {\n      dispatch({\n        type: \"UPDATE_FIELD\",\n        field: \"code\",\n        value: selectedRowData[0].Acct_Code,\n      });\n      dispatch({\n        type: \"UPDATE_FIELD\",\n        field: \"acctName\",\n        value: selectedRowData[0].Acct_Title,\n      });\n      closeChartAccountSearch();\n\n      setTimeout(() => {\n        idInputRef.current?.focus();\n      }, 250);\n    },\n    searchRef: chartAccountSearchInput,\n  });\n\n  const {\n    ModalComponent: ModalPolicyIdClientIdRefId,\n    openModal: openPolicyIdClientIdRefId,\n    isLoading: isLoadingPolicyIdClientIdRefId,\n    closeModal: closePolicyIdClientIdRefId,\n  } = useQueryModalTable({\n    link: {\n      url: \"/task/accounting/search-pdc-policy-id\",\n      queryUrlName: \"searchPdcPolicyIds\",\n    },\n    columns: [\n      { field: \"Type\", headerName: \"Type\", width: 130 },\n      { field: \"IDNo\", headerName: \"ID No.\", width: 200 },\n      {\n        field: \"Name\",\n        headerName: \"Name\",\n        flex: 1,\n      },\n      {\n        field: \"ID\",\n        headerName: \"ID\",\n        hide: true,\n      },\n    ],\n    queryKey: \"get-policyId-ClientId-RefId\",\n    uniqueId: \"IDNo\",\n    responseDataKey: \"clientsId\",\n    onSelected: (selectedRowData) => {\n      if (isPayToEnter) {\n        dispatch({\n          type: \"UPDATE_FIELD\",\n          field: \"Payto\",\n          value: selectedRowData[0].Name,\n        });\n\n        closePolicyIdClientIdRefId();\n        setTimeout(() => {\n          vatRef.current?.focus();\n        }, 200);\n      } else {\n        dispatch({\n          type: \"UPDATE_FIELD\",\n          field: \"ClientName\",\n          value: selectedRowData[0].Name,\n        });\n        dispatch({\n          type: \"UPDATE_FIELD\",\n          field: \"IDNo\",\n          value: selectedRowData[0].IDNo,\n        });\n        dispatch({\n          type: \"UPDATE_FIELD\",\n          field: \"subAcct\",\n          value: selectedRowData[0].sub_account,\n        });\n        dispatch({\n          type: \"UPDATE_FIELD\",\n          field: \"subAcctName\",\n          value: selectedRowData[0].ShortName,\n        });\n        dispatch({\n          type: \"UPDATE_FIELD\",\n          field: \"address\",\n          value: selectedRowData[0].address,\n        });\n        closePolicyIdClientIdRefId();\n        setTimeout(() => {\n          debitInputRef.current?.focus();\n        }, 200);\n      }\n    },\n    searchRef: IdsSearchInput,\n  });\n\n  const {\n    ModalComponent: ModalTransactionAccount,\n    openModal: openTransactionAccount,\n    isLoading: isLoadingTransactionAccount,\n    closeModal: closeTransactionAccount,\n  } = useQueryModalTable({\n    link: {\n      url: \"/task/accounting/general-journal/get-transaction-account\",\n      queryUrlName: \"transactionCodeSearch\",\n    },\n    columns: [\n      { field: \"Code\", headerName: \"Code\", width: 130 },\n      {\n        field: \"Description\",\n        headerName: \"Description\",\n        flex: 1,\n      },\n    ],\n    queryKey: \"get-transaction-account\",\n    uniqueId: \"Code\",\n    responseDataKey: \"getTransactionAccount\",\n    onSelected: (selectedRowData) => {\n      dispatch({\n        type: \"UPDATE_FIELD\",\n        field: \"TC_Code\",\n        value: selectedRowData[0].Code,\n      });\n      dispatch({\n        type: \"UPDATE_FIELD\",\n        field: \"TC_Desc\",\n        value: selectedRowData[0].Description,\n      });\n      closeTransactionAccount();\n      setTimeout(() => {\n        tcInputRef.current?.focus();\n      }, 250);\n    },\n    searchRef: IdsSearchInput,\n  });\n\n  useEffect(() => {\n    const debit = cashDisbursement.reduce((a: number, item: any) => {\n      return a + parseFloat(item.debit.replace(/,/g, \"\"));\n    }, 0);\n    const credit = cashDisbursement.reduce((a: number, item: any) => {\n      return a + parseFloat(item.credit.replace(/,/g, \"\"));\n    }, 0);\n    dispatch({\n      type: \"UPDATE_FIELD\",\n      field: \"totalDebit\",\n      value: debit.toFixed(2),\n    });\n    dispatch({\n      type: \"UPDATE_FIELD\",\n      field: \"totalCredit\",\n      value: credit.toFixed(2),\n    });\n    dispatch({\n      type: \"UPDATE_FIELD\",\n      field: \"totalBalance\",\n      value: (debit - credit).toFixed(2),\n    });\n  }, [cashDisbursement]);\n\n  const handleInputChange = (e: any) => {\n    const { name, value } = e.target;\n    dispatch({ type: \"UPDATE_FIELD\", field: name, value });\n  };\n\n  function handleOnSave() {\n    if (state.refNo === \"\") {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: \"Please provide reference number!\",\n        timer: 1500,\n      });\n    }\n    if (state.explanation === \"\") {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: \"Please provide explanation!\",\n        timer: 1500,\n      }).then(() => {\n        wait(300).then(() => {\n          explanationInputRef.current?.focus();\n        });\n      });\n    }\n    if (\n      (state.totalDebit === \"\" && state.totalCredit === \"\") ||\n      (state.totalDebit === \"0.00\" && state.totalCredit === \"0.00\")\n    ) {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title:\n          \"Total Debit and Credit amount must not be zero(0), please double check the entries\",\n        timer: 1500,\n      }).then(() => {\n        wait(300).then(() => { });\n      });\n    }\n    if (state.totalDebit !== state.totalCredit) {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title:\n          \"Total Debit and Credit amount must be balance, please double check the entries\",\n        timer: 1500,\n      }).then(() => {\n        wait(300).then(() => { });\n      });\n    }\n    if (state.cashMode === \"edit\") {\n      codeCondfirmationAlert({\n        isUpdate: true,\n        cb: (userCodeConfirmation) => {\n          addCashDisbursementMutate({\n            hasSelected,\n            refNo: state.refNo,\n            dateEntry: state.dateEntry,\n            explanation: state.explanation,\n            particulars: state.particulars,\n            cashDisbursement,\n            userCodeConfirmation,\n          });\n        },\n      });\n    } else {\n      saveCondfirmationAlert({\n        isConfirm: () => {\n          addCashDisbursementMutate({\n            hasSelected,\n            refNo: state.refNo,\n            dateEntry: state.dateEntry,\n            explanation: state.explanation,\n            particulars: state.particulars,\n            cashDisbursement,\n          });\n        },\n      });\n    }\n  }\n\n  function handleVoid() {\n    codeCondfirmationAlert({\n      isUpdate: false,\n      text: `Are you sure you want to void ${state.refNo}`,\n      cb: (userCodeConfirmation) => {\n        mutateVoidCashDisbursement({\n          refNo: state.refNo,\n          dateEntry: state.dateEntry,\n          userCodeConfirmation,\n        });\n      },\n    });\n  }\n\n  function handleRowSave() {\n    if (isNaN(parseFloat(state.credit))) {\n      state.credit = \"0.00\";\n    }\n    if (isNaN(parseFloat(state.debit))) {\n      state.debit = \"0.00\";\n    }\n    if (state.code === \"\" || state.acctName === \"\") {\n      return openChartAccountSearch(state.code);\n    }\n\n    if (state.subAcctName === \"\" || state.ClientName === \"\") {\n      return openPolicyIdClientIdRefId(state.ClientName);\n    }\n    if (state.credit === state.debit) {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: \"The values for credit and debit must be different\",\n        timer: 1500,\n      });\n    }\n    if (state.code === \"1.01.10\" && state.checkNo === \"\") {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: \"Check No. is Required!\",\n        timer: 1500,\n      });\n    }\n\n    if (state.TC_Code === \"\") {\n      return openTransactionAccount(state.TC_Code);\n    }\n\n    if (state.Payto === \"\" && state.code === \"1.01.10\") {\n      setIsPayToEnter(true);\n      return openPolicyIdClientIdRefId(state.Payto);\n    }\n\n    if (state.code.length >= 200) {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: \"Code is too long!\",\n        timer: 1500,\n      });\n    }\n    if (state.ClientName.length >= 200) {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: \"Client Name is too long!\",\n        timer: 1500,\n      });\n    }\n    if (state.debit.length >= 200) {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: \"Debit is too long!\",\n        timer: 1500,\n      });\n    }\n    if (state.credit.length >= 200) {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: \"Credit is too long!\",\n        timer: 1500,\n      });\n    }\n    if (state.checkNo.length >= 200) {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: \"Check No is too long!\",\n        timer: 1500,\n      });\n    }\n    if (state.TC_Code.length >= 200) {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: \"TC is too long!\",\n        timer: 1500,\n      });\n    }\n    if (state.Payto.length >= 200) {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: \"Pay to is too long!\",\n        timer: 1500,\n      });\n    }\n    if (state.invoice.length >= 200) {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: \"Invoice is too long!\",\n        timer: 1500,\n      });\n    }\n\n    function generateID(array: Array<any>) {\n      const lastItem = array.length ? array[array.length - 1].TempID : \"000\";\n      const numericPart = (parseInt(lastItem.toString().match(/\\d+/)[0]) + 1)\n        .toString()\n        .padStart(3, \"0\");\n      return numericPart;\n    }\n\n    Swal.fire({\n      title: editTransaction.edit\n        ? `Are you sure you want to update row?`\n        : `Are you sure you want to add new row?`,\n      text: \"You won't be able to revert this!\",\n      icon: \"warning\",\n      showCancelButton: true,\n      confirmButtonColor: \"#3085d6\",\n      cancelButtonColor: \"#d33\",\n      confirmButtonText: editTransaction.edit\n        ? \"Yes, update it!\"\n        : \"Yes Add it\",\n    }).then((result) => {\n      if (result.isConfirmed) {\n        setCashDisbursement((d: any) => {\n          if (state.code === \"1.01.10\") {\n            state.checkDate = formatDate(state.checkDate);\n          } else {\n            state.checkDate = \"\";\n          }\n\n          if (state.vatType === \"VAT\" && state.code !== \"1.06.02\") {\n            let taxableamt;\n\n            if (parseFloat(state.debit.replace(/,/g, \"\")) !== 0) {\n              taxableamt = parseFloat(state.debit.replace(/,/g, \"\")) / 1.12;\n              state.debit = taxableamt.toLocaleString(\"en-US\", {\n                minimumFractionDigits: 2,\n                maximumFractionDigits: 2,\n              });\n            } else {\n              taxableamt = parseFloat(state.credit.replace(/,/g, \"\")) / 1.12;\n              state.credit = taxableamt.toLocaleString(\"en-US\", {\n                minimumFractionDigits: 2,\n                maximumFractionDigits: 2,\n              });\n            }\n\n            if (editTransaction.edit) {\n              d = d.map((item: any) => {\n                if (editTransaction.updateId === item.TempID) {\n                  item = {\n                    ...item,\n                    ...state,\n                  };\n                }\n                return item;\n              });\n            } else {\n              d = [\n                ...d,\n                {\n                  ...state,\n                  TempID: generateID(d),\n                },\n              ];\n            }\n\n            let inputtax = taxableamt * 0.12;\n\n            if (parseFloat(state.debit.replace(/,/g, \"\")) !== 0) {\n              state.debit = inputtax.toLocaleString(\"en-US\", {\n                minimumFractionDigits: 2,\n                maximumFractionDigits: 2,\n              });\n            } else {\n              state.credit = inputtax.toLocaleString(\"en-US\", {\n                minimumFractionDigits: 2,\n                maximumFractionDigits: 2,\n              });\n            }\n            d = [\n              ...d,\n              {\n                ...state,\n                code: \"1.06.02\",\n                acctName: \"Input Tax\",\n                TempID: generateID(d),\n              },\n            ];\n          } else {\n            const credit = parseFloat(\n              state.credit.replace(/,/g, \"\")\n            ).toLocaleString(\"en-US\", {\n              minimumFractionDigits: 2,\n              maximumFractionDigits: 2,\n            });\n            const debit = parseFloat(\n              state.debit.replace(/,/g, \"\")\n            ).toLocaleString(\"en-US\", {\n              minimumFractionDigits: 2,\n              maximumFractionDigits: 2,\n            });\n\n            state.credit = credit;\n            state.debit = debit;\n\n            if (editTransaction.edit) {\n              const newD = d.map((item: any) => {\n                if (editTransaction.updateId === item.TempID) {\n                  item = {\n                    ...item,\n                    ...state,\n                  };\n                }\n                return item;\n              });\n              return newD;\n            }\n            d = [\n              ...d,\n              {\n                ...state,\n                TempID: generateID(d),\n              },\n            ];\n          }\n\n          return d;\n        });\n\n        const resetValue = {\n          code: \"\",\n          acctName: \"\",\n          subAcct: \"\",\n          subAcctName: \"\",\n          IDNo: \"\",\n          ClientName: \"\",\n          credit: \"\",\n          debit: \"\",\n          TC_Code: \"\",\n          TC_Desc: \"\",\n          remarks: \"\",\n          vatType: \"NON-VAT\",\n          invoice: \"\",\n          address: \"\",\n          checkNo: \"\",\n          checkDate: new Date(),\n        };\n        setNewStateValue(dispatch, { ...state, ...resetValue });\n        setEditTransaction({ edit: false, updateId: \"\" });\n        wait(300).then(() => {\n          codeInputRef.current?.focus();\n        });\n      }\n    });\n  }\n\n  function handleClickPrint() {\n    mutateOnPrint({ Source_No: state.refNo })\n  }\n  function handleClickPrintCheck() {\n    setRigthClickSelected(null)\n    if (rigthClickSelected) {\n      localStorage.removeItem(\"printString\");\n      localStorage.setItem(\"paper-width\", \"8.27in\");\n      localStorage.setItem(\"paper-height\", \"11.69in\");\n      localStorage.setItem(\"module\", \"cash-disbursement-check\");\n      localStorage.setItem(\"state\", JSON.stringify(rigthClickSelected));\n      localStorage.setItem(\"dataString\", JSON.stringify([]));\n      localStorage.setItem(\"column\",JSON.stringify([]));\n      localStorage.setItem( \"title\", \"\");\n    }\n    window.open(\"/dashboard/print\", \"_blank\");\n  }\n  // mutateOnPrint({ Source_No: state.refNo })\n  const isDisableField = state.cashMode === \"\";\n  const width = window.innerWidth - 50;\n  const height = window.innerHeight - 145;\n\n  const closeModal = () => {\n    setModalVisible(false);\n  };\n\n\n  return (\n    <div\n      onClick={() => {\n        closeModal()\n        if (rigthClickSelected) {\n          setRigthClickSelected(null)\n        }\n      }}\n      style={{\n        display: \"flex\",\n        flexDirection: \"column\",\n        width: \"100%\",\n        height: \"100%\",\n        flex: 1,\n      }}\n    >\n      <div\n        style={{\n          display: \"flex\",\n          alignItems: \"center\",\n          columnGap: \"5px\",\n        }}\n      >\n        <div\n          style={{\n            display: \"flex\",\n            alignItems: \"center\",\n            columnGap: \"5px\",\n          }}\n        >\n          {isLoadingSearchCashDisbursement ? (\n            <LoadingButton loading={isLoadingSearchCashDisbursement} />\n          ) : (\n            <TextField\n              label=\"Search\"\n              size=\"small\"\n              name=\"search\"\n              value={state.search}\n              onChange={handleInputChange}\n              onKeyDown={(e) => {\n                if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n                  e.preventDefault();\n                  return openSearchCashDisbursement(\n                    (e.target as HTMLInputElement).value\n                  );\n                }\n              }}\n              InputProps={{\n                style: { height: \"27px\", fontSize: \"14px\" },\n              }}\n              sx={{\n                width: \"300px\",\n                height: \"27px\",\n                \".MuiFormLabel-root\": { fontSize: \"14px\" },\n                \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n              }}\n            />\n          )}\n\n          {state.cashMode === \"\" && (\n            <Button\n              sx={{\n                height: \"30px\",\n                fontSize: \"11px\",\n              }}\n              variant=\"contained\"\n              startIcon={<AddIcon sx={{ width: 15, height: 15 }} />}\n              id=\"entry-header-save-button\"\n              onClick={() => {\n                handleInputChange({\n                  target: { value: \"add\", name: \"cashMode\" },\n                });\n              }}\n              color=\"primary\"\n            >\n              New\n            </Button>\n          )}\n          <LoadingButton\n            sx={{\n              height: \"30px\",\n              fontSize: \"11px\",\n            }}\n            loading={loadingCashDisbursementMutate}\n            disabled={state.cashMode === \"\"}\n            onClick={handleOnSave}\n            color=\"success\"\n            variant=\"contained\"\n          >\n            Save\n          </LoadingButton>\n          {state.cashMode !== \"\" && (\n            <LoadingButton\n              sx={{\n                height: \"30px\",\n                fontSize: \"11px\",\n              }}\n              variant=\"contained\"\n              startIcon={<CloseIcon sx={{ width: 15, height: 15 }} />}\n              color=\"error\"\n              onClick={() => {\n                Swal.fire({\n                  title: \"Are you sure?\",\n                  text: \"You won't be able to revert this!\",\n                  icon: \"warning\",\n                  showCancelButton: true,\n                  confirmButtonColor: \"#3085d6\",\n                  cancelButtonColor: \"#d33\",\n                  confirmButtonText: \"Yes, cancel it!\",\n                }).then((result) => {\n                  if (result.isConfirmed) {\n                    refetchGeneralJournalGenerator();\n                    handleInputChange({\n                      target: { value: \"\", name: \"cashMode\" },\n                    });\n                    setNewStateValue(dispatch, initialState);\n                    setCashDisbursement([]);\n                    // setSearchSelected(false);\n                    setEditTransaction({\n                      edit: false,\n                      updateId: \"\",\n                    });\n                  }\n                });\n              }}\n              disabled={state.cashMode === \"\"}\n            >\n              Cancel\n            </LoadingButton>\n          )}\n          <LoadingButton\n            sx={{\n              height: \"30px\",\n              fontSize: \"11px\",\n              background: deepOrange[500],\n              \":hover\": {\n                background: deepOrange[600],\n              },\n            }}\n            onClick={handleVoid}\n            loading={loadingVoidCashDisbursement}\n            disabled={state.cashMode !== \"edit\"}\n            variant=\"contained\"\n            startIcon={<NotInterestedIcon sx={{ width: 20, height: 20 }} />}\n          >\n            Void\n          </LoadingButton>\n          <LoadingButton\n            loading={isLoadingOnPrint}\n            disabled={state.cashMode !== \"edit\"}\n            id=\"basic-button\"\n            aria-haspopup=\"true\"\n            onClick={handleClickPrint}\n            sx={{\n              height: \"30px\",\n              fontSize: \"11px\",\n              color: \"white\",\n              backgroundColor: grey[600],\n              \"&:hover\": {\n                backgroundColor: grey[700],\n              },\n            }}\n          >\n            Print\n          </LoadingButton>\n        </div>\n        <div\n          style={{\n            fontSize: \"13px\",\n            border: \"1px solid #d4d4d8\",\n            width: \"100%\",\n            display: \"flex\",\n            columnGap: \"50px\",\n            height: \"30px\",\n            alignItems: \"center\",\n            justifyContent: \"center\",\n          }}\n        >\n          <p style={{ margin: 0, padding: 0, color: \"black\" }}>\n            <span style={{ fontSize: \"12px\" }}>Total Rows:</span> <strong>{cashDisbursement.length}</strong>\n          </p>\n          <p style={{ margin: 0, padding: 0, color: \"black\" }}>\n            <span style={{ fontSize: \"12px\" }}>Total Debit:</span> <strong>{state.totalDebit}</strong>\n          </p>\n          <p style={{ margin: 0, padding: 0, color: \"black\" }}>\n            <span style={{ fontSize: \"12px\" }}>Total Credit:</span> <strong>{state.totalCredit}</strong>\n          </p>\n          <p style={{ margin: 0, padding: 0, color: \"black\" }}>\n            <span style={{ fontSize: \"12px\" }}>Balance:</span>{\" \"}\n            <strong\n              style={{\n                color:\n                  parseFloat(state.totalBalance.replace(/,/g, \"\")) > 0\n                    ? \"red\"\n                    : \"black\",\n              }}\n            >\n              {state.totalBalance}\n            </strong>\n          </p>\n        </div>\n      </div>\n      <fieldset\n        style={{\n          border: \"1px solid #cbd5e1\",\n          borderRadius: \"5px\",\n          position: \"relative\",\n          width: \"100%\",\n          height: \"auto\",\n          display: \"flex\",\n          marginTop: \"10px\",\n          gap: \"10px\",\n          padding: \"15px\",\n        }}\n      >\n        {loadingGeneralJournalGenerator ? (\n          <LoadingButton loading={loadingGeneralJournalGenerator} />\n        ) : (\n          <FormControl\n            variant=\"outlined\"\n            size=\"small\"\n            disabled={isDisableField}\n            sx={{\n              width: \"140px\",\n              \".MuiFormLabel-root\": {\n                fontSize: \"14px\",\n                background: \"white\",\n                zIndex: 99,\n                padding: \"0 3px\",\n              },\n              \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n            }}\n          >\n            <InputLabel htmlFor=\"return-check-id-field\">\n              Reference CV-\n            </InputLabel>\n            <OutlinedInput\n              sx={{\n                height: \"27px\",\n                fontSize: \"14px\",\n              }}\n              disabled={isDisableField}\n              fullWidth\n              label=\"Reference CV-\"\n              name=\"refNo\"\n              value={state.refNo}\n              onChange={handleInputChange}\n              onKeyDown={(e) => {\n                if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n                  e.preventDefault();\n                  dateRef.current?.focus()\n                  // return handleOnSave();\n                }\n              }}\n              readOnly={user?.department !== \"UCSMI\"}\n              id=\"return-check-id-field\"\n              endAdornment={\n                <InputAdornment position=\"end\">\n                  <IconButton\n                    ref={reloadIDButtonRef}\n                    disabled={isDisableField}\n                    aria-label=\"search-client\"\n                    color=\"secondary\"\n                    edge=\"end\"\n                    onClick={() => {\n                      refetchGeneralJournalGenerator();\n                    }}\n                  >\n                    <RestartAltIcon />\n                  </IconButton>\n                </InputAdornment>\n              }\n            />\n          </FormControl>\n        )}\n        <CustomDatePicker\n          fullWidth={false}\n          disabled={isDisableField}\n          label=\"Date\"\n          onChange={(value: any) => {\n            dispatch({\n              type: \"UPDATE_FIELD\",\n              field: \"dateEntry\",\n              value: value,\n            });\n          }}\n          value={new Date(state.dateEntry)}\n          inputRef={dateRef}\n          onKeyDown={(e: any) => {\n            if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n              // const timeout = setTimeout(() => {\n              //   datePickerRef.current?.querySelector(\"button\")?.click();\n              //   clearTimeout(timeout);\n              // }, 150);\n              explanationInputRef.current?.focus()\n            }\n          }}\n          datePickerRef={datePickerRef}\n          textField={{\n            InputLabelProps: {\n              style: {\n                fontSize: \"14px\",\n              },\n            },\n            InputProps: {\n              style: { height: \"27px\", fontSize: \"14px\", width: \"150px\" },\n            },\n          }}\n        />\n        <TextField\n          disabled={isDisableField}\n          label=\"Explanation\"\n          size=\"small\"\n          name=\"explanation\"\n          value={state.explanation}\n          onChange={handleInputChange}\n          onKeyDown={(e) => {\n            if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n              e.preventDefault();\n              particularsInputRef.current?.focus()\n            }\n          }}\n          InputProps={{\n            style: { height: \"27px\", fontSize: \"14px\" },\n            inputRef: explanationInputRef\n          }}\n          sx={{\n            flex: 1,\n            height: \"27px\",\n            \".MuiFormLabel-root\": { fontSize: \"14px\" },\n            \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n          }}\n        />\n        <TextField\n          disabled={isDisableField}\n          label=\"Particulars\"\n          size=\"small\"\n          name=\"particulars\"\n          value={state.particulars}\n          onChange={handleInputChange}\n          onKeyDown={(e) => {\n            if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n              e.preventDefault();\n              codeInputRef.current?.focus()\n            }\n          }}\n          InputProps={{\n            inputRef: particularsInputRef,\n            style: { height: \"27px\", fontSize: \"14px\" },\n          }}\n          sx={{\n            flex: 1,\n            height: \"27px\",\n            \".MuiFormLabel-root\": { fontSize: \"14px\" },\n            \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n          }}\n        />\n      </fieldset>\n      <fieldset\n        style={{\n          border: \"1px solid #cbd5e1\",\n          borderRadius: \"5px\",\n          position: \"relative\",\n          width: \"100%\",\n          height: \"auto\",\n          marginTop: \"10px\",\n\n          padding: \"15px\",\n        }}\n      >\n        <div\n          style={{\n            display: \"flex\",\n            gap: \"10px\",\n          }}\n        >\n          {isLoadingChartAccountSearch ? (\n            <LoadingButton loading={isLoadingChartAccountSearch} />\n          ) : (\n            <FormControl\n              variant=\"outlined\"\n              size=\"small\"\n              disabled={isDisableField}\n              sx={{\n                width: \"130px\",\n                \".MuiFormLabel-root\": {\n                  fontSize: \"14px\",\n                  background: \"white\",\n                  zIndex: 99,\n                  padding: \"0 3px\",\n                },\n                \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n              }}\n            >\n              <InputLabel htmlFor=\"chart-account-id\">Code</InputLabel>\n              <OutlinedInput\n                sx={{\n                  height: \"27px\",\n                  fontSize: \"14px\",\n                }}\n                readOnly\n                disabled={isDisableField}\n                fullWidth\n                label=\"Code\"\n                name=\"code\"\n                inputRef={codeInputRef}\n                value={state.code}\n                onChange={handleInputChange}\n                onKeyDown={(e) => {\n                  if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n                    e.preventDefault();\n                    return openChartAccountSearch(state.code);\n                  }\n                }}\n                id=\"chart-account-id\"\n                endAdornment={\n                  <InputAdornment position=\"end\">\n                    <IconButton\n                      ref={reloadIDButtonRef}\n                      disabled={isDisableField}\n                      aria-label=\"search-client\"\n                      color=\"secondary\"\n                      edge=\"end\"\n                      onClick={() => {\n                        openChartAccountSearch(state.code);\n                      }}\n                    >\n                      <RestartAltIcon />\n                    </IconButton>\n                  </InputAdornment>\n                }\n              />\n            </FormControl>\n          )}\n          <TextField\n            disabled={isDisableField}\n            label=\"Account Name\"\n            size=\"small\"\n            name=\"acctName\"\n            value={state.acctName}\n            onChange={handleInputChange}\n            onKeyDown={(e) => {\n              if (\n                e.code === \"Enter\" ||\n                (e.code === \"NumpadEnter\" && state.acctName !== \"\")\n              ) {\n                e.preventDefault();\n                subAccountRef.current?.focus()\n              }\n\n            }}\n            InputProps={{\n              style: { height: \"27px\", fontSize: \"14px\" },\n              inputRef: accountNameRef\n            }}\n            sx={{\n              flex: 1,\n              \".MuiFormLabel-root\": { fontSize: \"14px\" },\n              \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n            }}\n          />\n          <TextField\n            disabled={isDisableField}\n            label=\"Sub Account\"\n            size=\"small\"\n            name=\"subAcctName\"\n            value={state.subAcctName}\n            onChange={handleInputChange}\n            onKeyDown={(e) => {\n              if (\n                e.code === \"Enter\" ||\n                (e.code === \"NumpadEnter\" && state.subAcctName !== \"\")\n              ) {\n                e.preventDefault();\n                idInputRef.current?.focus()\n              }\n\n            }}\n            InputProps={{\n              style: { height: \"27px\", fontSize: \"14px\" },\n              inputRef: subAccountRef\n            }}\n            sx={{\n              width: \"150px\",\n              \".MuiFormLabel-root\": { fontSize: \"14px\" },\n              \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n            }}\n          />\n          {isLoadingPolicyIdClientIdRefId ? (\n            <LoadingButton loading={isLoadingPolicyIdClientIdRefId} />\n          ) : (\n            <FormControl\n              variant=\"outlined\"\n              size=\"small\"\n              disabled={isDisableField}\n              sx={{\n                width: \"300px\",\n                \".MuiFormLabel-root\": {\n                  fontSize: \"14px\",\n                  background: \"white\",\n                  zIndex: 99,\n                  padding: \"0 3px\",\n                },\n                \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n              }}\n            >\n              <InputLabel htmlFor=\"policy-client-ref-id\">I.D</InputLabel>\n              <OutlinedInput\n                readOnly\n                sx={{\n                  height: \"27px\",\n                  fontSize: \"14px\",\n                }}\n                inputRef={idInputRef}\n                disabled={isDisableField}\n                fullWidth\n                label=\"I.D\"\n                name=\"ClientName\"\n                value={state.ClientName}\n                onChange={handleInputChange}\n                onKeyDown={(e) => {\n                  if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n                    e.preventDefault();\n                    setIsPayToEnter(false);\n                    return openPolicyIdClientIdRefId(state.ClientName);\n                  }\n                }}\n                id=\"policy-client-ref-id\"\n                endAdornment={\n                  <InputAdornment position=\"end\">\n                    <IconButton\n                      ref={reloadIDButtonRef}\n                      disabled={isDisableField}\n                      aria-label=\"search-client\"\n                      color=\"secondary\"\n                      edge=\"end\"\n                      onClick={() => {\n                        openPolicyIdClientIdRefId(state.ClientName);\n                      }}\n                    >\n                      <RestartAltIcon />\n                    </IconButton>\n                  </InputAdornment>\n                }\n              />\n            </FormControl>\n          )}\n          <TextField\n            disabled={isDisableField}\n            label=\"Debit\"\n            size=\"small\"\n            name=\"debit\"\n            value={state.debit}\n            onChange={handleInputChange}\n            onKeyDown={(e) => {\n              if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n                e.preventDefault();\n                creditRef.current?.focus()\n              }\n            }}\n            onBlur={(e) => {\n              e.preventDefault();\n              let num = \"0\";\n              if (!isNaN(parseFloat(state.debit))) {\n                num = state.debit;\n              }\n              dispatch({\n                type: \"UPDATE_FIELD\",\n                field: \"debit\",\n                value: parseFloat(num.toString().replace(/,/g, \"\")).toFixed(2),\n              });\n            }}\n            InputProps={{\n              inputComponent: NumericFormatCustom as any,\n              inputRef: debitInputRef,\n              style: { height: \"27px\", fontSize: \"14px\" },\n            }}\n            sx={{\n              width: \"160px\",\n              \".MuiFormLabel-root\": { fontSize: \"14px\" },\n              \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n            }}\n          />\n          <TextField\n            disabled={isDisableField}\n            label=\"Credit\"\n            size=\"small\"\n            name=\"credit\"\n            value={state.credit}\n            onChange={handleInputChange}\n            onKeyDown={(e) => {\n              if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n                e.preventDefault();\n                if (state.code === \"1.01.10\") {\n                  checkNoRef.current?.focus()\n                } else {\n                  tcDateRef.current?.focus()\n                }\n              }\n            }}\n            onFocus={(e) => {\n              e.preventDefault();\n              if (state.code === \"1.01.10\") {\n                dispatch({\n                  type: \"UPDATE_FIELD\",\n                  field: \"credit\",\n                  value: state.totalBalance,\n                });\n              }\n            }}\n            onBlur={(e) => {\n              e.preventDefault();\n              let num = \"0\";\n              if (!isNaN(parseFloat(state.credit))) {\n                num = state.credit;\n              }\n              dispatch({\n                type: \"UPDATE_FIELD\",\n                field: \"credit\",\n                value: parseFloat(num.toString().replace(/,/g, \"\")).toFixed(2),\n              });\n            }}\n            InputProps={{\n              inputComponent: NumericFormatCustom as any,\n              style: { height: \"27px\", fontSize: \"14px\" },\n              inputRef: creditRef\n            }}\n            sx={{\n              width: \"160px\",\n              \".MuiFormLabel-root\": { fontSize: \"14px\" },\n              \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n            }}\n          />\n          <TextField\n            disabled={isDisableField || state.code !== \"1.01.10\"}\n            label=\"Check No\"\n            size=\"small\"\n            name=\"checkNo\"\n            value={state.checkNo}\n            onChange={handleInputChange}\n            onKeyDown={(e) => {\n              if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n                e.preventDefault();\n                checkDateRef.current?.focus()\n              }\n            }}\n            InputProps={{\n              inputRef: checkNoRef,\n              style: { height: \"27px\", fontSize: \"14px\" },\n            }}\n            sx={{\n              width: \"160px\",\n              \".MuiFormLabel-root\": { fontSize: \"14px\" },\n              \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n            }}\n          />\n        </div>\n        <div\n          style={{\n            display: \"flex\",\n            gap: \"10px\",\n            marginTop: \"10px\",\n          }}\n        >\n          {state.code === \"1.01.10\" ? (\n            <CustomDatePicker\n              fullWidth={false}\n              disabled={isDisableField || state.code !== \"1.01.10\"}\n              label=\"Check Date\"\n              onChange={(value: any) => {\n                dispatch({\n                  type: \"UPDATE_FIELD\",\n                  field: \"checkDate\",\n                  value: value,\n                });\n              }}\n              value={state.checkDate}\n              onKeyDown={(e: any) => {\n                if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n                  // const timeout = setTimeout(() => {\n                  //   checkDatePickerRef.current\n                  //     ?.querySelector(\"button\")\n                  //     ?.click();\n                  //   clearTimeout(timeout);\n                  // }, 150);\n                  tcDateRef.current?.focus()\n                }\n              }}\n              datePickerRef={checkDatePickerRef}\n              inputRef={checkDateRef}\n              textField={{\n                InputLabelProps: {\n                  style: {\n                    fontSize: \"14px\",\n                  },\n                },\n                InputProps: {\n                  style: { height: \"27px\", fontSize: \"14px\", width: \"150px\" },\n                },\n              }}\n            />\n          ) : (\n            <TextField\n              disabled={isDisableField || state.code !== \"1.01.10\"}\n              label=\"Check Date\"\n              size=\"small\"\n              name=\"checkDate\"\n              InputProps={{\n                style: { height: \"27px\", fontSize: \"14px\" },\n              }}\n              sx={{\n                width: \"160px\",\n                \".MuiFormLabel-root\": { fontSize: \"14px\" },\n                \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n              }}\n            />\n          )}\n          {isLoadingTransactionAccount ? (\n            <LoadingButton loading={isLoadingTransactionAccount} />\n          ) : (\n            <FormControl\n              variant=\"outlined\"\n              size=\"small\"\n              disabled={isDisableField}\n              sx={{\n                width: \"130px\",\n                \".MuiFormLabel-root\": {\n                  fontSize: \"14px\",\n                  background: \"white\",\n                  zIndex: 99,\n                  padding: \"0 3px\",\n                },\n                \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n              }}\n            >\n              <InputLabel htmlFor=\"tc\">TC</InputLabel>\n              <OutlinedInput\n                inputRef={tcDateRef}\n                sx={{\n                  height: \"27px\",\n                  fontSize: \"14px\",\n                }}\n                readOnly\n                fullWidth\n                label=\"TC\"\n                name=\"TC_Code\"\n                value={state.TC_Code}\n                onChange={handleInputChange}\n                onKeyDown={(e) => {\n                  if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n                    e.preventDefault();\n                    return openTransactionAccount(state.TC_Code);\n                  }\n                }}\n                id=\"tc\"\n                endAdornment={\n                  <InputAdornment position=\"end\">\n                    <IconButton\n                      ref={reloadIDButtonRef}\n                      disabled={isDisableField}\n                      aria-label=\"search-client\"\n                      color=\"secondary\"\n                      edge=\"end\"\n                      onClick={() => {\n                        openTransactionAccount(state.TC_Code);\n                      }}\n                    >\n                      <RestartAltIcon />\n                    </IconButton>\n                  </InputAdornment>\n                }\n              />\n            </FormControl>\n          )}\n          <TextField\n            disabled={isDisableField}\n            label=\"Remarks\"\n            size=\"small\"\n            name=\"remarks\"\n            value={state.remarks}\n            onChange={handleInputChange}\n            onKeyDown={(e) => {\n              if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n                e.preventDefault();\n                if (state.code === \"1.01.10\") {\n                  idInputRefPayTo.current?.focus()\n                } else {\n                  vatRef.current?.focus()\n                }\n              }\n            }}\n            InputProps={{\n              style: { height: \"27px\", fontSize: \"14px\" },\n              inputRef: tcInputRef,\n            }}\n            sx={{\n              flex: 1,\n              \".MuiFormLabel-root\": { fontSize: \"14px\" },\n              \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n            }}\n          />\n          {state.code !== \"1.01.10\" && (\n            <TextField\n              disabled={isDisableField}\n              label=\"Payto\"\n              size=\"small\"\n              name=\"Payto\"\n              value={state.Payto}\n              onChange={handleInputChange}\n              onKeyDown={(e) => {\n                if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n                  e.preventDefault();\n                  return handleRowSave();\n                }\n              }}\n              InputProps={{\n                readOnly: true,\n                inputRef: paytoRef,\n                style: { height: \"27px\", fontSize: \"14px\" },\n              }}\n              sx={{\n                width: \"160px\",\n                \".MuiFormLabel-root\": { fontSize: \"14px\" },\n                \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n              }}\n            />\n          )}\n\n          {state.code === \"1.01.10\" && (\n            <>\n              {isLoadingPolicyIdClientIdRefId ? (\n                <LoadingButton loading={isLoadingPolicyIdClientIdRefId} />\n              ) : (\n                <FormControl\n                  variant=\"outlined\"\n                  size=\"small\"\n                  disabled={isDisableField}\n                  sx={{\n                    width: \"300px\",\n                    \".MuiFormLabel-root\": {\n                      fontSize: \"14px\",\n                      background: \"white\",\n                      zIndex: 99,\n                      padding: \"0 3px\",\n                    },\n                    \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n                  }}\n                >\n                  <InputLabel htmlFor=\"policy-client-Payto\">Payto</InputLabel>\n                  <OutlinedInput\n                    readOnly\n                    sx={{\n                      height: \"27px\",\n                      fontSize: \"14px\",\n                    }}\n                    inputRef={idInputRefPayTo}\n                    disabled={isDisableField}\n                    fullWidth\n                    label=\"Payto\"\n                    name=\"Payto\"\n                    value={state.Payto}\n                    onChange={handleInputChange}\n                    onKeyDown={(e) => {\n                      if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n                        e.preventDefault();\n                        setIsPayToEnter(true);\n                        return openPolicyIdClientIdRefId(state.Payto);\n                      }\n                    }}\n                    id=\"policy-client-Payto\"\n                    endAdornment={\n                      <InputAdornment position=\"end\">\n                        <IconButton\n                          ref={reloadIDButtonRef}\n                          disabled={isDisableField}\n                          color=\"secondary\"\n                          edge=\"end\"\n                          onClick={() => {\n                            openPolicyIdClientIdRefId(state.Payto);\n                          }}\n                        >\n                          <RestartAltIcon />\n                        </IconButton>\n                      </InputAdornment>\n                    }\n                  />\n                </FormControl>\n              )}\n            </>\n          )}\n          <FormControl\n            size=\"small\"\n            variant=\"outlined\"\n            sx={{\n              width: \"120px\",\n              \".MuiFormLabel-root\": {\n                fontSize: \"14px\",\n                background: \"white\",\n                zIndex: 99,\n                padding: \"0 3px\",\n              },\n              \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n            }}\n          >\n            <InputLabel id=\"label-selection-reason\">Vat Type</InputLabel>\n            <Select\n              labelId=\"label-selection-reason\"\n              value={state.vatType}\n              name=\"vatType\"\n              onChange={handleInputChange}\n              autoWidth\n              sx={{\n                height: \"27px\",\n                fontSize: \"14px\",\n              }}\n              inputRef={vatRef}\n              disabled={isDisableField}\n\n            >\n              <MenuItem value=\"VAT\" onKeyDown={(e) => {\n                if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n                  e.preventDefault();\n                  wait(300).then(() => {\n                    invoiceRef.current?.focus()\n                  })\n\n                }\n              }}>VAT</MenuItem>\n              <MenuItem value={\"NON-VAT\"} onKeyDown={(e) => {\n                if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n                  e.preventDefault();\n                  wait(300).then(() => {\n                    invoiceRef.current?.focus()\n                  })\n                }\n              }}>NON-VAT</MenuItem>\n            </Select>\n          </FormControl>\n          <TextField\n            disabled={isDisableField}\n            label=\"OR/Invoice No.\"\n            size=\"small\"\n            name=\"invoice\"\n            value={state.invoice}\n            onChange={handleInputChange}\n            onKeyDown={(e) => {\n              if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n                e.preventDefault();\n                handleRowSave()\n              }\n            }}\n            InputProps={{\n              style: { height: \"27px\", fontSize: \"14px\" },\n              inputRef: invoiceRef\n            }}\n            sx={{\n              width: \"200px\",\n              \".MuiFormLabel-root\": { fontSize: \"14px\" },\n              \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n            }}\n          />\n          <Button\n            disabled={isDisableField}\n            sx={{\n              height: \"27px\",\n              fontSize: \"11px\",\n            }}\n            variant=\"contained\"\n            startIcon={<SaveIcon sx={{ fontSize: \"18px\" }} />}\n            onClick={() => {\n              handleRowSave()\n            }}\n            color=\"primary\"\n          >\n            Save Row\n          </Button>\n        </div>\n      </fieldset>\n      {/* <div\n        ref={refParent}\n        style={{\n          marginTop: \"10px\",\n          width: \"100%\",\n          position: \"relative\",\n          flex: 1,\n        }}\n      >\n        <Box\n          style={{\n            height: `${refParent.current?.getBoundingClientRect().height}px`,\n            width: \"100%\",\n            overflowX: \"scroll\",\n            position: \"absolute\",\n          }}\n        >\n          <Table\n            ref={table}\n            isLoading={\n              loadingCashDisbursementMutate ||\n              loadingGetSearchSelectedCashDisbursement ||\n              isLoadingJob\n            }\n            columns={selectedCollectionColumns}\n            rows={formatDebitCredit(cashDisbursement)}\n            table_id={\"TempID\"}\n            isSingleSelection={true}\n            isRowFreeze={false}\n            dataSelection={(selection, data, code) => {\n              const rowSelected = data.filter(\n                (item: any) => item.TempID === selection[0]\n              )[0];\n              if (rowSelected === undefined || rowSelected.length <= 0) {\n                const resetValue = {\n                  code: \"\",\n                  acctName: \"\",\n                  subAcct: \"\",\n                  subAcctName: \"\",\n                  IDNo: \"\",\n                  ClientName: \"\",\n                  credit: \"\",\n                  debit: \"\",\n                  TC_Code: \"\",\n                  TC_Desc: \"\",\n                  remarks: \"\",\n                  vatType: \"NON-VAT\",\n                  invoice: \"\",\n                  checkNo: \"\",\n                  checkDate: new Date(),\n                };\n                setNewStateValue(dispatch, { ...state, ...resetValue });\n                setEditTransaction({ edit: false, updateId: \"\" });\n                return;\n              }\n\n              if (code === \"Delete\" || code === \"Backspace\") {\n                Swal.fire({\n                  title: `Are you sure you want to delete?`,\n                  text: \"You won't be able to revert this!\",\n                  icon: \"warning\",\n                  showCancelButton: true,\n                  confirmButtonColor: \"#3085d6\",\n                  cancelButtonColor: \"#d33\",\n                  confirmButtonText: \"Yes, delete it!\",\n                }).then((result) => {\n                  if (result.isConfirmed) {\n                    return setCashDisbursement((d) => {\n                      return d.filter(\n                        (items: any) => items.TempID !== selection[0]\n                      );\n                    });\n                  }\n                });\n                return;\n              }\n              setNewStateValue(dispatch, {\n                ...rowSelected,\n                checkDate: new Date(rowSelected.checkDate),\n                sub_refNo: state.sub_refNo,\n                refNo: state.refNo,\n                dateEntry: state.dateEntry,\n                explanation: state.explanation,\n                particulars: state.particulars,\n                totalDebit: state.totalDebit,\n                totalCredit: state.totalCredit,\n                totalBalance: state.totalBalance,\n              });\n              setEditTransaction({\n                edit: true,\n                updateId: rowSelected.TempID,\n              });\n            }}\n          />\n        </Box>\n      </div> */}\n\n      <UpwardTable\n        isLoading={loadingCashDisbursementMutate ||\n          loadingGetSearchSelectedCashDisbursement ||\n          isLoadingJob}\n        ref={table}\n        rows={formatDebitCredit(cashDisbursement)}\n        column={selectedCollectionColumns}\n        width={width}\n        height={height}\n        dataReadOnly={true}\n        onSelectionChange={(selected) => {\n          const rowSelected = selected[0]\n          if (selected.length > 0) {\n            setNewStateValue(dispatch, {\n              ...rowSelected,\n              checkDate: new Date(rowSelected.checkDate),\n              sub_refNo: state.sub_refNo,\n              refNo: state.refNo,\n              dateEntry: state.dateEntry,\n              explanation: state.explanation,\n              particulars: state.particulars,\n              totalDebit: state.totalDebit,\n              totalCredit: state.totalCredit,\n              totalBalance: state.totalBalance,\n            });\n            setEditTransaction({\n              edit: true,\n              updateId: rowSelected.TempID,\n            });\n          } else {\n            const resetValue = {\n              code: \"\",\n              acctName: \"\",\n              subAcct: \"\",\n              subAcctName: \"\",\n              IDNo: \"\",\n              ClientName: \"\",\n              credit: \"\",\n              debit: \"\",\n              TC_Code: \"\",\n              TC_Desc: \"\",\n              remarks: \"\",\n              vatType: \"NON-VAT\",\n              invoice: \"\",\n              checkNo: \"\",\n              checkDate: new Date(),\n            };\n            setNewStateValue(dispatch, { ...state, ...resetValue });\n            setEditTransaction({ edit: false, updateId: \"\" });\n            return;\n          }\n        }}\n        onKeyDown={(row, key) => {\n\n          if (key === \"Delete\" || key === \"Backspace\") {\n            const rowSelected = row[0];\n\n            Swal.fire({\n              title: `Are you sure you want to delete?`,\n              text: \"You won't be able to revert this!\",\n              icon: \"warning\",\n              showCancelButton: true,\n              confirmButtonColor: \"#3085d6\",\n              cancelButtonColor: \"#d33\",\n              confirmButtonText: \"Yes, delete it!\",\n            }).then((result) => {\n              if (result.isConfirmed) {\n                return setCashDisbursement((d) => {\n                  return d.filter(\n                    (items: any) => items.TempID !== rowSelected.TempID\n                  );\n                });\n              }\n            });\n            return;\n          }\n\n          // if (key === \"Delete\" || key === \"Backspace\") {\n          //   const rowSelected = row[0];\n          //   if (\n          //     (rowSelected.Deposit_Slip && rowSelected.Deposit_Slip !== \"\") ||\n          //     (rowSelected.DateDeposit && rowSelected.DateDeposit !== \"\") ||\n          //     (rowSelected.OR_No && rowSelected.OR_No !== \"\")\n          //   ) {\n          //     return Swal.fire({\n          //       position: \"center\",\n          //       icon: \"warning\",\n          //       title: `Unable to delete. Check No ${rowSelected.Check_No} is already ${rowSelected.OR_No} issued of OR!`,\n          //       showConfirmButton: false,\n          //       timer: 1500,\n          //     });\n          //   }\n          //   const timeout = setTimeout(() => {\n          //     Swal.fire({\n          //       title: \"Are you sure?\",\n          //       text: `You won't to delete this Check No. ${rowSelected.Check_No}`,\n          //       icon: \"warning\",\n          //       showCancelButton: true,\n          //       confirmButtonColor: \"#3085d6\",\n          //       cancelButtonColor: \"#d33\",\n          //       confirmButtonText: \"Yes, delete it!\",\n          //     }).then((result) => {\n          //       if (result.isConfirmed) {\n          //         return setPdcDataRows((dt) => {\n          //           return dt.filter(\n          //             (item: any) => item.CheckIdx !== rowSelected.CheckIdx\n          //           );\n          //         });\n          //       }\n          //       table.current?.removeSelection();\n          //     });\n          //     clearTimeout(timeout);\n          //   }, 250);\n          // }\n        }}\n        onRightClick={(rowSelected, event) => {\n          console.log(rowSelected)\n          event.stopPropagation()\n          setPosition({ x: event.pageX, y: event.pageY });\n          setModalVisible(true);\n          setRigthClickSelected(rowSelected)\n        }}\n        inputsearchselector=\".manok\"\n      />\n\n      <Modal open={openJobs} onClose={() => setOpenJobs(false)}>\n        <Box\n          sx={{\n            position: \"absolute\" as \"absolute\",\n            top: \"50%\",\n            left: \"50%\",\n            transform: \"translate(-50%, -50%)\",\n            width: 470,\n            bgcolor: \"background.paper\",\n            p: 4,\n          }}\n        >\n          <IconButton\n            style={{\n              position: \"absolute\",\n              top: \"10px\",\n              right: \"10px\",\n            }}\n            aria-label=\"search-client\"\n            onClick={() => setOpenJobs(false)}\n          >\n            <CloseIcon />\n          </IconButton>\n          <Typography\n            id=\"modal-modal-title\"\n            variant=\"h6\"\n            component=\"h2\"\n            sx={{ marginBottom: \"20px\" }}\n          >\n            Jobs\n          </Typography>\n          <div\n            style={{\n              width: \"400px\",\n            }}\n          >\n            <div\n              style={{\n                width: \"100%\",\n                display: \"flex\",\n                marginBottom: \"10px\",\n                justifyContent: \"space-between\",\n                alignItems: \"center\",\n              }}\n            >\n              <LocalizationProvider dateAdapter={AdapterDateFns}>\n                <DatePicker\n                  sx={{\n                    width: \"200px\",\n                    \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n                  }}\n                  slotProps={{\n                    textField: {\n                      size: \"small\",\n                      name: \"\",\n                      InputLabelProps: {\n                        style: {\n                          fontSize: \"14px\",\n                        },\n                      },\n                      InputProps: {\n                        style: { height: \"27px\", fontSize: \"14px\" },\n                      },\n                    },\n                  }}\n                  label={\"Transaction Date: \"}\n                  views={[\"month\", \"year\"]}\n                  value={state.jobTransactionDate}\n                  onChange={(value) => {\n                    dispatch({\n                      type: \"UPDATE_FIELD\",\n                      field: \"jobTransactionDate\",\n                      value: value,\n                    });\n                  }}\n                />\n              </LocalizationProvider>\n              <FormControlLabel\n                sx={{\n                  height: \"30px\",\n                  \"& .MuiTypography-root\": {\n                    fontSize: \"14px\",\n                  },\n                }}\n                control={\n                  <Checkbox\n                    size=\"small\"\n                    checked={state.jobAutoExp}\n                    onChange={(e) => {\n                      dispatch({\n                        type: \"UPDATE_FIELD\",\n                        field: \"jobAutoExp\",\n                        value: !state.jobAutoExp,\n                      });\n                    }}\n                  />\n                }\n                label=\"Auto Explanation\"\n              />\n            </div>\n            <FormControl\n              fullWidth\n              size=\"small\"\n              variant=\"outlined\"\n              sx={{\n                \".MuiFormLabel-root\": {\n                  fontSize: \"14px\",\n                  background: \"white\",\n                  zIndex: 99,\n                  padding: \"0 3px\",\n                },\n                \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n              }}\n            >\n              <InputLabel id=\"label-selection-job-type\">Type of Job</InputLabel>\n              <Select\n                labelId=\"label-selection-job-type\"\n                value={state.jobType}\n                name=\"jobType\"\n                onChange={handleInputChange}\n                autoWidth\n                sx={{\n                  height: \"27px\",\n                  fontSize: \"14px\",\n                }}\n              >\n                <MenuItem value={\"\"}> </MenuItem>\n                <MenuItem value={\"0\"}>Reversal of Accrued Interest </MenuItem>\n                <MenuItem value={\"1\"}>\n                  {\" \"}\n                  Income Recognition & Accrual of Interest\n                </MenuItem>\n                <MenuItem value={\"2\"}>Penalty Charges</MenuItem>\n                <MenuItem value={\"3\"}>Penalty Income</MenuItem>\n                <MenuItem value={\"4\"}>RPT Transaction (NIL-HN)</MenuItem>\n                <MenuItem value={\"5\"}>RPT Transaction (AMIFIN)</MenuItem>\n                <MenuItem value={\"6\"}>RPT Income</MenuItem>\n                <MenuItem value={\"7\"}>Monthly Accrual Expenses</MenuItem>\n                <MenuItem value={\"8\"}>Monthly Accrual Income</MenuItem>\n                <MenuItem value={\"9\"}>\n                  Production (Milestone Guarantee)\n                </MenuItem>\n                <MenuItem value={\"10\"}>\n                  Production (Liberty Insurance Co.)\n                </MenuItem>\n                <MenuItem value={\"11\"}>Production (Federal Phoenix)</MenuItem>\n              </Select>\n            </FormControl>\n          </div>\n\n          <div\n            style={{\n              display: \"flex\",\n              columnGap: \"30px\",\n              alignItems: \"flex-end\",\n              marginTop: \"20px\",\n            }}\n          >\n            <LoadingButton\n              loading={isLoadingJob}\n              color=\"success\"\n              variant=\"contained\"\n              onClick={() => mutateJob(state)}\n            >\n              Create Job\n            </LoadingButton>\n            <Button\n              // ref={checkModalSaveButton}\n              color=\"error\"\n              variant=\"contained\"\n              onClick={() => setOpenJobs(false)}\n            >\n              Cancel\n            </Button>\n          </div>\n        </Box>\n      </Modal>\n      {ModalChartAccountSearch}\n      {ModalPolicyIdClientIdRefId}\n      {ModalTransactionAccount}\n      {ModalSearchCashDisbursement}\n\n      {modalVisible && (\n        <div\n          style={{\n            position: 'absolute',\n            top: position.y,\n            left: position.x,\n            backgroundColor: 'white',\n            padding: '10px',\n            border: '1px solid black',\n            borderRadius: '4px',\n            boxShadow: '0 4px 8px rgba(0, 0, 0, 0.2)',\n            zIndex: 1000,\n            display: \"flex\",\n            flexDirection: \"column\",\n            rowGap: \"5px\"\n          }}\n        >\n          <Button\n            sx={{\n              height: \"22px\",\n              fontSize: \"11px\",\n            }}\n            variant=\"contained\"\n            onClick={() => {\n\n              if (rigthClickSelected) {\n                Swal.fire({\n                  title: `Are you sure you want to delete?`,\n                  text: \"You won't be able to revert this!\",\n                  icon: \"warning\",\n                  showCancelButton: true,\n                  confirmButtonColor: \"#3085d6\",\n                  cancelButtonColor: \"#d33\",\n                  confirmButtonText: \"Yes, delete it!\",\n                }).then((result) => {\n                  if (result.isConfirmed) {\n                    setCashDisbursement((d) => {\n                      return d.filter(\n                        (items: any) => items.TempID !== rigthClickSelected.TempID\n                      );\n                    });\n                    setRigthClickSelected(null)\n                  }\n                });\n              }\n            }} >Delete Row</Button>\n          {(rigthClickSelected && rigthClickSelected.code === '1.01.10') &&\n            <Button variant=\"contained\"\n              sx={{\n                height: \"22px\",\n                fontSize: \"11px\",\n              }}\n              onClick={handleClickPrintCheck}>Print</Button>}\n        </div>\n      )}\n    </div>\n  );\n}\n\nfunction setNewStateValue(dispatch: any, obj: any) {\n  Object.entries(obj).forEach(([field, value]) => {\n    dispatch({ type: \"UPDATE_FIELD\", field, value });\n  });\n}\n","export default function formatDate(date: any) {\n  // Extract day, month, and year\n  const currentDate = new Date(date)\n  const day = (\"0\" + currentDate.getDate()).slice(-2); // Ensure two digits\n  const month = (\"0\" + (currentDate.getMonth() + 1)).slice(-2); // Add 1 to month (months are zero-indexed)\n  const year = currentDate.getFullYear();\n\n  // Format the date as MM/DD/YYYY\n  return month + \"/\" + day + \"/\" + year;\n}\n","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 5V2L8 6l4 4V7c3.31 0 6 2.69 6 6 0 2.97-2.17 5.43-5 5.91v2.02c3.95-.49 7-3.85 7-7.93 0-4.42-3.58-8-8-8zm-6 8c0-1.65.67-3.15 1.76-4.24L6.34 7.34C4.9 8.79 4 10.79 4 13c0 4.08 3.05 7.44 7 7.93v-2.02c-2.83-.48-5-2.94-5-5.91z\"\n}), 'RestartAlt');\nexports.default = _default;","const deepOrange = {\n  50: '#fbe9e7',\n  100: '#ffccbc',\n  200: '#ffab91',\n  300: '#ff8a65',\n  400: '#ff7043',\n  500: '#ff5722',\n  600: '#f4511e',\n  700: '#e64a19',\n  800: '#d84315',\n  900: '#bf360c',\n  A100: '#ff9e80',\n  A200: '#ff6e40',\n  A400: '#ff3d00',\n  A700: '#dd2c00'\n};\nexport default deepOrange;"],"names":["CustomDatePicker","_ref","label","name","onChange","value","onKeyDown","inputRef","datePickerRef","fullWidth","textField","_ref$minWidth","minWidth","rest","_objectWithoutProperties","_excluded","_jsx","LocalizationProvider","dateAdapter","AdapterDateFns","children","DatePicker","_objectSpread","floatingLabelStyle","color","ref","slotProps","size","InputLabelProps","sx","fieldset","borderColor","fontSize","top","NumericFormatCustom","React","props","other","NumericFormat","getInputRef","onValueChange","values","target","allowNegative","thousandSeparator","valueIsNumericString","UpwardTable","forwardRef","UpwardTableRef","_pages$pageNumber","rows","column","width","height","dataReadOnly","_ref$onSelectionChang","onSelectionChange","_ref$isMultipleSelect","isMultipleSelect","_ref$freeze","freeze","_ref$inputsearchselec","inputsearchselector","_ref$isRowSelectable","isRowSelectable","_ref$unSelectable","unSelectable","isLoading","onRightClick","_useState","useState","_useState2","_slicedToArray","pages","setPages","_useState3","_useState4","pageNumber","setPageNumber","onSelectionChangeRef","useRef","onKeyDownRef","_useState5","filter","itm","hide","_useState6","columns","setColumns","_useState7","_useState8","hoveredColumn","setHoveredColumn","_useState9","_useState10","selectedRows","setSelectedRows","_useState11","_useState12","lastSelectedRowIndex","setLastSelectedRowIndex","_useState13","_useState14","selectedItems","setSelectedItems","divRef","_useState15","_useState16","_clickTimeout","_setClickTimeout","useEffect","_pages","arr","chunkSize","arguments","length","undefined","result","i","push","slice","formatArrayIntoChunks","startResize","index","e","preventDefault","stopPropagation","startX","clientX","startWidth","doDrag","moveEvent","newWidth","updatedColumns","_toConsumableArray","document","addEventListener","stopDrag","removeEventListener","handleMouseEnter","handleMouseLeave","useImperativeHandle","resetTableSelected","row","querySelector","concat","scrollIntoView","block","behavior","getSelectedRows","d","idx","includes","setSelectRows","selectRows","style","display","justifyContent","key","prevIndex","_row$querySelector","newPrevIndex","focus","input","tagName","divInput","_row$querySelector2","_jsxs","className","flexDirection","minHeight","tabIndex","position","zIndex","background","map","col","fontWeight","defaultValue","headerName","readOnly","onMouseDown","onMouseEnter","onMouseLeave","rowIndex","onClick","event","shiftKey","rangeStart","Math","min","rangeEnd","max","newSelectedRows","selectedItemsParams","_getIndexAndData","selectedRowData","removeNullValue","data","newSelectedRowsFiltered","getIndexAndData","ctrlKey","metaKey","handleRowClick","onDoubleClick","clearTimeout","timeoutId","setTimeout","current","handleRowDoubleClick","handleRowKeyDown","onContextMenu","rowSelected","handleRightClick","colIndex","field","type","Pagination","count","initialState","sub_refNo","refNo","dateEntry","Date","explanation","particulars","code","acctName","subAcct","subAcctName","IDNo","ClientName","address","credit","debit","checkNo","checkDate","TC_Code","TC_Desc","remarks","Payto","vatType","invoice","BranchCode","totalDebit","totalCredit","totalBalance","jobAutoExp","jobTransactionDate","jobType","search","cashMode","reducer","state","action","_defineProperty","selectedCollectionColumns","flex","CashDisbursement","_mutationFn","_queryFn","_mutationFn2","_mutationFn3","_mutationFn4","_mutationFn5","modalVisible","setModalVisible","x","y","setPosition","rigthClickSelected","setRigthClickSelected","_useContext","useContext","AuthContext","myAxios","user","_useReducer","useReducer","_useReducer2","dispatch","openJobs","setOpenJobs","isPayToEnter","setIsPayToEnter","hasSelected","setHasSelected","edit","updateId","editTransaction","setEditTransaction","_useState17","_useState18","_useState19","_useState20","cashDisbursement","setCashDisbursement","queryClient","useQueryClient","checkDatePickerRef","reloadIDButtonRef","explanationInputRef","particularsInputRef","idInputRef","idInputRefPayTo","vatRef","debitInputRef","tcInputRef","chartAccountSearchInput","IdsSearchInput","codeInputRef","table","dateRef","accountNameRef","subAccountRef","creditRef","checkNoRef","checkDateRef","tcDateRef","paytoRef","invoiceRef","_useMutation","useMutation","mutationKey","mutationFn","_x","_asyncToGenerator","_regeneratorRuntime","mark","_callee","variable","wrap","_context","prev","next","post","headers","Authorization","accessToken","abrupt","sent","stop","apply","onSuccess","res","response","console","log","flushSync","localStorage","removeItem","setItem","JSON","stringify","print","PrintTable","PrintPayeeDetails","datakey","header","department","window","open","mutateOnPrint","mutate","isLoadingOnPrint","_useQuery","useQuery","queryKey","queryFn","_callee2","_context2","get","refetchOnWindowFocus","generatedId","id","loadingGeneralJournalGenerator","refetchGeneralJournalGenerator","refetch","_useMutation2","_x2","_callee3","_context3","success","invalidateQueries","setNewStateValue","Swal","icon","title","message","timer","addCashDisbursementMutate","loadingCashDisbursementMutate","_useMutation3","_x3","_callee4","_context4","jobs","mutateJob","isLoadingJob","_useMutation4","_x4","_callee5","_context5","mutateVoidCashDisbursement","loadingVoidCashDisbursement","_useMutation5","_x5","_callee6","_context6","selected","selectedCashDisbursement","_selected$","getSearchSelectedCashDisbursement","loadingGetSearchSelectedCashDisbursement","_useQueryModalTable","useQueryModalTable","link","url","queryUrlName","uniqueId","responseDataKey","onSelected","Source_No","handleInputChange","closeSearchCashDisbursement","onCloseFunction","searchRef","ModalSearchCashDisbursement","ModalComponent","openSearchCashDisbursement","openModal","isLoadingSearchCashDisbursement","closeModal","_useQueryModalTable2","Acct_Code","Acct_Title","closeChartAccountSearch","_idInputRef$current","ModalChartAccountSearch","openChartAccountSearch","isLoadingChartAccountSearch","_useQueryModalTable3","Name","closePolicyIdClientIdRefId","_vatRef$current","sub_account","ShortName","_debitInputRef$curren","ModalPolicyIdClientIdRefId","openPolicyIdClientIdRefId","isLoadingPolicyIdClientIdRefId","_useQueryModalTable4","Code","Description","closeTransactionAccount","_tcInputRef$current","ModalTransactionAccount","openTransactionAccount","isLoadingTransactionAccount","reduce","a","item","parseFloat","replace","toFixed","_e$target","handleRowSave","isNaN","generateID","array","lastItem","TempID","parseInt","toString","match","padStart","text","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","then","isConfirmed","date","currentDate","day","getDate","getMonth","getFullYear","formatDate","taxableamt","toLocaleString","minimumFractionDigits","maximumFractionDigits","inputtax","resetValue","wait","_codeInputRef$current","isDisableField","innerWidth","innerHeight","alignItems","columnGap","LoadingButton","loading","TextField","InputProps","Button","variant","startIcon","AddIcon","disabled","_explanationInputRef$","codeCondfirmationAlert","isUpdate","cb","userCodeConfirmation","saveCondfirmationAlert","isConfirm","CloseIcon","deepOrange","NotInterestedIcon","backgroundColor","grey","border","margin","padding","borderRadius","marginTop","gap","FormControl","InputLabel","htmlFor","OutlinedInput","_dateRef$current","endAdornment","InputAdornment","IconButton","edge","RestartAltIcon","_explanationInputRef$2","_particularsInputRef$","_codeInputRef$current2","_subAccountRef$curren","_idInputRef$current2","_creditRef$current","onBlur","num","inputComponent","_checkNoRef$current","_tcDateRef$current","onFocus","_checkDateRef$current","_tcDateRef$current2","_idInputRefPayTo$curr","_vatRef$current2","_Fragment","Select","labelId","autoWidth","MenuItem","_invoiceRef$current","_invoiceRef$current2","SaveIcon","items","pageX","pageY","Modal","onClose","Box","left","transform","bgcolor","p","right","Typography","component","marginBottom","views","FormControlLabel","control","Checkbox","checked","boxShadow","rowGap","obj","Object","entries","forEach","_ref2","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","A100","A200","A400","A700"],"sourceRoot":""}