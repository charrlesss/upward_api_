{"version":3,"file":"static/js/3147.8f6d8fb1.chunk.js","mappings":"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","sources":["feautures/Admin/Task/Accounting/ReturnCheck.tsx","../node_modules/@mui/icons-material/Add.js","../node_modules/@mui/icons-material/Autorenew.js","../node_modules/@mui/icons-material/Save.js"],"sourcesContent":["import { Button } from \"@mui/material\";\nimport { SelectInput, TextInput } from \"../../../../components/UpwardFields\";\nimport { wait } from \"../../../../lib/wait\";\nimport Swal from \"sweetalert2\";\nimport AddIcon from \"@mui/icons-material/Add\";\nimport SaveIcon from \"@mui/icons-material/Save\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport SearchIcon from \"@mui/icons-material/Search\";\nimport {\n  useRef,\n  useState,\n  forwardRef,\n  useImperativeHandle,\n  useContext,\n  useEffect,\n} from \"react\";\nimport AutorenewIcon from \"@mui/icons-material/Autorenew\";\nimport { format } from \"date-fns\";\nimport {\n  DataGridViewReact,\n  useUpwardTableModalSearchSafeMode,\n} from \"../../../../components/DataGridViewReact\";\nimport { useMutation, useQuery } from \"react-query\";\nimport { AuthContext } from \"../../../../components/AuthContext\";\nimport { Loading } from \"../../../../components/Loading\";\nimport {\n  codeCondfirmationAlert,\n  saveCondfirmationAlert,\n} from \"../../../../lib/confirmationAlert\";\n\nexport default function ReturnCheck() {\n\n  const { user, myAxios } = useContext(AuthContext);\n  const [mode, setMode] = useState(\"\");\n  const returnCheckComponentRef = useRef<any>(null);\n  const inputSearchRef = useRef<HTMLInputElement>(null);\n  const refNoRef = useRef<HTMLInputElement>(null);\n  const refDate = useRef<HTMLInputElement>(null);\n  const refExp = useRef<HTMLInputElement>(null);\n\n  const {\n    isLoading: isLoadingReturnChecksSave,\n    mutate: mutateReturnChecksSave,\n  } = useMutation({\n    mutationKey: \"save\",\n    mutationFn: async (variable: any) =>\n      await myAxios.post(`/task/accounting/return-checks/save`, variable, {\n        headers: {\n          Authorization: `Bearer ${user?.accessToken}`,\n        },\n      }),\n    onSuccess(res) {\n      if (res.data.success) {\n        resetReturnChecks();\n        return Swal.fire({\n          position: \"center\",\n          icon: \"success\",\n          title: res.data.message,\n          showConfirmButton: false,\n          timer: 1500,\n        });\n      }\n      Swal.fire({\n        position: \"center\",\n        icon: \"error\",\n        title: res.data.message,\n        showConfirmButton: false,\n        timer: 1500,\n      });\n    },\n  });\n\n  const {\n    isLoading: isLoadingReturnChecksUpdate,\n    mutate: mutateReturnChecksUpdate,\n  } = useMutation({\n    mutationKey: \"save\",\n    mutationFn: async (variable: any) =>\n      await myAxios.post(`/task/accounting/return-checks/update`, variable, {\n        headers: {\n          Authorization: `Bearer ${user?.accessToken}`,\n        },\n      }),\n    onSuccess(res) {\n      if (res.data.success) {\n        resetReturnChecks();\n        return Swal.fire({\n          position: \"center\",\n          icon: \"success\",\n          title: res.data.message,\n          showConfirmButton: false,\n          timer: 1500,\n        });\n      }\n      Swal.fire({\n        position: \"center\",\n        icon: \"error\",\n        title: res.data.message,\n        showConfirmButton: false,\n        timer: 1500,\n      });\n    },\n  });\n  const { isLoading: isLoadingReturnChecksID, refetch } = useQuery({\n    queryKey: \"generate-id\",\n    queryFn: async () =>\n      await myAxios.get(`/task/accounting/return-checks/generate-id`, {\n        headers: {\n          Authorization: `Bearer ${user?.accessToken}`,\n        },\n      }),\n      refetchOnWindowFocus:false,\n    onSuccess(res) {\n      wait(100).then(() => {\n        if (refNoRef.current) {\n          refNoRef.current.value = res.data.newRefCode;\n        }\n      });\n    },\n  });\n\n  const {\n    isLoading: isLoadingReturnChecksSearchSelectedSave,\n    mutate: mutateReturnChecksSearchSelectedSave,\n  } = useMutation({\n    mutationKey: \"selected-search\",\n    mutationFn: async (variable: any) =>\n      await myAxios.post(\n        `/task/accounting/return-checks/return-checks-search-selected`,\n        variable,\n        {\n          headers: {\n            Authorization: `Bearer ${user?.accessToken}`,\n          },\n        }\n      ),\n    onSuccess(res) {\n      const data1 = JSON.parse(res.data.data1);\n      const data2 = JSON.parse(res.data.data2);\n      if (data1.length > 0) {\n        if (refNoRef.current) {\n          refNoRef.current.value = data1[0].RC_No;\n        }\n        if (refDate.current) {\n          refDate.current.value = format(\n            new Date(data1[0].RC_Date),\n            \"yyyy-MM-dd\"\n          );\n        }\n        if (refExp.current) {\n          refExp.current.value = data1[0].Explanation;\n        }\n        const newSelectedCheck: any = [];\n        for (let index = 0; index < data1.length; index++) {\n          newSelectedCheck.push([\n            data1[0].ORNum,\n            format(new Date(data1[0].Date_Collect), \"MM/dd/yyy\"),\n            data1[0].SlipCode,\n            format(new Date(data1[0].Date_Deposit), \"MM/dd/yyy\"),\n            data1[0].Check_No,\n            format(new Date(data1[0].Check_Date), \"MM/dd/yyy\"),\n            formatNumber(\n              parseFloat(data1[0].Amount.toString().replace(/,/g, \"\"))\n            ),\n            data1[0].Bank,\n            data1[0].BankAccnt,\n            data1[0].Reason,\n            format(new Date(data1[0].Date_Return), \"MM/dd/yyy\"),\n          ]);\n        }\n        returnCheckComponentRef.current.refSelectedCheckToBeReturned.current.table.current.setData(\n          newSelectedCheck\n        );\n        if (returnCheckComponentRef.current.tssAmountRef.current) {\n          returnCheckComponentRef.current.tssAmountRef.current.value = `Total Amount:   ${formatNumber(\n            getSum(data1, \"Amount\")\n          )}`;\n        }\n\n        if (data2.length > 0) {\n          const newAccoutningEntry: any = [];\n          for (let index = 0; index < data2.length; index++) {\n            newAccoutningEntry.push([\n              data2[index].GL_Acct,\n              data2[index].cGL_Acct,\n              formatNumber(\n                parseFloat(data2[index].Debit.toString().replace(/,/g, \"\"))\n              ),\n              formatNumber(\n                parseFloat(data2[index].Credit.toString().replace(/,/g, \"\"))\n              ),\n              data2[index].ID_No,\n              data2[index].cID_No,\n              data2[index].Sub_Acct,\n              data2[index].cSub_Acct,\n              data2[index].Check_No,\n              data2[index].Check_Bank,\n              format(new Date(data2[index].Check_Date), \"MM/dd/yyy\"),\n              format(new Date(data2[index].Check_Return), \"MM/dd/yyy\"),\n              data2[index].Check_Reason,\n              data2[index].Check_No,\n              format(new Date(data2[index].Check_Deposit), \"MM/dd/yyy\"),\n              format(new Date(data2[index].Check_Collect), \"MM/dd/yyy\"),\n            ]);\n          }\n          returnCheckComponentRef.current.refAccountingEntry.current.table.current.setData(\n            newAccoutningEntry\n          );\n\n          if (\n            returnCheckComponentRef.current.refAccountingEntry.current.debitRef\n              .current\n          ) {\n            returnCheckComponentRef.current.refAccountingEntry.current.debitRef.current.value =\n              formatNumber(getSum(data2, \"Debit\"));\n          }\n\n          if (\n            returnCheckComponentRef.current.refAccountingEntry.current.creditRef\n              .current\n          ) {\n            returnCheckComponentRef.current.refAccountingEntry.current.creditRef.current.value =\n              formatNumber(getSum(data2, \"Credit\"));\n          }\n        }\n\n        setMode(\"update\");\n      }\n    },\n  });\n  const {\n    UpwardTableModalSearch: SearchReturnCheckUpwardTableModalSearch,\n    openModal: searchReturnCheckCreditOpenModal,\n    closeModal: searchReturnCheckCreditCloseModal,\n  } = useUpwardTableModalSearchSafeMode({\n    link: \"/task/accounting/return-checks/return-checks-search\",\n    column: [\n      { key: \"RefDate\", label: \"Ref. Date\", width: 120 },\n      { key: \"RefNo\", label: \"Ref. No.\", width: 100 },\n      { key: \"Explanation\", label: \"Explanation\", width: 200 },\n    ],\n    getSelectedItem: async (rowItm: any, _: any, rowIdx: any, __: any) => {\n      if (rowItm) {\n        wait(100).then(() => {\n          mutateReturnChecksSearchSelectedSave({ RefNo: rowItm[1] });\n        });\n        searchReturnCheckCreditCloseModal();\n      }\n    },\n  });\n\n  const handleOnSave = () => {\n    // tabRef.current.test();\n    if (refExp.current?.value === \"\") {\n      alert(\"Pease provide an explanation\");\n      refExp.current?.focus();\n      return;\n    }\n    const dgvSelChecks =\n      returnCheckComponentRef.current.refSelectedCheckToBeReturned.current.table.current.getData();\n    const dgvAccountingEntry =\n      returnCheckComponentRef.current.refAccountingEntry.current.table.current.getData();\n\n    if (dgvSelChecks.length <= 0) {\n      alert(\"Please provide return entry\");\n      return;\n    }\n    if (mode === \"add\") {\n      saveCondfirmationAlert({\n        isConfirm: () => {\n          mutateReturnChecksSave({\n            dgvSelChecks,\n            dgvAccountingEntry,\n            refNo: refNoRef.current?.value,\n            date: refDate.current?.value,\n            explanation: refExp.current?.value,\n            mode,\n          });\n        },\n      });\n    } else {\n      codeCondfirmationAlert({\n        isUpdate: true,\n        cb: (userCodeConfirmation) => {\n          mutateReturnChecksUpdate({\n            dgvSelChecks,\n            dgvAccountingEntry,\n            refNo: refNoRef.current?.value,\n            date: refDate.current?.value,\n            explanation: refExp.current?.value,\n            mode,\n            userCodeConfirmation,\n          });\n        },\n      });\n    }\n  };\n\n  function resetReturnChecks() {\n    setMode(\"\");\n    refetch();\n    if (refDate.current) {\n      refDate.current.value = format(new Date(), \"yyyy-MM-dd\");\n    }\n    if (refExp.current) {\n      refExp.current.value = \"Returned Checks\";\n    }\n\n    returnCheckComponentRef.current.refSelectCheck.current.table.current.resetCheckBox();\n    returnCheckComponentRef.current.refSelectCheck.current.table.current.setSelectedRow(\n      null\n    );\n    returnCheckComponentRef.current.refSelectCheck.current.table.current.setData(\n      []\n    );\n    returnCheckComponentRef.current.refSelectCheck.current.refetchList();\n\n    returnCheckComponentRef.current.refSelectedCheckToBeReturned.current.table.current.resetCheckBox();\n    returnCheckComponentRef.current.refSelectedCheckToBeReturned.current.table.current.setSelectedRow(\n      null\n    );\n    returnCheckComponentRef.current.refSelectedCheckToBeReturned.current.table.current.setData(\n      []\n    );\n\n    returnCheckComponentRef.current.refAccountingEntry.current.table.current.resetCheckBox();\n    returnCheckComponentRef.current.refAccountingEntry.current.table.current.setSelectedRow(\n      null\n    );\n    returnCheckComponentRef.current.refAccountingEntry.current.table.current.setData(\n      []\n    );\n\n    if (\n      returnCheckComponentRef.current.refAccountingEntry.current.debitRef\n        .current\n    ) {\n      returnCheckComponentRef.current.refAccountingEntry.current.debitRef.current.value =\n        \"0.00\";\n    }\n\n    if (\n      returnCheckComponentRef.current.refAccountingEntry.current.creditRef\n        .current\n    ) {\n      returnCheckComponentRef.current.refAccountingEntry.current.creditRef.current.value =\n        \"0.00\";\n    }\n\n    returnCheckComponentRef.current.tssAmountRef.current.value = `Total Amount:   0.00`;\n  }\n\n  return (\n    <>\n      {(isLoadingReturnChecksSave ||\n        isLoadingReturnChecksID ||\n        isLoadingReturnChecksSearchSelectedSave ||\n        isLoadingReturnChecksUpdate) && <Loading />}\n      <div\n        style={{\n          display: \"flex\",\n          flexDirection: \"column\",\n          width: \"100%\",\n          height: \"100%\",\n          flex: 1,\n          padding: \"5px\",\n          background: \"#F1F1F1\",\n        }}\n      >\n        <div\n          style={{\n            display: \"flex\",\n            alignItems: \"center\",\n            columnGap: \"5px\",\n            marginBottom: \"10px\",\n          }}\n        >\n          <TextInput\n            label={{\n              title: \"Search: \",\n              style: {\n                fontSize: \"12px\",\n                fontWeight: \"bold\",\n                width: \"50px\",\n              },\n            }}\n            input={{\n              className: \"search-input-up-on-key-down\",\n              type: \"search\",\n              onKeyDown: (e) => {\n                if (e.key === \"Enter\" || e.key === \"NumpadEnter\") {\n                  e.preventDefault();\n                  searchReturnCheckCreditOpenModal(e.currentTarget.value);\n                }\n              },\n              style: { width: \"500px\" },\n            }}\n            icon={<SearchIcon sx={{ fontSize: \"18px\" }} />}\n            onIconClick={(e) => {\n              e.preventDefault();\n              if (inputSearchRef.current)\n                searchReturnCheckCreditOpenModal(inputSearchRef.current.value);\n            }}\n            inputRef={inputSearchRef}\n          />\n          {mode === \"\" && (\n            <Button\n              sx={{\n                height: \"22px\",\n                fontSize: \"11px\",\n              }}\n              variant=\"contained\"\n              startIcon={<AddIcon sx={{ width: 15, height: 15 }} />}\n              id=\"entry-header-save-button\"\n              onClick={() => {\n                setMode(\"add\");\n              }}\n            >\n              New\n            </Button>\n          )}\n          {mode !== \"\" && (\n            <Button\n              sx={{\n                height: \"22px\",\n                fontSize: \"11px\",\n              }}\n              id=\"save-entry-header\"\n              color=\"primary\"\n              variant=\"contained\"\n              type=\"submit\"\n              startIcon={<SaveIcon sx={{ width: 15, height: 15 }} />}\n              onClick={handleOnSave}\n            >\n              Save\n            </Button>\n          )}\n          <Button\n            sx={{\n              height: \"22px\",\n              fontSize: \"11px\",\n            }}\n            disabled={mode === \"\"}\n            variant=\"contained\"\n            startIcon={<CloseIcon sx={{ width: 15, height: 15 }} />}\n            color=\"error\"\n            onClick={() => {\n              Swal.fire({\n                title: \"Are you sure?\",\n                text: \"You won't be able to revert this!\",\n                icon: \"warning\",\n                showCancelButton: true,\n                confirmButtonColor: \"#3085d6\",\n                cancelButtonColor: \"#d33\",\n                confirmButtonText: \"Yes, cancel it!\",\n              }).then((result) => {\n                if (result.isConfirmed) {\n                  wait(100).then(() => {\n                    resetReturnChecks();\n                  });\n                }\n              });\n            }}\n          >\n            Cancel\n          </Button>\n        </div>\n        <div\n          style={{\n            display: \"flex\",\n            width: \"100%\",\n            padding: \"10px 40px\",\n            flexDirection: \"column\",\n            rowGap: \"10px\",\n            border: \"1px solid #64748b\",\n            marginBottom: \"10px\",\n          }}\n        >\n          <div\n            style={{\n              display: \"flex\",\n              columnGap: \"200px\",\n            }}\n          >\n            <TextInput\n              label={{\n                title: \"Ref No.: \",\n                style: {\n                  fontSize: \"12px\",\n                  fontWeight: \"bold\",\n                  width: \"100px\",\n                },\n              }}\n              input={{\n                disabled: mode === \"\",\n                readOnly: true,\n                className: \"ref_no\",\n                type: \"text\",\n                style: { width: \"200px\" },\n                defaultValue: \"\",\n              }}\n              inputRef={refNoRef}\n              icon={<AutorenewIcon sx={{ fontSize: \"18px\" }} />}\n              onIconClick={(e) => {\n                e.preventDefault();\n                // RefetchDepositSlipCode();\n              }}\n            />\n            <TextInput\n              label={{\n                title: \"Date : \",\n                style: {\n                  fontSize: \"12px\",\n                  fontWeight: \"bold\",\n                  width: \"70px\",\n                },\n              }}\n              input={{\n                disabled: mode === \"\",\n                defaultValue: format(new Date(), \"yyyy-MM-dd\"),\n                className: \"date\",\n                type: \"date\",\n                style: { width: \"200px\" },\n              }}\n              inputRef={refDate}\n            />\n          </div>\n          <TextInput\n            label={{\n              title: \"Explanation : \",\n              style: {\n                fontSize: \"12px\",\n                fontWeight: \"bold\",\n                width: \"100px\",\n              },\n            }}\n            input={{\n              disabled: mode === \"\",\n              className: \"exp\",\n              type: \"text\",\n              style: { width: \"670px\" },\n              defaultValue: \"Returned Checks\",\n            }}\n            inputRef={refExp}\n          />\n        </div>\n        <TabPage ref={returnCheckComponentRef} mode={mode} />\n      </div>\n      <SearchReturnCheckUpwardTableModalSearch />\n    </>\n  );\n}\n\nconst TabPage = forwardRef(({ mode }: any, ref) => {\n  const [activeTab, setActiveTab] = useState(0);\n  const [buttonPosition, setButtonPosition] = useState<any>({});\n  const buttonsRef = useRef<Array<HTMLButtonElement | null>>([]);\n  const refSelectCheck = useRef<any>(null);\n  const refSelectedCheckToBeReturned = useRef<any>(null);\n  const refAccountingEntry = useRef<any>(null);\n  const tssAmountRef = useRef<HTMLInputElement>(null);\n  const chkFndRef = useRef<HTMLInputElement>(null);\n\n  const tabs = [\n    {\n      id: 0,\n      label: \"Select Check\",\n      content: (\n        <SelectCheck\n          ref={refSelectCheck}\n          refSelectedCheckToBeReturned={refSelectedCheckToBeReturned}\n          refAccountingEntry={refAccountingEntry}\n          tssAmountRef={tssAmountRef}\n          chkFndRef={chkFndRef}\n          mode={mode}\n        />\n      ),\n    },\n    {\n      id: 1,\n      label: \"Selected Check To Be Returned\",\n      content: <SelectedCheckToBeReturned ref={refSelectedCheckToBeReturned} />,\n    },\n    {\n      id: 2,\n      label: \"Accounting Entry\",\n      content: <AccountingEntry ref={refAccountingEntry} />,\n    },\n  ];\n\n  useEffect(() => {\n    setButtonPosition(buttonsRef.current[0]?.getBoundingClientRect());\n  }, []);\n\n  useImperativeHandle(ref, () => ({\n    test: () => {\n      refSelectCheck.current.test();\n      refSelectedCheckToBeReturned.current.test();\n      refAccountingEntry.current.test();\n    },\n    refSelectCheck,\n    refSelectedCheckToBeReturned,\n    refAccountingEntry,\n    tssAmountRef,\n  }));\n\n  return (\n    <div\n      style={{\n        flex: 1,\n        display: \"flex\",\n        flexDirection: \"column\",\n      }}\n    >\n      {/* Tab Buttons */}\n      <div style={{ display: \"flex\" }}>\n        {tabs.map((tab, index) => (\n          <button\n            ref={(el) => (buttonsRef.current[index] = el)}\n            key={tab.id}\n            onClick={(el) => {\n              setActiveTab(tab.id);\n              setButtonPosition(el.currentTarget.getBoundingClientRect());\n            }}\n            style={{\n              width: \"auto\",\n              fontSize: \"11px\",\n              padding: \"10px\",\n              cursor: \"pointer\",\n              backgroundColor: activeTab === tab.id ? \"white\" : \"transparent\",\n              color: activeTab === tab.id ? \"#0074cc\" : \"#000\",\n              border: \"none\",\n              borderRight:\n                activeTab === tab.id\n                  ? tab.id === 0\n                    ? \"none\"\n                    : \"1px solid #0074cc\"\n                  : tab.id === 0\n                  ? \"none\"\n                  : \"1px solid #64748b\",\n              borderLeft:\n                activeTab === tab.id\n                  ? tab.id === 2\n                    ? \"none\"\n                    : \"1px solid #0074cc\"\n                  : tab.id === 2\n                  ? \"none\"\n                  : \"1px solid #64748b\",\n              borderTop:\n                activeTab === tab.id\n                  ? \"1px solid #0074cc\"\n                  : \"1px solid #64748b\",\n\n              // borderBottom:\n              //   activeTab === tab.id ? \"2px solid #007BFF\" : \"2px solid #ccc\",\n              textTransform: \"uppercase\",\n              fontWeight: \"bold\",\n            }}\n          >\n            {tab.label}\n          </button>\n        ))}\n      </div>\n\n      {/* Render All Tab Contents */}\n      <div\n        style={{\n          padding: \"7px\",\n          flex: 1,\n          display: \"flex\",\n          // borderTop: \"2px solid #007BFF\",\n          position: \"relative\",\n          flexDirection: \"column\",\n        }}\n      >\n        <div\n          style={{\n            position: \"absolute\",\n            top: \"-2px\",\n            left: 0,\n            width: `${(buttonPosition?.left as number) - 5 || 0}px`,\n            height: \"1px\",\n            background: \"#64748b\",\n          }}\n        ></div>\n        <div\n          style={{\n            position: \"absolute\",\n            top: \"-2px\",\n            right: 0,\n            left: `${(buttonPosition?.right as number) - 5 || 0}px`,\n            height: \"1px\",\n            background: \"#64748b\",\n          }}\n        ></div>\n        {tabs.map((tab) => (\n          <div\n            key={tab.id}\n            style={{\n              display: activeTab === tab.id ? \"flex\" : \"none\", // Show only the active tab\n              flex: 1,\n              flexDirection: \"column\",\n            }}\n          >\n            {tab.content}\n          </div>\n        ))}\n        <div\n          style={{\n            display: \"flex\",\n            justifyContent: \"space-between\",\n            paddingTop: \"5px\",\n          }}\n        >\n          <input\n            ref={chkFndRef}\n            readOnly={true}\n            defaultValue={\"0.00\"}\n            style={{\n              textAlign: \"left\",\n              fontWeight: \"bold\",\n              width: \"200px\",\n              border: \"none\",\n            }}\n          />\n          <input\n            ref={tssAmountRef}\n            readOnly={true}\n            defaultValue={\"0.00\"}\n            style={{\n              textAlign: \"right\",\n              fontWeight: \"bold\",\n              width: \"200px\",\n              border: \"none\",\n            }}\n          />\n        </div>\n      </div>\n    </div>\n  );\n});\nconst  columnsSelectCheck = [\n  { key: \"Deposit_Slip\", label: \"Deposit_Slip\", width: 100 },\n  { key: \"Depo_Date\", label: \"Depo_Date\", width: 130 },\n  {\n    key: \"Check_No\",\n    label: \"Check_No\",\n    width: 200,\n  },\n  {\n    key: \"Check_Date\",\n    label: \"Check_Date\",\n    width: 200,\n  },\n  {\n    key: \"Amount\",\n    label: \"Amount\",\n    width: 200,\n  },\n  {\n    key: \"Bank\",\n    label: \"Bank\",\n    width: 200,\n  },\n  {\n    key: \"Official_Receipt\",\n    label: \"Official_Receipt\",\n    width: 100,\n  },\n  {\n    key: \"Date_OR\",\n    label: \"Date_OR\",\n    width: 100,\n  },\n  {\n    key: \"BankAccount\",\n    label: \"BankAccount\",\n    width: 0,\n    hide: true,\n  },\n  {\n    key: \"_formatted_date\",\n    label: \"_formatted_date\",\n    width: 0,\n    hide: true,\n  },\n]\nconst  columnsSelectedCheckToBeReturned = [\n  { key: \"ORNo\", label: \"OR No.\", width: 80 },\n  { key: \"ORDate\", label: \"OR Date\", width: 130 },\n  {\n    key: \"DepoSlip\",\n    label: \"Depo Slip\",\n    width: 130,\n  },\n  {\n    key: \"DepoDate\",\n    label: \"Depo Date\",\n    width: 130,\n  },\n  {\n    key: \"CheckNo\",\n    label: \"Check No.\",\n    width: 130,\n  },\n  {\n    key: \"CheckDate\",\n    label: \"Check Date\",\n    width: 130,\n  },\n  {\n    key: \"Amount\",\n    label: \"Amount\",\n    width: 130,\n  },\n  {\n    key: \"Bank\",\n    label: \"Bank/Branch\",\n    width: 100,\n  },\n  {\n    key: \"BankAccount\",\n    label: \"Bank Account\",\n    width: 200,\n  },\n  {\n    key: \"Reason\",\n    label: \"Reason\",\n    width: 200,\n  },\n  {\n    key: \"ReturnDate\",\n    label: \"Return Date\",\n    width: 200,\n  },\n]\nconst  columnsAccountingEntry = [\n  { key: \"Code\", label: \"Code\", width: 80 },\n  { key: \"AccountName\", label: \"Account Name\", width: 130 },\n  {\n    key: \"Debit\",\n    label: \"Debit\",\n    width: 130,\n  },\n  {\n    key: \"Credit\",\n    label: \"Credit\",\n    width: 130,\n  },\n  {\n    key: \"IDNo\",\n    label: \"ID No.\",\n    width: 130,\n  },\n  {\n    key: \"Identity\",\n    label: \"Identity\",\n    width: 130,\n  },\n  {\n    key: \"SubAcct\",\n    label: \"Sub Acct\",\n    width: 130,\n  },\n  {\n    key: \"SubAcctName\",\n    label: \"Sub Acct Name\",\n    width: 130,\n  },\n  {\n    key: \"CheckNo\",\n    label: \"Check No\",\n    width: 100,\n  },\n  {\n    key: \"Bank\",\n    label: \"Bank/Branch\",\n    width: 200,\n  },\n  {\n    key: \"CheckDate\",\n    label: \"Check Date\",\n    width: 100,\n  },\n  {\n    key: \"CheckReturn\",\n    label: \"Check Return\",\n    width: 100,\n  },\n  {\n    key: \"CheckReason\",\n    label: \"Check Reason\",\n    width: 200,\n  },\n  {\n    key: \"PK\",\n    label: \"PK\",\n    width: 100,\n  },\n  {\n    key: \"DateDeposit\",\n    label: \"Date Deposit\",\n    width: 100,\n  },\n  {\n    key: \"DateCollection\",\n    label: \"Date Collection\",\n    width: 100,\n  },\n]\nconst SelectCheck = forwardRef(\n  (\n    {\n      refAccountingEntry,\n      refSelectedCheckToBeReturned,\n      tssAmountRef,\n      chkFndRef,\n      mode,\n    }: any,\n    ref\n  ) => {\n    const { user, myAxios } = useContext(AuthContext);\n    const searchSelectCheckRef = useRef<HTMLInputElement>(null);\n    const table = useRef<any>(null);\n    const modalReturnCheckEntriesRef = useRef<any>(null);\n\n    const { isLoading: isLoadingCheckSelected, mutate: mutateCheckSelected } =\n      useMutation({\n        mutationKey: \"load-details\",\n        mutationFn: async (variable: any) =>\n          await myAxios.post(`/task/accounting/get-check-list`, variable, {\n            headers: {\n              Authorization: `Bearer ${user?.accessToken}`,\n            },\n          }),\n        onSuccess(res) {\n          table.current.setDataFormated(res.data.checkList);\n          if (chkFndRef.current) {\n            chkFndRef.current.value = `Check Found: Top ${res.data.checkList.length}`;\n          }\n        },\n      });\n    const mutateCheckSelectedRef = useRef<any>(mutateCheckSelected);\n    useEffect(() => {\n      mutateCheckSelectedRef.current({\n        search: searchSelectCheckRef.current?.value,\n      });\n    }, []);\n    useImperativeHandle(ref, () => ({\n      test: () => {\n        alert(\"qweqweqweqwe1\");\n      },\n      refetchList: () => {\n        mutateCheckSelectedRef.current({\n          search: \"\",\n        });\n      },\n      table,\n    }));\n\n    return (\n      <div\n        style={{\n          display: \"flex\",\n          flex: 1,\n          flexDirection: \"column\",\n          rowGap: \"10px\",\n        }}\n      >\n        {isLoadingCheckSelected && <Loading />}\n        <TextInput\n          label={{\n            title: \"Search: \",\n            style: {\n              fontSize: \"12px\",\n              fontWeight: \"bold\",\n              width: \"50px\",\n            },\n          }}\n          input={{\n            className: \"search-input-up-on-key-down\",\n            type: \"search\",\n            onKeyDown: (e) => {\n              if (e.key === \"Enter\" || e.key === \"NumpadEnter\") {\n                e.preventDefault();\n                mutateCheckSelectedRef.current({\n                  search: e.currentTarget.value,\n                });\n              }\n            },\n            onChange: (e) => {\n              if (e.target.value === \"\") {\n                mutateCheckSelectedRef.current({\n                  search: \"\",\n                });\n              }\n            },\n            style: { width: \"100%\" },\n          }}\n          icon={<SearchIcon sx={{ fontSize: \"18px\" }} />}\n          onIconClick={(e) => {\n            e.preventDefault();\n            if (searchSelectCheckRef.current)\n              mutateCheckSelectedRef.current({\n                search: searchSelectCheckRef.current?.value,\n              });\n          }}\n          inputRef={searchSelectCheckRef}\n        />\n        <div\n          style={{\n            display: \"flex\",\n            flex: 1,\n          }}\n        >\n          <DataGridViewReact\n            disbaleTable={mode === \"\"}\n            ref={table}\n            columns={columnsSelectCheck}\n            rows={[]}\n            containerStyle={{\n              height: \"auto\",\n              flex: 1,\n            }}\n            getSelectedItem={(rowItm: any) => {\n              if (rowItm) {\n                wait(100).then(() => {\n                  const selectedChecks =\n                    refSelectedCheckToBeReturned.current.getSelectedCheck();\n                  if (selectedChecks.includes(rowItm[2])) {\n                    alert(`Check ${rowItm[2]} already exist!`);\n                    table.current.setSelectedRow(null);\n                    table.current.resetCheckBox();\n                    return;\n                  }\n                  modalReturnCheckEntriesRef.current.showModal();\n                  modalReturnCheckEntriesRef.current.setRefs({\n                    checkNo: rowItm[2],\n                    amount: rowItm[4],\n                  });\n                  modalReturnCheckEntriesRef.current.mutateEntries({\n                    ORNo: rowItm[6],\n                    Account_No: rowItm[8],\n                  });\n                  modalReturnCheckEntriesRef.current.selectItem(rowItm);\n                });\n              } else {\n                wait(100).then(() => {});\n              }\n            }}\n            onKeyDown={(rowItm: any, rowIdx: any, e: any) => {\n              if (e.code === \"Delete\" || e.code === \"Backspace\") {\n                const isConfim = window.confirm(\n                  `Are you sure you want to delete?`\n                );\n                if (isConfim) {\n                  return;\n                }\n              }\n            }}\n          />\n        </div>\n        <ModalReturnCheckEntries\n          ref={modalReturnCheckEntriesRef}\n          handleConfirm={(\n            e: any,\n            itm: Array<any>,\n            state: any,\n            tableData: Array<any>,\n            columns: Array<any>,\n            ref: any\n          ) => {\n            if (state.lblTextRef !== state.refAmount) {\n              return alert(\"Debit must equal to Credit!\");\n            }\n\n            const retDebit = tableData;\n            const RetReason =\n              ref.refReturnReason.current?.selectedIndex === 2\n                ? \"AC\"\n                : ref.refReturnReason.current?.value;\n            const RetDateRet = ref.refDateReturned.current?.value;\n            const retCredit: any = [];\n            retCredit[0] = state.refAccountID;\n            retCredit[1] = state.refAccountName;\n            retCredit[2] = state.refAmount;\n            retCredit[3] = state.refAcronym;\n            retCredit[4] = state.refSubAccount;\n            retCredit[5] = state.refAccountId;\n\n            // SelectedCheckToBeReturned\n            const newSelectedData = [\n              ...refSelectedCheckToBeReturned.current.table.current.getData(),\n              [\n                itm[6],\n                itm[7],\n                itm[0],\n                itm[1],\n                itm[2],\n                itm[3],\n                itm[4],\n                itm[5],\n                itm[8],\n                RetReason,\n                format(new Date(RetDateRet), \"MM/dd/yyyy\"),\n              ],\n            ];\n\n            refSelectedCheckToBeReturned.current.table.current.setData(\n              newSelectedData\n            );\n\n            if (tssAmountRef.current) {\n              tssAmountRef.current.value = `Total Amount:   ${formatNumber(\n                newSelectedData.reduce((total: number, row: any) => {\n                  total += parseFloat(row[6].replace(/,/g, \"\"));\n                  return total;\n                }, 0)\n              )}`;\n            }\n            let newSelectedDataAccountingEntry: any = [];\n            for (let i = 0; i < retDebit.length; i++) {\n              newSelectedDataAccountingEntry = [\n                ...refAccountingEntry.current.table.current.getData(),\n                [\n                  retDebit[i][0],\n                  retDebit[i][1],\n                  retDebit[i][2],\n                  \"0.00\",\n                  retDebit[i][3],\n                  retDebit[i][4],\n                  retDebit[i][5],\n                  retDebit[i][6],\n                  itm[2],\n                  itm[5],\n                  itm[3],\n                  format(new Date(RetDateRet), \"MM/dd/yyyy\"),\n                  RetReason,\n                  itm[2],\n                  itm[1],\n                  itm[7],\n                ],\n              ];\n            }\n            newSelectedDataAccountingEntry = [\n              ...newSelectedDataAccountingEntry,\n              [\n                retCredit[0],\n                retCredit[1],\n                \"0.00\",\n                retCredit[2],\n                retCredit[5],\n                \"\",\n                retCredit[3],\n                retCredit[4],\n                itm[2],\n                itm[5],\n                itm[3],\n                format(new Date(RetDateRet), \"MM/dd/yyyy\"),\n                RetReason,\n                itm[2],\n                itm[1],\n                itm[7],\n              ],\n            ];\n\n            refAccountingEntry.current.table.current.setData(\n              newSelectedDataAccountingEntry\n            );\n\n            const reformatData = newSelectedDataAccountingEntry.map(\n              (itm: any) => {\n                return {\n                  debit: itm[2],\n                  credit: itm[3],\n                };\n              }\n            );\n            if (refAccountingEntry.current.debitRef.current) {\n              refAccountingEntry.current.debitRef.current.value = formatNumber(\n                getSum(reformatData, \"debit\")\n              );\n            }\n\n            if (refAccountingEntry.current.creditRef.current) {\n              refAccountingEntry.current.creditRef.current.value = formatNumber(\n                getSum(reformatData, \"credit\")\n              );\n            }\n\n            // AccountingEntry\n          }}\n          handleCancel={(e: any) => {\n            table.current.setSelectedRow(null);\n            table.current.resetCheckBox();\n          }}\n        />\n      </div>\n    );\n  }\n);\nconst SelectedCheckToBeReturned = forwardRef((props: any, ref) => {\n  const table = useRef<any>(null);\n\n  useImperativeHandle(ref, () => ({\n    test: () => {\n      alert(\"qweqweqweqwe2\");\n    },\n    table,\n    getSelectedCheck: () => {\n      const checkList = table.current.getData();\n      if (checkList.length > 0) {\n        return checkList.map((itm: any) => {\n          return itm[4];\n        });\n      }\n      return [];\n    },\n  }));\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        flex: 1,\n      }}\n    >\n      <DataGridViewReact\n        ref={table}\n        columns={columnsSelectedCheckToBeReturned}\n        rows={[]}\n        containerStyle={{\n          height: \"auto\",\n          flex: 1,\n        }}\n        getSelectedItem={(rowItm: any) => {\n          if (rowItm) {\n            wait(100).then(() => {});\n          } else {\n            wait(100).then(() => {});\n          }\n        }}\n        onKeyDown={(rowItm: any, rowIdx: any, e: any) => {\n          if (e.code === \"Delete\" || e.code === \"Backspace\") {\n            const isConfim = window.confirm(`Are you sure you want to delete?`);\n            if (isConfim) {\n              return;\n            }\n          }\n        }}\n      />\n    </div>\n  );\n});\nconst AccountingEntry = forwardRef((props: any, ref) => {\n  const table = useRef<any>(null);\n  const debitRef = useRef<HTMLInputElement>(null);\n  const creditRef = useRef<HTMLInputElement>(null);\n  useImperativeHandle(ref, () => ({\n    test: () => {\n      alert(\"qweqweqweqwe3\");\n    },\n    table,\n    debitRef,\n    creditRef,\n  }));\n\n  return (\n    <>\n      <div\n        style={{\n          display: \"flex\",\n          flex: 1,\n        }}\n      >\n        <DataGridViewReact\n          ref={table}\n          columns={columnsAccountingEntry}\n          rows={[]}\n          containerStyle={{\n            height: \"auto\",\n            flex: 1,\n          }}\n          getSelectedItem={(rowItm: any) => {\n            if (rowItm) {\n              wait(100).then(() => {});\n            } else {\n              wait(100).then(() => {});\n            }\n          }}\n          onKeyDown={(rowItm: any, rowIdx: any, e: any) => {\n            if (e.code === \"Delete\" || e.code === \"Backspace\") {\n              const isConfim = window.confirm(\n                `Are you sure you want to delete?`\n              );\n              if (isConfim) {\n                return;\n              }\n            }\n          }}\n        />\n      </div>\n      <div\n        style={{\n          display: \"flex\",\n          width: \"100%\",\n          justifyContent: \"flex-end\",\n          padding: \"5px 0\",\n          columnGap: \"5px\",\n        }}\n      >\n        <span\n          style={{ fontSize: \"13px\", fontWeight: \"bold\", marginRight: \"10px\" }}\n        >\n          Total:\n        </span>\n        <input\n          ref={debitRef}\n          readOnly={true}\n          defaultValue={\"0.00\"}\n          style={{\n            textAlign: \"right\",\n            fontWeight: \"bold\",\n            width: \"140px\",\n            border: \"none\",\n          }}\n        />\n        <input\n          ref={creditRef}\n          readOnly={true}\n          defaultValue={\"0.00\"}\n          style={{\n            textAlign: \"right\",\n            fontWeight: \"bold\",\n            width: \"140px\",\n            border: \"none\",\n          }}\n        />\n      </div>\n    </>\n  );\n});\nconst ModalReturnCheckEntries = forwardRef(\n  ({ handleConfirm, handleCancel, hasSelectedRow }: any, ref) => {\n    const { user, myAxios } = useContext(AuthContext);\n    const table = useRef<any>(null);\n    const [showModal, setShowModal] = useState(false);\n    const [handleDelayClose, setHandleDelayClose] = useState(false);\n    const [selectedItem, setSelectedItem] = useState([]);\n    const [blick, setBlick] = useState(false);\n    const [checkNo, setcheckNo] = useState(\"\");\n    // return details\n    const refReturnReason = useRef<HTMLSelectElement>(null);\n    const refDateReturned = useRef<HTMLInputElement>(null);\n\n    // credit entry\n    const refAccountName = useRef<HTMLInputElement>(null);\n    const refAmount = useRef<HTMLInputElement>(null);\n    const refAccountId = useRef<HTMLInputElement>(null);\n    const refSubAccount = useRef<HTMLInputElement>(null);\n\n    const refAccountID = useRef(\"\");\n    const refAcronym = useRef(\"\");\n\n    const lblTextRef = useRef<HTMLInputElement>(null);\n\n    const { isLoading: isLoadingEntries, mutate: mutateEntries } = useMutation({\n      mutationKey: \"load-details\",\n      mutationFn: async (variable: any) =>\n        await myAxios.post(\n          `/task/accounting//return-check/load-entries`,\n          variable,\n          {\n            headers: {\n              Authorization: `Bearer ${user?.accessToken}`,\n            },\n          }\n        ),\n      onSuccess(res) {\n        const dt1 = res.data.dt1;\n        const dt2 = res.data.dt2;\n        if (dt1.length > 0) {\n          if (refAccountId.current) {\n            refAccountId.current.value = dt1[0].IDNo;\n          }\n          if (refAccountName.current) {\n            refAccountName.current.value = dt1[0].Short;\n          }\n          if (refSubAccount.current) {\n            refSubAccount.current.value = \"Head Office\";\n          }\n          refAcronym.current = \"HO\";\n          refAccountID.current = dt1[0].Account_ID;\n        }\n\n        if (dt2.length > 0) {\n          const data = dt2.map((itm: any) => {\n            return {\n              CRCode: itm.CRCode,\n              CRTitle: itm.CRTitle,\n              Credit: itm.Credit,\n              CRLoanID: itm.CRLoanID,\n              CRLoanName: itm.CRLoanName,\n              SAcctCode: itm.SubAcct,\n              SAcctName: itm.ShortName,\n            };\n          });\n          table.current.setDataFormated(data);\n        }\n\n        if (lblTextRef.current)\n          lblTextRef.current.value = formatNumber(getSum(dt2, \"Debit\"));\n      },\n    });\n\n    const closeDelay = () => {\n      setHandleDelayClose(true);\n      setTimeout(() => {\n        setShowModal(false);\n        setHandleDelayClose(false);\n        handleCancel();\n      }, 100);\n    };\n\n    useImperativeHandle(ref, () => ({\n      showModal: () => {\n        setShowModal(true);\n      },\n      clsoeModal: () => {\n        setShowModal(false);\n      },\n      getRefs: () => {\n        const refs = {};\n        return refs;\n      },\n      selectItem: (itm: any) => {\n        setSelectedItem(itm);\n      },\n      setRefs: (props: any) => {\n        setcheckNo(props.checkNo);\n        wait(100).then(() => {\n          if (refAmount.current) refAmount.current.value = props.amount;\n          if (refReturnReason.current) refReturnReason.current.value = \"DAIF\";\n        });\n      },\n      mutateEntries: (variables: string) => {\n        mutateEntries(variables);\n      },\n      closeDelay,\n    }));\n\n    const columns = [\n      { key: \"CRCode\", label: \"Code\", width: 90 },\n      { key: \"CRTitle\", label: \"Account Name\", width: 200 },\n      {\n        key: \"Credit\",\n        label: \"Amount\",\n        width: 110,\n      },\n      {\n        key: \"CRLoanID\",\n        label: \"ID No\",\n        width: 200,\n      },\n      {\n        key: \"CRLoanName\",\n        label: \"Identity\",\n        width: 200,\n      },\n      {\n        key: \"SAcctCode\",\n        label: \"Sub Account\",\n        width: 100,\n      },\n      {\n        key: \"SAcctName\",\n        label: \"Sub Account Name\",\n        width: 200,\n      },\n    ];\n\n    return showModal ? (\n      <>\n        {isLoadingEntries && <Loading />}\n        <div\n          style={{\n            position: \"fixed\",\n            top: 0,\n            bottom: 0,\n            left: 0,\n            right: 0,\n            background: \"transparent\",\n            zIndex: \"88\",\n          }}\n          onClick={() => {\n            setBlick(true);\n            setTimeout(() => {\n              setBlick(false);\n            }, 250);\n          }}\n        ></div>\n        <div\n          style={{\n            height: blick ? \"402px\" : \"400px\",\n            width: blick ? \"60.3%\" : \"60%\",\n            border: \"1px solid #64748b\",\n            position: \"absolute\",\n            left: \"50%\",\n            top: \"35%\",\n            transform: \"translate(-50%, -75%)\",\n            display: \"flex\",\n            flexDirection: \"column\",\n            zIndex: handleDelayClose ? -100 : 100,\n            opacity: handleDelayClose ? 0 : 1,\n            transition: \"all 150ms\",\n            boxShadow: \"3px 6px 32px -7px rgba(0,0,0,0.75)\",\n          }}\n        >\n          <div\n            style={{\n              height: \"22px\",\n              background: \"white\",\n              display: \"flex\",\n              justifyContent: \"space-between\",\n              padding: \"5px\",\n              position: \"relative\",\n              alignItems: \"center\",\n            }}\n          >\n            <span style={{ fontSize: \"13px\", fontWeight: \"bold\" }}>\n              Return Detail and Accounting Entry (Check No.: {checkNo})\n            </span>\n            <button\n              className=\"btn-check-exit-modal\"\n              style={{\n                padding: \"0 5px\",\n                borderRadius: \"0px\",\n                background: \"white\",\n                color: \"black\",\n                height: \"22px\",\n                position: \"absolute\",\n                top: 0,\n                right: 0,\n              }}\n              onClick={() => {\n                closeDelay();\n              }}\n            >\n              <CloseIcon sx={{ fontSize: \"22px\" }} />\n            </button>\n          </div>\n          <div\n            style={{\n              flex: 1,\n              background: \"#F1F1F1\",\n              padding: \"5px\",\n              display: \"flex\",\n              flexDirection: \"column\",\n            }}\n          >\n            <div\n              style={{\n                display: \"flex\",\n                columnGap: \"5px\",\n                height: \"auto\",\n              }}\n            >\n              <div\n                style={{\n                  height: \"auto\",\n                  display: \"flex\",\n                  flexDirection: \"column\",\n                  padding: \"10px\",\n                  rowGap: \"20px\",\n                }}\n              >\n                <div\n                  style={{\n                    height: \"auto\",\n                    padding: \"10px\",\n                    display: \"flex\",\n                    width: \"100%\",\n                    border: \"1px solid #64748b\",\n                    position: \"relative\",\n                  }}\n                >\n                  <span\n                    style={{\n                      position: \"absolute\",\n                      top: \"-15px\",\n                      left: \"20px\",\n                      background: \"#F1F1F1\",\n                      padding: \"0 5px\",\n                      fontSize: \"14px\",\n                      fontWeight: \"bold\",\n                    }}\n                  >\n                    Return Detail\n                  </span>\n                  <div\n                    style={{\n                      display: \"flex\",\n                      columnGap: \"50px\",\n                    }}\n                  >\n                    <SelectInput\n                      containerStyle={{ width: \"100%\" }}\n                      label={{\n                        title: \"Return Reason : \",\n                        style: {\n                          fontSize: \"12px\",\n                          fontWeight: \"bold\",\n                          width: \"100px\",\n                        },\n                      }}\n                      selectRef={refReturnReason}\n                      select={{\n                        style: { flex: 1, height: \"22px\" },\n                        defaultValue: \"\",\n                      }}\n                      datasource={[\n                        { key: \"DAIF\", value: \"DAIF\" },\n                        { key: \"DAUD\", value: \"DAUD\" },\n                        { key: \"Account Closed\", value: \"Account Closed\" },\n                        { key: \"SPO\", value: \"SPO\" },\n                        { key: \"Account under Garnishment\", value: \"Account under Garnishment\" },\n                        { key: \"Unauthorized Signature\", value: \"Unauthorized Signature\" },\n                      ]}\n                      values={\"value\"}\n                      display={\"key\"}\n                    />\n                    {/* <TextInput\n                      label={{\n                        title: \"Return Reason : \",\n                        style: {\n                          fontSize: \"12px\",\n                          fontWeight: \"bold\",\n                          width: \"100px\",\n                        },\n                      }}\n                      input={{\n                        className: \"ref_no\",\n                        type: \"text\",\n                        style: { width: \"200px\" },\n                      }}\n                      inputRef={refReturnReason}\n                    /> */}\n                    <TextInput\n                      label={{\n                        title: \"Return Date : \",\n                        style: {\n                          fontSize: \"12px\",\n                          fontWeight: \"bold\",\n                          width: \"100px\",\n                        },\n                      }}\n                      input={{\n                        defaultValue: format(new Date(), \"yyyy-MM-dd\"),\n                        className: \"date\",\n                        type: \"date\",\n                        style: { width: \"200px\" },\n                      }}\n                      inputRef={refDateReturned}\n                    />\n                  </div>\n                </div>\n                <div\n                  style={{\n                    height: \"auto\",\n                    padding: \"10px\",\n                    display: \"flex\",\n                    width: \"100%\",\n                    border: \"1px solid #64748b\",\n                    position: \"relative\",\n                  }}\n                >\n                  <span\n                    style={{\n                      position: \"absolute\",\n                      top: \"-15px\",\n                      left: \"20px\",\n                      background: \"#F1F1F1\",\n                      padding: \"0 5px\",\n                      fontSize: \"14px\",\n                      fontWeight: \"bold\",\n                    }}\n                  >\n                    Credit Entry\n                  </span>\n                  <div\n                    style={{\n                      display: \"flex\",\n                      flexDirection: \"column\",\n                      rowGap: \"10px\",\n                      height: \"auto\",\n                    }}\n                  >\n                    <div\n                      style={{\n                        display: \"flex\",\n                        columnGap: \"50px\",\n                      }}\n                    >\n                      <TextInput\n                        label={{\n                          title: \"Account Name : \",\n                          style: {\n                            fontSize: \"12px\",\n                            fontWeight: \"bold\",\n                            width: \"100px\",\n                          },\n                        }}\n                        input={{\n                          readOnly: true,\n                          className: \"ref_no\",\n                          type: \"text\",\n                          style: { width: \"200px\" },\n                        }}\n                        inputRef={refAccountName}\n                      />\n                      <TextInput\n                        label={{\n                          title: \"Account ID : \",\n                          style: {\n                            fontSize: \"12px\",\n                            fontWeight: \"bold\",\n                            width: \"100px\",\n                          },\n                        }}\n                        input={{\n                          readOnly: true,\n                          className: \"account-id\",\n                          type: \"text\",\n                          style: { width: \"200px\" },\n                        }}\n                        inputRef={refAccountId}\n                      />\n                    </div>\n                    <div\n                      style={{\n                        display: \"flex\",\n                        columnGap: \"50px\",\n                      }}\n                    >\n                      <TextInput\n                        label={{\n                          title: \"Amount : \",\n                          style: {\n                            fontSize: \"12px\",\n                            fontWeight: \"bold\",\n                            width: \"100px\",\n                          },\n                        }}\n                        input={{\n                          readOnly: true,\n                          className: \"ref_no\",\n                          type: \"text\",\n                          style: { width: \"200px\" },\n                        }}\n                        inputRef={refAmount}\n                      />\n                      <TextInput\n                        label={{\n                          title: \"Sub Account : \",\n                          style: {\n                            fontSize: \"12px\",\n                            fontWeight: \"bold\",\n                            width: \"100px\",\n                          },\n                        }}\n                        input={{\n                          readOnly: true,\n                          className: \"sub-account\",\n                          type: \"text\",\n                          style: { width: \"200px\" },\n                        }}\n                        inputRef={refSubAccount}\n                      />\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div\n                style={{\n                  width: \"100px\",\n                  display: \"flex\",\n                  flexDirection: \"column\",\n                  alignItems: \"center\",\n                  justifyContent: \"center\",\n                  rowGap: \"20px\",\n                  height: \"auto\",\n                }}\n              >\n                <BlinkingButton\n                  style={{\n                    width: \"80px\",\n                    height: \"50px\",\n                    border: \"1px solid #153002\",\n                    fontSize: \"12px\",\n                    padding: 0,\n                    margin: 0,\n                    boxSizing: \"border-box\",\n                    background: \"#8fbc8b\",\n                    color: \"black\",\n                    display: \"flex\",\n                    flexDirection: \"column\",\n                    justifyContent: \"center\",\n                    alignItems: \"center\",\n                    fontFamily: \"arial\",\n                    cursor: \"pointer\",\n                    position: \"relative\",\n                  }}\n                  onClick={(e: any) => {\n                    const data = table.current.getData();\n                    const state = {\n                      refReturnReason: refReturnReason.current?.value,\n                      refDateReturned: refDateReturned.current?.value,\n                      refAccountName: refAccountName.current?.value,\n                      refAmount: refAmount.current?.value,\n                      refAccountId: refAccountId.current?.value,\n                      refSubAccount: refSubAccount.current?.value,\n                      refAccountID: refAccountID.current,\n                      refAcronym: refAcronym.current,\n                      lblTextRef: lblTextRef.current?.value,\n                    };\n                    const ref = {\n                      refReturnReason,\n                      refDateReturned,\n                      refAccountName,\n                      refAmount,\n                      refAccountId,\n                      refSubAccount,\n                      refAccountID,\n                      refAcronym,\n                      lblTextRef,\n                    };\n                    handleConfirm(e, selectedItem, state, data, columns, ref);\n                    closeDelay();\n                  }}\n                >\n                  <span\n                    style={{\n                      position: \"absolute\",\n                      top: \"2px\",\n                    }}\n                  >\n                    <svg\n                      xmlns=\"http://www.w3.org/2000/svg\"\n                      width=\"22px\"\n                      height=\"22px\"\n                      viewBox=\"0 0 24 24\"\n                      fill=\"none\"\n                    >\n                      <path\n                        d=\"M8.5 12.5L10.5 14.5L15.5 9.5\"\n                        stroke=\"white\"\n                        strokeWidth=\"1.5\"\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                      />\n                      <path\n                        d=\"M7 3.33782C8.47087 2.48697 10.1786 2 12 2C17.5228 2 22 6.47715 22 12C22 17.5228 17.5228 22 12 22C6.47715 22 2 17.5228 2 12C2 10.1786 2.48697 8.47087 3.33782 7\"\n                        stroke=\"#a5e15b\"\n                        strokeWidth=\"1.5\"\n                        strokeLinecap=\"round\"\n                      />\n                    </svg>\n                  </span>\n                  <span\n                    style={{\n                      position: \"absolute\",\n                      top: \"25px\",\n                    }}\n                  >\n                    Accept\n                  </span>\n                </BlinkingButton>\n                <BlinkingButton\n                  style={{\n                    width: \"80px\",\n                    height: \"50px\",\n                    border: \"1px solid #153002\",\n                    fontSize: \"12px\",\n                    padding: 0,\n                    margin: 0,\n                    boxSizing: \"border-box\",\n                    background: \"#8fbc8b\",\n                    color: \"black\",\n                    display: \"flex\",\n                    flexDirection: \"column\",\n                    justifyContent: \"center\",\n                    alignItems: \"center\",\n                    fontFamily: \"arial\",\n                    cursor: \"pointer\",\n                    position: \"relative\",\n                  }}\n                  onClick={(e: any) => {\n                    handleCancel(e);\n                    closeDelay();\n                  }}\n                >\n                  <span\n                    style={{\n                      position: \"absolute\",\n                      top: \"2px\",\n                    }}\n                  >\n                    <svg\n                      xmlns=\"http://www.w3.org/2000/svg\"\n                      fill=\"red\"\n                      width=\"21px\"\n                      height=\"21px\"\n                      viewBox=\"0 0 36 36\"\n                      version=\"1.1\"\n                      preserveAspectRatio=\"xMidYMid meet\"\n                    >\n                      <title>ban-line</title>\n                      <path\n                        className=\"clr-i-outline clr-i-outline-path-1\"\n                        d=\"M18,2A16,16,0,1,0,34,18,16,16,0,0,0,18,2ZM4,18A13.93,13.93,0,0,1,7.43,8.85L27.15,28.57A14,14,0,0,1,4,18Zm24.57,9.15L8.85,7.43A14,14,0,0,1,28.57,27.15Z\"\n                      />\n                      <rect\n                        x=\"0\"\n                        y=\"0\"\n                        width=\"36\"\n                        height=\"36\"\n                        fillOpacity=\"0\"\n                      />\n                    </svg>\n                  </span>\n                  <span\n                    style={{\n                      position: \"absolute\",\n                      top: \"25px\",\n                    }}\n                  >\n                    Cancel\n                  </span>\n                </BlinkingButton>\n              </div>\n            </div>\n            <div\n              style={{\n                flex: 1,\n              }}\n            >\n              <DataGridViewReact\n                ref={table}\n                columns={columns}\n                rows={[]}\n                containerStyle={{\n                  height: \"200px\",\n                  flex: 1,\n                }}\n                getSelectedItem={(rowItm: any) => {\n                  if (rowItm) {\n                    wait(100).then(() => {});\n                  } else {\n                    wait(100).then(() => {});\n                  }\n                }}\n                onKeyDown={(rowItm: any, rowIdx: any, e: any) => {\n                  if (e.code === \"Delete\" || e.code === \"Backspace\") {\n                    const isConfim = window.confirm(\n                      `Are you sure you want to delete?`\n                    );\n                    if (isConfim) {\n                      return;\n                    }\n                  }\n                }}\n              />\n            </div>\n            <input\n              style={{\n                width: \"100%\",\n                textAlign: \"right\",\n                fontWeight: \"bold\",\n                paddingRight: \"10px\",\n              }}\n              ref={lblTextRef}\n              defaultValue={\"0.00\"}\n              readOnly\n            />\n          </div>\n          <style>\n            {`\n              .btn-check-exit-modal:hover{\n                background:red !important;\n                color:white !important;\n              }\n            `}\n          </style>\n        </div>\n      </>\n    ) : null;\n  }\n);\nconst BlinkingButton = ({ onClick, style, children }: any) => {\n  const uniClass = `btn-${Date.now()}-${Math.random()\n    .toString(36)\n    .substr(2, 9)}`;\n  const [isBlinking, setIsBlinking] = useState(false);\n\n  const handleClick = (e: any) => {\n    setIsBlinking(true); // Start blinking\n    setTimeout(() => setIsBlinking(false), 200); // Stop blinking after 1 second\n    onClick(e);\n  };\n  return (\n    <>\n      <button\n        className={`${uniClass} ${isBlinking ? \"blinking\" : \"\"}`}\n        onClick={handleClick}\n        style={style}\n      >\n        {children}\n      </button>\n      <style>\n        {`\n        .${uniClass} {\n          padding: 10px 20px;\n          font-size: 16px;\n          color: white;\n          border: ${isBlinking ? \"2px solid #153002 !important\" : \"none \"};\n          border-radius: 5px;\n          cursor: pointer;\n          transition: background-color 0.3s ease;\n\n        }\n\n        .${uniClass}:hover {\n          background-color:rgb(145, 177, 142) !important;\n        }\n\n        /* Blink animation */\n        @keyframes blink {\n          0% {\n            opacity: 1;\n          }\n          50% {\n            opacity: 0.5;\n          }\n          100% {\n            opacity: 1;\n          }\n        }\n\n        .blinking {\n          animation: blink 0.5s linear infinite;\n        }\n                `}\n      </style>\n    </>\n  );\n};\nexport function formatNumber(num: number) {\n  return (num || 0).toLocaleString(\"en-US\", {\n    minimumFractionDigits: 2,\n    maximumFractionDigits: 2,\n  });\n}\nexport function getSum(data: Array<any>, key: string): number {\n  if (data.length <= 0) {\n    return 0;\n  }\n  return data.reduce((total: number, row: any) => {\n    total += parseFloat(row[key].toString().replace(/,/g, \"\"));\n    return total;\n  }, 0);\n}\n\n","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\"\n}), 'Add');\nexports.default = _default;","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 6v3l4-4-4-4v3c-4.42 0-8 3.58-8 8 0 1.57.46 3.03 1.24 4.26L6.7 14.8c-.45-.83-.7-1.79-.7-2.8 0-3.31 2.69-6 6-6zm6.76 1.74L17.3 9.2c.44.84.7 1.79.7 2.8 0 3.31-2.69 6-6 6v-3l-4 4 4 4v-3c4.42 0 8-3.58 8-8 0-1.57-.46-3.03-1.24-4.26z\"\n}), 'Autorenew');\nexports.default = _default;","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M17 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V7l-4-4zm-5 16c-1.66 0-3-1.34-3-3s1.34-3 3-3 3 1.34 3 3-1.34 3-3 3zm3-10H5V5h10v4z\"\n}), 'Save');\nexports.default = _default;"],"names":["ReturnCheck","_mutationFn","_mutationFn2","_queryFn","_mutationFn3","_getSelectedItem","_useContext","useContext","AuthContext","user","myAxios","_useState","useState","_useState2","_slicedToArray","mode","setMode","returnCheckComponentRef","useRef","inputSearchRef","refNoRef","refDate","refExp","_useMutation","useMutation","mutationKey","mutationFn","_x","_asyncToGenerator","_regeneratorRuntime","mark","_callee","variable","wrap","_context","prev","next","post","headers","Authorization","concat","accessToken","abrupt","sent","stop","apply","arguments","onSuccess","res","data","success","resetReturnChecks","Swal","position","icon","title","message","showConfirmButton","timer","isLoadingReturnChecksSave","isLoading","mutateReturnChecksSave","mutate","_useMutation2","_x2","_callee2","_context2","isLoadingReturnChecksUpdate","mutateReturnChecksUpdate","_useQuery","useQuery","queryKey","queryFn","_callee3","_context3","get","refetchOnWindowFocus","wait","then","current","value","newRefCode","isLoadingReturnChecksID","refetch","_useMutation3","_x3","_callee4","_context4","data1","JSON","parse","data2","length","RC_No","format","Date","RC_Date","Explanation","newSelectedCheck","index","push","ORNum","Date_Collect","SlipCode","Date_Deposit","Check_No","Check_Date","formatNumber","parseFloat","Amount","toString","replace","Bank","BankAccnt","Reason","Date_Return","refSelectedCheckToBeReturned","table","setData","tssAmountRef","getSum","newAccoutningEntry","GL_Acct","cGL_Acct","Debit","Credit","ID_No","cID_No","Sub_Acct","cSub_Acct","Check_Bank","Check_Return","Check_Reason","Check_Deposit","Check_Collect","refAccountingEntry","debitRef","creditRef","isLoadingReturnChecksSearchSelectedSave","mutateReturnChecksSearchSelectedSave","_useUpwardTableModalS","useUpwardTableModalSearchSafeMode","link","column","key","label","width","getSelectedItem","_x4","_x5","_x6","_x7","_callee5","rowItm","_","rowIdx","__","_context5","RefNo","searchReturnCheckCreditCloseModal","SearchReturnCheckUpwardTableModalSearch","UpwardTableModalSearch","searchReturnCheckCreditOpenModal","openModal","closeModal","refSelectCheck","resetCheckBox","setSelectedRow","refetchList","_jsxs","_Fragment","children","_jsx","Loading","style","display","flexDirection","height","flex","padding","background","alignItems","columnGap","marginBottom","TextInput","fontSize","fontWeight","input","className","type","onKeyDown","e","preventDefault","currentTarget","SearchIcon","sx","onIconClick","inputRef","Button","variant","startIcon","AddIcon","id","onClick","color","SaveIcon","_refExp$current","_refExp$current2","alert","focus","dgvSelChecks","getData","dgvAccountingEntry","saveCondfirmationAlert","isConfirm","_refNoRef$current","_refDate$current","_refExp$current3","refNo","date","explanation","codeCondfirmationAlert","isUpdate","cb","userCodeConfirmation","_refNoRef$current2","_refDate$current2","_refExp$current4","disabled","CloseIcon","text","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","result","isConfirmed","rowGap","border","readOnly","defaultValue","AutorenewIcon","TabPage","ref","forwardRef","_ref","_useState3","_useState4","activeTab","setActiveTab","_useState5","_useState6","buttonPosition","setButtonPosition","buttonsRef","chkFndRef","tabs","content","SelectCheck","SelectedCheckToBeReturned","AccountingEntry","useEffect","_buttonsRef$current$","getBoundingClientRect","useImperativeHandle","test","map","tab","el","cursor","backgroundColor","borderRight","borderLeft","borderTop","textTransform","top","left","right","justifyContent","paddingTop","textAlign","columnsSelectCheck","hide","columnsSelectedCheckToBeReturned","columnsAccountingEntry","_ref2","_mutationFn4","_useContext2","searchSelectCheckRef","modalReturnCheckEntriesRef","_useMutation4","_x8","_callee6","_context6","setDataFormated","checkList","isLoadingCheckSelected","mutateCheckSelected","mutateCheckSelectedRef","_searchSelectCheckRef","search","onChange","target","_searchSelectCheckRef2","DataGridViewReact","disbaleTable","columns","rows","containerStyle","getSelectedCheck","includes","showModal","setRefs","checkNo","amount","mutateEntries","ORNo","Account_No","selectItem","code","window","confirm","ModalReturnCheckEntries","handleConfirm","itm","state","tableData","_ref$refReturnReason$","_ref$refReturnReason$2","_ref$refDateReturned$","lblTextRef","refAmount","retDebit","RetReason","refReturnReason","selectedIndex","RetDateRet","refDateReturned","retCredit","refAccountID","refAccountName","refAcronym","refSubAccount","refAccountId","newSelectedData","_toConsumableArray","reduce","total","row","newSelectedDataAccountingEntry","i","reformatData","debit","credit","handleCancel","props","marginRight","_ref3","_mutationFn5","_useContext3","hasSelectedRow","_useState7","_useState8","setShowModal","_useState9","_useState10","handleDelayClose","setHandleDelayClose","_useState11","_useState12","selectedItem","setSelectedItem","_useState13","_useState14","blick","setBlick","_useState15","_useState16","setcheckNo","_useMutation5","_x9","_callee7","_context7","dt1","dt2","IDNo","Short","Account_ID","CRCode","CRTitle","CRLoanID","CRLoanName","SAcctCode","SubAcct","SAcctName","ShortName","isLoadingEntries","closeDelay","setTimeout","clsoeModal","getRefs","variables","bottom","zIndex","transform","opacity","transition","boxShadow","borderRadius","SelectInput","selectRef","select","datasource","values","BlinkingButton","margin","boxSizing","fontFamily","_refReturnReason$curr","_refDateReturned$curr","_refAccountName$curre","_refAmount$current","_refAccountId$current","_refSubAccount$curren","_lblTextRef$current","xmlns","viewBox","fill","d","stroke","strokeWidth","strokeLinecap","strokeLinejoin","version","preserveAspectRatio","x","y","fillOpacity","paddingRight","_ref4","uniClass","now","Math","random","substr","_useState17","_useState18","isBlinking","setIsBlinking","num","toLocaleString","minimumFractionDigits","maximumFractionDigits","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx"],"sourceRoot":""}