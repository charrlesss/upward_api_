{"version":3,"file":"static/js/8255.bd86d8b8.chunk.js","mappings":"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","sources":["components/DataGridViewReact.tsx","feautures/Admin/Task/Accounting/Collections.tsx","../node_modules/@mui/icons-material/AccountBox.js","../node_modules/@mui/icons-material/Forward.js","../node_modules/@mui/icons-material/LocalPrintshop.js","../node_modules/@mui/icons-material/Search.js"],"sourcesContent":["import {\r\n    useState, useRef,\r\n    forwardRef, useEffect,\r\n    useImperativeHandle,\r\n} from \"react\";\r\n\r\nexport const DataGridViewReact = forwardRef(({\r\n    columns,\r\n    rows = [],\r\n    height = \"400px\",\r\n    getSelectedItem,\r\n    onKeyDown,\r\n    disbaleTable = false,\r\n    isTableSelectable = true,\r\n    containerStyle\r\n}: any, ref) => {\r\n    const parentElementRef = useRef<any>(null)\r\n    const [data, setData] = useState([])\r\n    const [column, setColumn] = useState([])\r\n    const [selectedRow, setSelectedRow] = useState<any>(0)\r\n    const [selectedRowIndex, setSelectedRowIndex] = useState<any>(null)\r\n    const totalRowWidth = column.reduce((a: any, b: any) => a + b.width, 0)\r\n\r\n    useEffect(() => {\r\n        if (columns.length > 0) {\r\n            setColumn(columns.filter((itm: any) => !itm.hide))\r\n        }\r\n    }, [columns])\r\n\r\n    useEffect(() => {\r\n        if (rows.length > 0) {\r\n            setData(rows.map((itm: any) => {\r\n                return columns.map((col: any) => itm[col.key])\r\n            }))\r\n        }\r\n    }, [rows, columns])\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        checkNoIsExist: (checkNo: string) => {\r\n            return data.some((subArray: any) => subArray[2] === checkNo);\r\n        },\r\n        selectedRow: () => selectedRow,\r\n        getData: () => {\r\n            const newData = [...data];\r\n            return newData\r\n        },\r\n        setData: (newData: any) => {\r\n            setData(newData)\r\n        },\r\n        getColumns: () => {\r\n            return columns\r\n        },\r\n        resetTable: () => {\r\n            setData([])\r\n            setSelectedRow(0)\r\n        },\r\n        getSelectedRow: () => {\r\n            return selectedRowIndex\r\n        },\r\n        setSelectedRow: (value: any) => {\r\n            return setSelectedRowIndex(value)\r\n        },\r\n        _setSelectedRow: (value: any) => {\r\n            return setSelectedRow(value)\r\n        },\r\n        setDataFormated: (newData: any) => {\r\n            setData(newData.map((itm: any) => {\r\n                return columns.map((col: any) => itm[col.key])\r\n            }))\r\n        },\r\n        getDataFormatted: () => {\r\n            const newData = [...data];\r\n            const newDataFormatted = newData.map((itm: any) => {\r\n                let newItm = {\r\n                    Check_No: itm[0],\r\n                    Check_Date: itm[1],\r\n                    Check_Amnt: itm[2],\r\n                    BankName: itm[3],\r\n                    Branch: itm[4],\r\n                    Check_Remarks: itm[5],\r\n                    Deposit_Slip: itm[6],\r\n                    DateDeposit: itm[7],\r\n                    OR_No: itm[8],\r\n                    BankCode: itm[9]\r\n\r\n                }\r\n                return newItm\r\n            })\r\n\r\n            return newDataFormatted\r\n        }\r\n    }))\r\n\r\n    return (\r\n        <div\r\n            ref={parentElementRef}\r\n            style={{\r\n                width: \"100%\",\r\n                height,\r\n                overflow: \"auto\",\r\n                position: \"relative\",\r\n                pointerEvents: disbaleTable ? \"none\" : \"auto\",\r\n                border: disbaleTable ? \"2px solid #8c8f8e\" : '2px solid #c0c0c0',\r\n                boxShadow: `inset -2px -2px 0 #ffffff, \r\n                        inset 2px 2px 0 #808080`,\r\n                ...containerStyle,\r\n                background: \"#dcdcdc\"\r\n            }}\r\n        >\r\n            <div style={{ position: \"absolute\", width: `${totalRowWidth}px`, height: \"auto\" }}>\r\n                <table\r\n                    id=\"upward-cutom-table\"\r\n                    style={{\r\n                        borderCollapse: \"collapse\",\r\n                        width: \"100%\",\r\n                        position: \"relative\",\r\n                        background: \"#dcdcdc\"\r\n                    }}>\r\n                    <thead >\r\n                        <tr>\r\n                            <th style={{\r\n                                width: '30px',\r\n                                border: \"none\",\r\n                                position: \"sticky\",\r\n                                top: 0,\r\n                                zIndex: 1,\r\n                                background: \"#f0f0f0\",\r\n\r\n                            }}\r\n                            >\r\n\r\n                            </th>\r\n                            {\r\n                                column.map((colItm: any, idx: number) => {\r\n                                    return (\r\n                                        <th\r\n                                            key={idx}\r\n                                            style={{\r\n                                                width: colItm.width,\r\n                                                borderRight: \"1px solid #e2e8f0\",\r\n                                                position: \"sticky\",\r\n                                                top: 0,\r\n                                                zIndex: 1,\r\n                                                background: \"#f0f0f0\",\r\n                                                fontSize: \"12px\",\r\n                                                textAlign: \"left\",\r\n                                                padding: \"0px 5px\",\r\n\r\n                                            }}\r\n                                        >{colItm.label}</th>\r\n                                    )\r\n                                })\r\n                            }\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {\r\n                            data?.map((rowItm: any, rowIdx: number) => {\r\n\r\n                                return (\r\n                                    <tr key={rowIdx} className={`${(selectedRow === rowIdx) || (selectedRowIndex === rowIdx) ? \"selected\" : \"\"}`}>\r\n                                        <td\r\n                                            style={{\r\n                                                position: \"relative\",\r\n                                                border: \"none\",\r\n                                                cursor: \"pointer\",\r\n                                                background: selectedRow === rowIdx ? \"#0076d\" : \"\",\r\n                                                padding: 0,\r\n                                                margin: 0,\r\n\r\n                                            }}>\r\n                                            <div style={{\r\n                                                width: \"18px\",\r\n                                                height: \"18px\",\r\n                                                position: \"relative\",\r\n                                                display: \"flex\",\r\n                                                alignItems: \"center\",\r\n                                                justifyContent: \"center\"\r\n                                            }}>\r\n                                                <input\r\n                                                    style={{\r\n                                                        cursor: \"pointer\",\r\n                                                        margin: \"0px !important\",\r\n                                                        position: \"absolute\",\r\n                                                    }}\r\n                                                    readOnly={true}\r\n                                                    checked={selectedRowIndex === rowIdx}\r\n                                                    type=\"checkbox\"\r\n                                                    onClick={() => {\r\n                                                        if (!isTableSelectable) {\r\n                                                            return\r\n                                                        }\r\n                                                        setSelectedRowIndex(rowIdx)\r\n\r\n                                                        if (getSelectedItem) {\r\n                                                            getSelectedItem(rowItm, null, rowIdx, null)\r\n                                                        }\r\n                                                        setSelectedRow(null)\r\n\r\n                                                    }}\r\n                                                />\r\n\r\n                                            </div>\r\n\r\n                                        </td>\r\n\r\n                                        {\r\n                                            column.map((colItm: any, colIdx: number) => {\r\n                                                return (\r\n                                                    <td\r\n                                                        className={`td row-${rowIdx} col-${colIdx} `}\r\n                                                        tabIndex={0}\r\n                                                        onDoubleClick={() => {\r\n                                                            if (!isTableSelectable) {\r\n                                                                return\r\n                                                            }\r\n                                                            if (selectedRowIndex === rowIdx) {\r\n                                                                setSelectedRowIndex(null)\r\n\r\n                                                                if (getSelectedItem) {\r\n                                                                    getSelectedItem(null, null, rowIdx, null)\r\n                                                                }\r\n                                                            } else {\r\n\r\n                                                                setSelectedRowIndex(rowIdx)\r\n                                                                if (getSelectedItem) {\r\n                                                                    getSelectedItem(rowItm, null, rowIdx, null)\r\n                                                                }\r\n                                                            }\r\n                                                            setSelectedRow(null)\r\n                                                        }}\r\n                                                        onClick={() => {\r\n                                                            setSelectedRow(rowIdx)\r\n                                                        }}\r\n                                                        onKeyDown={(e) => {\r\n                                                            if (onKeyDown) {\r\n                                                                onKeyDown(rowItm, rowIdx, e)\r\n                                                            }\r\n                                                            if (e.key === \"ArrowUp\") {\r\n                                                                setSelectedRow((prev: any) => {\r\n                                                                    const index = Math.max(prev - 1, 0)\r\n                                                                    const td = document.querySelector(`.td.row-${index}`) as HTMLTableDataCellElement\r\n                                                                    if (td) {\r\n                                                                        td.focus()\r\n                                                                    }\r\n                                                                    return index\r\n                                                                });\r\n                                                            } else if (e.key === \"ArrowDown\") {\r\n                                                                setSelectedRow((prev: any) => {\r\n                                                                    const index = Math.min(prev + 1, data.length - 1)\r\n                                                                    const td = document.querySelector(`.td.row-${index}`) as HTMLTableDataCellElement\r\n                                                                    if (td) {\r\n                                                                        // td.focus()\r\n                                                                    }\r\n                                                                    return index\r\n                                                                });\r\n                                                            }\r\n                                                            if (e.code === 'Enter' || e.code === 'NumpadEnter') {\r\n                                                                e.preventDefault()\r\n\r\n                                                                if (!isTableSelectable) {\r\n                                                                    return\r\n                                                                }\r\n\r\n                                                                setSelectedRowIndex(rowIdx)\r\n                                                                if (getSelectedItem) {\r\n                                                                    getSelectedItem(rowItm, null, rowIdx, null)\r\n                                                                }\r\n                                                                setSelectedRow(null)\r\n                                                            }\r\n                                                        }}\r\n                                                        key={colIdx}\r\n\r\n                                                        style={{\r\n                                                            border: \"none\",\r\n                                                            fontSize: \"12px\",\r\n                                                            padding: \"0px 5px\",\r\n                                                            cursor: \"pointer\",\r\n                                                            height: \"20px\",\r\n                                                            userSelect: \"none\",\r\n\r\n                                                        }}\r\n                                                    >{\r\n                                                            <input\r\n                                                                readOnly={true}\r\n                                                                value={rowItm[colIdx]}\r\n                                                                style={{\r\n                                                                    width: colItm.width,\r\n                                                                    pointerEvents: \"none\",\r\n                                                                    border: \"none\",\r\n                                                                    background: \"transparent\",\r\n                                                                    userSelect: \"none\",\r\n                                                                    height: \"100%\",\r\n                                                                    textAlign: colItm.type === 'number' ? \"right\" : \"left\"\r\n\r\n                                                                }} />\r\n                                                        }</td>\r\n                                                )\r\n                                            })\r\n                                        }\r\n                                    </tr>\r\n                                )\r\n                            })\r\n                        }\r\n                    </tbody>\r\n                </table>\r\n                <style>\r\n\r\n                    {`\r\n             #upward-cutom-table tr td{\r\n               border-right:1px solid #f1f5f9 !important;\r\n             }\r\n          \r\n              #upward-cutom-table tr:nth-child(odd) td {\r\n                  background-color: #ffffff !important;\r\n              }\r\n              #upward-cutom-table tr:nth-child(even) td {\r\n                  background-color: #f5f5f5 !important;\r\n              }\r\n              #upward-cutom-table tr.selected td {\r\n                  background-color: #0076d7 !important;\r\n                  color: #ffffff !important;\r\n                  border-right:1px solid white !important;\r\n              }\r\n              \r\n               #upward-cutom-table tr.selected td input {\r\n                  color: #ffffff !important;\r\n              }\r\n  \r\n              `}\r\n                </style>\r\n            </div>\r\n        </div>\r\n    )\r\n})","import {\n  useContext, useState, useRef,\n  forwardRef, useEffect,\n  useImperativeHandle,\n} from \"react\";\nimport {\n  Button,\n  CircularProgress,\n  IconButton,\n} from \"@mui/material\";\nimport AddIcon from \"@mui/icons-material/Add\";\nimport { useMutation, useQuery } from \"react-query\";\nimport Swal from \"sweetalert2\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport SaveIcon from \"@mui/icons-material/Save\";\nimport { AuthContext } from \"../../../../components/AuthContext\";\nimport { wait } from \"../../../../lib/wait\";\nimport LoadingButton from \"@mui/lab/LoadingButton\";\nimport useQueryModalTable from \"../../../../hooks/useQueryModalTable\";\nimport { flushSync } from \"react-dom\";\nimport RestartAltIcon from \"@mui/icons-material/RestartAlt\";\nimport {\n  codeCondfirmationAlert,\n  saveCondfirmationAlert,\n} from \"../../../../lib/confirmationAlert\";\nimport PageHelmet from \"../../../../components/Helmet\";\nimport { SelectInput, TextAreaInput, TextFormatedInput, TextInput } from \"../../../../components/UpwardFields\";\nimport ForwardIcon from '@mui/icons-material/Forward';\nimport { Autocomplete } from \"./PettyCash\";\nimport AccountBoxIcon from '@mui/icons-material/AccountBox';\nimport { format } from 'date-fns'\nimport SearchIcon from '@mui/icons-material/Search';\nimport useExecuteQueryFromClient from \"../../../../lib/executeQueryFromClient\";\nimport LocalPrintshopIcon from '@mui/icons-material/LocalPrintshop';\nimport { DataGridViewReact } from \"../../../../components/DataGridViewReact\";\n\n\nexport const debitColumn = [\n  { key: \"Payment\", label: \"Payment\", flex: 1, width: 170 },\n  {\n    key: \"Amount\",\n    label: \"Amount\",\n    flex: 1,\n    width: 170,\n    type: \"number\",\n  },\n  { key: \"Check_No\", label: \"Check No\", width: 170 },\n  { key: \"Check_Date\", label: \"Check Date\", width: 170 },\n  { key: \"Bank_Branch\", label: \"Bank/Branch\", width: 300 },\n  { key: \"Acct_Code\", label: \"DR Code\", width: 170 },\n  { key: \"Acct_Title\", label: \"DR Title\", width: 300 },\n  { key: \"Deposit_Slip\", label: \"Deposit Slip\", width: 170 },\n  { key: \"Cntr\", label: \"Cntr\", width: 170 },\n  { key: \"Remarks\", label: \"Remarks\", width: 300 },\n  { key: \"TC\", label: \"TC\", width: 170 },\n  { key: \"Bank\", label: \"Bank\", hide: true },\n  { key: \"BankName\", label: \"BankName\", hide: true },\n];\nexport const creditColumn = [\n  { key: \"transaction\", label: \"Transaction\", width: 200 },\n  { key: \"amount\", label: \"Amount\", width: 150, type: \"number\" },\n  { key: \"Name\", label: \"Name\", width: 350 },\n  { key: \"Remarks\", label: \"Remarks\", width: 350 },\n  { key: \"VATType\", label: \"VAT Type\", width: 150 },\n  { key: \"invoiceNo\", label: \"Invoice No\", width: 250 },\n  { key: \"Code\", label: \"Code\", width: 150 },\n  { key: \"Title\", label: \"Title\", width: 350 },\n  { key: \"TC\", label: \"TC\", width: 200 },\n  { key: \"Account_No\", label: \"Accoount No.\", width: 180 },\n];\n\nconst queryKeyPaymentType = \"payment-type-code\";\nconst queryKeyNewORNumber = \"new-or-number\";\n\n\nexport default function Collection() {\n  const debitTable = useRef<any>(null)\n  const creditTable = useRef<any>(null)\n  const modalCheckRef = useRef<any>(null)\n\n  const [paymentType, setPaymentType] = useState('CSH')\n  const [totalDebit, setTotalDebit] = useState(0)\n  const [totalCredit, setTotalCredit] = useState(0)\n  const [collectionMode, setCollectionMode] = useState('')\n\n\n  // SEARCH COLLECTION\n  const searchRef = useRef<HTMLInputElement>(null)\n\n  // first layer fields\n  const ornoSubRef = useRef('')\n  const ornoRef = useRef<HTMLInputElement>(null)\n  const dateRef = useRef<HTMLInputElement>(null)\n  const pnClientRef = useRef<HTMLInputElement>(null)\n  const clientNameRef = useRef<HTMLInputElement>(null)\n  const IDNo = useRef('')\n\n  // second layer fields\n  const paymentTypeRef = useRef<HTMLSelectElement>(null)\n  const amountDebitRef = useRef<HTMLInputElement>(null)\n  const buttonCshSave = useRef<HTMLButtonElement>(null)\n  const buttonCheckSave = useRef<HTMLButtonElement>(null)\n  const buttonCheckList = useRef<HTMLButtonElement>(null)\n\n  // third layer fields\n  const transactionRef = useRef<HTMLSelectElement>(null)\n  const amountCreditRef = useRef<HTMLInputElement>(null)\n  const faoRef = useRef<HTMLInputElement>(null)\n  const remarksRef = useRef<HTMLTextAreaElement>(null)\n  const vatTypeRef = useRef<HTMLSelectElement>(null)\n  const invoiceRef = useRef<HTMLInputElement>(null)\n  const foaIDNoRef = useRef('')\n  const accCodeRef = useRef('')\n  const accTitleRef = useRef('')\n  const accTCRef = useRef('')\n\n\n  const searchModalInputRef = useRef<HTMLInputElement>(null)\n  const { myAxios, user } = useContext(AuthContext);\n  const { executeQueryToClient } = useExecuteQueryFromClient()\n\n  const disableFields = collectionMode === ''\n\n\n  const {\n    UpwardTableModalSearch,\n    openModal,\n    closeModal\n  } = useUpwardTableModalSearch({\n    column: [\n      { key: \"Check_No\", label: \"Check No\", width: 100 },\n      { key: \"Check_Date\", label: \"Check Date\", width: 100 },\n      {\n        key: \"Amount\",\n        label: \"Amount\",\n        width: 90,\n        type: \"number\",\n      },\n      {\n        key: \"Bank_Branch\",\n        label: \"Bank Branch\",\n        width: 200,\n      },\n      {\n        key: \"Remarks\",\n        label: \"Remarks\",\n        width: 200,\n        hide: true,\n      },\n    ],\n    query: (search: string) => {\n      if (pnClientRef.current) {\n        return `\n            SELECT \n               Check_No AS Check_No, \n               date_FORMAT(Check_Date,'%b. %d, %Y') AS Check_Date,\n               FORMAT(Check_Amnt, 2) AS Amount, \n              CONCAT(Bank, '/', Branch) AS Bank_Branch\n            FROM PDC \n            WHERE (\n              Check_No LIKE '%${search}%' \n              OR Bank  LIKE '%${search}%' \n              OR Branch LIKE '%${search}%') \n              AND (PNo = '${pnClientRef.current.value}' ) \n              AND (ORNum IS NULL OR ORNum = '')\n            ORDER BY PDC.Check_Date\n        `\n      }\n      return ``\n    },\n    getSelectedItem: async (rowItm: any, _: any, rowIdx: any, __: any) => {\n      if (rowItm) {\n        if (pnClientRef.current) {\n          const dt = await executeQueryToClient(`\n            SELECT \n              Check_No, \n              Check_Date, \n              Check_Amnt, \n              PDC.Bank, \n              Bank.Bank AS BName, \n              Branch, \n              Remarks \n            FROM PDC \n            LEFT JOIN Bank ON PDC.Bank = Bank.Bank_Code\n            WHERE PNo = '${pnClientRef.current.value}' AND Check_No = '${rowItm[0]}'`)\n          const checkDetails = dt?.data.data[0]\n          wait(100).then(() => {\n            if (modalCheckRef.current) {\n              if (modalCheckRef.current.checknoRef.current) {\n                modalCheckRef.current.checknoRef.current.value = checkDetails.Check_No\n              }\n              if (modalCheckRef.current.bankRef.current) {\n                modalCheckRef.current.bankRef.current.value = checkDetails.Bank\n              }\n              if (modalCheckRef.current.branchRef.current) {\n                modalCheckRef.current.branchRef.current.value = checkDetails.Branch\n              }\n              if (modalCheckRef.current.remarksRef.current) {\n                modalCheckRef.current.remarksRef.current.value = checkDetails.Remarks\n              }\n              if (modalCheckRef.current.checkdateRef.current) {\n                modalCheckRef.current.checkdateRef.current.value = checkDetails.Check_Date\n              }\n              if (modalCheckRef.current.amountRef.current) {\n                modalCheckRef.current.amountRef.current.value = checkDetails.Check_Amnt\n              }\n              if (modalCheckRef.current.bankRefName.current) {\n                modalCheckRef.current.bankRefName.current = checkDetails.BName\n              }\n\n            }\n          })\n\n          saveCheckDebit({\n            amountRef: { current: { value: checkDetails.Check_Amnt } },\n            checknoRef: { current: { value: checkDetails.Check_No } },\n            checkdateRef: { current: { value: checkDetails.Check_Date } },\n            branchRef: { current: { value: checkDetails.Branch } },\n            remarksRef: { current: { value: checkDetails.Remarks } },\n            bankRef: { current: { value: checkDetails.Bank } },\n            bankRefName: { current: checkDetails.BName },\n          }, false)\n          closeModal()\n          wait(250).then(() => {\n            buttonCheckList.current?.focus()\n          })\n\n        }\n\n      }\n    }\n  })\n\n  const {\n    isLoading: paymentTypeLoading,\n    data: transactionDesc\n  } = useQuery({\n    queryKey: queryKeyPaymentType,\n    queryFn: async () =>\n      await myAxios.get(`/task/accounting/get-transaction-code-title`, {\n        headers: {\n          Authorization: `Bearer ${user?.accessToken}`,\n        },\n      }),\n    refetchOnWindowFocus: false,\n  });\n\n  //CLIENT MODAL \n  const {\n    ModalComponent: ModalClientIDs,\n    openModal: openCliendIDsModal,\n    isLoading: isLoadingClientIdsModal,\n    closeModal: closeCliendIDsModal,\n  } = useQueryModalTable({\n    link: {\n      url: \"/task/accounting/search-pdc-policy-id\",\n      queryUrlName: \"searchPdcPolicyIds\",\n    },\n    columns: [\n      { field: \"Type\", headerName: \"Type\", width: 130 },\n      { field: \"IDNo\", headerName: \"ID No.\", width: 200 },\n      {\n        field: \"Name\",\n        headerName: \"Name\",\n        flex: 1,\n      },\n      {\n        field: \"ID\",\n        headerName: \"ID\",\n        flex: 1,\n        hide: true,\n      },\n    ],\n    queryKey: \"collection-polidy-ids\",\n    uniqueId: \"IDNo\",\n    responseDataKey: \"clientsId\",\n    onSelected: (selectedRowData, data) => {\n      wait(100).then(() => {\n        IDNo.current = selectedRowData[0].client_id\n        if (pnClientRef.current) {\n          pnClientRef.current.value = selectedRowData[0].IDNo\n        }\n        if (clientNameRef.current) {\n          clientNameRef.current.value = selectedRowData[0].Name ?? \"\"\n        }\n        paymentTypeRef.current?.focus()\n      })\n      closeCliendIDsModal();\n    },\n    searchRef: searchModalInputRef,\n  });\n\n  //CLIENT MODAL CREDIT\n  const {\n    ModalComponent: ModalCreditClientIDs,\n    openModal: openCreditCliendIDsModal,\n    isLoading: isLoadingCreditClientIdsModal,\n    closeModal: closeCreditCliendIDsModal,\n  } = useQueryModalTable({\n    link: {\n      url: \"/task/accounting/search-pdc-policy-id\",\n      queryUrlName: \"searchPdcPolicyIds\",\n    },\n    columns: [\n      { field: \"Type\", headerName: \"Type\", width: 130 },\n      { field: \"IDNo\", headerName: \"ID No.\", width: 200 },\n      {\n        field: \"Name\",\n        headerName: \"Name\",\n        flex: 1,\n      },\n      {\n        field: \"ID\",\n        headerName: \"ID\",\n        flex: 1,\n        hide: true,\n      },\n    ],\n    queryKey: \"collection-polidy-ids\",\n    uniqueId: \"IDNo\",\n    responseDataKey: \"clientsId\",\n    onSelected: (selectedRowData, data) => {\n      wait(100).then(() => {\n        foaIDNoRef.current = selectedRowData[0].IDNo\n        if (faoRef.current) {\n          faoRef.current.value = selectedRowData[0].Name ?? \"\"\n        }\n        remarksRef.current?.focus()\n      })\n      closeCreditCliendIDsModal();\n    },\n    searchRef: searchModalInputRef,\n  });\n\n  const {\n    isLoading: loadingCollectionDataSearch,\n    mutate: mutateCollectionDataSearch,\n  } = useMutation({\n    mutationKey: 'get-collection-data-search',\n    mutationFn: async (variables: any) =>\n      await myAxios.get(\n        `/task/accounting/get-collection-data-search?ORNo=${variables.ORNo}`,\n        {\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${user?.accessToken}`,\n          },\n        }\n      ),\n    onSuccess: (res) => {\n      const response = res as any;\n      const dataCollection = response.data.collection;\n\n      if (\n        ornoRef.current &&\n        dateRef.current &&\n        pnClientRef.current &&\n        clientNameRef.current\n      ) {\n        ornoRef.current.value = dataCollection[0].ORNo\n        dateRef.current.value = dataCollection[0].Date_OR\n        pnClientRef.current.value = dataCollection[0].ID_No\n        clientNameRef.current.value = dataCollection[0].Short\n      }\n\n      const debit: Array<any> = [];\n      const credit: Array<any> = [];\n\n\n\n      for (let i = 0; i <= dataCollection.length - 1; i++) {\n        if (\n          dataCollection[i].Payment === 'Check'\n        ) {\n          debit.push({\n            Payment: dataCollection[i].Payment,\n            Amount: dataCollection[i].Debit,\n            Check_No: dataCollection[i].Check_No,\n            Check_Date: format(new Date(dataCollection[i].Check_Date), 'yyyy-MM-dd'),\n            Bank_Branch: dataCollection[i].Bank,\n            Acct_Code: dataCollection[i].DRCode,\n            Acct_Title: dataCollection[i].DRTitle,\n            Deposit_Slip: dataCollection[i].SlipCode,\n            Cntr: \"\",\n            Remarks: dataCollection[i].DRRemarks,\n            TC: \"CHK\",\n            Bank: dataCollection[i].Bank_Code,\n            BankName: dataCollection[i].BankName,\n          });\n\n        }\n\n        if (dataCollection[i].Payment === 'Cash') {\n          debit.push({\n            Payment: dataCollection[i].Payment,\n            Amount: dataCollection[i].Debit,\n            Check_No: \"\",\n            Check_Date: \"\",\n            Bank_Branch: \"\",\n            Acct_Code: dataCollection[i].DRCode,\n            Acct_Title: dataCollection[i].DRTitle,\n            Deposit_Slip: dataCollection[i].SlipCode,\n            Cntr: \"\",\n            Remarks: \"\",\n            TC: \"CSH\",\n            Bank: \"\",\n            BankName: \"\",\n          });\n        }\n\n        if (\n          dataCollection[i].Purpose !== \"\" &&\n          dataCollection[i].Credit !== \"0\" &&\n          dataCollection[i].CRCode !== \"\" &&\n          dataCollection[i].CRTitle !== \"\" &&\n          dataCollection[i].CRLoanID !== \"\" &&\n          dataCollection[i].CRLoanName !== \"\" &&\n          dataCollection[i].CRVatType !== \"\" &&\n          dataCollection[i].CRInvoiceNo !== \"\"\n        ) {\n          credit.push({\n            temp_id: `${i}`,\n            transaction: dataCollection[i].Purpose,\n            amount: dataCollection[i].Credit,\n            Remarks: dataCollection[i].CRRemarks,\n            Code: dataCollection[i].CRCode,\n            Title: dataCollection[i].CRTitle,\n            TC: dataCollection[i].CRTitle,\n            Account_No: dataCollection[i].CRLoanID,\n            Name: dataCollection[i].CRLoanName,\n            VATType: dataCollection[i].CRVATType,\n            invoiceNo: dataCollection[i].CRInvoiceNo,\n          });\n        }\n      }\n\n      debitTable.current.setDataFormated(debit)\n      creditTable.current.setDataFormated(credit)\n      setTotalDebit(debit.reduce((sum: any, subArray: any) => sum + parseFloat(subArray.Amount.replace(/,/g, '')), 0)\n      )\n      setTotalCredit(credit.reduce((sum: any, subArray: any) => sum + parseFloat(subArray.amount.replace(/,/g, '')), 0)\n      )\n      setCollectionMode('update')\n      closeModalSearchCollection();\n    },\n  });\n\n  const {\n    ModalComponent: ModalSearchCollection,\n    openModal: openModalSearchCollection,\n    closeModal: closeModalSearchCollection,\n    isLoading: isLoadingModalSearchCollection,\n  } = useQueryModalTable({\n    link: {\n      url: \"/task/accounting/search-collection\",\n      queryUrlName: \"searchCollectionInput\",\n    },\n    columns: [\n      { field: \"Date\", headerName: \"OR Date\", width: 170 },\n      { field: \"ORNo\", headerName: \"OR No.\", width: 200 },\n      { field: \"Name\", headerName: \"Name\", flex: 1 },\n    ],\n    queryKey: \"collection-search\",\n    uniqueId: \"ORNo\",\n    responseDataKey: \"collection\",\n    onSelected: (selectedRowData, data) => {\n      resetCredit(false)\n      resetDebit(false)\n      mutateCollectionDataSearch({ ORNo: selectedRowData[0].ORNo });\n    },\n    searchRef: searchModalInputRef,\n  });\n\n  const { isLoading: NewORNoLoading, refetch: refetchNewOR } = useQuery({\n    queryKey: queryKeyNewORNumber,\n    queryFn: async () =>\n      await myAxios.get(`/task/accounting/get-new-or-number`, {\n        headers: {\n          Authorization: `Bearer ${user?.accessToken}`,\n        },\n      }),\n    refetchOnWindowFocus: false,\n    onSuccess: (res) => {\n      const response = res as any;\n      wait(100).then(() => {\n        ornoSubRef.current = response.data?.ORNo[0].collectionID\n        if (ornoRef.current) {\n          ornoRef.current.value = response.data?.ORNo[0].collectionID\n        }\n      })\n    },\n  });\n\n  const {\n    mutate,\n    isLoading: loadingAddNew,\n  } = useMutation({\n    mutationKey: \"add-update-collection\",\n    mutationFn: async (variables: any) => {\n      if (collectionMode === 'update') {\n        delete variables.mode;\n        return await myAxios.post(\n          \"/task/accounting/update-collection\",\n          variables,\n          {\n            headers: {\n              Authorization: `Bearer ${user?.accessToken}`,\n            },\n          }\n        );\n      }\n      delete variables.mode;\n      return await myAxios.post(\"/task/accounting/add-collection\", variables, {\n        headers: {\n          Authorization: `Bearer ${user?.accessToken}`,\n        },\n      });\n    },\n    onSuccess: (res) => {\n      if (res.data.success) {\n        resetCollection()\n        return Swal.fire({\n          position: \"center\",\n          icon: \"success\",\n          title: res.data.message,\n          showConfirmButton: false,\n          timer: 1500,\n        });\n      }\n      Swal.fire({\n        position: \"center\",\n        icon: \"error\",\n        title: res.data.message,\n        showConfirmButton: false,\n        timer: 1500,\n      });\n    },\n  });\n\n  const { mutate: mutataPrint, isLoading: isLoadingPrint } = useMutation({\n    mutationKey: \"on-print\",\n    mutationFn: async (variables: any) => {\n      return await myAxios.post(\"/task/accounting/on-print\", variables, {\n        headers: {\n          Authorization: `Bearer ${user?.accessToken}`,\n        },\n      });\n    },\n    onSuccess: (res) => {\n      if (res.data.success) {\n        printOR(res.data);\n      }\n    },\n  });\n  function resetCollection() {\n    wait(100).then(() => {\n      refetchNewOR();\n      resetFields()\n      resetCredit(false)\n      resetDebit(false)\n      debitTable.current?.setData([])\n      creditTable.current?.setData([])\n      pnClientRef.current?.focus()\n      setTotalCredit(0)\n      setTotalDebit(0)\n    })\n  }\n  async function saveCashDebit(value: string, paymentType: string) {\n    const amount = parseFloat(value.replace(/,/g, ''))\n    if (isNaN(amount) || amount <= 0) {\n      amountDebitRef.current?.focus()\n      return alert('Please provide amount!')\n    }\n    const getSelectedRow = debitTable.current.getSelectedRow()\n    const debitTableData = debitTable.current.getData()\n\n\n    if (getSelectedRow !== null) {\n      debitTableData[getSelectedRow][1] = amount.toLocaleString(\"en-US\", {\n        minimumFractionDigits: 2,\n        maximumFractionDigits: 2,\n      })\n      debitTable.current.setData(debitTableData)\n      debitTable.current.setSelectedRow(null)\n      setTotalDebit(\n        debitTableData.reduce((sum: any, subArray: any) => sum + parseFloat(subArray[1].replace(/,/g, '')), 0)\n      )\n    } else {\n      const dd = await executeQueryToClient(`select * from Transaction_Code LEFT JOIN Chart_Account ON Transaction_Code.Acct_Code = Chart_Account.Acct_Code WHERE Code = 'CSH'`)\n\n      const data = {\n        Payment: \"Cash\",\n        Amount: amount.toLocaleString(\"en-US\", {\n          minimumFractionDigits: 2,\n          maximumFractionDigits: 2,\n        }),\n        Check_No: \"\",\n        Check_Date: \"\",\n        Bank_Branch: \"\",\n        Acct_Code: dd.data?.data[0].Acct_Code,\n        Acct_Title: dd.data?.data[0].Acct_Title,\n        Deposit_Slip: \"\",\n        Cntr: \"\",\n        Remarks: \"\",\n        TC: paymentType,\n        Bank: \"\",\n        BankName: \"\",\n      };\n      const newDataFormatted = debitTableData.map((itm: any) => {\n        let newItm = {\n          Payment: itm[0],\n          Amount: itm[1],\n          Check_No: itm[2],\n          Check_Date: itm[3],\n          Bank_Branch: itm[4],\n          Acct_Code: itm[5],\n          Acct_Title: itm[6],\n          Deposit_Slip: itm[7],\n          Cntr: itm[8],\n          Remarks: itm[9],\n          TC: itm[10],\n          Bank: itm[11],\n          BankName: itm[12],\n        }\n        return newItm\n      })\n      const newDataTable = [...newDataFormatted, data]\n      debitTable.current.setDataFormated(newDataTable)\n      setTotalDebit(\n        newDataTable.reduce((sum: any, subArray: any) => sum + parseFloat(subArray.Amount.replace(/,/g, '')), 0)\n      )\n    }\n\n\n\n    if (amountDebitRef.current) {\n      amountDebitRef.current.value = ''\n      amountDebitRef.current?.focus()\n    }\n\n  }\n  function saveCheckDebit(refs: any, autoClose = true) {\n\n    wait(100).then(async () => {\n      // const refs = modalCheckRef.current.getRefs()\n\n      const amount = parseFloat(refs.amountRef.current?.value.replace(/,/g, ''))\n      const checkno = refs.checknoRef.current?.value\n      const checkdate = refs.checkdateRef.current?.value\n      const branch = refs.branchRef.current?.value\n      const remarks = refs.remarksRef.current?.value\n      const bank = refs.bankRef.current?.value\n      const bankRefName = refs.bankRefName.current\n      const getSelectedRow = debitTable.current.getSelectedRow()\n\n\n\n      if (debitTable.current.checkNoIsExist(checkno) && getSelectedRow === null) {\n        return alert(`check no is already exist`)\n      }\n\n\n      if (getSelectedRow !== null) {\n        const debitTableData = debitTable.current.getData()\n        debitTableData[getSelectedRow][1] = amount.toLocaleString(\"en-US\", {\n          minimumFractionDigits: 2,\n          maximumFractionDigits: 2,\n        })\n        debitTableData[getSelectedRow][2] = checkno\n        debitTableData[getSelectedRow][3] = checkdate\n        debitTableData[getSelectedRow][4] = branch\n        debitTableData[getSelectedRow][9] = remarks\n        debitTableData[getSelectedRow][11] = bank\n        debitTableData[getSelectedRow][12] = bankRefName\n        debitTable.current.setData(debitTableData)\n        debitTable.current.setSelectedRow(null)\n        setTotalDebit(\n          debitTableData.reduce((sum: any, subArray: any) => sum + parseFloat(subArray[1].replace(/,/g, '')), 0)\n        )\n      } else {\n        const dd = await executeQueryToClient(`select * from Transaction_Code LEFT JOIN Chart_Account ON Transaction_Code.Acct_Code = Chart_Account.Acct_Code WHERE Code = 'CHK'`)\n        const data = {\n          Payment: \"Check\",\n          Amount: amount.toLocaleString(\"en-US\", {\n            minimumFractionDigits: 2,\n            maximumFractionDigits: 2,\n          }),\n          Check_No: checkno,\n          Check_Date: checkdate,\n          Bank_Branch: branch,\n          Acct_Code: dd.data?.data[0].Acct_Code,\n          Acct_Title: dd.data?.data[0].Acct_Title,\n          Deposit_Slip: \"\",\n          Cntr: \"\",\n          Remarks: remarks,\n          TC: paymentType,\n          Bank: bank,\n          BankName: bankRefName,\n        };\n        const debitTableData = debitTable.current.getData()\n        const newDataFormatted = debitTableData.map((itm: any) => {\n          let newItm = {\n            Payment: itm[0],\n            Amount: itm[1],\n            Check_No: itm[2],\n            Check_Date: itm[3],\n            Bank_Branch: itm[4],\n            Acct_Code: itm[5],\n            Acct_Title: itm[6],\n            Deposit_Slip: itm[7],\n            Cntr: itm[8],\n            Remarks: itm[9],\n            TC: itm[10],\n            Bank: itm[11],\n            BankName: itm[12],\n          }\n          return newItm\n        })\n        const newDataTable = [...newDataFormatted, data]\n        debitTable.current.setDataFormated(newDataTable)\n        setTotalDebit(\n          newDataTable.reduce((sum: any, subArray: any) => sum + parseFloat(subArray.Amount.replace(/,/g, '')), 0)\n        )\n      }\n\n      if (autoClose) {\n        modalCheckRef.current.closeDelay()\n      }\n    })\n  }\n  async function saveCredit() {\n    if ((transactionRef.current && transactionRef.current.value === '') ||\n      (transactionRef.current && transactionRef.current.value === null) ||\n      (transactionRef.current && transactionRef.current.value === undefined)) {\n      transactionRef.current.focus()\n      return alert(`Please select a transaction!`)\n    }\n    if (transactionRef.current) {\n      const dd = await executeQueryToClient(`SELECT * FROM transaction_code where Description = \"${transactionRef.current.value}\"`)\n      if (dd.data.data?.length <= 0) {\n        return alert('Transaction not yet defined!')\n      }\n    }\n    if (amountCreditRef.current) {\n      if (isNaN(parseFloat(amountCreditRef.current.value.replace(/,/g, ''))) || parseFloat(amountCreditRef.current.value.replace(/,/g, '')) <= 0) {\n        amountCreditRef.current.focus()\n        return alert('Please provide amount!')\n      }\n    }\n    if (invoiceRef.current && invoiceRef.current.value === '') {\n      invoiceRef.current.focus()\n      return alert('Please provide invoice!')\n    }\n    if (foaIDNoRef.current === '') {\n      faoRef.current?.focus()\n      return alert('Please provide usage!')\n    }\n\n    const getSelectedRow = creditTable.current.getSelectedRow()\n\n    if (getSelectedRow !== null) {\n      const creditTableData = creditTable.current.getData()\n      creditTableData[getSelectedRow][0] = transactionRef.current?.value\n      creditTableData[getSelectedRow][1] = amountCreditRef.current?.value\n      creditTableData[getSelectedRow][2] = faoRef.current?.value\n      creditTableData[getSelectedRow][3] = remarksRef.current?.value\n      creditTableData[getSelectedRow][4] = vatTypeRef.current?.value\n      creditTableData[getSelectedRow][5] = invoiceRef.current?.value\n      creditTableData[getSelectedRow][6] = accCodeRef.current\n      creditTableData[getSelectedRow][7] = accTitleRef.current\n      creditTableData[getSelectedRow][8] = accTCRef.current\n      creditTableData[getSelectedRow][9] = foaIDNoRef.current\n\n      creditTable.current.setData(creditTableData)\n      creditTable.current.setSelectedRow(null)\n      setTotalCredit(\n        creditTableData.reduce((sum: any, subArray: any) => sum + parseFloat(subArray[1].replace(/,/g, '')), 0)\n      )\n    } else {\n      const data = {\n        transaction: transactionRef.current?.value,\n        amount: amountCreditRef.current?.value,\n        Name: faoRef.current?.value,\n        Remarks: remarksRef.current?.value,\n        VATType: vatTypeRef.current?.value,\n        invoiceNo: invoiceRef.current?.value,\n        Code: accCodeRef.current,\n        Title: accTitleRef.current,\n        TC: accTCRef.current,\n        Account_No: foaIDNoRef.current,\n      }\n\n      const creditTableData = creditTable.current.getData()\n      const newDataFormatted = creditTableData.map((itm: any) => {\n        let newItm = {\n          transaction: itm[0],\n          amount: itm[1],\n          Name: itm[2],\n          Remarks: itm[3],\n          VATType: itm[4],\n          invoiceNo: itm[5],\n          Code: itm[6],\n          Title: itm[7],\n          TC: itm[8],\n          Account_No: itm[9],\n        }\n        return newItm\n      })\n      const newCreditTableData = [...newDataFormatted, data]\n      creditTable.current.setDataFormated(newCreditTableData)\n      setTotalCredit(\n        newCreditTableData.reduce((sum: any, subArray: any) => sum + parseFloat(subArray.amount.replace(/,/g, '')), 0)\n      )\n    }\n\n    if (vatTypeRef.current && vatTypeRef.current.value === 'VAT') {\n\n      const dd = await executeQueryToClient(`select chart_account.Acct_Code,chart_account.Acct_Title from transaction_code LEFT JOIN chart_account ON transaction_code.Acct_Code = chart_account.Acct_Code WHERE Description = 'Output Tax'`)\n      const TC = await executeQueryToClient(`select Code from transaction_code WHERE Description = 'Output Tax' `)\n\n\n      let taxableamt = 0\n      let inputtax = 0\n\n      if (amountCreditRef.current) {\n        taxableamt = parseFloat(amountCreditRef.current.value.replace(/,/g, '')) / 1.12\n        inputtax = taxableamt * 0.12\n      }\n\n\n      const debitTableData = creditTable.current.getData()\n\n\n      if (getSelectedRow !== null) {\n        const newData: any = []\n        newData[0] = \"Output Tax\"\n        newData[1] = inputtax.toLocaleString(\"en-US\", {\n          minimumFractionDigits: 2,\n          maximumFractionDigits: 2,\n        });\n        newData[2] = faoRef.current?.value\n        newData[3] = remarksRef.current?.value\n        newData[4] = \"VAT\"\n        newData[5] = invoiceRef.current?.value\n        newData[6] = dd.data?.data[0].Acct_Code\n        newData[7] = dd.data?.data[0].Acct_Title\n        newData[8] = TC.data?.data[0].Code\n        newData[9] = foaIDNoRef.current\n\n        debitTableData[getSelectedRow][1] = taxableamt.toLocaleString(\"en-US\", {\n          minimumFractionDigits: 2,\n          maximumFractionDigits: 2,\n        });\n\n        debitTableData.splice(getSelectedRow + 1, 0, newData);\n        creditTable.current.setData(debitTableData)\n\n      } else {\n        const newData: any = []\n        newData[0] = \"Output Tax\"\n        newData[1] = inputtax.toLocaleString(\"en-US\", {\n          minimumFractionDigits: 2,\n          maximumFractionDigits: 2,\n        });\n        newData[2] = faoRef.current?.value\n        newData[3] = remarksRef.current?.value\n        newData[4] = \"VAT\"\n        newData[5] = invoiceRef.current?.value\n        newData[6] = dd.data?.data[0].Acct_Code\n        newData[7] = dd.data?.data[0].Acct_Title\n        newData[8] = TC.data?.data[0].Code\n        newData[9] = foaIDNoRef.current\n\n        debitTableData[debitTableData.length] = newData\n        debitTableData[debitTableData.length - 2][1] = taxableamt.toLocaleString(\"en-US\", {\n          minimumFractionDigits: 2,\n          maximumFractionDigits: 2,\n        });\n        creditTable.current.setData(debitTableData)\n      }\n\n\n\n\n    }\n    resetCredit()\n  }\n  function resetFields() {\n    wait(100).then(() => {\n      if (dateRef.current) {\n        dateRef.current.value = format(new Date(), \"yyyy-MM-dd\")\n      }\n      if (pnClientRef.current) {\n        pnClientRef.current.value = ''\n      }\n      if (clientNameRef.current) {\n        clientNameRef.current.value = ''\n      }\n      IDNo.current = ''\n    })\n  }\n  function resetDebit(setFocus = true) {\n    modalCheckRef.current?.closeDelay()\n    setPaymentType('CSH')\n    if (paymentTypeRef.current) {\n      paymentTypeRef.current.value = 'CSH'\n    }\n    wait(100).then(() => {\n      if (amountDebitRef.current) {\n        amountDebitRef.current.value = ''\n        if (setFocus)\n          amountDebitRef.current?.focus()\n      }\n    })\n\n  }\n  function resetCredit(setFocus = true) {\n    wait(100).then(() => {\n      if (transactionRef.current) {\n        transactionRef.current.value = ''\n      }\n      if (amountCreditRef.current) {\n        amountCreditRef.current.value = '0.00'\n      }\n      if (faoRef.current) {\n        faoRef.current.value = ''\n      }\n      if (remarksRef.current) {\n        remarksRef.current.value = ''\n      }\n      if (vatTypeRef.current) {\n        vatTypeRef.current.value = 'Non-VAT'\n      }\n      if (invoiceRef.current) {\n        invoiceRef.current.value = ''\n      }\n      accCodeRef.current = ''\n      accTitleRef.current = ''\n      accTCRef.current = ''\n      foaIDNoRef.current = ''\n      if (setFocus)\n        transactionRef.current?.focus()\n    })\n  }\n  function handleOnAdd() {\n    setCollectionMode('add')\n    resetCollection()\n  }\n  function handleOnSave() {\n\n    const debitTableData = debitTable.current.getData()\n    const creditTableData = creditTable.current.getData()\n\n\n    if (ornoRef.current && ornoRef.current.value === \"\") {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: \"Please provide OR number\",\n        timer: 1500,\n      });\n    } else if (pnClientRef.current && pnClientRef.current.value === \"\") {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: \"Please provide PN/Client ID\",\n        timer: 1500,\n      }).then(() => {\n        wait(350).then(() => {\n          openCliendIDsModal();\n        });\n      });\n    } else if (debitTableData.length <= 0) {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: \"Please provide debit entry\",\n        timer: 1500,\n      }).then(() => {\n        wait(300).then(() => {\n          paymentTypeRef.current?.focus();\n        });\n      });\n    } else if (creditTableData.length <= 0) {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: \"Please provide credit entry\",\n        timer: 1500,\n      }).then(() => {\n        wait(300).then(() => {\n          transactionRef.current?.focus();\n        });\n      });\n    } else if (\n      debitTableData.reduce(\n        (sum: any, obj: any) =>\n          sum + parseFloat(obj[1].toString().replace(/,/g, \"\")),\n        0\n      ) !==\n      creditTableData.reduce(\n        (sum: any, obj: any) =>\n          sum + parseFloat(obj[1].toString().replace(/,/g, \"\")),\n        0\n      )\n    ) {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title:\n          \"Transaction is not balanced. Check if the amount you entered are correct!\",\n        timer: 1500,\n      });\n    }\n\n\n\n    const creditTableDataFormatted = creditTableData.map((itm: any) => {\n      let newItm = {\n        transaction: itm[0],\n        amount: itm[1],\n        Name: itm[2],\n        Remarks: itm[3],\n        VATType: itm[4],\n        invoiceNo: itm[5],\n        Code: itm[6],\n        Title: itm[7],\n        TC: itm[8],\n        Account_No: itm[9],\n      }\n      return newItm\n    })\n\n    const debitTableDataFormatted = debitTableData.map((itm: any) => {\n      let newItm = {\n        Payment: itm[0],\n        Amount: itm[1],\n        Check_No: itm[2],\n        Check_Date: itm[3],\n        Bank_Branch: itm[4],\n        Acct_Code: itm[5],\n        Acct_Title: itm[6],\n        Deposit_Slip: itm[7],\n        Cntr: itm[8],\n        Remarks: itm[9],\n        TC: itm[10],\n        Bank: itm[11],\n        BankName: itm[12],\n      }\n      return newItm\n    })\n\n    const state = {\n      ORNo: ornoRef.current?.value,\n      Date: dateRef.current?.value,\n      PNo: pnClientRef.current?.value,\n      Name: clientNameRef.current?.value,\n      debit: JSON.stringify(debitTableDataFormatted),\n      credit: JSON.stringify(creditTableDataFormatted)\n    }\n\n    if (collectionMode === 'update') {\n      codeCondfirmationAlert({\n        isUpdate: true,\n        cb: (userCodeConfirmation) => {\n          mutate({ ...state, userCodeConfirmation, mode: \"\" });\n        },\n      });\n    } else {\n      saveCondfirmationAlert({\n        isConfirm: () => {\n          mutate({ ...state, mode: \"\" });\n        },\n      });\n    }\n\n\n  }\n  function handleOnPrint() {\n    if (ornoRef.current)\n      mutataPrint({ ORNo: ornoRef.current.value });\n\n  }\n  function handleOnClose() {\n\n    Swal.fire({\n      title: \"Are you sure?\",\n      text: \"You won't be able to revert this!\",\n      icon: \"warning\",\n      showCancelButton: true,\n      confirmButtonColor: \"#3085d6\",\n      cancelButtonColor: \"#d33\",\n      confirmButtonText: \"Yes, cancel it!\",\n    }).then((result) => {\n      if (result.isConfirmed) {\n        setCollectionMode('')\n        resetCollection()\n      }\n    });\n\n  }\n  function printOR(res: any) {\n    const data = res.data.concat(res.data1);\n    console.log(res)\n    flushSync(() => {\n      localStorage.removeItem(\"printString\");\n      localStorage.setItem(\"dataString\", JSON.stringify(data));\n      localStorage.setItem(\"paper-width\", \"8.5in\");\n      localStorage.setItem(\"paper-height\", \"11in\");\n      localStorage.setItem(\"module\", \"collection\");\n      if (user?.department === \"UMIS\") {\n        localStorage.setItem(\"title\", user?.department === 'UMIS' ? \"UPWARD MANAGEMENT INSURANCE SERVICES\" : \"UPWARD CONSULTANCY SERVICES AND MANAGEMENT INC.\");\n      } else {\n        localStorage.setItem(\n          \"title\",\n          \"UPWARD CONSULTANCY SERVICES AND MANAGEMENT INC.\"\n        );\n      }\n    });\n    window.open(\"/dashboard/print\", \"_blank\");\n  }\n\n\n  return (\n    <div\n      style={{\n        height: \"100%\",\n        width: \"100%\",\n        background: \"#F1F1F1\",\n      }}\n    >\n      <UpwardTableModalSearch />\n      <PageHelmet title=\"Collection\" />\n      <div\n        style={{\n          width: \"100%\",\n          height: \"20%\",\n          display: \"flex\",\n          flexDirection: \"column\",\n          padding: \"5px\"\n        }}\n      >\n        <div style={{\n          height: \"30px\",\n          display: \"flex\",\n          columnGap: \"10px\"\n        }}>\n          {\n            isLoadingModalSearchCollection ?\n              <LoadingButton loading={isLoadingModalSearchCollection} />\n              :\n              <TextInput\n                containerStyle={{ width: \"550px\" }}\n                label={{\n                  title: \"Search: \",\n                  style: {\n                    fontSize: \"12px\",\n                    fontWeight: \"bold\",\n                    width: \"50px\",\n                  },\n                }}\n                input={{\n                  className: \"search-input-up-on-key-down\",\n                  type: \"search\",\n                  onKeyDown: (e) => {\n                    if (e.key === \"Enter\" || e.key === \"NumpadEnter\") {\n                      e.preventDefault();\n                      openModalSearchCollection(e.currentTarget.value);\n                    }\n                  },\n                  style: { width: \"500px\", height: \"22px\" },\n                }}\n\n                icon={<SearchIcon sx={{ fontSize: \"18px\" }} />}\n                onIconClick={(e) => {\n                  e.preventDefault()\n                  if (searchRef.current)\n                    openModalSearchCollection(searchRef.current.value);\n\n                }}\n                inputRef={searchRef}\n              />}\n          {ModalSearchCollection}\n          <IconButton\n            aria-label=\"add\" size=\"small\" color=\"info\"\n            onClick={handleOnAdd}\n          >\n            <AddIcon />\n          </IconButton>\n          <IconButton\n            disabled={disableFields}\n            aria-label=\"save\" size=\"small\" color=\"success\"\n            onClick={handleOnSave}\n          >\n            <SaveIcon />\n          </IconButton>\n          <IconButton\n            disabled={collectionMode !== 'update'}\n            aria-label=\"print\" size=\"small\" color=\"secondary\"\n            onClick={handleOnPrint}\n          >\n            <LocalPrintshopIcon />\n          </IconButton>\n          <IconButton\n            disabled={disableFields}\n            aria-label=\"print\" size=\"small\" color=\"error\"\n            onClick={handleOnClose}\n          >\n            <CloseIcon />\n          </IconButton>\n        </div>\n        <div\n          style={{\n            flex: 1,\n            border: \"1px solid #64748b\",\n            display: \"flex\",\n            alignItems: \"center\",\n            columnGap: \"50px\",\n            padding: \"5px\",\n            width: \"100%\"\n          }}\n        >\n          <div style={{\n            display: \"flex\",\n            flexDirection: \"column\",\n            rowGap: \"5px\",\n            width: \"50%\"\n          }}>\n            {\n              NewORNoLoading ?\n                <LoadingButton loading={NewORNoLoading} />\n                :\n                <TextInput\n                  containerStyle={{\n                    width: \"320px\"\n                  }}\n                  label={{\n                    title: \"OR No. : \",\n                    style: {\n                      fontSize: \"12px\",\n                      fontWeight: \"bold\",\n                      width: \"70px\",\n                    },\n                  }}\n                  input={{\n                    disabled: disableFields,\n                    readOnly: true,\n                    type: \"text\",\n                    style: { width: \"250px\" },\n                    onKeyDown: (e) => {\n                      if (e.code === \"NumpadEnter\" || e.code === 'Enter') {\n                        refetchNewOR()\n                      }\n                    },\n                  }}\n                  inputRef={ornoRef}\n                  icon={<RestartAltIcon sx={{ fontSize: \"18px\" }} />}\n                  onIconClick={(e) => {\n                    e.preventDefault()\n                    if (faoRef.current) {\n                      refetchNewOR()\n                    }\n                  }}\n                />}\n            <TextInput\n              label={{\n                title: \"Date : \",\n                style: {\n                  fontSize: \"12px\",\n                  fontWeight: \"bold\",\n                  width: \"70px\",\n                },\n              }}\n              input={{\n                disabled: disableFields,\n                type: \"date\",\n                style: { width: \"250px\" },\n                defaultValue: format(new Date(), \"yyyy-MM-dd\"),\n                onKeyDown: (e) => {\n                  if (e.code === \"NumpadEnter\" || e.code === 'Enter') {\n                    pnClientRef.current?.focus()\n                  }\n                },\n              }}\n\n              inputRef={dateRef}\n            />\n          </div>\n          <div style={{\n            display: \"flex\",\n            flexDirection: \"column\",\n            rowGap: \"5px\",\n            width: \"50%\"\n          }}>\n            {isLoadingClientIdsModal ? (\n              <LoadingButton loading={isLoadingClientIdsModal} />\n            ) : (\n              <TextInput\n                containerStyle={{\n                  width: \"60%\"\n                }}\n                label={{\n                  title: \"PN/Client ID : \",\n                  style: {\n                    fontSize: \"12px\",\n                    fontWeight: \"bold\",\n                    width: \"100px\",\n                  },\n                }}\n                input={{\n                  disabled: disableFields,\n                  type: \"text\",\n                  style: { flex: 1 },\n                  onKeyDown: (e) => {\n                    if (e.code === \"NumpadEnter\" || e.code === 'Enter') {\n                      openCliendIDsModal(e.currentTarget.value)\n                    }\n                  }\n                }}\n                icon={<AccountBoxIcon sx={{ fontSize: \"18px\" }} />}\n                onIconClick={(e) => {\n                  e.preventDefault()\n                  if (faoRef.current) {\n                    openCliendIDsModal(faoRef.current.value)\n                  }\n                }}\n                inputRef={pnClientRef}\n              />\n            )}\n            {ModalClientIDs}\n            <TextInput\n              label={{\n                title: \"Client Name : \",\n                style: {\n                  fontSize: \"12px\",\n                  fontWeight: \"bold\",\n                  width: \"100px\",\n                },\n              }}\n              input={{\n                disabled: disableFields,\n                type: \"text\",\n                style: { width: \"80%\" },\n                onKeyDown: (e) => {\n                  if (e.code === \"NumpadEnter\" || e.code === 'Enter') {\n                  }\n                },\n              }}\n              inputRef={clientNameRef}\n            />\n          </div>\n        </div>\n      </div>\n      <div style={{ height: \"5px\" }}></div>\n      <ContentContainer\n        title={'Particulars (Debit)'}\n        firstContent={\n          <div\n            style={{\n              display: \"flex\",\n              flexDirection: \"column\",\n              rowGap: \"5px\",\n              width: \"100%\"\n            }}\n          >\n            <div\n              style={{\n                display: \"flex\",\n                alignItems: \"center\",\n                columnGap: \"15px\",\n                marginTop: \"5px\",\n                flex: 1,\n              }}>\n              <SelectInput\n                containerStyle={{ width: \"100%\" }}\n                label={{\n                  title: \"Payment Type : \",\n                  style: {\n                    fontSize: \"12px\",\n                    fontWeight: \"bold\",\n                    width: \"100px\",\n                  },\n                }}\n                selectRef={paymentTypeRef}\n                select={{\n                  disabled: disableFields,\n                  style: { flex: 1, height: \"22px\" },\n                  value: paymentType,\n                  onKeyDown: (e) => {\n                    if (e.code === \"NumpadEnter\" || e.code === 'Enter') {\n                      e.preventDefault()\n                      amountDebitRef.current?.focus()\n                    }\n                  },\n                  onChange: (e) => {\n                    if (e.target.value === 'CHK' && amountDebitRef.current) {\n                      amountDebitRef.current.value = '0.00'\n                      wait(100).then(() => {\n                        buttonCheckSave.current?.focus()\n                      })\n                    }\n                    setPaymentType(e.target.value)\n                  }\n                }}\n                datasource={[\n                  { key: \"Cash\", value: \"CSH\" },\n                  { key: \"Check\", value: \"CHK\" },\n                ]}\n                values={\"value\"}\n                display={\"key\"}\n              />\n              <button\n                ref={buttonCheckSave}\n                disabled={paymentType === 'CSH'}\n                className={`custom-btn ripple-button ${paymentType === 'CSH' ? \"disabled\" : \"not-disabled\"}`}\n                style={{\n                  padding: \"0 5px\",\n                  borderRadius: \"0px\",\n                  color: \"white\",\n                  height: \"22px\",\n                  background: paymentType === 'CSH' ? \"#8fc993\" : \"#1b5e20\"\n\n                }}\n                onClick={(e) => {\n                  modalCheckRef.current?.showModal()\n                  wait(100).then(() => {\n                    modalCheckRef.current?.checknoRef.current?.focus()\n                  })\n                }}\n              >\n                <AddIcon sx={{ fontSize: \"22px\" }} />\n              </button>\n            </div>\n            <div\n              style={{\n                display: \"flex\",\n                alignItems: \"center\",\n                columnGap: \"15px\"\n              }}>\n              <TextFormatedInput\n                containerStyle={{\n                  flex: 1\n                }}\n                label={{\n                  title: \"Amount : \",\n                  style: {\n                    fontSize: \"12px\",\n                    fontWeight: \"bold\",\n                    width: \"100px\",\n                  },\n                }}\n                input={{\n                  disabled: paymentType === 'CHK' || disableFields,\n                  type: \"text\",\n                  style: { flex: 1 },\n                  onKeyDown: (e) => {\n                    if (e.code === \"NumpadEnter\" || e.code === 'Enter') {\n                      buttonCshSave.current?.click()\n                    }\n                  }\n                }}\n                inputRef={amountDebitRef}\n              />\n              <button\n                ref={buttonCshSave}\n                disabled={paymentType === 'CHK'}\n                className={`custom-btn ripple-button ${paymentType === 'CHK' ? \"disabled\" : \"not-disabled\"}`}\n                style={{\n                  padding: \"0 5px\",\n                  borderRadius: \"0px\",\n                  color: \"white\",\n                  height: \"22px\",\n                  background: paymentType === 'CHK' ? \"#8fc993\" : \"#1b5e20\"\n\n                }}\n                onClick={(e) => {\n                  if (amountDebitRef.current && paymentTypeRef.current) {\n                    saveCashDebit(amountDebitRef.current.value, paymentTypeRef.current.value)\n                  }\n                }}\n              >\n                <ForwardIcon sx={{ fontSize: \"22px\" }} />\n              </button>\n            </div>\n            <Button\n              ref={buttonCheckList}\n              disabled={paymentType === 'CSH'}\n              startIcon={<AddIcon />}\n              sx={{\n                height: \"30px\",\n                fontSize: \"11px\",\n                marginTop: \"20px\"\n              }}\n              color=\"success\"\n              variant=\"contained\"\n              onClick={openModal}\n            >\n              Add Check from PDC Entry\n            </Button>\n          </div>\n        }\n        secondContent={\n          <div\n            style={{\n              position: \"relative\",\n              height: \"100%\",\n              width: \"100%\",\n              flex: 1,\n              display: \"flex\",\n              flexDirection: \"column\"\n            }}>\n            <DataGridViewReact\n              ref={debitTable}\n              columns={debitColumn}\n              rows={[]}\n              containerStyle={{\n                height: 'auto',\n                flex: 1,\n              }}\n              getSelectedItem={(rowItm: any) => {\n                if (rowItm) {\n\n                  if (rowItm[0] === 'Cash') {\n                    wait(100).then(() => {\n                      if (amountDebitRef.current)\n                        amountDebitRef.current.value = rowItm[1]\n                    })\n                  } else {\n                    if (rowItm[7] && rowItm[7] !== '') {\n                      debitTable.current.setSelectedRow(null)\n                      buttonCheckSave.current?.focus()\n                      return alert(` Unable to edit. Check No [${rowItm[2]}] already deposited!`)\n                    }\n                    if (rowItm[8] && rowItm[8] !== '') {\n                      debitTable.current.setSelectedRow(null)\n                      buttonCheckSave.current?.focus()\n                      return alert(` Unable to edit. Check No [${rowItm[2]}] is a PDC reference!`)\n                    }\n                    const strBank = rowItm[4].split('/')\n                    const BankName = executeQueryToClient(`select * from bank where Bank_Code = '${strBank[0]}'`)\n\n\n                    modalCheckRef.current?.showModal()\n\n                    wait(100).then(() => {\n                      if (modalCheckRef.current) {\n                        if (modalCheckRef.current.checknoRef.current) {\n                          modalCheckRef.current.checknoRef.current.value = rowItm[2]\n                        }\n                        if (modalCheckRef.current.bankRef.current) {\n                          modalCheckRef.current.bankRef.current.value = strBank[0]\n                        }\n                        if (modalCheckRef.current.branchRef.current) {\n                          modalCheckRef.current.branchRef.current.value = rowItm[4]\n                        }\n                        if (modalCheckRef.current.remarksRef.current) {\n                          modalCheckRef.current.remarksRef.current.value = rowItm[9]\n                        }\n                        if (modalCheckRef.current.checkdateRef.current) {\n                          modalCheckRef.current.checkdateRef.current.value = rowItm[3]\n                        }\n                        if (modalCheckRef.current.amountRef.current) {\n                          modalCheckRef.current.amountRef.current.value = rowItm[1]\n                        }\n                        if (modalCheckRef.current.bankRefName.current) {\n                          modalCheckRef.current.bankRefName.current = BankName\n                        }\n\n                      }\n                    })\n                  }\n\n                } else {\n                  wait(100).then(() => {\n                    if (amountDebitRef.current)\n                      amountDebitRef.current.value = '0.00'\n                  })\n                }\n              }}\n              onKeyDown={(rowItm: any, rowIdx: any, e: any) => {\n                if (e.code === 'Delete' || e.code === 'Backspace') {\n                  const isConfim = window.confirm(`Are you sure you want to delete?`)\n                  if (isConfim) {\n                    const debitTableData = debitTable.current.getData()\n                    debitTableData.splice(rowIdx, 1);\n                    debitTable.current.setData(debitTableData)\n                    setTotalDebit(\n                      debitTableData.reduce((sum: any, subArray: any) => sum + parseFloat(subArray[1].replace(/,/g, '')), 0)\n                    )\n                    return\n                  }\n                }\n              }}\n            />\n            <div\n              style={{\n                fontSize: \"13px\",\n                textAlign: \"right\",\n                border: \"1px solid #d1cdcd\",\n                background: \"#dcdcdc\",\n                fontWeight: \"bold\"\n              }}>{totalDebit.toLocaleString(\"en-US\", {\n                minimumFractionDigits: 2,\n                maximumFractionDigits: 2,\n              })}</div>\n          </div>\n        }\n        contentStyle={`\n          .custom-btn.not-disabled:hover{\n            background:#154f19 !important;\n          }\n          `}\n      />\n      <div style={{ height: \"5px\" }}></div>\n      <ContentContainer\n        title={'Particulars Breakdown (Credit)'}\n        firstContent={\n          <div\n            style={{\n              display: \"flex\",\n              rowGap: \"5px\",\n              flexDirection: \"column\"\n            }}\n          >\n            <label\n              htmlFor=\"auto-solo-collection\"\n              style={{\n                fontSize: \"12px\",\n                fontWeight: \"bold\",\n                marginTop: \"5px\"\n              }}\n\n            >Transaction :</label>\n            <div\n              style={{\n                display: \"flex\",\n                alignItems: \"center\",\n                columnGap: \"15px\",\n                flex: 1,\n              }}>\n\n              {paymentTypeLoading ?\n                <LoadingButton loading={paymentTypeLoading} />\n                : <div style={{ flex: 1 }}>\n                  <Autocomplete\n                    label={\n                      {\n                        title: \" \",\n                        style: {\n                          width: \"0px\",\n                          display: \"none\"\n                        },\n                      }\n                    }\n                    input={{\n                      id: \"auto-solo-collection\",\n                      style: {\n                        width: \"100%\",\n                        flex: 1\n                      }\n                    }}\n                    width={\"100%\"}\n                    DisplayMember={'label'}\n                    DataSource={transactionDesc?.data.transactionDesc}\n                    disableInput={disableFields}\n                    inputRef={transactionRef}\n                    onChange={(selected: any, e: any) => {\n                      accCodeRef.current = selected.Acct_Code\n                      accTitleRef.current = selected.Acct_Title\n                      accTCRef.current = selected.Code\n                    }}\n                    onKeydown={(e: any) => {\n                      if (e.key === \"Enter\" || e.key === 'NumpadEnter') {\n                        e.preventDefault()\n                        amountCreditRef.current?.focus()\n                      }\n                    }}\n                  />\n                </div>}\n              <button\n                className=\"custom-btn ripple-button\"\n                style={{\n                  background: \"#1b5e20\",\n                  padding: \"0 5px\",\n                  borderRadius: \"0px\",\n                  color: \"white\",\n                  height: \"22px\"\n                }}\n                onClick={() => {\n                  wait(100).then(() => {\n                    if (transactionRef.current) {\n                      transactionRef.current.value = ''\n                    }\n                    if (amountCreditRef.current) {\n                      amountCreditRef.current.value = '0.00'\n                    }\n                    if (faoRef.current) {\n                      faoRef.current.value = ''\n                    }\n                    if (remarksRef.current) {\n                      remarksRef.current.value = ''\n                    }\n                    if (vatTypeRef.current) {\n                      vatTypeRef.current.value = 'Non-VAT'\n                    }\n                    if (invoiceRef.current) {\n                      invoiceRef.current.value = ''\n                    }\n                    accCodeRef.current = ''\n                    accTitleRef.current = ''\n                    accTCRef.current = ''\n                    foaIDNoRef.current = ''\n                    transactionRef.current?.focus()\n                    creditTable.current.setSelectedRow(null)\n\n                  })\n                }}\n              >\n                <AddIcon sx={{ fontSize: \"22px\" }} />\n              </button>\n            </div>\n            <div\n              style={{\n                display: \"flex\",\n                alignItems: \"center\",\n                columnGap: \"15px\",\n                width: \"100%\",\n                flex: 1\n              }}>\n              <TextFormatedInput\n                containerStyle={{\n                  flex: 1\n                }}\n                label={{\n                  title: \"Amount : \",\n                  style: {\n                    fontSize: \"12px\",\n                    fontWeight: \"bold\",\n                    width: \"70px\",\n                  },\n                }}\n                input={{\n                  disabled: disableFields,\n                  type: \"text\",\n                  style: { flex: 1, width: \"100%\" },\n                  onKeyDown: (e) => {\n                    if (e.code === \"NumpadEnter\" || e.code === 'Enter') {\n                      faoRef.current?.focus()\n                    }\n                  }\n                }}\n                inputRef={amountCreditRef}\n              />\n\n              <button\n                className=\"custom-btn ripple-button\"\n                style={{\n                  background: \"#1b5e20\",\n                  padding: \"0 5px\",\n                  borderRadius: \"0px\",\n                  color: \"white\",\n                  height: \"22px\"\n                }}\n                onClick={() => {\n                  saveCredit()\n                }}\n              >\n                <ForwardIcon sx={{ fontSize: \"22px\" }} />\n              </button>\n            </div>\n            {isLoadingCreditClientIdsModal ? (\n              <LoadingButton loading={isLoadingCreditClientIdsModal} />\n            ) : (\n              <TextInput\n                containerStyle={{\n                  width: \"100%\"\n                }}\n                label={{\n                  title: \"Usage : \",\n                  style: {\n                    fontSize: \"12px\",\n                    fontWeight: \"bold\",\n                    width: \"70px\",\n                  },\n                }}\n                input={{\n                  disabled: disableFields,\n                  type: \"text\",\n                  style: { flex: 1 },\n                  onKeyDown: (e) => {\n                    if (e.code === \"NumpadEnter\" || e.code === 'Enter') {\n                      openCreditCliendIDsModal(e.currentTarget.value)\n                    }\n                  }\n                }}\n                icon={<AccountBoxIcon sx={{ fontSize: \"18px\" }} />}\n                onIconClick={(e) => {\n                  e.preventDefault()\n                  if (faoRef.current) {\n                    openCreditCliendIDsModal(faoRef.current.value)\n                  }\n                }}\n                inputRef={faoRef}\n              />\n            )}\n            {ModalCreditClientIDs}\n            <TextAreaInput\n              label={{\n                title: \"Remarks : \",\n                style: {\n                  fontSize: \"12px\",\n                  fontWeight: \"bold\",\n                  width: \"70px\",\n                },\n              }}\n              textarea={{\n                disabled: disableFields,\n                rows: 3,\n                style: { flex: 1 },\n                onKeyDown: (e) => {\n                  e.stopPropagation()\n                  if ((e.code === \"NumpadEnter\" && !e.shiftKey) || (e.code === 'Enter' && !e.shiftKey)) {\n                    vatTypeRef.current?.focus()\n                  }\n                },\n              }}\n              _inputRef={remarksRef}\n            />\n            <SelectInput\n              label={{\n                title: \"Vat Type : \",\n                style: {\n                  fontSize: \"12px\",\n                  fontWeight: \"bold\",\n                  width: \"70px\",\n                },\n              }}\n              selectRef={vatTypeRef}\n              select={{\n                disabled: disableFields,\n                style: { flex: 1, height: \"22px\" },\n                defaultValue: \"Non-VAT\",\n                onKeyDown: (e) => {\n                  if (e.code === \"NumpadEnter\" || e.code === 'Enter') {\n                    e.preventDefault()\n                    invoiceRef.current?.focus()\n                  }\n                }\n              }}\n              datasource={[\n                { key: \"VAT\", value: \"VAT\" },\n                { key: \"Non-VAT\", value: \"Non-VAT\" },\n              ]}\n              values={\"value\"}\n              display={\"key\"}\n            />\n            <TextInput\n              label={{\n                title: \"Invoice : \",\n                style: {\n                  fontSize: \"12px\",\n                  fontWeight: \"bold\",\n                  width: \"70px\",\n                },\n              }}\n              input={{\n                disabled: disableFields,\n                type: \"text\",\n                style: { flex: 1 },\n                onKeyDown: (e) => {\n                  if (e.code === \"NumpadEnter\" || e.code === 'Enter') {\n                    saveCredit()\n                  }\n                },\n              }}\n              inputRef={invoiceRef}\n            />\n          </div>\n        }\n        secondContent={\n          <div style={{\n            position: \"relative\",\n            height: \"100%\",\n            width: \"100%\",\n            flex: 1,\n            display: \"flex\",\n            flexDirection: \"column\"\n          }}>\n            <DataGridViewReact\n              ref={creditTable}\n              columns={creditColumn}\n              rows={[]}\n              containerStyle={{\n                height: 'auto',\n                flex: 1,\n              }}\n              getSelectedItem={(rowItm: any) => {\n                if (rowItm) {\n                  wait(100).then(() => {\n                    if (transactionRef.current) {\n                      transactionRef.current.value = rowItm[0]\n                    }\n                    if (amountCreditRef.current) {\n                      amountCreditRef.current.value = rowItm[1]\n                    }\n                    if (faoRef.current) {\n                      faoRef.current.value = rowItm[2]\n                    }\n                    if (remarksRef.current) {\n                      remarksRef.current.value = rowItm[3]\n                    }\n                    if (vatTypeRef.current) {\n                      vatTypeRef.current.value = rowItm[4]\n                    }\n                    if (invoiceRef.current) {\n                      invoiceRef.current.value = rowItm[5]\n                    }\n                    accCodeRef.current = rowItm[6]\n                    accTitleRef.current = rowItm[7]\n                    accTCRef.current = rowItm[8]\n                    foaIDNoRef.current = rowItm[9]\n                  })\n                } else {\n                  wait(100).then(() => {\n                    if (transactionRef.current) {\n                      transactionRef.current.value = ''\n                    }\n                    if (amountCreditRef.current) {\n                      amountCreditRef.current.value = '0.00'\n                    }\n                    if (faoRef.current) {\n                      faoRef.current.value = ''\n                    }\n                    if (remarksRef.current) {\n                      remarksRef.current.value = ''\n                    }\n                    if (vatTypeRef.current) {\n                      vatTypeRef.current.value = 'Non-VAT'\n                    }\n                    if (invoiceRef.current) {\n                      invoiceRef.current.value = ''\n                    }\n                    accCodeRef.current = ''\n                    accTitleRef.current = ''\n                    accTCRef.current = ''\n                    foaIDNoRef.current = ''\n\n                  })\n                }\n\n              }}\n              onKeyDown={(rowItm: any, rowIdx: any, e: any) => {\n                if (e.code === 'Delete' || e.code === 'Backspace') {\n                  const isConfim = window.confirm(`Are you sure you want to delete?`)\n                  if (isConfim) {\n                    const creditTableData = creditTable.current.getData()\n                    creditTableData.splice(rowIdx, 1);\n                    creditTable.current.setData(creditTableData)\n                    setTotalCredit(\n                      creditTableData.reduce((sum: any, subArray: any) => sum + parseFloat(subArray[1].replace(/,/g, '')), 0)\n                    )\n                    return\n                  }\n                }\n              }}\n            />\n            <div\n              style={{\n                fontSize: \"13px\",\n                textAlign: \"right\",\n                border: \"1px solid #d1cdcd\",\n                background: \"#dcdcdc\",\n                fontWeight: \"bold\"\n              }}>{totalCredit.toLocaleString(\"en-US\", {\n                minimumFractionDigits: 2,\n                maximumFractionDigits: 2,\n              })}</div>\n          </div>\n        }\n        contentStyle={`\n          .custom-btn.not-disabled:hover{\n            background:#154f19 !important;\n          }\n            .custom-btn:focus{\n              outline:3px solid #2563eb;\n            }\n        `}\n      />\n      <ModalCheck\n        ref={modalCheckRef}\n        handleOnSave={() => {\n          const refs = modalCheckRef.current.getRefs()\n          saveCheckDebit(refs)\n        }}\n        handleOnClose={() => {\n          debitTable.current.setSelectedRow(null)\n          buttonCheckSave.current?.focus()\n        }}\n      />\n\n      {(loadingAddNew || isLoadingPrint || loadingCollectionDataSearch) && <UpwardLoader />}\n\n    </div>\n  )\n}\n\nconst useUpwardTableModalSearch = ({\n  column,\n  query,\n  getSelectedItem,\n  onKeyDown\n}: any) => {\n  const [show, setShow] = useState(false)\n  const searchInputRef = useRef<HTMLInputElement>(null)\n\n  function openModal() {\n    setShow(true)\n    setTimeout(() => {\n      if (searchInputRef.current) {\n        const event = new KeyboardEvent(\"keydown\", { code: \"Enter\", bubbles: true });\n        searchInputRef.current.focus(); // Ensure the element has focus\n        searchInputRef.current.dispatchEvent(event); // Dispatch the native event\n      }\n    }, 100)\n  }\n  function closeModal() {\n    setShow(false)\n  }\n  const UpwardTableModalSearch = () => {\n    const { executeQueryToClient } = useExecuteQueryFromClient()\n    const tableRef = useRef<any>(null)\n\n    return (\n      show ? <div\n        style={{\n          background: \"#F1F1F1\",\n          width: \"450px\",\n          height: \"500px\",\n          position: \"absolute\",\n          zIndex: 111111,\n          top: \"50%\",\n          left: \"50%\",\n          transform: \"translate(-50%,-50%)\",\n          boxShadow: '3px 6px 32px -7px rgba(0,0,0,0.75)',\n          boxSizing: \"border-box\",\n          display: \"flex\",\n          flexDirection: \"column\"\n        }}\n      >\n        <div\n          style={{\n            height: \"22px\",\n            background: \"white\",\n            display: \"flex\",\n            justifyContent: \"space-between\",\n            padding: \"5px\",\n            position: \"relative\",\n            alignItems: \"center\"\n\n          }}\n        >\n          <span style={{ fontSize: \"13px\", fontWeight: \"bold\" }}>Search</span>\n          <button\n            className=\"btn-check-exit-modal\"\n            style={{\n              padding: \"0 5px\",\n              borderRadius: \"0px\",\n              background: \"white\",\n              color: \"black\",\n              height: \"22px\",\n              position: \"absolute\",\n              top: 0,\n              right: 0\n            }}\n            onClick={() => {\n              closeModal()\n            }}\n          >\n            <CloseIcon sx={{ fontSize: \"22px\" }} />\n          </button>\n        </div>\n        <div style={{\n          padding: \"5px\"\n        }}>\n          <TextInput\n            containerStyle={{\n              width: \"100%\"\n            }}\n            label={{\n              title: \"Search : \",\n              style: {\n                fontSize: \"12px\",\n                fontWeight: \"bold\",\n                width: \"70px\",\n                display: \"none\"\n              },\n            }}\n            input={{\n              type: \"text\",\n              style: { width: \"100%\" },\n              onKeyDown: async (e) => {\n                if (e.code === \"NumpadEnter\" || e.code === 'Enter') {\n                  const searchQuery = query(e.currentTarget.value)\n                  const dd = await executeQueryToClient(searchQuery)\n                  tableRef.current?.setDataFormated(dd.data.data)\n                }\n\n                if (e.code === \"ArrowDown\") {\n                  const selectedRow = tableRef.current?.selectedRow()\n                  const index = Math.max(selectedRow - 1, 0)\n                  const td = document.querySelector(`.td.row-${index}`) as HTMLTableDataCellElement\n                  if (td) {\n                    td.focus()\n                  }\n                  tableRef.current?._setSelectedRow(index)\n                }\n\n              },\n            }}\n            inputRef={searchInputRef}\n            icon={<SearchIcon sx={{ fontSize: \"18px\" }} />}\n            onIconClick={async (e) => {\n              e.preventDefault()\n              const searchQuery = query(searchInputRef.current?.value)\n              const dd = await executeQueryToClient(searchQuery)\n              tableRef.current?.setDataFormated(dd.data.data)\n            }}\n          />\n        </div>\n        <div style={{\n          flex: 1,\n        }}>\n          <DataGridViewReact\n            columns={column}\n            height={\"100%\"}\n            ref={tableRef}\n            getSelectedItem={getSelectedItem}\n            onKeyDown={onKeyDown}\n          />\n        </div>\n        <style>\n          {`\n          .btn-check-exit-modal:hover{\n            background:red !important;\n            color:white !important;\n          }\n        `}\n        </style>\n      </div > : <></>\n    )\n\n  }\n\n  return {\n    UpwardTableModalSearch,\n    openModal,\n    closeModal\n  }\n}\nconst UpwardLoader = () => {\n\n  return (\n\n    <>\n      <div style={{\n        position: \"fixed\",\n        top: 0,\n        bottom: 0,\n        left: 0,\n        right: 0,\n        background: \"red\",\n        zIndex: \"88\",\n        backgroundColor: 'rgba(0, 0, 0, 0.4)'\n      }}\n      ></div>\n      <div style={{\n        position: \"absolute\",\n        zIndex: \"1\",\n        background: \"white\",\n        width: \"auto\",\n        height: \"auto\",\n        top: \"50%\",\n        left: \"50%\",\n        transform: \"translate(-50%,-50%)\",\n        boxShadow: '3px 6px 32px -7px rgba(0,0,0,0.75)',\n        display: \"flex\",\n        columnGap: \"20px\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        padding: \"10px 15px\",\n      }}>\n        <CircularProgress color=\"primary\" />\n        <span>Loading...</span>\n      </div>\n    </>\n  )\n}\nconst ContentContainer = ({\n  firstContent,\n  secondContent,\n  title,\n  contentStyle\n}: any) => {\n\n  return (\n    <div\n      style={{\n        width: \"100%\",\n        height: \"38%\",\n        display: \"flex\",\n        padding: \"5px\"\n      }}\n    >\n      <style>{contentStyle}</style>\n      <div style={{\n        flex: 1,\n        display: \"flex\",\n        width: \"100%\",\n        border: \"1px solid #64748b\",\n        position: \"relative\",\n      }}>\n        <span\n          style={{\n            position: \"absolute\",\n            top: \"-15px\",\n            left: \"20px\",\n            background: \"#F1F1F1\",\n            padding: \"0 5px\",\n            fontSize: \"14px\",\n            fontWeight: \"bold\"\n          }}\n        >{title}</span>\n        <div\n          style={{\n            width: \"30%\",\n            height: \"100%\",\n            padding: \"10px 5px\",\n            boxSizing: \"border-box\"\n          }}\n        >\n          {firstContent}\n        </div>\n        <div\n          style={{\n            width: \"70%\",\n            height: \"100%\",\n            padding: \"10px 5px\",\n            boxSizing: \"border-box\"\n          }}\n        >\n          {secondContent}\n        </div>\n      </div>\n    </div>\n  )\n}\nconst ModalCheck = forwardRef(({\n  handleOnSave,\n  handleOnClose\n}: any, ref) => {\n  const [showModal, setShowModal] = useState(false)\n  const [handleDelayClose, setHandleDelayClose] = useState(false)\n  const [blick, setBlick] = useState(false)\n\n  const checknoRef = useRef<HTMLInputElement>(null)\n  const bankRef = useRef<HTMLInputElement>(null)\n  const branchRef = useRef<HTMLInputElement>(null)\n  const remarksRef = useRef<HTMLTextAreaElement>(null)\n  const checkdateRef = useRef<HTMLInputElement>(null)\n  const amountRef = useRef<HTMLInputElement>(null)\n  const bankRefName = useRef('')\n  const searchModalInputRef = useRef<HTMLInputElement>(null)\n\n  const closeDelay = () => {\n    setHandleDelayClose(true)\n    setTimeout(() => {\n      setShowModal(false)\n      setHandleDelayClose(false)\n      handleOnClose()\n    }, 100)\n  }\n  const closeDelayRef = useRef<any>(closeDelay)\n\n  useImperativeHandle(ref, () => ({\n\n    showModal: () => {\n      setShowModal(true)\n    },\n    clsoeModal: () => {\n      setShowModal(false)\n    },\n    getRefs: () => {\n      const refs = {\n        checknoRef,\n        bankRef,\n        branchRef,\n        remarksRef,\n        checkdateRef,\n        amountRef,\n        bankRefName\n      }\n      return refs\n    },\n    checknoRef,\n    bankRef,\n    branchRef,\n    remarksRef,\n    checkdateRef,\n    amountRef,\n    bankRefName,\n    searchModalInputRef,\n    closeDelay\n\n  }))\n\n  const {\n    ModalComponent: ModalSearchBanks,\n    openModal: openModalSearchBanks,\n    closeModal: closeModalSearchBanks,\n    isLoading: isLoadingModalSearchbanks,\n  } = useQueryModalTable({\n    link: {\n      url: \"/task/accounting/search-pdc-banks\",\n      queryUrlName: \"searchPdcBanks\",\n    },\n    columns: [\n      { field: \"Bank_Code\", headerName: \"Code\", width: 130 },\n      { field: \"Bank\", headerName: \"Bank Name\", flex: 1 },\n    ],\n    queryKey: \"collection-banks\",\n    uniqueId: \"Bank_Code\",\n    responseDataKey: \"pdcBanks\",\n    onSelected: (selectedRowData, data) => {\n      wait(100).then(() => {\n        bankRefName.current = selectedRowData[0].Bank_Code\n        if (bankRef.current) {\n          bankRef.current.value = selectedRowData[0].Bank\n        }\n        branchRef.current?.focus()\n      })\n      closeModalSearchBanks();\n    },\n\n    searchRef: searchModalInputRef,\n  });\n\n  useEffect(() => {\n    window.addEventListener('keydown', (e: any) => {\n      if (e.key === \"Escape\") {\n        closeDelayRef.current()\n      }\n    })\n  }, [])\n\n  return (\n    showModal ?\n      <>\n        <div style={{\n          position: \"fixed\",\n          top: 0,\n          bottom: 0,\n          left: 0,\n          right: 0,\n          background: \"transparent\",\n          zIndex: \"88\"\n        }}\n          onClick={() => {\n            setBlick(true)\n            setTimeout(() => {\n              setBlick(false)\n            }, 250)\n          }}\n\n        ></div>\n        <div\n\n          style={{\n            height: blick ? \"202px\" : \"200px\",\n            width: blick ? \"60.3%\" : \"60%\",\n            border: \"1px solid #64748b\",\n            position: \"absolute\",\n            left: \"50%\",\n            top: \"50%\",\n            transform: \"translate(-50%, -75%)\",\n            display: \"flex\",\n            flexDirection: \"column\",\n            zIndex: handleDelayClose ? -100 : 100,\n            opacity: handleDelayClose ? 0 : 1,\n            transition: \"all 150ms\",\n            boxShadow: '3px 6px 32px -7px rgba(0,0,0,0.75)'\n          }}>\n          <div\n            style={{\n              height: \"22px\",\n              background: \"white\",\n              display: \"flex\",\n              justifyContent: \"space-between\",\n              padding: \"5px\",\n              position: \"relative\",\n              alignItems: \"center\"\n\n            }}\n          >\n            <span style={{ fontSize: \"13px\", fontWeight: \"bold\" }}>Check Details</span>\n            <button\n              className=\"btn-check-exit-modal\"\n              style={{\n                padding: \"0 5px\",\n                borderRadius: \"0px\",\n                background: \"white\",\n                color: \"black\",\n                height: \"22px\",\n                position: \"absolute\",\n                top: 0,\n                right: 0\n              }}\n              onClick={() => {\n                closeDelay()\n              }}\n            >\n              <CloseIcon sx={{ fontSize: \"22px\" }} />\n            </button>\n          </div>\n          <div\n            style={{\n              flex: 1,\n              background: \"#F1F1F1\",\n              padding: \"5px\",\n              display: \"flex\",\n            }}\n          >\n            <div style={{\n              width: \"55%\",\n              display: \"flex\",\n              flexDirection: \"column\",\n              rowGap: \"5px\",\n              padding: \"10px\"\n\n            }}>\n              <TextInput\n                label={{\n                  title: \"Check No. : \",\n                  style: {\n                    fontSize: \"12px\",\n                    fontWeight: \"bold\",\n                    width: \"70px\",\n                  },\n                }}\n                input={{\n                  type: \"text\",\n                  style: { width: \"160px\" },\n                  onKeyDown: (e) => {\n                    if (e.code === \"NumpadEnter\" || e.code === 'Enter') {\n                      bankRef.current?.focus()\n                    }\n                  },\n                }}\n                inputRef={checknoRef}\n              />\n              {isLoadingModalSearchbanks ? (\n                <LoadingButton loading={isLoadingModalSearchbanks} />\n              ) : (\n                <TextInput\n                  containerStyle={{\n                    width: \"370px\"\n                  }}\n                  label={{\n                    title: \"Bank : \",\n                    style: {\n                      fontSize: \"12px\",\n                      fontWeight: \"bold\",\n                      width: \"70px\",\n                    },\n                  }}\n                  input={{\n                    disabled: false,\n                    type: \"text\",\n                    style: { width: \"300px\" },\n                    onKeyDown: (e) => {\n                      if (e.code === \"NumpadEnter\" || e.code === 'Enter') {\n                        openModalSearchBanks(e.currentTarget.value)\n                      }\n                    }\n                  }}\n                  icon={<AccountBoxIcon sx={{ fontSize: \"18px\" }} />}\n                  onIconClick={(e) => {\n                    e.preventDefault()\n                    if (bankRef.current) {\n                      openModalSearchBanks(bankRef.current.value)\n                    }\n                  }}\n                  inputRef={bankRef}\n                />\n              )}\n              <TextInput\n                label={{\n                  title: \"Branch : \",\n                  style: {\n                    fontSize: \"12px\",\n                    fontWeight: \"bold\",\n                    width: \"70px\",\n                  },\n                }}\n                input={{\n                  type: \"text\",\n                  style: { width: \"300px\" },\n                  onKeyDown: (e) => {\n                    if (e.code === \"NumpadEnter\" || e.code === 'Enter') {\n                      remarksRef.current?.focus()\n                    }\n                  },\n                }}\n                inputRef={branchRef}\n              />\n              <TextAreaInput\n                label={{\n                  title: \"Remarks : \",\n                  style: {\n                    fontSize: \"12px\",\n                    fontWeight: \"bold\",\n                    width: \"70px\",\n                  },\n                }}\n                textarea={{\n                  rows: 4,\n                  style: { width: \"300px\" },\n                  onKeyDown: (e) => {\n                    e.stopPropagation()\n                    if ((e.code === \"NumpadEnter\" && !e.shiftKey) || (e.code === 'Enter' && !e.shiftKey)) {\n                      checkdateRef.current?.focus()\n                    }\n                  },\n                }}\n                _inputRef={remarksRef}\n              />\n\n            </div>\n            <div style={{\n              width: \"45%\",\n              display: \"flex\",\n              flexDirection: \"column\",\n              rowGap: \"5px\",\n              position: \"relative\",\n              padding: \"10px\",\n              alignItems: \"flex-end\"\n            }}>\n              <TextInput\n                label={{\n                  title: \"Date : \",\n                  style: {\n                    fontSize: \"12px\",\n                    fontWeight: \"bold\",\n                    width: \"70px\",\n                  },\n                }}\n                input={{\n                  type: \"date\",\n                  style: { width: \"200px\" },\n                  defaultValue: format(new Date(), \"yyyy-MM-dd\"),\n                  onKeyDown: (e) => {\n                    if (e.code === \"NumpadEnter\" || e.code === 'Enter') {\n                      amountRef.current?.focus()\n                    }\n                  },\n                }}\n\n                inputRef={checkdateRef}\n              />\n              <TextFormatedInput\n                label={{\n                  title: \"Amount : \",\n                  style: {\n                    fontSize: \"12px\",\n                    fontWeight: \"bold\",\n                    width: \"70px\",\n                  },\n                }}\n                input={{\n                  type: \"text\",\n                  style: { width: \"200px\" },\n                  onKeyDown: (e) => {\n                    if (e.code === \"NumpadEnter\" || e.code === 'Enter') {\n                      if (handleOnSave) {\n                        handleOnSave()\n                      }\n                    }\n                  }\n                }}\n                inputRef={amountRef}\n              />\n              <div style={{\n                display: \"flex\",\n                columnGap: \"10px\",\n                flex: 1,\n                justifyContent: \"flex-end\",\n                alignItems: \"flex-end\"\n              }}>\n                <Button\n                  variant=\"contained\"\n                  color=\"success\"\n                  style={{\n                    height: \"22px\",\n                    fontSize: \"12px\",\n                  }}\n                  onClick={(e) => {\n                    if (handleOnSave) {\n                      handleOnSave()\n                    }\n\n                  }}\n                >\n                  OK\n                </Button>\n                <Button\n                  variant=\"contained\"\n                  color=\"success\"\n                  style={{\n                    height: \"22px\",\n                    fontSize: \"12px\",\n                  }}\n                  onClick={(e) => {\n                    closeDelay()\n                  }}\n                >\n                  Cancel\n                </Button>\n\n              </div>\n            </div>\n          </div>\n          {ModalSearchBanks}\n          <style>\n            {`\n              .btn-check-exit-modal:hover{\n                background:red !important;\n                color:white !important;\n              }\n            `}\n          </style>\n        </div>\n      </>\n      : null\n  )\n})\n\n\nexport function setNewStateValue(dispatch: any, obj: any) {\n  Object.entries(obj).forEach(([field, value]) => {\n    dispatch({ type: \"UPDATE_FIELD\", field, value });\n  });\n}\n","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-7 3c1.93 0 3.5 1.57 3.5 3.5S13.93 13 12 13s-3.5-1.57-3.5-3.5S10.07 6 12 6zm7 13H5v-.23c0-.62.28-1.2.76-1.58C7.47 15.82 9.64 15 12 15s4.53.82 6.24 2.19c.48.38.76.97.76 1.58V19z\"\n}), 'AccountBox');\nexports.default = _default;","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 8V4l8 8-8 8v-4H4V8z\"\n}), 'Forward');\nexports.default = _default;","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19 8H5c-1.66 0-3 1.34-3 3v6h4v4h12v-4h4v-6c0-1.66-1.34-3-3-3zm-3 11H8v-5h8v5zm3-7c-.55 0-1-.45-1-1s.45-1 1-1 1 .45 1 1-.45 1-1 1zm-1-9H6v4h12V3z\"\n}), 'LocalPrintshop');\nexports.default = _default;","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z\"\n}), 'Search');\nexports.default = _default;"],"names":["DataGridViewReact","forwardRef","_ref","ref","columns","_ref$rows","rows","_ref$height","height","getSelectedItem","onKeyDown","_ref$disbaleTable","disbaleTable","_ref$isTableSelectabl","isTableSelectable","containerStyle","parentElementRef","useRef","_useState","useState","_useState2","_slicedToArray","data","setData","_useState3","_useState4","column","setColumn","_useState5","_useState6","selectedRow","setSelectedRow","_useState7","_useState8","selectedRowIndex","setSelectedRowIndex","totalRowWidth","reduce","a","b","width","useEffect","length","filter","itm","hide","map","col","key","useImperativeHandle","checkNoIsExist","checkNo","some","subArray","getData","_toConsumableArray","newData","getColumns","resetTable","getSelectedRow","value","_setSelectedRow","setDataFormated","getDataFormatted","Check_No","Check_Date","Check_Amnt","BankName","Branch","Check_Remarks","Deposit_Slip","DateDeposit","OR_No","BankCode","_jsx","style","_objectSpread","overflow","position","pointerEvents","border","boxShadow","background","children","_jsxs","concat","id","borderCollapse","top","zIndex","colItm","idx","borderRight","fontSize","textAlign","padding","label","rowItm","rowIdx","className","cursor","margin","display","alignItems","justifyContent","readOnly","checked","type","onClick","colIdx","tabIndex","onDoubleClick","e","prev","index","Math","max","td","document","querySelector","focus","min","code","preventDefault","userSelect","debitColumn","flex","creditColumn","queryKeyPaymentType","queryKeyNewORNumber","Collection","_getSelectedItem","_queryFn","_mutationFn","_queryFn2","_mutationFn2","_mutationFn3","_saveCashDebit","_saveCredit","debitTable","creditTable","modalCheckRef","paymentType","setPaymentType","totalDebit","setTotalDebit","totalCredit","setTotalCredit","collectionMode","setCollectionMode","searchRef","ornoSubRef","ornoRef","dateRef","pnClientRef","clientNameRef","IDNo","paymentTypeRef","amountDebitRef","buttonCshSave","buttonCheckSave","buttonCheckList","transactionRef","amountCreditRef","faoRef","remarksRef","vatTypeRef","invoiceRef","foaIDNoRef","accCodeRef","accTitleRef","accTCRef","searchModalInputRef","_useContext","useContext","AuthContext","myAxios","user","executeQueryToClient","useExecuteQueryFromClient","disableFields","_useUpwardTableModalS","useUpwardTableModalSearch","query","search","current","_x","_x2","_x3","_x4","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_","__","dt","checkDetails","wrap","_context","next","sent","wait","then","checknoRef","bankRef","Bank","branchRef","Remarks","checkdateRef","amountRef","bankRefName","BName","saveCheckDebit","closeModal","_buttonCheckList$curr","stop","apply","arguments","UpwardTableModalSearch","openModal","_useQuery","useQuery","queryKey","queryFn","_callee2","_context2","get","headers","Authorization","accessToken","abrupt","refetchOnWindowFocus","paymentTypeLoading","isLoading","transactionDesc","_useQueryModalTable","useQueryModalTable","link","url","queryUrlName","field","headerName","uniqueId","responseDataKey","onSelected","selectedRowData","_paymentTypeRef$curre","_selectedRowData$0$Na","client_id","Name","closeCliendIDsModal","ModalClientIDs","ModalComponent","openCliendIDsModal","isLoadingClientIdsModal","_useQueryModalTable2","_remarksRef$current","_selectedRowData$0$Na2","closeCreditCliendIDsModal","ModalCreditClientIDs","openCreditCliendIDsModal","isLoadingCreditClientIdsModal","_useMutation","useMutation","mutationKey","mutationFn","_x5","_callee3","variables","_context3","ORNo","onSuccess","res","dataCollection","collection","Date_OR","ID_No","Short","debit","credit","i","Payment","push","Amount","Debit","format","Date","Bank_Branch","Acct_Code","DRCode","Acct_Title","DRTitle","SlipCode","Cntr","DRRemarks","TC","Bank_Code","Purpose","Credit","CRCode","CRTitle","CRLoanID","CRLoanName","CRVatType","CRInvoiceNo","temp_id","transaction","amount","CRRemarks","Code","Title","Account_No","VATType","CRVATType","invoiceNo","sum","parseFloat","replace","closeModalSearchCollection","loadingCollectionDataSearch","mutateCollectionDataSearch","mutate","_useQueryModalTable3","resetCredit","resetDebit","ModalSearchCollection","openModalSearchCollection","isLoadingModalSearchCollection","_useQuery2","_callee4","_context4","response","_response$data","_response$data2","collectionID","NewORNoLoading","refetchNewOR","refetch","_useMutation2","_x6","_callee5","_context5","mode","post","success","resetCollection","Swal","icon","title","message","showConfirmButton","timer","loadingAddNew","_useMutation3","_x7","_callee6","_context6","data1","console","log","flushSync","localStorage","removeItem","setItem","JSON","stringify","department","window","open","printOR","mutataPrint","isLoadingPrint","_debitTable$current","_creditTable$current","_pnClientRef$current","refs","autoClose","undefined","_callee8","_refs$amountRef$curre","_refs$checknoRef$curr","_refs$checkdateRef$cu","_refs$branchRef$curre","_refs$remarksRef$curr","_refs$bankRef$current","checkno","checkdate","branch","remarks","bank","debitTableData","_dd$data3","_dd$data4","dd","_debitTableData","newDataFormatted","newDataTable","_context8","alert","toLocaleString","minimumFractionDigits","maximumFractionDigits","closeDelay","saveCredit","_callee9","_dd$data$data","_faoRef$current","_transactionRef$curre","_amountCreditRef$curr","_faoRef$current2","_remarksRef$current2","_vatTypeRef$current","_invoiceRef$current","creditTableData","_transactionRef$curre2","_amountCreditRef$curr2","_faoRef$current3","_remarksRef$current3","_vatTypeRef$current2","_invoiceRef$current2","_creditTableData","newCreditTableData","_dd","taxableamt","inputtax","_faoRef$current4","_remarksRef$current4","_invoiceRef$current3","_dd$data5","_dd$data6","_TC$data","_faoRef$current5","_remarksRef$current5","_invoiceRef$current4","_dd$data7","_dd$data8","_TC$data2","_newData","_context9","isNaN","splice","_modalCheckRef$curren","setFocus","_amountDebitRef$curre3","_transactionRef$curre3","PageHelmet","flexDirection","columnGap","LoadingButton","loading","TextInput","fontWeight","input","currentTarget","SearchIcon","sx","onIconClick","inputRef","IconButton","size","color","AddIcon","disabled","_ornoRef$current","_dateRef$current","_pnClientRef$current2","_clientNameRef$curren","_paymentTypeRef$curre2","_transactionRef$curre4","obj","toString","creditTableDataFormatted","debitTableDataFormatted","state","PNo","codeCondfirmationAlert","isUpdate","cb","userCodeConfirmation","saveCondfirmationAlert","isConfirm","SaveIcon","LocalPrintshopIcon","text","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","result","isConfirmed","CloseIcon","rowGap","RestartAltIcon","defaultValue","_pnClientRef$current3","AccountBoxIcon","ContentContainer","firstContent","marginTop","SelectInput","selectRef","select","_amountDebitRef$curre4","onChange","target","_buttonCheckSave$curr","datasource","values","borderRadius","_modalCheckRef$curren2","showModal","_modalCheckRef$curren3","_modalCheckRef$curren4","TextFormatedInput","_buttonCshSave$curren","click","_x8","_x9","_callee7","_amountDebitRef$curre","_dd$data","_dd$data2","_amountDebitRef$curre2","_context7","saveCashDebit","ForwardIcon","Button","startIcon","variant","secondContent","_modalCheckRef$curren5","_buttonCheckSave$curr2","_buttonCheckSave$curr3","strBank","split","confirm","contentStyle","htmlFor","Autocomplete","DisplayMember","DataSource","disableInput","selected","onKeydown","_amountCreditRef$curr3","_transactionRef$curre5","_faoRef$current6","TextAreaInput","textarea","_vatTypeRef$current3","stopPropagation","shiftKey","_inputRef","_invoiceRef$current5","ModalCheck","handleOnSave","getRefs","handleOnClose","_buttonCheckSave$curr4","UpwardLoader","_ref2","_useState9","_useState10","show","setShow","searchInputRef","_onKeyDown","_ref3","tableRef","left","transform","boxSizing","right","_x10","_callee10","_tableRef$current","searchQuery","_tableRef$current2","_tableRef$current3","_context10","_x11","_callee11","_searchInputRef$curre","_tableRef$current4","_context11","_Fragment","setTimeout","event","KeyboardEvent","bubbles","dispatchEvent","bottom","backgroundColor","CircularProgress","_ref4","_ref5","_useState11","_useState12","setShowModal","_useState13","_useState14","handleDelayClose","setHandleDelayClose","_useState15","_useState16","blick","setBlick","closeDelayRef","clsoeModal","_useQueryModalTable4","_branchRef$current","closeModalSearchBanks","ModalSearchBanks","openModalSearchBanks","isLoadingModalSearchbanks","addEventListener","opacity","transition","_bankRef$current","_remarksRef$current6","_checkdateRef$current","_amountRef$current","setNewStateValue","dispatch","Object","entries","forEach","_ref6","_ref7","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d"],"sourceRoot":""}