{"version":3,"file":"static/js/6975.e6e9cebe.chunk.js","mappings":"iUAGe,SAASA,EAAgBC,GAY/B,IAXPC,EAAKD,EAALC,MACAC,EAAIF,EAAJE,KACAC,EAAQH,EAARG,SACAC,EAAKJ,EAALI,MACAC,EAASL,EAATK,UACAC,EAAQN,EAARM,SACAC,EAAaP,EAAbO,cACAC,EAASR,EAATQ,UACAC,EAAST,EAATS,UAASC,EAAAV,EACTW,SAAAA,OAAQ,IAAAD,EAAG,QAAOA,EACfE,GAAIC,EAAAA,EAAAA,GAAAb,EAAAc,GAEP,OACEC,EAAAA,EAAAA,KAACC,EAAAA,EAAoB,CAACC,YAAaC,EAAAA,EAAeC,UAChDJ,EAAAA,EAAAA,KAACK,EAAAA,GAAUC,EAAAA,EAAAA,GAAA,CACXC,mBAAoB,CAACC,MAAO,SAC1BnB,MAAOA,EACPD,SAAUA,EACVqB,IAAKjB,EACLkB,UAAW,CACThB,WAASY,EAAAA,EAAAA,GAAA,CACPK,KAAM,QACNzB,MAAAA,EACAC,KAAAA,EACAG,UAAAA,EACAC,SAAUA,EACVE,UAAAA,GAEGC,IAGPkB,gBAAiB,CACfC,GAAI,CACFL,MAAO,UAGXK,GAAI,CACFjB,SAAAA,EACAkB,SAAU,CAAEC,YAAa,SACzB,qBAAsB,CAAEC,SAAU,QAClC,wCAAyC,CACvCC,IAAK,UAGLpB,KAIZ,C,mOCfMqB,EAAQ,CACZC,SAAU,WACVF,IAAK,MACLG,KAAM,MACNC,UAAW,wBACXC,MAAO,MACPC,QAAS,mBACTC,UAAW,GACXC,EAAG,EACHC,OAAQ,QAGK,SAASC,EAAc1C,GAmBZ,IAlBxB2C,EAAM3C,EAAN2C,OACAC,EAAS5C,EAAT4C,UAEAC,GADQ7C,EAAR8C,SACO9C,EAAP6C,SACAE,EAAiB/C,EAAjB+C,kBAEAC,GADOhD,EAAPiD,QACIjD,EAAJgD,MACAE,EAAElD,EAAFkD,GACAC,EAAYnD,EAAZmD,aACAC,EAASpD,EAAToD,UACAC,EAAgBrD,EAAhBqD,iBACAC,EAActD,EAAdsD,eAAcC,EAAAvD,EACdwD,MAAAA,OAAK,IAAAD,EAAG,GAAEA,EACVE,EAASzD,EAATyD,UACaC,GAAA1D,EAAb2D,cAAa3D,EACb4D,kBAAAA,OAAgB,IAAAF,EAAG,WAAO,EAACA,EAC3BG,EAAe7D,EAAf6D,gBACAC,EAAgB9D,EAAhB8D,iBAEMC,EAASC,IAEf,OACEjD,EAAAA,EAAAA,KAACkD,EAAAA,EAAK,CACJC,KAAMd,EACNe,QAAShB,EACT,kBAAgB,oBAChB,mBAAiB,0BAAyBhC,UAE1CiD,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CAACzC,GAAIK,EAAMd,SAAA,EACbJ,EAAAA,EAAAA,KAACuD,EAAAA,EAAU,CAACpB,GAAG,oBAAoBqB,QAAQ,KAAKC,UAAU,KAAKC,GAAI,EAAEtD,SAClEqC,KAEHzC,EAAAA,EAAAA,KAAC2D,EAAAA,EAAS,CACRhD,KAAK,QACLzB,MAAM,SACNO,WAAS,EACTL,SAAUmD,EACVqB,WAAY,CACVrE,SAAUmD,EACVxB,MAAO,CAAEU,OAAQ,OAAQZ,SAAU,QACnC6C,cACE7D,EAAAA,EAAAA,KAAC8D,EAAAA,EAAc,CAAC3C,SAAS,MAAKf,UAC5BJ,EAAAA,EAAAA,KAAC+D,EAAAA,EAAU,CACTC,QAAS,WAAO,IAADC,EACbpB,EAA0B,OAATH,QAAS,IAATA,GAAkB,QAATuB,EAATvB,EAAWwB,eAAO,IAAAD,OAAT,EAATA,EAAoB5E,MACvC,EACA8E,KAAK,MAAK/D,UAEVJ,EAAAA,EAAAA,KAACoE,EAAAA,EAAU,SAKnBC,KAAK,SACL/E,UAAW,SAACgF,GAC2C,IAADC,EAArC,UAAXD,EAAEE,MAA+B,gBAAXF,EAAEE,OAC1BF,EAAEG,iBACF5B,EAA0B,OAATH,QAAS,IAATA,GAAkB,QAAT6B,EAAT7B,EAAWwB,eAAO,IAAAK,OAAT,EAATA,EAAoBlF,QAEvCqF,EACEJ,EACAtB,EACS,OAATN,QAAS,IAATA,OAAS,EAATA,EAAWwB,QAEf,EACArD,GAAI,CACF8D,aAAc,OACd,qBAAsB,CAAE3D,SAAU,QAClC,wCAAyC,CAAEC,IAAK,YAGpDjB,EAAAA,EAAAA,KAAA,OACE4E,UAAS,GAAAC,OAAK7B,EAAM,mCACpB9B,MAAO,CAAEC,SAAU,WAAYS,OAAO,GAADiD,OAAKjD,EAAS,GAAE,OAAOxB,UAE5DJ,EAAAA,EAAAA,KAAC8E,EAAAA,EAAK,CACJC,mBAAmB,EACnBC,aAAa,EACblD,QAASA,EACTD,UAAWA,EACXoD,cAAe,SAACC,EAAWC,EAAMX,GAC/BxC,EAAkBkD,EAAWC,EAC/B,EACAC,SAAUjD,EACVF,KAAMA,EACNa,gBAAiBA,EACjBC,iBAAkBA,OAItB/C,EAAAA,EAAAA,KAAA,OAAKkB,MAAO,CAAEC,SAAU,WAAYF,IAAK,OAAQoE,MAAO,QAASjF,UAC/DJ,EAAAA,EAAAA,KAAC+D,EAAAA,EAAU,CACT,aAAW,gBACXvD,MAAM,YACNwD,QAAS1B,EAAiBlC,UAE1BJ,EAAAA,EAAAA,KAACsF,EAAAA,EAAS,YAMtB,CAEO,SAASrC,IAGd,MADoB,QADCsC,KAAKC,MAAsB,IAAhBD,KAAKE,SAGvC,CAyBO,SAASf,EACdJ,EACAM,EACAc,GAEA,IAAM1C,EAAS4B,EACf,GAAe,cAAXN,EAAEE,KAAsB,CAAC,IAADmB,EACpB1D,EAAO2D,SAASC,iBAAiB,IAADhB,OAAK7B,EAAM,sBACjDsB,EAAEG,iBACK,QAAPkB,EAAA1D,EAAK,UAAE,IAAA0D,GAAPA,EAASG,UAAUC,IAAI,kBAhC3B,SAAwBnB,EAAmBc,GACzC,IAAMM,EAAiBJ,SAASK,cAAc,IAADpB,OACvCD,EAAS,sBAETsB,EAA2B,OAAdF,QAAc,IAAdA,OAAc,EAAdA,EAAgBC,cAAc,SACvC,OAAVC,QAAU,IAAVA,GAAAA,EAAYC,QACZ,IAAMC,EAAQ,IAAIC,WAAW,aAAc,CACzCC,SAAS,EACTC,YAAY,EACZC,KAAMC,SAEM,OAAdT,QAAc,IAAdA,GAAAA,EAAgBU,cAAcN,GACpB,OAAVF,QAAU,IAAVA,GAAAA,EAAYS,iBAAiB,WAAW,SAACC,GACxB,YAAXA,EAAGC,MACLD,EAAGnC,iBACHiB,EAAGS,SAEU,YAAXS,EAAGC,MACS,OAAdb,QAAc,IAAdA,GAAAA,EAAgBF,UAAUgB,OAAO,kBAErC,GACF,CAYIC,CAAenC,EAAWc,GAC1BzD,EAAK+E,SAAQ,SAACtB,EAAIuB,GAChBvB,EAAGiB,iBAAiB,WAAW,SAACC,GAC9B,GAAe,YAAXA,EAAGC,IAAmB,CAAC,IAADK,EAAAC,EACxB,GAAIF,GAAO,EACT,OAMF,OAHAL,EAAGnC,iBACM,QAATyC,EAAAjF,EAAKgF,UAAI,IAAAC,GAATA,EAAWpB,UAAUgB,OAAO,uBACf,QAAbK,EAAAlF,EAAKgF,EAAM,UAAE,IAAAE,GAAbA,EAAerB,UAAUC,IAAI,kBAE/B,CACA,GAAe,cAAXa,EAAGC,IAAqB,CAAC,IAADO,EAAAC,EAE1B,GADAT,EAAGnC,iBACCwC,GAAOhF,EAAKqF,OAAS,EACvB,OAEO,QAATF,EAAAnF,EAAKgF,UAAI,IAAAG,GAATA,EAAWtB,UAAUgB,OAAO,kBACf,QAAbO,EAAApF,EAAKgF,EAAM,UAAE,IAAAI,GAAbA,EAAevB,UAAUC,IAAI,iBAC/B,CACF,GACF,GACF,CACF,C,iICjNawB,EAAsBC,EAAAA,YAGjC,SAA6BC,EAAOhH,GACpC,IAAQrB,EAAuBqI,EAAvBrI,SAAasI,GAAK5H,EAAAA,EAAAA,GAAK2H,EAAK1H,GAEpC,OACEC,EAAAA,EAAAA,KAAC2H,EAAAA,IAAarH,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACRoH,GAAK,IACTE,YAAanH,EACboH,cAAe,SAACC,GACd1I,EAAS,CACP2I,OAAQ,CACN5I,KAAMsI,EAAMtI,KACZE,MAAOyI,EAAOzI,QAGpB,EACA2I,eAAe,EACfC,mBAAiB,EACjBC,sBAAoB,IAI1B,G,yKCeMC,GAAeC,EAAAA,EAAAA,eASlB,CACDnG,KAAM,GACNoG,kBAAmB,GACnBC,eAAgB,kBAAMtI,EAAAA,EAAAA,KAAA,SAAW,EACjCuI,yBAA0B,aAC1BC,yBAAyB,IAErB1D,GAAQ2D,EAAAA,EAAAA,aACZ,SAAAxJ,EAoBEwB,GACI,IAnBFoB,EAAS5C,EAAT4C,UACAC,EAAO7C,EAAP6C,QACAG,EAAIhD,EAAJgD,KACAmD,EAAQnG,EAARmG,SACAL,EAAiB9F,EAAjB8F,kBACAC,EAAW/F,EAAX+F,YACAC,EAAahG,EAAbgG,cAAayD,EAAAzJ,EACb0J,sBAAAA,OAAqB,IAAAD,EAAGE,EAAqBF,EAC7C5F,EAAe7D,EAAf6D,gBACAC,EAAgB9D,EAAhB8D,iBAAgB8F,EAAA5J,EAChB6J,kBAAAA,OAAiB,IAAAD,GAAOA,EAAAE,EAAA9J,EACxBqJ,eAAAA,OAAc,IAAAS,EAAG,SACfV,EACApG,GAAgB,OACbjC,EAAAA,EAAAA,KAAA,SAAW,EAAA+I,EAAAC,EAAA/J,EAChBsJ,yBAAAA,OAAwB,IAAAS,EAAG,aAAYA,EAAAC,EAAAhK,EACvCuJ,wBAAAA,OAAuB,IAAAS,GAAOA,EAIhCC,GAAwCC,EAAAA,EAAAA,UAAc,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAlDI,EAAYF,EAAA,GAAEG,EAAeH,EAAA,GAgBpC,SAASpH,EAAkBkD,EAAgBC,EAAWX,GAChDS,GACFA,EAAcC,EAAWC,EAAMX,EAEnC,EAlBAgF,EAAAA,EAAAA,qBAAoB/I,GAAK,iBAAO,CAC9BgJ,gBAAiB,WACfF,EAAgB,GAClB,EACAG,gBAAiB,WACf,OAAOzH,EAAK0H,QAAO,SAACC,GAAS,OACf,OAAZN,QAAY,IAAZA,OAAY,EAAZA,EAAcO,SAASD,EAAKxE,GAAU,GAE1C,EACAmE,gBAAiB,SAACpE,GAChBoE,EAAgBpE,EAClB,EACD,IAOD,IAAI2E,EAA0B,GAE9B,OACE9J,EAAAA,EAAAA,KAACmI,EAAa4B,SAAQ,CACpB1K,MAAO,CACLmJ,wBAAAA,EACAD,yBAAAA,EACAF,kBAAmBiB,EACnBrH,KAAAA,EACAqG,eAAAA,GACAlI,UAEFJ,EAAAA,EAAAA,KAACgK,EAAAA,GAAQ,CACPC,MAAO,CACLC,eAAgBC,EAAAA,EAChBC,OAAQzB,GAEV0B,aAAc,CACZC,WAAY,CAAEC,gBAAiB,CAAEC,SAAU,MAE7CC,QAAS5I,EACT6I,SAAU,SAACC,GAAG,OAAKA,EAAIvF,EAAS,EAChCtD,QAASA,EAAQ6H,QAAO,SAACiB,GAAQ,OAAMA,EAAIC,IAAI,IAC/C5I,KAAMA,EACN6I,wBAAwB,EACxBC,0BAA0B,EAC1BjC,kBAAmBA,EACnBT,kBAAmBiB,EACnB0B,UAAW,GACXC,mBAAoB,GACpBC,gBAAiB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,KACtCrK,IAAEP,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CACA,UAAW,CACTE,MAAO,WAET,WAAY,CACVA,MAAO,WAET,cAAe,CACbA,MAAO,SAET,aAAc,CACZA,MAAO,UAET,iBAAkB,CAChBA,MAAO,OAET,YAAa,CACXA,MAAO,OAET,wCAAyC,CACvCA,MAAO,QACP,sBAAuB,CACrB2K,KAAM,YAGV,oBAAqB,CACnBC,WAAY,UACZ5K,MAAO,QACP,sBAAuB,CACrB2K,KAAM,UAGV,2BAA4B,CAC1BC,WAAY,UACZ5K,MAAO,QACP,sBAAuB,CACrB2K,KAAM,UAGV,2BAA4B,CAC1BC,WAAY,UACZ5K,MAAO,QACP,sBAAuB,CACrB2K,KAAM,UAGV,gCAAiC,CAC/BE,QAAS,iBAGR,CACD,+BAAgC,CAC9BD,WAAY,UACZ5K,MAAO,QACPQ,SAAU,QAGZ,gGACE,CACEsK,QAASvG,GAAqBC,EAAc,OAAS,QACrDmG,KAAM,SAEV,qFACE,CACEG,QAASvG,GAAqBC,EAAc,OAAS,WAGxD,CACDhE,SAAU,GACVuK,WAAY,IACZ,+BAAgC,CAC9B3J,OAAQ,OACRN,MAAO,QAET,mCAAoC,CAClCM,OAAQ,OACRN,MAAO,UAQbkK,0BAA2B,SAACtG,GAC1B,GAAIF,EAAa,CACf,GAAIE,EAAUoC,QAAU,EAAG,OAE3B,GADAwC,EAAc5E,EACVoE,EAAaO,SAASC,EAAYA,EAAYxC,OAAS,IACzD,OAKF,OAHAiC,EAAgBrE,QAEhBlD,EAAkB,CAACkD,EAAUA,EAAUoC,OAAS,IAAKrF,EAAM,KAE7D,CAEA,IAAK+C,GAAeD,EAClB,GAAIuE,IAA4B,OAAZA,QAAY,IAAZA,OAAY,EAAZA,EAAchC,QAAS,EAAG,CAC5C,IAAMmE,EAAe,IAAIC,IAAIpC,GAC7BC,EACErE,EAAUyE,QAAO,SAACgC,GAAM,OAAMF,EAAaG,IAAID,EAAE,IAErD,MACEpC,EAAgBrE,QAGlBqE,EAAgBrE,GAGlBlD,EAAkB,CAACkD,EAAUA,EAAUoC,OAAS,IAAKrF,EAAM,KAC7D,EACAW,cAAe,SAACiJ,EAAShF,GAEvB,GADmB,CAAC,cAAe,QAAS,SAAU,aACtCgD,SAAShD,EAAIrC,MAI7B,OADAqC,EAAIpC,iBACa,UAAboC,EAAIrC,MAAiC,gBAAbqC,EAAIrC,KAC1BO,IAAsBC,EACjBuE,GAAgB,SAACpE,GACtB,OAAIA,GAAQA,EAAKmC,OAAS,GAAKnC,EAAK,KAAO0G,EAAGC,QAAQ3J,IACpDH,EAAkB,GAAIC,EAAM4E,EAAIrC,MACzB,KAETxC,EAAkB,CAAC6J,EAAGC,QAAQ3J,IAAKF,EAAM4E,EAAIrC,MACtC,CAACqH,EAAGC,QAAQ3J,IACrB,SAEAoH,GAAgB,SAACpE,GACf,OACEA,IACCH,GACDG,EAAKmC,OAAS,GACdnC,EAAK0E,SAASgC,EAAGC,QAAQ3J,KAEzBgD,EAAOA,EAAKwE,QAAO,SAACC,GAAS,OAAKA,IAASiC,EAAGC,QAAQ3J,EAAE,IACxDH,EAAkB,GAAIC,EAAM4E,EAAIrC,MACzBW,GAGPA,GACAH,GACAG,EAAKmC,OAAS,GACdnC,EAAK0E,SAASgC,EAAGC,QAAQ3J,IAElBgD,GAETnD,EAAkB,CAAC6J,EAAGC,QAAQ3J,IAAKF,EAAM4E,EAAIrC,MACvC,GAANK,QAAAkH,EAAAA,EAAAA,GAAW5G,GAAI,CAAE0G,EAAGC,QAAQ3J,KAC9B,IAIa,WAAb0E,EAAIrC,MAAkC,cAAbqC,EAAIrC,MAC/B+E,EAAgB,CAACsC,EAAGC,QAAQ3J,KACrBH,EAAkB,CAAC6J,EAAGC,QAAQ3J,IAAKF,EAAM4E,EAAIrC,YAFtD,CAIF,EACAwH,uBAAqB,EACrBlJ,gBAAiBA,EACjBC,iBAAkBA,KAI1B,IAIF,SAASkJ,EAAUC,GAIoD,IAHrEC,EAAID,EAAJC,KACAC,EAAYF,EAAZE,aACAxH,EAASsH,EAATtH,UAEMyH,GAASC,EAAAA,EAAAA,KACTC,GAAYC,EAAAA,EAAAA,GAAgBH,EAAQI,EAAAA,IAE1C,OACEzM,EAAAA,EAAAA,KAAC0M,EAAAA,EAAa,CACZlJ,QAAQ,WACRhD,MAAM,UACNoE,UAAWA,EACX+H,MAAOJ,EACPJ,KAAMA,EAAO,EACb/M,SAAU,SAACgH,EAAOwG,GAChBR,EAAahG,EAAcwG,EAAU,EACvC,GAGN,CAEA,SAASC,EAAiBpF,GACxB,OAAOzH,EAAAA,EAAAA,KAAC8M,EAAAA,GAAcxM,EAAAA,EAAAA,GAAA,CAACyM,iBAAkBd,GAAgBxE,GAC3D,CACA,SAASmB,EACPnB,GAEA,IAAAuF,GAMIC,EAAAA,EAAAA,YAAW9E,GALbE,EAAiB2E,EAAjB3E,kBACAG,EAAuBwE,EAAvBxE,wBACAD,EAAwByE,EAAxBzE,yBACAD,EAAc0E,EAAd1E,eACArG,EAAI+K,EAAJ/K,KAEF,OACEoB,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CACFzC,GAAI,CACFqM,UAAW,OACX5B,QAAS,OACThK,MAAO,OACP6L,eAAgB,gBAChBC,GAAI,EACJC,WAAY,SACZC,cAC+B,eAA7B/E,EAA4C,cAAgB,OAC9DnI,SAAA,EAEFJ,EAAAA,EAAAA,KAAC6M,GAAgBvM,EAAAA,EAAAA,GAAA,GAAKmH,KACtBpE,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CACFzC,GAAI,CACFyK,QAAS,OACT6B,eAC+B,eAA7B5E,EACI,aACA,WACNgF,KAAM,EACNF,WAAY,UACZjN,SAAA,CAEDoI,IACCnF,EAAAA,EAAAA,MAAA,OAAAjD,SAAA,CAAK,YAA2B,OAAjBiI,QAAiB,IAAjBA,OAAiB,EAAjBA,EAAmBf,WAEpCtH,EAAAA,EAAAA,KAAA,OAAAI,SAAMkI,EAAeD,EAAmBpG,UAIhD,CApEA,K,6cC5Re,SAASuL,IAAuB,IAADC,EAC5CT,GAUIC,EAAAA,EAAAA,YAAWS,GATbC,EAAKX,EAALW,MACAC,EAAiBZ,EAAjBY,kBACAC,EAAiBb,EAAjBa,kBACAC,EAAOd,EAAPc,QACAC,EAAIf,EAAJe,KACAC,EAAehB,EAAfgB,gBACAC,EAAOjB,EAAPiB,QACAC,EAAWlB,EAAXkB,YACAC,EAAQnB,EAARmB,SAGIC,GAAuBC,EAAAA,EAAAA,QAAyB,MAChDC,GAAsBD,EAAAA,EAAAA,QAAyB,MAC/CE,GAAWF,EAAAA,EAAAA,QAAoB,MAC/BG,GAAgBH,EAAAA,EAAAA,QAAoB,MACpCI,GAAoBJ,EAAAA,EAAAA,QAAoB,MAE9CK,GAKIC,EAAAA,EAAAA,GAAmB,CACrBC,KAAM,CACJC,IAAK,+BACLC,aAAc,gBAEhBhN,QAAS,CACP,CAAEiN,MAAO,kBAAmBC,WAAY,KAAM1N,MAAO,KACrD,CAAEyN,MAAO,WAAYC,WAAY,aAAczB,KAAM,GACrD,CACEwB,MAAO,aACPC,WAAY,UACZ1N,MAAO,MAGXS,SAAU,cACVkN,SAAU,kBACVC,gBAAiB,UACjBC,WAAY,SAACC,GACXvB,EAAkBuB,EAAgB,GAAGC,gBAAiB,aACtDxB,EAAkBuB,EAAgB,GAAGE,SAAU,eAC/CzB,EAAkBuB,EAAgB,GAAGG,QAAS,kBAC9C1B,EAAkBuB,EAAgB,GAAGI,aAAc,gBACnDC,GACF,EACA7M,cAAe,SAACiJ,EAAShF,GACN,UAAbA,EAAIrC,MAAiC,gBAAbqC,EAAIrC,OAC9BqJ,EAAkBhC,EAAGlB,IAAI0E,gBAAiB,aAC1CxB,EAAkBhC,EAAGlB,IAAI2E,SAAU,eACnCzB,EAAkBhC,EAAGlB,IAAI4E,QAAS,kBAClC1B,EAAkBhC,EAAGlB,IAAI,GAAG6E,aAAc,gBAC1CC,IAEJ,EACA/M,UAAW0L,IArCKsB,EAAchB,EAA9BiB,eACWC,EAAkBlB,EAA7BmB,UACWC,EAAuBpB,EAAlC7M,UACY4N,EAAmBf,EAA/BqB,WAqCFC,GAKIrB,EAAAA,EAAAA,GAAmB,CACrBC,KAAM,CACJC,IAAK,8BACLC,aAAc,eAEhBhN,QAAS,CACP,CAAEiN,MAAO,iBAAkBC,WAAY,KAAM1N,MAAO,KACpD,CAAEyN,MAAO,WAAYC,WAAY,aAAczB,KAAM,GACrD,CACEwB,MAAO,aACPC,WAAY,UACZ1N,MAAO,MAGXS,SAAU,aACVkN,SAAU,iBACVC,gBAAiB,SACjBC,WAAY,SAACC,GACXvB,EAAkBuB,EAAgB,GAAGa,eAAgB,YACrDpC,EAAkBuB,EAAgB,GAAGE,SAAU,cAC/CY,GACF,EACAtN,cAAe,SAACiJ,EAAShF,GACN,UAAbA,EAAIrC,MAAiC,gBAAbqC,EAAIrC,OAC9BqJ,EAAkBhC,EAAGlB,IAAIsF,eAAgB,YACzCpC,EAAkBhC,EAAGlB,IAAI2E,SAAU,cACnCY,IAEJ,EACAxN,UAAW4L,IAjCK6B,EAAYH,EAA5BL,eACWS,EAAgBJ,EAA3BH,UACWQ,EAAqBL,EAAhCnO,UACYqO,EAAiBF,EAA7BD,WAgCFO,GAAmEC,EAAAA,EAAAA,UAAS,CAC1ExO,SAAU,yBACVyO,QAAQ,WAAD,OAAA/C,EAAAA,IAAAgD,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAE,SAAAC,IAAA,OAAAF,EAAAA,EAAAA,KAAAG,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACDlD,EAAQmD,IAAI,mDAAoD,CACpEC,QAAS,CACPC,cAAc,UAADtM,OAAgB,OAAJkJ,QAAI,IAAJA,OAAI,EAAJA,EAAMqD,gBAEjC,cAAAN,EAAAO,OAAA,SAAAP,EAAAQ,MAAA,wBAAAR,EAAAS,OAAA,GAAAX,EAAA,MAAAY,MAAA,KAAAC,UAAA,IAPQC,EAAapB,EAAnBnL,KAAgCwM,EAAsBrB,EAAjCzO,UAU7B,SAAS+P,EAAqBtN,GACb,gBAAXA,EAAEE,MAAqC,UAAXF,EAAEE,MAChC0J,GAEJ,CAEA,OACE7K,EAAAA,EAAAA,MAAA,OAAAjD,SAAA,EACEiD,EAAAA,EAAAA,MAAA,OACEnC,MAAO,CACLoK,QAAS,OACTuG,IAAK,OACLvE,cAAe,UACflN,SAAA,EAEFiD,EAAAA,EAAAA,MAAA,OACEnC,MAAO,CACLoK,QAAS,OACTuG,IAAK,QACLzR,SAAA,EAEFJ,EAAAA,EAAAA,KAAA,OACEkB,MACE,CACEoK,QAAS,OACT4B,UAAW,OACXK,KAAM,EACNuE,UAAW,cAEd1R,UAEDiD,EAAAA,EAAAA,MAAA,YACEnC,MACE,CACEqM,KAAM,EACNjC,QAAS,OACTgC,cAAe,SACfuE,IAAK,OACLxG,QAAS,OACT0G,OAAQ,oBACRC,aAAc,OAEjB5R,SAAA,EAEDJ,EAAAA,EAAAA,KAAA,UAAQkB,MAAO,CAAEV,MAAO,WAAYJ,SAAC,yBACrCiD,EAAAA,EAAAA,MAAA,OACEnC,MAAO,CACLoK,QAAS,OACTuG,IAAK,OACLvE,cAAe,UACflN,SAAA,CAED0P,GACC9P,EAAAA,EAAAA,KAACiS,EAAAA,EAAa,CAACxH,QAASqF,KAExBzM,EAAAA,EAAAA,MAAC6O,EAAAA,EAAW,CACV1O,QAAQ,WACR7C,KAAK,QACLwR,SAAUnE,EACVnN,GAAI,CACFS,MAAO,QACP,qBAAsB,CACpBN,SAAU,OACVoK,WAAY,QACZgH,OAAQ,GACR/G,QAAS,SAEX,wCAAyC,CAAEpK,IAAK,SAChDb,SAAA,EAEFJ,EAAAA,EAAAA,KAACqS,EAAAA,EAAU,CAACC,QAAQ,kBAAiBlS,SAAC,eACtCJ,EAAAA,EAAAA,KAACuS,EAAAA,EAAa,CACZ1R,GAAI,CACFe,OAAQ,OACRZ,SAAU,QAEZmR,SAAUnE,EACVvO,WAAS,EACTP,MAAM,YACNC,KAAK,YACLE,MAAOsO,EAAM6E,UACbpT,SAAUwO,EACVtO,UAAW,SAACgF,GACV,GAAe,UAAXA,EAAEE,MAA+B,gBAAXF,EAAEE,KAE1B,OADAF,EAAEG,iBACKmL,EAAmBjC,EAAM6E,UAEpC,EACArQ,GAAG,kBACH0B,cACE7D,EAAAA,EAAAA,KAAC8D,EAAAA,EAAc,CAAC3C,SAAS,MAAKf,UAC5BJ,EAAAA,EAAAA,KAAC+D,EAAAA,EACC,CACAoO,SAAUnE,EACV,aAAW,gBACXxN,MAAM,YACN2D,KAAK,MACLH,QAAS,WACP4L,EAAmBjC,EAAM6E,UAC3B,EAAEpS,UAEFJ,EAAAA,EAAAA,KAACyS,EAAAA,EAAgB,cAO7BzS,EAAAA,EAAAA,KAAC2D,EAAAA,EAAS,CACRwO,SAAUnE,EACVvO,WAAS,EACT+D,QAAQ,WACR7C,KAAK,QACLzB,MAAM,cACNC,KAAK,cACLG,UAAW2O,EACX5O,MAAOsO,EAAM+E,YACbtT,SAAUwO,EACVhK,WAAY,CACV1C,MAAO,CAAEU,OAAQ,OAAQZ,SAAU,QACnC2R,UAAU,GAEZ9R,GAAI,CACF0M,KAAM,EACN3L,OAAQ,OACR,qBAAsB,CAAEZ,SAAU,QAClC,wCAAyC,CAAEC,IAAK,eAItDjB,EAAAA,EAAAA,KAAC2D,EAAAA,EAAS,CACR1B,KAAM,EACNkQ,SAAUnE,EACVvO,WAAS,EACT+D,QAAQ,WACR7C,KAAK,QACLzB,MAAM,iBACN0T,WAAS,EACTzT,KAAK,iBACLE,MAAOsO,EAAMkF,eACbzT,SAAUwO,EACVtO,UAAW2O,EACXrK,WAAY,CACV1C,MAAO,CAAEU,OAAQ,QAASZ,SAAU,QACpC2R,UAAU,GAEZ9R,GAAI,CACF0M,KAAM,EACN3L,OAAQ,QACR,qBAAsB,CAAEZ,SAAU,QAClC,wCAAyC,CAAEC,IAAK,iBAKxDjB,EAAAA,EAAAA,KAAA,OACEkB,MACE,CACEoK,QAAS,OACT4B,UAAW,OACXK,KAAM,EACNuE,UAAW,cAEd1R,UAEDiD,EAAAA,EAAAA,MAAA,YACEnC,MACE,CACEoM,cAAe,MACfuE,IAAK,OACLxG,QAAS,OACT0G,OAAQ,oBACRC,aAAc,MACdzE,KAAM,EACNuF,SAAU,QAEb1S,SAAA,EAEDJ,EAAAA,EAAAA,KAAA,UAAQkB,MAAO,CAAEV,MAAO,WAAYJ,SAAC,sBACpCiQ,GACCrQ,EAAAA,EAAAA,KAACiS,EAAAA,EAAa,CAACxH,QAAS4F,KAExBhN,EAAAA,EAAAA,MAAC6O,EAAAA,EAAW,CACV1O,QAAQ,WACR7C,KAAK,QACLwR,SAAUnE,EACVnN,GAAI,CACFS,MAAO,QACP,qBAAsB,CACpBN,SAAU,OACVoK,WAAY,QACZgH,OAAQ,GACR/G,QAAS,SAEX,wCAAyC,CAAEpK,IAAK,SAChDb,SAAA,EAEFJ,EAAAA,EAAAA,KAACqS,EAAAA,EAAU,CAACC,QAAQ,iBAAgBlS,SAAC,cACrCJ,EAAAA,EAAAA,KAACuS,EAAAA,EAAa,CACZ1R,GAAI,CACFe,OAAQ,OACRZ,SAAU,QAEZmR,SAAUnE,EACV9O,MAAM,WACNC,KAAK,WACLE,MAAOsO,EAAMoF,SACb3T,SAAUwO,EACVtO,UAAW,SAACgF,GACV,GAAe,UAAXA,EAAEE,MAA+B,gBAAXF,EAAEE,KAE1B,OADAF,EAAEG,iBACK2L,EAAiBzC,EAAMoF,SAElC,EACA5Q,GAAG,iBACH0B,cACE7D,EAAAA,EAAAA,KAAC8D,EAAAA,EAAc,CAAC3C,SAAS,MAAKf,UAC5BJ,EAAAA,EAAAA,KAAC+D,EAAAA,EACC,CACAoO,SAAUnE,EACV,aAAW,gBACXxN,MAAM,YACN2D,KAAK,MACLH,QAAS,WACPoM,EAAiBzC,EAAMoF,SACzB,EAAE3S,UAEFJ,EAAAA,EAAAA,KAACyS,EAAAA,EAAgB,cAO7BzS,EAAAA,EAAAA,KAAC2D,EAAAA,EAAS,CACRlE,WAAS,EACTH,UAAW2O,EACXkE,SAAUnE,EACVxK,QAAQ,WACR7C,KAAK,QACLzB,MAAM,aACNC,KAAK,aACLE,MAAOsO,EAAMqF,WACb5T,SAAUwO,EACVhK,WAAY,CACV1C,MAAO,CAAEU,OAAQ,OAAQZ,SAAU,QACnC2R,UAAU,GAEZ9R,GAAI,CACF0M,KAAM,EACN3L,OAAQ,OACR,qBAAsB,CAAEZ,SAAU,QAClC,wCAAyC,CAAEC,IAAK,QAChDgS,UAAW,WAGfjT,EAAAA,EAAAA,KAAC2D,EAAAA,EAAS,CACRrE,UAAW2O,EACXkE,SAAUnE,EACVvO,WAAS,EACT+D,QAAQ,WACR7C,KAAK,QACLzB,MAAM,eACN0T,WAAS,EACTzT,KAAK,eACLE,MAAOsO,EAAM6B,aACbpQ,SAAUwO,EACVhK,WAAY,CACV1C,MAAO,CAAEU,OAAQ,OAAQZ,SAAU,QACnC2R,UAAU,GAEZ9R,GAAI,CACFS,MAAO,OACPM,OAAQ,OACR,qBAAsB,CAAEZ,SAAU,QAClC,wCAAyC,CAAEC,IAAK,QAChDgS,UAAW,mBAMrB5P,EAAAA,EAAAA,MAAA,OACEnC,MAAO,CACLoK,QAAS,OACTuG,IAAK,QACLzR,SAAA,EAEFJ,EAAAA,EAAAA,KAAA,OACEkB,MACE,CACEoK,QAAS,OACT4B,UAAW,OACXK,KAAM,EACNuE,UAAW,cAEd1R,UAEDiD,EAAAA,EAAAA,MAAA,YACEnC,MAAO,CACLoK,QAAS,OACTgC,cAAe,SACfuE,IAAK,OACLxG,QAAS,OACT0G,OAAQ,oBACRC,aAAc,MACdrN,aAAc,OACduO,SAAU,GACV9S,SAAA,EAEFJ,EAAAA,EAAAA,KAAA,UAAQkB,MAAO,CAAEV,MAAO,WAAYJ,SAAC,cACpCuR,GACC3R,EAAAA,EAAAA,KAACiS,EAAAA,EAAa,CAACxH,QAASkH,KAExBtO,EAAAA,EAAAA,MAAC6O,EAAAA,EAAW,CACVvR,KAAK,QACLlB,WAAS,EACT0S,SAAUnE,EACVnN,GAAI,CACF,qBAAsB,CACpBG,SAAU,OACVoK,WAAY,QACZgH,OAAQ,GACR/G,QAAS,SAEX,wCAAyC,CAAEpK,IAAK,SAChDb,SAAA,EAEFJ,EAAAA,EAAAA,KAACqS,EAAAA,EAAU,CAAClQ,GAAG,gBAAe/B,SAAC,aAC/BJ,EAAAA,EAAAA,KAACmT,EAAAA,EAAM,CACLtS,GAAI,CACFe,OAAQ,OACRZ,SAAU,QAEZoS,QAAQ,gBACR/T,MAAOsO,EAAM0F,cACbnU,MAAM,UACNC,KAAK,gBACLC,SAAUwO,EAAkBxN,SAE3BsR,EAAcvM,KAAKmO,eAAeC,KACjC,SAACC,EAAYvM,GACX,OACEjH,EAAAA,EAAAA,KAACyT,EAAAA,EAAQ,CAAWpU,MAAOmU,EAAME,QAAQtT,SACtCoT,EAAME,SADMzM,EAInB,UAKRjH,EAAAA,EAAAA,KAAC2D,EAAAA,EAAS,CACRwO,SACwB,KAAtBxE,EAAMgG,aAA4C,WAAtBhG,EAAMgG,YAEpClU,WAAS,EACT+D,QAAQ,WACR7C,KAAK,QACLzB,MAAM,YACNC,KAAK,WACLE,MAAOsO,EAAMiG,SACbxU,SAAUwO,EACVhK,WAAY,CACV1C,MAAO,CAAEU,OAAQ,OAAQZ,SAAU,SAErC1B,UAAW2O,EACXpN,GAAI,CACFS,MAAO,OACPM,OAAQ,OACR,qBAAsB,CAAEZ,SAAU,QAClC,wCAAyC,CAAEC,IAAK,iBAKxDjB,EAAAA,EAAAA,KAAA,OACEkB,MACE,CACEoK,QAAS,OACT4B,UAAW,OACXK,KAAM,EACNuE,UAAW,cAEd1R,UAEDiD,EAAAA,EAAAA,MAAA,YACEnC,MAAO,CACLoK,QAAS,OACTgC,cAAe,SACfuE,IAAK,OACLgC,SAAU,WACVxI,QAAS,OACT0G,OAAQ,oBACRC,aAAc,MACdkB,SAAU,GACV9S,SAAA,EAEFJ,EAAAA,EAAAA,KAAA,UAAQkB,MAAO,CAAEV,MAAO,WAAYJ,SAAC,yBACrCJ,EAAAA,EAAAA,KAAChB,EAAAA,EAAgB,CACfmT,SAAUnE,EACV9O,MAAM,YACNE,SAAU,SAACkF,GACTuJ,EAAkBvJ,EAAG,YACrB,IAAMwP,EAAU,IAAIC,KAAKzP,GACnB0P,GAAqBC,EAAAA,EAAAA,GAASH,EAAS,GAC7CjG,EAAkBmG,EAAoB,SACxC,EACA3U,MAAO,IAAI0U,KAAKpG,EAAMuG,UACtBxU,UAAW,CACTkB,gBAAiB,CACfM,MAAO,CACLF,SAAU,SAGd4C,WAAY,CACV1C,MAAO,CAAEU,OAAQ,OAAQZ,SAAU,UAGvC1B,UAAW,SAACgF,GACV,GAAe,UAAXA,EAAEE,MAA+B,gBAAXF,EAAEE,KAC1B,IAAM2P,EAAUC,YAAW,WAAO,IAADC,EAAAC,EACf,QAAhBD,EAAA9F,EAASrK,eAAO,IAAAmQ,GAAyB,QAAzBC,EAAhBD,EAAkBpO,cAAc,iBAAS,IAAAqO,GAAzCA,EAA2CC,QAC3CC,aAAaL,EACf,GAAG,IAEP,EACA3U,cAAe+O,KAEjBvO,EAAAA,EAAAA,KAAChB,EAAAA,EAAgB,CACfmT,SAAUnE,EACV9O,MAAM,UACNE,SAAU,SAACkF,GACTuJ,EAAkBvJ,EAAG,SACvB,EACAjF,MAAO,IAAI0U,KAAKpG,EAAM8G,QACtB/U,UAAW,CACTkB,gBAAiB,CACfM,MAAO,CACLF,SAAU,SAGd4C,WAAY,CACV1C,MAAO,CAAEU,OAAQ,OAAQZ,SAAU,UAGvC1B,UAAW,SAACgF,GACV,GAAe,UAAXA,EAAEE,MAA+B,gBAAXF,EAAEE,KAC1B,IAAM2P,EAAUC,YAAW,WAAO,IAADM,EAAAC,EACV,QAArBD,EAAAlG,EAActK,eAAO,IAAAwQ,GAAyB,QAAzBC,EAArBD,EAAuBzO,cAAc,iBAAS,IAAA0O,GAA9CA,EAAgDJ,QAChDC,aAAaL,EACf,GAAG,IAEP,EACA3U,cAAegP,KAEjBxO,EAAAA,EAAAA,KAAChB,EAAAA,EAAgB,CACfE,MAAM,cACNC,KAAK,aACLC,SAAU,SAACkF,GACTuJ,EAAkBvJ,EAAG,aACvB,EACAjF,MAAO,IAAI0U,KAAKpG,EAAMiH,YACtBzC,SAAUnE,EACVtO,UAAW,CACTkB,gBAAiB,CACfM,MAAO,CACLF,SAAU,SAGd4C,WAAY,CACV1C,MAAO,CAAEU,OAAQ,OAAQZ,SAAU,UAGvC1B,UAAW,SAACgF,GACV,GAAe,UAAXA,EAAEE,MAA+B,gBAAXF,EAAEE,KAC1B,IAAM2P,EAAUC,YAAW,WAAO,IAADS,EAAAC,EACN,QAAzBD,EAAApG,EAAkBvK,eAAO,IAAA2Q,GACE,QADFC,EAAzBD,EACI5O,cAAc,iBAAS,IAAA6O,GAD3BA,EAEIP,QACJC,aAAaL,EACf,GAAG,IAEP,EACA3U,cAAeiP,aAKvBpL,EAAAA,EAAAA,MAAA,OACEnC,MAAO,CACLoK,QAAS,OACTuG,IAAK,QACLzR,SAAA,EAEFJ,EAAAA,EAAAA,KAAA,OACEkB,MACE,CACEoK,QAAS,OACT4B,UAAW,OACXK,KAAM,EACNuE,UAAW,cAEd1R,UAEDiD,EAAAA,EAAAA,MAAA,YACEnC,MAAO,CACLoK,QAAS,OACTgC,cAAe,SACfuE,IAAK,OACLgC,SAAU,WACVxI,QAAS,OACT0G,OAAQ,oBACRC,aAAc,MACdkB,SAAU,GACV9S,SAAA,EAEFJ,EAAAA,EAAAA,KAAA,UAAQkB,MAAO,CAAEV,MAAO,UAAWoB,OAAQ,WAC3C5B,EAAAA,EAAAA,KAAC2D,EAAAA,EAAS,CACRwO,SAAUnE,EACV+G,UAAQ,EACRvR,QAAQ,WACR7C,KAAK,QACLzB,MAAM,cACNC,KAAK,aACLE,MAAOsO,EAAMqH,WACb5V,SAAUwO,EACVtO,UAAW2O,EACXgH,YAAY,OACZrR,WAAY,CACVsR,eAAgB3N,EAAAA,EAChBrG,MAAO,CAAEU,OAAQ,OAAQZ,SAAU,SAErCH,GAAI,CACFS,MAAO,OACPM,OAAQ,OACR,qBAAsB,CAAEZ,SAAU,QAClC,wCAAyC,CAAEC,IAAK,SAElDkU,OAAQ,WACNhH,EAAS,CACP9J,KAAM,eACN0K,MAAO,aACP1P,MAAO+V,WAAWzH,EAAMqH,YAAYK,QAAQ,IAEhD,KAEFrV,EAAAA,EAAAA,KAAC2D,EAAAA,EAAS,CACRwO,SAAUnE,EACV+G,UAAQ,EACRvR,QAAQ,WACR7C,KAAK,QACLzB,MAAM,mBACNC,KAAK,kBACLE,MAAOsO,EAAM2H,gBACblW,SAAUwO,EACVtO,UAAW2O,EACXrK,WAAY,CACV1C,MAAO,CAAEU,OAAQ,OAAQZ,SAAU,SAErCH,GAAI,CACFS,MAAO,OACPM,OAAQ,OACR,qBAAsB,CAAEZ,SAAU,QAClC,wCAAyC,CAAEC,IAAK,iBAMxDjB,EAAAA,EAAAA,KAAA,OACEkB,MACE,CACEoK,QAAS,OACT4B,UAAW,OACXK,KAAM,EACNuE,UAAW,cAEd1R,UAEDiD,EAAAA,EAAAA,MAAA,YACEnC,MAAO,CACLoK,QAAS,OACTgC,cAAe,SACfiI,OAAQ,OACRlK,QAAS,OACT0G,OAAQ,oBACRC,aAAc,MACdkB,SAAU,GACV9S,SAAA,EAEFJ,EAAAA,EAAAA,KAAA,UAAAI,SAAQ,cACRJ,EAAAA,EAAAA,KAAA,OACEkB,MAAO,CACLoK,QAAS,OACT6B,eAAgB,WAChB9B,QAAS,OACTjL,UAEFJ,EAAAA,EAAAA,KAACwV,EAAAA,EAAM,CACLrD,SAAUnE,EACVrN,KAAK,QACL6C,QAAQ,YACRhD,MAAM,UACNwD,QAAS,WACPkK,GACF,EAAE9N,SACH,eAKHJ,EAAAA,EAAAA,KAAC2D,EAAAA,EAAS,CACRwO,SAAUnE,EACV+G,UAAQ,EACRvR,QAAQ,WACR7C,KAAK,QACLzB,MAAM,cACNC,KAAK,aACLE,MAAOsO,EAAM8H,WACbrW,SAAUwO,EACVtO,UAAWsS,EACXqD,YAAY,OACZrR,WAAY,CACVsR,eAAgB3N,EAAAA,EAChBrG,MAAO,CAAEU,OAAQ,OAAQZ,SAAU,SAErCH,GAAI,CACFS,MAAO,OACPM,OAAQ,OACR,qBAAsB,CAAEZ,SAAU,QAClC,wCAAyC,CAAEC,IAAK,SAElDkU,OAAQ,WACNhH,EAAS,CACP9J,KAAM,eACN0K,MAAO,aACP1P,MAAO+V,WAAWzH,EAAM8H,YAAYJ,QAAQ,IAEhD,KAEFrV,EAAAA,EAAAA,KAAC2D,EAAAA,EAAS,CACRwO,SAAUnE,EACV+G,UAAQ,EACRvR,QAAQ,WACR7C,KAAK,QACLzB,MAAM,MACNC,KAAK,MACLE,MAAOsO,EAAM+H,IACbtW,SAAUwO,EACVtO,UAAWsS,EACXqD,YAAY,OACZrR,WAAY,CACVsR,eAAgB3N,EAAAA,EAChBrG,MAAO,CAAEU,OAAQ,OAAQZ,SAAU,SAErCH,GAAI,CACFS,MAAO,OACPM,OAAQ,OACR,qBAAsB,CAAEZ,SAAU,QAClC,wCAAyC,CAAEC,IAAK,SAElDkU,OAAQ,WACNhH,EAAS,CACP9J,KAAM,eACN0K,MAAO,MACP1P,MAAO+V,WAAWzH,EAAM+H,KAAKL,QAAQ,IAEzC,KAEFrV,EAAAA,EAAAA,KAAC2D,EAAAA,EAAS,CACRwO,SAAUnE,EACV+G,UAAQ,EACRvR,QAAQ,WACR7C,KAAK,QACLzB,MAAM,YACNC,KAAK,WACLE,MAAOsO,EAAMgI,SACbvW,SAAUwO,EACVtO,UAAWsS,EACXqD,YAAY,OACZrR,WAAY,CACVsR,eAAgB3N,EAAAA,EAChBrG,MAAO,CAAEU,OAAQ,OAAQZ,SAAU,SAErCH,GAAI,CACFS,MAAO,OACPM,OAAQ,OACR,qBAAsB,CAAEZ,SAAU,QAClC,wCAAyC,CAAEC,IAAK,SAElDkU,OAAQ,WACNhH,EAAS,CACP9J,KAAM,eACN0K,MAAO,WACP1P,MAAO+V,WAAWzH,EAAMgI,UAAUN,QAAQ,IAE9C,KAEFhS,EAAAA,EAAAA,MAAA,OACEnC,MAAO,CAAEoK,QAAS,OAAQuG,IAAK,MAAO1Q,SAAU,YAAaf,SAAA,EAE7DJ,EAAAA,EAAAA,KAAC2D,EAAAA,EAAS,CACRwO,SAAUnE,EACV+G,UAAQ,EACRvR,QAAQ,WACR7C,KAAK,QACLxB,KAAK,qBACLE,MAAOsO,EAAMiI,mBACbxW,SAAUwO,EACVtO,UAAWsS,EACXqD,YAAY,OACZrR,WAAY,CACVsR,eAAgB3N,EAAAA,EAChBrG,MAAO,CAAEU,OAAQ,OAAQZ,SAAU,SAErCH,GAAI,CACFS,MAAO,OACPM,OAAQ,OACR,qBAAsB,CAAEZ,SAAU,QAClC,wCAAyC,CAAEC,IAAK,SAElDkU,OAAQ,WACNhH,EAAS,CACP9J,KAAM,eACN0K,MAAO,qBACP1P,MAAO+V,WAAWzH,EAAMiI,oBAAoBP,QAAQ,IAExD,KAEFrV,EAAAA,EAAAA,KAAC2D,EAAAA,EAAS,CACRwO,SAAUnE,EACV+G,UAAQ,EACRvR,QAAQ,WACR7C,KAAK,QACLzB,MAAM,gBACNC,KAAK,cACLE,MAAOsO,EAAMkI,YACbzW,SAAUwO,EACVtO,UAAWsS,EACXqD,YAAY,OACZrR,WAAY,CACVsR,eAAgB3N,EAAAA,EAChBrG,MAAO,CAAEU,OAAQ,OAAQZ,SAAU,SAErCH,GAAI,CACFS,MAAO,OACPM,OAAQ,OACR,qBAAsB,CAAEZ,SAAU,QAClC,wCAAyC,CAAEC,IAAK,SAElDkU,OAAQ,WACNhH,EAAS,CACP9J,KAAM,eACN0K,MAAO,cACP1P,MAAO+V,WAAWzH,EAAMkI,aAAaR,QAAQ,IAEjD,QAGJrV,EAAAA,EAAAA,KAAC8V,EAAAA,EAAO,CAACtV,MAAM,eACfR,EAAAA,EAAAA,KAAC2D,EAAAA,EAAS,CACRwO,SAAUnE,EACV+G,UAAQ,EACRvR,QAAQ,WACR7C,KAAK,QACLzB,MAAM,YACNC,KAAK,WACLE,MAAOsO,EAAMoI,SACb3W,SAAUwO,EACVqH,YAAY,OACZrR,WAAY,CACVsR,eAAgB3N,EAAAA,EAChBrG,MAAO,CAAEU,OAAQ,OAAQZ,SAAU,SAErCH,GAAI,CACFS,MAAO,OACPM,OAAQ,OACR,qBAAsB,CAAEZ,SAAU,QAClC,wCAAyC,CAAEC,IAAK,SAElDkU,OAAQ,WACNhH,EAAS,CACP9J,KAAM,eACN0K,MAAO,WACP1P,MAAO+V,WAAWzH,EAAMoI,UAAUV,QAAQ,IAE9C,eAMT3F,EACAS,IAGP,C,yBC93BM9F,EAAe,CACnB2L,YAAa,KAEbxD,UAAW,GACXE,YAAa,GACbG,eAAgB,GAEhBE,SAAU,GACVC,WAAY,GACZiD,UAAW,OACXzG,aAAc,GAEd6D,cAAe,GACfO,SAAU,GAGVM,SAAU,IAAIH,KACdU,QAAQR,EAAAA,EAAAA,GAAS,IAAIF,KAAQ,GAC7Ba,WAAY,IAAIb,KAGhBiB,WAAY,GACZM,gBAAiB,GAGjBG,WAAY,GACZC,IAAK,GACLC,SAAU,GACVC,mBAAoB,OACpBC,YAAa,GACbE,SAAU,GAEVpC,YAAa,IAGTuC,EAAU,SAACvI,EAAYwI,GAC3B,MACO,iBADCA,EAAO9R,MAEG/D,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACTqN,GAAK,IAAAyI,EAAAA,EAAAA,GAAA,GACPD,EAAOpH,MAAQoH,EAAO9W,QAIlBsO,CAEb,EACaD,GAAYtF,EAAAA,EAAAA,eAAmB,CAAC,GAEvCiO,EAAuB,YACvBC,EAA4B,UAC5BC,EAA2B,SAC3BC,EAAmB,YACnBC,EAA4B,YAC5BC,EAAuB,YAEd,SAASC,IAAY,IAADlJ,EAAAmJ,EAAAC,EAAAC,EAAAC,EAAAC,EACjCC,GAA0BC,EAAAA,EAAAA,YAAWhB,EAAS7L,GAAa8M,GAAA9N,EAAAA,EAAAA,GAAA4N,EAAA,GAApDtJ,EAAKwJ,EAAA,GAAEhJ,EAAQgJ,EAAA,GACtBnK,GAA0BC,EAAAA,EAAAA,YAAWmK,EAAAA,GAA7BtJ,EAAOd,EAAPc,QAASC,EAAIf,EAAJe,KACjB7E,GAAoCC,EAAAA,EAAAA,UAAgC,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAhEmO,EAAUjO,EAAA,GAAEkO,GAAalO,EAAA,GAChCmO,IAAkCpO,EAAAA,EAAAA,UAAgC,IAAGqO,IAAAnO,EAAAA,EAAAA,GAAAkO,GAAA,GAA9DE,GAASD,GAAA,GAAEE,GAAYF,GAAA,GAC9BG,IAA4BxO,EAAAA,EAAAA,UAAS,IAAGyO,IAAAvO,EAAAA,EAAAA,GAAAsO,GAAA,GAAjCE,GAAMD,GAAA,GAAEE,GAASF,GAAA,GACxBG,IAAkC5O,EAAAA,EAAAA,WAAS,GAAM6O,IAAA3O,EAAAA,EAAAA,GAAA0O,GAAA,GAA1CE,GAASD,GAAA,GAAEE,GAAYF,GAAA,GAExBG,IAAyB9J,EAAAA,EAAAA,QAAyB,MAClD+J,IAAe/J,EAAAA,EAAAA,QAA0B,MACzCgK,IAAkBhK,EAAAA,EAAAA,QAA0B,MAC5CiK,IAAkBjK,EAAAA,EAAAA,QAA0B,MAE5CkK,IAAcC,EAAAA,EAAAA,kBACdxK,GAAwC,KAAtBL,EAAMgG,YAE9BrD,IAAiEC,EAAAA,EAAAA,UAAS,CACxExO,SAAU,kBACVyO,QAAQ,WAAD,OAAA/C,EAAAA,IAAAgD,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAE,SAAAC,IAAA,OAAAF,EAAAA,EAAAA,KAAAG,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACDlD,EAAQmD,IAAI,mCAAoC,CACpDC,QAAS,CACPC,cAAc,UAADtM,OAAgB,OAAJkJ,QAAI,IAAJA,OAAI,EAAJA,EAAMqD,gBAEjC,cAAAN,EAAAO,OAAA,SAAAP,EAAAQ,MAAA,wBAAAR,EAAAS,OAAA,GAAAX,EAAA,MAAAY,MAAA,KAAAC,UAAA,IAPQgH,GAAcnI,GAApBnL,KAAiCuT,GAAmBpI,GAA9BzO,UAU9B6M,IAKIC,EAAAA,EAAAA,GAAmB,CACrBC,KAAM,CACJC,IAAK,oCACLC,aAAc,kBAEhBhN,QAAS,CACP,CAAEiN,MAAO,aAAcC,WAAY,OAAQ1N,MAAO,KAClD,CAAEyN,MAAO,WAAYC,WAAY,YAAa1N,MAAO,KACrD,CACEyN,MAAO,UACPC,WAAY,UACZ1N,MAAO,KAET,CACEyN,MAAO,kBACPC,WAAY,YACZzB,KAAM,IAGVxL,SAAU,mBACVkN,SAAU,WACVC,gBAAiB,WACjBC,WAAY,SAACC,GACXuJ,GAAiBvJ,GACjBwJ,IACF,EACAhW,cAAe,SAACiJ,EAAShF,GACN,UAAbA,EAAIrC,MAAiC,gBAAbqC,EAAIrC,OAC9BmU,GAAiB,CAAC9M,EAAGlB,MACrBiO,KAEJ,EACAlW,UAAWyV,KApCKU,GAAanK,GAA7BiB,eACWmJ,GAAiBpK,GAA5BmB,UACWkJ,GAAsBrK,GAAjC7M,UACY+W,GAAkBlK,GAA9BqB,WAoCFiJ,IAA6CC,EAAAA,EAAAA,aAAY,CACvDC,YAAazC,EACb0C,WAAW,SAADC,GAAA,OAAAxC,EAAAA,IAAAnG,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAE,SAAA0I,EAAOC,GAAc,OAAA5I,EAAAA,EAAAA,KAAAG,MAAA,SAAA0I,GAAA,cAAAA,EAAAxI,KAAAwI,EAAAvI,MAAA,UACL,WAAtBrD,EAAMgG,YAAwB,CAAA4F,EAAAvI,KAAA,eAAAuI,EAAAvI,KAAA,EACnBlD,EAAQ0L,KACnB,oCACAF,EACA,CACEpI,QAAS,CACPC,cAAc,UAADtM,OAAgB,OAAJkJ,QAAI,IAAJA,OAAI,EAAJA,EAAMqD,gBAGnC,KAAD,EAMA,KAAD,SAAAmI,EAAAlI,OAAA,SAAAkI,EAAAjI,MANC,cAAAiI,EAAAvI,KAAA,EAEUlD,EAAQ0L,KAAK,iCAAkCF,EAAW,CACrEpI,QAAS,CACPC,cAAc,UAADtM,OAAgB,OAAJkJ,QAAI,IAAJA,OAAI,EAAJA,EAAMqD,gBAEjC,wBAAAmI,EAAAhI,OAAA,GAAA8H,EAAA,MACH7H,MAAA,KAAAC,UAAA,EACDgI,UAAU,SAADC,GAAA,OAAA7C,EAAAA,IAAApG,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAE,SAAAgJ,EAAOC,GAAG,OAAAlJ,EAAAA,EAAAA,KAAAG,MAAA,SAAAgJ,GAAA,cAAAA,EAAA9I,KAAA8I,EAAA7I,MAAA,WACf4I,EAAIzU,KAAK2U,QAAQ,CAADD,EAAA7I,KAAA,eAAA6I,EAAA7I,KAAA,EACZ+I,KAAmB,KAAD,EACe,OAAvCC,GAAmB3P,GAAc,GAAMwP,EAAAxI,OAAA,SAChC4I,IAAAA,KAAU,CACf9Y,SAAU,SACV+Y,KAAM,UACNzX,MAAOmX,EAAIzU,KAAKgV,QAChBC,mBAAmB,EACnBC,MAAO,QACP,OAGJJ,IAAAA,KAAU,CACR9Y,SAAU,SACV+Y,KAAM,QACNzX,MAAOmX,EAAIzU,KAAKgV,QAChBC,mBAAmB,EACnBC,MAAO,OACN,wBAAAR,EAAAtI,OAAA,GAAAoI,EAAA,MACJnI,MAAA,KAAAC,UAAA,IAxCK6I,GAAMtB,GAANsB,OAAmBC,GAAavB,GAAxBnX,UA2ChB2Y,IAA2DvB,EAAAA,EAAAA,aAAY,CACrEC,YAAaxC,EACbyC,WAAW,SAADsB,GAAA,OAAA3D,EAAAA,IAAArG,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAE,SAAA+J,EAAOpB,GAAc,OAAA5I,EAAAA,EAAAA,KAAAG,MAAA,SAAA8J,GAAA,cAAAA,EAAA5J,KAAA4J,EAAA3J,MAAA,cAAA2J,EAAA3J,KAAA,EAClBlD,EAAQ0L,KACnB,oCACAF,EACA,CACEpI,QAAS,CACPC,cAAc,UAADtM,OAAgB,OAAJkJ,QAAI,IAAJA,OAAI,EAAJA,EAAMqD,gBAGnC,KAAD,SAAAuJ,EAAAtJ,OAAA,SAAAsJ,EAAArJ,MAAA,wBAAAqJ,EAAApJ,OAAA,GAAAmJ,EAAA,MACFlJ,MAAA,KAAAC,UAAA,EACDgI,UAAU,SAADmB,GAAA,OAAA7D,EAAAA,IAAAtG,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAE,SAAAkK,EAAOjB,GAAG,OAAAlJ,EAAAA,EAAAA,KAAAG,MAAA,SAAAiK,GAAA,cAAAA,EAAA/J,KAAA+J,EAAA9J,MAAA,WACf4I,EAAIzU,KAAK2U,QAAQ,CAADgB,EAAA9J,KAAA,eAAA8J,EAAA9J,KAAA,EACZ+I,KAAmB,KAAD,EACe,OAAvCC,GAAmB3P,GAAc,GAAMyQ,EAAAzJ,OAAA,SAChC4I,IAAAA,KAAU,CACf9Y,SAAU,SACV+Y,KAAM,UACNzX,MAAOmX,EAAIzU,KAAKgV,QAChBC,mBAAmB,EACnBC,MAAO,QACP,OAGJJ,IAAAA,KAAU,CACR9Y,SAAU,SACV+Y,KAAM,QACNzX,MAAOmX,EAAIzU,KAAKgV,QAChBC,mBAAmB,EACnBC,MAAO,OACN,wBAAAS,EAAAvJ,OAAA,GAAAsJ,EAAA,MACJrJ,MAAA,KAAAC,UAAA,IAjCasJ,GAAYP,GAApBF,OAAiCU,GAAaR,GAAxB3Y,UAoCxBoZ,IAA2BC,EAAAA,EAAAA,cAAY,WAC3CvN,EAAM8H,WAAkC,KAArB9H,EAAM8H,WAAoB,IAAM9H,EAAM8H,WACzD9H,EAAM+H,IAAoB,KAAd/H,EAAM+H,IAAa,IAAM/H,EAAM+H,IAC3C/H,EAAMgI,SAA8B,KAAnBhI,EAAMgI,SAAkB,IAAMhI,EAAMgI,SACrDhI,EAAMiI,mBACyB,KAA7BjI,EAAMiI,mBAA4B,IAAMjI,EAAMiI,mBAChDjI,EAAMkI,YAAoC,KAAtBlI,EAAMkI,YAAqB,IAAMlI,EAAMkI,YAC3DlI,EAAMoI,SAA8B,KAAnBpI,EAAMoI,SAAkB,IAAMpI,EAAMoI,QACvD,GAAG,CAACpI,IAEEwN,IAAeD,EAAAA,EAAAA,cAAY,WAC/B,MACwB,KAAtBvN,EAAM+E,aACgB,OAAtB/E,EAAM+E,kBACgB0I,IAAtBzN,EAAM+E,YAECuH,IAAAA,KACL,oCACA,kCACA,SAIoB,KAApBtM,EAAM6E,WAAwC,OAApB7E,EAAM6E,UAC3ByH,IAAAA,KACL,gCACA,kCACA,SAGwB,KAAxBtM,EAAM0F,eAAgD,OAAxB1F,EAAM0F,cAC/B4G,IAAAA,KACL,yCACA,gCACA,SAGmB,KAAnBtM,EAAMiG,UAAsC,OAAnBjG,EAAMiG,SAC1BqG,IAAAA,KACL,qCACA,kCACA,cAGsB,WAAtBtM,EAAMgG,aACR0H,EAAAA,EAAAA,GAAuB,CACrBC,UAAU,EACVC,GAAI,SAACC,GACHP,KACAX,IAAMha,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EAAIqN,GAAK,IAAE6N,qBAAAA,IACrB,KAGFC,EAAAA,EAAAA,GAAuB,CACrBC,UAAW,WACTT,KACAX,GAAO3M,EACT,IAGN,GAAG,CAAC2M,GAAQW,GAA0BtN,KAEtCgO,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAgB,SAACxV,GAMlB,IAADyV,EAIuDC,EAIMC,EAZvC,KAAtBpO,EAAMgG,aACU,SAAfvN,EAAM5B,MACU,UAAf4B,EAAM5B,MACS,gBAAf4B,EAAM5B,OAER4B,EAAM3B,iBACc,QAApBoX,EAAAzD,GAAalU,eAAO,IAAA2X,GAApBA,EAAsBtH,SAEE,KAAtB5G,EAAMgG,aAAqC,WAAfvN,EAAM5B,OACpC4B,EAAM3B,iBACiB,QAAvBqX,EAAAzD,GAAgBnU,eAAO,IAAA4X,GAAvBA,EAAyBvH,SAED,WAAtB5G,EAAMgG,aAA2C,WAAfvN,EAAM5B,OAC1C4B,EAAM3B,iBACiB,QAAvBsX,EAAAzD,GAAgBpU,eAAO,IAAA6X,GAAvBA,EAAyBxH,QAE7B,EAEA,OADA3O,SAASe,iBAAiB,UAAWiV,GAC9B,WACLhW,SAASoW,oBAAoB,UAAWJ,EAC1C,CACF,GAAG,CAACT,GAAcxN,EAAMgG,cAExB,IAAM/F,GAAoB,SAACtJ,GACzB,IAAA2X,EAAwB3X,EAAEyD,OAAlB5I,EAAI8c,EAAJ9c,KAAME,EAAK4c,EAAL5c,MACd8O,EAAS,CAAE9J,KAAM,eAAgB0K,MAAO5P,EAAME,MAAAA,GAChD,EACMwO,GAAoB,SAACxO,EAAYF,GACrCgP,EAAS,CAAE9J,KAAM,eAAgB0K,MAAO5P,EAAME,MAAAA,GAChD,EACA,SAAS6O,KACP+M,KACA,IAGMiB,EAHwB9G,WAAWzH,EAAMiI,oBAGD,IACxCuG,EAAkB/G,WAAWzH,EAAM8H,YAEzC5H,IALsB,IAKasO,GAAiB9G,QAAQ,GAAI,OAChExH,IALsB,KAKasO,GAAiB9G,QAAQ,GAAI,YAChExH,IACGqO,EAAgBC,GAAiB9G,QAAQ,GAC1C,eAEFxH,GAAkBsO,EAAgB9G,QAAQ,GAAI,cAC9CxH,IAEIuH,WAAW+G,EAAgB9G,QAAQ,IACnCD,YAfkB,IAeU+G,GAAiB9G,QAAQ,IACrDD,YAfkB,KAeU+G,GAAiB9G,QAAQ,IACrDD,YAAY8G,EAAgBC,GAAiB9G,QAAQ,KACrDA,QAAQ,GACV,WAEJ,CACA,SAAS2E,GAAmBoC,GAAuC,IAA5BC,EAAiB5K,UAAAnK,OAAA,QAAA8T,IAAA3J,UAAA,IAAAA,UAAA,GACtD2K,EAAKE,UAAY3O,EAAM2O,UACvBF,EAAKG,YAAc5O,EAAM4O,YACzBH,EAAKI,cAAgB7O,EAAM6O,cAC3BJ,EAAKK,cAAgB9O,EAAM8O,cACtBJ,IACHD,EAAKzI,YAAchG,EAAMgG,aAE3B+I,OAAOC,QAAQP,GAAMpV,SAAQ,SAAA/H,GAAmB,IAADiN,GAAA7C,EAAAA,EAAAA,GAAApK,EAAA,GAAhB4H,EAAGqF,EAAA,GAAE7M,EAAK6M,EAAA,GACvC2B,GAAkBxO,EAAOwH,EAC3B,GACF,CAAC,SACckT,KAAgB,OAAA/C,EAAAA,IAAAvG,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAA/B,SAAAiM,IAAA,OAAAlM,EAAAA,EAAAA,KAAAG,MAAA,SAAAgM,GAAA,cAAAA,EAAA9L,KAAA8L,EAAA7L,MAAA,cAAA6L,EAAAxL,OAAA,SACSyL,QAAQC,IAAI,CACjBxE,GAAYyE,kBAAkB3G,GAC9BkC,GAAYyE,kBAAkB1G,GAC9BiC,GAAYyE,kBAAkBzG,GAC9BgC,GAAYyE,kBAAkBxG,GAC9B+B,GAAYyE,kBAAkBvG,GAC9B8B,GAAYyE,kBAAkBtG,MAC9B,wBAAAmG,EAAAtL,OAAA,GAAAqL,EAAA,MACHpL,MAAA,KAAAC,UAAA,CACD,SAASkH,GAAiBvJ,GACxB,IAAA6N,EAiBI7N,EAAgB,GAhBlBwE,EAAQqJ,EAARrJ,SACAF,EAAOuJ,EAAPvJ,QACAwJ,EAAUD,EAAVC,WACAC,EAAQF,EAARE,SACAC,EAAQH,EAARG,SACAC,EAAIJ,EAAJI,KACAC,EAAOL,EAAPK,QACA1I,EAAUqI,EAAVrI,WACA2I,EAAYN,EAAZM,aACAC,EAAOP,EAAPO,QACAC,EAAQR,EAARQ,SACAC,EAAeT,EAAfS,gBACAC,EAAcV,EAAdU,eACApO,EAAO0N,EAAP1N,QACAyF,EAAUiI,EAAVjI,WACAxF,EAAYyN,EAAZzN,aAEF3B,GAAkByP,EAAS,eAC3BzP,GAAkBwP,EAAM,aACxBxP,GAAkB6P,EAAiB,eACnC7P,GAAkB0B,EAAS,kBAE3B1B,GAAkB2P,EAAS,YAC3B3P,GAAkB8P,EAAgB,cAClC9P,GAAkB4P,EAAU,aAC5B5P,GAAkB2B,EAAc,gBAEhC3B,GAAkB6F,EAAS,iBAC3B7F,GAAkB+F,EAAU,YAE5B/F,GAAkBqP,EAAY,YAC9BrP,GAAkBsP,EAAU,UAC5BtP,GAAkB+G,EAAY,cAE9B/G,GAAkBuP,EAAU,mBAC5BvP,GAAkBmH,EAAY,cAC9BrH,EAAM8H,WAAa8H,EACnBrP,KAEAL,GAAkB,SAAU,cAC9B,CAUA,OACExK,EAAAA,EAAAA,MAACqK,EAAU3D,SAAQ,CACjB1K,MAAO,CACLsO,MAAAA,EACAC,kBAAAA,GACAC,kBAAAA,GACAoK,UAAAA,GACAC,aAAAA,GACAb,WAAAA,EACAC,cAAAA,GACAxJ,QAAAA,EACAC,KAAAA,EACA0J,UAAAA,GACAC,aAAAA,GACAxJ,YAAAA,GACAF,gBAAAA,GACAG,SAAAA,EACAF,QA1BN,SAAiB7H,GAEE,KAAfuH,EAAMiQ,MACU,UAAfxX,EAAM5B,MAAmC,gBAAf4B,EAAM5B,OAEjC4B,EAAM3B,iBACN0W,KAEJ,GAmBM/a,SAAA,EAEFJ,EAAAA,EAAAA,KAACsD,EAAAA,EAAG,CACFzC,GAAI,SAACgd,GAAK,OAAAzH,EAAAA,EAAAA,GAAA,CACR9K,QAAS,OACT+B,WAAY,SACZH,UAAW,OACXvI,aAAc,QACbkZ,EAAMC,YAAYC,KAAK,MAAQ,CAC9BzQ,cAAe,SACfD,WAAY,aACZE,KAAM,GACP,EACAnN,UAGHJ,EAAAA,EAAAA,KAAA,OACEkB,MAAO,CACLoK,QAAS,OACT+B,WAAY,SACZH,UAAW,QACX9M,UAEFiD,EAAAA,EAAAA,MAAA,OACEnC,MAAO,CACLoK,QAAS,OACT+B,WAAY,SACZH,UAAW,OACX9M,SAAA,CAEqB,KAAtBuN,EAAMgG,cACL3T,EAAAA,EAAAA,KAACwV,EAAAA,EAAM,CACL3U,GAAI,CACFe,OAAQ,OACRZ,SAAU,QAEZP,IAAK2X,GACL5U,QAAQ,YACRwa,WAAWhe,EAAAA,EAAAA,KAACie,EAAAA,EAAO,IACnBja,QAAS,WACP6J,GAAkB,MAAO,cAC3B,EAAEzN,SACH,SAIHJ,EAAAA,EAAAA,KAACiS,EAAAA,EAAa,CACZpR,GAAI,CACFe,OAAQ,OACRZ,SAAU,QAEZR,MAAM,UACNgD,QAAQ,YACRa,KAAK,SACLL,QAASmX,GACThJ,SAAgC,KAAtBxE,EAAMgG,YAChBqK,WAAWhe,EAAAA,EAAAA,KAACke,EAAAA,EAAQ,IACpBzT,QAAS8P,GAAcna,SACxB,SAGsB,KAAtBuN,EAAMgG,cACL3T,EAAAA,EAAAA,KAACwV,EAAAA,EAAM,CACL3U,GAAI,CACFe,OAAQ,OACRZ,SAAU,QAEZP,IAAK4X,GACL7U,QAAQ,YACRwa,WAAWhe,EAAAA,EAAAA,KAACsF,EAAAA,EAAS,IACrB9E,MAAM,QACNwD,QAAS,WACPiW,IAAAA,KAAU,CACRxX,MAAO,gBACP0b,KAAM,oCACNjE,KAAM,UACNkE,kBAAkB,EAClBC,mBAAoB,UACpBC,kBAAmB,OACnBC,kBAAmB,oBAClBC,MAAK,SAACC,GACHA,EAAOC,cACT7Q,GAAkB,GAAI,eACtBmM,GAAmB3P,GAAc,GAErC,GACF,EAAEjK,SACH,YAIHJ,EAAAA,EAAAA,KAACiS,EAAAA,EAAa,CACZxH,QAASuQ,GACT7Y,GAAG,oBACHqB,QAAQ,YACR3C,GAAI,CACFe,OAAQ,OACRZ,SAAU,OACV2d,gBAAiBC,EAAAA,EAAK,KACtB,UAAW,CACTD,gBAAiBC,EAAAA,EAAK,OAG1Bne,IAAK6X,GACLnG,SAAgC,WAAtBxE,EAAMgG,YAChBqK,WAAWhe,EAAAA,EAAAA,KAAC6e,EAAAA,EAAU,IACtB7a,QAAS,YACPqX,EAAAA,EAAAA,GAAuB,CACrBC,UAAU,EACVC,GAAI,SAACC,GACHT,GAAa,CACX1H,cAAe1F,EAAM0F,cACrBO,SAAUjG,EAAMiG,SAChBkL,WAAYnR,EAAMmR,WAClBtD,qBAAAA,GAEJ,GAEJ,EAAEpb,SACH,mBAMPiD,EAAAA,EAAAA,MAAA,OAAKnC,MAAO,CAAEyD,aAAc,MAAO2G,QAAS,OAAQuG,IAAK,QAASzR,SAAA,CAC/D2Y,IACC/Y,EAAAA,EAAAA,KAACiS,EAAAA,EAAa,CAACxH,QAASsO,MAExB/Y,EAAAA,EAAAA,KAAC2D,EAAAA,EAAS,CACRzE,MAAM,SACNyB,KAAK,QACLxB,KAAK,SACLE,MAAOwY,GACPzY,SAAU,SAACkF,GACTwT,GAAUxT,EAAEyD,OAAO1I,MACrB,EACAC,UAAW,SAACgF,GACK,UAAXA,EAAEE,MAA+B,gBAAXF,EAAEE,OAC1BF,EAAEG,iBACFqU,GAAkBjB,IAEtB,EAEAjU,WAAY,CACV1C,MAAO,CAAEU,OAAQ,OAAQZ,SAAU,QACnC6C,cACE7D,EAAAA,EAAAA,KAAC8D,EAAAA,EAAc,CAAC3C,SAAS,MAAKf,UAC5BJ,EAAAA,EAAAA,KAAC+D,EAAAA,EAAU,CACTC,QAAS,WACP8U,GAAkBjB,GACpB,EACA1T,KAAK,MAAK/D,UAEVJ,EAAAA,EAAAA,KAACoE,EAAAA,EAAU,SAKnBC,KAAK,SACLxD,GAAI,CACFS,MAAO,QACPM,OAAQ,OACR,qBAAsB,CAAEZ,SAAU,QAClC,wCAAyC,CAAEC,IAAK,WAKrDyX,IACC1Y,EAAAA,EAAAA,KAACiS,EAAAA,EAAa,CAACxH,QAASiO,MAExBrV,EAAAA,EAAAA,MAAC6O,EAAAA,EAAW,CACVvR,KAAK,QACLE,GAAI,SAACgd,GAAK,MAAM,CACdvc,MAAO,QACP,qBAAsB,CACpBN,SAAU,OACVoK,WAAY,QACZgH,OAAQ,GACR/G,QAAS,SAEX,wCAAyC,CAAEpK,IAAK,QACjD,EAAEb,SAAA,EAEHJ,EAAAA,EAAAA,KAACqS,EAAAA,EAAU,CAAClQ,GAAG,aAAY/B,SAAC,iBAC5BJ,EAAAA,EAAAA,KAACmT,EAAAA,EAAM,CACLtS,GAAI,CACFe,OAAQ,OACRZ,SAAU,QAEZL,KAAK,QACLyS,QAAQ,aACRlU,MAAM,aACNC,KAAK,cACLE,MAAOsO,EAAMqI,YACb5W,SAAU,SAACkF,GACTsJ,GAAkBtJ,EACpB,EAAElE,UAEc,OAAdqY,SAAc,IAAdA,QAAc,EAAdA,GAAgBtT,KAAK6Q,aAAazC,KAClC,SAACC,EAAYvM,GACX,OACEjH,EAAAA,EAAAA,KAACyT,EAAAA,EAAQ,CAAWpU,MAAOmU,EAAMuL,QAAQC,OAAO5e,SAC7CoT,EAAMuL,SADM9X,EAInB,aAMVjH,EAAAA,EAAAA,KAACwN,EAAmB,IACnBqL,KAGP,C,gIC5oBsC,SA8BvBoG,EAAkB7F,EAAAM,EAAAe,GAAA,OAAAyE,EAAAA,IAAAzO,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAjC,SAAAC,EACE9C,EACAC,EACAa,GAAuC,IAAAiJ,EAAAsH,EAAA1N,UAAA,OAAAf,EAAAA,EAAAA,KAAAG,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACpB,OAAnB6G,EAAcsH,EAAA7X,OAAA,QAAA8T,IAAA+D,EAAA,GAAAA,EAAA,GAAG,GAAErO,EAAAO,OAAA,SAEZvD,EAAQmD,IAAI,GAADpM,OAAQ,OAAJ+J,QAAI,IAAJA,OAAI,EAAJA,EAAMC,IAAG,KAAAhK,OAAQ,OAAJ+J,QAAI,IAAJA,OAAI,EAAJA,EAAME,aAAY,KAAAjK,OAAIgT,GAAU,CACjE3G,QAAS,CACPC,cAAc,UAADtM,OAAgB,OAAJkJ,QAAI,IAAJA,OAAI,EAAJA,EAAMqD,iBAEjC,wBAAAN,EAAAS,OAAA,GAAAX,EAAA,MACHY,MAAA,KAAAC,UAAA,CAsID,IApI2B,SAAHxS,GAeU,IAADmgB,EAAA3R,EAd/BmB,EAAI3P,EAAJ2P,KACAK,EAAQhQ,EAARgQ,SACAlN,EAAQ9C,EAAR8C,SACAmN,EAAejQ,EAAfiQ,gBACApN,EAAO7C,EAAP6C,QAAOud,EAAApgB,EACPkQ,WAAAA,OAAU,IAAAkQ,EAAG,WAAO,EAACA,EAAAC,EAAArgB,EACrBsgB,iBAAAA,OAAgB,IAAAD,EAAG,WAAO,EAACA,EAAAE,EAAAvgB,EAC3Bwa,UAAAA,OAAS,IAAA+F,EAAG,WAAO,EAACA,EACpB9c,EAASzD,EAATyD,UACAE,EAAa3D,EAAb2D,cAAa6c,EAAAxgB,EACbygB,gBAAAA,OAAe,IAAAD,EAAG,WAAO,EAACA,EAAAE,EAAA1gB,EAC1B2gB,eAAAA,OAAc,IAAAD,EAAGV,EAAkBU,EACnC7c,EAAe7D,EAAf6D,gBACAC,EAAgB9D,EAAhB8D,iBAEAiK,GAA0BC,EAAAA,EAAAA,YAAWmK,EAAAA,GAA7BtJ,EAAOd,EAAPc,QAASC,EAAIf,EAAJe,KACjB7E,GAA6BC,EAAAA,EAAAA,WAAS,GAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAArC2W,EAAIzW,EAAA,GAAE0W,EAAY1W,EAAA,GACzBmO,GAAwBpO,EAAAA,EAAAA,UAAgC,IAAGqO,GAAAnO,EAAAA,EAAAA,GAAAkO,EAAA,GAApDtV,EAAIuV,EAAA,GAAEtV,EAAOsV,EAAA,GAAwC,SAC7CuI,IAAkB,OAAAX,EAAAA,IAAA3O,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAjC,SAAA0I,IAAA,IAAAxB,EAAAmI,EAAAvO,UAAA,OAAAf,EAAAA,EAAAA,KAAAG,MAAA,SAAA0I,GAAA,cAAAA,EAAAxI,KAAAwI,EAAAvI,MAAA,OAAqD,OAAnB6G,EAAcmI,EAAA1Y,OAAA,QAAA8T,IAAA4E,EAAA,GAAAA,EAAA,GAAG,GAAEzG,EAAAvI,KAAA,EACtC4O,EAAe9R,EAASC,EAAMa,EAAMiJ,GAAQ,KAAD,SAAA0B,EAAAlI,OAAA,SAAAkI,EAAAjI,MAAA,wBAAAiI,EAAAhI,OAAA,GAAA8H,EAAA,MACzD7H,MAAA,KAAAC,UAAA,CACD,IAAAnB,GAA+BC,EAAAA,EAAAA,UAAS,CACtCxO,SAAUA,EACVyO,QAAQ,WAAD,OAAA/C,EAAAA,IAAAgD,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAE,SAAAgJ,IAAA,OAAAjJ,EAAAA,EAAAA,KAAAG,MAAA,SAAAgJ,GAAA,cAAAA,EAAA9I,KAAA8I,EAAA7I,MAAA,cAAA6I,EAAA7I,KAAA,EAAkB+O,IAAoB,cAAAlG,EAAAxI,OAAA,SAAAwI,EAAAvI,MAAA,wBAAAuI,EAAAtI,OAAA,GAAAoI,EAAA,MAAAnI,MAAA,KAAAC,UAAA,EAC/CgI,UAAW,SAACG,GACV,IAAMqG,EAAWrG,EACjB1X,EAAQ+d,EAAS9a,KAAK+J,IACtBuK,EAAUwG,EACZ,EACAC,sBAAsB,IARhBre,EAASyO,EAATzO,UAAWse,EAAO7P,EAAP6P,QAmGnB,MAAO,CACLN,KAAAA,EACA5d,KAAAA,EACAJ,UAAAA,EACAgO,UA5FgB,WAA0B,IAAzBgI,EAAcpG,UAAAnK,OAAA,QAAA8T,IAAA3J,UAAA,GAAAA,UAAA,GAAG,IAClC2O,EAAAA,EAAAA,YAAU,WACRN,GAAa,EACf,IACa,OAATpd,QAAS,IAATA,GAAAA,EAAWwB,UACbxB,EAAUwB,QAAQ7E,MAAQwY,EAC1BkI,EAAmBlI,GAAQ2G,MAAK,SAAC5E,GAC/B,GAAQ,OAAHA,QAAG,IAAHA,IAAAA,EAAKzU,KAAK2U,QACb,OAAOuG,MAAM,WAADxb,OAAe,OAAH+U,QAAG,IAAHA,OAAG,EAAHA,EAAKzU,KAAKgV,UAGpCjY,EADiB0X,EACAzU,KAAK+J,IACT,OAATxM,QAAS,IAATA,GAAAA,EAAWwB,SAASxB,EAAUwB,QAAQiC,OAC5C,IAEJ,EA8EE4J,WA5EiB,WAEK,IAAD9L,GADrB6b,GAAa,GACTJ,IACFA,EAAyB,OAAThd,QAAS,IAATA,GAAkB,QAATuB,EAATvB,EAAWwB,eAAO,IAAAD,OAAT,EAATA,EAAoB5E,MAExC,EAwEEsQ,gBArEA3P,EAAAA,EAAAA,KAAC2B,EAAAA,GAAc,CACboB,iBAAkBA,EAClBL,UAAWA,EACXL,UAAWwd,EACXzd,aAAc,WAEU,IAADmC,GADrBub,GAAa,GACTJ,IACFA,EAAyB,OAAThd,QAAS,IAATA,GAAkB,QAAT6B,EAAT7B,EAAWwB,eAAO,IAAAK,OAAT,EAATA,EAAoBlF,MAExC,EACAiD,iBAAkB,WAEM,IAADge,GADrBR,GAAa,GACTJ,IACFA,EAAyB,OAAThd,QAAS,IAATA,GAAkB,QAAT4d,EAAT5d,EAAWwB,eAAO,IAAAoc,OAAT,EAATA,EAAoBjhB,MAExC,EACAkD,eAAgB,SAAC+B,GAaf,EAEFzB,iBAAkB,SAACxD,GACjB0gB,EAAmB1gB,GAAOmf,MAAK,SAAC5E,GAC9B,GAAQ,OAAHA,QAAG,IAAHA,IAAAA,EAAKzU,KAAK2U,QACb,OAAOuG,MAAM,WAADxb,OAAe,OAAH+U,QAAG,IAAHA,OAAG,EAAHA,EAAKzU,KAAKgV,UAGpCjY,EADiB0X,EACAzU,KAAK+J,GACxB,GACF,EACAtM,cAAeA,EACfhB,OAAQ,IACRC,UAAWA,EACXE,SAAUA,EACVD,QAASA,EACTE,kBAAmB,SAACqG,EAAmBlD,GACrC,GAAIkD,EAAkBf,QAAU,EAC9B,OAAOiY,EAAiBpa,GAE1B,IAAMob,EAAc,IAAI7U,IAAIrD,GACtB+G,EAAkBjK,EAAKwE,QAAO,SAACgB,GACnC,OAAO4V,EAAY3U,IAAIjB,EAAIsE,GAAUuR,WACvC,IACIpR,EAAgB9H,QAAU,GAC9B6H,EAAWC,EAAiBjK,EAC9B,EACAhD,GAAI8M,EACJhN,KAAMA,EACNC,QAASA,EACTY,gBAAiBA,IAWnBqd,QAAAA,EAEJ,C,6HCpLO,SAAS9E,EAAuB5T,GAMnC,IAADgZ,EACDxG,IAAAA,KAAU,CACRxX,MAAM,gBACNie,KAAW,OAALjZ,QAAK,IAALA,GAAAA,EAAO0W,KACJ,OAAL1W,QAAK,IAALA,OAAK,EAALA,EAAO0W,KACP1W,EAAM6T,SAAQ,6CAEd,wCACJpB,KAAM,UACNyG,MAAO,OACPC,gBAAiB,CACfC,eAAgB,OAElBzC,kBAAkB,EAClBG,kBAAmB,OACnBF,mBAAoB,QACpByC,qBAAqB,EACrBC,WAAW,SAAD3H,GAAA,OAAAqH,EAAAA,IAAAhQ,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAE,SAAAC,EAAO4K,GAAoB,OAAA9K,EAAAA,EAAAA,KAAAG,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACrC,IACEvJ,EAAM8T,GAAGC,EACX,CAAE,MAAOwF,GACP/G,IAAAA,sBAA2B,iCAADpV,OACJmc,EAAK,gBAE7B,CAAC,wBAAAlQ,EAAAS,OAAA,GAAAX,EAAA,MACFY,MAAA,KAAAC,UAAA,EACDwP,kBAAmB,kBAAOhH,IAAAA,WAAgB,IACzCuE,MAAK,SAACC,GACP,GAAIA,EAAOC,aACLjX,EAAMiU,UACR,OAAOjU,EAAMiU,YAGbjU,EAAMyZ,YACRzZ,EAAMyZ,YAEV,GACF,CAEO,SAASzF,EAAuBhU,GAKrCwS,IAAAA,KAAU,CACRxX,MAAO,gBACP0b,KAAW,OAAL1W,QAAK,IAALA,GAAAA,EAAO0W,KAAY,OAAL1W,QAAK,IAALA,OAAK,EAALA,EAAO0W,KAAO,sCAClCjE,KAAM,UACNkE,kBAAkB,EAClBC,mBAAoB,UACpBC,kBAAmB,OACnBC,kBAAmB,kBAClBC,MAAK,SAACC,GACP,GAAIA,EAAOC,aACLjX,EAAMiU,UACR,OAAOjU,EAAMiU,YAGbjU,EAAMyZ,YACRzZ,EAAMyZ,YAEV,GACF,C,4BCnEIC,EAAyBC,EAAQ,OAIrCC,EAAQ,OAAU,EAClB,IAAIC,EAAiBH,EAAuBC,EAAQ,QAChDG,EAAcH,EAAQ,OACtBI,GAAW,EAAIF,EAAeG,UAAuB,EAAIF,EAAYG,KAAK,OAAQ,CACpFC,EAAG,wCACD,OACJN,EAAQ,EAAUG,C,4BCVdL,EAAyBC,EAAQ,OAIrCC,EAAQ,OAAU,EAClB,IAAIC,EAAiBH,EAAuBC,EAAQ,QAChDG,EAAcH,EAAQ,OACtBI,GAAW,EAAIF,EAAeG,UAAuB,EAAIF,EAAYG,KAAK,OAAQ,CACpFC,EAAG,kFACD,UACJN,EAAQ,EAAUG,C,4BCVdL,EAAyBC,EAAQ,OAIrCC,EAAQ,OAAU,EAClB,IAAIC,EAAiBH,EAAuBC,EAAQ,QAChDG,EAAcH,EAAQ,OACtBI,GAAW,EAAIF,EAAeG,SAAS,EAAc,EAAIF,EAAYG,KAAK,SAAU,CACtFE,GAAI,KACJC,GAAI,IACJC,EAAG,KACF,MAAmB,EAAIP,EAAYG,KAAK,OAAQ,CACjDC,EAAG,kQACF,MAAO,gBACVN,EAAQ,EAAUG,C,4BCddL,EAAyBC,EAAQ,OAIrCC,EAAQ,OAAU,EAClB,IAAIC,EAAiBH,EAAuBC,EAAQ,QAChDG,EAAcH,EAAQ,OACtBI,GAAW,EAAIF,EAAeG,UAAuB,EAAIF,EAAYG,KAAK,OAAQ,CACpFC,EAAG,mJACD,QACJN,EAAQ,EAAUG,C,2BCVdL,EAAyBC,EAAQ,OAIrCC,EAAQ,OAAU,EAClB,IAAIC,EAAiBH,EAAuBC,EAAQ,QAChDG,EAAcH,EAAQ,OACtBI,GAAW,EAAIF,EAAeG,UAAuB,EAAIF,EAAYG,KAAK,OAAQ,CACpFC,EAAG,+OACD,UACJN,EAAQ,EAAUG,C,qBCGlB,IAhBa,CACX,GAAI,UACJ,IAAK,UACL,IAAK,UACL,IAAK,UACL,IAAK,UACL,IAAK,UACL,IAAK,UACL,IAAK,UACL,IAAK,UACL,IAAK,UACLO,KAAM,UACNC,KAAM,UACNC,KAAM,UACNC,KAAM,U","sources":["components/DatePicker.tsx","components/ModalWithTable.tsx","components/NumberFormat.tsx","components/Table.tsx","feautures/Admin/Task/Production/Policies/PolicyComponent/PA/PAPolicyComponent/PAPolicyInformation.tsx","feautures/Admin/Task/Production/Policies/PolicyComponent/PA/PAPolicy.tsx","hooks/useQueryModalTable.tsx","lib/confirmationAlert.ts","../node_modules/@mui/icons-material/Add.js","../node_modules/@mui/icons-material/Delete.js","../node_modules/@mui/icons-material/PersonSearch.js","../node_modules/@mui/icons-material/Save.js","../node_modules/@mui/icons-material/Search.js","../node_modules/@mui/material/colors/pink.js"],"sourcesContent":["import { LocalizationProvider } from \"@mui/x-date-pickers/LocalizationProvider\";\nimport { AdapterDateFns } from \"@mui/x-date-pickers/AdapterDateFns\";\nimport { DatePicker } from \"@mui/x-date-pickers\";\nexport default function CustomDatePicker({\n  label,\n  name,\n  onChange,\n  value,\n  onKeyDown,\n  inputRef,\n  datePickerRef,\n  fullWidth,\n  textField,\n  minWidth = \"200px\",\n  ...rest\n}: any) {\n  return (\n    <LocalizationProvider dateAdapter={AdapterDateFns}>\n      <DatePicker\n      floatingLabelStyle={{color: \"black\" }}\n        value={value}\n        onChange={onChange}\n        ref={datePickerRef}\n        slotProps={{\n          textField: {\n            size: \"small\",\n            label,\n            name,\n            onKeyDown,\n            inputRef: inputRef,\n            fullWidth,\n\n            ...textField,\n          },\n        }}\n        InputLabelProps={{\n          sx: {\n            color: \"black\",\n          },\n        }}\n        sx={{\n          minWidth,\n          fieldset: { borderColor: \"black\" },\n          \".MuiFormLabel-root\": { fontSize: \"14px\" },\n          \".MuiFormLabel-root[data-shrink=false]\": {\n            top: \"-5px\",\n          },\n        }}\n        {...rest}\n      />\n    </LocalizationProvider>\n  );\n}\n","import React from \"react\";\nimport {\n  GridRowSelectionModel,\n  GridRowParams,\n  GridCellParams,\n  GridTreeNode,\n} from \"@mui/x-data-grid\";\nimport { Modal, Box, Typography, IconButton, TextField, InputAdornment } from \"@mui/material\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport Table from \"./Table\";\nimport SearchIcon from \"@mui/icons-material/Search\";\n\ninterface ModalWithTableParams {\n  height: number;\n  isLoading: boolean;\n  queryKey: string;\n  columns: Array<any>;\n  onSelectionChange: (rowSelectionModel: Array<any>, data: Array<any>) => void;\n  setRows: React.Dispatch<React.SetStateAction<GridRowSelectionModel>>;\n  rows: GridRowSelectionModel;\n  id: string;\n  onCloseModal: () => void;\n  onClickCloseIcon: () => void;\n  showModal: boolean;\n  searchOnChange:\n    | React.ChangeEventHandler<HTMLInputElement | HTMLTextAreaElement>\n    | undefined;\n  title?: string;\n  searchRef?: React.RefObject<HTMLInputElement>;\n  onCellKeyDown?: any;\n  onSearchKeyEnter?: (search: string) => void;\n  isRowSelectable?: ((params: GridRowParams<any>) => boolean) | undefined;\n  getCellClassName?:\n    | ((params: GridCellParams<any, any, any, GridTreeNode>) => string)\n    | undefined;\n}\n\nconst style = {\n  position: \"absolute\" as \"absolute\",\n  top: \"50%\",\n  left: \"50%\",\n  transform: \"translate(-50%, -50%)\",\n  width: \"70%\",\n  bgcolor: \"background.paper\",\n  boxShadow: 24,\n  p: 4,\n  heigth: \"auto\",\n};\n\nexport default function ModalWithTable({\n  height,\n  isLoading,\n  queryKey,\n  columns,\n  onSelectionChange,\n  setRows,\n  rows,\n  id,\n  onCloseModal,\n  showModal,\n  onClickCloseIcon,\n  searchOnChange,\n  title = \"\",\n  searchRef,\n  onCellKeyDown,\n  onSearchKeyEnter = () => {},\n  isRowSelectable,\n  getCellClassName,\n}: ModalWithTableParams) {\n  const mainId = generateRandomClass();\n\n  return (\n    <Modal\n      open={showModal}\n      onClose={onCloseModal}\n      aria-labelledby=\"modal-modal-title\"\n      aria-describedby=\"modal-modal-description\"\n    >\n      <Box sx={style}>\n        <Typography id=\"modal-modal-title\" variant=\"h6\" component=\"h2\" mb={2}>\n          {title}\n        </Typography>\n        <TextField\n          size=\"small\"\n          label=\"Search\"\n          fullWidth\n          onChange={searchOnChange}\n          InputProps={{\n            inputRef: searchRef,\n            style: { height: \"27px\", fontSize: \"14px\" },\n            endAdornment: (\n              <InputAdornment position=\"end\">\n                <IconButton\n                  onClick={() => {\n                    onSearchKeyEnter(searchRef?.current?.value as string);\n                  }}\n                  edge=\"end\"\n                >\n                  <SearchIcon />\n                </IconButton>\n              </InputAdornment>\n            ),\n          }}\n          type=\"search\"\n          onKeyDown={(e) => {\n            if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n              e.preventDefault();\n              onSearchKeyEnter(searchRef?.current?.value as string);\n            }\n            keyBoardSelectionTable(\n              e,\n              mainId,\n              searchRef?.current as HTMLInputElement\n            );\n          }}\n          sx={{\n            marginBottom: \"10px\",\n            \".MuiFormLabel-root\": { fontSize: \"14px\" },\n            \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n          }}\n        />\n        <div\n          className={`${mainId} main-table-selection-container`}\n          style={{ position: \"relative\", height: `${height + 20}px` }}\n        >\n          <Table\n            isSingleSelection={true}\n            isRowFreeze={false}\n            columns={columns}\n            isLoading={isLoading}\n            dataSelection={(selection, data, code) => {\n              onSelectionChange(selection, data);\n            }}\n            table_id={id}\n            rows={rows}\n            isRowSelectable={isRowSelectable}\n            getCellClassName={getCellClassName}\n          />\n        </div>\n\n        <div style={{ position: \"absolute\", top: \"10px\", right: \"10px\" }}>\n          <IconButton\n            aria-label=\"search-client\"\n            color=\"secondary\"\n            onClick={onClickCloseIcon}\n          >\n            <CloseIcon />\n          </IconButton>\n        </div>\n      </Box>\n    </Modal>\n  );\n}\n\nexport function generateRandomClass() {\n  const randomNumber = Math.floor(Math.random() * 10000);\n  const randomClass = \"main-\" + randomNumber;\n  return randomClass;\n}\n\nfunction keyBoardUpDown(className: string, el: HTMLElement) {\n  const firstRowParent = document.querySelector(\n    `.${className} .MuiDataGrid-row`\n  );\n  const firstInput = firstRowParent?.querySelector(\"input\");\n  firstInput?.focus();\n  const event = new MouseEvent(\"mouseenter\", {\n    bubbles: true,\n    cancelable: true,\n    view: window,\n  });\n  firstRowParent?.dispatchEvent(event);\n  firstInput?.addEventListener(\"keydown\", (es: any) => {\n    if (es.key === \"ArrowUp\") {\n      es.preventDefault();\n      el.focus();\n    }\n    if (es.key === \"ArrowUp\") {\n      firstRowParent?.classList.remove(\"hover-keyboard\");\n    }\n  });\n}\n\nexport function keyBoardSelectionTable(\n  e: React.KeyboardEvent<HTMLDivElement>,\n  className: string,\n  el: HTMLElement\n) {\n  const mainId = className;\n  if (e.code === \"ArrowDown\") {\n    const rows = document.querySelectorAll(`.${mainId} .MuiDataGrid-row`);\n    e.preventDefault();\n    rows[0]?.classList.add(\"hover-keyboard\");\n    keyBoardUpDown(className, el);\n    rows.forEach((el, idx) => {\n      el.addEventListener(\"keydown\", (es: any) => {\n        if (es.key === \"ArrowUp\") {\n          if (idx <= 0) {\n            return;\n          }\n\n          es.preventDefault();\n          rows[idx]?.classList.remove(\"hover-keyboard\");\n          rows[idx - 1]?.classList.add(\"hover-keyboard\");\n          return;\n        }\n        if (es.key === \"ArrowDown\") {\n          es.preventDefault();\n          if (idx >= rows.length - 1) {\n            return;\n          }\n          rows[idx]?.classList.remove(\"hover-keyboard\");\n          rows[idx + 1]?.classList.add(\"hover-keyboard\");\n        }\n      });\n    });\n  }\n}\n","import React from \"react\";\nimport { NumericFormat, NumericFormatProps } from \"react-number-format\";\n\ninterface CustomProps {\n  onChange: (event: { target: { name: string; value: string } }) => void;\n  name: string;\n}\n\nexport const NumericFormatCustom = React.forwardRef<\n  NumericFormatProps,\n  CustomProps\n>(function NumericFormatCustom(props, ref) {\n  const { onChange, ...other } = props;\n\n  return (\n    <NumericFormat\n      {...other}\n      getInputRef={ref}\n      onValueChange={(values) => {\n        onChange({\n          target: {\n            name: props.name,\n            value: values.value,\n          },\n        });\n      }}\n      allowNegative={false}\n      thousandSeparator\n      valueIsNumericString\n      //   prefix=\"$\"\n    />\n  );\n});\n","import {\n  useState,\n  useContext,\n  createContext,\n  ReactElement,\n  forwardRef,\n  useImperativeHandle,\n} from \"react\";\nimport { Box, LinearProgress } from \"@mui/material\";\nimport {\n  DataGrid,\n  GridSlotsComponentsProps,\n  gridPageCountSelector,\n  GridPagination,\n  useGridApiContext,\n  useGridSelector,\n  GridRowSelectionModel,\n  GridColDef,\n  GridRowParams,\n  GridCellParams,\n  GridTreeNode,\n} from \"@mui/x-data-grid\";\nimport { TablePaginationProps } from \"@mui/material/TablePagination\";\nimport MuiPagination from \"@mui/material/Pagination\";\n\ninterface TableProps {\n  isLoading: boolean;\n  columns: Array<any>;\n  rows: Array<any>;\n  table_id: string;\n  isSingleSelection: boolean;\n  isRowFreeze: boolean;\n  dataSelection?: (selection: any, data: any, code: string | null) => void;\n  CustomFooterComponent?: any;\n  isRowSelectable?: ((params: GridRowParams<any>) => boolean) | undefined;\n  getCellClassName?:\n    | ((params: GridCellParams<any, any, any, GridTreeNode>) => string)\n    | undefined;\n  footerChildren?: (\n    rowSelectionModel: GridRowSelectionModel,\n    rows: Array<any>\n  ) => ReactElement;\n  footerPaginationPosition?: string;\n  showFooterSelectedCount?: boolean;\n  checkboxSelection?: boolean | undefined;\n}\n\nconst TableContext = createContext<{\n  rowSelectionModel: GridRowSelectionModel;\n  rows: Array<any>;\n  footerPaginationPosition?: string;\n  showFooterSelectedCount?: boolean;\n  footerChildren: (\n    rowSelectionModel: GridRowSelectionModel,\n    rows: Array<any>\n  ) => ReactElement;\n}>({\n  rows: [],\n  rowSelectionModel: [],\n  footerChildren: () => <div></div>,\n  footerPaginationPosition: \"right-left\",\n  showFooterSelectedCount: true,\n});\nconst Table = forwardRef(\n  (\n    {\n      isLoading,\n      columns,\n      rows,\n      table_id,\n      isSingleSelection,\n      isRowFreeze,\n      dataSelection,\n      CustomFooterComponent = DefaultooterComponent,\n      isRowSelectable,\n      getCellClassName,\n      checkboxSelection = true,\n      footerChildren = (\n        rowSelectionModel: GridRowSelectionModel,\n        rows: Array<any>\n      ) => <div></div>,\n      footerPaginationPosition = \"right-left\",\n      showFooterSelectedCount = true,\n    }: TableProps,\n    ref\n  ) => {\n    const [selectedRows, setSelectedRows] = useState<any>([]);\n\n    useImperativeHandle(ref, () => ({\n      removeSelection: () => {\n        setSelectedRows([]);\n      },\n      getSelectedRows: () => {\n        return rows.filter((item: any) =>\n          selectedRows?.includes(item[table_id])\n        );\n      },\n      setSelectedRows: (data: Array<any>) => {\n        setSelectedRows(data);\n      },\n    }));\n\n    function onSelectionChange(selection: any, data: any, code: string | null) {\n      if (dataSelection) {\n        dataSelection(selection, data, code);\n      }\n    }\n    let freezeArray: Array<any> = [];\n\n    return (\n      <TableContext.Provider\n        value={{\n          showFooterSelectedCount,\n          footerPaginationPosition,\n          rowSelectionModel: selectedRows,\n          rows,\n          footerChildren,\n        }}\n      >\n        <DataGrid\n          slots={{\n            loadingOverlay: LinearProgress,\n            footer: CustomFooterComponent,\n          }}\n          initialState={{\n            pagination: { paginationModel: { pageSize: 35 } },\n          }}\n          loading={isLoading}\n          getRowId={(row) => row[table_id]}\n          columns={columns.filter((col: any) => !col.hide) as GridColDef<any>[]}\n          rows={rows}\n          showCellVerticalBorder={true}\n          showColumnVerticalBorder={true}\n          checkboxSelection={checkboxSelection}\n          rowSelectionModel={selectedRows}\n          rowHeight={25}\n          columnHeaderHeight={35}\n          pageSizeOptions={[10, 20, 35, 50, 75, 100]}\n          sx={{\n            \"& .cash\": {\n              color: \"#ec4899\",\n            },\n            \"& .check\": {\n              color: \"#0891b2\",\n            },\n            \"& .approved\": {\n              color: \"green\",\n            },\n            \"& .pending\": {\n              color: \"orange\",\n            },\n            \"& .disapproved\": {\n              color: \"red\",\n            },\n            \"& .normal\": {\n              color: \"red\",\n            },\n            \"& .MuiDataGrid-row.Mui-selected:hover\": {\n              color: \"black\",\n              \"& .MuiSvgIcon-root \": {\n                fill: \"#3b82f6\",\n              },\n            },\n            \"& .hover-keyboard\": {\n              background: \"#2563eb\",\n              color: \"white\",\n              \"& .MuiSvgIcon-root \": {\n                fill: \"white\",\n              },\n            },\n            \"& .MuiDataGrid-row:hover\": {\n              background: \"#2563eb\",\n              color: \"white\",\n              \"& .MuiSvgIcon-root \": {\n                fill: \"white\",\n              },\n            },\n            \"& .MuiDataGrid-row.hover\": {\n              background: \"#2563eb\",\n              color: \"white\",\n              \"& .MuiSvgIcon-root \": {\n                fill: \"white\",\n              },\n            },\n            \"& .MuiTablePagination-root p \": {\n              padding: \"0 !important\",\n            },\n\n            ...{\n              \"& .MuiDataGrid-columnHeaders\": {\n                background: \"#64748b\",\n                color: \"white\",\n                fontSize: \"14px\",\n                // borderBottomColor: \"#38bdf8\",\n              },\n              \"& .MuiDataGrid-columnHeaderCheckbox .MuiDataGrid-columnHeaderTitleContainer .MuiSvgIcon-root \":\n                {\n                  display: isSingleSelection || isRowFreeze ? \"none\" : \"block\",\n                  fill: \"white\",\n                },\n              \"& .MuiDataGrid-columnHeaderCheckbox .MuiDataGrid-columnHeaderTitleContainer input \":\n                {\n                  display: isSingleSelection || isRowFreeze ? \"none\" : \"block\",\n                },\n            },\n            ...{\n              fontSize: 13,\n              fontWeight: 500,\n              \"& .MuiDataGrid-checkboxInput\": {\n                height: \"27px\",\n                width: \"27px\",\n              },\n              \"& .MuiDataGrid-checkboxInput svg\": {\n                height: \"20px\",\n                width: \"20px\",\n              },\n            },\n          }}\n          // onRowDoubleClick={(e, r) => {\n          //   console.log(e, r);\n          // }}\n\n          onRowSelectionModelChange={(selection) => {\n            if (isRowFreeze) {\n              if (selection.length <= 0) return;\n              freezeArray = selection;\n              if (selectedRows.includes(freezeArray[freezeArray.length - 1]))\n                return;\n\n              setSelectedRows(selection);\n\n              onSelectionChange([selection[selection.length - 1]], rows, null);\n              return;\n            }\n\n            if (!isRowFreeze && isSingleSelection) {\n              if (selectedRows && selectedRows?.length > 0) {\n                const selectionSet = new Set(selectedRows);\n                setSelectedRows(\n                  selection.filter((s: any) => !selectionSet.has(s))\n                );\n              } else {\n                setSelectedRows(selection);\n              }\n            } else {\n              setSelectedRows(selection);\n            }\n\n            onSelectionChange([selection[selection.length - 1]], rows, null);\n          }}\n          onCellKeyDown={(__: any, key: any) => {\n            const keyFinding = [\"NumpadEnter\", \"Enter\", \"Delete\", \"Backspace\"];\n            if (!keyFinding.includes(key.code)) {\n              return;\n            }\n            key.preventDefault();\n            if (key.code === \"Enter\" || key.code === \"NumpadEnter\") {\n              if (isSingleSelection && !isRowFreeze) {\n                return setSelectedRows((data: any) => {\n                  if (data && data.length > 0 && data[0] === __.rowNode.id) {\n                    onSelectionChange([], rows, key.code);\n                    return [];\n                  }\n                  onSelectionChange([__.rowNode.id], rows, key.code);\n                  return [__.rowNode.id];\n                });\n              } else {\n                setSelectedRows((data: any) => {\n                  if (\n                    data &&\n                    !isRowFreeze &&\n                    data.length > 0 &&\n                    data.includes(__.rowNode.id)\n                  ) {\n                    data = data.filter((item: any) => item !== __.rowNode.id);\n                    onSelectionChange([], rows, key.code);\n                    return data;\n                  }\n                  if (\n                    data &&\n                    isRowFreeze &&\n                    data.length > 0 &&\n                    data.includes(__.rowNode.id)\n                  ) {\n                    return data;\n                  }\n                  onSelectionChange([__.rowNode.id], rows, key.code);\n                  return [...data, __.rowNode.id];\n                });\n              }\n              return;\n            }\n            if (key.code === \"Delete\" || key.code === \"Backspace\") {\n              setSelectedRows([__.rowNode.id]);\n              return onSelectionChange([__.rowNode.id], rows, key.code);\n            }\n          }}\n          disableVirtualization\n          isRowSelectable={isRowSelectable}\n          getCellClassName={getCellClassName}\n        />\n      </TableContext.Provider>\n    );\n  }\n);\n\nexport default Table;\nfunction Pagination({\n  page,\n  onPageChange,\n  className,\n}: Pick<TablePaginationProps, \"page\" | \"onPageChange\" | \"className\">) {\n  const apiRef = useGridApiContext();\n  const pageCount = useGridSelector(apiRef, gridPageCountSelector);\n\n  return (\n    <MuiPagination\n      variant=\"outlined\"\n      color=\"primary\"\n      className={className}\n      count={pageCount}\n      page={page + 1}\n      onChange={(event, newPage) => {\n        onPageChange(event as any, newPage - 1);\n      }}\n    />\n  );\n}\n\nfunction CustomPagination(props: any) {\n  return <GridPagination ActionsComponent={Pagination} {...props} />;\n}\nfunction DefaultooterComponent(\n  props: NonNullable<GridSlotsComponentsProps[\"footer\"]>\n) {\n  const {\n    rowSelectionModel,\n    showFooterSelectedCount,\n    footerPaginationPosition,\n    footerChildren,\n    rows,\n  } = useContext(TableContext);\n  return (\n    <Box\n      sx={{\n        columnGap: \"50px\",\n        display: \"flex\",\n        width: \"100%\",\n        justifyContent: \"space-between\",\n        px: 3,\n        alignItems: \"center\",\n        flexDirection:\n          footerPaginationPosition === \"right-left\" ? \"row-reverse\" : \"row\",\n      }}\n    >\n      <CustomPagination {...props} />\n      <Box\n        sx={{\n          display: \"flex\",\n          justifyContent:\n            footerPaginationPosition === \"right-left\"\n              ? \"flex-start\"\n              : \"flex-end\",\n          flex: 1,\n          alignItems: \"center\",\n        }}\n      >\n        {showFooterSelectedCount && (\n          <div>Selected:{rowSelectionModel?.length}</div>\n        )}\n        <div>{footerChildren(rowSelectionModel, rows)}</div>\n      </Box>\n    </Box>\n  );\n}\n","import { useContext, CSSProperties, useRef } from \"react\";\nimport { PAContext } from \"../PAPolicy\";\nimport {\n  IconButton,\n  TextField,\n  FormControl,\n  InputLabel,\n  Select,\n  MenuItem,\n  Button,\n  Divider,\n  OutlinedInput,\n  InputAdornment,\n} from \"@mui/material\";\nimport PersonSearchIcon from \"@mui/icons-material/PersonSearch\";\nimport CustomDatePicker from \"../../../../../../../../components/DatePicker\";\nimport { NumericFormatCustom } from \"../../../../../../../../components/NumberFormat\";\nimport { LoadingButton } from \"@mui/lab\";\nimport { useQuery } from \"react-query\";\nimport useQueryModalTable from \"../../../../../../../../hooks/useQueryModalTable\";\nimport { addYears } from \"date-fns\";\n\nexport default function PAPolicyInformation() {\n  const {\n    state,\n    handleInputChange,\n    customInputchange,\n    myAxios,\n    user,\n    isAddOrEditMode,\n    keySave,\n    computation,\n    dispatch,\n  } = useContext(PAContext);\n\n  const searchClientInputRef = useRef<HTMLInputElement>(null);\n  const searchAgentInputRef = useRef<HTMLInputElement>(null);\n  const dateFrom = useRef<HTMLElement>(null);\n  const dateToDateRef = useRef<HTMLElement>(null);\n  const dateIssuedDateRef = useRef<HTMLElement>(null);\n\n  const {\n    ModalComponent: ModalClientIDs,\n    openModal: openCliendIDsModal,\n    isLoading: isLoadingClientIdsModal,\n    closeModal: closeCliendIDsModal,\n  } = useQueryModalTable({\n    link: {\n      url: \"/task/production/get-clients\",\n      queryUrlName: \"clientSearch\",\n    },\n    columns: [\n      { field: \"entry_client_id\", headerName: \"ID\", width: 130 },\n      { field: \"fullname\", headerName: \"First Name\", flex: 1 },\n      {\n        field: \"entry_type\",\n        headerName: \"ID Type\",\n        width: 150,\n      },\n    ],\n    queryKey: \"get-clients\",\n    uniqueId: \"entry_client_id\",\n    responseDataKey: \"clients\",\n    onSelected: (selectedRowData) => {\n      customInputchange(selectedRowData[0].entry_client_id, \"client_id\");\n      customInputchange(selectedRowData[0].fullname, \"client_name\");\n      customInputchange(selectedRowData[0].address, \"client_address\");\n      customInputchange(selectedRowData[0].sale_officer, \"sale_officer\");\n      closeCliendIDsModal();\n    },\n    onCellKeyDown: (__: any, key: any) => {\n      if (key.code === \"Enter\" || key.code === \"NumpadEnter\") {\n        customInputchange(__.row.entry_client_id, \"client_id\");\n        customInputchange(__.row.fullname, \"client_name\");\n        customInputchange(__.row.address, \"client_address\");\n        customInputchange(__.row[0].sale_officer, \"sale_officer\");\n        closeCliendIDsModal();\n      }\n    },\n    searchRef: searchClientInputRef,\n  });\n\n  const {\n    ModalComponent: ModalAgentId,\n    openModal: openModalAgentId,\n    isLoading: isLoadingModalAgentId,\n    closeModal: closeModalAgentId,\n  } = useQueryModalTable({\n    link: {\n      url: \"/task/production/get-agents\",\n      queryUrlName: \"agentSearch\",\n    },\n    columns: [\n      { field: \"entry_agent_id\", headerName: \"ID\", width: 130 },\n      { field: \"fullname\", headerName: \"First Name\", flex: 1 },\n      {\n        field: \"entry_type\",\n        headerName: \"ID Type\",\n        width: 150,\n      },\n    ],\n    queryKey: \"get-agents\",\n    uniqueId: \"entry_agent_id\",\n    responseDataKey: \"agents\",\n    onSelected: (selectedRowData) => {\n      customInputchange(selectedRowData[0].entry_agent_id, \"agent_id\");\n      customInputchange(selectedRowData[0].fullname, \"agent_name\");\n      closeModalAgentId();\n    },\n    onCellKeyDown: (__: any, key: any) => {\n      if (key.code === \"Enter\" || key.code === \"NumpadEnter\") {\n        customInputchange(__.row.entry_agent_id, \"agent_id\");\n        customInputchange(__.row.fullname, \"agent_name\");\n        closeModalAgentId();\n      }\n    },\n    searchRef: searchAgentInputRef,\n  });\n  const { data: policyAccount, isLoading: isLoadingPolicyAccount } = useQuery({\n    queryKey: \"bond-policy-account-ss\",\n    queryFn: async () =>\n      await myAxios.get(`/task/production/policy-accounts-by-line?Line=PA`, {\n        headers: {\n          Authorization: `Bearer ${user?.accessToken}`,\n        },\n      }),\n  });\n\n  function onKeyDownComputation(e: any) {\n    if (e.code === \"NumpadEnter\" || e.code === \"Enter\") {\n      computation();\n    }\n  }\n\n  return (\n    <div>\n      <div\n        style={{\n          display: \"flex\",\n          gap: \"10px\",\n          flexDirection: \"column\",\n        }}\n      >\n        <div\n          style={{\n            display: \"flex\",\n            gap: \"10px\",\n          }}\n        >\n          <div\n            style={\n              {\n                display: \"flex\",\n                columnGap: \"10px\",\n                flex: 1,\n                boxSizing: \"border-box\",\n              } as any\n            }\n          >\n            <fieldset\n              style={\n                {\n                  flex: 1,\n                  display: \"flex\",\n                  flexDirection: \"column\",\n                  gap: \"10px\",\n                  padding: \"15px\",\n                  border: \"1px solid #cbd5e1\",\n                  borderRadius: \"5px\",\n                } as CSSProperties\n              }\n            >\n              <legend style={{ color: \"#065f46\" }}>Insurer Information</legend>\n              <div\n                style={{\n                  display: \"flex\",\n                  gap: \"10px\",\n                  flexDirection: \"column\",\n                }}\n              >\n                {isLoadingClientIdsModal ? (\n                  <LoadingButton loading={isLoadingClientIdsModal} />\n                ) : (\n                  <FormControl\n                    variant=\"outlined\"\n                    size=\"small\"\n                    disabled={isAddOrEditMode}\n                    sx={{\n                      width: \"170px\",\n                      \".MuiFormLabel-root\": {\n                        fontSize: \"14px\",\n                        background: \"white\",\n                        zIndex: 99,\n                        padding: \"0 3px\",\n                      },\n                      \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n                    }}\n                  >\n                    <InputLabel htmlFor=\"client-id-field\">Client ID</InputLabel>\n                    <OutlinedInput\n                      sx={{\n                        height: \"27px\",\n                        fontSize: \"14px\",\n                      }}\n                      disabled={isAddOrEditMode}\n                      fullWidth\n                      label=\"Client ID\"\n                      name=\"client_id\"\n                      value={state.client_id}\n                      onChange={handleInputChange}\n                      onKeyDown={(e) => {\n                        if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n                          e.preventDefault();\n                          return openCliendIDsModal(state.client_id);\n                        }\n                      }}\n                      id=\"client-id-field\"\n                      endAdornment={\n                        <InputAdornment position=\"end\">\n                          <IconButton\n                            // ref={reloadIDButtonRef}\n                            disabled={isAddOrEditMode}\n                            aria-label=\"search-client\"\n                            color=\"secondary\"\n                            edge=\"end\"\n                            onClick={() => {\n                              openCliendIDsModal(state.client_id);\n                            }}\n                          >\n                            <PersonSearchIcon />\n                          </IconButton>\n                        </InputAdornment>\n                      }\n                    />\n                  </FormControl>\n                )}\n                <TextField\n                  disabled={isAddOrEditMode}\n                  fullWidth\n                  variant=\"outlined\"\n                  size=\"small\"\n                  label=\"Client Name\"\n                  name=\"client_name\"\n                  onKeyDown={keySave}\n                  value={state.client_name}\n                  onChange={handleInputChange}\n                  InputProps={{\n                    style: { height: \"27px\", fontSize: \"14px\" },\n                    readOnly: true,\n                  }}\n                  sx={{\n                    flex: 1,\n                    height: \"27px\",\n                    \".MuiFormLabel-root\": { fontSize: \"14px\" },\n                    \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n                  }}\n                />\n              </div>\n              <TextField\n                rows={5}\n                disabled={isAddOrEditMode}\n                fullWidth\n                variant=\"outlined\"\n                size=\"small\"\n                label=\"Client Address\"\n                multiline\n                name=\"client_address\"\n                value={state.client_address}\n                onChange={handleInputChange}\n                onKeyDown={keySave}\n                InputProps={{\n                  style: { height: \"100px\", fontSize: \"14px\" },\n                  readOnly: true,\n                }}\n                sx={{\n                  flex: 1,\n                  height: \"100px\",\n                  \".MuiFormLabel-root\": { fontSize: \"14px\" },\n                  \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n                }}\n              />\n            </fieldset>\n          </div>\n          <div\n            style={\n              {\n                display: \"flex\",\n                columnGap: \"10px\",\n                flex: 1,\n                boxSizing: \"border-box\",\n              } as any\n            }\n          >\n            <fieldset\n              style={\n                {\n                  flexDirection: \"row\",\n                  gap: \"10px\",\n                  padding: \"15px\",\n                  border: \"1px solid #cbd5e1\",\n                  borderRadius: \"5px\",\n                  flex: 1,\n                  flexWrap: \"wrap\",\n                } as CSSProperties\n              }\n            >\n              <legend style={{ color: \"#065f46\" }}>Agent Information</legend>\n              {isLoadingModalAgentId ? (\n                <LoadingButton loading={isLoadingModalAgentId} />\n              ) : (\n                <FormControl\n                  variant=\"outlined\"\n                  size=\"small\"\n                  disabled={isAddOrEditMode}\n                  sx={{\n                    width: \"170px\",\n                    \".MuiFormLabel-root\": {\n                      fontSize: \"14px\",\n                      background: \"white\",\n                      zIndex: 99,\n                      padding: \"0 3px\",\n                    },\n                    \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n                  }}\n                >\n                  <InputLabel htmlFor=\"AGENT-id-field\">Agent ID</InputLabel>\n                  <OutlinedInput\n                    sx={{\n                      height: \"27px\",\n                      fontSize: \"14px\",\n                    }}\n                    disabled={isAddOrEditMode}\n                    label=\"Agent ID\"\n                    name=\"agent_id\"\n                    value={state.agent_id}\n                    onChange={handleInputChange}\n                    onKeyDown={(e) => {\n                      if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n                        e.preventDefault();\n                        return openModalAgentId(state.agent_id);\n                      }\n                    }}\n                    id=\"AGENT-id-field\"\n                    endAdornment={\n                      <InputAdornment position=\"end\">\n                        <IconButton\n                          // ref={reloadIDButtonRef}\n                          disabled={isAddOrEditMode}\n                          aria-label=\"search-client\"\n                          color=\"secondary\"\n                          edge=\"end\"\n                          onClick={() => {\n                            openModalAgentId(state.agent_id);\n                          }}\n                        >\n                          <PersonSearchIcon />\n                        </IconButton>\n                      </InputAdornment>\n                    }\n                  />\n                </FormControl>\n              )}\n              <TextField\n                fullWidth\n                onKeyDown={keySave}\n                disabled={isAddOrEditMode}\n                variant=\"outlined\"\n                size=\"small\"\n                label=\"Agent Name\"\n                name=\"agent_name\"\n                value={state.agent_name}\n                onChange={handleInputChange}\n                InputProps={{\n                  style: { height: \"27px\", fontSize: \"14px\" },\n                  readOnly: true,\n                }}\n                sx={{\n                  flex: 1,\n                  height: \"27px\",\n                  \".MuiFormLabel-root\": { fontSize: \"14px\" },\n                  \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n                  marginTop: \"10px\",\n                }}\n              />\n              <TextField\n                onKeyDown={keySave}\n                disabled={isAddOrEditMode}\n                fullWidth\n                variant=\"outlined\"\n                size=\"small\"\n                label=\"Sale Officer\"\n                multiline\n                name=\"sale_officer\"\n                value={state.sale_officer}\n                onChange={handleInputChange}\n                InputProps={{\n                  style: { height: \"27px\", fontSize: \"14px\" },\n                  readOnly: true,\n                }}\n                sx={{\n                  width: \"100%\",\n                  height: \"27px\",\n                  \".MuiFormLabel-root\": { fontSize: \"14px\" },\n                  \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n                  marginTop: \"10px\",\n                }}\n              />\n            </fieldset>\n          </div>\n        </div>\n        <div\n          style={{\n            display: \"flex\",\n            gap: \"10px\",\n          }}\n        >\n          <div\n            style={\n              {\n                display: \"flex\",\n                columnGap: \"10px\",\n                flex: 1,\n                boxSizing: \"border-box\",\n              } as any\n            }\n          >\n            <fieldset\n              style={{\n                display: \"flex\",\n                flexDirection: \"column\",\n                gap: \"10px\",\n                padding: \"15px\",\n                border: \"1px solid #cbd5e1\",\n                borderRadius: \"5px\",\n                marginBottom: \"10px\",\n                flexGrow: 1,\n              }}\n            >\n              <legend style={{ color: \"#065f46\" }}>PA Policy</legend>\n              {isLoadingPolicyAccount ? (\n                <LoadingButton loading={isLoadingPolicyAccount} />\n              ) : (\n                <FormControl\n                  size=\"small\"\n                  fullWidth\n                  disabled={isAddOrEditMode}\n                  sx={{\n                    \".MuiFormLabel-root\": {\n                      fontSize: \"14px\",\n                      background: \"white\",\n                      zIndex: 99,\n                      padding: \"0 3px\",\n                    },\n                    \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n                  }}\n                >\n                  <InputLabel id=\"PolicyAccount\">Account</InputLabel>\n                  <Select\n                    sx={{\n                      height: \"27px\",\n                      fontSize: \"14px\",\n                    }}\n                    labelId=\"PolicyAccount\"\n                    value={state.PolicyAccount}\n                    label=\"Account\"\n                    name=\"PolicyAccount\"\n                    onChange={handleInputChange}\n                  >\n                    {policyAccount.data.policyAccounts.map(\n                      (items: any, idx: number) => {\n                        return (\n                          <MenuItem key={idx} value={items.Account}>\n                            {items.Account}\n                          </MenuItem>\n                        );\n                      }\n                    )}\n                  </Select>\n                </FormControl>\n              )}\n              <TextField\n                disabled={\n                  state.paActioMode === \"\" || state.paActioMode === \"update\"\n                }\n                fullWidth\n                variant=\"outlined\"\n                size=\"small\"\n                label=\"Policy No\"\n                name=\"PolicyNo\"\n                value={state.PolicyNo}\n                onChange={handleInputChange}\n                InputProps={{\n                  style: { height: \"27px\", fontSize: \"14px\" },\n                }}\n                onKeyDown={keySave}\n                sx={{\n                  width: \"100%\",\n                  height: \"27px\",\n                  \".MuiFormLabel-root\": { fontSize: \"14px\" },\n                  \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n                }}\n              />\n            </fieldset>\n          </div>\n          <div\n            style={\n              {\n                display: \"flex\",\n                columnGap: \"10px\",\n                flex: 1,\n                boxSizing: \"border-box\",\n              } as any\n            }\n          >\n            <fieldset\n              style={{\n                display: \"flex\",\n                flexDirection: \"column\",\n                gap: \"10px\",\n                gridArea: \"content4\",\n                padding: \"15px\",\n                border: \"1px solid #cbd5e1\",\n                borderRadius: \"5px\",\n                flexGrow: 1,\n              }}\n            >\n              <legend style={{ color: \"#065f46\" }}>Period of Insurance</legend>\n              <CustomDatePicker\n                disabled={isAddOrEditMode}\n                label=\"Date From\"\n                onChange={(e: any) => {\n                  customInputchange(e, \"DateFrom\");\n                  const newDate = new Date(e);\n                  const newDatePlusOneYear = addYears(newDate, 1);\n                  customInputchange(newDatePlusOneYear, \"DateTo\");\n                }}\n                value={new Date(state.DateFrom)}\n                textField={{\n                  InputLabelProps: {\n                    style: {\n                      fontSize: \"14px\",\n                    },\n                  },\n                  InputProps: {\n                    style: { height: \"27px\", fontSize: \"14px\" },\n                  },\n                }}\n                onKeyDown={(e: any) => {\n                  if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n                    const timeout = setTimeout(() => {\n                      dateFrom.current?.querySelector(\"button\")?.click();\n                      clearTimeout(timeout);\n                    }, 150);\n                  }\n                }}\n                datePickerRef={dateFrom}\n              />\n              <CustomDatePicker\n                disabled={isAddOrEditMode}\n                label=\"Date To\"\n                onChange={(e: any) => {\n                  customInputchange(e, \"DateTo\");\n                }}\n                value={new Date(state.DateTo)}\n                textField={{\n                  InputLabelProps: {\n                    style: {\n                      fontSize: \"14px\",\n                    },\n                  },\n                  InputProps: {\n                    style: { height: \"27px\", fontSize: \"14px\" },\n                  },\n                }}\n                onKeyDown={(e: any) => {\n                  if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n                    const timeout = setTimeout(() => {\n                      dateToDateRef.current?.querySelector(\"button\")?.click();\n                      clearTimeout(timeout);\n                    }, 150);\n                  }\n                }}\n                datePickerRef={dateToDateRef}\n              />\n              <CustomDatePicker\n                label=\"Date Issued\"\n                name=\"DateIssued\"\n                onChange={(e: any) => {\n                  customInputchange(e, \"DateIssued\");\n                }}\n                value={new Date(state.DateIssued)}\n                disabled={isAddOrEditMode}\n                textField={{\n                  InputLabelProps: {\n                    style: {\n                      fontSize: \"14px\",\n                    },\n                  },\n                  InputProps: {\n                    style: { height: \"27px\", fontSize: \"14px\" },\n                  },\n                }}\n                onKeyDown={(e: any) => {\n                  if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n                    const timeout = setTimeout(() => {\n                      dateIssuedDateRef.current\n                        ?.querySelector(\"button\")\n                        ?.click();\n                      clearTimeout(timeout);\n                    }, 150);\n                  }\n                }}\n                datePickerRef={dateIssuedDateRef}\n              />\n            </fieldset>\n          </div>\n        </div>\n        <div\n          style={{\n            display: \"flex\",\n            gap: \"10px\",\n          }}\n        >\n          <div\n            style={\n              {\n                display: \"flex\",\n                columnGap: \"10px\",\n                flex: 1,\n                boxSizing: \"border-box\",\n              } as any\n            }\n          >\n            <fieldset\n              style={{\n                display: \"flex\",\n                flexDirection: \"column\",\n                gap: \"10px\",\n                gridArea: \"content4\",\n                padding: \"15px\",\n                border: \"1px solid #cbd5e1\",\n                borderRadius: \"5px\",\n                flexGrow: 1,\n              }}\n            >\n              <legend style={{ color: \"#065f46\", height: \"20px\" }}></legend>\n              <TextField\n                disabled={isAddOrEditMode}\n                required\n                variant=\"outlined\"\n                size=\"small\"\n                label=\"Sum Insured\"\n                name=\"sumInsured\"\n                value={state.sumInsured}\n                onChange={handleInputChange}\n                onKeyDown={keySave}\n                placeholder=\"0.00\"\n                InputProps={{\n                  inputComponent: NumericFormatCustom as any,\n                  style: { height: \"27px\", fontSize: \"14px\" },\n                }}\n                sx={{\n                  width: \"100%\",\n                  height: \"27px\",\n                  \".MuiFormLabel-root\": { fontSize: \"14px\" },\n                  \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n                }}\n                onBlur={() => {\n                  dispatch({\n                    type: \"UPDATE_FIELD\",\n                    field: \"sumInsured\",\n                    value: parseFloat(state.sumInsured).toFixed(2),\n                  });\n                }}\n              />\n              <TextField\n                disabled={isAddOrEditMode}\n                required\n                variant=\"outlined\"\n                size=\"small\"\n                label=\"Property Insured\"\n                name=\"propertyInsured\"\n                value={state.propertyInsured}\n                onChange={handleInputChange}\n                onKeyDown={keySave}\n                InputProps={{\n                  style: { height: \"27px\", fontSize: \"14px\" },\n                }}\n                sx={{\n                  width: \"100%\",\n                  height: \"27px\",\n                  \".MuiFormLabel-root\": { fontSize: \"14px\" },\n                  \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n                }}\n              />\n            </fieldset>\n          </div>\n\n          <div\n            style={\n              {\n                display: \"flex\",\n                columnGap: \"10px\",\n                flex: 1,\n                boxSizing: \"border-box\",\n              } as any\n            }\n          >\n            <fieldset\n              style={{\n                display: \"flex\",\n                flexDirection: \"column\",\n                rowGap: \"10px\",\n                padding: \"15px\",\n                border: \"1px solid #cbd5e1\",\n                borderRadius: \"5px\",\n                flexGrow: 1,\n              }}\n            >\n              <legend>Premiums</legend>\n              <div\n                style={{\n                  display: \"flex\",\n                  justifyContent: \"flex-end\",\n                  padding: \"5px\",\n                }}\n              >\n                <Button\n                  disabled={isAddOrEditMode}\n                  size=\"small\"\n                  variant=\"contained\"\n                  color=\"primary\"\n                  onClick={() => {\n                    computation();\n                  }}\n                >\n                  Compute\n                </Button>\n              </div>\n\n              <TextField\n                disabled={isAddOrEditMode}\n                required\n                variant=\"outlined\"\n                size=\"small\"\n                label=\"Net Premium\"\n                name=\"netPremium\"\n                value={state.netPremium}\n                onChange={handleInputChange}\n                onKeyDown={onKeyDownComputation}\n                placeholder=\"0.00\"\n                InputProps={{\n                  inputComponent: NumericFormatCustom as any,\n                  style: { height: \"27px\", fontSize: \"14px\" },\n                }}\n                sx={{\n                  width: \"100%\",\n                  height: \"27px\",\n                  \".MuiFormLabel-root\": { fontSize: \"14px\" },\n                  \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n                }}\n                onBlur={() => {\n                  dispatch({\n                    type: \"UPDATE_FIELD\",\n                    field: \"netPremium\",\n                    value: parseFloat(state.netPremium).toFixed(2),\n                  });\n                }}\n              />\n              <TextField\n                disabled={isAddOrEditMode}\n                required\n                variant=\"outlined\"\n                size=\"small\"\n                label=\"Vat\"\n                name=\"vat\"\n                value={state.vat}\n                onChange={handleInputChange}\n                onKeyDown={onKeyDownComputation}\n                placeholder=\"0.00\"\n                InputProps={{\n                  inputComponent: NumericFormatCustom as any,\n                  style: { height: \"27px\", fontSize: \"14px\" },\n                }}\n                sx={{\n                  width: \"100%\",\n                  height: \"27px\",\n                  \".MuiFormLabel-root\": { fontSize: \"14px\" },\n                  \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n                }}\n                onBlur={() => {\n                  dispatch({\n                    type: \"UPDATE_FIELD\",\n                    field: \"vat\",\n                    value: parseFloat(state.vat).toFixed(2),\n                  });\n                }}\n              />\n              <TextField\n                disabled={isAddOrEditMode}\n                required\n                variant=\"outlined\"\n                size=\"small\"\n                label=\"Doc Stamp\"\n                name=\"docStamp\"\n                value={state.docStamp}\n                onChange={handleInputChange}\n                onKeyDown={onKeyDownComputation}\n                placeholder=\"0.00\"\n                InputProps={{\n                  inputComponent: NumericFormatCustom as any,\n                  style: { height: \"27px\", fontSize: \"14px\" },\n                }}\n                sx={{\n                  width: \"100%\",\n                  height: \"27px\",\n                  \".MuiFormLabel-root\": { fontSize: \"14px\" },\n                  \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n                }}\n                onBlur={() => {\n                  dispatch({\n                    type: \"UPDATE_FIELD\",\n                    field: \"docStamp\",\n                    value: parseFloat(state.docStamp).toFixed(2),\n                  });\n                }}\n              />\n              <div\n                style={{ display: \"flex\", gap: \"5px\", position: \"relative\" }}\n              >\n                <TextField\n                  disabled={isAddOrEditMode}\n                  required\n                  variant=\"outlined\"\n                  size=\"small\"\n                  name=\"localGovTaxPercent\"\n                  value={state.localGovTaxPercent}\n                  onChange={handleInputChange}\n                  onKeyDown={onKeyDownComputation}\n                  placeholder=\"0.00\"\n                  InputProps={{\n                    inputComponent: NumericFormatCustom as any,\n                    style: { height: \"27px\", fontSize: \"14px\" },\n                  }}\n                  sx={{\n                    width: \"80px\",\n                    height: \"27px\",\n                    \".MuiFormLabel-root\": { fontSize: \"14px\" },\n                    \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n                  }}\n                  onBlur={() => {\n                    dispatch({\n                      type: \"UPDATE_FIELD\",\n                      field: \"localGovTaxPercent\",\n                      value: parseFloat(state.localGovTaxPercent).toFixed(2),\n                    });\n                  }}\n                />\n                <TextField\n                  disabled={isAddOrEditMode}\n                  required\n                  variant=\"outlined\"\n                  size=\"small\"\n                  label=\"Local Gov Tax\"\n                  name=\"localGovTax\"\n                  value={state.localGovTax}\n                  onChange={handleInputChange}\n                  onKeyDown={onKeyDownComputation}\n                  placeholder=\"0.00\"\n                  InputProps={{\n                    inputComponent: NumericFormatCustom as any,\n                    style: { height: \"27px\", fontSize: \"14px\" },\n                  }}\n                  sx={{\n                    width: \"100%\",\n                    height: \"27px\",\n                    \".MuiFormLabel-root\": { fontSize: \"14px\" },\n                    \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n                  }}\n                  onBlur={() => {\n                    dispatch({\n                      type: \"UPDATE_FIELD\",\n                      field: \"localGovTax\",\n                      value: parseFloat(state.localGovTax).toFixed(2),\n                    });\n                  }}\n                />\n              </div>\n              <Divider color=\"secondary\" />\n              <TextField\n                disabled={isAddOrEditMode}\n                required\n                variant=\"outlined\"\n                size=\"small\"\n                label=\"Total Due\"\n                name=\"totalDue\"\n                value={state.totalDue}\n                onChange={handleInputChange}\n                placeholder=\"0.00\"\n                InputProps={{\n                  inputComponent: NumericFormatCustom as any,\n                  style: { height: \"27px\", fontSize: \"14px\" },\n                }}\n                sx={{\n                  width: \"100%\",\n                  height: \"27px\",\n                  \".MuiFormLabel-root\": { fontSize: \"14px\" },\n                  \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n                }}\n                onBlur={() => {\n                  dispatch({\n                    type: \"UPDATE_FIELD\",\n                    field: \"totalDue\",\n                    value: parseFloat(state.totalDue).toFixed(2),\n                  });\n                }}\n              />\n            </fieldset>\n          </div>\n        </div>\n      </div>\n      {ModalClientIDs}\n      {ModalAgentId}\n    </div>\n  );\n}\n","import {\n  createContext,\n  useContext,\n  useReducer,\n  useState,\n  useRef,\n  useEffect,\n  useCallback,\n} from \"react\";\nimport { Box, Button, IconButton, InputAdornment, TextField } from \"@mui/material\";\nimport { pink } from \"@mui/material/colors\";\nimport AddIcon from \"@mui/icons-material/Add\";\nimport { AuthContext } from \"../../../../../../../components/AuthContext\";\nimport { useQuery, useMutation, useQueryClient } from \"react-query\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport SaveIcon from \"@mui/icons-material/Save\";\nimport Swal from \"sweetalert2\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\nimport { GridRowSelectionModel } from \"@mui/x-data-grid\";\nimport { FormControl, InputLabel, Select, MenuItem } from \"@mui/material\";\nimport PAPolicyInformation from \"./PAPolicyComponent/PAPolicyInformation\";\nimport useQueryModalTable from \"../../../../../../../hooks/useQueryModalTable\";\nimport { LoadingButton } from \"@mui/lab\";\nimport {\n  codeCondfirmationAlert,\n  saveCondfirmationAlert,\n} from \"../../../../../../../lib/confirmationAlert\";\nimport { addYears } from \"date-fns\";\nimport SearchIcon from \"@mui/icons-material/Search\";\n\n\nconst initialState = {\n  sub_account: \"HO\",\n  //insurer info\n  client_id: \"\",\n  client_name: \"\",\n  client_address: \"\",\n  //agent info\n  agent_id: \"\",\n  agent_name: \"\",\n  agent_com: \"0.00\",\n  sale_officer: \"\",\n  //Vehicle policy\n  PolicyAccount: \"\",\n  PolicyNo: \"\",\n\n  //Period Insurance\n  DateFrom: new Date(),\n  DateTo: addYears(new Date(), 1),\n  DateIssued: new Date(),\n\n  //\n  sumInsured: \"\",\n  propertyInsured: \"\",\n\n  //calculation\n  netPremium: \"\",\n  vat: \"\",\n  docStamp: \"\",\n  localGovTaxPercent: \"0.75\",\n  localGovTax: \"\",\n  totalDue: \"\",\n  // extra\n  paActioMode: \"\",\n};\n\nconst reducer = (state: any, action: any) => {\n  switch (action.type) {\n    case \"UPDATE_FIELD\":\n      const newState = {\n        ...state,\n        [action.field]: action.value,\n      };\n      return newState;\n    default:\n      return state;\n  }\n};\nexport const PAContext = createContext<any>({});\n\nconst queryKeySearchPolicy = \"pa-search\";\nconst queryKeySearchClientEntry = \"clients\";\nconst queryKeySearchAgentEntry = \"agents\";\nconst queryKeyNeedData = \"pa-policy\";\nconst queryKeyAddOrUpdatePolicy = \"pa-policy\";\nconst queryKeyDeletePolicy = \"pa-policy\";\n\nexport default function PAPolicy() {\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const { myAxios, user } = useContext(AuthContext);\n  const [clientRows, setClientRows] = useState<GridRowSelectionModel>([]);\n  const [agentRows, setAgentRows] = useState<GridRowSelectionModel>([]);\n  const [search, setSearch] = useState(\"\");\n  const [Mortgagee, setMortgagee] = useState(false);\n\n  const searchPaPolicyInputRef = useRef<HTMLInputElement>(null);\n  const newButtonRef = useRef<HTMLButtonElement>(null);\n  const cancelButtonRef = useRef<HTMLButtonElement>(null);\n  const deleteButtonRef = useRef<HTMLButtonElement>(null);\n\n  const queryClient = useQueryClient();\n  const isAddOrEditMode = state.paActioMode === \"\";\n\n  const { data: dataSubAccount, isLoading: isLoadingSubAccount } = useQuery({\n    queryKey: \"get-sub_account\",\n    queryFn: async () =>\n      await myAxios.get(`/task/production/get-sub_account`, {\n        headers: {\n          Authorization: `Bearer ${user?.accessToken}`,\n        },\n      }),\n  });\n\n  const {\n    ModalComponent: ModalPaPolicy,\n    openModal: openModalPaPolicy,\n    isLoading: isLoadingModalPaPolicy,\n    closeModal: closeModalPaPolicy,\n  } = useQueryModalTable({\n    link: {\n      url: \"/task/production/search-pa-policy\",\n      queryUrlName: \"searchPaPolicy\",\n    },\n    columns: [\n      { field: \"DateIssued\", headerName: \"Date\", width: 200 },\n      { field: \"PolicyNo\", headerName: \"Policy No\", width: 250 },\n      {\n        field: \"Account\",\n        headerName: \"Account\",\n        width: 170,\n      },\n      {\n        field: \"client_fullname\",\n        headerName: \"Full Name\",\n        flex: 1,\n      },\n    ],\n    queryKey: \"search-pa-policy\",\n    uniqueId: \"PolicyNo\",\n    responseDataKey: \"paPolicy\",\n    onSelected: (selectedRowData) => {\n      onSearchSelected(selectedRowData);\n      closeModalPaPolicy();\n    },\n    onCellKeyDown: (__: any, key: any) => {\n      if (key.code === \"Enter\" || key.code === \"NumpadEnter\") {\n        onSearchSelected([__.row]);\n        closeModalPaPolicy();\n      }\n    },\n    searchRef: searchPaPolicyInputRef,\n  });\n\n  const { mutate, isLoading: loadingAddNew } = useMutation({\n    mutationKey: queryKeyAddOrUpdatePolicy,\n    mutationFn: async (variables: any) => {\n      if (state.paActioMode === \"update\") {\n        return await myAxios.post(\n          \"/task/production/update-pa-policy\",\n          variables,\n          {\n            headers: {\n              Authorization: `Bearer ${user?.accessToken}`,\n            },\n          }\n        );\n      }\n      return await myAxios.post(\"/task/production/add-pa-policy\", variables, {\n        headers: {\n          Authorization: `Bearer ${user?.accessToken}`,\n        },\n      });\n    },\n    onSuccess: async (res) => {\n      if (res.data.success) {\n        await updateQueryByKey();\n        backToDefaultState(initialState, true);\n        return Swal.fire({\n          position: \"center\",\n          icon: \"success\",\n          title: res.data.message,\n          showConfirmButton: false,\n          timer: 1500,\n        });\n      }\n\n      Swal.fire({\n        position: \"center\",\n        icon: \"error\",\n        title: res.data.message,\n        showConfirmButton: false,\n        timer: 1500,\n      });\n    },\n  });\n\n  const { mutate: mutateDelete, isLoading: loadingDelete } = useMutation({\n    mutationKey: queryKeyDeletePolicy,\n    mutationFn: async (variables: any) => {\n      return await myAxios.post(\n        \"/task/production/delete-pa-policy\",\n        variables,\n        {\n          headers: {\n            Authorization: `Bearer ${user?.accessToken}`,\n          },\n        }\n      );\n    },\n    onSuccess: async (res) => {\n      if (res.data.success) {\n        await updateQueryByKey();\n        backToDefaultState(initialState, true);\n        return Swal.fire({\n          position: \"center\",\n          icon: \"success\",\n          title: res.data.message,\n          showConfirmButton: false,\n          timer: 1500,\n        });\n      }\n\n      Swal.fire({\n        position: \"center\",\n        icon: \"error\",\n        title: res.data.message,\n        showConfirmButton: false,\n        timer: 1500,\n      });\n    },\n  });\n\n  const setDefaultValueForNumber = useCallback(() => {\n    state.netPremium = state.netPremium === \"\" ? \"0\" : state.netPremium;\n    state.vat = state.vat === \"\" ? \"0\" : state.vat;\n    state.docStamp = state.docStamp === \"\" ? \"0\" : state.docStamp;\n    state.localGovTaxPercent =\n      state.localGovTaxPercent === \"\" ? \"0\" : state.localGovTaxPercent;\n    state.localGovTax = state.localGovTax === \"\" ? \"0\" : state.localGovTax;\n    state.totalDue = state.totalDue === \"\" ? \"0\" : state.totalDue;\n  }, [state]);\n\n  const handleOnSave = useCallback(() => {\n    if (\n      state.client_name === \"\" ||\n      state.client_name === null ||\n      state.client_name === undefined\n    ) {\n      return Swal.fire(\n        \"Unable to save! Invalid Client ID\",\n        \"you missed the Client Id Field?\",\n        \"error\"\n      );\n    }\n\n    if (state.client_id === \"\" || state.client_id === null) {\n      return Swal.fire(\n        \"Unable to save! Invalid IDNo.\",\n        \"you missed the Client Id Field?\",\n        \"error\"\n      );\n    }\n    if (state.PolicyAccount === \"\" || state.PolicyAccount === null) {\n      return Swal.fire(\n        \"Unable to save! Please select Account.\",\n        \"you missed the Account Field?\",\n        \"error\"\n      );\n    }\n    if (state.PolicyNo === \"\" || state.PolicyNo === null) {\n      return Swal.fire(\n        \"Unable to save! Invalid Policy No.\",\n        \"you missed the Policy No Field?\",\n        \"error\"\n      );\n    }\n    if (state.paActioMode === \"update\") {\n      codeCondfirmationAlert({\n        isUpdate: true,\n        cb: (userCodeConfirmation) => {\n          setDefaultValueForNumber();\n          mutate({ ...state, userCodeConfirmation });\n        },\n      });\n    } else {\n      saveCondfirmationAlert({\n        isConfirm: () => {\n          setDefaultValueForNumber();\n          mutate(state);\n        },\n      });\n    }\n  }, [mutate, setDefaultValueForNumber, state]);\n\n  useEffect(() => {\n    const handleKeyDown = (event: any) => {\n      if (\n        state.paActioMode === \"\" &&\n        (event.code === \"KeyN\" ||\n          event.code === \"Enter\" ||\n          event.code === \"NumpadEnter\")\n      ) {\n        event.preventDefault();\n        newButtonRef.current?.click();\n      }\n      if (state.paActioMode !== \"\" && event.code === \"Escape\") {\n        event.preventDefault();\n        cancelButtonRef.current?.click();\n      }\n      if (state.paActioMode === \"update\" && event.code === \"Delete\") {\n        event.preventDefault();\n        deleteButtonRef.current?.click();\n      }\n    };\n    document.addEventListener(\"keydown\", handleKeyDown);\n    return () => {\n      document.removeEventListener(\"keydown\", handleKeyDown);\n    };\n  }, [handleOnSave, state.paActioMode]);\n\n  const handleInputChange = (e: any) => {\n    const { name, value } = e.target;\n    dispatch({ type: \"UPDATE_FIELD\", field: name, value });\n  };\n  const customInputchange = (value: any, name: string) => {\n    dispatch({ type: \"UPDATE_FIELD\", field: name, value });\n  };\n  function computation() {\n    setDefaultValueForNumber();\n    const inpLocalGovTaxPercent = parseFloat(state.localGovTaxPercent);\n    const VatPercentage = 12 / 100;\n    const DocPercentage = 12.5 / 100;\n    const LOGPercentage = inpLocalGovTaxPercent / 100;\n    const NewTotalPremium = parseFloat(state.netPremium);\n\n    customInputchange((VatPercentage * NewTotalPremium).toFixed(2), \"vat\");\n    customInputchange((DocPercentage * NewTotalPremium).toFixed(2), \"docStamp\");\n    customInputchange(\n      (LOGPercentage * NewTotalPremium).toFixed(2),\n      \"localGovTax\"\n    );\n    customInputchange(NewTotalPremium.toFixed(2), \"netPremium\");\n    customInputchange(\n      (\n        parseFloat(NewTotalPremium.toFixed(2)) +\n        parseFloat((VatPercentage * NewTotalPremium).toFixed(2)) +\n        parseFloat((DocPercentage * NewTotalPremium).toFixed(2)) +\n        parseFloat((LOGPercentage * NewTotalPremium).toFixed(2))\n      ).toFixed(2),\n      \"totalDue\"\n    );\n  }\n  function backToDefaultState(json: any, resetAll: boolean = false) {\n    json.form_type = state.form_type;\n    json.form_action = state.form_action;\n    json.prem_text_one = state.prem_text_one;\n    json.prem_text_two = state.prem_text_two;\n    if (!resetAll) {\n      json.paActioMode = state.paActioMode;\n    }\n    Object.entries(json).forEach(([key, value]) => {\n      customInputchange(value, key);\n    });\n  }\n  async function updateQueryByKey() {\n    return Promise.all([\n      queryClient.invalidateQueries(queryKeySearchPolicy),\n      queryClient.invalidateQueries(queryKeySearchClientEntry),\n      queryClient.invalidateQueries(queryKeySearchAgentEntry),\n      queryClient.invalidateQueries(queryKeyNeedData),\n      queryClient.invalidateQueries(queryKeyAddOrUpdatePolicy),\n      queryClient.invalidateQueries(queryKeyDeletePolicy),\n    ]);\n  }\n  function onSearchSelected(selectedRowData: any) {\n    const {\n      PolicyNo,\n      Account,\n      PeriodFrom,\n      PeriodTo,\n      Location,\n      IDNo,\n      SubAcct,\n      DateIssued,\n      TotalPremium,\n      AgentID,\n      AgentCom,\n      client_fullname,\n      agent_fullname,\n      address,\n      sumInsured,\n      sale_officer,\n    } = selectedRowData[0];\n    customInputchange(SubAcct, \"sub_account\");\n    customInputchange(IDNo, \"client_id\");\n    customInputchange(client_fullname, \"client_name\");\n    customInputchange(address, \"client_address\");\n\n    customInputchange(AgentID, \"agent_id\");\n    customInputchange(agent_fullname, \"agent_name\");\n    customInputchange(AgentCom, \"agent_com\");\n    customInputchange(sale_officer, \"sale_officer\");\n\n    customInputchange(Account, \"PolicyAccount\");\n    customInputchange(PolicyNo, \"PolicyNo\");\n\n    customInputchange(PeriodFrom, \"DateFrom\");\n    customInputchange(PeriodTo, \"DateTo\");\n    customInputchange(DateIssued, \"DateIssued\");\n\n    customInputchange(Location, \"propertyInsured\");\n    customInputchange(sumInsured, \"sumInsured\");\n    state.netPremium = TotalPremium;\n    computation();\n\n    customInputchange(\"update\", \"paActioMode\");\n  }\n  function keySave(event: any) {\n    if (\n      state.mode !== \"\" &&\n      (event.code === \"Enter\" || event.code === \"NumpadEnter\")\n    ) {\n      event.preventDefault();\n      handleOnSave();\n    }\n  }\n  return (\n    <PAContext.Provider\n      value={{\n        state,\n        handleInputChange,\n        customInputchange,\n        Mortgagee,\n        setMortgagee,\n        clientRows,\n        setClientRows,\n        myAxios,\n        user,\n        agentRows,\n        setAgentRows,\n        computation,\n        isAddOrEditMode,\n        dispatch,\n        keySave,\n      }}\n    >\n      <Box\n        sx={(theme) => ({\n          display: \"flex\",\n          alignItems: \"center\",\n          columnGap: \"20px\",\n          marginBottom: \"10px\",\n          [theme.breakpoints.down(\"sm\")]: {\n            flexDirection: \"column\",\n            alignItems: \"flex-start\",\n            flex: 1,\n          },\n        })}\n      >\n      \n        <div\n          style={{\n            display: \"flex\",\n            alignItems: \"center\",\n            columnGap: \"20px\",\n          }}\n        >\n          <div\n            style={{\n              display: \"flex\",\n              alignItems: \"center\",\n              columnGap: \"5px\",\n            }}\n          >\n            {state.paActioMode === \"\" && (\n              <Button\n                sx={{\n                  height: \"30px\",\n                  fontSize: \"11px\",\n                }}\n                ref={newButtonRef}\n                variant=\"contained\"\n                startIcon={<AddIcon />}\n                onClick={() => {\n                  customInputchange(\"add\", \"paActioMode\");\n                }}\n              >\n                New\n              </Button>\n            )}\n            <LoadingButton\n              sx={{\n                height: \"30px\",\n                fontSize: \"11px\",\n              }}\n              color=\"primary\"\n              variant=\"contained\"\n              type=\"submit\"\n              onClick={handleOnSave}\n              disabled={state.paActioMode === \"\"}\n              startIcon={<SaveIcon />}\n              loading={loadingAddNew}\n            >\n              Save\n            </LoadingButton>\n            {state.paActioMode !== \"\" && (\n              <Button\n                sx={{\n                  height: \"30px\",\n                  fontSize: \"11px\",\n                }}\n                ref={cancelButtonRef}\n                variant=\"contained\"\n                startIcon={<CloseIcon />}\n                color=\"error\"\n                onClick={() => {\n                  Swal.fire({\n                    title: \"Are you sure?\",\n                    text: \"You won't be able to revert this!\",\n                    icon: \"warning\",\n                    showCancelButton: true,\n                    confirmButtonColor: \"#3085d6\",\n                    cancelButtonColor: \"#d33\",\n                    confirmButtonText: \"Yes, cancel it!\",\n                  }).then((result) => {\n                    if (result.isConfirmed) {\n                      customInputchange(\"\", \"paActioMode\");\n                      backToDefaultState(initialState, true);\n                    }\n                  });\n                }}\n              >\n                Cancel\n              </Button>\n            )}\n            <LoadingButton\n              loading={loadingDelete}\n              id=\"save-entry-header\"\n              variant=\"contained\"\n              sx={{\n                height: \"30px\",\n                fontSize: \"11px\",\n                backgroundColor: pink[500],\n                \"&:hover\": {\n                  backgroundColor: pink[600],\n                },\n              }}\n              ref={deleteButtonRef}\n              disabled={state.paActioMode !== \"update\"}\n              startIcon={<DeleteIcon />}\n              onClick={() => {\n                codeCondfirmationAlert({\n                  isUpdate: false,\n                  cb: (userCodeConfirmation) => {\n                    mutateDelete({\n                      PolicyAccount: state.PolicyAccount,\n                      PolicyNo: state.PolicyNo,\n                      policyType: state.policyType,\n                      userCodeConfirmation,\n                    });\n                  },\n                });\n              }}\n            >\n              Delete\n            </LoadingButton>\n          </div>\n        </div>\n      </Box>\n      <div style={{ marginBottom: \"5px\", display: \"flex\", gap: \"10px\" }}>\n        {isLoadingModalPaPolicy ? (\n          <LoadingButton loading={isLoadingModalPaPolicy} />\n        ) : (\n          <TextField\n            label=\"Search\"\n            size=\"small\"\n            name=\"search\"\n            value={search}\n            onChange={(e: any) => {\n              setSearch(e.target.value);\n            }}\n            onKeyDown={(e) => {\n              if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n                e.preventDefault();\n                openModalPaPolicy(search);\n              }\n            }}\n        \n            InputProps={{\n              style: { height: \"27px\", fontSize: \"14px\" },\n              endAdornment: (\n                <InputAdornment position=\"end\">\n                  <IconButton\n                    onClick={() => {\n                      openModalPaPolicy(search);\n                    }}\n                    edge=\"end\"\n                  >\n                    <SearchIcon />\n                  </IconButton>\n                </InputAdornment>\n              ),\n            }}\n            type=\"search\"\n            sx={{\n              width: \"300px\",\n              height: \"27px\",\n              \".MuiFormLabel-root\": { fontSize: \"14px\" },\n              \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n            }}\n          />\n        )}\n\n        {isLoadingSubAccount ? (\n          <LoadingButton loading={isLoadingSubAccount} />\n        ) : (\n          <FormControl\n            size=\"small\"\n            sx={(theme) => ({\n              width: \"150px\",\n              \".MuiFormLabel-root\": {\n                fontSize: \"14px\",\n                background: \"white\",\n                zIndex: 99,\n                padding: \"0 3px\",\n              },\n              \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n            })}\n          >\n            <InputLabel id=\"subAccount\">Sub Account</InputLabel>\n            <Select\n              sx={{\n                height: \"27px\",\n                fontSize: \"14px\",\n              }}\n              size=\"small\"\n              labelId=\"subAccount\"\n              label=\"subAccount\"\n              name=\"sub_account\"\n              value={state.sub_account}\n              onChange={(e) => {\n                handleInputChange(e);\n              }}\n            >\n              {(dataSubAccount?.data.sub_account).map(\n                (items: any, idx: number) => {\n                  return (\n                    <MenuItem key={idx} value={items.Acronym.trim()}>\n                      {items.Acronym}\n                    </MenuItem>\n                  );\n                }\n              )}\n            </Select>\n          </FormControl>\n        )}\n      </div>\n      <PAPolicyInformation />\n      {ModalPaPolicy}\n    </PAContext.Provider>\n  );\n}\n","import { useContext, useState } from \"react\";\nimport { useQuery } from \"react-query\";\nimport { AuthContext, User } from \"../components/AuthContext\";\nimport {\n  GridRowSelectionModel,\n  GridCellParams,\n  GridTreeNode,\n} from \"@mui/x-data-grid\";\nimport ModalWithTable from \"../components/ModalWithTable\";\nimport { flushSync } from \"react-dom\";\nimport { AxiosResponse, AxiosInstance } from \"axios\";\nimport { GridRowParams } from \"@mui/x-data-grid\";\ninterface QueryModalTableParamsType {\n  link?: {\n    url: string;\n    queryUrlName: string;\n  };\n  uniqueId: string;\n  queryKey: string;\n  responseDataKey: string;\n  columns: Array<any>;\n  onSelected?: (selectedRowData: Array<any>, data: Array<any>) => void;\n  onRemoveSelected?: (data: Array<any>) => void;\n  onSuccess?: (data: any) => void;\n  searchRef?: React.RefObject<HTMLInputElement>;\n  onCellKeyDown?: any;\n  onCloseFunction?: (search: any) => void;\n  CustomizeAxios?: (\n    myAxios: AxiosInstance,\n    user: User | null,\n    link: QueryModalTableParamsType[\"link\"],\n    search?: string\n  ) => Promise<AxiosResponse<any, any>>;\n  isRowSelectable?: ((params: GridRowParams<any>) => boolean) | undefined;\n  getCellClassName?:\n    | ((params: GridCellParams<any, any, any, GridTreeNode>) => string)\n    | undefined;\n}\n\nasync function CustomizeAxiosFunc(\n  myAxios: AxiosInstance,\n  user: User | null,\n  link: QueryModalTableParamsType[\"link\"],\n  search: string = \"\"\n) {\n  return myAxios.get(`${link?.url}?${link?.queryUrlName}=${search}`, {\n    headers: {\n      Authorization: `Bearer ${user?.accessToken}`,\n    },\n  });\n}\n\nconst useQueryModalTable = ({\n  link,\n  uniqueId,\n  queryKey,\n  responseDataKey,\n  columns,\n  onSelected = () => {},\n  onRemoveSelected = () => {},\n  onSuccess = () => {},\n  searchRef,\n  onCellKeyDown,\n  onCloseFunction = () => {},\n  CustomizeAxios = CustomizeAxiosFunc,\n  isRowSelectable,\n  getCellClassName,\n}: QueryModalTableParamsType) => {\n  const { myAxios, user } = useContext(AuthContext);\n  const [show, setShowModal] = useState(false);\n  const [rows, setRows] = useState<GridRowSelectionModel>([]);\n  async function customizeAxiostool(search: string = \"\") {\n    return await CustomizeAxios(myAxios, user, link, search);\n  }\n  const { isLoading, refetch } = useQuery({\n    queryKey: queryKey,\n    queryFn: async () => await customizeAxiostool(),\n    onSuccess: (res) => {\n      const response = res as any;\n      setRows(response.data[responseDataKey]);\n      onSuccess(response);\n    },\n    refetchOnWindowFocus: false,\n  });\n\n  const openModal = (search: string = \"\") => {\n    flushSync(() => {\n      setShowModal(true);\n    });\n    if (searchRef?.current) {\n      searchRef.current.value = search;\n      customizeAxiostool(search).then((res: any) => {\n        if (!res?.data.success) {\n          return alert(`Error : ${res?.data.message}`);\n        }\n        const response = res as any;\n        setRows(response.data[responseDataKey]);\n        if (searchRef?.current) searchRef.current.focus();\n      });\n    }\n  };\n\n  const closeModal = () => {\n    setShowModal(false);\n    if (onCloseFunction) {\n      onCloseFunction(searchRef?.current?.value);\n    }\n  };\n\n  const ModalComponent = (\n    <ModalWithTable\n      getCellClassName={getCellClassName}\n      searchRef={searchRef}\n      showModal={show}\n      onCloseModal={() => {\n        setShowModal(false);\n        if (onCloseFunction) {\n          onCloseFunction(searchRef?.current?.value);\n        }\n      }}\n      onClickCloseIcon={() => {\n        setShowModal(false);\n        if (onCloseFunction) {\n          onCloseFunction(searchRef?.current?.value);\n        }\n      }}\n      searchOnChange={(e) => {\n        // myAxios\n        //   .get(`${link.url}?${link.queryUrlName}=${e.target.value}`, {\n        //     headers: {\n        //       Authorization: `Bearer ${user?.accessToken}`,\n        //     },\n        //   })\n        //   .then((res: any) => {\n        //     if (!res?.data.success) {\n        //       return alert(`Error : ${res?.data.message}`);\n        //     }\n        //     const response = res as any;\n        //     setRows(response.data[responseDataKey]);\n        //   });\n      }}\n      onSearchKeyEnter={(value) => {\n        customizeAxiostool(value).then((res: any) => {\n          if (!res?.data.success) {\n            return alert(`Error : ${res?.data.message}`);\n          }\n          const response = res as any;\n          setRows(response.data[responseDataKey]);\n        });\n      }}\n      onCellKeyDown={onCellKeyDown}\n      height={300}\n      isLoading={isLoading}\n      queryKey={queryKey}\n      columns={columns}\n      onSelectionChange={(rowSelectionModel, data) => {\n        if (rowSelectionModel.length <= 0) {\n          return onRemoveSelected(data);\n        }\n        const selectedIDs = new Set(rowSelectionModel);\n        const selectedRowData = data.filter((row: any) => {\n          return selectedIDs.has(row[uniqueId].toString());\n        });\n        if (selectedRowData.length <= 0) return;\n        onSelected(selectedRowData, data);\n      }}\n      id={uniqueId}\n      rows={rows}\n      setRows={setRows}\n      isRowSelectable={isRowSelectable}\n    />\n  );\n\n  return {\n    show,\n    rows,\n    isLoading,\n    openModal,\n    closeModal,\n    ModalComponent,\n    refetch,\n  };\n};\n\nexport default useQueryModalTable;\n","import Swal from \"sweetalert2\";\n\nexport function codeCondfirmationAlert(props: {\n  cb: (userCodeConfirmation: string) => void;\n  isUpdate: boolean;\n  isConfirm?: () => void;\n  isDeclined?: () => void;\n  text?: string;\n}) {\n  Swal.fire({\n    title: `Are you sure!`,\n    html: props?.text\n      ? props?.text\n      : props.isUpdate\n      ? `Are you sure you want to make this change?`\n      : \"Are you sure you want to delete this?\",\n    icon: \"warning\",\n    input: \"text\",\n    inputAttributes: {\n      autocapitalize: \"off\",\n    },\n    showCancelButton: true,\n    confirmButtonText: \"Save\",\n    confirmButtonColor: \"green\",\n    showLoaderOnConfirm: true,\n    preConfirm: async (userCodeConfirmation) => {\n      try {\n        props.cb(userCodeConfirmation);\n      } catch (error) {\n        Swal.showValidationMessage(`\n            Request failed: ${error}\n          `);\n      }\n    },\n    allowOutsideClick: () => !Swal.isLoading(),\n  }).then((result) => {\n    if (result.isConfirmed) {\n      if (props.isConfirm) {\n        return props.isConfirm();\n      }\n    }\n    if (props.isDeclined) {\n      props.isDeclined();\n    }\n  });\n}\n\nexport function saveCondfirmationAlert(props: {\n  isConfirm?: () => void;\n  isDeclined?: () => void;\n  text?: string;\n}) {\n  Swal.fire({\n    title: \"Are you sure?\",\n    text: props?.text ? props?.text : \"Do you want to proceed with saving?\",\n    icon: \"warning\",\n    showCancelButton: true,\n    confirmButtonColor: \"#3085d6\",\n    cancelButtonColor: \"#d33\",\n    confirmButtonText: \"Yes, save it!\",\n  }).then((result) => {\n    if (result.isConfirmed) {\n      if (props.isConfirm) {\n        return props.isConfirm();\n      }\n    }\n    if (props.isDeclined) {\n      props.isDeclined();\n    }\n  });\n}\n","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\"\n}), 'Add');\nexports.default = _default;","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\"\n}), 'Delete');\nexports.default = _default;","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)([/*#__PURE__*/(0, _jsxRuntime.jsx)(\"circle\", {\n  cx: \"10\",\n  cy: \"8\",\n  r: \"4\"\n}, \"0\"), /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M10.35 14.01C7.62 13.91 2 15.27 2 18v2h9.54c-2.47-2.76-1.23-5.89-1.19-5.99zm9.08 4.01c.36-.59.57-1.28.57-2.02 0-2.21-1.79-4-4-4s-4 1.79-4 4 1.79 4 4 4c.74 0 1.43-.22 2.02-.57L20.59 22 22 20.59l-2.57-2.57zM16 18c-1.1 0-2-.9-2-2s.9-2 2-2 2 .9 2 2-.9 2-2 2z\"\n}, \"1\")], 'PersonSearch');\nexports.default = _default;","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M17 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V7l-4-4zm-5 16c-1.66 0-3-1.34-3-3s1.34-3 3-3 3 1.34 3 3-1.34 3-3 3zm3-10H5V5h10v4z\"\n}), 'Save');\nexports.default = _default;","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z\"\n}), 'Search');\nexports.default = _default;","const pink = {\n  50: '#fce4ec',\n  100: '#f8bbd0',\n  200: '#f48fb1',\n  300: '#f06292',\n  400: '#ec407a',\n  500: '#e91e63',\n  600: '#d81b60',\n  700: '#c2185b',\n  800: '#ad1457',\n  900: '#880e4f',\n  A100: '#ff80ab',\n  A200: '#ff4081',\n  A400: '#f50057',\n  A700: '#c51162'\n};\nexport default pink;"],"names":["CustomDatePicker","_ref","label","name","onChange","value","onKeyDown","inputRef","datePickerRef","fullWidth","textField","_ref$minWidth","minWidth","rest","_objectWithoutProperties","_excluded","_jsx","LocalizationProvider","dateAdapter","AdapterDateFns","children","DatePicker","_objectSpread","floatingLabelStyle","color","ref","slotProps","size","InputLabelProps","sx","fieldset","borderColor","fontSize","top","style","position","left","transform","width","bgcolor","boxShadow","p","heigth","ModalWithTable","height","isLoading","columns","queryKey","onSelectionChange","rows","setRows","id","onCloseModal","showModal","onClickCloseIcon","searchOnChange","_ref$title","title","searchRef","_ref$onSearchKeyEnter","onCellKeyDown","onSearchKeyEnter","isRowSelectable","getCellClassName","mainId","generateRandomClass","Modal","open","onClose","_jsxs","Box","Typography","variant","component","mb","TextField","InputProps","endAdornment","InputAdornment","IconButton","onClick","_searchRef$current","current","edge","SearchIcon","type","e","_searchRef$current2","code","preventDefault","keyBoardSelectionTable","marginBottom","className","concat","Table","isSingleSelection","isRowFreeze","dataSelection","selection","data","table_id","right","CloseIcon","Math","floor","random","el","_rows$","document","querySelectorAll","classList","add","firstRowParent","querySelector","firstInput","focus","event","MouseEvent","bubbles","cancelable","view","window","dispatchEvent","addEventListener","es","key","remove","keyBoardUpDown","forEach","idx","_rows$idx","_rows","_rows$idx2","_rows2","length","NumericFormatCustom","React","props","other","NumericFormat","getInputRef","onValueChange","values","target","allowNegative","thousandSeparator","valueIsNumericString","TableContext","createContext","rowSelectionModel","footerChildren","footerPaginationPosition","showFooterSelectedCount","forwardRef","_ref$CustomFooterComp","CustomFooterComponent","DefaultooterComponent","_ref$checkboxSelectio","checkboxSelection","_ref$footerChildren","_ref$footerPagination","_ref$showFooterSelect","_useState","useState","_useState2","_slicedToArray","selectedRows","setSelectedRows","useImperativeHandle","removeSelection","getSelectedRows","filter","item","includes","freezeArray","Provider","DataGrid","slots","loadingOverlay","LinearProgress","footer","initialState","pagination","paginationModel","pageSize","loading","getRowId","row","col","hide","showCellVerticalBorder","showColumnVerticalBorder","rowHeight","columnHeaderHeight","pageSizeOptions","fill","background","padding","display","fontWeight","onRowSelectionModelChange","selectionSet","Set","s","has","__","rowNode","_toConsumableArray","disableVirtualization","Pagination","_ref2","page","onPageChange","apiRef","useGridApiContext","pageCount","useGridSelector","gridPageCountSelector","MuiPagination","count","newPage","CustomPagination","GridPagination","ActionsComponent","_useContext","useContext","columnGap","justifyContent","px","alignItems","flexDirection","flex","PAPolicyInformation","_queryFn","PAContext","state","handleInputChange","customInputchange","myAxios","user","isAddOrEditMode","keySave","computation","dispatch","searchClientInputRef","useRef","searchAgentInputRef","dateFrom","dateToDateRef","dateIssuedDateRef","_useQueryModalTable","useQueryModalTable","link","url","queryUrlName","field","headerName","uniqueId","responseDataKey","onSelected","selectedRowData","entry_client_id","fullname","address","sale_officer","closeCliendIDsModal","ModalClientIDs","ModalComponent","openCliendIDsModal","openModal","isLoadingClientIdsModal","closeModal","_useQueryModalTable2","entry_agent_id","closeModalAgentId","ModalAgentId","openModalAgentId","isLoadingModalAgentId","_useQuery","useQuery","queryFn","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","get","headers","Authorization","accessToken","abrupt","sent","stop","apply","arguments","policyAccount","isLoadingPolicyAccount","onKeyDownComputation","gap","boxSizing","border","borderRadius","LoadingButton","FormControl","disabled","zIndex","InputLabel","htmlFor","OutlinedInput","client_id","PersonSearchIcon","client_name","readOnly","multiline","client_address","flexWrap","agent_id","agent_name","marginTop","flexGrow","Select","labelId","PolicyAccount","policyAccounts","map","items","MenuItem","Account","paActioMode","PolicyNo","gridArea","newDate","Date","newDatePlusOneYear","addYears","DateFrom","timeout","setTimeout","_dateFrom$current","_dateFrom$current$que","click","clearTimeout","DateTo","_dateToDateRef$curren","_dateToDateRef$curren2","DateIssued","_dateIssuedDateRef$cu","_dateIssuedDateRef$cu2","required","sumInsured","placeholder","inputComponent","onBlur","parseFloat","toFixed","propertyInsured","rowGap","Button","netPremium","vat","docStamp","localGovTaxPercent","localGovTax","Divider","totalDue","sub_account","agent_com","reducer","action","_defineProperty","queryKeySearchPolicy","queryKeySearchClientEntry","queryKeySearchAgentEntry","queryKeyNeedData","queryKeyAddOrUpdatePolicy","queryKeyDeletePolicy","PAPolicy","_mutationFn","_onSuccess","_mutationFn2","_onSuccess2","_updateQueryByKey","_useReducer","useReducer","_useReducer2","AuthContext","clientRows","setClientRows","_useState3","_useState4","agentRows","setAgentRows","_useState5","_useState6","search","setSearch","_useState7","_useState8","Mortgagee","setMortgagee","searchPaPolicyInputRef","newButtonRef","cancelButtonRef","deleteButtonRef","queryClient","useQueryClient","dataSubAccount","isLoadingSubAccount","onSearchSelected","closeModalPaPolicy","ModalPaPolicy","openModalPaPolicy","isLoadingModalPaPolicy","_useMutation","useMutation","mutationKey","mutationFn","_x","_callee2","variables","_context2","post","onSuccess","_x2","_callee3","res","_context3","success","updateQueryByKey","backToDefaultState","Swal","icon","message","showConfirmButton","timer","mutate","loadingAddNew","_useMutation2","_x3","_callee4","_context4","_x4","_callee5","_context5","mutateDelete","loadingDelete","setDefaultValueForNumber","useCallback","handleOnSave","undefined","codeCondfirmationAlert","isUpdate","cb","userCodeConfirmation","saveCondfirmationAlert","isConfirm","useEffect","handleKeyDown","_newButtonRef$current","_cancelButtonRef$curr","_deleteButtonRef$curr","removeEventListener","_e$target","LOGPercentage","NewTotalPremium","json","resetAll","form_type","form_action","prem_text_one","prem_text_two","Object","entries","_callee6","_context6","Promise","all","invalidateQueries","_selectedRowData$","PeriodFrom","PeriodTo","Location","IDNo","SubAcct","TotalPremium","AgentID","AgentCom","client_fullname","agent_fullname","mode","theme","breakpoints","down","startIcon","AddIcon","SaveIcon","text","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","then","result","isConfirmed","backgroundColor","pink","DeleteIcon","policyType","Acronym","trim","CustomizeAxiosFunc","_CustomizeAxiosFunc","_args","_customizeAxiostool","_ref$onSelected","_ref$onRemoveSelected","onRemoveSelected","_ref$onSuccess","_ref$onCloseFunction","onCloseFunction","_ref$CustomizeAxios","CustomizeAxios","show","setShowModal","customizeAxiostool","_args2","response","refetchOnWindowFocus","refetch","flushSync","alert","_searchRef$current3","selectedIDs","toString","_preConfirm","html","input","inputAttributes","autocapitalize","showLoaderOnConfirm","preConfirm","error","allowOutsideClick","isDeclined","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d","cx","cy","r","A100","A200","A400","A700"],"sourceRoot":""}