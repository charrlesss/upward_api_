{"version":3,"file":"static/js/7470.54de4e39.chunk.js","mappings":"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","sources":["components/Helmet.tsx","lib/validateDate.ts","components/UpwardFields.tsx","components/UpwardTable.tsx","feautures/Admin/Reference/ChartAccount.tsx","lib/confirmationAlert.ts","../node_modules/@babel/runtime/helpers/esm/objectSpread2.js"],"sourcesContent":["\r\nimport { Helmet } from \"react-helmet\";\r\n\r\nconst PageHelmet = ({ title = '' }: { title: string }) => {\r\n    const imgUrl = process.env.REACT_APP_IMAGE_URL;\r\n    const department = process.env.REACT_APP_DEPARTMENT\r\n    return (\r\n        <Helmet>\r\n            <title>{`${department} - ${title}`}</title>\r\n            <link rel=\"icon\" type=\"image/png\" href={`${imgUrl}/logo.png`} />\r\n        </Helmet>\r\n    );\r\n};\r\n\r\nexport default PageHelmet;","export function isValidDate(dateString:string) {\r\n    // Ensure the date is in the correct format: YYYY-MM-DD\r\n     const regex = /^\\d{4}-\\d{2}-\\d{2}$/;\r\n     if (!regex.test(dateString)) {\r\n         return false;\r\n     }\r\n \r\n     // Extract the year, month, and day\r\n     const [year, month, day] = dateString.split(\"-\");\r\n \r\n     // Ensure year is a valid four-digit number and within a reasonable range\r\n     const parsedYear = parseInt(year);\r\n     if (parsedYear < 1000 || parsedYear > 2040) {\r\n         return false;\r\n     }\r\n \r\n     const date = new Date(dateString);\r\n     // Ensure the created date matches the parts we input, adjusting for overflow\r\n     return date.getFullYear() === parsedYear &&\r\n            date.getMonth() + 1 === parseInt(month) &&\r\n            date.getDate() === parseInt(day);\r\n }","import {\n  HtmlHTMLAttributes,\n  InputHTMLAttributes,\n  useId,\n  ReactNode,\n  useState,\n  LegacyRef,\n  TextareaHTMLAttributes,\n  CSSProperties,\n  forwardRef,\n  useImperativeHandle,\n} from \"react\";\nimport \"../style/design.css\";\nimport { isValidDate } from \"../lib/validateDate\";\nimport { format } from \"date-fns\";\nimport { wait } from \"../lib/wait\";\n\ninterface TextInputProps {\n  input: InputHTMLAttributes<HTMLInputElement>;\n  label: HtmlHTMLAttributes<HTMLLabelElement>;\n  inputRef?: React.RefObject<HTMLInputElement>;\n  icon?: ReactNode; // New prop for the icon\n  iconPosition?: \"start\" | \"end\"; // New prop to choose icon position\n  onIconClick?: React.MouseEventHandler<HTMLDivElement> | undefined;\n  disableIcon?: boolean;\n  containerStyle?: CSSProperties;\n}\n\ninterface TextAreaPrps {\n  textarea: TextareaHTMLAttributes<HTMLTextAreaElement>;\n  label: HtmlHTMLAttributes<HTMLLabelElement>;\n  _inputRef: LegacyRef<HTMLTextAreaElement>;\n  icon?: ReactNode; // New prop for the icon\n  iconPosition?: \"start\" | \"end\"; // New prop to choose icon position\n  onIconClick?: React.MouseEventHandler<HTMLDivElement> | undefined;\n  disableIcon?: boolean;\n  containerStyle?: CSSProperties;\n}\n\ninterface TextFormatedInputProps extends TextInputProps {\n  onChange?: React.ChangeEventHandler<HTMLInputElement> | undefined;\n  onBlur?: React.ChangeEventHandler<HTMLInputElement> | undefined;\n}\nexport function TextFormatedInput({\n  input,\n  label,\n  inputRef,\n  icon,\n  iconPosition = \"end\", // Default position is 'end'\n  disableIcon = false,\n  onIconClick = (e) => {},\n  onChange = (e) => {},\n  onBlur = (e) => {},\n  containerStyle,\n}: TextFormatedInputProps) {\n  // const [inputValue, setInputValue] = useState('');\n  const id = useId();\n\n  // Helper function to format numbers with commas\n  const formatNumber = (value: string) => {\n    if (!value) return value;\n\n    // Split the value into integer and decimal parts\n    const parts = value.split(\".\");\n\n    // Add commas to the integer part only\n    parts[0] = parts[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n\n    // Join the integer and decimal parts if decimal exists\n    return parts.join(\".\");\n  };\n\n  // Helper function to remove commas\n  const unformatNumber = (value: string) => {\n    return value.replace(/,/g, \"\");\n  };\n\n  // Function to ensure two decimal places\n  const ensureTwoDecimals = (value: string) => {\n    // If the value has no decimal part, append '.00'\n    if (!value.includes(\".\")) {\n      if (value === \"\") {\n        return \"0.00\";\n      } else {\n        return value + \".00\";\n      }\n    }\n\n    // If the value has one decimal place, append '0'\n    const parts = value.split(\".\");\n    if (parts[1].length === 1) {\n      return value + \"0\";\n    }\n\n    // If it already has two decimal places, return as is\n    return value;\n  };\n\n  const handleChange = (e: any) => {\n    let value = e.target.value;\n\n    // Remove commas for processing\n    value = unformatNumber(value);\n\n    // Allow only numbers, commas, and one decimal point\n    const regex = /^-?\\d+(,\\d{3})*(\\.\\d*)?$/;\n\n    // Remove commas for processing\n    value = unformatNumber(value);\n\n    // Check if the value is valid\n    if (value === \"\" || regex.test(value)) {\n      // Set the formatted value back in the input field\n      //setInputValue(formatNumber(value));\n      e.target.value = formatNumber(value);\n    } else {\n      const numbers = value.match(/\\d+/g);\n      if (numbers) {\n        const newV = numbers.join(\"\");\n        e.target.value = formatNumber(newV);\n      } else {\n        e.target.value = \"0\";\n      }\n    }\n  };\n\n  const handleBlur = (e: any) => {\n    let value = unformatNumber(e.target.value);\n\n    // Ensure the value has two decimal places\n    value = ensureTwoDecimals(value);\n\n    // Set the value with commas and .00 (if needed)\n    // setInputValue(formatNumber(value));\n    e.target.value = formatNumber(value);\n  };\n\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        alignItems: \"center\",\n        position: \"relative\",\n        ...containerStyle, // Enable absolute positioning for icon\n      }}\n    >\n      <label {...label} htmlFor={id}>\n        {label.title}\n      </label>\n      {icon && iconPosition === \"start\" && (\n        <div style={{ position: \"absolute\", left: \"8px\", zIndex: 1 }}>\n          {icon}\n        </div>\n      )}\n      <input\n        ref={inputRef}\n        id={id}\n        {...input}\n        type=\"text\"\n        style={{\n          height: \"100%\",\n          textAlign: \"right\",\n          ...input.style,\n        }}\n        onChange={(e) => {\n          handleChange(e);\n          onChange(e);\n        }}\n        onBlur={(e) => {\n          handleBlur(e);\n          onBlur(e);\n        }} // Add .00 on blur\n        onFocus={(e)=>{\n          e.currentTarget.select()\n          if(input && input.onFocus)\n          input.onFocus(e)\n        }}\n      />\n      {icon && iconPosition === \"end\" && (\n        <div\n          onClick={onIconClick}\n          style={{\n            position: \"absolute\",\n            right: \"2px\",\n            top: \"50%\",\n            transform: \"translateY(-50%)\",\n            zIndex: 1,\n            cursor: disableIcon ? \"none\" : \"pointer\",\n            display: \"flex\",\n            alignItems: \"center\",\n            justifyContent: \"center\",\n            background: \"white\",\n            pointerEvents: disableIcon ? \"none\" : \"auto\",\n          }}\n        >\n          {icon}\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport function TextInput({\n  input,\n  label,\n  inputRef,\n  icon,\n  iconPosition = \"end\", // Default position is 'end'\n  disableIcon = false,\n  containerStyle,\n  onIconClick = (e) => {},\n}: TextInputProps) {\n  const id = useId();\n\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        alignItems: \"center\",\n        position: \"relative\",\n        ...containerStyle,\n      }}\n    >\n      <label {...label} htmlFor={id}>\n        {label.title}\n      </label>\n      {icon && iconPosition === \"start\" && (\n        <div style={{ position: \"absolute\", left: \"8px\", zIndex: 1 }}>\n          {icon}\n        </div>\n      )}\n      <input\n        ref={inputRef}\n        id={id}\n        {...input}\n        onBlur={(e) => {\n          if (input.type === \"month\") {\n            if(!isValidDate(`${e.currentTarget.value}-01`)){\n              alert(`Invalid ${label.title?.replace(/:/g, \"\").trim()}!, Resetting date.`)\n              e.currentTarget.value = format(new Date(),'yyyy-MM')\n              wait(100).then(()=>{\n                inputRef?.current?.focus()\n              })\n              return\n            }\n          }\n          if (input.type === \"date\") {\n            if(!isValidDate(e.currentTarget.value)){\n                 alert(`Invalid ${label.title?.replace(/:/g, \"\").trim()}!, Resetting date.`)\n                  e.currentTarget.value = format(new Date(),'yyyy-MM-dd')\n                  wait(100).then(()=>{\n                    inputRef?.current?.focus()\n                  })\n                  return\n            }\n          }\n          if (input && input.onBlur) input.onBlur(e);\n        }}\n        style={{\n          height: \"100%\",\n          ...input.style,\n        }}\n      />\n      {icon && iconPosition === \"end\" && (\n        <div\n          onClick={onIconClick}\n          style={{\n            position: \"absolute\",\n            right: \"2px\",\n            top: \"50%\",\n            transform: \"translateY(-50%)\",\n            zIndex: 1,\n            cursor: disableIcon ? \"none\" : \"pointer\",\n            display: \"flex\",\n            alignItems: \"center\",\n            justifyContent: \"center\",\n            background: \"white\",\n            pointerEvents: disableIcon ? \"none\" : \"auto\",\n          }}\n        >\n          {icon}\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport function TextAreaInput({\n  textarea,\n  label,\n  _inputRef,\n  icon,\n  iconPosition = \"end\", // Default position is 'end'\n  disableIcon = false,\n  onIconClick = (e) => {},\n  containerStyle,\n}: TextAreaPrps) {\n  const id = useId();\n\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        alignItems: \"center\",\n        position: \"relative\",\n        ...containerStyle, // Enable absolute positioning for icon\n      }}\n    >\n      <label {...label} htmlFor={id}>\n        {label.title}\n      </label>\n      {icon && iconPosition === \"start\" && (\n        <div style={{ position: \"absolute\", left: \"8px\", zIndex: 1 }}>\n          {icon}\n        </div>\n      )}\n      <textarea\n        ref={_inputRef}\n        id={id}\n        {...textarea}\n        style={{\n          height: \"100%\",\n          ...textarea.style,\n        }}\n      />\n      {icon && iconPosition === \"end\" && (\n        <div\n          onClick={onIconClick}\n          style={{\n            position: \"absolute\",\n            right: \"2px\",\n            top: \"50%\",\n            transform: \"translateY(-50%)\",\n            zIndex: 1,\n            cursor: disableIcon ? \"none\" : \"pointer\",\n            display: \"flex\",\n            alignItems: \"center\",\n            justifyContent: \"center\",\n            background: \"white\",\n            pointerEvents: disableIcon ? \"none\" : \"auto\",\n          }}\n        >\n          {icon}\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport const SelectInput = forwardRef(\n  (\n    {\n      select,\n      label,\n      selectRef,\n      datasource = [],\n      values = \"\",\n      display = \"\",\n      containerStyle,\n    }: {\n      selectRef?: React.RefObject<HTMLSelectElement>;\n      labelRef?: React.RefObject<HTMLLabelElement>;\n      select: InputHTMLAttributes<HTMLSelectElement>;\n      label: HtmlHTMLAttributes<HTMLLabelElement>;\n      datasource: Array<any>;\n      values: string;\n      display: string;\n      containerStyle?: React.CSSProperties | undefined;\n    },\n    ref: any\n  ) => {\n    const [_datasource, _setDataSource] = useState(datasource);\n    const id = useId();\n\n    useImperativeHandle(ref, () => ({\n      setDataSource: (_dataSource: any) => {\n        _setDataSource(_dataSource);\n      },\n      getDataSource: () => {\n        return _datasource;\n      },\n    }));\n\n    return (\n      <div\n        style={{\n          display: \"flex\",\n          height: \"18px\",\n          alignItems: \"center\",\n          ...containerStyle,\n        }}\n      >\n        <label {...label} htmlFor={id}>\n          {label.title}\n        </label>\n        <select\n          {...select}\n          ref={selectRef}\n          className={`select ${select.className}`}\n          style={{\n            height: \"18px\",\n            ...select.style,\n          }}\n        >\n          {_datasource.map((itm, idx) => {\n            return (\n              <option key={idx} value={itm[values]}>\n                {itm[display]}\n              </option>\n            );\n          })}\n        </select>\n      </div>\n    );\n  }\n);\n\nexport function ButtonField({\n  buttonRetRef,\n  button,\n  tooltipText = \"\",\n  children,\n  disabled = false,\n}: {\n  buttonRetRef?: React.RefObject<HTMLButtonElement>;\n  button: HtmlHTMLAttributes<HTMLButtonElement>;\n  tooltipText: string;\n  children: React.ReactNode;\n  disabled?: boolean;\n}) {\n  return (\n    <div className=\"tooltip\">\n      <button\n        disabled={disabled}\n        {...button}\n        ref={buttonRetRef}\n        style={{\n          ...button.style,\n          background: !disabled ? \"transparent\" : \"#f1f1f1\",\n        }}\n        className=\"tooltip-button\"\n      >\n        {children}\n      </button>\n      {!disabled && <span className=\"tooltip-text\">{tooltipText}</span>}\n    </div>\n  );\n}\n","import React, {\n  useState,\n  useRef,\n  useEffect,\n  forwardRef,\n  useImperativeHandle,\n} from \"react\";\nimport \"../style/datagridview.css\";\nimport { Pagination } from \"@mui/material\";\ninterface UpwardTablePropsType {\n  rows: Array<any>;\n  column: Array<any>;\n  width: number;\n  height: number;\n  dataReadOnly: boolean;\n  onSelectionChange?: (row: Array<any>, rowIndex: number) => void;\n  onKeyDown?: (row: Array<any>, key: string, rowIndex: number) => void;\n  isMultipleSelect?: boolean;\n  freeze?: boolean;\n  inputsearchselector?: string;\n  isRowSelectable?: boolean;\n  unSelectable?: (row: any) => boolean;\n  isLoading?: boolean,\n  onRightClick?: (rowSelected: any, event: any) => any\n}\nconst UpwardTable = forwardRef(\n  (\n    {\n      rows,\n      column,\n      width,\n      height,\n      dataReadOnly,\n      onSelectionChange = () => { },\n      isMultipleSelect = false,\n      freeze = false,\n      onKeyDown,\n      inputsearchselector = \".search-input-up-on-key-down\",\n      isRowSelectable = true,\n      unSelectable = () => false,\n      isLoading,\n      onRightClick\n    }: UpwardTablePropsType,\n    UpwardTableRef\n  ) => {\n    const [pages, setPages] = useState<Array<any>>([])\n    const [pageNumber, setPageNumber] = useState(0)\n    const onSelectionChangeRef = useRef(onSelectionChange);\n    const onKeyDownRef = useRef(onKeyDown);\n    const [columns, setColumns] = useState(column.filter((itm) => !itm.hide));\n    const [hoveredColumn, setHoveredColumn] = useState(null);\n    const [selectedRows, setSelectedRows] = useState<Array<number>>([0]);\n    const [lastSelectedRowIndex, setLastSelectedRowIndex] = useState(0);\n    const [selectedItems, setSelectedItems] = useState<Array<number>>([]);\n    const divRef = useRef<HTMLDivElement>(null);\n    const [_clickTimeout, _setClickTimeout] = useState(null);\n\n\n    useEffect(() => {\n      const _pages = formatArrayIntoChunks(rows, 100)\n      setPages(_pages)\n    }, [rows])\n\n    const startResize = (index: any, e: any) => {\n      e.preventDefault();\n      e.stopPropagation();\n\n      const startX = e.clientX;\n      const startWidth = columns[index].width;\n\n      const doDrag = (moveEvent: any) => {\n        const newWidth = startWidth + (moveEvent.clientX - startX);\n        const updatedColumns = [...columns];\n        updatedColumns[index].width = newWidth > 50 ? newWidth : 50; // Set minimum column width\n        setColumns(updatedColumns);\n      };\n\n      const stopDrag = () => {\n        document.removeEventListener(\"mousemove\", doDrag);\n        document.removeEventListener(\"mouseup\", stopDrag);\n      };\n\n      document.addEventListener(\"mousemove\", doDrag);\n      document.addEventListener(\"mouseup\", stopDrag);\n    };\n    const handleMouseEnter = (index: any) => {\n      setHoveredColumn(index); // Set the hovered column index\n    };\n    const handleMouseLeave = () => {\n      setHoveredColumn(null); // Reset hovered column index\n    };\n    const handleRowClick = (\n      rowIndex: any,\n      event: React.MouseEvent<HTMLDivElement, MouseEvent>\n    ) => {\n      function getIndexAndData(selectedRowData: Array<any>) {\n        const filterSelectrowData = selectedRowData.map((d, idx) => {\n          if (!unSelectable(d)) {\n            return { idx, data: d };\n          }\n          return null;\n        });\n        const removeNullValue = filterSelectrowData.filter((d) => d !== null);\n        const data = removeNullValue.map((itm: any) => itm.data);\n        const newSelectedRowsFiltered = removeNullValue.map(\n          (itm: any) => itm.idx\n        );\n        return { newSelectedRowsFiltered, data };\n      }\n\n      if (!isMultipleSelect) {\n        // Single selection mode\n        setSelectedRows([rowIndex]);\n      } else {\n        // Multiple selection mode\n        if (event.shiftKey && lastSelectedRowIndex !== null) {\n          // Shift + Click: Select range between last clicked row and current clicked row\n          const rangeStart = Math.min(lastSelectedRowIndex, rowIndex);\n          const rangeEnd = Math.max(lastSelectedRowIndex, rowIndex);\n          const newSelectedRows: Array<number> = [];\n          for (let i = rangeStart; i <= rangeEnd; i++) {\n            if (!selectedRows.includes(i)) {\n              newSelectedRows.push(i);\n            }\n          }\n\n          let selectedItemsParams: Array<number> = [\n            ...selectedItems,\n            ...newSelectedRows,\n          ];\n\n          setSelectedRows([...selectedRows, ...newSelectedRows]);\n          const selectedRowData = rows.filter((d, idx) =>\n            selectedItemsParams.includes(idx)\n          );\n          const { newSelectedRowsFiltered } =\n            getIndexAndData(selectedRowData);\n\n          setSelectedItems(newSelectedRowsFiltered);\n          // onSelectionChangeRef.current(data, rowIndex);\n        } else if (event.ctrlKey || event.metaKey) {\n          // Ctrl (or Cmd on macOS) + Click: Toggle row selection\n          if (selectedRows.includes(rowIndex) && !freeze) {\n            setSelectedRows(selectedRows.filter((i) => i !== rowIndex));\n            setSelectedItems((d) => {\n              d = d.filter((i) => i !== rowIndex);\n              return d;\n            });\n            let selectedItemsParams: Array<number> = selectedItems.filter(\n              (i) => i !== rowIndex\n            );\n\n            setSelectedItems(selectedItemsParams);\n            // onSelectionChangeRef.current(selectedRowData, rowIndex);\n          } else {\n            setSelectedRows([...selectedRows, rowIndex]);\n            setSelectedItems((d) => {\n              d.push(rowIndex);\n              return d;\n            });\n            let selectedItemsParams: Array<number> = [\n              ...selectedItems,\n              rowIndex,\n            ];\n\n            setSelectedItems(selectedItemsParams);\n            // onSelectionChangeRef.current(selectedRowData, rowIndex);\n          }\n        } else {\n          // Regular click in multiple selection mode: Single click to select a row\n          setSelectedRows([rowIndex]);\n        }\n      }\n      setLastSelectedRowIndex(rowIndex); // Update the last selected index\n    };\n    const handleRowDoubleClick = (\n      rowIndex: any,\n      event: React.MouseEvent<HTMLDivElement, MouseEvent>\n    ) => {\n      const row = rows[rowIndex];\n      if (unSelectable(row)) return;\n      if (!isRowSelectable) return;\n\n\n      let selectedItemsParams: Array<number> = [];\n      if (isMultipleSelect) {\n        selectedItemsParams = [...selectedItems, ...selectedRows];\n      } else {\n        selectedItemsParams = [rowIndex];\n      }\n\n\n      if (selectedItems.includes(rowIndex) && !freeze) {\n        selectedItemsParams = selectedItems.filter((i) => i !== rowIndex);\n        setSelectedItems(selectedItemsParams);\n        onSelectionChangeRef.current([], rowIndex);\n        return;\n      }\n\n      setSelectedItems(selectedItemsParams);\n      onSelectionChangeRef.current([row], rowIndex);\n    };\n    const handleKeyDown = (e: any) => {\n\n      if (e.key === \"ArrowDown\") {\n        e.preventDefault();\n        setSelectedRows((prevIndex: any) => {\n          if (prevIndex[prevIndex.length - 1] === null) return [0];\n          if (prevIndex[prevIndex.length - 1] >= rows.length - 1) {\n            return [rows.length - 1];\n          }\n          const newPrevIndex = prevIndex[prevIndex.length - 1] + 1;\n          const row = document.querySelector(`.row-${newPrevIndex}`);\n          row?.querySelector(\"input\")?.focus();\n\n          row?.scrollIntoView({ block: \"end\", behavior: \"smooth\" });\n          return [newPrevIndex];\n        });\n      } else if (e.key === \"ArrowUp\") {\n        e.preventDefault();\n\n        if (selectedRows[selectedRows.length - 1] === 0) {\n          const input = document.querySelector(\n            inputsearchselector\n          ) as HTMLInputElement;\n          if (input && input.tagName === \"INPUT\") {\n            input?.focus();\n          } else if (input && input.tagName === \"DIV\") {\n            const divInput = document.querySelector(\n              `${inputsearchselector} input`\n            ) as HTMLInputElement;\n\n            divInput?.focus();\n          }\n        }\n\n        setSelectedRows((prevIndex: any) => {\n          if (prevIndex[prevIndex.length - 1] === 0) return [0];\n          const newPrevIndex = prevIndex[prevIndex.length - 1] - 1;\n          const row = document.querySelector(`.row-${newPrevIndex}`);\n\n          row?.scrollIntoView({ block: \"end\", behavior: \"smooth\" });\n          row?.querySelector(\"input\")?.focus();\n          return [newPrevIndex];\n        });\n      }\n\n    };\n    const handleRowKeyDown = (e: any) => {\n      e.stopPropagation()\n\n      if (e.key === \"Enter\" || e.key === \"NumpadEnter\") {\n        e.preventDefault();\n        if (!isRowSelectable) return;\n\n        let selectedItemsParams: Array<number> = [];\n        const rowIndex = selectedRows[selectedRows.length - 1];\n        if (isMultipleSelect) {\n          selectedItemsParams = [...selectedItems, ...selectedRows];\n        } else {\n          selectedItemsParams = [rowIndex];\n        }\n        const row = rows[selectedItemsParams[selectedItemsParams.length - 1]];\n        if (unSelectable(row)) {\n          return;\n        }\n\n        if (selectedItems.includes(rowIndex) && !freeze) {\n          selectedItemsParams = selectedItems.filter((i) => i !== rowIndex);\n          setSelectedItems(selectedItemsParams);\n          onSelectionChangeRef.current([], rowIndex);\n          return;\n        }\n\n        setSelectedItems(selectedItemsParams);\n        onSelectionChangeRef.current([row], rowIndex);\n      } else if (e.key === \"Delete\" || e.key === \"Backspace\") {\n        if (!isRowSelectable) return;\n        const rowIndex = selectedRows[selectedRows.length - 1];\n\n        const selectedRowData = rows.filter((d, idx) =>\n          selectedRows.includes(idx)\n        );\n\n        if (onKeyDownRef?.current) {\n          onKeyDownRef?.current(selectedRowData, e.key, rowIndex);\n        }\n      }\n    }\n    useImperativeHandle(UpwardTableRef, () => ({\n      resetTableSelected: () => {\n        setSelectedRows([0]);\n        setLastSelectedRowIndex(0);\n        setSelectedItems([]);\n        if (rows.length > 0) {\n          const row = document.querySelector(`.row-${0}`);\n          row?.scrollIntoView({ block: \"end\", behavior: \"smooth\" });\n        }\n      },\n      getSelectedIndex: () => {\n        return selectedItems[0];\n      },\n      getSelectedRows: () => {\n        return rows.filter((d, idx) => selectedItems.includes(idx));\n      },\n      getFirstColumn: () => {\n        return rows.filter((d, idx) => selectedItems.includes(idx));\n      },\n      getParentElement: () => {\n        return divRef.current\n      },\n      getSelectedRowsOnClick: () => {\n        return selectedRows[0];\n      },\n      setSelectRows: (indx: number) => {\n        return setSelectedItems([indx])\n      },\n    }));\n\n    const handleRightClick = (event: any, rowIndex: number) => {\n      event.preventDefault();\n      const rowSelected = rows[rowIndex]\n      if (onRightClick) {\n        onRightClick(rowSelected, event)\n      }\n    };\n\n\n\n    return (\n      <div\n        style={{\n          display: \"flex\",\n          justifyContent: \"center\",\n        }}\n        onKeyDown={handleKeyDown}\n      >\n        <div>\n          <div className=\"table-frame-color\">\n            <div\n              style={{\n                display: \"flex\",\n                flexDirection: \"column\",\n                width: `${width - 10}px        `,\n                height: `${height - 135}px`,\n                minHeight: \"270px\"\n              }}\n              className=\"table-frame\"\n            >\n              <div className=\"table-panel\">\n                <div ref={divRef} className={`grid-container `} tabIndex={-1}>\n                  <div\n                    className=\"grid-row grid-header\"\n                    style={{\n                      position: \"sticky\",\n                      zIndex: \"10\",\n                      top: \"-1px\",\n                      background: \"white\",\n                    }}\n                  >\n                    {columns.map((col: any, index: number) => (\n                      <div\n                        key={index}\n                        className={`grid-cell header-cell ${hoveredColumn === index ? `highlight-column` : \"\"\n                          }`} // Add the class if hovered\n                        style={{ width: col.width, height: \"20px\", }}\n                      >\n                        <input\n                          style={{ fontWeight: \"bold\" }}\n                          defaultValue={col.headerName}\n                          readOnly\n                          onChange={(e) => { }}\n                        />\n                        <div\n                          className=\"resize-handle\"\n                          onMouseDown={(e) => startResize(index, e)}\n                          onMouseEnter={(e) => {\n                            e.preventDefault();\n                            handleMouseEnter(index);\n                          }} // On hover\n                          onMouseLeave={(e) => {\n                            e.preventDefault();\n                            handleMouseLeave();\n                          }} // On mouse leave\n                        />\n                      </div>\n                    ))}\n                  </div>\n                  {pages[pageNumber]?.map((row: any, rowIndex: any) => (\n                    <div\n                      className={`grid-row row-${rowIndex}`} // Highlight selected row\n                      key={rowIndex}\n                      onClick={(e) => handleRowClick(rowIndex, e)}\n                      onDoubleClick={(e) => {\n                        // e.stopPropagation()\n\n                        if (_clickTimeout) {\n                          clearTimeout(_clickTimeout);\n                          _setClickTimeout(null);\n                        }\n\n                        const timeoutId: any = setTimeout(() => {\n                          handleRowDoubleClick(rowIndex, e)\n                        }, 200);\n\n                        _setClickTimeout(timeoutId);\n\n\n\n                      }}\n                      onKeyDown={(e) => {\n\n                        // e.stopPropagation()\n\n                        if (_clickTimeout) {\n                          clearTimeout(_clickTimeout);\n                          _setClickTimeout(null);\n                        }\n\n                        const timeoutId: any = setTimeout(() => {\n                          handleRowKeyDown(e)\n                        }, 200);\n\n                        _setClickTimeout(timeoutId);\n\n\n                      }}\n                      onContextMenu={(e) => handleRightClick(e, rowIndex)}\n                    >\n                      {columns.map((col: any, colIndex: number) => (\n                        <div\n                          key={colIndex}\n                          style={{ width: col.width }}\n                          className={`grid-cell ${hoveredColumn === colIndex ? `highlight-column` : \"\"} row-${rowIndex} col-${colIndex}`}\n                        >\n                          <input\n                            value={row[col.field]}\n                            onChange={(e) => { }}\n                            readOnly={dataReadOnly}\n                            className={`${selectedRows.includes(rowIndex)\n                              ? \"selected-row\"\n                              : \"\"\n                              } ${selectedItems.includes(rowIndex)\n                                ? \"selected-items\"\n                                : \"\"\n                              }\n                          ${col.type === \"number\" ? \"number\" : \"text\"}\n                          `}\n                          />\n                          <div\n                            className=\"resize-handle\"\n                            onMouseDown={(e) => {\n                              e.preventDefault();\n                              startResize(colIndex, e);\n                            }}\n                            onMouseEnter={(e) => {\n                              e.preventDefault();\n                              handleMouseEnter(colIndex);\n                            }} // On hover\n                            onMouseLeave={(e) => {\n                              e.preventDefault();\n                              handleMouseLeave();\n                            }} // On mouse leave\n                          />\n                        </div>\n                      ))}\n                    </div>\n                  ))}\n                </div>\n              </div>\n            </div>\n\n            {isLoading && <div className=\"table-loading\">\n              <div className=\"loader\"></div>\n            </div>}\n          </div>\n          <div className=\"table-panel-footer\" >\n            <div>Records : {rows?.length}</div>\n            <div><Pagination count={pages.length} onChange={(e, value) => {\n              setPageNumber(value - 1)\n            }} />\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n);\nfunction formatArrayIntoChunks(arr: Array<any>, chunkSize = 100) {\n  let result = [];\n\n  for (let i = 0; i < arr.length; i += chunkSize) {\n    // Use slice to create chunks of 'chunkSize'\n    result.push(arr.slice(i, i + chunkSize));\n  }\n  return result;\n}\nexport { UpwardTable, };\n","import { useContext, useState, useRef } from \"react\";\nimport { GridRowSelectionModel } from \"@mui/x-data-grid\";\nimport { AuthContext } from \"../../../components/AuthContext\";\nimport { useMutation, useQuery, useQueryClient } from \"react-query\";\nimport Swal from \"sweetalert2\";\nimport {\n  codeCondfirmationAlert,\n  saveCondfirmationAlert,\n} from \"../../../lib/confirmationAlert\";\nimport { UpwardTable } from \"../../../components/UpwardTable\";\nimport {\n  ButtonField,\n  SelectInput,\n  TextInput,\n} from \"../../../components/UpwardFields\";\nimport PageHelmet from \"../../../components/Helmet\";\n\nexport const reducer = (state: any, action: any) => {\n  switch (action.type) {\n    case \"UPDATE_FIELD\":\n      return {\n        ...state,\n        [action.field]: action.value,\n      };\n    default:\n      return state;\n  }\n};\nexport const chartAccountColumn = [\n  { field: \"Acct_Code\", headerName: \"Account Code\", width: 150 },\n  { field: \"Acct_Title\", headerName: \"Account Name/Account Title\", width: 300 },\n  { field: \"Short\", headerName: \"Short Name\", width: 300 },\n  { field: \"Acct_Type\", headerName: \"Account Type\", width: 200 },\n  { field: \"Account\", headerName: \"Account\", width: 100 },\n  { field: \"SubAccnt\", headerName: \"Sub Account ?\", width: 100 },\n  { field: \"IDNo\", headerName: \"I.D. ?\", width: 100 },\n  { field: \"Inactive\", headerName: \"Inactive ?\", width: 100 },\n];\nconst queryKey = \"chart-account\";\n\nexport default function ChartAccount() {\n  const tableRef = useRef<any>(null);\n  const inputSearchRef = useRef<HTMLInputElement>(null);\n  const inputCodeRef = useRef<HTMLInputElement>(null);\n  const inputAccountClassificationRef = useRef<HTMLSelectElement>(null);\n  const inputAccountTypeRef = useRef<HTMLSelectElement>(null);\n  const inputNameRef = useRef<HTMLInputElement>(null);\n  const inputShortNameRef = useRef<HTMLInputElement>(null);\n  const inputRequiredSubAccountRef = useRef<HTMLInputElement>(null);\n  const inputRequiredIDRef = useRef<HTMLInputElement>(null);\n  const inputMarkInactiveRef = useRef<HTMLInputElement>(null);\n\n  const { myAxios, user } = useContext(AuthContext);\n  const [rows, setRows] = useState<GridRowSelectionModel>([]);\n  const [mode, setMode] = useState<string>(\"\");\n\n  const { isLoading, refetch: refetchChartAccountSearch } = useQuery({\n    queryKey,\n    queryFn: async () =>\n      await myAxios.get(\n        `/reference/get-chart-accounts?chartAccountSearch=${inputSearchRef.current?.value ?? \"\"\n        }`,\n        {\n          headers: {\n            Authorization: `Bearer ${user?.accessToken}`,\n          },\n        }\n      ),\n    onSuccess: (res) => {\n      setRows((res as any)?.data.chartAccount);\n      resetField();\n      tableRef?.current?.resetTableSelected();\n    },\n    refetchOnWindowFocus: false,\n  });\n  const { mutate: mutateAdd, isLoading: loadingAdd } = useMutation({\n    mutationKey: queryKey,\n    mutationFn: async (variables: any) => {\n      return await myAxios.post(\"/reference/add-chart-account\", variables, {\n        headers: {\n          Authorization: `Bearer ${user?.accessToken}`,\n        },\n      });\n    },\n    onSuccess,\n  });\n  const { mutate: mutateEdit, isLoading: loadingEdit } = useMutation({\n    mutationKey: queryKey,\n    mutationFn: async (variables: any) => {\n      return await myAxios.post(\"/reference/update-chart-account\", variables, {\n        headers: {\n          Authorization: `Bearer ${user?.accessToken}`,\n        },\n      });\n    },\n    onSuccess,\n  });\n  const { mutate: mutateDelete, isLoading: loadingDelete } = useMutation({\n    mutationKey: queryKey,\n    mutationFn: async (variables: any) => {\n      return await myAxios.post(\"/reference/delete-chart-account\", variables, {\n        headers: {\n          Authorization: `Bearer ${user?.accessToken}`,\n        },\n      });\n    },\n    onSuccess,\n  });\n  function onSuccess(res: any) {\n    if (res.data.success) {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"success\",\n        title: res.data.message,\n        showConfirmButton: false,\n        timer: 1500,\n      }).then(() => {\n        handleCancel();\n      });\n    }\n\n    Swal.fire({\n      position: \"center\",\n      icon: \"error\",\n      title: res.data.message,\n      showConfirmButton: false,\n      timer: 1500,\n    });\n  }\n  const handleSave = (e: any) => {\n    if (inputCodeRef.current?.value === \"\") {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: \"Acct Code is required!\",\n        showConfirmButton: false,\n        timer: 1500,\n      });\n    }\n    if (inputNameRef.current?.value === \"\") {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: \"Acct Title is required!\",\n        showConfirmButton: false,\n        timer: 1500,\n      });\n    }\n    if (inputShortNameRef.current?.value === \"\") {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: \"Short Name is required!\",\n        showConfirmButton: false,\n        timer: 1500,\n      });\n    }\n    if ((inputCodeRef.current?.value as string).length >= 200) {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: \"Acct Code is too long!\",\n        showConfirmButton: false,\n        timer: 1500,\n      });\n    }\n    if ((inputNameRef.current?.value as string).length >= 200) {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: \"Acct Title is too long!\",\n        showConfirmButton: false,\n        timer: 1500,\n      });\n    }\n    if ((inputShortNameRef.current?.value as string).length >= 200) {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: \"Short Name is too long!\",\n        showConfirmButton: false,\n        timer: 1500,\n      });\n    }\n    e.preventDefault();\n    const state = {\n      Acct_Code: inputCodeRef.current?.value,\n      Acct_Title: inputNameRef.current?.value,\n      Short: inputShortNameRef.current?.value,\n      Account: inputAccountClassificationRef.current?.value,\n      Acct_Type: inputAccountTypeRef.current?.value,\n      IDNo: inputRequiredIDRef.current?.checked,\n      SubAccnt: inputRequiredSubAccountRef.current?.checked,\n      Inactive: inputMarkInactiveRef.current?.checked,\n      mode: \"\",\n      search: \"\",\n    };\n    if (mode === \"update\") {\n      codeCondfirmationAlert({\n        isUpdate: true,\n        cb: (userCodeConfirmation) => {\n          mutateEdit({ ...state, userCodeConfirmation });\n        },\n      });\n    } else {\n      saveCondfirmationAlert({\n        isConfirm: () => {\n          mutateAdd(state);\n        },\n      });\n    }\n  };\n  const handleCancel = () => {\n    setMode(\"\");\n    resetField();\n    tableRef?.current?.resetTableSelected();\n  };\n  const handleAdd = () => {\n    setMode(\"add\");\n    setTimeout(() => {\n      inputCodeRef.current?.focus()\n    }, 100)\n  };\n  const handleDelete = () => {\n    codeCondfirmationAlert({\n      isUpdate: false,\n      cb: (userCodeConfirmation) => {\n        mutateDelete({\n          Acct_Code: inputCodeRef.current?.value,\n          userCodeConfirmation,\n        });\n      },\n    });\n  };\n  const onSelectionChange = (selectedRow: any) => {\n    if (selectedRow.length > 0) {\n      const row = selectedRow[0];\n      if (inputCodeRef.current) {\n        inputCodeRef.current.value = row.Acct_Code;\n      }\n      if (inputAccountClassificationRef.current) {\n        inputAccountClassificationRef.current.value = row.Account.trim();\n      }\n      if (inputAccountTypeRef.current) {\n        inputAccountTypeRef.current.value = row.Acct_Type.trim();\n      }\n      if (inputNameRef.current) {\n        inputNameRef.current.value = row.Acct_Title;\n      }\n      if (inputShortNameRef.current) {\n        inputShortNameRef.current.value = row.Short;\n      }\n      if (inputRequiredSubAccountRef.current) {\n        inputRequiredSubAccountRef.current.checked = row.SubAccnt === \"YES\";\n      }\n      if (inputRequiredIDRef.current) {\n        inputRequiredIDRef.current.checked = row.IDNo === \"YES\";\n      }\n      if (inputMarkInactiveRef.current) {\n        inputMarkInactiveRef.current.checked = row.Inactive === \"YES\";\n      }\n      setMode(\"update\");\n    } else {\n      resetField();\n    }\n  };\n  function resetField() {\n    if (inputCodeRef.current) {\n      inputCodeRef.current.value = \"\";\n    }\n    if (inputAccountClassificationRef.current) {\n      inputAccountClassificationRef.current.selectedIndex = 0;\n    }\n    if (inputAccountTypeRef.current) {\n      inputAccountTypeRef.current.selectedIndex = 0;\n    }\n    if (inputNameRef.current) {\n      inputNameRef.current.value = \"\";\n    }\n    if (inputShortNameRef.current) {\n      inputShortNameRef.current.value = \"\";\n    }\n    if (inputRequiredSubAccountRef.current) {\n      inputRequiredSubAccountRef.current.checked = false;\n    }\n    if (inputRequiredIDRef.current) {\n      inputRequiredIDRef.current.checked = false;\n    }\n    if (inputMarkInactiveRef.current) {\n      inputMarkInactiveRef.current.checked = false;\n    }\n  }\n\n  const width = window.innerWidth - 100;\n  const height = window.innerHeight - 90;\n  const disableFields = mode === \"\";\n\n  if (isLoading || loadingAdd || loadingEdit || loadingDelete) {\n    return <div>Loading...</div>;\n  }\n\n  return (\n    <>\n      <PageHelmet title=\"Chart Account\" />\n      <div\n        style={{\n          flex: 1,\n          backgroundColor: \"#F8F8FF\",\n          padding: \"5px\"\n\n        }}\n      >\n        <div\n          style={{ width: `${width}px`, height: `${height}px`, margin: \"auto\" }}\n        >\n          <div\n            style={{\n              height: \"120px\",\n            }}\n          >\n            <div\n              style={{\n                display: \"flex\",\n                alignItems: \"center\",\n                height: \"30px\",\n                columnGap: \"10px\",\n              }}\n            >\n              <TextInput\n                label={{\n                  title: \"Search: \",\n                  style: {\n                    fontSize: \"12px\",\n                    fontWeight: \"bold\",\n                    width: \"50px\",\n                  },\n                }}\n                input={{\n                  className: \"search-input-up-on-key-down\",\n                  type: \"search\",\n                  onKeyDown: (e) => {\n                    if (e.key === \"Enter\" || e.key === \"NumpadEnter\") {\n                      e.preventDefault();\n                      refetchChartAccountSearch();\n                    }\n                    if (e.key === \"ArrowDown\") {\n                      e.preventDefault();\n                      const datagridview = document.querySelector(\n                        \".grid-container\"\n                      ) as HTMLDivElement;\n                      datagridview.focus();\n                    }\n                  },\n                  style: { width: \"500px\" },\n                }}\n                inputRef={inputSearchRef}\n              />\n              {!disableFields && (\n                <ButtonField\n                  button={{\n                    style: {\n                      margin: 0,\n                      padding: \"5px\",\n                      borderRadius: \"5px\",\n                      background: \"transparent\",\n                    },\n                    onClick: handleCancel,\n                  }}\n                  tooltipText=\"CANCEL\"\n                >\n                  <svg\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    width=\"17px\"\n                    height=\"17px\"\n                    viewBox=\"0 0 24 24\"\n                    fill=\"none\"\n                  >\n                    <path\n                      d=\"M20.7457 3.32851C20.3552 2.93798 19.722 2.93798 19.3315 3.32851L12.0371 10.6229L4.74275 3.32851C4.35223 2.93798 3.71906 2.93798 3.32854 3.32851C2.93801 3.71903 2.93801 4.3522 3.32854 4.74272L10.6229 12.0371L3.32856 19.3314C2.93803 19.722 2.93803 20.3551 3.32856 20.7457C3.71908 21.1362 4.35225 21.1362 4.74277 20.7457L12.0371 13.4513L19.3315 20.7457C19.722 21.1362 20.3552 21.1362 20.7457 20.7457C21.1362 20.3551 21.1362 19.722 20.7457 19.3315L13.4513 12.0371L20.7457 4.74272C21.1362 4.3522 21.1362 3.71903 20.7457 3.32851Z\"\n                      fill=\"#d97706\"\n                    />\n                  </svg>\n                </ButtonField>\n              )}\n              {disableFields && (\n                <ButtonField\n                  button={{\n                    style: {\n                      margin: 0,\n                      padding: \"5px\",\n                      borderRadius: \"5px\",\n                      background: \"transparent\",\n                    },\n                    onClick: handleAdd,\n                  }}\n                  tooltipText=\"ADD\"\n                >\n                  <svg width=\"20px\" height=\"20px\" viewBox=\"0 0 24 24\">\n                    <title />\n\n                    <g id=\"Complete\">\n                      <g data-name=\"add\" id=\"add-2\">\n                        <g>\n                          <line\n                            fill=\"none\"\n                            stroke=\"#000000\"\n                            strokeLinecap=\"round\"\n                            strokeLinejoin=\"round\"\n                            strokeWidth=\"2\"\n                            x1=\"12\"\n                            x2=\"12\"\n                            y1=\"19\"\n                            y2=\"5\"\n                          />\n\n                          <line\n                            fill=\"none\"\n                            stroke=\"#000000\"\n                            strokeLinecap=\"round\"\n                            strokeLinejoin=\"round\"\n                            strokeWidth=\"2\"\n                            x1=\"5\"\n                            x2=\"19\"\n                            y1=\"12\"\n                            y2=\"12\"\n                          />\n                        </g>\n                      </g>\n                    </g>\n                  </svg>\n                </ButtonField>\n              )}\n              <ButtonField\n                disabled={disableFields}\n                button={{\n                  style: {\n                    margin: 0,\n                    padding: \"5px\",\n                    borderRadius: \"5px\",\n                    background: \"transparent\",\n                  },\n                  onClick: handleSave,\n                }}\n                tooltipText=\"SAVE\"\n              >\n                <svg width=\"17px\" height=\"17px\" viewBox=\"0 0 24 24\" fill=\"green\">\n                  <path\n                    fillRule=\"evenodd\"\n                    clipRule=\"evenodd\"\n                    d=\"M18.1716 1C18.702 1 19.2107 1.21071 19.5858 1.58579L22.4142 4.41421C22.7893 4.78929 23 5.29799 23 5.82843V20C23 21.6569 21.6569 23 20 23H4C2.34315 23 1 21.6569 1 20V4C1 2.34315 2.34315 1 4 1H18.1716ZM4 3C3.44772 3 3 3.44772 3 4V20C3 20.5523 3.44772 21 4 21L5 21L5 15C5 13.3431 6.34315 12 8 12L16 12C17.6569 12 19 13.3431 19 15V21H20C20.5523 21 21 20.5523 21 20V6.82843C21 6.29799 20.7893 5.78929 20.4142 5.41421L18.5858 3.58579C18.2107 3.21071 17.702 3 17.1716 3H17V5C17 6.65685 15.6569 8 14 8H10C8.34315 8 7 6.65685 7 5V3H4ZM17 21V15C17 14.4477 16.5523 14 16 14L8 14C7.44772 14 7 14.4477 7 15L7 21L17 21ZM9 3H15V5C15 5.55228 14.5523 6 14 6H10C9.44772 6 9 5.55228 9 5V3Z\"\n                    fill=\"green\"\n                  />\n                </svg>\n              </ButtonField>\n              <ButtonField\n                disabled={mode !== \"update\"}\n                button={{\n                  style: {\n                    margin: 0,\n                    padding: \"5px\",\n                    borderRadius: \"5px\",\n                    background: \"transparent\",\n                  },\n                  onClick: handleDelete,\n                }}\n                tooltipText=\"DELETE\"\n              >\n                <svg width=\"20px\" height=\"20px\" viewBox=\"0 0 24 24\" fill=\"none\">\n                  <path\n                    d=\"M4 7H20\"\n                    stroke=\"red\"\n                    strokeWidth=\"2\"\n                    strokeLinecap=\"round\"\n                    strokeLinejoin=\"round\"\n                  />\n                  <path\n                    d=\"M6 7V18C6 19.6569 7.34315 21 9 21H15C16.6569 21 18 19.6569 18 18V7\"\n                    stroke=\"red\"\n                    strokeWidth=\"2\"\n                    strokeLinecap=\"round\"\n                    strokeLinejoin=\"round\"\n                  />\n                  <path\n                    d=\"M9 5C9 3.89543 9.89543 3 11 3H13C14.1046 3 15 3.89543 15 5V7H9V5Z\"\n                    stroke=\"red\"\n                    strokeWidth=\"2\"\n                    strokeLinecap=\"round\"\n                    strokeLinejoin=\"round\"\n                  />\n                </svg>\n              </ButtonField>\n            </div>\n            <div\n              style={{\n                marginTop: \"10px\",\n                display: \"flex\",\n                columnGap: \"30px\",\n                rowGap: \"15px\",\n                flexWrap: \"wrap\",\n              }}\n            >\n              <TextInput\n                label={{\n                  title: \"Code: \",\n                  style: {\n                    fontSize: \"12px\",\n                    fontWeight: \"bold\",\n                    width: \"40px\",\n                  },\n                }}\n                input={{\n                  disabled: disableFields,\n                  type: \"text\",\n                  style: { width: \"90px\" },\n                }}\n                inputRef={inputCodeRef}\n              />\n              <SelectInput\n                label={{\n                  title: \"Account Classification: \",\n                  style: {\n                    fontSize: \"12px\",\n                    fontWeight: \"bold\",\n                    width: \"135px\",\n                  },\n                }}\n                selectRef={inputAccountClassificationRef}\n                select={{\n                  disabled: disableFields,\n                  style: { width: \"120px\" },\n                }}\n                datasource={[\n                  { key: \"Asset\" },\n                  { key: \"Liability\" },\n                  { key: \"Equity\" },\n                  { key: \"Revenue\" },\n                  { key: \"Expense\" },\n                ]}\n                values={\"key\"}\n                display={\"key\"}\n              />\n              <SelectInput\n                label={{\n                  title: \"Account Type: \",\n                  style: {\n                    fontSize: \"12px\",\n                    fontWeight: \"bold\",\n                    width: \"90px\",\n                  },\n                }}\n                selectRef={inputAccountTypeRef}\n                select={{\n                  disabled: disableFields,\n                  style: { width: \"120px\" },\n                }}\n                datasource={[\n                  { key: \"Group Header\" },\n                  { key: \"Header\" },\n                  { key: \"Detail\" },\n                ]}\n                values={\"key\"}\n                display={\"key\"}\n              />\n              <TextInput\n                label={{\n                  title: \"Name/Title: \",\n                  style: {\n                    fontSize: \"12px\",\n                    fontWeight: \"bold\",\n                    width: \"80px\",\n                  },\n                }}\n                input={{\n                  disabled: disableFields,\n                  type: \"text\",\n                  style: { width: \"350px\" },\n                }}\n                inputRef={inputNameRef}\n              />\n              <TextInput\n                label={{\n                  title: \"ShortName: \",\n                  style: {\n                    fontSize: \"12px\",\n                    fontWeight: \"bold\",\n                    width: \"80px\",\n                  },\n                }}\n                input={{\n                  disabled: disableFields,\n                  type: \"text\",\n                  style: { width: \"200px\" },\n                }}\n                inputRef={inputShortNameRef}\n              />\n              <TextInput\n                label={{\n                  title: \"Required sub-account?: \",\n                  style: {\n                    fontSize: \"12px\",\n                    fontWeight: \"bold\",\n                    width: \"140px\",\n                  },\n                }}\n                input={{\n                  disabled: disableFields,\n\n                  type: \"checkbox\",\n                  style: { width: \"12px\", height: \"12px\" },\n                }}\n                inputRef={inputRequiredSubAccountRef}\n              />\n              <TextInput\n                label={{\n                  title: \"Required I.D.?: \",\n                  style: {\n                    fontSize: \"12px\",\n                    fontWeight: \"bold\",\n                    width: \"85px\",\n                  },\n                }}\n                input={{\n                  disabled: disableFields,\n\n                  type: \"checkbox\",\n                  style: { width: \"12px\", height: \"12px\" },\n                }}\n                inputRef={inputRequiredIDRef}\n              />\n              <TextInput\n                label={{\n                  title: \"Mark As Inactive: \",\n                  style: {\n                    fontSize: \"12px\",\n                    fontWeight: \"bold\",\n                    width: \"100px\",\n                  },\n                }}\n                input={{\n                  disabled: disableFields,\n\n                  type: \"checkbox\",\n                  style: { width: \"12px\", height: \"12px\" },\n                }}\n                inputRef={inputMarkInactiveRef}\n              />\n            </div>\n          </div>\n          <UpwardTable\n            ref={tableRef}\n            rows={rows}\n            column={chartAccountColumn}\n            width={width}\n            height={height}\n            dataReadOnly={true}\n            onSelectionChange={onSelectionChange}\n            isMultipleSelect={false}\n          />\n        </div>\n      </div>\n    </>\n  );\n}\n","import Swal from \"sweetalert2\";\n\nexport function codeCondfirmationAlert(props: {\n  cb: (userCodeConfirmation: string) => void;\n  isUpdate: boolean;\n  isConfirm?: () => void;\n  isDeclined?: () => void;\n  text?: string;\n}) {\n  Swal.fire({\n    title: `Are you sure!`,\n    html: props?.text\n      ? props?.text\n      : props.isUpdate\n      ? `Are you sure you want to make this change?`\n      : \"Are you sure you want to delete this?\",\n    icon: \"warning\",\n    input: \"text\",\n    inputAttributes: {\n      autocapitalize: \"off\",\n    },\n    showCancelButton: true,\n    confirmButtonText: \"Save\",\n    confirmButtonColor: \"green\",\n    showLoaderOnConfirm: true,\n    preConfirm: async (userCodeConfirmation) => {\n      try {\n        props.cb(userCodeConfirmation);\n      } catch (error) {\n        Swal.showValidationMessage(`\n            Request failed: ${error}\n          `);\n      }\n    },\n    allowOutsideClick: () => !Swal.isLoading(),\n  }).then((result) => {\n    if (result.isConfirmed) {\n      if (props.isConfirm) {\n        return props.isConfirm();\n      }\n    }\n    if (props.isDeclined) {\n      props.isDeclined();\n    }\n  });\n}\n\nexport function saveCondfirmationAlert(props: {\n  isConfirm?: () => void;\n  isDeclined?: () => void;\n  text?: string;\n}) {\n  Swal.fire({\n    title: \"Are you sure?\",\n    text: props?.text ? props?.text : \"Do you want to proceed with saving?\",\n    icon: \"warning\",\n    showCancelButton: true,\n    confirmButtonColor: \"#3085d6\",\n    cancelButtonColor: \"#d33\",\n    confirmButtonText: \"Yes, save it!\",\n  }).then((result) => {\n    if (result.isConfirmed) {\n      if (props.isConfirm) {\n        return props.isConfirm();\n      }\n    }\n    if (props.isDeclined) {\n      props.isDeclined();\n    }\n  });\n}\n","import defineProperty from \"./defineProperty.js\";\nfunction ownKeys(e, r) {\n  var t = Object.keys(e);\n  if (Object.getOwnPropertySymbols) {\n    var o = Object.getOwnPropertySymbols(e);\n    r && (o = o.filter(function (r) {\n      return Object.getOwnPropertyDescriptor(e, r).enumerable;\n    })), t.push.apply(t, o);\n  }\n  return t;\n}\nexport default function _objectSpread2(e) {\n  for (var r = 1; r < arguments.length; r++) {\n    var t = null != arguments[r] ? arguments[r] : {};\n    r % 2 ? ownKeys(Object(t), !0).forEach(function (r) {\n      defineProperty(e, r, t[r]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) {\n      Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));\n    });\n  }\n  return e;\n}"],"names":["_ref","_ref$title","title","_jsxs","Helmet","children","_jsx","concat","process","rel","type","href","isValidDate","dateString","test","_dateString$split","split","_dateString$split2","_slicedToArray","year","month","day","parsedYear","parseInt","date","Date","getFullYear","getMonth","getDate","TextFormatedInput","input","label","inputRef","icon","_ref$iconPosition","iconPosition","_ref$disableIcon","disableIcon","_ref$onIconClick","onIconClick","e","_ref$onChange","onChange","_ref$onBlur","onBlur","containerStyle","id","useId","formatNumber","value","parts","replace","join","unformatNumber","style","_objectSpread","display","alignItems","position","htmlFor","left","zIndex","ref","height","textAlign","target","numbers","match","newV","handleChange","includes","length","ensureTwoDecimals","handleBlur","onFocus","currentTarget","select","onClick","right","top","transform","cursor","justifyContent","background","pointerEvents","TextInput","_ref2","_ref2$iconPosition","_ref2$disableIcon","_ref2$onIconClick","_label$title","_label$title2","alert","trim","format","wait","then","_inputRef$current","current","focus","_inputRef$current2","TextAreaInput","_ref3","textarea","_inputRef","_ref3$iconPosition","_ref3$disableIcon","_ref3$onIconClick","SelectInput","forwardRef","_ref4","selectRef","_ref4$datasource","datasource","_ref4$values","values","_ref4$display","_useState","useState","_useState2","_datasource","_setDataSource","useImperativeHandle","setDataSource","_dataSource","getDataSource","className","map","itm","idx","ButtonField","_ref5","buttonRetRef","button","_ref5$tooltipText","tooltipText","_ref5$disabled","disabled","UpwardTable","UpwardTableRef","_pages$pageNumber","rows","column","width","dataReadOnly","_ref$onSelectionChang","onSelectionChange","_ref$isMultipleSelect","isMultipleSelect","_ref$freeze","freeze","onKeyDown","_ref$inputsearchselec","inputsearchselector","_ref$isRowSelectable","isRowSelectable","_ref$unSelectable","unSelectable","isLoading","onRightClick","pages","setPages","_useState3","_useState4","pageNumber","setPageNumber","onSelectionChangeRef","useRef","onKeyDownRef","_useState5","filter","hide","_useState6","columns","setColumns","_useState7","_useState8","hoveredColumn","setHoveredColumn","_useState9","_useState10","selectedRows","setSelectedRows","_useState11","_useState12","lastSelectedRowIndex","setLastSelectedRowIndex","_useState13","_useState14","selectedItems","setSelectedItems","divRef","_useState15","_useState16","_clickTimeout","_setClickTimeout","useEffect","_pages","arr","chunkSize","arguments","undefined","result","i","push","slice","formatArrayIntoChunks","startResize","index","preventDefault","stopPropagation","startX","clientX","startWidth","doDrag","moveEvent","newWidth","updatedColumns","_toConsumableArray","document","addEventListener","stopDrag","removeEventListener","handleMouseEnter","handleMouseLeave","resetTableSelected","row","querySelector","scrollIntoView","block","behavior","getSelectedIndex","getSelectedRows","d","getFirstColumn","getParentElement","getSelectedRowsOnClick","setSelectRows","indx","key","prevIndex","_row$querySelector","newPrevIndex","tagName","divInput","_row$querySelector2","flexDirection","minHeight","tabIndex","col","fontWeight","defaultValue","headerName","readOnly","onMouseDown","onMouseEnter","onMouseLeave","rowIndex","event","shiftKey","rangeStart","Math","min","rangeEnd","max","newSelectedRows","selectedItemsParams","newSelectedRowsFiltered","selectedRowData","removeNullValue","data","getIndexAndData","ctrlKey","metaKey","handleRowClick","onDoubleClick","clearTimeout","timeoutId","setTimeout","handleRowDoubleClick","handleRowKeyDown","onContextMenu","rowSelected","handleRightClick","colIndex","field","Pagination","count","reducer","state","action","_defineProperty","chartAccountColumn","queryKey","ChartAccount","_queryFn","_mutationFn","_mutationFn2","_mutationFn3","tableRef","inputSearchRef","inputCodeRef","inputAccountClassificationRef","inputAccountTypeRef","inputNameRef","inputShortNameRef","inputRequiredSubAccountRef","inputRequiredIDRef","inputMarkInactiveRef","_useContext","useContext","AuthContext","myAxios","user","setRows","mode","setMode","_useQuery","useQuery","queryFn","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_inputSearchRef$curre","_inputSearchRef$curre2","wrap","_context","prev","next","get","headers","Authorization","accessToken","abrupt","sent","stop","apply","onSuccess","res","_tableRef$current","chartAccount","resetField","refetchOnWindowFocus","refetchChartAccountSearch","refetch","_useMutation","useMutation","mutationKey","mutationFn","_x","_callee2","variables","_context2","post","mutateAdd","mutate","loadingAdd","_useMutation2","_x2","_callee3","_context3","mutateEdit","loadingEdit","_useMutation3","_x3","_callee4","_context4","mutateDelete","loadingDelete","success","Swal","message","showConfirmButton","timer","handleCancel","_tableRef$current2","selectedIndex","checked","window","innerWidth","innerHeight","disableFields","_Fragment","PageHelmet","flex","backgroundColor","padding","margin","columnGap","fontSize","borderRadius","xmlns","viewBox","fill","_inputCodeRef$current4","stroke","strokeLinecap","strokeLinejoin","strokeWidth","x1","x2","y1","y2","_inputCodeRef$current","_inputNameRef$current","_inputShortNameRef$cu","_inputCodeRef$current2","_inputNameRef$current2","_inputShortNameRef$cu2","_inputCodeRef$current3","_inputNameRef$current3","_inputShortNameRef$cu3","_inputAccountClassifi","_inputAccountTypeRef$","_inputRequiredIDRef$c","_inputRequiredSubAcco","_inputMarkInactiveRef","Acct_Code","Acct_Title","Short","Account","Acct_Type","IDNo","SubAccnt","Inactive","search","codeCondfirmationAlert","isUpdate","cb","userCodeConfirmation","saveCondfirmationAlert","isConfirm","fillRule","clipRule","_inputCodeRef$current5","marginTop","rowGap","flexWrap","selectedRow","props","_preConfirm","html","text","inputAttributes","autocapitalize","showCancelButton","confirmButtonText","confirmButtonColor","showLoaderOnConfirm","preConfirm","error","allowOutsideClick","isConfirmed","isDeclined","cancelButtonColor","ownKeys","r","t","Object","keys","getOwnPropertySymbols","o","getOwnPropertyDescriptor","enumerable","_objectSpread2","forEach","getOwnPropertyDescriptors","defineProperties","defineProperty"],"sourceRoot":""}