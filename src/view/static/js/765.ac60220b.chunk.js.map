{"version":3,"file":"static/js/765.ac60220b.chunk.js","mappings":"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","sources":["components/Helmet.tsx","components/Table.tsx","feautures/Admin/Reference/PolicyAccount.tsx","lib/confirmationAlert.ts","../node_modules/@mui/icons-material/Add.js","../node_modules/@mui/icons-material/Delete.js","../node_modules/@mui/icons-material/Save.js","../node_modules/@mui/material/FormGroup/formGroupClasses.js","../node_modules/@mui/material/FormGroup/FormGroup.js","../node_modules/@mui/material/colors/pink.js"],"sourcesContent":["\r\nimport { Helmet } from \"react-helmet\";\r\n\r\nconst PageHelmet = ({ title = '' }: { title: string }) => {\r\n    const imgUrl = process.env.REACT_APP_IMAGE_URL;\r\n    return (\r\n        <Helmet>\r\n            <title>{title}</title>\r\n            <link rel=\"icon\" type=\"image/png\" href={`${imgUrl}/logo.png`} />\r\n        </Helmet>\r\n    );\r\n};\r\n\r\nexport default PageHelmet;","import {\n  useState,\n  useContext,\n  createContext,\n  ReactElement,\n  forwardRef,\n  useImperativeHandle,\n} from \"react\";\nimport { Box, LinearProgress } from \"@mui/material\";\nimport {\n  DataGrid,\n  GridSlotsComponentsProps,\n  gridPageCountSelector,\n  GridPagination,\n  useGridApiContext,\n  useGridSelector,\n  GridRowSelectionModel,\n  GridColDef,\n  GridRowParams,\n  GridCellParams,\n  GridTreeNode,\n} from \"@mui/x-data-grid\";\nimport { TablePaginationProps } from \"@mui/material/TablePagination\";\nimport MuiPagination from \"@mui/material/Pagination\";\n\ninterface TableProps {\n  isLoading: boolean;\n  columns: Array<any>;\n  rows: Array<any>;\n  table_id: string;\n  isSingleSelection: boolean;\n  isRowFreeze: boolean;\n  dataSelection?: (selection: any, data: any, code: string | null) => void;\n  CustomFooterComponent?: any;\n  isRowSelectable?: ((params: GridRowParams<any>) => boolean) | undefined;\n  getCellClassName?:\n    | ((params: GridCellParams<any, any, any, GridTreeNode>) => string)\n    | undefined;\n  footerChildren?: (\n    rowSelectionModel: GridRowSelectionModel,\n    rows: Array<any>\n  ) => ReactElement;\n  footerPaginationPosition?: string;\n  showFooterSelectedCount?: boolean;\n  checkboxSelection?: boolean | undefined;\n}\n\nconst TableContext = createContext<{\n  rowSelectionModel: GridRowSelectionModel;\n  rows: Array<any>;\n  footerPaginationPosition?: string;\n  showFooterSelectedCount?: boolean;\n  footerChildren: (\n    rowSelectionModel: GridRowSelectionModel,\n    rows: Array<any>\n  ) => ReactElement;\n}>({\n  rows: [],\n  rowSelectionModel: [],\n  footerChildren: () => <div></div>,\n  footerPaginationPosition: \"right-left\",\n  showFooterSelectedCount: true,\n});\nconst Table = forwardRef(\n  (\n    {\n      isLoading,\n      columns,\n      rows,\n      table_id,\n      isSingleSelection,\n      isRowFreeze,\n      dataSelection,\n      CustomFooterComponent = DefaultooterComponent,\n      isRowSelectable,\n      getCellClassName,\n      checkboxSelection = true,\n      footerChildren = (\n        rowSelectionModel: GridRowSelectionModel,\n        rows: Array<any>\n      ) => <div></div>,\n      footerPaginationPosition = \"right-left\",\n      showFooterSelectedCount = true,\n    }: TableProps,\n    ref\n  ) => {\n    const [selectedRows, setSelectedRows] = useState<any>([]);\n\n    useImperativeHandle(ref, () => ({\n      removeSelection: () => {\n        setSelectedRows([]);\n      },\n      getSelectedRows: () => {\n        return rows.filter((item: any) =>\n          selectedRows?.includes(item[table_id])\n        );\n      },\n      setSelectedRows: (data: Array<any>) => {\n        setSelectedRows(data);\n      },\n    }));\n\n    function onSelectionChange(selection: any, data: any, code: string | null) {\n      if (dataSelection) {\n        dataSelection(selection, data, code);\n      }\n    }\n    let freezeArray: Array<any> = [];\n\n    return (\n      <TableContext.Provider\n        value={{\n          showFooterSelectedCount,\n          footerPaginationPosition,\n          rowSelectionModel: selectedRows,\n          rows,\n          footerChildren,\n        }}\n      >\n        <DataGrid\n          slots={{\n            loadingOverlay: LinearProgress,\n            footer: CustomFooterComponent,\n          }}\n          initialState={{\n            pagination: { paginationModel: { pageSize: 100 } },\n          }}\n          loading={isLoading}\n          getRowId={(row) => row[table_id]}\n          columns={columns.filter((col: any) => !col.hide) as GridColDef<any>[]}\n          rows={rows}\n          showCellVerticalBorder={true}\n          showColumnVerticalBorder={true}\n          checkboxSelection={checkboxSelection}\n          rowSelectionModel={selectedRows}\n          rowHeight={25}\n          columnHeaderHeight={35}\n          pageSizeOptions={[10, 20, 35, 50, 75, 100]}\n          sx={{\n            \"& .cash\": {\n              color: \"#ec4899\",\n            },\n            \"& .check\": {\n              color: \"#0891b2\",\n            },\n            \"& .approved\": {\n              color: \"green\",\n            },\n            \"& .pending\": {\n              color: \"orange\",\n            },\n            \"& .disapproved\": {\n              color: \"red\",\n            },\n            \"& .normal\": {\n              color: \"red\",\n            },\n            \"& .MuiDataGrid-row.Mui-selected:hover\": {\n              color: \"black\",\n              \"& .MuiSvgIcon-root \": {\n                fill: \"#3b82f6\",\n              },\n            },\n            \"& .hover-keyboard\": {\n              background: \"#2563eb\",\n              color: \"white\",\n              \"& .MuiSvgIcon-root \": {\n                fill: \"white\",\n              },\n            },\n            \"& .MuiDataGrid-row:hover\": {\n              background: \"#2563eb\",\n              color: \"white\",\n              \"& .MuiSvgIcon-root \": {\n                fill: \"white\",\n              },\n            },\n            \"& .MuiDataGrid-row.hover\": {\n              background: \"#2563eb\",\n              color: \"white\",\n              \"& .MuiSvgIcon-root \": {\n                fill: \"white\",\n              },\n            },\n            \"& .MuiTablePagination-root p \": {\n              padding: \"0 !important\",\n            },\n\n            ...{\n              \"& .MuiDataGrid-columnHeaders\": {\n                background: \"#64748b\",\n                color: \"white\",\n                fontSize: \"14px\",\n                // borderBottomColor: \"#38bdf8\",\n              },\n              \"& .MuiDataGrid-columnHeaderCheckbox .MuiDataGrid-columnHeaderTitleContainer .MuiSvgIcon-root \":\n                {\n                  display: isSingleSelection || isRowFreeze ? \"none\" : \"block\",\n                  fill: \"white\",\n                },\n              \"& .MuiDataGrid-columnHeaderCheckbox .MuiDataGrid-columnHeaderTitleContainer input \":\n                {\n                  display: isSingleSelection || isRowFreeze ? \"none\" : \"block\",\n                },\n            },\n            ...{\n              fontSize: 13,\n              fontWeight: 500,\n              \"& .MuiDataGrid-checkboxInput\": {\n                height: \"27px\",\n                width: \"27px\",\n              },\n              \"& .MuiDataGrid-checkboxInput svg\": {\n                height: \"20px\",\n                width: \"20px\",\n              },\n            },\n          }}\n          // onRowDoubleClick={(e, r) => {\n          //   console.log(e, r);\n          // }}\n\n          onRowSelectionModelChange={(selection) => {\n            if (isRowFreeze) {\n              if (selection.length <= 0) return;\n              freezeArray = selection;\n              if (selectedRows.includes(freezeArray[freezeArray.length - 1]))\n                return;\n\n              setSelectedRows(selection);\n\n              onSelectionChange([selection[selection.length - 1]], rows, null);\n              return;\n            }\n\n            if (!isRowFreeze && isSingleSelection) {\n              if (selectedRows && selectedRows?.length > 0) {\n                const selectionSet = new Set(selectedRows);\n                setSelectedRows(\n                  selection.filter((s: any) => !selectionSet.has(s))\n                );\n              } else {\n                setSelectedRows(selection);\n              }\n            } else {\n              setSelectedRows(selection);\n            }\n\n            onSelectionChange([selection[selection.length - 1]], rows, null);\n          }}\n          onCellKeyDown={(__: any, key: any) => {\n            const keyFinding = [\"NumpadEnter\", \"Enter\", \"Delete\", \"Backspace\"];\n            if (!keyFinding.includes(key.code)) {\n              return;\n            }\n            key.preventDefault();\n            if (key.code === \"Enter\" || key.code === \"NumpadEnter\") {\n              if (isSingleSelection && !isRowFreeze) {\n                return setSelectedRows((data: any) => {\n                  if (data && data.length > 0 && data[0] === __.rowNode.id) {\n                    onSelectionChange([], rows, key.code);\n                    return [];\n                  }\n                  onSelectionChange([__.rowNode.id], rows, key.code);\n                  return [__.rowNode.id];\n                });\n              } else {\n                setSelectedRows((data: any) => {\n                  if (\n                    data &&\n                    !isRowFreeze &&\n                    data.length > 0 &&\n                    data.includes(__.rowNode.id)\n                  ) {\n                    data = data.filter((item: any) => item !== __.rowNode.id);\n                    onSelectionChange([], rows, key.code);\n                    return data;\n                  }\n                  if (\n                    data &&\n                    isRowFreeze &&\n                    data.length > 0 &&\n                    data.includes(__.rowNode.id)\n                  ) {\n                    return data;\n                  }\n                  onSelectionChange([__.rowNode.id], rows, key.code);\n                  return [...data, __.rowNode.id];\n                });\n              }\n              return;\n            }\n            if (key.code === \"Delete\" || key.code === \"Backspace\") {\n              setSelectedRows([__.rowNode.id]);\n              return onSelectionChange([__.rowNode.id], rows, key.code);\n            }\n          }}\n          disableVirtualization\n          isRowSelectable={isRowSelectable}\n          getCellClassName={getCellClassName}\n        />\n      </TableContext.Provider>\n    );\n  }\n);\n\nexport default Table;\nfunction Pagination({\n  page,\n  onPageChange,\n  className,\n}: Pick<TablePaginationProps, \"page\" | \"onPageChange\" | \"className\">) {\n  const apiRef = useGridApiContext();\n  const pageCount = useGridSelector(apiRef, gridPageCountSelector);\n\n  return (\n    <MuiPagination\n      variant=\"outlined\"\n      color=\"primary\"\n      className={className}\n      count={pageCount}\n      page={page + 1}\n      onChange={(event, newPage) => {\n        onPageChange(event as any, newPage - 1);\n      }}\n    />\n  );\n}\n\nfunction CustomPagination(props: any) {\n  return <GridPagination ActionsComponent={Pagination} {...props} />;\n}\nfunction DefaultooterComponent(\n  props: NonNullable<GridSlotsComponentsProps[\"footer\"]>\n) {\n  const {\n    rowSelectionModel,\n    showFooterSelectedCount,\n    footerPaginationPosition,\n    footerChildren,\n    rows,\n  } = useContext(TableContext);\n  return (\n    <Box\n      sx={{\n        columnGap: \"50px\",\n        display: \"flex\",\n        width: \"100%\",\n        justifyContent: \"space-between\",\n        px: 3,\n        alignItems: \"center\",\n        flexDirection:\n          footerPaginationPosition === \"right-left\" ? \"row-reverse\" : \"row\",\n      }}\n    >\n      <CustomPagination {...props} />\n      <Box\n        sx={{\n          display: \"flex\",\n          justifyContent:\n            footerPaginationPosition === \"right-left\"\n              ? \"flex-start\"\n              : \"flex-end\",\n          flex: 1,\n          alignItems: \"center\",\n        }}\n      >\n        {showFooterSelectedCount && (\n          <div>Selected:{rowSelectionModel?.length}</div>\n        )}\n        <div>{footerChildren(rowSelectionModel, rows)}</div>\n      </Box>\n    </Box>\n  );\n}\n","import React, { useContext, useState, useRef, useReducer } from \"react\";\nimport { Box, TextField, Button } from \"@mui/material\";\nimport AddIcon from \"@mui/icons-material/Add\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\nimport { GridRowSelectionModel } from \"@mui/x-data-grid\";\nimport FormGroup from \"@mui/material/FormGroup\";\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\nimport Checkbox from \"@mui/material/Checkbox\";\nimport { pink } from \"@mui/material/colors\";\nimport { AuthContext } from \"../../../components/AuthContext\";\nimport { useMutation, useQuery, useQueryClient } from \"react-query\";\nimport Swal from \"sweetalert2\";\nimport { wait } from \"../../../lib/wait\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport SaveIcon from \"@mui/icons-material/Save\";\nimport { LoadingButton } from \"@mui/lab\";\nimport Table from \"../../../components/Table\";\nimport {\n  codeCondfirmationAlert,\n  saveCondfirmationAlert,\n} from \"../../../lib/confirmationAlert\";\nimport PageHelmet from \"../../../components/Helmet\";\n\nconst initialState = {\n  AccountCode: \"\",\n  Account: \"\",\n  Description: \"\",\n  search: \"\",\n  mode: \"\",\n  COM: false,\n  TPL: false,\n  MAR: false,\n  FIRE: false,\n  G02: false,\n  G13: false,\n  G16: false,\n  MSPR: false,\n  PA: false,\n  CGL: false,\n  Inactive: false,\n};\nexport const reducer = (state: any, action: any) => {\n  switch (action.type) {\n    case \"UPDATE_FIELD\":\n      return {\n        ...state,\n        [action.field]: action.value,\n      };\n    default:\n      return state;\n  }\n};\n\nexport const poliyAccountColumn = [\n  { field: \"Account\", headerName: \"Account\", width: 350 },\n  { field: \"AccountCode\", headerName: \"Account Code\", width: 200 },\n  { field: \"Description\", headerName: \"Description\", flex: 1 },\n  { field: \"createdAt\", headerName: \"Created At\", width: 250 },\n];\nconst queryKey = \"policy-account\";\n\nexport default function PolicyAccount() {\n  const refParent = useRef<HTMLDivElement>(null);\n\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const { myAxios, user } = useContext(AuthContext);\n  const [rows, setRows] = useState<GridRowSelectionModel>([]);\n  const table = useRef<any>(null);\n  const queryClient = useQueryClient();\n  const { isLoading, refetch: refetchPolicyAccountSearch } = useQuery({\n    queryKey,\n    queryFn: async () =>\n      await myAxios.get(\n        `/reference/get-policy-account?policySearch=${state.search}`,\n        {\n          headers: {\n            Authorization: `Bearer ${user?.accessToken}`,\n          },\n        }\n      ),\n    onSuccess: (res) => {\n      setRows((res as any)?.data.policy);\n    },\n  });\n  const { mutate: mutateAdd, isLoading: loadingAdd } = useMutation({\n    mutationKey: queryKey,\n    mutationFn: async (variables: any) => {\n      return await myAxios.post(\"/reference/add-policy-account\", variables, {\n        headers: {\n          Authorization: `Bearer ${user?.accessToken}`,\n        },\n      });\n    },\n    onSuccess,\n  });\n  const { mutate: mutateEdit, isLoading: loadingEdit } = useMutation({\n    mutationKey: queryKey,\n    mutationFn: async (variables: any) => {\n      return await myAxios.post(\"/reference/update-policy-account\", variables, {\n        headers: {\n          Authorization: `Bearer ${user?.accessToken}`,\n        },\n      });\n    },\n    onSuccess,\n  });\n  const { mutate: mutateDelete, isLoading: loadingDelete } = useMutation({\n    mutationKey: queryKey,\n    mutationFn: async (variables: any) => {\n      return await myAxios.post(\"/reference/delete-policy-account\", variables, {\n        headers: {\n          Authorization: `Bearer ${user?.accessToken}`,\n        },\n      });\n    },\n    onSuccess,\n  });\n  const handleInputChange = (e: any) => {\n    const { name, value } = e.target;\n    dispatch({ type: \"UPDATE_FIELD\", field: name, value });\n  };\n  const handleCheckboxChange = (e: any) => {\n    const { name, value } = e.target;\n    dispatch({\n      type: \"UPDATE_FIELD\",\n      field: name,\n      value: !JSON.parse(value),\n    });\n  };\n  function handleOnSave(e: any) {\n    if (state.Account === \"\") {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: \"Account is required!\",\n        showConfirmButton: false,\n        timer: 1500,\n      });\n    }\n    if (state.AccountCode === \"\") {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: \"Account Code is required!\",\n        showConfirmButton: false,\n        timer: 1500,\n      });\n    }\n    if (state.Account.length >= 200) {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: \"Account is too long!\",\n        showConfirmButton: false,\n        timer: 1500,\n      });\n    }\n    if (state.AccountCode >= 200) {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"error\",\n        title: \"Account Code is too long\",\n        showConfirmButton: false,\n        timer: 1500,\n      });\n    }\n    e.preventDefault();\n    if (state.mode === \"edit\") {\n      codeCondfirmationAlert({\n        isUpdate: true,\n        cb: (userCodeConfirmation) => {\n          mutateEdit({ ...state, userCodeConfirmation });\n        },\n      });\n    } else {\n      saveCondfirmationAlert({\n        isConfirm: () => {\n          mutateAdd(state);\n        },\n      });\n    }\n  }\n  function resetModule() {\n    setNewStateValue(dispatch, initialState);\n    table.current?.removeSelection();\n    wait(500).then(() => {\n      refetchPolicyAccountSearch();\n    });\n  }\n  function onSuccess(res: any) {\n    if (res.data.success) {\n      queryClient.invalidateQueries(\"bank-account-trans\");\n      resetModule();\n      return Swal.fire({\n        position: \"center\",\n        icon: \"success\",\n        title: res.data.message,\n        showConfirmButton: false,\n        timer: 1500,\n      });\n    }\n\n    Swal.fire({\n      position: \"center\",\n      icon: \"error\",\n      title: res.data.message,\n      showConfirmButton: false,\n      timer: 1500,\n    });\n  }\n\n  return (\n    <>\n      <PageHelmet title=\"Policy Account\" />\n\n      <div\n        style={{\n          display: \"flex\",\n          flexDirection: \"column\",\n          flex: 1,\n          width: \"100%\",\n          padding: \"5px\"\n\n        }}\n      >\n        <Box\n          sx={(theme) => ({\n            display: \"flex\",\n            alignItems: \"center\",\n            columnGap: \"20px\",\n            [theme.breakpoints.down(\"sm\")]: {\n              flexDirection: \"column\",\n              alignItems: \"flex-start\",\n              marginBottom: \"15px\",\n            },\n          })}\n        >\n          <div\n            style={{\n              marginTop: \"10px\",\n              marginBottom: \"12px\",\n              width: \"100%\",\n            }}\n          >\n            <TextField\n              label=\"Search\"\n              fullWidth\n              size=\"small\"\n              type=\"text\"\n              name=\"search\"\n              value={state.search}\n              onChange={handleInputChange}\n              InputProps={{\n                style: { height: \"27px\", fontSize: \"14px\" },\n              }}\n              sx={{\n                height: \"27px\",\n                \".MuiFormLabel-root\": { fontSize: \"14px\" },\n                \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n              }}\n              onKeyDown={(e) => {\n                if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n                  e.preventDefault();\n                  return refetchPolicyAccountSearch();\n                }\n              }}\n            />\n          </div>\n          <div\n            style={{\n              display: \"flex\",\n              alignItems: \"center\",\n              columnGap: \"20px\",\n            }}\n          >\n            <div\n              style={{\n                display: \"flex\",\n                alignItems: \"center\",\n                columnGap: \"5px\",\n              }}\n            >\n              {state.mode === \"\" && (\n                <Button\n                  sx={{\n                    height: \"30px\",\n                    fontSize: \"11px\",\n                  }}\n                  variant=\"contained\"\n                  startIcon={<AddIcon />}\n                  id=\"entry-header-save-button\"\n                  onClick={() => {\n                    handleInputChange({ target: { value: \"add\", name: \"mode\" } });\n                  }}\n                >\n                  New\n                </Button>\n              )}\n\n              <LoadingButton\n                sx={{\n                  height: \"30px\",\n                  fontSize: \"11px\",\n                }}\n                id=\"save-entry-header\"\n                color=\"primary\"\n                variant=\"contained\"\n                type=\"submit\"\n                onClick={handleOnSave}\n                disabled={state.mode === \"\"}\n                startIcon={<SaveIcon />}\n                loading={loadingAdd || loadingEdit}\n              >\n                Save\n              </LoadingButton>\n              {state.mode !== \"\" && (\n                <Button\n                  sx={{\n                    height: \"30px\",\n                    fontSize: \"11px\",\n                  }}\n                  variant=\"contained\"\n                  startIcon={<CloseIcon />}\n                  color=\"error\"\n                  onClick={() => {\n                    Swal.fire({\n                      title: \"Are you sure?\",\n                      text: \"You won't be able to revert this!\",\n                      icon: \"warning\",\n                      showCancelButton: true,\n                      confirmButtonColor: \"#3085d6\",\n                      cancelButtonColor: \"#d33\",\n                      confirmButtonText: \"Yes, cancel it!\",\n                    }).then((result) => {\n                      if (result.isConfirmed) {\n                        resetModule();\n                      }\n                    });\n                  }}\n                >\n                  Cancel\n                </Button>\n              )}\n              <LoadingButton\n                id=\"save-entry-header\"\n                variant=\"contained\"\n                sx={{\n                  height: \"30px\",\n                  fontSize: \"11px\",\n                  backgroundColor: pink[500],\n                  \"&:hover\": {\n                    backgroundColor: pink[600],\n                  },\n                }}\n                disabled={state.mode !== \"edit\"}\n                startIcon={<DeleteIcon />}\n                loading={loadingDelete}\n                onClick={() => {\n                  codeCondfirmationAlert({\n                    isUpdate: false,\n                    cb: (userCodeConfirmation) => {\n                      mutateDelete({\n                        Account: state.Account,\n                        userCodeConfirmation,\n                      });\n                    },\n                  });\n                }}\n              >\n                Delete\n              </LoadingButton>\n            </div>\n          </div>\n        </Box>\n        <form\n          onSubmit={handleOnSave}\n          onKeyDown={(e) => {\n            if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n              e.preventDefault();\n              handleOnSave(e);\n              return;\n            }\n          }}\n        >\n          <Box\n            sx={(theme) => ({\n              display: \"flex\",\n              columnGap: \"15px\",\n              flexDirection: \"row\",\n              [theme.breakpoints.down(\"md\")]: {\n                flexDirection: \"column\",\n                rowGap: \"10px\",\n              },\n            })}\n          >\n            <TextField\n              size=\"small\"\n              label=\"Account\"\n              name=\"Account\"\n              required\n              value={state.Account}\n              onChange={handleInputChange}\n              disabled={state.mode === \"\" || state.mode === \"edit\"}\n              InputProps={{\n                style: { height: \"27px\", fontSize: \"14px\" },\n              }}\n              sx={{\n                minWidth: \"200px\",\n                height: \"27px\",\n                \".MuiFormLabel-root\": { fontSize: \"14px\" },\n                \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n              }}\n            />\n            <TextField\n              size=\"small\"\n              label=\"Account Code\"\n              name=\"AccountCode\"\n              required\n              value={state.AccountCode}\n              onChange={handleInputChange}\n              disabled={state.mode === \"\"}\n              InputProps={{\n                style: { height: \"27px\", fontSize: \"14px\" },\n              }}\n              sx={{\n                minWidth: \"200px\",\n                height: \"27px\",\n                \".MuiFormLabel-root\": { fontSize: \"14px\" },\n                \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n              }}\n            />\n            <TextField\n              fullWidth\n              size=\"small\"\n              label=\"Description\"\n              name=\"Description\"\n              required\n              value={state.Description}\n              onChange={handleInputChange}\n              disabled={state.mode === \"\"}\n              InputProps={{\n                style: { height: \"27px\", fontSize: \"14px\" },\n              }}\n              sx={{\n                flex: 1,\n                height: \"27px\",\n                \".MuiFormLabel-root\": { fontSize: \"14px\" },\n                \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n              }}\n            />\n          </Box>\n          <fieldset style={{ border: \"1px solid #cbd5e1\" }}>\n            <legend style={{ color: \"#6b7280\" }}>Policy Type</legend>\n            <FormGroup\n              sx={{\n                display: \"flex\",\n                flexDirection: \"row\",\n                justifyContent: \"space-between\",\n              }}\n            >\n              <FormControlLabel\n                sx={{\n                  \".MuiTypography-root\": {\n                    fontSize: \"14px\",\n                  },\n                }}\n                disabled={state.mode === \"\"}\n                control={\n                  <Checkbox\n                    size=\"small\"\n                    name=\"COM\"\n                    checked={state.COM}\n                    value={state.COM}\n                    onChange={handleCheckboxChange}\n                  />\n                }\n                label=\"Comprehensive\"\n              />\n              <FormControlLabel\n                sx={{\n                  \".MuiTypography-root\": {\n                    fontSize: \"14px\",\n                  },\n                }}\n                disabled={state.mode === \"\"}\n                control={\n                  <Checkbox\n                    size=\"small\"\n                    name=\"MAR\"\n                    value={state.MAR}\n                    checked={state.MAR}\n                    onChange={handleCheckboxChange}\n                  />\n                }\n                label=\"Marine\"\n              />\n              <FormControlLabel\n                sx={{\n                  \".MuiTypography-root\": {\n                    fontSize: \"14px\",\n                  },\n                }}\n                disabled={state.mode === \"\"}\n                control={\n                  <Checkbox\n                    size=\"small\"\n                    name=\"G02\"\n                    value={state.G02}\n                    checked={state.G02}\n                    onChange={handleCheckboxChange}\n                  />\n                }\n                label=\"Bond G(02)\"\n              />\n              <FormControlLabel\n                sx={{\n                  \".MuiTypography-root\": {\n                    fontSize: \"14px\",\n                  },\n                }}\n                disabled={state.mode === \"\"}\n                control={\n                  <Checkbox\n                    size=\"small\"\n                    name=\"G13\"\n                    value={state.G13}\n                    checked={state.G13}\n                    onChange={handleCheckboxChange}\n                  />\n                }\n                label=\"Bond G(13)\"\n              />\n              <FormControlLabel\n                sx={{\n                  \".MuiTypography-root\": {\n                    fontSize: \"14px\",\n                  },\n                }}\n                disabled={state.mode === \"\"}\n                control={\n                  <Checkbox\n                    size=\"small\"\n                    name=\"G16\"\n                    value={state.G16}\n                    checked={state.G16}\n                    onChange={handleCheckboxChange}\n                  />\n                }\n                label=\"Bond G(16)\"\n              />\n              <FormControlLabel\n                sx={{\n                  \".MuiTypography-root\": {\n                    fontSize: \"14px\",\n                  },\n                }}\n                disabled={state.mode === \"\"}\n                control={\n                  <Checkbox\n                    size=\"small\"\n                    name=\"PA\"\n                    value={state.PA}\n                    checked={state.PA}\n                    onChange={handleCheckboxChange}\n                  />\n                }\n                label=\"PA\"\n              />\n              <FormControlLabel\n                sx={{\n                  \".MuiTypography-root\": {\n                    fontSize: \"14px\",\n                  },\n                }}\n                disabled={state.mode === \"\"}\n                control={\n                  <Checkbox\n                    size=\"small\"\n                    name=\"TPL\"\n                    value={state.TPL}\n                    checked={state.TPL}\n                    onChange={handleCheckboxChange}\n                  />\n                }\n                label=\"TPL\"\n              />\n              <FormControlLabel\n                sx={{\n                  \".MuiTypography-root\": {\n                    fontSize: \"14px\",\n                  },\n                }}\n                disabled={state.mode === \"\"}\n                control={\n                  <Checkbox\n                    size=\"small\"\n                    name=\"FIRE\"\n                    value={state.FIRE}\n                    checked={state.FIRE}\n                    onChange={handleCheckboxChange}\n                  />\n                }\n                label=\"Fire\"\n              />\n              <FormControlLabel\n                sx={{\n                  \".MuiTypography-root\": {\n                    fontSize: \"14px\",\n                  },\n                }}\n                disabled={state.mode === \"\"}\n                control={\n                  <Checkbox\n                    size=\"small\"\n                    name=\"MSPR\"\n                    value={state.MSPR}\n                    checked={state.MSPR}\n                    onChange={handleCheckboxChange}\n                  />\n                }\n                label=\"MSPR\"\n              />\n              <FormControlLabel\n                sx={{\n                  \".MuiTypography-root\": {\n                    fontSize: \"14px\",\n                  },\n                }}\n                disabled={state.mode === \"\"}\n                control={\n                  <Checkbox\n                    size=\"small\"\n                    name=\"CGL\"\n                    value={state.CGL}\n                    checked={state.CGL}\n                    onChange={handleCheckboxChange}\n                  />\n                }\n                label=\"CGL\"\n              />\n            </FormGroup>\n          </fieldset>\n        </form>\n        <div\n          style={{\n            marginTop: \"10px\",\n            width: \"100%\",\n            position: \"relative\",\n            flex: 1,\n          }}\n        >\n          <Box\n            style={{\n              height: `400px`,\n              width: \"100%\",\n              overflowX: \"scroll\",\n              position: \"absolute\",\n            }}\n          >\n            <Table\n              ref={table}\n              isLoading={isLoading || loadingAdd || loadingEdit || loadingDelete}\n              columns={poliyAccountColumn}\n              rows={rows}\n              table_id={\"Account\"}\n              isSingleSelection={true}\n              isRowFreeze={false}\n              dataSelection={(selection, data, code) => {\n                const rowSelected = data.filter(\n                  (item: any) => item.Account === selection[0]\n                )[0];\n                if (rowSelected === undefined || rowSelected.length <= 0) {\n                  setNewStateValue(dispatch, initialState);\n                  handleInputChange({ target: { value: \"\", name: \"mode\" } });\n                  return;\n                }\n                handleInputChange({ target: { value: \"edit\", name: \"mode\" } });\n\n                if (code === \"Delete\" || code === \"Backspace\") {\n                  codeCondfirmationAlert({\n                    isUpdate: false,\n                    cb: (userCodeConfirmation) => {\n                      mutateDelete({\n                        Account: state.Account,\n                        userCodeConfirmation,\n                      });\n                    },\n                  });\n                  return;\n                }\n\n                setNewStateValue(dispatch, rowSelected);\n              }}\n            />\n          </Box>\n        </div>\n      </div>\n    </>\n  );\n}\nexport function setNewStateValue(dispatch: any, obj: any) {\n  Object.entries(obj).forEach(([field, value]) => {\n    dispatch({ type: \"UPDATE_FIELD\", field, value });\n  });\n}\n","import Swal from \"sweetalert2\";\n\nexport function codeCondfirmationAlert(props: {\n  cb: (userCodeConfirmation: string) => void;\n  isUpdate: boolean;\n  isConfirm?: () => void;\n  isDeclined?: () => void;\n  text?: string;\n}) {\n  Swal.fire({\n    title: `Are you sure!`,\n    html: props?.text\n      ? props?.text\n      : props.isUpdate\n      ? `Are you sure you want to make this change?`\n      : \"Are you sure you want to delete this?\",\n    icon: \"warning\",\n    input: \"text\",\n    inputAttributes: {\n      autocapitalize: \"off\",\n    },\n    showCancelButton: true,\n    confirmButtonText: \"Save\",\n    confirmButtonColor: \"green\",\n    showLoaderOnConfirm: true,\n    preConfirm: async (userCodeConfirmation) => {\n      try {\n        props.cb(userCodeConfirmation);\n      } catch (error) {\n        Swal.showValidationMessage(`\n            Request failed: ${error}\n          `);\n      }\n    },\n    allowOutsideClick: () => !Swal.isLoading(),\n  }).then((result) => {\n    if (result.isConfirmed) {\n      if (props.isConfirm) {\n        return props.isConfirm();\n      }\n    }\n    if (props.isDeclined) {\n      props.isDeclined();\n    }\n  });\n}\n\nexport function saveCondfirmationAlert(props: {\n  isConfirm?: () => void;\n  isDeclined?: () => void;\n  text?: string;\n}) {\n  Swal.fire({\n    title: \"Are you sure?\",\n    text: props?.text ? props?.text : \"Do you want to proceed with saving?\",\n    icon: \"warning\",\n    showCancelButton: true,\n    confirmButtonColor: \"#3085d6\",\n    cancelButtonColor: \"#d33\",\n    confirmButtonText: \"Yes, save it!\",\n  }).then((result) => {\n    if (result.isConfirmed) {\n      if (props.isConfirm) {\n        return props.isConfirm();\n      }\n    }\n    if (props.isDeclined) {\n      props.isDeclined();\n    }\n  });\n}\n","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\"\n}), 'Add');\nexports.default = _default;","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\"\n}), 'Delete');\nexports.default = _default;","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M17 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V7l-4-4zm-5 16c-1.66 0-3-1.34-3-3s1.34-3 3-3 3 1.34 3 3-1.34 3-3 3zm3-10H5V5h10v4z\"\n}), 'Save');\nexports.default = _default;","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getFormGroupUtilityClass(slot) {\n  return generateUtilityClass('MuiFormGroup', slot);\n}\nconst formGroupClasses = generateUtilityClasses('MuiFormGroup', ['root', 'row', 'error']);\nexport default formGroupClasses;","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"row\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base/composeClasses';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport { getFormGroupUtilityClass } from './formGroupClasses';\nimport useFormControl from '../FormControl/useFormControl';\nimport formControlState from '../FormControl/formControlState';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    row,\n    error\n  } = ownerState;\n  const slots = {\n    root: ['root', row && 'row', error && 'error']\n  };\n  return composeClasses(slots, getFormGroupUtilityClass, classes);\n};\nconst FormGroupRoot = styled('div', {\n  name: 'MuiFormGroup',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.row && styles.row];\n  }\n})(({\n  ownerState\n}) => _extends({\n  display: 'flex',\n  flexDirection: 'column',\n  flexWrap: 'wrap'\n}, ownerState.row && {\n  flexDirection: 'row'\n}));\n\n/**\n * `FormGroup` wraps controls such as `Checkbox` and `Switch`.\n * It provides compact row layout.\n * For the `Radio`, you should be using the `RadioGroup` component instead of this one.\n */\nconst FormGroup = /*#__PURE__*/React.forwardRef(function FormGroup(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiFormGroup'\n  });\n  const {\n      className,\n      row = false\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const muiFormControl = useFormControl();\n  const fcs = formControlState({\n    props,\n    muiFormControl,\n    states: ['error']\n  });\n  const ownerState = _extends({}, props, {\n    row,\n    error: fcs.error\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(FormGroupRoot, _extends({\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? FormGroup.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * Display group of elements in a compact row.\n   * @default false\n   */\n  row: PropTypes.bool,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default FormGroup;","const pink = {\n  50: '#fce4ec',\n  100: '#f8bbd0',\n  200: '#f48fb1',\n  300: '#f06292',\n  400: '#ec407a',\n  500: '#e91e63',\n  600: '#d81b60',\n  700: '#c2185b',\n  800: '#ad1457',\n  900: '#880e4f',\n  A100: '#ff80ab',\n  A200: '#ff4081',\n  A400: '#f50057',\n  A700: '#c51162'\n};\nexport default pink;"],"names":["_ref","_ref$title","title","_jsxs","Helmet","children","_jsx","rel","type","href","concat","process","TableContext","createContext","rows","rowSelectionModel","footerChildren","footerPaginationPosition","showFooterSelectedCount","Table","forwardRef","ref","isLoading","columns","table_id","isSingleSelection","isRowFreeze","dataSelection","_ref$CustomFooterComp","CustomFooterComponent","DefaultooterComponent","isRowSelectable","getCellClassName","_ref$checkboxSelectio","checkboxSelection","_ref$footerChildren","_ref$footerPagination","_ref$showFooterSelect","_useState","useState","_useState2","_slicedToArray","selectedRows","setSelectedRows","onSelectionChange","selection","data","code","useImperativeHandle","removeSelection","getSelectedRows","filter","item","includes","freezeArray","Provider","value","DataGrid","slots","loadingOverlay","LinearProgress","footer","initialState","pagination","paginationModel","pageSize","loading","getRowId","row","col","hide","showCellVerticalBorder","showColumnVerticalBorder","rowHeight","columnHeaderHeight","pageSizeOptions","sx","_objectSpread","color","fill","background","padding","fontSize","display","fontWeight","height","width","onRowSelectionModelChange","length","selectionSet","Set","s","has","onCellKeyDown","__","key","preventDefault","rowNode","id","_toConsumableArray","disableVirtualization","Pagination","_ref2","page","onPageChange","className","apiRef","useGridApiContext","pageCount","useGridSelector","gridPageCountSelector","MuiPagination","variant","count","onChange","event","newPage","CustomPagination","props","GridPagination","ActionsComponent","_useContext","useContext","Box","columnGap","justifyContent","px","alignItems","flexDirection","flex","AccountCode","Account","Description","search","mode","COM","TPL","MAR","FIRE","G02","G13","G16","MSPR","PA","CGL","Inactive","reducer","state","action","_defineProperty","field","poliyAccountColumn","headerName","queryKey","PolicyAccount","useRef","_queryFn","_mutationFn","_mutationFn2","_mutationFn3","_useReducer","useReducer","_useReducer2","dispatch","AuthContext","myAxios","user","setRows","table","queryClient","useQueryClient","_useQuery","useQuery","queryFn","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","get","headers","Authorization","accessToken","abrupt","sent","stop","apply","arguments","onSuccess","res","policy","refetchPolicyAccountSearch","refetch","_useMutation","useMutation","mutationKey","mutationFn","_x","_callee2","variables","_context2","post","mutateAdd","mutate","loadingAdd","_useMutation2","_x2","_callee3","_context3","mutateEdit","loadingEdit","_useMutation3","_x3","_callee4","_context4","mutateDelete","loadingDelete","handleInputChange","e","_e$target","target","name","handleCheckboxChange","_e$target2","JSON","parse","handleOnSave","Swal","position","icon","showConfirmButton","timer","codeCondfirmationAlert","isUpdate","cb","userCodeConfirmation","saveCondfirmationAlert","isConfirm","resetModule","_table$current","setNewStateValue","current","wait","then","success","invalidateQueries","message","_Fragment","PageHelmet","style","theme","breakpoints","down","marginBottom","marginTop","TextField","label","fullWidth","size","InputProps","top","onKeyDown","Button","startIcon","AddIcon","onClick","LoadingButton","disabled","SaveIcon","CloseIcon","text","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","result","isConfirmed","backgroundColor","pink","DeleteIcon","onSubmit","rowGap","required","minWidth","border","FormGroup","FormControlLabel","control","Checkbox","checked","overflowX","rowSelected","undefined","obj","Object","entries","forEach","_ref3","_ref4","_preConfirm","html","input","inputAttributes","autocapitalize","showLoaderOnConfirm","preConfirm","error","allowOutsideClick","isDeclined","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d","getFormGroupUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","FormGroupRoot","styled","overridesResolver","styles","ownerState","root","_extends","flexWrap","React","inProps","useThemeProps","_props$row","other","_objectWithoutPropertiesLoose","muiFormControl","useFormControl","fcs","formControlState","states","classes","composeClasses","useUtilityClasses","clsx","A100","A200","A400","A700"],"sourceRoot":""}