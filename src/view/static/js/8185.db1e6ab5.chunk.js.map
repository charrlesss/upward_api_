{"version":3,"file":"static/js/8185.db1e6ab5.chunk.js","mappings":"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","sources":["components/UpwardTable.tsx","hooks/useUpwardTableModal.tsx","feautures/Admin/Task/Accounting/PostDateChecks.tsx"],"sourcesContent":["import React, {\n  useState,\n  useRef,\n  useEffect,\n  forwardRef,\n  useImperativeHandle,\n} from \"react\";\nimport \"../style/datagridview.css\";\nimport { Pagination } from \"@mui/material\";\ninterface UpwardTablePropsType {\n  rows: Array<any>;\n  column: Array<any>;\n  width: number;\n  height: number;\n  dataReadOnly: boolean;\n  onSelectionChange?: (row: Array<any>, rowIndex: number) => void;\n  onKeyDown?: (row: Array<any>, key: string, rowIndex: number) => void;\n  isMultipleSelect?: boolean;\n  freeze?: boolean;\n  inputsearchselector?: string;\n  isRowSelectable?: boolean;\n  unSelectable?: (row: any) => boolean;\n  isLoading?: boolean,\n  onRightClick?: (rowSelected: any, event: any) => any\n}\nconst UpwardTable = forwardRef(\n  (\n    {\n      rows,\n      column,\n      width,\n      height,\n      dataReadOnly,\n      onSelectionChange = () => { },\n      isMultipleSelect = false,\n      freeze = false,\n      onKeyDown,\n      inputsearchselector = \".search-input-up-on-key-down\",\n      isRowSelectable = true,\n      unSelectable = () => false,\n      isLoading,\n      onRightClick\n    }: UpwardTablePropsType,\n    UpwardTableRef\n  ) => {\n    const [pages, setPages] = useState<Array<any>>([])\n    const [pageNumber, setPageNumber] = useState(0)\n    const onSelectionChangeRef = useRef(onSelectionChange);\n    const onKeyDownRef = useRef(onKeyDown);\n    const [columns, setColumns] = useState(column.filter((itm) => !itm.hide));\n    const [hoveredColumn, setHoveredColumn] = useState(null);\n    const [selectedRows, setSelectedRows] = useState<Array<number>>([0]);\n    const [lastSelectedRowIndex, setLastSelectedRowIndex] = useState(0);\n    const [selectedItems, setSelectedItems] = useState<Array<number>>([]);\n    const divRef = useRef<HTMLDivElement>(null);\n    const [_clickTimeout, _setClickTimeout] = useState(null);\n\n\n    useEffect(() => {\n      const _pages = formatArrayIntoChunks(rows, 100)\n      setPages(_pages)\n    }, [rows])\n\n    const startResize = (index: any, e: any) => {\n      e.preventDefault();\n      e.stopPropagation();\n\n      const startX = e.clientX;\n      const startWidth = columns[index].width;\n\n      const doDrag = (moveEvent: any) => {\n        const newWidth = startWidth + (moveEvent.clientX - startX);\n        const updatedColumns = [...columns];\n        updatedColumns[index].width = newWidth > 50 ? newWidth : 50; // Set minimum column width\n        setColumns(updatedColumns);\n      };\n\n      const stopDrag = () => {\n        document.removeEventListener(\"mousemove\", doDrag);\n        document.removeEventListener(\"mouseup\", stopDrag);\n      };\n\n      document.addEventListener(\"mousemove\", doDrag);\n      document.addEventListener(\"mouseup\", stopDrag);\n    };\n    const handleMouseEnter = (index: any) => {\n      setHoveredColumn(index); // Set the hovered column index\n    };\n    const handleMouseLeave = () => {\n      setHoveredColumn(null); // Reset hovered column index\n    };\n    const handleRowClick = (\n      rowIndex: any,\n      event: React.MouseEvent<HTMLDivElement, MouseEvent>\n    ) => {\n      function getIndexAndData(selectedRowData: Array<any>) {\n        const filterSelectrowData = selectedRowData.map((d, idx) => {\n          if (!unSelectable(d)) {\n            return { idx, data: d };\n          }\n          return null;\n        });\n        const removeNullValue = filterSelectrowData.filter((d) => d !== null);\n        const data = removeNullValue.map((itm: any) => itm.data);\n        const newSelectedRowsFiltered = removeNullValue.map(\n          (itm: any) => itm.idx\n        );\n        return { newSelectedRowsFiltered, data };\n      }\n\n      if (!isMultipleSelect) {\n        // Single selection mode\n        setSelectedRows([rowIndex]);\n      } else {\n        // Multiple selection mode\n        if (event.shiftKey && lastSelectedRowIndex !== null) {\n          // Shift + Click: Select range between last clicked row and current clicked row\n          const rangeStart = Math.min(lastSelectedRowIndex, rowIndex);\n          const rangeEnd = Math.max(lastSelectedRowIndex, rowIndex);\n          const newSelectedRows: Array<number> = [];\n          for (let i = rangeStart; i <= rangeEnd; i++) {\n            if (!selectedRows.includes(i)) {\n              newSelectedRows.push(i);\n            }\n          }\n\n          let selectedItemsParams: Array<number> = [\n            ...selectedItems,\n            ...newSelectedRows,\n          ];\n\n          setSelectedRows([...selectedRows, ...newSelectedRows]);\n          const selectedRowData = rows.filter((d, idx) =>\n            selectedItemsParams.includes(idx)\n          );\n          const { newSelectedRowsFiltered } =\n            getIndexAndData(selectedRowData);\n\n          setSelectedItems(newSelectedRowsFiltered);\n          // onSelectionChangeRef.current(data, rowIndex);\n        } else if (event.ctrlKey || event.metaKey) {\n          // Ctrl (or Cmd on macOS) + Click: Toggle row selection\n          if (selectedRows.includes(rowIndex) && !freeze) {\n            setSelectedRows(selectedRows.filter((i) => i !== rowIndex));\n            setSelectedItems((d) => {\n              d = d.filter((i) => i !== rowIndex);\n              return d;\n            });\n            let selectedItemsParams: Array<number> = selectedItems.filter(\n              (i) => i !== rowIndex\n            );\n\n            setSelectedItems(selectedItemsParams);\n            // onSelectionChangeRef.current(selectedRowData, rowIndex);\n          } else {\n            setSelectedRows([...selectedRows, rowIndex]);\n            setSelectedItems((d) => {\n              d.push(rowIndex);\n              return d;\n            });\n            let selectedItemsParams: Array<number> = [\n              ...selectedItems,\n              rowIndex,\n            ];\n\n            setSelectedItems(selectedItemsParams);\n            // onSelectionChangeRef.current(selectedRowData, rowIndex);\n          }\n        } else {\n          // Regular click in multiple selection mode: Single click to select a row\n          setSelectedRows([rowIndex]);\n        }\n      }\n      setLastSelectedRowIndex(rowIndex); // Update the last selected index\n    };\n    const handleRowDoubleClick = (\n      rowIndex: any,\n      event: React.MouseEvent<HTMLDivElement, MouseEvent>\n    ) => {\n      const row = rows[rowIndex];\n      if (unSelectable(row)) return;\n      if (!isRowSelectable) return;\n\n\n      let selectedItemsParams: Array<number> = [];\n      if (isMultipleSelect) {\n        selectedItemsParams = [...selectedItems, ...selectedRows];\n      } else {\n        selectedItemsParams = [rowIndex];\n      }\n\n\n      if (selectedItems.includes(rowIndex) && !freeze) {\n        selectedItemsParams = selectedItems.filter((i) => i !== rowIndex);\n        setSelectedItems(selectedItemsParams);\n        onSelectionChangeRef.current([], rowIndex);\n        return;\n      }\n\n      setSelectedItems(selectedItemsParams);\n      onSelectionChangeRef.current([row], rowIndex);\n    };\n    const handleKeyDown = (e: any) => {\n\n      if (e.key === \"ArrowDown\") {\n        e.preventDefault();\n        setSelectedRows((prevIndex: any) => {\n          if (prevIndex[prevIndex.length - 1] === null) return [0];\n          if (prevIndex[prevIndex.length - 1] >= rows.length - 1) {\n            return [rows.length - 1];\n          }\n          const newPrevIndex = prevIndex[prevIndex.length - 1] + 1;\n          const row = document.querySelector(`.row-${newPrevIndex}`);\n          row?.querySelector(\"input\")?.focus();\n\n          row?.scrollIntoView({ block: \"end\", behavior: \"smooth\" });\n          return [newPrevIndex];\n        });\n      } else if (e.key === \"ArrowUp\") {\n        e.preventDefault();\n\n        if (selectedRows[selectedRows.length - 1] === 0) {\n          const input = document.querySelector(\n            inputsearchselector\n          ) as HTMLInputElement;\n          if (input && input.tagName === \"INPUT\") {\n            input?.focus();\n          } else if (input && input.tagName === \"DIV\") {\n            const divInput = document.querySelector(\n              `${inputsearchselector} input`\n            ) as HTMLInputElement;\n\n            divInput?.focus();\n          }\n        }\n\n        setSelectedRows((prevIndex: any) => {\n          if (prevIndex[prevIndex.length - 1] === 0) return [0];\n          const newPrevIndex = prevIndex[prevIndex.length - 1] - 1;\n          const row = document.querySelector(`.row-${newPrevIndex}`);\n\n          row?.scrollIntoView({ block: \"end\", behavior: \"smooth\" });\n          row?.querySelector(\"input\")?.focus();\n          return [newPrevIndex];\n        });\n      }\n\n    };\n    const handleRowKeyDown = (e: any) => {\n      e.stopPropagation()\n\n      if (e.key === \"Enter\" || e.key === \"NumpadEnter\") {\n        e.preventDefault();\n        if (!isRowSelectable) return;\n\n        let selectedItemsParams: Array<number> = [];\n        const rowIndex = selectedRows[selectedRows.length - 1];\n        if (isMultipleSelect) {\n          selectedItemsParams = [...selectedItems, ...selectedRows];\n        } else {\n          selectedItemsParams = [rowIndex];\n        }\n        const row = rows[selectedItemsParams[selectedItemsParams.length - 1]];\n        if (unSelectable(row)) {\n          return;\n        }\n\n        if (selectedItems.includes(rowIndex) && !freeze) {\n          selectedItemsParams = selectedItems.filter((i) => i !== rowIndex);\n          setSelectedItems(selectedItemsParams);\n          onSelectionChangeRef.current([], rowIndex);\n          return;\n        }\n\n        setSelectedItems(selectedItemsParams);\n        onSelectionChangeRef.current([row], rowIndex);\n      } else if (e.key === \"Delete\" || e.key === \"Backspace\") {\n        if (!isRowSelectable) return;\n        const rowIndex = selectedRows[selectedRows.length - 1];\n\n        const selectedRowData = rows.filter((d, idx) =>\n          selectedRows.includes(idx)\n        );\n\n        if (onKeyDownRef?.current) {\n          onKeyDownRef?.current(selectedRowData, e.key, rowIndex);\n        }\n      }\n    }\n    useImperativeHandle(UpwardTableRef, () => ({\n      resetTableSelected: () => {\n        setSelectedRows([0]);\n        setLastSelectedRowIndex(0);\n        setSelectedItems([]);\n        if (rows.length > 0) {\n          const row = document.querySelector(`.row-${0}`);\n          row?.scrollIntoView({ block: \"end\", behavior: \"smooth\" });\n        }\n      },\n      getSelectedIndex: () => {\n        return selectedItems[0];\n      },\n      getSelectedRows: () => {\n        return rows.filter((d, idx) => selectedItems.includes(idx));\n      },\n      getFirstColumn: () => {\n        return rows.filter((d, idx) => selectedItems.includes(idx));\n      },\n      getParentElement: () => {\n        return divRef.current\n      },\n      getSelectedRowsOnClick: () => {\n        return selectedRows[0];\n      },\n      setSelectRows: (indx: number) => {\n        return setSelectedItems([indx])\n      },\n    }));\n\n    const handleRightClick = (event: any, rowIndex: number) => {\n      event.preventDefault();\n      const rowSelected = rows[rowIndex]\n      if (onRightClick) {\n        onRightClick(rowSelected, event)\n      }\n    };\n\n\n\n    return (\n      <div\n        style={{\n          display: \"flex\",\n          justifyContent: \"center\",\n        }}\n        onKeyDown={handleKeyDown}\n      >\n        <div>\n          <div className=\"table-frame-color\">\n            <div\n              style={{\n                display: \"flex\",\n                flexDirection: \"column\",\n                width: `${width - 10}px        `,\n                height: `${height - 135}px`,\n                minHeight: \"270px\"\n              }}\n              className=\"table-frame\"\n            >\n              <div className=\"table-panel\">\n                <div ref={divRef} className={`grid-container `} tabIndex={-1}>\n                  <div\n                    className=\"grid-row grid-header\"\n                    style={{\n                      position: \"sticky\",\n                      zIndex: \"10\",\n                      top: \"-1px\",\n                      background: \"white\",\n                    }}\n                  >\n                    {columns.map((col: any, index: number) => (\n                      <div\n                        key={index}\n                        className={`grid-cell header-cell ${hoveredColumn === index ? `highlight-column` : \"\"\n                          }`} // Add the class if hovered\n                        style={{ width: col.width, height: \"20px\", }}\n                      >\n                        <input\n                          style={{ fontWeight: \"bold\" }}\n                          defaultValue={col.headerName}\n                          readOnly\n                          onChange={(e) => { }}\n                        />\n                        <div\n                          className=\"resize-handle\"\n                          onMouseDown={(e) => startResize(index, e)}\n                          onMouseEnter={(e) => {\n                            e.preventDefault();\n                            handleMouseEnter(index);\n                          }} // On hover\n                          onMouseLeave={(e) => {\n                            e.preventDefault();\n                            handleMouseLeave();\n                          }} // On mouse leave\n                        />\n                      </div>\n                    ))}\n                  </div>\n                  {pages[pageNumber]?.map((row: any, rowIndex: any) => (\n                    <div\n                      className={`grid-row row-${rowIndex}`} // Highlight selected row\n                      key={rowIndex}\n                      onClick={(e) => handleRowClick(rowIndex, e)}\n                      onDoubleClick={(e) => {\n                        // e.stopPropagation()\n\n                        if (_clickTimeout) {\n                          clearTimeout(_clickTimeout);\n                          _setClickTimeout(null);\n                        }\n\n                        const timeoutId: any = setTimeout(() => {\n                          handleRowDoubleClick(rowIndex, e)\n                        }, 200);\n\n                        _setClickTimeout(timeoutId);\n\n\n\n                      }}\n                      onKeyDown={(e) => {\n\n                        // e.stopPropagation()\n\n                        if (_clickTimeout) {\n                          clearTimeout(_clickTimeout);\n                          _setClickTimeout(null);\n                        }\n\n                        const timeoutId: any = setTimeout(() => {\n                          handleRowKeyDown(e)\n                        }, 200);\n\n                        _setClickTimeout(timeoutId);\n\n\n                      }}\n                      onContextMenu={(e) => handleRightClick(e, rowIndex)}\n                    >\n                      {columns.map((col: any, colIndex: number) => (\n                        <div\n                          key={colIndex}\n                          style={{ width: col.width }}\n                          className={`grid-cell ${hoveredColumn === colIndex ? `highlight-column` : \"\"} row-${rowIndex} col-${colIndex}`}\n                        >\n                          <input\n                            value={row[col.field]}\n                            onChange={(e) => { }}\n                            readOnly={dataReadOnly}\n                            className={`${selectedRows.includes(rowIndex)\n                              ? \"selected-row\"\n                              : \"\"\n                              } ${selectedItems.includes(rowIndex)\n                                ? \"selected-items\"\n                                : \"\"\n                              }\n                          ${col.type === \"number\" ? \"number\" : \"text\"}\n                          `}\n                          />\n                          <div\n                            className=\"resize-handle\"\n                            onMouseDown={(e) => {\n                              e.preventDefault();\n                              startResize(colIndex, e);\n                            }}\n                            onMouseEnter={(e) => {\n                              e.preventDefault();\n                              handleMouseEnter(colIndex);\n                            }} // On hover\n                            onMouseLeave={(e) => {\n                              e.preventDefault();\n                              handleMouseLeave();\n                            }} // On mouse leave\n                          />\n                        </div>\n                      ))}\n                    </div>\n                  ))}\n                </div>\n              </div>\n            </div>\n\n            {isLoading && <div className=\"table-loading\">\n              <div className=\"loader\"></div>\n            </div>}\n          </div>\n          <div className=\"table-panel-footer\" >\n            <div>Records : {rows?.length}</div>\n            <div><Pagination count={pages.length} onChange={(e, value) => {\n              setPageNumber(value - 1)\n            }} />\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n);\nfunction formatArrayIntoChunks(arr: Array<any>, chunkSize = 100) {\n  let result = [];\n\n  for (let i = 0; i < arr.length; i += chunkSize) {\n    // Use slice to create chunks of 'chunkSize'\n    result.push(arr.slice(i, i + chunkSize));\n  }\n  return result;\n}\nexport { UpwardTable, };\n","import { useEffect, useRef, useState, useId } from \"react\";\nimport \"../style/upwardtablemodel.css\";\nimport { TextInput } from \"../components/UpwardFields\";\nimport { UpwardTable } from \"../components/UpwardTable\";\nimport { throttle } from \"lodash\";\nimport { AxiosInstance } from \"axios\";\nimport { User } from \"../components/AuthContext\";\nimport { useMutation } from \"react-query\";\nimport { wait } from \"../lib/wait\";\nimport { IconButton, Modal } from '@mui/material'\nimport CloseIcon from \"@mui/icons-material/Close\";\n\n\ninterface UseUpwardTableModalProps {\n  myAxios: AxiosInstance;\n  user: User | null;\n  column: Array<any>;\n  link: {\n    url: string;\n    queryUrlName: string;\n  };\n  onSelectionChange: (selectedRow: any) => void;\n  onModalClose?: () => void;\n  responseDataKey: string;\n}\nexport const useUpwardTableModal = ({\n  myAxios,\n  user,\n  column,\n  link,\n  onSelectionChange,\n  responseDataKey,\n  onModalClose = () => { },\n}: UseUpwardTableModalProps) => {\n  const id = useId();\n  const inputSearchRef = useRef<HTMLInputElement>(null);\n  const tableRef = useRef<any>(null);\n  const parentRef = useRef<any>(null);\n  const [show, setShowModal] = useState(false);\n  const [rows, setRows] = useState([]);\n  const { isLoading, mutate } = useMutation({\n    mutationKey: id,\n    mutationFn: async (variable: any) =>\n      await myAxios.get(\n        `${link?.url}?${link?.queryUrlName}=${variable.search}`,\n        {\n          headers: {\n            Authorization: `Bearer ${user?.accessToken}`,\n          },\n        }\n      ),\n    onSuccess: (res) => {\n      const response = res as any;\n      setRows(response.data[responseDataKey]);\n    },\n  });\n  const performSearch = (query: string) => {\n    if (query === \"\") {\n      mutate({ search: query });\n    }\n  };\n  // Throttle the search function to limit it to once every 500ms\n  const throttledSearch = throttle((query) => performSearch(query), 500)\n\n  const openModal = (search: string) => {\n    mutate({ search: search });\n    setShowModal(true);\n    setTimeout(() => {\n      if (inputSearchRef.current) {\n        inputSearchRef.current.value = search;\n      }\n      inputSearchRef.current?.focus();\n    }, 150);\n  };\n  const closeModal = () => {\n    setShowModal(false);\n    onModalClose();\n  };\n\n  const width = 460;\n  const height = 530;\n\n  useEffect(() => {\n    if (show && parentRef.current) {\n      wait(1050).then(() => {\n        parentRef.current?.focus();\n      })\n    }\n  }, [show, parentRef]);\n\n  const ModalComponent = (\n    <Modal\n      open={show}\n      onClose={() => {\n        setShowModal(false);\n      }}\n      aria-labelledby=\"modal-modal-title\"\n      aria-describedby=\"modal-modal-description\"\n    >\n      <div style={{\n        position: \"absolute\",\n        top: \"50%\",\n        left: \"50%\",\n        transform: \"translate(-50%, -50%)\",\n        width: \"auto\",\n        background: \"#fff\",\n        paddingTop: \"30px\",\n        paddingBottom: \"20px\",\n        paddingLeft: \"10px\",\n        paddingRight: \"10px\"\n      }}>\n        <div >\n          <TextInput\n            label={{ style: { display: \"none\" } }}\n            input={{\n              className: \"search-input-up-on-key-down\",\n              type: \"text\",\n              style: { width: \"100%\", marginBottom: \"20px\" },\n              onChange: (e) => {\n                e.preventDefault();\n                throttledSearch(e.currentTarget.value);\n              },\n              onKeyDown: (e) => {\n                if (e.key === \"Enter\" || e.key === \"NumpadEnter\") {\n                  e.preventDefault();\n                  mutate({ search: (e.target as any).value });\n                }\n                if (e.key === \"ArrowDown\") {\n                  e.preventDefault();\n                  const datagridview = tableRef.current.getParentElement().querySelector(\n                    `.grid-container .row-0.col-0 input`\n                  ) as HTMLDivElement;\n                  setTimeout(() => {\n                    if (datagridview)\n                      datagridview.focus();\n                  }, 100)\n                }\n              },\n            }}\n            inputRef={inputSearchRef}\n          />\n          <UpwardTable\n            ref={tableRef}\n            rows={rows}\n            column={column.filter((itm) => !itm.hide)}\n            width={width}\n            height={height}\n            dataReadOnly={true}\n            onSelectionChange={onSelectionChange}\n          />\n\n          <IconButton\n            style={{\n              position: \"absolute\",\n              top: \"5px\",\n              right: \"10px\",\n            }}\n            aria-label=\"search-client\"\n            onClick={closeModal}\n          >\n            <CloseIcon style={{ fontSize: \"15px\" }} />\n          </IconButton>\n\n\n        </div>\n      </div>\n\n    </Modal>\n\n  );\n\n  return {\n    Modal: ModalComponent,\n    openModal,\n    closeModal,\n    isLoading,\n  };\n};\n","import React, { useContext, useState, useRef, useEffect, useCallback } from \"react\";\nimport {\n  Box,\n  Typography,\n  Button,\n  IconButton,\n  Modal,\n  MenuItem,\n  Menu,\n} from \"@mui/material\";\nimport AddIcon from \"@mui/icons-material/Add\";\nimport { useMutation, useQuery } from \"react-query\";\nimport Swal from \"sweetalert2\";\nimport SaveIcon from \"@mui/icons-material/Save\";\nimport { AuthContext } from \"../../../../components/AuthContext\";\nimport PersonSearchIcon from \"@mui/icons-material/PersonSearch\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport { flushSync } from \"react-dom\";\nimport { LoadingButton } from \"@mui/lab\";\nimport RestartAltIcon from \"@mui/icons-material/RestartAlt\";\nimport DownloadIcon from \"@mui/icons-material/Download\";\nimport {\n  codeCondfirmationAlert,\n  saveCondfirmationAlert,\n} from \"../../../../lib/confirmationAlert\";\nimport DriveFolderUploadIcon from \"@mui/icons-material/DriveFolderUpload\";\nimport { DisplayFile, checkFile } from \"../Claims/Claims\";\nimport ReactDOMServer from \"react-dom/server\";\nimport { grey } from \"@mui/material/colors\";\nimport { useUpwardTableModal } from \"../../../../hooks/useUpwardTableModal\";\nimport { TextAreaInput, TextInput } from \"../../../../components/UpwardFields\";\nimport AccountBalanceIcon from '@mui/icons-material/AccountBalance';\nimport { NumericFormat } from \"react-number-format\";\nimport { format } from \"date-fns\";\nimport PageHelmet from \"../../../../components/Helmet\";\nimport { wait } from \"@testing-library/user-event/dist/utils\";\nimport SearchIcon from '@mui/icons-material/Search';\nimport { DataGridViewReact } from \"../../../../components/DataGridViewReact\";\nimport { Loading } from \"../../../../components/Loading\";\n\n\n\nexport const reducer = (state: any, action: any) => {\n  switch (action.type) {\n    case \"UPDATE_FIELD\":\n      return {\n        ...state,\n        [action.field]: action.value,\n      };\n    default:\n      return state;\n  }\n};\nexport const pdcColumn = [\n  { key: \"Check_No\", label: \"Check No.\", width: 150 },\n  { key: \"Check_Date\", label: \"Check Date\", width: 150 },\n  { key: \"Check_Amnt\", label: \"Amount\", width: 150, type: \"number\" },\n  { key: \"BankName\", label: \"Bank\", width: 200 },\n  { key: \"Branch\", label: \"Branch\", width: 200 },\n  {\n    key: \"Check_Remarks\",\n    label: \"Checked Remarks\",\n    width: 350,\n  },\n  { key: \"Deposit_Slip\", label: \"Deposit Slip\", width: 150 },\n  { key: \"DateDeposit\", label: \"Date Deposit\", width: 150 },\n  { key: \"OR_No\", label: \"OR Num\", width: 150 },\n  { key: \"BankCode\", label: \"Bank Code\", width: 150, hide: true },\n];\nexport const pdcSearchColumn = [\n  { field: \"Date\", headerName: \"Date Received\", width: 160 },\n  { field: \"Ref_No\", headerName: \"Ref No.\", width: 160 },\n  {\n    field: \"Name\",\n    headerName: \"Name\",\n    flex: 1,\n  },\n];\nexport const pdcBanksColumn = [\n  { field: \"Bank_Code\", headerName: \"Code\", width: 130 },\n  { field: \"Bank\", headerName: \"Bank Name\", flex: 1 },\n];\n\nexport default function PostDateChecks() {\n  const tableRef = useRef<any>(null);\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\n  const open = Boolean(anchorEl);\n  const handleClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n    setAnchorEl(event.currentTarget);\n  };\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n  const [isDragging, setIsDragging] = useState(false);\n  const [selectedFiles, setSelectedFiles] = useState<Array<File>>([]);\n  const [openPdcInputModal, setOpenPdcInputModal] = useState(false);\n  const [showModal, setShowModal] = useState(false);\n\n\n\n  const searchInputRef = useRef<HTMLInputElement>(null);\n\n  const [hasSelectedRow, setHasSelectedRow] = useState(null)\n  const [pdcMode, setPdcMode] = useState('')\n\n  const { myAxios, user } = useContext(AuthContext);\n  const searchRef = useRef<HTMLInputElement>(null);\n\n  // pdc form save button\n  const fileInputRef = useRef<HTMLInputElement>(null);\n  const savePDCButtonRef = useRef<HTMLButtonElement>(null);\n\n\n  //check modal refs\n\n  const checkModalSaveButton = useRef<HTMLButtonElement>(null);\n  const checkModalSaveButtonActionRef = useRef<any>(null);\n  // search modal auto focus on load\n\n\n  // modal \n  const _checknoRef = useRef<HTMLInputElement>(null);\n  const _bankRef = useRef<HTMLInputElement>(null);\n  const _branchRef = useRef<HTMLInputElement>(null);\n  const _remarksRef = useRef<HTMLTextAreaElement>(null);\n  const _chekdateRef = useRef<HTMLInputElement>(null);\n  const _amountRef = useRef<HTMLInputElement>(null);\n  const _checkcountRef = useRef<HTMLInputElement>(null);\n  const _bankCode = useRef('');\n  const _slipCodeRef = useRef('');\n  const _slipDateRef = useRef('');\n  const _checkOR = useRef('');\n\n  const addRefButton = useRef<HTMLButtonElement>(null);\n\n\n  const subRefNoRef = useRef('');\n  const PNoRef = useRef('');\n  const subAccountRef = useRef('');\n\n  const refNoRef = useRef<HTMLInputElement>(null);\n  const dateRef = useRef<HTMLInputElement>(null);\n  const remakrsRef = useRef<HTMLTextAreaElement>(null);\n  const pnRef = useRef<HTMLInputElement>(null);\n  const branchRef = useRef<HTMLInputElement>(null);\n  const clientnameRef = useRef<HTMLTextAreaElement>(null);\n\n\n  const { isLoading: newRefNumberLoading, refetch: refetchNewRefNumber } =\n    useQuery({\n      queryKey: \"new-ref-number\",\n      queryFn: async () => {\n        return await myAxios.get(\"/task/accounting/pdc-new-ref-number\", {\n          headers: {\n            Authorization: `Bearer ${user?.accessToken}`,\n          },\n        });\n      },\n      refetchOnWindowFocus: false,\n      onSuccess: (res) => {\n        const response = res as any;\n        wait(100).then(() => {\n          subRefNoRef.current = response.data.RefNo[0].pdcID\n          if (refNoRef.current) {\n            refNoRef.current.value = response.data.RefNo[0].pdcID\n          }\n        })\n\n      },\n    });\n\n  const { mutate, isLoading: loadingAddNew } = useMutation({\n    mutationKey: 'update-pdc',\n    mutationFn: async (variables: any) => {\n      if (pdcMode === \"update\") {\n        delete variables.mode;\n        return await myAxios.post(\"/task/accounting/update-pdc\", variables, {\n          headers: {\n            Authorization: `Bearer ${user?.accessToken}`,\n          },\n        });\n      }\n      delete variables.mode;\n      return await myAxios.post(\"/task/accounting/add-pdc\", variables, {\n        headers: {\n          Authorization: `Bearer ${user?.accessToken}`,\n        },\n      });\n    },\n    onSuccess: (res) => {\n      if (res.data.success) {\n        resetPDC()\n        return Swal.fire({\n          position: \"center\",\n          icon: \"success\",\n          title: res.data.message,\n          showConfirmButton: false,\n          timer: 1500,\n        });\n      }\n\n      Swal.fire({\n        position: \"center\",\n        icon: \"error\",\n        title: res.data.message,\n        showConfirmButton: false,\n        timer: 1500,\n      });\n    },\n  });\n  //selecte search\n\n  const { mutate: mutateSelectedSearch, isLoading: isLoadingSelectedSearch } =\n    useMutation({\n      mutationKey: 'get-search-pdc-check',\n      mutationFn: async (variables: any) =>\n        await myAxios.post(\"/task/accounting/get-search-pdc-check\", variables, {\n          headers: {\n            Authorization: `Bearer ${user?.accessToken}`,\n          },\n        }),\n      onSuccess: async (res) => {\n        if (!res?.data.success) {\n          return alert(`Error : ${res?.data.message}`);\n        }\n\n        const response = res as any;\n        const Ref_No = response.data.getSearchPDCCheck[0].Ref_No;\n        if (response.data.upload[0]) {\n          const uploadFiles = JSON.parse(response.data.upload[0]?.upload);\n          const newObjContainerBasic = await formatDataToDocument(\n            uploadFiles,\n            `${process.env.REACT_APP_IMAGE_URL}pdc/${Ref_No}`\n          );\n          const fileSelected = await Promise.all(newObjContainerBasic);\n          setSelectedFiles(fileSelected);\n        }\n        async function formatDataToDocument(\n          dataDocument: Array<any>,\n          url: string\n        ) {\n          const newObjContainer: Array<any> = [];\n          for (let index = 0; index < dataDocument.length; index++) {\n            const basicItem = dataDocument[index];\n            const mainURL = `${url}/${basicItem.uniqueFilename}`;\n            const response = await fetch(mainURL);\n            const blob = await response.blob();\n            const file = new File([blob], basicItem.fileName, {\n              type: basicItem.fileType,\n            });\n            const reader = new FileReader();\n            newObjContainer.push(\n              new Promise((resolve, reject) => {\n                reader.onload = function (event) {\n                  resolve(file);\n                };\n                reader.onerror = function (event) {\n                  reject(new Error(\"Error reading file: \" + file.name));\n                };\n                reader.readAsDataURL(file);\n              })\n            );\n          }\n          return newObjContainer;\n        }\n\n        tableRef.current.setDataFormated(response.data.getSearchPDCCheck)\n\n        if (refNoRef.current) {\n          refNoRef.current.value = response.data.getSearchPDCCheck[0].Ref_No\n        }\n        if (clientnameRef.current) {\n          clientnameRef.current.value = response.data.getSearchPDCCheck[0].Name\n        }\n        if (dateRef.current) {\n          dateRef.current.value = response.data.getSearchPDCCheck[0].Date\n        }\n        if (pnRef.current) {\n          pnRef.current.value = response.data.getSearchPDCCheck[0].PNo\n        }\n        if (branchRef.current) {\n          branchRef.current.value = response.data.getSearchPDCCheck[0].Acronym\n        }\n        if (remakrsRef.current) {\n          remakrsRef.current.value = response.data.getSearchPDCCheck[0].Remarks\n        }\n        PNoRef.current = response.data.getSearchPDCCheck[0].IDNo\n        subAccountRef.current = response.data.getSearchPDCCheck[0].sub_account\n\n\n\n      },\n    });\n\n  // policy ids search table modal\n  const {\n    Modal: ModalSearchPdcIDs,\n    closeModal: closeModalSearchPdcIDs,\n    openModal: openModalSearchPdcIDs,\n    isLoading: isLoadingModalSearchPdcIDs,\n  } = useUpwardTableModal({\n    myAxios,\n    user,\n    link: {\n      url: \"/task/accounting/search-pdc-policy-id\",\n      queryUrlName: \"searchPdcPolicyIds\",\n    },\n    column: [\n      { field: \"Type\", headerName: \"Type\", width: 130 },\n      { field: \"IDNo\", headerName: \"ID No.\", width: 200 },\n      { field: \"chassis\", headerName: \"Chassis No.\", width: 200, hide: true },\n      {\n        field: \"Name\",\n        headerName: \"Name\",\n        width: 350,\n      },\n      {\n        field: \"ID\",\n        headerName: \"ID\",\n        width: 300,\n        hide: true,\n      },\n      {\n        field: \"client_id\",\n        headerName: \"client_id\",\n        width: 200,\n        hide: true,\n      },\n    ],\n    onSelectionChange: (selectedRow: any) => {\n      if (selectedRow.length > 0) {\n\n        wait(100).then(() => {\n          PNoRef.current = selectedRow[0].client_id\n          subAccountRef.current = selectedRow[0].sub_account\n          if (pnRef.current) {\n            pnRef.current.value = selectedRow[0].IDNo\n          }\n          if (clientnameRef.current) {\n            clientnameRef.current.value = selectedRow[0].Name\n          }\n          if (branchRef.current) {\n            branchRef.current.value = selectedRow[0].Acronym\n          }\n          if (selectedRow[0].Remarks && selectedRow[0].Remarks !== '') {\n            if (remakrsRef.current) {\n              remakrsRef.current.value = selectedRow[0].Remarks\n            }\n          }\n\n        })\n\n        closeModalSearchPdcIDs();\n\n      }\n    },\n\n    responseDataKey: \"clientsId\",\n  });\n\n  // bank search table modal\n  const {\n    Modal: ModalSearchBanks,\n    closeModal: closeModalSearchBanks,\n    openModal: openModalSearchBanks,\n    isLoading: isLoadingModalSearchbanks,\n  } = useUpwardTableModal({\n    myAxios,\n    user,\n    link: {\n      url: \"/task/accounting/search-pdc-banks\",\n      queryUrlName: \"searchPdcBanks\",\n    },\n    column: [\n      { field: \"Bank_Code\", headerName: \"Code\", width: 100 },\n      { field: \"Bank\", headerName: \"Bank Name\", width: 350 },\n    ],\n    onSelectionChange: (selectedRow: any) => {\n      if (selectedRow.length > 0) {\n        setTimeout(() => {\n          _bankCode.current = selectedRow[0].Bank_Code\n          if (_bankRef.current) {\n            _bankRef.current.value = selectedRow[0].Bank\n          }\n        }, 100)\n\n        closeModalSearchBanks();\n        setOpenPdcInputModal(true);\n        setTimeout(() => {\n          _branchRef.current?.focus()\n        }, 100);\n      }\n    },\n    onModalClose: () => {\n      setTimeout(() => {\n        setOpenPdcInputModal(true);\n      }, 100);\n    },\n    responseDataKey: \"pdcBanks\",\n  });\n  // pdc search table modal\n  const {\n    Modal: UpwardPDCModal,\n    closeModal: closeUpwardPDCModal,\n    openModal: openUpwardPDCModal,\n    isLoading: isLoadingModalSearchPDC,\n  } = useUpwardTableModal({\n    myAxios,\n    user,\n    column: [\n      { field: \"Date\", headerName: \"Date Received\", width: 90 },\n      { field: \"Ref_No\", headerName: \"Ref No.\", width: 80 },\n      {\n        field: \"Name\",\n        headerName: \"Name\",\n        width: 320,\n      },\n    ],\n    link: {\n      url: \"/task/accounting/search-pdc\",\n      queryUrlName: \"searchPDCInput\",\n    },\n    onSelectionChange: (selectedRow: any) => {\n      if (selectedRow.length > 0) {\n        mutateSelectedSearch({ ref_no: selectedRow[0].Ref_No });\n        setPdcMode('update')\n        closeUpwardPDCModal();\n        if (searchRef.current) {\n          searchRef.current?.focus();\n        }\n      }\n    },\n    responseDataKey: \"searchPDC\",\n  });\n\n  const handleOnSave = useCallback(async (e: any) => {\n    const pdcTableData = tableRef.current.getDataFormatted()\n\n    if (pnRef.current && pnRef.current.value === \"\") {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: \"Please provide loan information!\",\n        timer: 1500,\n      }).then(() => {\n        setTimeout(() => {\n          pnRef.current?.click();\n        }, 350);\n      });\n    }\n    if (pdcTableData.length <= 0) {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: \"Please provide entry!\",\n        timer: 1500,\n      }).then(() => {\n        setOpenPdcInputModal(true);\n      });\n    }\n\n    const filePromises: Array<any> = [];\n    function fileTransfer(filePromises: Array<any>) {\n      const files = selectedFiles;\n      if (files.length > 0) {\n        for (let i = 0; i < files.length; i++) {\n          const file = files[i];\n          const reader = new FileReader();\n          filePromises.push(\n            new Promise((resolve, reject) => {\n              reader.onload = function (event) {\n                resolve({\n                  datakey: \"pdc_file\",\n                  fileName: file.name,\n                  fileContent: event.target?.result,\n                  fileType: file.type,\n                  file,\n                });\n              };\n              reader.onerror = function (event) {\n                reject(new Error(\"Error reading file: \" + file.name));\n              };\n              reader.readAsDataURL(file);\n            })\n          );\n        }\n      }\n    }\n    fileTransfer(filePromises);\n    const fileToSave = await Promise.all(filePromises);\n    const stateSubmited = {\n      Ref_No: refNoRef.current?.value,\n      PNo: pnRef.current?.value,\n      IDNo: PNoRef.current,\n      Date: dateRef.current?.value,\n      Name: clientnameRef.current?.value,\n      Remarks: remakrsRef.current?.value,\n      Branch: branchRef.current?.value,\n      checks: JSON.stringify(pdcTableData),\n    };\n    if (pdcMode === \"update\") {\n      codeCondfirmationAlert({\n        isUpdate: true,\n        cb: (userCodeConfirmation) => {\n          mutate({ ...stateSubmited, userCodeConfirmation, fileToSave });\n        },\n      });\n    } else {\n      saveCondfirmationAlert({\n        isConfirm: () => {\n          mutate({ ...stateSubmited, fileToSave });\n        },\n      });\n    }\n  }, [mutate, selectedFiles, pdcMode])\n\n  const handleDragLeave = (e: React.DragEvent<HTMLDivElement>) => {\n    e.preventDefault();\n    setIsDragging(false);\n  };\n  const handleDragEnter = (e: React.DragEvent<HTMLDivElement>) => {\n    e.preventDefault();\n    setIsDragging(true);\n  };\n  const handleDrop = (e: React.DragEvent<HTMLDivElement>) => {\n    e.preventDefault();\n    const fileList = e.dataTransfer.files;\n    const files = Array.from(fileList);\n    const newFiles = [...selectedFiles, ...files];\n    setIsDragging(false);\n    if (checkFile(newFiles)) {\n      fileInputRef.current?.click();\n      return alert(\"file is not valid Extention!\");\n    } else {\n      setSelectedFiles(newFiles);\n    }\n  };\n  const clickPDCReceipt = () => {\n    const pdcTableData = tableRef.current.getDataFormatted()\n\n    flushSync(() => {\n      const state = {\n        Ref_No: refNoRef.current?.value,\n        PNo: pnRef.current?.value,\n        IDNo: PNoRef.current,\n        Date: dateRef.current?.value,\n        Name: clientnameRef.current?.value,\n        Remarks: remakrsRef.current?.value,\n        Branch: branchRef.current?.value,\n      };\n\n      localStorage.removeItem(\"printString\");\n      localStorage.setItem(\"dataString\", JSON.stringify(pdcTableData));\n      localStorage.setItem(\"paper-width\", \"8.5in\");\n      localStorage.setItem(\"paper-height\", \"11in\");\n      localStorage.setItem(\"module\", \"pdc\");\n      localStorage.setItem(\"state\", JSON.stringify(state));\n      localStorage.setItem(\n        \"column\",\n        JSON.stringify([\n          { datakey: \"Check_No\", header: \"CHECK NO\", width: \"80px\" },\n          { datakey: \"Check_Date\", header: \"DATE\", width: \"130px\" },\n          { datakey: \"BankName\", header: \"BANK\", width: \"240px\" },\n          { datakey: \"Check_Amnt\", header: \"AMOUNT\", width: \"70px\" },\n          { datakey: \"SEQ\", header: \"SEQ\", width: \"30px\" },\n        ])\n      );\n\n      localStorage.setItem(\n        \"title\",\n        user?.department === \"UMIS\"\n          ? \"UPWARD MANAGEMENT INSURANCE SERVICES\\n Post Date Checks Receipt\"\n          : \"UPWARD CONSULTANCY SERVICES AND MANAGEMENT INC.\\n Post Date Checks Receipt\"\n      );\n    });\n    window.open(\"/dashboard/print\", \"_blank\");\n  };\n  const clickPDCLabeling = () => {\n    let printString = () => {\n      return (\n        <div>\n          <p\n            style={{\n              color: \"#d1d5db\",\n              fontSize: \"11px\",\n              textAlign: \"center\",\n              padding: 0,\n              marginTop: \"8px\",\n              marginBottom: 0,\n            }}\n          >\n            UCSMI\n          </p>\n          <p\n            style={{\n              color: \"#d1d5db\",\n              fontSize: \"11px\",\n              textAlign: \"center\",\n              padding: 0,\n              margin: 0,\n            }}\n          >\n            {clientnameRef.current?.value}\n          </p>\n          <p\n            style={{\n              color: \"#d1d5db\",\n              fontSize: \"11px\",\n              textAlign: \"center\",\n              padding: 0,\n              margin: 0,\n            }}\n          >\n            {PNoRef.current}\n          </p>\n          <p\n            style={{\n              color: \"#d1d5db\",\n              fontSize: \"11px\",\n              textAlign: \"center\",\n              padding: 0,\n              margin: \"20px\",\n            }}\n          >\n            {refNoRef.current?.value}\n          </p>\n        </div>\n      );\n    };\n\n    flushSync(() => {\n      const elementString = ReactDOMServer.renderToString(printString());\n      localStorage.setItem(\"printString\", elementString);\n      localStorage.removeItem(\"dataString\");\n      localStorage.setItem(\"paper-width\", \"8.5in\");\n      localStorage.setItem(\"paper-height\", \"11in\");\n    });\n    window.open(\"/dashboard/print\", \"_blank\");\n  };\n\n  function resetPDC() {\n    setPdcMode('')\n    tableRef.current.setSelectedRow(null)\n    tableRef.current.setData([])\n    refetchNewRefNumber()\n\n    if (dateRef.current) {\n      dateRef.current.value = format(new Date(), \"yyyy-MM-dd\")\n    }\n    if (remakrsRef.current) {\n      remakrsRef.current.value = ''\n    }\n    if (pnRef.current) {\n      pnRef.current.value = ''\n    }\n    if (branchRef.current) {\n      branchRef.current.value = ''\n    }\n    if (clientnameRef.current) {\n      clientnameRef.current.value = ''\n    }\n\n\n\n  }\n  function formatNumber(num: number) {\n    return (num || 0).toLocaleString(\"en-US\", {\n      minimumFractionDigits: 2,\n      maximumFractionDigits: 2,\n    })\n  }\n  function handleCheckDetailsSave() {\n\n    function incrementStringNumbers(\n      str: string,\n      increment: number\n    ) {\n      let num = parseInt(str);\n      num = num + increment;\n      return num.toString().padStart(str.length, \"0\");\n    }\n    function incrementDate(dateString: any, i: number) {\n      const currentDate = new Date(\n        dateString\n      );\n      currentDate.setMonth(currentDate.getMonth() + i);\n\n      return format(currentDate, 'yyyy-MM-dd')\n    }\n    function isValidDate(dateString: string): boolean {\n      const date = new Date(dateString);\n      return date instanceof Date && !isNaN(date.getTime());\n    }\n\n    if (\n      _checknoRef.current &&\n      _bankRef.current &&\n      _branchRef.current &&\n      _remarksRef.current &&\n      _chekdateRef.current &&\n      _amountRef.current &&\n      _checkcountRef.current\n    ) {\n\n\n      const tableRows = tableRef.current.getDataFormatted()\n      const selectedIndex = tableRef.current.getSelectedRow()\n\n      const filteredChecks = tableRows.filter((itm: any) => {\n        return _checknoRef.current && _checknoRef.current.value === itm.Check_No\n      })\n\n\n      if (filteredChecks.length > 0 && selectedIndex === null) {\n        alert('check no. is already exist!')\n        _checknoRef.current.focus()\n        return\n      }\n      if (_checknoRef.current.value === '') {\n        alert('check no. is required!')\n        _checknoRef.current.focus()\n        return\n      } else if (_bankRef.current.value === '') {\n        alert('bank is required!')\n        _bankRef.current.focus()\n        return\n      } else if (_branchRef.current.value === '') {\n        alert('branch is required!')\n        _branchRef.current.focus()\n        return\n      } else if (!isValidDate(_chekdateRef.current.value)) {\n        alert('invalid date!')\n        _chekdateRef.current.focus()\n        return\n      } else if (parseFloat(_amountRef.current.value.replace(/,/g, '')) <= 0) {\n        alert('amount must be greater than 0!')\n        _amountRef.current.focus()\n        return\n      }\n\n\n\n      if (\n        _checknoRef.current &&\n        _bankRef.current &&\n        _branchRef.current &&\n        _remarksRef.current &&\n        _chekdateRef.current &&\n        _amountRef.current &&\n        _checkcountRef.current\n      ) {\n\n\n\n        if (selectedIndex) {\n          const selectedRow = tableRef.current.getData()\n          selectedRow[selectedIndex][0] = _checknoRef.current.value\n          selectedRow[selectedIndex][1] = _chekdateRef.current.value\n          selectedRow[selectedIndex][2] = _amountRef.current.value\n          selectedRow[selectedIndex][3] = _bankRef.current.value\n          selectedRow[selectedIndex][4] = _branchRef.current.value\n          selectedRow[selectedIndex][5] = _remarksRef.current.value\n          selectedRow[selectedIndex][6] = _slipCodeRef.current\n          selectedRow[selectedIndex][7] = _slipDateRef.current\n          selectedRow[selectedIndex][8] = _checkOR.current\n          selectedRow[selectedIndex][9] = _bankCode.current\n          tableRef.current.setData(selectedRow)\n          tableRef.current.setSelectedRow(null)\n          setHasSelectedRow(null)\n        } else {\n          const newData: any = []\n          for (\n            let i = 0;\n            i < parseInt(_checkcountRef.current.value);\n            i++\n          ) {\n            const data: any = {\n              Check_No: incrementStringNumbers(\n                _checknoRef.current.value,\n                i\n              ),\n              Check_Date: incrementDate(_chekdateRef.current.value, i),\n              Check_Amnt: _amountRef.current.value,\n              BankName: _bankRef.current.value,\n              BankCode: _bankCode.current,\n              Branch: _branchRef.current.value,\n              Check_Remarks: _remarksRef.current.value,\n              Deposit_Slip: _slipCodeRef.current,\n              DateDeposit: _slipDateRef.current,\n              OR_No: _checkOR.current,\n            };\n            newData.push(data)\n          }\n          tableRef.current.setDataFormated(newData)\n\n        }\n      }\n\n\n\n      setOpenPdcInputModal(false);\n    }\n\n  }\n  useEffect(() => {\n    const handleKeyDown = (event: any) => {\n      if ((event.ctrlKey || event.metaKey) && event.key === 's') {\n        event.preventDefault();\n        handleOnSave(event);\n      }\n    };\n\n    window.addEventListener('keydown', handleKeyDown);\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [handleOnSave]);\n\n  const isDisableField = pdcMode === \"\";\n\n\n\n\n  return (\n    <>\n      <PageHelmet title=\"PDC\" />\n      {(loadingAddNew ||\n        isLoadingSelectedSearch) && <Loading />}\n      <div\n        style={{\n          width: \"100%\",\n          height: \"100%\",\n          flex: 1,\n          background: \"red\",\n          padding: \"10px\",\n          backgroundColor: \"#F1F1F1\",\n\n        }}\n      >\n\n        {ModalSearchBanks}\n        {UpwardPDCModal}\n        {ModalSearchPdcIDs}\n        <Box\n          sx={(theme) => ({\n            display: \"flex\",\n            alignItems: \"center\",\n            columnGap: \"20px\",\n            [theme.breakpoints.down(\"sm\")]: {\n              flexDirection: \"column\",\n              alignItems: \"flex-start\",\n              flex: 1,\n              marginBottom: \"15px\",\n            },\n          })}\n        >\n          <div\n            style={{\n              display: \"flex\",\n              alignItems: \"center\",\n              columnGap: \"5px\",\n              marginBottom: \"15px\",\n            }}\n          >\n            {isLoadingModalSearchPDC ? (\n              <LoadingButton loading={isLoadingModalSearchPDC} />\n            ) : (\n              <TextInput\n                label={{\n                  title: \"Search: \",\n                  style: {\n                    fontSize: \"12px\",\n                    fontWeight: \"bold\",\n                    width: \"50px\",\n                  },\n                }}\n                input={{\n                  className: \"search-input-up-on-key-down\",\n                  type: \"search\",\n                  onKeyDown: (e) => {\n                    if (e.key === \"Enter\" || e.key === \"NumpadEnter\") {\n                      e.preventDefault();\n                      openUpwardPDCModal(e.currentTarget.value);\n                    }\n                  },\n                  style: { width: \"500px\" },\n                }}\n\n                icon={<SearchIcon sx={{ fontSize: \"18px\" }} />}\n                onIconClick={(e) => {\n                  e.preventDefault()\n                  if (searchInputRef.current)\n                    openUpwardPDCModal(searchInputRef.current.value);\n\n                }}\n                inputRef={searchInputRef}\n              />\n            )}\n            {pdcMode === \"\" && (\n              <Button\n                sx={{\n                  height: \"30px\",\n                  fontSize: \"11px\",\n                }}\n                variant=\"contained\"\n                startIcon={<AddIcon sx={{ width: 15, height: 15 }} />}\n                id=\"entry-header-save-button\"\n                color=\"primary\"\n                onClick={() => {\n\n                  setPdcMode('add')\n                }}\n              >\n                New\n              </Button>\n            )}\n            <LoadingButton\n              sx={{\n                height: \"30px\",\n                fontSize: \"11px\",\n              }}\n              ref={savePDCButtonRef}\n              id=\"save-entry-header\"\n              color=\"success\"\n              variant=\"contained\"\n              type=\"submit\"\n              onClick={handleOnSave}\n              disabled={pdcMode === \"\"}\n              loading={loadingAddNew}\n              startIcon={<SaveIcon sx={{ width: 15, height: 15 }} />}\n            >\n              Save\n            </LoadingButton>\n            {(pdcMode === \"add\" || pdcMode === \"update\") && (\n              <Button\n                sx={{\n                  height: \"30px\",\n                  fontSize: \"11px\",\n                }}\n                variant=\"contained\"\n                startIcon={<CloseIcon sx={{ width: 15, height: 15 }} />}\n                onClick={() => {\n                  Swal.fire({\n                    title: \"Are you sure?\",\n                    text: \"You won't be able to revert this!\",\n                    icon: \"warning\",\n                    showCancelButton: true,\n                    confirmButtonColor: \"#3085d6\",\n                    cancelButtonColor: \"#d33\",\n                    confirmButtonText: \"Yes, cancel it!\",\n                  }).then((result) => {\n                    if (result.isConfirmed) {\n                      resetPDC()\n                    }\n                  });\n                }}\n                color=\"error\"\n              >\n                Cancel\n              </Button>\n            )}\n            <Button\n              sx={{\n                height: \"30px\",\n                fontSize: \"11px\",\n              }}\n              disabled={pdcMode === \"\"}\n              variant=\"contained\"\n              startIcon={<AddIcon sx={{ width: 15, height: 15 }} />}\n              onClick={() => {\n                flushSync(() => {\n                  setOpenPdcInputModal(true);\n                });\n\n                wait(100).then(() => {\n                  const tableRows = tableRef.current.getDataFormatted()\n                  const getLastCheck_No: any = tableRows[tableRows.length - 1];\n                  if (_checknoRef.current) {\n                    _checknoRef.current.value = incrementCheckNo(\n                      getLastCheck_No?.Check_No\n                    );\n                  }\n\n                  tableRef.current.setSelectedRow(null)\n                  setHasSelectedRow(null)\n                  _checknoRef.current?.focus();\n                })\n              }}\n              ref={addRefButton}\n            >\n              Add Check\n            </Button>\n            <div>\n              <Button\n                disabled={pdcMode !== \"update\"}\n                id=\"basic-button\"\n                aria-controls={open ? \"basic-menu\" : undefined}\n                aria-haspopup=\"true\"\n                aria-expanded={open ? \"true\" : undefined}\n                onClick={handleClick}\n                sx={{\n                  height: \"30px\",\n                  fontSize: \"11px\",\n                  color: \"white\",\n                  backgroundColor: grey[600],\n                  \"&:hover\": {\n                    backgroundColor: grey[700],\n                  },\n                }}\n              >\n                Print\n              </Button>\n              <Menu\n                id=\"basic-menu\"\n                anchorEl={anchorEl}\n                open={open}\n                onClose={handleClose}\n                MenuListProps={{\n                  \"aria-labelledby\": \"basic-button\",\n                }}\n              >\n                <MenuItem onClick={clickPDCReceipt}>PDC Receipt</MenuItem>\n                <MenuItem onClick={clickPDCLabeling}>PDC Labeling</MenuItem>\n              </Menu>\n            </div>\n          </div>\n        </Box>\n        <form\n          onKeyDown={(e) => {\n            if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n              e.preventDefault();\n              return;\n            }\n          }}\n          style={{\n            marginBottom: \"20px\",\n          }}\n        >\n          <Box\n            sx={(theme) => ({\n              display: \"flex\",\n              columnGap: \"15px\",\n              flexDirection: \"row\",\n              [theme.breakpoints.down(\"md\")]: {\n                flexDirection: \"column\",\n                rowGap: \"10px\",\n              },\n            })}\n          >\n            <Box\n              sx={{\n                display: \"flex\",\n                gap: \"10px\",\n                width: \"100%\",\n              }}\n            >\n              <fieldset\n                style={\n                  {\n                    flex: 1,\n                    display: \"flex\",\n                    flexDirection: \"column\",\n                    gap: \"10px\",\n                    padding: \"15px\",\n                    border: \"1px solid #cbd5e1\",\n                    borderRadius: \"5px\",\n                  } as any\n                }\n              >\n                <div\n                  style={{\n                    display: \"flex\",\n                    gap: \"15px\",\n                  }}\n                >\n                  {newRefNumberLoading ? (\n                    <LoadingButton loading={newRefNumberLoading} />\n                  ) : (\n\n                    <TextInput\n                      label={{\n                        title: \"Reference No.\",\n                        style: {\n                          fontSize: \"12px\",\n                          fontWeight: \"bold\",\n                          width: \"100px\",\n                        },\n                      }}\n                      input={{\n                        disabled: isDisableField,\n                        type: \"text\",\n                        style: { width: \"300px\" },\n                        onKeyDown: (e) => {\n                          if (e.key === \"Enter\" || e.key === \"NumpadEnter\") {\n                            e.preventDefault();\n                            dateRef.current?.focus()\n                          }\n                        }\n                      }}\n                      inputRef={refNoRef}\n                      icon={<RestartAltIcon sx={{ fontSize: \"18px\", color: isDisableField ? \"gray\" : \"black\" }} />}\n\n                      disableIcon={isDisableField}\n                    />\n\n                  )}\n\n                  <TextInput\n                    label={{\n                      title: \"Date : \",\n                      style: {\n                        fontSize: \"12px\",\n                        fontWeight: \"bold\",\n                        width: \"50px\",\n                      },\n                    }}\n                    input={{\n                      disabled: isDisableField,\n                      type: \"date\",\n                      defaultValue: format(new Date(), \"yyyy-MM-dd\"),\n                      style: { width: \"190px\" },\n                      onKeyDown: (e) => {\n                        if (e.code === \"NumpadEnter\" || e.code === 'Enter') {\n                          remakrsRef.current?.focus()\n                        }\n                      }\n                    }}\n                    inputRef={dateRef}\n                  />\n\n\n                </div>\n\n                <TextAreaInput\n                  label={{\n                    title: \"Remarks : \",\n                    style: {\n                      fontSize: \"12px\",\n                      fontWeight: \"bold\",\n                      width: \"100px\",\n                    },\n                  }}\n                  textarea={{\n                    rows: 2,\n                    disabled: isDisableField,\n                    style: { flex: 1 },\n                    onKeyDown: (e) => {\n                      e.stopPropagation()\n                      if ((e.code === \"NumpadEnter\" && !e.shiftKey) || (e.code === 'Enter' && !e.shiftKey)) {\n                        pnRef.current?.focus()\n                      }\n                    },\n\n                  }}\n                  _inputRef={remakrsRef}\n                />\n\n\n              </fieldset>\n              <fieldset\n                style={\n                  {\n                    flex: 1,\n                    display: \"flex\",\n                    gap: \"10px\",\n                    padding: \" 15px\",\n                    border: \"1px solid #cbd5e1\",\n                    borderRadius: \"5px\",\n                    flexDirection: \"column\",\n                  } as any\n                }\n              >\n                <div\n                  style={{ width: \"100%\", flex: 1, display: \"flex\", gap: \"15px\" }}\n                >\n                  {isLoadingModalSearchPdcIDs ? (\n                    <LoadingButton loading={isLoadingModalSearchPdcIDs} />\n                  ) : (\n                    <TextInput\n                      label={{\n                        title: \"PN/Client ID : \",\n                        style: {\n                          fontSize: \"12px\",\n                          fontWeight: \"bold\",\n                          width: \"100px\",\n                        },\n                      }}\n                      input={{\n                        disabled: isDisableField,\n                        type: \"text\",\n                        style: { width: \"250px\", height: \"22px\" },\n                        onKeyDown: (e) => {\n                          if (e.key === \"Enter\" || e.key === \"NumpadEnter\") {\n                            e.preventDefault();\n                            if (pnRef.current) {\n                              openModalSearchPdcIDs(pnRef.current.value)\n                            }\n                          }\n                        }\n                      }}\n                      inputRef={pnRef}\n                      icon={<PersonSearchIcon sx={{ fontSize: \"18px\", color: isDisableField ? \"gray\" : \"black\" }} />}\n                      onIconClick={(e) => {\n                        e.preventDefault()\n                        if (pnRef.current) {\n                          openModalSearchPdcIDs(pnRef.current.value)\n                        }\n                      }}\n                      disableIcon={isDisableField}\n                    />\n\n                  )}\n\n                  <TextInput\n                    label={{\n                      title: \"Branch : \",\n                      style: {\n                        fontSize: \"12px\",\n                        fontWeight: \"bold\",\n                        width: \"70px\",\n                      },\n                    }}\n                    input={{\n                      disabled: isDisableField,\n                      type: \"text\",\n                      style: { width: \"auto\", height: \"22px\" },\n                      onKeyDown: (e) => {\n                        if (e.code === \"NumpadEnter\" || e.code === 'Enter') {\n                          clientnameRef.current?.focus()\n                        }\n                      }\n                    }}\n                    inputRef={branchRef}\n                  />\n\n                </div>\n\n                <div\n                  style={{ width: \"100%\", display: \"flex\", columnGap: \"10px\" }}\n                >\n                  <TextAreaInput\n                    label={{\n                      title: \"Clients Name : \",\n                      style: {\n                        fontSize: \"12px\",\n                        fontWeight: \"bold\",\n                        width: \"100px\",\n                      },\n                    }}\n                    textarea={{\n                      rows: 2,\n                      disabled: isDisableField,\n                      style: { width: \"325px\" },\n                      onKeyDown: (e) => {\n                        e.stopPropagation()\n                        if ((e.code === \"NumpadEnter\" && !e.shiftKey) || (e.code === 'Enter' && !e.shiftKey)) {\n                          savePDCButtonRef.current?.click();\n                        }\n                      },\n\n                    }}\n                    _inputRef={clientnameRef}\n                  />\n                  <Button\n                    sx={{\n                      height: \"27px\",\n                      fontSize: \"11px\",\n                    }}\n                    disabled={pdcMode === \"\"}\n                    variant=\"contained\"\n                    startIcon={<DownloadIcon sx={{ width: 15, height: 15 }} />}\n                    onClick={() => {\n                      setShowModal(true);\n                    }}\n                  >\n                    Upload Check\n                  </Button>\n                </div>\n              </fieldset>\n            </Box>\n          </Box>\n        </form>\n        <DataGridViewReact\n          disbaleTable={isDisableField}\n          ref={tableRef}\n          rows={[]}\n          columns={pdcColumn}\n          getSelectedItem={(rowSelected: any, _: any, RowIndex: any) => {\n            if (rowSelected) {\n              if (\n                (rowSelected[6] && rowSelected[6] !== \"\") ||\n                (rowSelected[7] && rowSelected[7] !== \"\") ||\n                (rowSelected[8] && rowSelected[8] !== \"\")\n              ) {\n                setHasSelectedRow(null)\n                tableRef.current.setSelectedRow(null)\n                return Swal.fire({\n                  position: \"center\",\n                  icon: \"warning\",\n                  title: `Unable to delete. Check No ${rowSelected[0]} is already ${rowSelected[8]} issued of OR!`,\n                  showConfirmButton: false,\n                  timer: 1500,\n                });\n              }\n              flushSync(() => {\n                setOpenPdcInputModal(true);\n              })\n              wait(100).then(() => {\n                if (\n                  _checknoRef.current &&\n                  _bankRef.current &&\n                  _branchRef.current &&\n                  _remarksRef.current &&\n                  _chekdateRef.current &&\n                  _amountRef.current\n                ) {\n                  _checknoRef.current.value = rowSelected[0]\n                  _chekdateRef.current.value = rowSelected[1]\n                  _amountRef.current.value = formatNumber(parseFloat(rowSelected[2].replace(/,/g, '')))\n                  _bankRef.current.value = rowSelected[3]\n                  _branchRef.current.value = rowSelected[4]\n                  _remarksRef.current.value = rowSelected[5]\n                  _slipCodeRef.current = rowSelected[6] || \"\"\n                  _slipDateRef.current = rowSelected[7] || \"\"\n                  _checkOR.current = rowSelected[8] || \"\"\n                  _bankCode.current = rowSelected[9]\n\n                  console.log(rowSelected[0])\n                  _bankRef.current.focus()\n                }\n              })\n\n              setHasSelectedRow(RowIndex)\n            } else {\n              setHasSelectedRow(null)\n            }\n          }}\n          onKeyDown={(rowSelected: any, RowIndex: any, e: any) => {\n            if (e.code === \"Delete\" || e.code === \"Backspace\") {\n\n              if (\n                (rowSelected[6] && rowSelected[6] !== \"\") ||\n                (rowSelected[7] && rowSelected[7] !== \"\") ||\n                (rowSelected[8] && rowSelected[8] !== \"\")\n              ) {\n                setHasSelectedRow(null)\n                tableRef.current.setSelectedRow(null)\n\n                return Swal.fire({\n                  position: \"center\",\n                  icon: \"warning\",\n                  title: `Unable to delete. Check No ${rowSelected[0]} is already ${rowSelected[8]} issued of OR!`,\n                  showConfirmButton: false,\n                  timer: 1500,\n                });\n              }\n\n\n              Swal.fire({\n                title: \"Are you sure?\",\n                text: `You won't to delete this Check No. ${rowSelected[0]}`,\n                icon: \"warning\",\n                showCancelButton: true,\n                confirmButtonColor: \"#3085d6\",\n                cancelButtonColor: \"#d33\",\n                confirmButtonText: \"Yes, delete it!\",\n              }).then((result) => {\n                if (result.isConfirmed) {\n                  setTimeout(() => {\n                    const newData = tableRef.current.getData()\n                    newData.splice(RowIndex, 1);\n                    tableRef.current.setData(newData)\n\n                    setHasSelectedRow(null)\n                    tableRef.current.setSelectedRow(null)\n                  }, 100)\n                }\n              });\n            }\n          }}\n        />\n\n        <Modal\n          open={openPdcInputModal}\n          onClose={() => {\n            setOpenPdcInputModal(false);\n            tableRef.current.setSelectedRow(null)\n            setHasSelectedRow(null)\n\n          }}\n          aria-labelledby=\"modal-modal-title\"\n          aria-describedby=\"modal-modal-description\"\n        >\n          <Box\n            sx={{\n              position: \"absolute\" as \"absolute\",\n              top: \"50%\",\n              left: \"50%\",\n              transform: \"translate(-50%, -50%)\",\n              width: \"auto\",\n              bgcolor: \"background.paper\",\n              p: 4,\n            }}\n          >\n            <Typography id=\"modal-modal-title\" variant=\"h6\" component=\"h2\">\n              Check Detail\n            </Typography>\n            <br />\n            <div\n              style={{\n                display: \"flex\",\n                columnGap: \"10px\",\n              }}\n            >\n              <div\n                style={{\n                  display: \"flex\",\n                  flexDirection: \"column\",\n                  gap: \"10px\",\n                }}\n              >\n                <TextInput\n                  label={{\n                    title: \"Check No : \",\n                    style: {\n                      fontSize: \"12px\",\n                      fontWeight: \"bold\",\n                      width: \"70px\",\n                    },\n                  }}\n                  input={{\n                    disabled: hasSelectedRow !== null,\n                    type: \"text\",\n                    style: { width: \"190px\" },\n                    onKeyDown: (e) => {\n                      if (e.code === \"NumpadEnter\" || e.code === 'Enter') {\n                        _bankRef.current?.focus()\n                      }\n                    },\n                  }}\n                  inputRef={_checknoRef}\n                />\n                {isLoadingModalSearchbanks ? (\n                  <LoadingButton loading={isLoadingModalSearchbanks} />\n                ) : (\n                  <TextInput\n                    label={{\n                      title: \"Bank : \",\n                      style: {\n                        fontSize: \"12px\",\n                        fontWeight: \"bold\",\n                        width: \"70px\",\n                      },\n                    }}\n                    input={{\n                      type: \"text\",\n                      style: { width: \"190px\" },\n                      onKeyDown: (e) => {\n                        if (e.code === \"NumpadEnter\" || e.code === 'Enter') {\n                          return openModalSearchBanks(\n                            e.currentTarget.value\n                          );\n                        }\n                      }\n                    }}\n                    icon={<AccountBalanceIcon sx={{ fontSize: \"18px\" }} />}\n                    onIconClick={(e) => {\n                      e.preventDefault()\n                      if (_bankRef.current) {\n                        openModalSearchBanks(\n                          _bankRef.current?.value\n                        );\n                      }\n                    }}\n                    inputRef={_bankRef}\n                  />\n                )}\n\n                <TextInput\n                  label={{\n                    title: \"Branch : \",\n                    style: {\n                      fontSize: \"12px\",\n                      fontWeight: \"bold\",\n                      width: \"70px\",\n                    },\n                  }}\n                  input={{\n                    type: \"text\",\n                    style: { width: \"190px\" },\n                    onKeyDown: (e) => {\n                      if (e.code === \"NumpadEnter\" || e.code === 'Enter') {\n                        _remarksRef.current?.focus()\n                      }\n                    },\n                  }}\n                  inputRef={_branchRef}\n                />\n                <TextAreaInput\n                  label={{\n                    title: \"Remarks : \",\n                    style: {\n                      fontSize: \"12px\",\n                      fontWeight: \"bold\",\n                      width: \"70px\",\n                    },\n                  }}\n                  textarea={{\n                    rows: 4,\n                    disabled: isDisableField,\n                    style: { flex: 1 },\n                    onKeyDown: (e) => {\n                      if (e.key === \"Enter\" && e.shiftKey) {\n                        return\n                      }\n                      if (e.code === \"NumpadEnter\" || e.code === 'Enter') {\n                        _chekdateRef.current?.focus()\n                      }\n                    },\n                  }}\n                  _inputRef={_remarksRef}\n                />\n              </div>\n              <div\n                style={{\n                  display: \"flex\",\n                  gap: \"10px\",\n                  flexDirection: \"column\",\n                }}\n              >\n\n                <TextInput\n                  label={{\n                    title: \"Check Dated : \",\n                    style: {\n                      fontSize: \"12px\",\n                      fontWeight: \"bold\",\n                      width: \"90px\",\n                    },\n                  }}\n                  input={{\n                    disabled: isDisableField,\n                    type: \"date\",\n                    style: { width: \"190px\" },\n                    defaultValue: new Date().toISOString().split(\"T\")[0],\n                    onKeyDown: (e) => {\n                      if (e.code === \"NumpadEnter\" || e.code === 'Enter') {\n                        _amountRef.current?.focus()\n                      }\n                    },\n                  }}\n                  inputRef={_chekdateRef}\n                />\n\n                <div style={{\n                  display: \"flex\"\n                }}>\n                  <label style={{\n                    fontSize: \"12px\",\n                    fontWeight: \"bold\",\n                    width: \"90px\",\n                  }}>Amount :</label>\n                  <NumericFormat\n                    style={{\n                      flex: 1\n                    }}\n                    value={_amountRef.current?.value ?? \"\"}\n                    getInputRef={_amountRef}\n                    allowNegative={false}\n                    thousandSeparator\n                    valueIsNumericString\n                    onKeyDown={(e) => {\n                      if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n                        let currentValue = _amountRef.current?.value as string;\n                        let numericValue = parseFloat(currentValue.replace(/,/g, ''));\n                        if (_amountRef.current) {\n                          if (isNaN(numericValue)) {\n                            _amountRef.current.value = \"0.00\";\n                          } else {\n                            if (!currentValue.includes(\".\")) {\n                              _amountRef.current.value = `${formatNumber(numericValue)}`;\n                            } else {\n                              _amountRef.current.value = formatNumber(numericValue);\n                            }\n                          }\n                        }\n                        _checkcountRef.current?.focus()\n                      }\n                    }}\n                  />\n                </div>\n                {hasSelectedRow === null && (\n                  <TextInput\n                    label={{\n                      title: \"Check Count : \",\n                      style: {\n                        fontSize: \"12px\",\n                        fontWeight: \"bold\",\n                        width: \"90px\",\n                      },\n                    }}\n                    input={{\n                      disabled: isDisableField,\n                      type: \"number\",\n                      style: { width: \"190px\" },\n                      onKeyDown: (e) => {\n                        if (e.code === \"NumpadEnter\" || e.code === 'Enter') {\n                          const timeout = setTimeout(() => {\n                            checkModalSaveButton.current?.click();\n                            clearTimeout(timeout);\n                          }, 100);\n                        }\n                      },\n                    }}\n                    inputRef={_checkcountRef}\n                  />\n                )}\n              </div>\n            </div>\n            <div\n              style={{\n                display: \"flex\",\n                justifyContent: \"flex-end\",\n                width: \"100%\",\n                marginTop: \"10px\",\n              }}\n            >\n              <div style={{ display: \"flex\", gap: \"10px\" }}>\n                <Button\n                  ref={checkModalSaveButton}\n                  action={checkModalSaveButtonActionRef}\n                  color=\"primary\"\n                  variant=\"contained\"\n                  autoFocus={hasSelectedRow !== null}\n                  onClick={() => {\n                    handleCheckDetailsSave()\n                  }}\n                  sx={{\n                    height: \"30px\",\n                    fontSize: \"11px\",\n                  }}\n                >\n                  {hasSelectedRow !== null ? \"Update\" : \"Save\"}\n                </Button>\n                <Button\n                  color=\"success\"\n                  variant=\"contained\"\n                  sx={{\n                    height: \"30px\",\n                    fontSize: \"11px\",\n                  }}\n                  onClick={() => {\n                    setOpenPdcInputModal(false);\n                    tableRef.current.setSelectedRow(null)\n                    setHasSelectedRow(null)\n                  }}\n                >\n                  Cancel\n                </Button>\n                <IconButton\n                  style={{\n                    position: \"absolute\",\n                    top: \"10px\",\n                    right: \"10px\",\n                  }}\n                  aria-label=\"search-client\"\n                  onClick={() => {\n                    tableRef.current.setSelectedRow(null)\n                    setHasSelectedRow(null)\n                    setOpenPdcInputModal(false);\n                  }}\n                >\n                  <CloseIcon />\n                </IconButton>\n              </div>\n            </div>\n          </Box>\n        </Modal>\n        <div\n          style={{\n            display: showModal ? \"flex\" : \"none\",\n            position: \"absolute\",\n            top: 0,\n            bottom: 0,\n            left: 0,\n            right: 0,\n            background: \"rgba(158, 155, 157, 0.31)\",\n            zIndex: \"999\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n          }}\n        >\n          <div\n            style={{\n              width: \"90%\",\n              height: \"90%\",\n            }}\n          >\n            <div\n              style={{\n                width: \"90%\",\n                height: \"90%\",\n                overflow: \"auto\",\n                background: \"white\",\n                padding: \"20px\",\n                margin: \"auto\",\n                zIndex: \"9929\",\n                boxShadow: \" -1px 1px 13px 6px rgba(0,0,0,0.54)\",\n                position: \"relative\",\n              }}\n            >\n              <div\n                style={{\n                  height: \"100%\",\n                  width: \"100%\",\n                  position: \"relative\",\n                  display: \"flex\",\n                  justifyContent: \"center\",\n                  alignItems: \"center\",\n                  flexDirection: \"column\",\n                }}\n              >\n                <IconButton\n                  sx={{\n                    position: \"absolute\",\n                    right: \"5px\",\n                    top: \"5px\",\n                  }}\n                  onClick={() => {\n                    setShowModal(false);\n                  }}\n                >\n                  <CloseIcon />\n                </IconButton>\n                <div\n                  style={{\n                    width: \"100%\",\n                    height: \"500px\",\n                    border: isDragging ? \"5px dashed green\" : \"5px dashed grey\",\n                    overflow: \"auto\",\n                    padding: \"10px\",\n                  }}\n                  onDragEnter={handleDragEnter}\n                  onDragOver={(e) => e.preventDefault()}\n                  onDragLeave={handleDragLeave}\n                  onDrop={handleDrop}\n                >\n                  <div\n                    id=\"upload-container\"\n                    style={{\n                      width: \"100%\",\n                      height: \"100%\",\n                      display: \"flex\",\n                      gap: \"10px\",\n                      flexWrap: \"wrap\",\n                    }}\n                    onDragEnter={handleDragEnter}\n                    onDragOver={(e) => e.preventDefault()}\n                    onDragLeave={handleDragLeave}\n                    onDrop={handleDrop}\n                  >\n                    {selectedFiles.map((itm, idx) => {\n                      return (\n                        <DisplayFile\n                          key={idx}\n                          itm={itm}\n                          selectedFiles={selectedFiles}\n                          setSelectedFiles={setSelectedFiles}\n                          fileInput={fileInputRef}\n                        />\n                      );\n                    })}\n                  </div>\n                  {selectedFiles.length <= 0 && (\n                    <div\n                      style={{\n                        position: \"absolute\",\n                        top: \"50%\",\n                        left: \"50%\",\n                        transform: \"translate(-50%,-50%)\",\n                        textAlign: \"center\",\n                      }}\n                    >\n                      <DriveFolderUploadIcon\n                        sx={{ fontSize: \"20em\", color: \"#64748b\" }}\n                      />\n                    </div>\n                  )}\n                  <input\n                    ref={fileInputRef}\n                    type=\"file\"\n                    multiple\n                    style={{ display: \"none\", background: \"white\" }}\n                    id=\"input-file\"\n                    onChange={(e) => {\n                      const fileList = e.target.files as FileList;\n                      const files = Array.from(fileList);\n                      const newFiles = [...selectedFiles, ...files];\n                      if (checkFile(newFiles)) {\n                        return alert(\"file is not valid Extention!\");\n                      }\n                      setSelectedFiles(newFiles);\n                    }}\n                  />\n                </div>\n                <div\n                  style={{\n                    width: \"100%\",\n                  }}\n                >\n                  <Button\n                    fullWidth\n                    onClick={() => {\n                      const inputFile = document.getElementById(\"input-file\");\n                      inputFile?.click();\n                    }}\n                  >\n                    CLick it to upload\n                  </Button>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport function setNewStateValue(dispatch: any, obj: any) {\n  Object.entries(obj).forEach(([field, value]) => {\n    dispatch({ type: \"UPDATE_FIELD\", field, value });\n  });\n}\nexport function incrementCheckNo(Check_No: string) {\n  if (Check_No) {\n    let incrementedNumber = (parseInt(Check_No) + 1).toString();\n    while (incrementedNumber.length < Check_No.length) {\n      incrementedNumber = \"0\" + incrementedNumber;\n    }\n    return incrementedNumber;\n  }\n\n  return \"001\";\n}\n"],"names":["UpwardTable","forwardRef","_ref","UpwardTableRef","_pages$pageNumber","rows","column","width","height","dataReadOnly","_ref$onSelectionChang","onSelectionChange","_ref$isMultipleSelect","isMultipleSelect","_ref$freeze","freeze","onKeyDown","_ref$inputsearchselec","inputsearchselector","_ref$isRowSelectable","isRowSelectable","_ref$unSelectable","unSelectable","isLoading","onRightClick","_useState","useState","_useState2","_slicedToArray","pages","setPages","_useState3","_useState4","pageNumber","setPageNumber","onSelectionChangeRef","useRef","onKeyDownRef","_useState5","filter","itm","hide","_useState6","columns","setColumns","_useState7","_useState8","hoveredColumn","setHoveredColumn","_useState9","_useState10","selectedRows","setSelectedRows","_useState11","_useState12","lastSelectedRowIndex","setLastSelectedRowIndex","_useState13","_useState14","selectedItems","setSelectedItems","divRef","_useState15","_useState16","_clickTimeout","_setClickTimeout","useEffect","_pages","arr","chunkSize","arguments","length","undefined","result","i","push","slice","formatArrayIntoChunks","startResize","index","e","preventDefault","stopPropagation","startX","clientX","startWidth","doDrag","moveEvent","newWidth","updatedColumns","_toConsumableArray","document","addEventListener","stopDrag","removeEventListener","handleMouseEnter","handleMouseLeave","useImperativeHandle","resetTableSelected","row","querySelector","concat","scrollIntoView","block","behavior","getSelectedIndex","getSelectedRows","d","idx","includes","getFirstColumn","getParentElement","current","getSelectedRowsOnClick","setSelectRows","indx","_jsx","style","display","justifyContent","key","prevIndex","_row$querySelector","newPrevIndex","focus","input","tagName","divInput","_row$querySelector2","children","_jsxs","className","flexDirection","minHeight","ref","tabIndex","position","zIndex","top","background","map","col","fontWeight","defaultValue","headerName","readOnly","onChange","onMouseDown","onMouseEnter","onMouseLeave","rowIndex","onClick","event","shiftKey","rangeStart","Math","min","rangeEnd","max","newSelectedRows","selectedItemsParams","newSelectedRowsFiltered","selectedRowData","removeNullValue","data","getIndexAndData","ctrlKey","metaKey","handleRowClick","onDoubleClick","clearTimeout","timeoutId","setTimeout","handleRowDoubleClick","handleRowKeyDown","onContextMenu","rowSelected","handleRightClick","colIndex","value","field","type","Pagination","count","useUpwardTableModal","_mutationFn","myAxios","user","link","responseDataKey","_ref$onModalClose","onModalClose","id","useId","inputSearchRef","tableRef","parentRef","show","setShowModal","setRows","_useMutation","useMutation","mutationKey","mutationFn","_x","_asyncToGenerator","_regeneratorRuntime","mark","_callee","variable","wrap","_context","prev","next","get","url","queryUrlName","search","headers","Authorization","accessToken","abrupt","sent","stop","apply","onSuccess","res","mutate","throttledSearch","throttle","query","performSearch","closeModal","wait","then","_parentRef$current","Modal","open","onClose","left","transform","paddingTop","paddingBottom","paddingLeft","paddingRight","TextInput","label","marginBottom","currentTarget","target","datagridview","inputRef","IconButton","right","CloseIcon","fontSize","openModal","_inputSearchRef$curre","reducer","state","action","_objectSpread","_defineProperty","pdcColumn","pdcSearchColumn","flex","pdcBanksColumn","PostDateChecks","_queryFn","_mutationFn2","_onSuccess","_amountRef$current$va","_amountRef$current2","_React$useState","React","_React$useState2","anchorEl","setAnchorEl","Boolean","isDragging","setIsDragging","selectedFiles","setSelectedFiles","openPdcInputModal","setOpenPdcInputModal","showModal","searchInputRef","hasSelectedRow","setHasSelectedRow","pdcMode","setPdcMode","_useContext","useContext","AuthContext","searchRef","fileInputRef","savePDCButtonRef","checkModalSaveButton","checkModalSaveButtonActionRef","_checknoRef","_bankRef","_branchRef","_remarksRef","_chekdateRef","_amountRef","_checkcountRef","_bankCode","_slipCodeRef","_slipDateRef","_checkOR","addRefButton","subRefNoRef","PNoRef","subAccountRef","refNoRef","dateRef","remakrsRef","pnRef","branchRef","clientnameRef","_useQuery","useQuery","queryKey","queryFn","refetchOnWindowFocus","response","RefNo","pdcID","newRefNumberLoading","refetchNewRefNumber","refetch","_callee2","variables","_context2","mode","post","success","resetPDC","Swal","icon","title","message","showConfirmButton","timer","loadingAddNew","_useMutation2","_x2","_callee3","_context3","_x3","_callee5","_formatDataToDocument","Ref_No","_response$data$upload","uploadFiles","newObjContainerBasic","fileSelected","formatDataToDocument","_context6","_x4","_x5","_callee4","dataDocument","newObjContainer","_loop","_context5","basicItem","mainURL","blob","file","reader","_context4","uniqueFilename","fetch","File","fileName","fileType","FileReader","Promise","resolve","reject","onload","onerror","Error","name","readAsDataURL","delegateYield","alert","getSearchPDCCheck","upload","JSON","parse","process","all","setDataFormated","Name","Date","PNo","Acronym","Remarks","IDNo","sub_account","mutateSelectedSearch","isLoadingSelectedSearch","_useUpwardTableModal","selectedRow","client_id","closeModalSearchPdcIDs","ModalSearchPdcIDs","openModalSearchPdcIDs","isLoadingModalSearchPdcIDs","_useUpwardTableModal2","Bank_Code","Bank","closeModalSearchBanks","_branchRef$current","ModalSearchBanks","openModalSearchBanks","isLoadingModalSearchbanks","_useUpwardTableModal3","_searchRef$current","ref_no","closeUpwardPDCModal","UpwardPDCModal","openUpwardPDCModal","isLoadingModalSearchPDC","handleOnSave","useCallback","_x6","_callee6","_refNoRef$current","_pnRef$current2","_dateRef$current","_clientnameRef$curren","_remakrsRef$current","_branchRef$current2","pdcTableData","filePromises","fileTransfer","fileToSave","stateSubmited","_context7","files","_loop2","_event$target","datakey","fileContent","getDataFormatted","_pnRef$current","click","Branch","checks","stringify","codeCondfirmationAlert","isUpdate","cb","userCodeConfirmation","saveCondfirmationAlert","isConfirm","handleDragLeave","handleDragEnter","handleDrop","_fileInputRef$current","fileList","dataTransfer","Array","from","newFiles","checkFile","setSelectedRow","setData","format","formatNumber","num","toLocaleString","minimumFractionDigits","maximumFractionDigits","handleKeyDown","window","isDisableField","_Fragment","PageHelmet","Loading","padding","backgroundColor","Box","sx","theme","alignItems","columnGap","breakpoints","down","LoadingButton","loading","SearchIcon","onIconClick","Button","variant","startIcon","AddIcon","color","disabled","SaveIcon","text","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","isConfirmed","flushSync","_checknoRef$current","tableRows","getLastCheck_No","incrementCheckNo","Check_No","grey","Menu","MenuListProps","MenuItem","_refNoRef$current2","_pnRef$current3","_dateRef$current2","_clientnameRef$curren2","_remakrsRef$current2","_branchRef$current3","localStorage","removeItem","setItem","header","department","elementString","ReactDOMServer","_clientnameRef$curren3","_refNoRef$current3","textAlign","marginTop","margin","printString","code","rowGap","gap","border","borderRadius","_dateRef$current3","RestartAltIcon","disableIcon","_remakrsRef$current3","TextAreaInput","textarea","_pnRef$current4","_inputRef","PersonSearchIcon","_clientnameRef$curren4","_savePDCButtonRef$cur","DownloadIcon","DataGridViewReact","disbaleTable","getSelectedItem","_","RowIndex","parseFloat","replace","console","log","newData","getData","splice","bgcolor","p","Typography","component","_bankRef$current","AccountBalanceIcon","_bankRef$current2","_remarksRef$current","_chekdateRef$current","toISOString","split","_amountRef$current","NumericFormat","getInputRef","allowNegative","thousandSeparator","valueIsNumericString","_amountRef$current3","_checkcountRef$curren","currentValue","numericValue","isNaN","timeout","_checkModalSaveButton","autoFocus","incrementStringNumbers","str","increment","parseInt","toString","padStart","incrementDate","dateString","currentDate","setMonth","getMonth","selectedIndex","getSelectedRow","date","getTime","isValidDate","Check_Date","Check_Amnt","BankName","BankCode","Check_Remarks","Deposit_Slip","DateDeposit","OR_No","handleCheckDetailsSave","bottom","overflow","boxShadow","onDragEnter","onDragOver","onDragLeave","onDrop","flexWrap","DisplayFile","fileInput","DriveFolderUploadIcon","multiple","fullWidth","inputFile","getElementById","setNewStateValue","dispatch","obj","Object","entries","forEach","_ref4","_ref5","incrementedNumber"],"sourceRoot":""}