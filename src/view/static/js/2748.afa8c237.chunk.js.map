{"version":3,"file":"static/js/2748.afa8c237.chunk.js","mappings":"6RAoCMA,EAAQ,CACZC,SAAU,WACVC,IAAK,MACLC,KAAM,MACNC,UAAW,wBACXC,MAAO,MACPC,QAAS,mBACTC,UAAW,GACXC,EAAG,EACHC,OAAQ,QAGK,SAASC,EAAcC,GAmBZ,IAlBxBC,EAAMD,EAANC,OACAC,EAASF,EAATE,UAEAC,GADQH,EAARI,SACOJ,EAAPG,SACAE,EAAiBL,EAAjBK,kBAEAC,GADON,EAAPO,QACIP,EAAJM,MACAE,EAAER,EAAFQ,GACAC,EAAYT,EAAZS,aACAC,EAASV,EAATU,UACAC,EAAgBX,EAAhBW,iBACAC,EAAcZ,EAAdY,eAAcC,EAAAb,EACdc,MAAAA,OAAK,IAAAD,EAAG,GAAEA,EACVE,EAASf,EAATe,UACaC,GAAAhB,EAAbiB,cAAajB,EACbkB,kBAAAA,OAAgB,IAAAF,EAAG,WAAQ,EAACA,EAC5BG,EAAenB,EAAfmB,gBACAC,EAAgBpB,EAAhBoB,iBAEMC,EAASC,IAEf,OACEC,EAAAA,EAAAA,KAACC,EAAAA,EAAK,CACJC,KAAMf,EACNgB,QAASjB,EACT,kBAAgB,oBAChB,mBAAiB,0BAAyBkB,UAE1CC,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CAACC,GAAIzC,EAAMsC,SAAA,EACbJ,EAAAA,EAAAA,KAACQ,EAAAA,EAAU,CAACvB,GAAG,oBAAoBwB,QAAQ,KAAKC,UAAU,KAAKC,GAAI,EAAEP,SAClEb,KAEHS,EAAAA,EAAAA,KAACY,EAAAA,EAAS,CACRC,KAAK,QACLC,MAAM,SACNP,GAAI,CAAEQ,aAAc,QACpBC,WAAS,EACTC,SAAU5B,EACV6B,WAAY,CACVC,SAAU3B,GAEZ4B,UAAW,SAACC,GAC2C,IAADC,EAArC,UAAXD,EAAEE,MAA+B,gBAAXF,EAAEE,OAC1BF,EAAEG,iBACF7B,EAA0B,OAATH,QAAS,IAATA,GAAkB,QAAT8B,EAAT9B,EAAWiC,eAAO,IAAAH,OAAT,EAATA,EAAoBI,QAEvCC,EACEN,EACAvB,EACS,OAATN,QAAS,IAATA,OAAS,EAATA,EAAWiC,QAEf,KAEFzB,EAAAA,EAAAA,KAAA,OACE4B,UAAS,GAAAC,OAAK/B,EAAM,mCACpBhC,MAAO,CAAEC,SAAU,WAAYW,OAAO,GAADmD,OAAKnD,EAAS,GAAE,OAAO0B,UAE5DJ,EAAAA,EAAAA,KAAC8B,EAAAA,EAAK,CACJC,mBAAmB,EACnBC,aAAa,EACbpD,QAASA,EACTD,UAAWA,EACXsD,cAAe,SAACC,EAAWC,EAAMZ,GAC/BzC,EAAkBoD,EAAWC,EAC/B,EACAC,SAAUnD,EACVF,KAAMA,EACNa,gBAAiBA,EACjBC,iBAAkBA,OAItBG,EAAAA,EAAAA,KAAA,OAAKlC,MAAO,CAAEC,SAAU,WAAYC,IAAK,OAAQqE,MAAO,QAASjC,UAC/DJ,EAAAA,EAAAA,KAACsC,EAAAA,EAAU,CACT,aAAW,gBACXC,MAAM,YACNC,QAASpD,EAAiBgB,UAE1BJ,EAAAA,EAAAA,KAACyC,EAAAA,EAAS,YAMtB,CAEO,SAAS1C,IAGd,MADoB,QADC2C,KAAKC,MAAsB,IAAhBD,KAAKE,SAGvC,CAyBO,SAASjB,EACdN,EACAO,EACAiB,GAEA,IAAM/C,EAAS8B,EACf,GAAe,cAAXP,EAAEE,KAAsB,CAAC,IAADuB,EACpB/D,EAAOgE,SAASC,iBAAiB,IAADnB,OAAK/B,EAAM,sBACjDuB,EAAEG,iBACK,QAAPsB,EAAA/D,EAAK,UAAE,IAAA+D,GAAPA,EAASG,UAAUC,IAAI,kBAhC3B,SAAwBtB,EAAmBiB,GACzC,IAAMM,EAAiBJ,SAASK,cAAc,IAADvB,OACvCD,EAAS,sBAETyB,EAA2B,OAAdF,QAAc,IAAdA,OAAc,EAAdA,EAAgBC,cAAc,SACvC,OAAVC,QAAU,IAAVA,GAAAA,EAAYC,QACZ,IAAMC,EAAQ,IAAIC,WAAW,aAAc,CACzCC,SAAS,EACTC,YAAY,EACZC,KAAMC,SAEM,OAAdT,QAAc,IAAdA,GAAAA,EAAgBU,cAAcN,GACpB,OAAVF,QAAU,IAAVA,GAAAA,EAAYS,iBAAiB,WAAW,SAACC,GACxB,YAAXA,EAAGC,MACLD,EAAGvC,iBACHqB,EAAGS,SAEU,YAAXS,EAAGC,MACS,OAAdb,QAAc,IAAdA,GAAAA,EAAgBF,UAAUgB,OAAO,kBAErC,GACF,CAYIC,CAAetC,EAAWiB,GAC1B9D,EAAKoF,SAAQ,SAACtB,EAAIuB,GAChBvB,EAAGiB,iBAAiB,WAAW,SAACC,GAC9B,GAAe,YAAXA,EAAGC,IAAmB,CAAC,IAADK,EAAAC,EACxB,GAAIF,GAAO,EACT,OAMF,OAHAL,EAAGvC,iBACM,QAAT6C,EAAAtF,EAAKqF,UAAI,IAAAC,GAATA,EAAWpB,UAAUgB,OAAO,uBACf,QAAbK,EAAAvF,EAAKqF,EAAM,UAAE,IAAAE,GAAbA,EAAerB,UAAUC,IAAI,kBAE/B,CACA,GAAe,cAAXa,EAAGC,IAAqB,CAAC,IAADO,EAAAC,EAE1B,GADAT,EAAGvC,iBACC4C,GAAOrF,EAAK0F,OAAS,EACvB,OAEO,QAATF,EAAAxF,EAAKqF,UAAI,IAAAG,GAATA,EAAWtB,UAAUgB,OAAO,kBACf,QAAbO,EAAAzF,EAAKqF,EAAM,UAAE,IAAAI,GAAbA,EAAevB,UAAUC,IAAI,iBAC/B,CACF,GACF,GACF,CACF,C,yKCvJMwB,GAAeC,EAAAA,EAAAA,eASlB,CACD5F,KAAM,GACN6F,kBAAmB,GACnBC,eAAgB,kBAAM7E,EAAAA,EAAAA,KAAA,SAAW,EACjC8E,yBAA0B,aAC1BC,yBAAyB,IAErBjD,GAAQkD,EAAAA,EAAAA,aACZ,SAAAvG,EAoBEwG,GACI,IAnBFtG,EAASF,EAATE,UACAC,EAAOH,EAAPG,QACAG,EAAIN,EAAJM,KACAqD,EAAQ3D,EAAR2D,SACAL,EAAiBtD,EAAjBsD,kBACAC,EAAWvD,EAAXuD,YACAC,EAAaxD,EAAbwD,cAAaiD,EAAAzG,EACb0G,sBAAAA,OAAqB,IAAAD,EAAGE,EAAqBF,EAC7CtF,EAAenB,EAAfmB,gBACAC,EAAgBpB,EAAhBoB,iBAAgBwF,EAAA5G,EAChB6G,kBAAAA,OAAiB,IAAAD,GAAOA,EAAAE,EAAA9G,EACxBoG,eAAAA,OAAc,IAAAU,EAAG,SACfX,EACA7F,GAAgB,OACbiB,EAAAA,EAAAA,KAAA,SAAW,EAAAuF,EAAAC,EAAA/G,EAChBqG,yBAAAA,OAAwB,IAAAU,EAAG,aAAYA,EAAAC,EAAAhH,EACvCsG,wBAAAA,OAAuB,IAAAU,GAAOA,EAIhCC,GAAwCC,EAAAA,EAAAA,UAAc,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAlDI,EAAYF,EAAA,GAAEG,EAAeH,EAAA,GAgBpC,SAAS9G,EAAkBoD,EAAgBC,EAAWZ,GAChDU,GACFA,EAAcC,EAAWC,EAAMZ,EAEnC,EAlBAyE,EAAAA,EAAAA,qBAAoBf,GAAK,iBAAO,CAC9BgB,gBAAiB,WACfF,EAAgB,GAClB,EACAG,gBAAiB,WACf,OAAOnH,EAAKoH,QAAO,SAACC,GAAS,OACf,OAAZN,QAAY,IAAZA,OAAY,EAAZA,EAAcO,SAASD,EAAKhE,GAAU,GAE1C,EACA2D,gBAAiB,SAAC5D,GAChB4D,EAAgB5D,EAClB,EACD,IAOD,IAAImE,EAA0B,GAE9B,OACEtG,EAAAA,EAAAA,KAAC0E,EAAa6B,SAAQ,CACpB7E,MAAO,CACLqD,wBAAAA,EACAD,yBAAAA,EACAF,kBAAmBkB,EACnB/G,KAAAA,EACA8F,eAAAA,GACAzE,UAEFJ,EAAAA,EAAAA,KAACwG,EAAAA,GAAQ,CACPC,MAAO,CACLC,eAAgBC,EAAAA,EAChBC,OAAQzB,GAEV0B,aAAc,CACZC,WAAY,CAAEC,gBAAiB,CAAEC,SAAU,OAE7CC,QAAStI,EACTuI,SAAU,SAACC,GAAG,OAAKA,EAAI/E,EAAS,EAChCxD,QAASA,EAAQuH,QAAO,SAACiB,GAAQ,OAAMA,EAAIC,IAAI,IAC/CtI,KAAMA,EACNuI,wBAAwB,EACxBC,0BAA0B,EAC1BjC,kBAAmBA,EACnBV,kBAAmBkB,EACnB0B,UAAW,GACXC,mBAAoB,GACpBC,gBAAiB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,KACtCnH,IAAEoH,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CACA,UAAW,CACTpF,MAAO,WAET,WAAY,CACVA,MAAO,WAET,cAAe,CACbA,MAAO,SAET,aAAc,CACZA,MAAO,UAET,iBAAkB,CAChBA,MAAO,OAET,YAAa,CACXA,MAAO,OAET,wCAAyC,CACvCA,MAAO,QACP,sBAAuB,CACrBqF,KAAM,YAGV,oBAAqB,CACnBC,WAAY,UACZtF,MAAO,QACP,sBAAuB,CACrBqF,KAAM,UAGV,2BAA4B,CAC1BC,WAAY,UACZtF,MAAO,QACP,sBAAuB,CACrBqF,KAAM,UAGV,2BAA4B,CAC1BC,WAAY,UACZtF,MAAO,QACP,sBAAuB,CACrBqF,KAAM,UAGV,gCAAiC,CAC/BE,QAAS,iBAGR,CACD,+BAAgC,CAC9BD,WAAY,UACZtF,MAAO,QACPwF,SAAU,QAGZ,gGACE,CACEC,QAASjG,GAAqBC,EAAc,OAAS,QACrD4F,KAAM,SAEV,qFACE,CACEI,QAASjG,GAAqBC,EAAc,OAAS,WAGxD,CACD+F,SAAU,GACVE,WAAY,IACZ,+BAAgC,CAC9BvJ,OAAQ,OACRP,MAAO,QAET,mCAAoC,CAClCO,OAAQ,OACRP,MAAO,UAQb+J,0BAA2B,SAAChG,GAC1B,GAAIF,EAAa,CACf,GAAIE,EAAUuC,QAAU,EAAG,OAE3B,GADA6B,EAAcpE,EACV4D,EAAaO,SAASC,EAAYA,EAAY7B,OAAS,IACzD,OAKF,OAHAsB,EAAgB7D,QAEhBpD,EAAkB,CAACoD,EAAUA,EAAUuC,OAAS,IAAK1F,EAAM,KAE7D,CAEA,IAAKiD,GAAeD,EAClB,GAAI+D,IAA4B,OAAZA,QAAY,IAAZA,OAAY,EAAZA,EAAcrB,QAAS,EAAG,CAC5C,IAAM0D,EAAe,IAAIC,IAAItC,GAC7BC,EACE7D,EAAUiE,QAAO,SAACkC,GAAM,OAAMF,EAAaG,IAAID,EAAE,IAErD,MACEtC,EAAgB7D,QAGlB6D,EAAgB7D,GAGlBpD,EAAkB,CAACoD,EAAUA,EAAUuC,OAAS,IAAK1F,EAAM,KAC7D,EACAW,cAAe,SAAC6I,EAASvE,GAEvB,GADmB,CAAC,cAAe,QAAS,SAAU,aACtCqC,SAASrC,EAAIzC,MAI7B,OADAyC,EAAIxC,iBACa,UAAbwC,EAAIzC,MAAiC,gBAAbyC,EAAIzC,KAC1BQ,IAAsBC,EACjB+D,GAAgB,SAAC5D,GACtB,OAAIA,GAAQA,EAAKsC,OAAS,GAAKtC,EAAK,KAAOoG,EAAGC,QAAQvJ,IACpDH,EAAkB,GAAIC,EAAMiF,EAAIzC,MACzB,KAETzC,EAAkB,CAACyJ,EAAGC,QAAQvJ,IAAKF,EAAMiF,EAAIzC,MACtC,CAACgH,EAAGC,QAAQvJ,IACrB,SAEA8G,GAAgB,SAAC5D,GACf,OACEA,IACCH,GACDG,EAAKsC,OAAS,GACdtC,EAAKkE,SAASkC,EAAGC,QAAQvJ,KAEzBkD,EAAOA,EAAKgE,QAAO,SAACC,GAAS,OAAKA,IAASmC,EAAGC,QAAQvJ,EAAE,IACxDH,EAAkB,GAAIC,EAAMiF,EAAIzC,MACzBY,GAGPA,GACAH,GACAG,EAAKsC,OAAS,GACdtC,EAAKkE,SAASkC,EAAGC,QAAQvJ,IAElBkD,GAETrD,EAAkB,CAACyJ,EAAGC,QAAQvJ,IAAKF,EAAMiF,EAAIzC,MACvC,GAANM,QAAA4G,EAAAA,EAAAA,GAAWtG,GAAI,CAAEoG,EAAGC,QAAQvJ,KAC9B,IAIa,WAAb+E,EAAIzC,MAAkC,cAAbyC,EAAIzC,MAC/BwE,EAAgB,CAACwC,EAAGC,QAAQvJ,KACrBH,EAAkB,CAACyJ,EAAGC,QAAQvJ,IAAKF,EAAMiF,EAAIzC,YAFtD,CAIF,EACAmH,uBAAqB,EACrB9I,gBAAiBA,EACjBC,iBAAkBA,KAI1B,IAIF,SAAS8I,EAAUC,GAIoD,IAHrEC,EAAID,EAAJC,KACAC,EAAYF,EAAZE,aACAlH,EAASgH,EAAThH,UAEMmH,GAASC,EAAAA,EAAAA,KACTC,GAAYC,EAAAA,EAAAA,GAAgBH,EAAQI,EAAAA,IAE1C,OACEnJ,EAAAA,EAAAA,KAACoJ,EAAAA,EAAa,CACZ3I,QAAQ,WACR8B,MAAM,UACNX,UAAWA,EACXyH,MAAOJ,EACPJ,KAAMA,EAAO,EACb5H,SAAU,SAACsC,EAAO+F,GAChBR,EAAavF,EAAc+F,EAAU,EACvC,GAGN,CAEA,SAASC,EAAiBC,GACxB,OAAOxJ,EAAAA,EAAAA,KAACyJ,EAAAA,GAAc9B,EAAAA,EAAAA,GAAA,CAAC+B,iBAAkBf,GAAgBa,GAC3D,CACA,SAASpE,EACPoE,GAEA,IAAAG,GAMIC,EAAAA,EAAAA,YAAWlF,GALbE,EAAiB+E,EAAjB/E,kBACAG,EAAuB4E,EAAvB5E,wBACAD,EAAwB6E,EAAxB7E,yBACAD,EAAc8E,EAAd9E,eACA9F,EAAI4K,EAAJ5K,KAEF,OACEsB,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CACFC,GAAI,CACFsJ,UAAW,OACX7B,QAAS,OACT7J,MAAO,OACP2L,eAAgB,gBAChBC,GAAI,EACJC,WAAY,SACZC,cAC+B,eAA7BnF,EAA4C,cAAgB,OAC9D1E,SAAA,EAEFJ,EAAAA,EAAAA,KAACuJ,GAAgB5B,EAAAA,EAAAA,GAAA,GAAK6B,KACtBnJ,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CACFC,GAAI,CACFyH,QAAS,OACT8B,eAC+B,eAA7BhF,EACI,aACA,WACNoF,KAAM,EACNF,WAAY,UACZ5J,SAAA,CAED2E,IACC1E,EAAAA,EAAAA,MAAA,OAAAD,SAAA,CAAK,YAA2B,OAAjBwE,QAAiB,IAAjBA,OAAiB,EAAjBA,EAAmBH,WAEpCzE,EAAAA,EAAAA,KAAA,OAAAI,SAAMyE,EAAeD,EAAmB7F,UAIhD,CApEA,K,8eCrQaoL,EAAc,CACzB,CAAEnG,IAAK,UAAWlD,MAAO,UAAWoJ,KAAM,EAAG/L,MAAO,KACpD,CACE6F,IAAK,SACLlD,MAAO,SACPoJ,KAAM,EACN/L,MAAO,IACPiM,KAAM,UAER,CAAEpG,IAAK,WAAYlD,MAAO,WAAY3C,MAAO,KAC7C,CAAE6F,IAAK,aAAclD,MAAO,aAAc3C,MAAO,KACjD,CAAE6F,IAAK,cAAelD,MAAO,cAAe3C,MAAO,KACnD,CAAE6F,IAAK,YAAalD,MAAO,UAAW3C,MAAO,KAC7C,CAAE6F,IAAK,aAAclD,MAAO,WAAY3C,MAAO,KAC/C,CAAE6F,IAAK,eAAgBlD,MAAO,eAAgB3C,MAAO,KACrD,CAAE6F,IAAK,OAAQlD,MAAO,OAAQ3C,MAAO,KACrC,CAAE6F,IAAK,UAAWlD,MAAO,UAAW3C,MAAO,KAC3C,CAAE6F,IAAK,KAAMlD,MAAO,KAAM3C,MAAO,KACjC,CAAE6F,IAAK,OAAQlD,MAAO,OAAQuG,MAAM,GACpC,CAAErD,IAAK,WAAYlD,MAAO,WAAYuG,MAAM,IAEjCgD,EAAe,CAC1B,CAAErG,IAAK,cAAelD,MAAO,cAAe3C,MAAO,KACnD,CAAE6F,IAAK,SAAUlD,MAAO,SAAU3C,MAAO,IAAKiM,KAAM,UACpD,CAAEpG,IAAK,OAAQlD,MAAO,OAAQ3C,MAAO,KACrC,CAAE6F,IAAK,UAAWlD,MAAO,UAAW3C,MAAO,KAC3C,CAAE6F,IAAK,UAAWlD,MAAO,WAAY3C,MAAO,KAC5C,CAAE6F,IAAK,YAAalD,MAAO,aAAc3C,MAAO,KAChD,CAAE6F,IAAK,OAAQlD,MAAO,OAAQ3C,MAAO,KACrC,CAAE6F,IAAK,QAASlD,MAAO,QAAS3C,MAAO,KACvC,CAAE6F,IAAK,KAAMlD,MAAO,KAAM3C,MAAO,KACjC,CAAE6F,IAAK,aAAclD,MAAO,eAAgB3C,MAAO,MAG/CmM,EAAsB,oBACtBC,EAAsB,gBAEb,SAASC,IAAc,IAADC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAC7BC,GAAaC,EAAAA,EAAAA,QAAY,MACzBC,GAAcD,EAAAA,EAAAA,QAAY,MAC1BE,GAAgBF,EAAAA,EAAAA,QAAY,MAElC3F,GAAsCC,EAAAA,EAAAA,UAAS,OAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA9C8F,EAAW5F,EAAA,GAAE6F,GAAc7F,EAAA,GAClC8F,IAAoC/F,EAAAA,EAAAA,UAAS,GAAEgG,IAAA9F,EAAAA,EAAAA,GAAA6F,GAAA,GAAxCE,GAAUD,GAAA,GAAEE,GAAaF,GAAA,GAChCG,IAAsCnG,EAAAA,EAAAA,UAAS,GAAEoG,IAAAlG,EAAAA,EAAAA,GAAAiG,GAAA,GAA1CE,GAAWD,GAAA,GAAEE,GAAcF,GAAA,GAClCG,IAA4CvG,EAAAA,EAAAA,UAAS,IAAGwG,IAAAtG,EAAAA,EAAAA,GAAAqG,GAAA,GAAjDE,GAAcD,GAAA,GAAEE,GAAiBF,GAAA,GAGlC3M,IAAY6L,EAAAA,EAAAA,QAAyB,MAGrCiB,IAAajB,EAAAA,EAAAA,QAAO,IACpBkB,IAAUlB,EAAAA,EAAAA,QAAyB,MACnCmB,IAAUnB,EAAAA,EAAAA,QAAyB,MACnCoB,IAAcpB,EAAAA,EAAAA,QAAyB,MACvCqB,IAAgBrB,EAAAA,EAAAA,QAAyB,MACzCsB,IAAOtB,EAAAA,EAAAA,QAAO,IAGduB,IAAiBvB,EAAAA,EAAAA,QAA0B,MAC3CwB,IAAiBxB,EAAAA,EAAAA,QAAyB,MAC1CyB,IAAgBzB,EAAAA,EAAAA,QAA0B,MAC1C0B,IAAkB1B,EAAAA,EAAAA,QAA0B,MAC5C2B,IAAkB3B,EAAAA,EAAAA,QAA0B,MAG5C4B,IAAiB5B,EAAAA,EAAAA,QAA0B,MAC3C6B,IAAkB7B,EAAAA,EAAAA,QAAyB,MAC3C8B,IAAS9B,EAAAA,EAAAA,QAAyB,MAClC+B,IAAa/B,EAAAA,EAAAA,QAA4B,MACzCgC,IAAahC,EAAAA,EAAAA,QAA0B,MACvCiC,IAAajC,EAAAA,EAAAA,QAAyB,MACtCkC,IAAalC,EAAAA,EAAAA,QAAO,IACpBmC,IAAanC,EAAAA,EAAAA,QAAO,IACpBoC,IAAcpC,EAAAA,EAAAA,QAAO,IACrBqC,IAAWrC,EAAAA,EAAAA,QAAO,IAExB1B,IAA0BC,EAAAA,EAAAA,YAAW+D,EAAAA,GAA7BC,GAAOjE,GAAPiE,QAASC,GAAIlE,GAAJkE,KACTC,IAAyBC,EAAAA,EAAAA,KAAzBD,qBAEFE,GAAmC,KAAnB5B,GAEtB6B,IACEC,EAAAA,EAAAA,IAA0B,CACxBC,OAAQ,CACN,CAAEnK,IAAK,WAAYlD,MAAO,WAAY3C,MAAO,KAC7C,CAAE6F,IAAK,aAAclD,MAAO,aAAc3C,MAAO,KACjD,CACE6F,IAAK,SACLlD,MAAO,SACP3C,MAAO,GACPiM,KAAM,UAER,CACEpG,IAAK,cACLlD,MAAO,cACP3C,MAAO,KAET,CACE6F,IAAK,UACLlD,MAAO,UACP3C,MAAO,IACPkJ,MAAM,IAGV+G,MAAO,SAACC,GACN,OAAI5B,GAAYhL,QACR,gWAANI,OAQsBwM,EAAM,uCAAAxM,OACNwM,EAAM,wCAAAxM,OACLwM,EAAM,oCAAAxM,OACX4K,GAAYhL,QAAQC,MAAK,wGAKvC,EACR,EACA4M,gBAAgB,SAADC,EAAAC,EAAAC,EAAAC,GAAA,OAAAjE,EAAAA,IAAAkE,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAE,SAAAC,EAAOC,EAAaC,EAAQC,EAAa1G,GAAO,IAAA2G,EAAAC,EAAA,OAAAP,EAAAA,EAAAA,KAAAQ,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,WAC3DR,EAAO,CAADM,EAAAE,KAAA,aACJ9C,GAAYhL,QAAQ,CAAD4N,EAAAE,KAAA,gBAAAF,EAAAE,KAAA,EACJzB,GAAqB,mUAADjM,OAWtB4K,GAAYhL,QAAQC,MAAK,sBAAAG,OAAqBkN,EAAO,GAAE,MAAK,KAAD,EAXpEG,EAAEG,EAAAG,KAYFL,EAAiB,OAAFD,QAAE,IAAFA,OAAE,EAAFA,EAAI/M,KAAKA,KAAK,IACnCsN,EAAAA,EAAAA,GAAK,KAAKC,MAAK,WACTnE,EAAc9J,UACZ8J,EAAc9J,QAAQkO,WAAWlO,UACnC8J,EAAc9J,QAAQkO,WAAWlO,QAAQC,MACvCyN,EAAaS,UAEbrE,EAAc9J,QAAQoO,QAAQpO,UAChC8J,EAAc9J,QAAQoO,QAAQpO,QAAQC,MACpCyN,EAAaW,MAEbvE,EAAc9J,QAAQsO,UAAUtO,UAClC8J,EAAc9J,QAAQsO,UAAUtO,QAAQC,MACtCyN,EAAaa,QAEbzE,EAAc9J,QAAQ2L,WAAW3L,UACnC8J,EAAc9J,QAAQ2L,WAAW3L,QAAQC,MACvCyN,EAAac,SAEb1E,EAAc9J,QAAQyO,aAAazO,UACrC8J,EAAc9J,QAAQyO,aAAazO,QAAQC,MACzCyN,EAAagB,YAEb5E,EAAc9J,QAAQ2O,UAAU3O,UAClC8J,EAAc9J,QAAQ2O,UAAU3O,QAAQC,MACtCyN,EAAakB,YAEb9E,EAAc9J,QAAQ6O,YAAY7O,UACpC8J,EAAc9J,QAAQ6O,YAAY7O,QAChC0N,EAAaoB,OAGrB,IAEAC,GACE,CACEJ,UAAW,CAAE3O,QAAS,CAAEC,MAAOyN,EAAakB,aAC5CV,WAAY,CAAElO,QAAS,CAAEC,MAAOyN,EAAaS,WAC7CM,aAAc,CAAEzO,QAAS,CAAEC,MAAOyN,EAAagB,aAC/CJ,UAAW,CAAEtO,QAAS,CAAEC,MAAOyN,EAAaa,SAC5C5C,WAAY,CAAE3L,QAAS,CAAEC,MAAOyN,EAAac,UAC7CJ,QAAS,CAAEpO,QAAS,CAAEC,MAAOyN,EAAaW,OAC1CQ,YAAa,CAAE7O,QAAS0N,EAAaoB,SAEvC,GAEFE,MACAhB,EAAAA,EAAAA,GAAK,KAAKC,MAAK,WAAO,IAADgB,EACI,QAAvBA,EAAA1D,GAAgBvL,eAAO,IAAAiP,GAAvBA,EAAyBpN,OAC3B,IAAG,yBAAA+L,EAAAsB,OAAA,GAAA7B,EAAA,MAGR8B,MAAA,KAAAC,UAAA,IA9GGC,GAAsB7C,GAAtB6C,uBAAwBC,GAAS9C,GAAT8C,UAAWN,GAAUxC,GAAVwC,WAiH3CO,IAAiEC,EAAAA,EAAAA,UAAS,CACxEpS,SAAUyL,EACV4G,QAAQ,WAAD,OAAAxG,EAAAA,IAAAiE,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAE,SAAAsC,IAAA,OAAAvC,EAAAA,EAAAA,KAAAQ,MAAA,SAAAgC,GAAA,cAAAA,EAAA9B,KAAA8B,EAAA7B,MAAA,cAAA6B,EAAA7B,KAAA,EACD3B,GAAQyD,IAAI,8CAA+C,CAC/DC,QAAS,CACPC,cAAc,UAAD1P,OAAgB,OAAJgM,SAAI,IAAJA,QAAI,EAAJA,GAAM2D,gBAEjC,cAAAJ,EAAAK,OAAA,SAAAL,EAAA5B,MAAA,wBAAA4B,EAAAT,OAAA,GAAAQ,EAAA,MAAAP,MAAA,KAAAC,UAAA,EACJa,sBAAsB,IARLC,GAAkBX,GAA7BrS,UAAqCiT,GAAeZ,GAArB7O,KAWvC0P,IAIIC,EAAAA,EAAAA,IAAkC,CACpCjR,KAAM,SACNkR,KAAM,wCACN5D,OAAQ,CACN,CAAEnK,IAAK,OAAQlD,MAAO,OAAQ3C,MAAO,KACrC,CAAE6F,IAAK,OAAQlD,MAAO,SAAU3C,MAAO,KACvC,CACE6F,IAAK,OACLlD,MAAO,OACP3C,MAAO,KAET,CACE6F,IAAK,KACLlD,MAAO,KACPuG,MAAM,GAER,CACErD,IAAK,YACLlD,MAAO,YACPuG,MAAM,IAGViH,gBAAgB,SAAD0D,EAAAC,EAAAC,EAAAC,GAAA,OAAAxH,EAAAA,IAAAgE,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAE,SAAAuD,EAAOrD,EAAaC,EAAQC,EAAa1G,GAAO,OAAAqG,EAAAA,EAAAA,KAAAQ,MAAA,SAAAiD,GAAA,cAAAA,EAAA/C,KAAA+C,EAAA9C,MAAA,OAC3DR,KACFU,EAAAA,EAAAA,GAAK,KAAKC,MAAK,WAAO,IAAD4C,EAOQC,GAN3BC,QAAQC,IAAI1D,GAEZpC,GAAKlL,QAAUsN,EAAO,GAClBtC,GAAYhL,UACdgL,GAAYhL,QAAQC,MAAQqN,EAAO,IAEjCrC,GAAcjL,WAChBiL,GAAcjL,QAAQC,MAAiB,QAAZ6Q,EAAGxD,EAAO,UAAE,IAAAwD,EAAAA,EAAI,IAEvB,QAAtBD,EAAA1F,GAAenL,eAAO,IAAA6Q,GAAtBA,EAAwBhP,OAC1B,IACAoP,MACD,wBAAAL,EAAA1B,OAAA,GAAAyB,EAAA,MACFxB,MAAA,KAAAC,UAAA,IAzCuB8B,GAA4Bd,GAApDf,uBACW8B,GAAef,GAA1Bd,UACY2B,GAAgBb,GAA5BpB,WA2CFoC,IAIIf,EAAAA,EAAAA,IAAkC,CACpCjR,KAAM,SACNkR,KAAM,wCACN5D,OAAQ,CACN,CAAEnK,IAAK,OAAQlD,MAAO,OAAQ3C,MAAO,KACrC,CAAE6F,IAAK,OAAQlD,MAAO,SAAU3C,MAAO,KACvC,CACE6F,IAAK,OACLlD,MAAO,OACP3C,MAAO,KAET,CACE6F,IAAK,KACLlD,MAAO,KACPuG,MAAM,GAER,CACErD,IAAK,YACLlD,MAAO,YACPuG,MAAM,IAGViH,gBAAgB,SAADwE,EAAAC,EAAAC,EAAAC,GAAA,OAAArI,EAAAA,IAAA+D,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAE,SAAAqE,EAAOnE,EAAaC,EAAQC,EAAa1G,GAAO,OAAAqG,EAAAA,EAAAA,KAAAQ,MAAA,SAAA+D,GAAA,cAAAA,EAAA7D,KAAA6D,EAAA5D,MAAA,OAC3DR,KACFU,EAAAA,EAAAA,GAAK,KAAKC,MAAK,WAAO,IAAD0D,EAECC,GADpB9F,GAAW9L,QAAUsN,EAAO,GACxB5B,GAAO1L,WACT0L,GAAO1L,QAAQC,MAAiB,QAAZ2R,EAAGtE,EAAO,UAAE,IAAAsE,EAAAA,EAAI,IAEpB,QAAlBD,EAAAhG,GAAW3L,eAAO,IAAA2R,GAAlBA,EAAoB9P,OACtB,IACAgQ,MACD,wBAAAH,EAAAxC,OAAA,GAAAuC,EAAA,MACFtC,MAAA,KAAAC,UAAA,IApCuB0C,GAAkCV,GAA1D/B,uBACW0C,GAAqBX,GAAhC9B,UACYuC,GAAsBT,GAAlCpC,WAsCFgD,IAII3B,EAAAA,EAAAA,IAAkC,CACpCjR,KAAM,SACNkR,KAAM,qCACN5D,OAAQ,CACN,CAAEnK,IAAK,UAAWlD,MAAO,UAAW3C,MAAO,KAC3C,CAAE6F,IAAK,OAAQlD,MAAO,SAAU3C,MAAO,KACvC,CAAE6F,IAAK,OAAQlD,MAAO,OAAQ3C,MAAO,MAEvCmQ,gBAAgB,SAADoF,EAAAC,EAAAC,EAAAC,GAAA,OAAAhJ,EAAAA,IAAA8D,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAE,SAAAiF,EAAO/E,EAAaC,EAAQC,EAAa1G,GAAO,OAAAqG,EAAAA,EAAAA,KAAAQ,MAAA,SAAA2E,GAAA,cAAAA,EAAAzE,KAAAyE,EAAAxE,MAAA,OAC3DR,KACFU,EAAAA,EAAAA,GAAK,KAAKC,MAAK,WACbsE,IAAY,GACZC,IAAW,GACXC,GAA2B,CAAEC,KAAMpF,EAAO,IAC5C,IACAqF,MACD,wBAAAL,EAAApD,OAAA,GAAAmD,EAAA,MACFlD,MAAA,KAAAC,UAAA,IApBuBwD,GAAsCZ,GAA9D3C,uBACWwD,GAA+Bb,GAA1C1C,UACYqD,GAAgCX,GAA5ChD,WAqBF8D,IAGIC,EAAAA,EAAAA,aAAY,CACdC,YAAa,6BACbC,WAAW,SAADC,GAAA,OAAA7J,EAAAA,IAAA6D,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAE,SAAA+F,EAAOC,GAAc,OAAAjG,EAAAA,EAAAA,KAAAQ,MAAA,SAAA0F,GAAA,cAAAA,EAAAxF,KAAAwF,EAAAvF,MAAA,cAAAuF,EAAAvF,KAAA,EACzB3B,GAAQyD,IAAI,oDAADxP,OACqCgT,EAAUV,MAC9D,CACE7C,QAAS,CACP,eAAgB,mBAChBC,cAAc,UAAD1P,OAAgB,OAAJgM,SAAI,IAAJA,QAAI,EAAJA,GAAM2D,gBAGpC,cAAAsD,EAAArD,OAAA,SAAAqD,EAAAtF,MAAA,wBAAAsF,EAAAnE,OAAA,GAAAiE,EAAA,MAAAhE,MAAA,KAAAC,UAAA,EACHkE,UAAW,SAACC,GACV,IACMC,EADWD,EACe7S,KAAK+S,WAGnC3I,GAAQ9K,SACR+K,GAAQ/K,SACRgL,GAAYhL,SACZiL,GAAcjL,UAEd8K,GAAQ9K,QAAQC,MAAQuT,EAAe,GAAGd,KAC1C3H,GAAQ/K,QAAQC,MAAQuT,EAAe,GAAGE,QAC1C1I,GAAYhL,QAAQC,MAAQuT,EAAe,GAAGG,MAC9C1I,GAAcjL,QAAQC,MAAQuT,EAAe,GAAGI,OAMlD,IAHA,IAAMC,EAAoB,GACpBC,EAAqB,GAElBC,EAAI,EAAGA,GAAKP,EAAexQ,OAAS,EAAG+Q,IAAK,CACnD,GACgC,OAA9BP,EAAeO,GAAGC,SACuB,KAAzCR,EAAeO,GAAGC,QAAQC,WAC1B,CACA,IAAMC,EAAuC,SAA9BV,EAAeO,GAAGC,QACjCH,EAAMM,KAAK,CACTH,QAASR,EAAeO,GAAGC,QAC3BI,OAAQZ,EAAeO,GAAGM,MAC1BlG,SAAU+F,EAAS,GAAKV,EAAeO,GAAG5F,SAC1CO,WAAYwF,EACR,IACAI,EAAAA,EAAAA,GAAO,IAAIC,KAAKf,EAAeO,GAAGrF,YAAa,cACnD8F,YAAaN,EAAS,GAAKV,EAAeO,GAAG1F,KAC7CoG,UAAWjB,EAAeO,GAAGW,OAC7BC,WAAYnB,EAAeO,GAAGa,QAC9BC,aAAcrB,EAAeO,GAAGe,SAChCC,KAAM,GACNvG,QAASgF,EAAeO,GAAGiB,UAC3BC,GAAIf,EAAS,MAAQ,MACrB7F,KAAMmF,EAAeO,GAAGmB,UACxBC,SAAU3B,EAAeO,GAAGoB,UAEhC,CAGgC,OAA9B3B,EAAeO,GAAGqB,SACuB,KAAzC5B,EAAeO,GAAGqB,QAAQnB,YAE1BH,EAAOK,KAAK,CACVkB,QAAQ,GAADjV,OAAK2T,GACZuB,YAAa9B,EAAeO,GAAGqB,QAC/BG,OAAQ/B,EAAeO,GAAGyB,OAC1BhH,QAASgF,EAAeO,GAAG0B,UAC3BC,KAAMlC,EAAeO,GAAG4B,OACxBC,MAAOpC,EAAeO,GAAG8B,QACzBZ,GAAIzB,EAAeO,GAAGkB,GACtBa,WAAYtC,EAAeO,GAAGgC,SAC9BC,KAAMxC,EAAeO,GAAGkC,WACxBC,QAAS1C,EAAeO,GAAGoC,UAC3BC,UAAW5C,EAAeO,GAAGsC,aAGnC,CAEA1M,EAAW3J,QAAQsW,gBAAgBzC,GACnChK,EAAY7J,QAAQsW,gBAAgBxC,GACpC1J,GACEyJ,EAAM0C,QACJ,SAACC,EAAUC,GAAa,OACtBD,EAAME,WAAWD,EAASrC,OAAOuC,QAAQ,KAAM,IAAI,GACrD,IAGJnM,GACEsJ,EAAOyC,QACL,SAACC,EAAUC,GAAa,OACtBD,EAAME,WAAWD,EAASlB,OAAOoB,QAAQ,KAAM,IAAI,GACrD,IAGJ/L,GAAkB,SACpB,IA/FWgM,GAA2B9D,GAAtC5V,UACQuV,GAA0BK,GAAlC+D,OAkGFC,IAA6DtH,EAAAA,EAAAA,UAAS,CACpEpS,SAAU0L,EACV2G,QAAQ,WAAD,OAAAnG,EAAAA,IAAA4D,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAE,SAAA2J,IAAA,OAAA5J,EAAAA,EAAAA,KAAAQ,MAAA,SAAAqJ,GAAA,cAAAA,EAAAnJ,KAAAmJ,EAAAlJ,MAAA,cAAAkJ,EAAAlJ,KAAA,EACD3B,GAAQyD,IAAI,qCAAsC,CACtDC,QAAS,CACPC,cAAc,UAAD1P,OAAgB,OAAJgM,SAAI,IAAJA,QAAI,EAAJA,GAAM2D,gBAEjC,cAAAiH,EAAAhH,OAAA,SAAAgH,EAAAjJ,MAAA,wBAAAiJ,EAAA9H,OAAA,GAAA6H,EAAA,MAAA5H,MAAA,KAAAC,UAAA,EACJa,sBAAsB,EACtBqD,UAAW,SAACC,GACV,IAAM0D,EAAW1D,GACjBvF,EAAAA,EAAAA,GAAK,KAAKC,MAAK,WAAO,IAADiJ,EAEEC,GADrBtM,GAAW7K,QAAuB,QAAhBkX,EAAGD,EAASvW,YAAI,IAAAwW,OAAA,EAAbA,EAAexE,KAAK,GAAG0E,aACxCtM,GAAQ9K,WACV8K,GAAQ9K,QAAQC,MAAqB,QAAhBkX,EAAGF,EAASvW,YAAI,IAAAyW,OAAA,EAAbA,EAAezE,KAAK,GAAG0E,aAEnD,GACF,IAjBiBC,GAAcP,GAAzB5Z,UAAoCoa,GAAYR,GAArBS,QAmBnCC,IAA6CzE,EAAAA,EAAAA,aAAY,CACvDC,YAAa,wBACbC,WAAW,SAADwE,GAAA,OAAAlO,EAAAA,IAAA2D,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAE,SAAAsK,EAAOtE,GAAc,OAAAjG,EAAAA,EAAAA,KAAAQ,MAAA,SAAAgK,GAAA,cAAAA,EAAA9J,KAAA8J,EAAA7J,MAAA,UACR,WAAnBnD,GAA2B,CAAAgN,EAAA7J,KAAA,QACP,cAAfsF,EAAUwE,KAAKD,EAAA7J,KAAA,EACT3B,GAAQ0L,KACnB,qCACAzE,EACA,CACEvD,QAAS,CACPC,cAAc,UAAD1P,OAAgB,OAAJgM,SAAI,IAAJA,QAAI,EAAJA,GAAM2D,gBAGnC,KAAD,EAOA,KAAD,SAAA4H,EAAA3H,OAAA,SAAA2H,EAAA5J,MAPC,OAEmB,cAAfqF,EAAUwE,KAAKD,EAAA7J,KAAA,EACT3B,GAAQ0L,KAAK,kCAAmCzE,EAAW,CACtEvD,QAAS,CACPC,cAAc,UAAD1P,OAAgB,OAAJgM,SAAI,IAAJA,QAAI,EAAJA,GAAM2D,gBAEjC,wBAAA4H,EAAAzI,OAAA,GAAAwI,EAAA,MACHvI,MAAA,KAAAC,UAAA,EACDkE,UAAW,SAACC,GACV,GAAIA,EAAI7S,KAAKoX,QAEX,OADAC,KACOC,IAAAA,KAAU,CACf1b,SAAU,SACV2b,KAAM,UACNna,MAAOyV,EAAI7S,KAAKwX,QAChBC,mBAAmB,EACnBC,MAAO,OAGXJ,IAAAA,KAAU,CACR1b,SAAU,SACV2b,KAAM,QACNna,MAAOyV,EAAI7S,KAAKwX,QAChBC,mBAAmB,EACnBC,MAAO,MAEX,IAxCMvB,GAAMW,GAANX,OAAmBwB,GAAab,GAAxBta,UA0ChBob,IAA2DvF,EAAAA,EAAAA,aAAY,CACrEC,YAAa,WACbC,WAAW,SAADsF,GAAA,OAAA/O,EAAAA,IAAA0D,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAE,SAAAoL,EAAOpF,GAAc,OAAAjG,EAAAA,EAAAA,KAAAQ,MAAA,SAAA8K,GAAA,cAAAA,EAAA5K,KAAA4K,EAAA3K,MAAA,cAAA2K,EAAA3K,KAAA,EAClB3B,GAAQ0L,KAAK,4BAA6BzE,EAAW,CAChEvD,QAAS,CACPC,cAAc,UAAD1P,OAAgB,OAAJgM,SAAI,IAAJA,QAAI,EAAJA,GAAM2D,gBAEhC,KAAD,SAAA0I,EAAAzI,OAAA,SAAAyI,EAAA1K,MAAA,wBAAA0K,EAAAvJ,OAAA,GAAAsJ,EAAA,MACHrJ,MAAA,KAAAC,UAAA,EACDkE,UAAW,SAACC,GACNA,EAAI7S,KAAKoX,SAgkBjB,SAAiBvE,GACf,IAAM7S,EAAO6S,EAAI7S,KAAKN,OAAOmT,EAAImF,OACjC3H,QAAQC,IAAIuC,IACZoF,EAAAA,EAAAA,YAAU,WACRC,aAAaC,WAAW,eACxBD,aAAaE,QAAQ,aAAcC,KAAKC,UAAUtY,IAClDkY,aAAaE,QAAQ,cAAe,SACpCF,aAAaE,QAAQ,eAAgB,QACrCF,aAAaE,QAAQ,SAAU,cACN,UAAjB,OAAJ1M,SAAI,IAAJA,QAAI,EAAJA,GAAM6M,YACRL,aAAaE,QACX,QACqB,UAAjB,OAAJ1M,SAAI,IAAJA,QAAI,EAAJA,GAAM6M,YACF,uCACA,mDAGNL,aAAaE,QACX,QACA,kDAGN,IACA3W,OAAO1D,KAAK,mBAAoB,SAClC,CAvlBMya,CAAQ3F,EAAI7S,KAEhB,IAbcyY,GAAWb,GAAnBzB,OAAgCuC,GAAcd,GAAzBpb,UAe7B,SAAS6a,MACP/J,EAAAA,EAAAA,GAAK,KAAKC,MAAK,WAAO,IAADoL,EAAAC,EAAAC,EACnBjC,MA6WFtJ,EAAAA,EAAAA,GAAK,KAAKC,MAAK,WACTlD,GAAQ/K,UACV+K,GAAQ/K,QAAQC,OAAQqU,EAAAA,EAAAA,GAAO,IAAIC,KAAQ,eAEzCvJ,GAAYhL,UACdgL,GAAYhL,QAAQC,MAAQ,IAE1BgL,GAAcjL,UAChBiL,GAAcjL,QAAQC,MAAQ,IAEhCiL,GAAKlL,QAAU,EACjB,IAtXEuS,IAAY,GACZC,IAAW,GACO,QAAlB6G,EAAA1P,EAAW3J,eAAO,IAAAqZ,GAAlBA,EAAoBG,QAAQ,IACT,QAAnBF,EAAAzP,EAAY7J,eAAO,IAAAsZ,GAAnBA,EAAqBE,QAAQ,IACV,QAAnBD,EAAAvO,GAAYhL,eAAO,IAAAuZ,GAAnBA,EAAqB1X,QACrB2I,GAAe,GACfJ,GAAc,EAChB,GACF,CAmFA,SAAS2E,GAAe0K,GAA8B,IAAnBC,IAAStK,UAAApM,OAAA,QAAA2W,IAAAvK,UAAA,KAAAA,UAAA,IAC1CpB,EAAAA,EAAAA,GAAK,KAAKC,MAAIf,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAC,SAAAwM,IAAA,IAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA3E,EAAA4E,EAAAC,EAAAC,EAAAC,EAAAC,EAAA1L,EAAA2L,EAAAC,EAAAC,EAAAC,EAAAC,EAAAla,EAAAma,EAAAC,EAAAC,EAAA,OAAA5N,EAAAA,EAAAA,KAAAQ,MAAA,SAAAqN,GAAA,cAAAA,EAAAnN,KAAAmN,EAAAlN,MAAA,OAY8C,GATrDyH,EAASmB,WACS,QADCmD,EACvBJ,EAAK9K,UAAU3O,eAAO,IAAA6Z,OAAA,EAAtBA,EAAwB5Z,MAAM0W,QAAQ,KAAM,KAExCwD,EAAiC,QAA1BL,EAAGL,EAAKvL,WAAWlO,eAAO,IAAA8Z,OAAA,EAAvBA,EAAyB7Z,MACnCma,EAAqC,QAA5BL,EAAGN,EAAKhL,aAAazO,eAAO,IAAA+Z,OAAA,EAAzBA,EAA2B9Z,MACvCoa,EAA+B,QAAzBL,EAAGP,EAAKnL,UAAUtO,eAAO,IAAAga,OAAA,EAAtBA,EAAwB/Z,MACjCqa,EAAiC,QAA1BL,EAAGR,EAAK9N,WAAW3L,eAAO,IAAAia,OAAA,EAAvBA,EAAyBha,MACnCsa,EAA2B,QAAvBL,EAAGT,EAAKrL,QAAQpO,eAAO,IAAAka,OAAA,EAApBA,EAAsBja,MAC7B4O,EAAc4K,EAAK5K,YAAY7O,QAC/Bwa,EAAiB7Q,EAAW3J,QAAQwa,kBAGxC7Q,EAAW3J,QAAQib,eAAed,IACf,OAAnBK,EAAuB,CAAAQ,EAAAlN,KAAA,gBAAAkN,EAAAhL,OAAA,SAEhBkL,MAAM,8BAA4B,WAGpB,OAAnBV,EAAuB,CAAAQ,EAAAlN,KAAA,UACnB2M,EAAiB9Q,EAAW3J,QAAQmb,WAC3BX,GAAgB,GAAKjF,EAAO6F,eAAe,QAAS,CACjEC,sBAAuB,EACvBC,sBAAuB,IAEzBb,EAAeD,GAAgB,GAAKL,EACpCM,EAAeD,GAAgB,GAAKJ,EACpCK,EAAeD,GAAgB,GAAKH,EACpCI,EAAeD,GAAgB,GAAKF,EACpCG,EAAeD,GAAgB,IAAMD,EACrCE,EAAeD,GAAgB,IAAM3L,EACrClF,EAAW3J,QAAQwZ,QAAQiB,GAC3B9Q,EAAW3J,QAAQub,eAAe,MAClC5R,EAAW3J,QAAQwb,gBACnBpR,GACEqQ,EAAelE,QACb,SAACC,EAAUC,GAAa,OACtBD,EAAME,WAAWD,EAAS,GAAGE,QAAQ,KAAM,IAAI,GACjD,IAEFqE,EAAAlN,KAAA,wBAAAkN,EAAAlN,KAAA,GAEezB,GAAqB,qIAEpC,KAAD,GAFKuO,EAAEI,EAAAjN,KAGFrN,EAAO,CACXsT,QAAS,QACTI,OAAQmB,EAAO6F,eAAe,QAAS,CACrCC,sBAAuB,EACvBC,sBAAuB,IAEzBnN,SAAUgM,EACVzL,WAAY0L,EACZ5F,YAAa6F,EACb5F,UAAkB,QAATiG,EAAEE,EAAGla,YAAI,IAAAga,OAAA,EAAPA,EAASha,KAAK,GAAG+T,UAC5BE,WAAmB,QAATgG,EAAEC,EAAGla,YAAI,IAAAia,OAAA,EAAPA,EAASja,KAAK,GAAGiU,WAC7BE,aAAc,GACdE,KAAM,GACNvG,QAAS8L,EACTrF,GAAIlL,EACJsE,KAAMkM,EACNpF,SAAUtG,GAEN4L,EAAiB9Q,EAAW3J,QAAQmb,UACpCL,EAAmBL,EAAegB,KAAI,SAACC,GAgB3C,MAfa,CACX1H,QAAS0H,EAAI,GACbtH,OAAQsH,EAAI,GACZvN,SAAUuN,EAAI,GACdhN,WAAYgN,EAAI,GAChBlH,YAAakH,EAAI,GACjBjH,UAAWiH,EAAI,GACf/G,WAAY+G,EAAI,GAChB7G,aAAc6G,EAAI,GAClB3G,KAAM2G,EAAI,GACVlN,QAASkN,EAAI,GACbzG,GAAIyG,EAAI,IACRrN,KAAMqN,EAAI,IACVvG,SAAUuG,EAAI,IAGlB,IACMX,EAAY,GAAA3a,QAAA4G,EAAAA,EAAAA,GAAO8T,GAAgB,CAAEpa,IAC3CiJ,EAAW3J,QAAQsW,gBAAgByE,GACnC3Q,GACE2Q,EAAaxE,QACX,SAACC,EAAUC,GAAa,OACtBD,EAAME,WAAWD,EAASrC,OAAOuC,QAAQ,KAAM,IAAI,GACrD,IAEF,QAGA+C,GACF5P,EAAc9J,QAAQ2b,aACvB,yBAAAX,EAAA9L,OAAA,GAAA0K,EAAA,KAEL,CAAC,SACcgC,KAAU,OAAAlS,EAAAA,IAAAwD,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAzB,SAAAyO,IAAA,IAAAC,EAAAlB,EAAAmB,EAAAvB,EAAAwB,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAlc,EAAAmc,EAAA/B,EAAAgC,EAAAC,EAAA9H,EAAA+H,EAAAC,EAAAxC,EAAAyC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAA5Q,EAAAA,EAAAA,KAAAQ,MAAA,SAAAqQ,GAAA,cAAAA,EAAAnQ,KAAAmQ,EAAAlQ,MAAA,YAEKtC,GAAexL,SAA4C,KAAjCwL,GAAexL,QAAQC,OACjDuL,GAAexL,SAA4C,OAAjCwL,GAAexL,QAAQC,OACjDuL,GAAexL,cAA4C2Z,IAAjCnO,GAAexL,QAAQC,OAAoB,CAAA+d,EAAAlQ,KAAA,QAEvC,OAA/BtC,GAAexL,QAAQ6B,QAAQmc,EAAAhO,OAAA,SACxBkL,MAAM,iCAA+B,WAE1C1P,GAAexL,QAAQ,CAADge,EAAAlQ,KAAA,eAAAkQ,EAAAlQ,KAAA,EACPzB,GAAqB,uDAADjM,OACoBoL,GAAexL,QAAQC,MAAK,MACnF,KAAD,EAFO,GAAF2a,EAAEoD,EAAAjQ,QAGQ,QAAZ+N,EAAAlB,EAAGla,KAAKA,YAAI,IAAAob,OAAA,EAAZA,EAAc9Y,SAAU,GAAC,CAAAgb,EAAAlQ,KAAA,eAAAkQ,EAAAhO,OAAA,SACpBkL,MAAM,iCAA+B,WAG5CzP,GAAgBzL,QAAQ,CAADge,EAAAlQ,KAAA,cAEvBmQ,MAAMvH,WAAWjL,GAAgBzL,QAAQC,MAAM0W,QAAQ,KAAM,OAC7DD,WAAWjL,GAAgBzL,QAAQC,MAAM0W,QAAQ,KAAM,MAAQ,GAAC,CAAAqH,EAAAlQ,KAAA,SAEhC,OAAhCrC,GAAgBzL,QAAQ6B,QAAQmc,EAAAhO,OAAA,SACzBkL,MAAM,2BAAyB,YAGtCrP,GAAW7L,SAAwC,KAA7B6L,GAAW7L,QAAQC,MAAY,CAAA+d,EAAAlQ,KAAA,SAC5B,OAA3BjC,GAAW7L,QAAQ6B,QAAQmc,EAAAhO,OAAA,SACpBkL,MAAM,4BAA0B,WAEd,KAAvBpP,GAAW9L,QAAc,CAAAge,EAAAlQ,KAAA,SACH,OAAV,QAAdiO,EAAArQ,GAAO1L,eAAO,IAAA+b,GAAdA,EAAgBla,QAAQmc,EAAAhO,OAAA,SACjBkL,MAAM,0BAAwB,QAmEtC,GA9DsB,QAFjBV,EAAiB3Q,EAAY7J,QAAQwa,oBAGnC8B,EAAkBzS,EAAY7J,QAAQmb,WAC5BX,GAAgB,GAA2B,QAAzBwB,EAAGxQ,GAAexL,eAAO,IAAAgc,OAAA,EAAtBA,EAAwB/b,MAC7Dqc,EAAgB9B,GAAgB,GAA4B,QAA1ByB,EAAGxQ,GAAgBzL,eAAO,IAAAic,OAAA,EAAvBA,EAAyBhc,MAC9Dqc,EAAgB9B,GAAgB,GAAmB,QAAjB0B,EAAGxQ,GAAO1L,eAAO,IAAAkc,OAAA,EAAdA,EAAgBjc,MACrDqc,EAAgB9B,GAAgB,GAAuB,QAArB2B,EAAGxQ,GAAW3L,eAAO,IAAAmc,OAAA,EAAlBA,EAAoBlc,MACzDqc,EAAgB9B,GAAgB,GAAuB,QAArB4B,EAAGxQ,GAAW5L,eAAO,IAAAoc,OAAA,EAAlBA,EAAoBnc,MACzDqc,EAAgB9B,GAAgB,GAAuB,QAArB6B,EAAGxQ,GAAW7L,eAAO,IAAAqc,OAAA,EAAlBA,EAAoBpc,MACzDqc,EAAgB9B,GAAgB,GAAKzO,GAAW/L,QAChDsc,EAAgB9B,GAAgB,GAAKxO,GAAYhM,QACjDsc,EAAgB9B,GAAgB,GAAKvO,GAASjM,QAC9Csc,EAAgB9B,GAAgB,GAAK1O,GAAW9L,QAEhD6J,EAAY7J,QAAQwZ,QAAQ8C,GAC5BzS,EAAY7J,QAAQub,eAAe,MACnC1R,EAAY7J,QAAQwb,gBACpBhR,GACE8R,EAAgB/F,QACd,SAACC,EAAUC,GAAa,OACtBD,EAAME,WAAWD,EAAS,GAAGE,QAAQ,KAAM,IAAI,GACjD,MAIEjW,EAAO,CACX4U,YAAmC,QAAxBiH,EAAE/Q,GAAexL,eAAO,IAAAuc,OAAA,EAAtBA,EAAwBtc,MACrCsV,OAA+B,QAAzBiH,EAAE/Q,GAAgBzL,eAAO,IAAAwc,OAAA,EAAvBA,EAAyBvc,MACjC+V,KAAoB,QAAhByG,EAAE/Q,GAAO1L,eAAO,IAAAyc,OAAA,EAAdA,EAAgBxc,MACtBuO,QAA2B,QAApBkO,EAAE/Q,GAAW3L,eAAO,IAAA0c,OAAA,EAAlBA,EAAoBzc,MAC7BiW,QAA2B,QAApByG,EAAE/Q,GAAW5L,eAAO,IAAA2c,OAAA,EAAlBA,EAAoB1c,MAC7BmW,UAA6B,QAApBwG,EAAE/Q,GAAW7L,eAAO,IAAA4c,OAAA,EAAlBA,EAAoB3c,MAC/ByV,KAAM3J,GAAW/L,QACjB4V,MAAO5J,GAAYhM,QACnBiV,GAAIhJ,GAASjM,QACb8V,WAAYhK,GAAW9L,SAGnBsc,EAAkBzS,EAAY7J,QAAQmb,UACtCL,EAAmBwB,EAAgBb,KAAI,SAACC,GAa5C,MAZa,CACXpG,YAAaoG,EAAI,GACjBnG,OAAQmG,EAAI,GACZ1F,KAAM0F,EAAI,GACVlN,QAASkN,EAAI,GACbxF,QAASwF,EAAI,GACbtF,UAAWsF,EAAI,GACfhG,KAAMgG,EAAI,GACV9F,MAAO8F,EAAI,GACXzG,GAAIyG,EAAI,GACR5F,WAAY4F,EAAI,GAGpB,IACMoB,EAAkB,GAAA1c,QAAA4G,EAAAA,EAAAA,GAAO8T,GAAgB,CAAEpa,IACjDmJ,EAAY7J,QAAQsW,gBAAgBwG,GACpCtS,GACEsS,EAAmBvG,QACjB,SAACC,EAAUC,GAAa,OACtBD,EAAME,WAAWD,EAASlB,OAAOoB,QAAQ,KAAM,IAAI,GACrD,MAKF/K,GAAW5L,SAAwC,QAA7B4L,GAAW5L,QAAQC,MAAe,CAAA+d,EAAAlQ,KAAA,gBAAAkQ,EAAAlQ,KAAA,GACzCzB,GAAqB,kMAEpC,KAAD,GAFO,OAAFuO,EAAEoD,EAAAjQ,KAAAiQ,EAAAlQ,KAAA,GAGSzB,GAAqB,uEAEpC,KAAD,GAFK4I,EAAE+I,EAAAjQ,KAIJiP,EAAa,EACbC,EAAW,EAEXxR,GAAgBzL,UAClBgd,EACEtG,WAAWjL,GAAgBzL,QAAQC,MAAM0W,QAAQ,KAAM,KAAO,KAChEsG,EAAwB,IAAbD,GAGPvC,EAAiB5Q,EAAY7J,QAAQmb,UAEpB,OAAnBX,IACIgD,EAAe,IACb,GAAK,aACbA,EAAQ,GAAKP,EAAS7B,eAAe,QAAS,CAC5CC,sBAAuB,EACvBC,sBAAuB,IAEzBkC,EAAQ,GAAmB,QAAjBN,EAAGxR,GAAO1L,eAAO,IAAAkd,OAAA,EAAdA,EAAgBjd,MAC7Bud,EAAQ,GAAuB,QAArBL,EAAGxR,GAAW3L,eAAO,IAAAmd,OAAA,EAAlBA,EAAoBld,MACjCud,EAAQ,GAAK,MACbA,EAAQ,GAAuB,QAArBJ,EAAGvR,GAAW7L,eAAO,IAAAod,OAAA,EAAlBA,EAAoBnd,MACjCud,EAAQ,GAAY,QAAVH,EAAGzC,EAAGla,YAAI,IAAA2c,OAAA,EAAPA,EAAS3c,KAAK,GAAG+T,UAC9B+I,EAAQ,GAAY,QAAVF,EAAG1C,EAAGla,YAAI,IAAA4c,OAAA,EAAPA,EAAS5c,KAAK,GAAGiU,WAC9B6I,EAAQ,GAAY,QAAVD,EAAGtI,EAAGvU,YAAI,IAAA6c,OAAA,EAAPA,EAAS7c,KAAK,GAAGgV,KAC9B8H,EAAQ,GAAK1R,GAAW9L,QAExBya,EAAeD,GAAgB,GAAKwC,EAAW5B,eAAe,QAAS,CACrEC,sBAAuB,EACvBC,sBAAuB,IAGzBb,EAAeyD,OAAO1D,EAAiB,EAAG,EAAGgD,GAC7C3T,EAAY7J,QAAQwZ,QAAQiB,MAEtB+C,EAAe,IACb,GAAK,aACbA,EAAQ,GAAKP,EAAS7B,eAAe,QAAS,CAC5CC,sBAAuB,EACvBC,sBAAuB,IAEzBkC,EAAQ,GAAmB,QAAjBC,EAAG/R,GAAO1L,eAAO,IAAAyd,OAAA,EAAdA,EAAgBxd,MAC7Bud,EAAQ,GAAuB,QAArBE,EAAG/R,GAAW3L,eAAO,IAAA0d,OAAA,EAAlBA,EAAoBzd,MACjCud,EAAQ,GAAK,MACbA,EAAQ,GAAuB,QAArBG,EAAG9R,GAAW7L,eAAO,IAAA2d,OAAA,EAAlBA,EAAoB1d,MACjCud,EAAQ,GAAY,QAAVI,EAAGhD,EAAGla,YAAI,IAAAkd,OAAA,EAAPA,EAASld,KAAK,GAAG+T,UAC9B+I,EAAQ,GAAY,QAAVK,EAAGjD,EAAGla,YAAI,IAAAmd,OAAA,EAAPA,EAASnd,KAAK,GAAGiU,WAC9B6I,EAAQ,GAAY,QAAVM,EAAG7I,EAAGvU,YAAI,IAAAod,OAAA,EAAPA,EAASpd,KAAK,GAAGgV,KAC9B8H,EAAQ,GAAK1R,GAAW9L,QAExBya,EAAeA,EAAezX,QAAUwa,EACxC/C,EAAeA,EAAezX,OAAS,GAAG,GACxCga,EAAW5B,eAAe,QAAS,CACjCC,sBAAuB,EACvBC,sBAAuB,IAE3BzR,EAAY7J,QAAQwZ,QAAQiB,IAC7B,QAEHlI,KAAc,yBAAAyL,EAAA9O,OAAA,GAAA2M,EAAA,MACf1M,MAAA,KAAAC,UAAA,CAeD,SAASoD,KAA6B,IAAD2L,EAAjBC,IAAQhP,UAAApM,OAAA,QAAA2W,IAAAvK,UAAA,KAAAA,UAAA,GACL,QAArB+O,EAAArU,EAAc9J,eAAO,IAAAme,GAArBA,EAAuBxC,aACvB3R,GAAe,OACXmB,GAAenL,UACjBmL,GAAenL,QAAQC,MAAQ,QAEjC+N,EAAAA,EAAAA,GAAK,KAAKC,MAAK,WACgB,IAADoQ,EAAxBjT,GAAepL,UACjBoL,GAAepL,QAAQC,MAAQ,GAC3Bme,IAAgC,QAAtBC,EAAAjT,GAAepL,eAAO,IAAAqe,GAAtBA,EAAwBxc,SAE1C,GACF,CACA,SAAS0Q,KAA8B,IAAlB6L,IAAQhP,UAAApM,OAAA,QAAA2W,IAAAvK,UAAA,KAAAA,UAAA,IAC3BpB,EAAAA,EAAAA,GAAK,KAAKC,MAAK,WAAO,IAADqQ,EACf9S,GAAexL,UACjBwL,GAAexL,QAAQC,MAAQ,IAE7BwL,GAAgBzL,UAClByL,GAAgBzL,QAAQC,MAAQ,QAE9ByL,GAAO1L,UACT0L,GAAO1L,QAAQC,MAAQ,IAErB0L,GAAW3L,UACb2L,GAAW3L,QAAQC,MAAQ,IAEzB2L,GAAW5L,UACb4L,GAAW5L,QAAQC,MAAQ,WAEzB4L,GAAW7L,UACb6L,GAAW7L,QAAQC,MAAQ,IAE7B8L,GAAW/L,QAAU,GACrBgM,GAAYhM,QAAU,GACtBiM,GAASjM,QAAU,GACnB8L,GAAW9L,QAAU,GACjBoe,IAAgC,QAAtBE,EAAA9S,GAAexL,eAAO,IAAAse,GAAtBA,EAAwBzc,QACxC,GACF,CAkLA,OACEjD,EAAAA,EAAAA,MAAA,OACEvC,MAAO,CACLY,OAAQ,OACRP,MAAO,OACP0J,WAAY,WACZzH,SAAA,EAEFJ,EAAAA,EAAAA,KAACqU,GAAsC,KACvCrU,EAAAA,EAAAA,KAAC2S,GAA4B,KAC7B3S,EAAAA,EAAAA,KAACuT,GAAkC,KACnCvT,EAAAA,EAAAA,KAACggB,EAAAA,EAAU,CAACzgB,MAAM,gBAClBS,EAAAA,EAAAA,KAAC8Q,GAAsB,KACvB9Q,EAAAA,EAAAA,KAACigB,EAAU,CACThb,IAAKsG,EACL2U,aAAc,WAEZ1P,GADajF,EAAc9J,QAAQ0e,UAErC,EACAC,cAAe,WAAO,IAADC,EACnBjV,EAAW3J,QAAQub,eAAe,MAClC5R,EAAW3J,QAAQwb,gBACI,QAAvBoD,EAAAtT,GAAgBtL,eAAO,IAAA4e,GAAvBA,EAAyB/c,OAC3B,KAGAwW,IAAiBe,IAAkBxC,MACnCrY,EAAAA,EAAAA,KAACsgB,EAAAA,EAAO,KAGVjgB,EAAAA,EAAAA,MAAA,OACEvC,MAAO,CACLK,MAAO,OACPO,OAAQ,MACRsJ,QAAS,OACTiC,cAAe,SACfnC,QAAS,OACT1H,SAAA,EAEFC,EAAAA,EAAAA,MAAA,OACEvC,MAAO,CACLY,OAAQ,OACRsJ,QAAS,OACT6B,UAAW,QACXzJ,SAAA,EAEFJ,EAAAA,EAAAA,KAACugB,EAAAA,GAAS,CACRC,eAAgB,CAAEriB,MAAO,SACzB2C,MAAO,CACLvB,MAAO,WACPzB,MAAO,CACLiK,SAAU,OACVE,WAAY,OACZ9J,MAAO,SAGXsiB,MAAO,CACL7e,UAAW,8BACXwI,KAAM,SACNhJ,UAAW,SAACC,GACI,UAAVA,EAAE2C,KAA6B,gBAAV3C,EAAE2C,MACzB3C,EAAEG,iBACF8S,GAAgCjT,EAAEqf,cAAchf,OAEpD,EACA5D,MAAO,CAAEK,MAAO,QAASO,OAAQ,SAEnCgb,MAAM1Z,EAAAA,EAAAA,KAAC2gB,EAAAA,EAAU,CAACpgB,GAAI,CAAEwH,SAAU,UAClC6Y,YAAa,SAACvf,GACZA,EAAEG,iBACEhC,GAAUiC,SACZ6S,GAAgC9U,GAAUiC,QAAQC,MACtD,EACAP,SAAU3B,MAEZQ,EAAAA,EAAAA,KAACsC,EAAAA,EAAU,CACT,aAAW,MACXzB,KAAK,QACL0B,MAAM,OACNC,QAhQV,WACE6J,GAAkB,OAClBmN,IACF,EA6P+BpZ,UAErBJ,EAAAA,EAAAA,KAAC6gB,EAAAA,EAAO,OAEV7gB,EAAAA,EAAAA,KAACsC,EAAAA,EAAU,CACTwe,SAAU9S,GACV,aAAW,OACXnN,KAAK,QACL0B,MAAM,UACNC,QArQV,WAAyB,IAADue,EAAAC,EAAAC,EAAAC,EAChBhF,EAAiB9Q,EAAW3J,QAAQmb,UACpCmB,EAAkBzS,EAAY7J,QAAQmb,UAE5C,GAAIrQ,GAAQ9K,SAAqC,KAA1B8K,GAAQ9K,QAAQC,MACrC,OAAO+X,IAAAA,KAAU,CACf1b,SAAU,SACV2b,KAAM,UACNna,MAAO,2BACPsa,MAAO,OAEJ,GAAIpN,GAAYhL,SAAyC,KAA9BgL,GAAYhL,QAAQC,MACpD,OAAO+X,IAAAA,KAAU,CACf1b,SAAU,SACV2b,KAAM,UACNna,MAAO,8BACPsa,MAAO,OACNnK,MAAK,YACND,EAAAA,EAAAA,GAAK,KAAKC,MAAK,WAAO,IAADyR,EACf1U,GAAYhL,SAASmR,GAAmC,QAApBuO,EAAC1U,GAAYhL,eAAO,IAAA0f,OAAA,EAAnBA,EAAqBzf,MAChE,GACF,IACK,GAAIwa,EAAezX,QAAU,EAClC,OAAOgV,IAAAA,KAAU,CACf1b,SAAU,SACV2b,KAAM,UACNna,MAAO,6BACPsa,MAAO,OACNnK,MAAK,YACND,EAAAA,EAAAA,GAAK,KAAKC,MAAK,WAAO,IAAD0R,EACG,QAAtBA,EAAAxU,GAAenL,eAAO,IAAA2f,GAAtBA,EAAwB9d,OAC1B,GACF,IACK,GAAIya,EAAgBtZ,QAAU,EACnC,OAAOgV,IAAAA,KAAU,CACf1b,SAAU,SACV2b,KAAM,UACNna,MAAO,8BACPsa,MAAO,OACNnK,MAAK,YACND,EAAAA,EAAAA,GAAK,KAAKC,MAAK,WAAO,IAAD2R,EACG,QAAtBA,EAAApU,GAAexL,eAAO,IAAA4f,GAAtBA,EAAwB/d,OAC1B,GACF,IACK,GACL6U,WACE+D,EAAelE,QACb,SAACC,EAAUqJ,GAAQ,OACjBrJ,EAAME,WAAWmJ,EAAI,GAAG5L,WAAW0C,QAAQ,KAAM,IAAI,GACvD,IAEFmJ,QAAQ,KACVpJ,WACE4F,EAAgB/F,QACd,SAACC,EAAUqJ,GAAQ,OACjBrJ,EAAME,WAAWmJ,EAAI,GAAG5L,WAAW0C,QAAQ,KAAM,IAAI,GACvD,IAEFmJ,QAAQ,GAEV,OAAO9H,IAAAA,KAAU,CACf1b,SAAU,SACV2b,KAAM,UACNna,MACE,4EACFsa,MAAO,OAIX,IAAM2H,EAA2BzD,EAAgBb,KAAI,SAACC,GAapD,MAZa,CACXpG,YAAaoG,EAAI,GACjBnG,OAAQmG,EAAI,GACZ1F,KAAM0F,EAAI,GACVlN,QAASkN,EAAI,GACbxF,QAASwF,EAAI,GACbtF,UAAWsF,EAAI,GACfhG,KAAMgG,EAAI,GACV9F,MAAO8F,EAAI,GACXzG,GAAIyG,EAAI,GACR5F,WAAY4F,EAAI,GAGpB,IAEMsE,EAA0BvF,EAAegB,KAAI,SAACC,GAgBlD,MAfa,CACX1H,QAAS0H,EAAI,GACbtH,OAAQsH,EAAI,GACZvN,SAAUuN,EAAI,GACdhN,WAAYgN,EAAI,GAChBlH,YAAakH,EAAI,GACjBjH,UAAWiH,EAAI,GACf/G,WAAY+G,EAAI,GAChB7G,aAAc6G,EAAI,GAClB3G,KAAM2G,EAAI,GACVlN,QAASkN,EAAI,GACbzG,GAAIyG,EAAI,IACRrN,KAAMqN,EAAI,IACVvG,SAAUuG,EAAI,IAGlB,IAEMuE,EAAQ,CACZvN,KAAqB,QAAjB4M,EAAExU,GAAQ9K,eAAO,IAAAsf,OAAA,EAAfA,EAAiBrf,MACvBsU,KAAqB,QAAjBgL,EAAExU,GAAQ/K,eAAO,IAAAuf,OAAA,EAAfA,EAAiBtf,MACvBigB,IAAwB,QAArBV,EAAExU,GAAYhL,eAAO,IAAAwf,OAAA,EAAnBA,EAAqBvf,MAC1B+V,KAA2B,QAAvByJ,EAAExU,GAAcjL,eAAO,IAAAyf,OAAA,EAArBA,EAAuBxf,MAC7B4T,MAAOkF,KAAKC,UAAUgH,GACtBlM,OAAQiF,KAAKC,UAAU+G,IAGF,WAAnBpV,IACFwV,EAAAA,EAAAA,GAAuB,CACrBC,UAAU,EACVC,GAAI,SAACC,GACHzJ,IAAM3Q,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EAAI+Z,GAAK,IAAEK,qBAAAA,EAAsB1I,KAAM,KACjD,KAGF2I,EAAAA,EAAAA,GAAuB,CACrBC,UAAW,WACT3J,IAAM3Q,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EAAI+Z,GAAK,IAAErI,KAAM,KAC3B,GAGN,EAsIgCjZ,UAEtBJ,EAAAA,EAAAA,KAACkiB,EAAAA,EAAQ,OAEXliB,EAAAA,EAAAA,KAACsC,EAAAA,EAAU,CACTwe,SAA6B,WAAnB1U,GACV,aAAW,QACXvL,KAAK,QACL0B,MAAM,YACNC,QA9IV,WACM+J,GAAQ9K,SAASmZ,GAAY,CAAEzG,KAAM5H,GAAQ9K,QAAQC,OAC3D,EA4IiCtB,UAEvBJ,EAAAA,EAAAA,KAACmiB,EAAAA,EAAkB,OAErBniB,EAAAA,EAAAA,KAACsC,EAAAA,EAAU,CACTwe,SAAU9S,GACV,aAAW,QACXnN,KAAK,QACL0B,MAAM,QACNC,QApJV,WACEiX,IAAAA,KAAU,CACRla,MAAO,gBACP6iB,KAAM,oCACN1I,KAAM,UACN2I,kBAAkB,EAClBC,mBAAoB,UACpBC,kBAAmB,OACnBC,kBAAmB,oBAClB9S,MAAK,SAAC+S,GACHA,EAAOC,cACTrW,GAAkB,IAClBmN,KAEJ,GACF,EAqIiCpZ,UAEvBJ,EAAAA,EAAAA,KAACyC,EAAAA,EAAS,UAGdpC,EAAAA,EAAAA,MAAA,OACEvC,MAAO,CACLoM,KAAM,EACNyY,OAAQ,oBACR3a,QAAS,OACTgC,WAAY,SACZH,UAAW,OACX/B,QAAS,MACT3J,MAAO,QACPiC,SAAA,EAEFC,EAAAA,EAAAA,MAAA,OACEvC,MAAO,CACLkK,QAAS,OACTiC,cAAe,SACf2Y,OAAQ,MACRzkB,MAAO,OACPiC,SAAA,CAED0Y,IACC9Y,EAAAA,EAAAA,KAAC6iB,EAAAA,EAAa,CAAC5b,QAAS6R,MAExB9Y,EAAAA,EAAAA,KAACugB,EAAAA,GAAS,CACRC,eAAgB,CACdriB,MAAO,SAET2C,MAAO,CACLvB,MAAO,YACPzB,MAAO,CACLiK,SAAU,OACVE,WAAY,OACZ9J,MAAO,SAGXsiB,MAAO,CACLK,SAAU9S,GACV8U,UAAU,EACV1Y,KAAM,OACNtM,MAAO,CAAEK,MAAO,SAChBiD,UAAW,SAACC,GACK,gBAAXA,EAAEE,MAAqC,UAAXF,EAAEE,MAChCwX,IAEJ,GAEF5X,SAAUoL,GACVmN,MAAM1Z,EAAAA,EAAAA,KAAC+iB,EAAAA,EAAc,CAACxiB,GAAI,CAAEwH,SAAU,UACtC6Y,YAAa,SAACvf,GACZA,EAAEG,iBACE2L,GAAO1L,SACTsX,IAEJ,KAGJ/Y,EAAAA,EAAAA,KAACugB,EAAAA,GAAS,CACRzf,MAAO,CACLvB,MAAO,UACPzB,MAAO,CACLiK,SAAU,OACVE,WAAY,OACZ9J,MAAO,SAGXsiB,MAAO,CACLK,SAAU9S,GACV5D,KAAM,OACNtM,MAAO,CAAEK,MAAO,SAChB6kB,cAAcjN,EAAAA,EAAAA,GAAO,IAAIC,KAAQ,cACjC5U,UAAW,SAACC,GAC2C,IAAD4hB,EAArC,gBAAX5hB,EAAEE,MAAqC,UAAXF,EAAEE,OACb,QAAnB0hB,EAAAxW,GAAYhL,eAAO,IAAAwhB,GAAnBA,EAAqB3f,QAEzB,GAEFnC,SAAUqL,SAGdnM,EAAAA,EAAAA,MAAA,OACEvC,MAAO,CACLkK,QAAS,OACTiC,cAAe,SACf2Y,OAAQ,MACRzkB,MAAO,OACPiC,SAAA,EAEFJ,EAAAA,EAAAA,KAACugB,EAAAA,GAAS,CACRC,eAAgB,CACdriB,MAAO,OAET2C,MAAO,CACLvB,MAAO,kBACPzB,MAAO,CACLiK,SAAU,OACVE,WAAY,OACZ9J,MAAO,UAGXsiB,MAAO,CACLK,SAAU9S,GACV5D,KAAM,OACNtM,MAAO,CAAEoM,KAAM,GACf9I,UAAW,SAACC,GACK,gBAAXA,EAAEE,MAAqC,UAAXF,EAAEE,MAChCqR,GAAgBvR,EAAEqf,cAAchf,MAEpC,GAEFgY,MAAM1Z,EAAAA,EAAAA,KAACkjB,EAAAA,EAAc,CAAC3iB,GAAI,CAAEwH,SAAU,UACtC6Y,YAAa,SAACvf,GACZA,EAAEG,iBACEiL,GAAYhL,SACdmR,GAAgBnG,GAAYhL,QAAQC,MAExC,EACAP,SAAUsL,MAEZzM,EAAAA,EAAAA,KAACugB,EAAAA,GAAS,CACRzf,MAAO,CACLvB,MAAO,iBACPzB,MAAO,CACLiK,SAAU,OACVE,WAAY,OACZ9J,MAAO,UAGXsiB,MAAO,CACLK,SAAU9S,GACV5D,KAAM,OACNtM,MAAO,CAAEK,MAAO,OAChBiD,UAAW,SAACC,GACK,gBAAXA,EAAEE,MAA0BF,EAAEE,IAEpC,GAEFJ,SAAUuL,eAKlB1M,EAAAA,EAAAA,KAAA,OAAKlC,MAAO,CAAEY,OAAQ,UACtBsB,EAAAA,EAAAA,KAACmjB,EAAgB,CACf5jB,MAAO,sBACP6jB,cACE/iB,EAAAA,EAAAA,MAAA,OACEvC,MAAO,CACLkK,QAAS,OACTiC,cAAe,SACf2Y,OAAQ,MACRzkB,MAAO,QACPiC,SAAA,EAEFC,EAAAA,EAAAA,MAAA,OACEvC,MAAO,CACLkK,QAAS,OACTgC,WAAY,SACZH,UAAW,OACXwZ,UAAW,MACXnZ,KAAM,GACN9J,SAAA,EAEFJ,EAAAA,EAAAA,KAACsjB,EAAAA,GAAW,CACV9C,eAAgB,CAAEriB,MAAO,QACzB2C,MAAO,CACLvB,MAAO,kBACPzB,MAAO,CACLiK,SAAU,OACVE,WAAY,OACZ9J,MAAO,UAGXolB,UAAW3W,GACX4W,OAAQ,CACN1C,SAAU9S,GACVlQ,MAAO,CAAEoM,KAAM,EAAGxL,OAAQ,QAC1BgD,MAAO8J,EACPpK,UAAW,SAACC,GAC2C,IAADoiB,EAArC,gBAAXpiB,EAAEE,MAAqC,UAAXF,EAAEE,OAChCF,EAAEG,iBACoB,QAAtBiiB,EAAA5W,GAAepL,eAAO,IAAAgiB,GAAtBA,EAAwBngB,QAE5B,EACArC,SAAU,SAACI,GACc,QAAnBA,EAAEqiB,OAAOhiB,OAAmBmL,GAAepL,UAC7CoL,GAAepL,QAAQC,MAAQ,QAC/B+N,EAAAA,EAAAA,GAAK,KAAKC,MAAK,WAAO,IAADiU,EACI,QAAvBA,EAAA5W,GAAgBtL,eAAO,IAAAkiB,GAAvBA,EAAyBrgB,OAC3B,KAEFmI,GAAepK,EAAEqiB,OAAOhiB,MAC1B,GAEFkiB,WAAY,CACV,CAAE5f,IAAK,OAAQtC,MAAO,OACtB,CAAEsC,IAAK,QAAStC,MAAO,QAEzBmiB,OAAQ,QACR7b,QAAS,SAEXhI,EAAAA,EAAAA,KAAA,UACEiF,IAAK8H,GACL+T,SAA0B,QAAhBtV,EACV5J,UAAS,4BAAAC,OACS,QAAhB2J,EAAwB,WAAa,gBAEvC1N,MAAO,CACLgK,QAAS,QACTgc,aAAc,MACdvhB,MAAO,QACP7D,OAAQ,OACRmJ,WAA4B,QAAhB2D,EAAwB,UAAY,WAElDhJ,QAAS,SAACnB,GAAO,IAAD0iB,EACO,QAArBA,EAAAxY,EAAc9J,eAAO,IAAAsiB,GAArBA,EAAuB5kB,aACvBsQ,EAAAA,EAAAA,GAAK,KAAKC,MAAK,WAAO,IAADsU,EAAAC,EACE,QAArBD,EAAAzY,EAAc9J,eAAO,IAAAuiB,GAAoB,QAApBC,EAArBD,EAAuBrU,WAAWlO,eAAO,IAAAwiB,GAAzCA,EAA2C3gB,OAC7C,GACF,EAAElD,UAEFJ,EAAAA,EAAAA,KAAC6gB,EAAAA,EAAO,CAACtgB,GAAI,CAAEwH,SAAU,gBAG7B1H,EAAAA,EAAAA,MAAA,OACEvC,MAAO,CACLkK,QAAS,OACTgC,WAAY,SACZH,UAAW,QACXzJ,SAAA,EAEFJ,EAAAA,EAAAA,KAACkkB,EAAAA,GAAiB,CAChB1D,eAAgB,CACdtW,KAAM,GAERpJ,MAAO,CACLvB,MAAO,YACPzB,MAAO,CACLiK,SAAU,OACVE,WAAY,OACZ9J,MAAO,UAGXsiB,MAAO,CACLK,SAA0B,QAAhBtV,GAAyBwC,GACnC5D,KAAM,OACNtM,MAAO,CAAEoM,KAAM,GACf9I,UAAW,SAACC,GAC2C,IAAD8iB,EAArC,gBAAX9iB,EAAEE,MAAqC,UAAXF,EAAEE,OACX,QAArB4iB,EAAArX,GAAcrL,eAAO,IAAA0iB,GAArBA,EAAuBC,QAE3B,GAEFjjB,SAAU0L,MAEZ7M,EAAAA,EAAAA,KAAA,UACEiF,IAAK6H,GACLgU,SAA0B,QAAhBtV,EACV5J,UAAS,4BAAAC,OACS,QAAhB2J,EAAwB,WAAa,gBAEvC1N,MAAO,CACLgK,QAAS,QACTgc,aAAc,MACdvhB,MAAO,QACP7D,OAAQ,OACRmJ,WAA4B,QAAhB2D,EAAwB,UAAY,WAElDhJ,QAAS,SAACnB,GACJwL,GAAepL,SAAWmL,GAAenL,SAn8B5D,SAC2B4iB,EAAAC,IAAApZ,EAAAA,IAAAyD,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAA5B,SAAA0V,EAA6B7iB,EAAe8J,GAAmB,IAAAwL,EAAAwN,EAAAvI,EAAAC,EAAAuI,EAAAC,EAAArI,EAAAla,EAAAoa,EAAAC,EAAAmI,EAAA,OAAA/V,EAAAA,EAAAA,KAAAQ,MAAA,SAAAwV,GAAA,cAAAA,EAAAtV,KAAAsV,EAAArV,MAAA,OACV,GAA7CyH,EAASmB,WAAWzW,EAAM0W,QAAQ,KAAM,OAC1CsH,MAAM1I,IAAWA,GAAU,GAAC,CAAA4N,EAAArV,KAAA,QACE,OAAV,QAAtBiV,EAAA3X,GAAepL,eAAO,IAAA+iB,GAAtBA,EAAwBlhB,QAAQshB,EAAAnT,OAAA,SACzBkL,MAAM,2BAAyB,OAGY,GAD9CV,EAAiB7Q,EAAW3J,QAAQwa,iBACpCC,EAAiB9Q,EAAW3J,QAAQmb,UAEnB,OAAnBX,EAAuB,CAAA2I,EAAArV,KAAA,SACzB2M,EAAeD,GAAgB,GAAKjF,EAAO6F,eAAe,QAAS,CACjEC,sBAAuB,EACvBC,sBAAuB,IAEzB3R,EAAW3J,QAAQwZ,QAAQiB,GAC3B9Q,EAAW3J,QAAQub,eAAe,MAClC5R,EAAW3J,QAAQwb,gBACnB7R,EAAW3J,QAAQwb,gBACnBpR,GACEqQ,EAAelE,QACb,SAACC,EAAUC,GAAa,OACtBD,EAAME,WAAWD,EAAS,GAAGE,QAAQ,KAAM,IAAI,GACjD,IAEFwM,EAAArV,KAAA,wBAAAqV,EAAArV,KAAA,GAEezB,GAAqB,qIAEpC,KAAD,GAFKuO,EAAEuI,EAAApV,KAIFrN,EAAO,CACXsT,QAAS,OACTI,OAAQmB,EAAO6F,eAAe,QAAS,CACrCC,sBAAuB,EACvBC,sBAAuB,IAEzBnN,SAAU,GACVO,WAAY,GACZ8F,YAAa,GACbC,UAAkB,QAATuO,EAAEpI,EAAGla,YAAI,IAAAsiB,OAAA,EAAPA,EAAStiB,KAAK,GAAG+T,UAC5BE,WAAmB,QAATsO,EAAErI,EAAGla,YAAI,IAAAuiB,OAAA,EAAPA,EAASviB,KAAK,GAAGiU,WAC7BE,aAAc,GACdE,KAAM,GACNvG,QAAS,GACTyG,GAAIlL,EACJsE,KAAM,GACN8G,SAAU,IAEN2F,EAAmBL,EAAegB,KAAI,SAACC,GAgB3C,MAfa,CACX1H,QAAS0H,EAAI,GACbtH,OAAQsH,EAAI,GACZvN,SAAUuN,EAAI,GACdhN,WAAYgN,EAAI,GAChBlH,YAAakH,EAAI,GACjBjH,UAAWiH,EAAI,GACf/G,WAAY+G,EAAI,GAChB7G,aAAc6G,EAAI,GAClB3G,KAAM2G,EAAI,GACVlN,QAASkN,EAAI,GACbzG,GAAIyG,EAAI,IACRrN,KAAMqN,EAAI,IACVvG,SAAUuG,EAAI,IAGlB,IACMX,EAAY,GAAA3a,QAAA4G,EAAAA,EAAAA,GAAO8T,GAAgB,CAAEpa,IAC3CiJ,EAAW3J,QAAQsW,gBAAgByE,GACnC3Q,GACE2Q,EAAaxE,QACX,SAACC,EAAUC,GAAa,OACtBD,EAAME,WAAWD,EAASrC,OAAOuC,QAAQ,KAAM,IAAI,GACrD,IAEF,QAGAvL,GAAepL,UACjBoL,GAAepL,QAAQC,MAAQ,GACT,QAAtBijB,EAAA9X,GAAepL,eAAO,IAAAkjB,GAAtBA,EAAwBrhB,SACzB,yBAAAshB,EAAAjU,OAAA,GAAA4T,EAAA,MACF3T,MAAA,KAAAC,UAAA,CAk3BiBgU,CACEhY,GAAepL,QAAQC,MACvBkL,GAAenL,QAAQC,MAG7B,EAAEtB,UAEFJ,EAAAA,EAAAA,KAAC8kB,EAAAA,EAAW,CAACvkB,GAAI,CAAEwH,SAAU,gBAGjC/H,EAAAA,EAAAA,KAAC+kB,EAAAA,EAAM,CACL9f,IAAK+H,GACL8T,SAA0B,QAAhBtV,EACVwZ,WAAWhlB,EAAAA,EAAAA,KAAC6gB,EAAAA,EAAO,IACnBtgB,GAAI,CACF7B,OAAQ,OACRqJ,SAAU,OACVsb,UAAW,QAEb9gB,MAAM,UACN9B,QAAQ,YACR+B,QAASuO,GAAU3Q,SACpB,gCAKL6kB,eACE5kB,EAAAA,EAAAA,MAAA,OACEvC,MAAO,CACLC,SAAU,WACVW,OAAQ,OACRP,MAAO,OACP+L,KAAM,EACNlC,QAAS,OACTiC,cAAe,UACf7J,SAAA,EAEFJ,EAAAA,EAAAA,KAACklB,EAAAA,GAAiB,CAChBjgB,IAAKmG,EACLxM,QAASuL,EACTpL,KAAM,GACNyhB,eAAgB,CACd9hB,OAAQ,OACRwL,KAAM,GAERoE,gBAAiB,SAACS,GAChB,GAAIA,EACF,GAAkB,SAAdA,EAAO,IACTU,EAAAA,EAAAA,GAAK,KAAKC,MAAK,WACT7C,GAAepL,UACjBoL,GAAepL,QAAQC,MAAQqN,EAAO,GAC1C,QACK,CAAC,IAADoW,EAC8BC,EAQAC,EARnC,GAAItW,EAAO,IAAoB,KAAdA,EAAO,GAItB,OAHA3D,EAAW3J,QAAQwb,gBACnB7R,EAAW3J,QAAQub,eAAe,MACX,QAAvBoI,EAAArY,GAAgBtL,eAAO,IAAA2jB,GAAvBA,EAAyB9hB,QAClBqZ,MAAM,8BAAD9a,OACoBkN,EAAO,GAAE,yBAG3C,GAAIA,EAAO,IAAoB,KAAdA,EAAO,GAItB,OAHA3D,EAAW3J,QAAQwb,gBACnB7R,EAAW3J,QAAQub,eAAe,MACX,QAAvBqI,EAAAtY,GAAgBtL,eAAO,IAAA4jB,GAAvBA,EAAyB/hB,QAClBqZ,MAAM,8BAAD9a,OACoBkN,EAAO,GAAE,0BAG3C,IAAMuW,EAAUvW,EAAO,GAAGwW,MAAM,KAC1B3O,EAAW9I,GAAqB,yCAADjM,OACMyjB,EAAQ,GAAE,MAGhC,QAArBH,EAAA5Z,EAAc9J,eAAO,IAAA0jB,GAArBA,EAAuBhmB,aAEvBsQ,EAAAA,EAAAA,GAAK,KAAKC,MAAK,WACTnE,EAAc9J,UACZ8J,EAAc9J,QAAQkO,WAAWlO,UACnC8J,EAAc9J,QAAQkO,WAAWlO,QAAQC,MACvCqN,EAAO,IAEPxD,EAAc9J,QAAQoO,QAAQpO,UAChC8J,EAAc9J,QAAQoO,QAAQpO,QAAQC,MACpC4jB,EAAQ,IAER/Z,EAAc9J,QAAQsO,UAAUtO,UAClC8J,EAAc9J,QAAQsO,UAAUtO,QAAQC,MACtCqN,EAAO,IAEPxD,EAAc9J,QAAQ2L,WAAW3L,UACnC8J,EAAc9J,QAAQ2L,WAAW3L,QAAQC,MACvCqN,EAAO,IAEPxD,EAAc9J,QAAQyO,aAAazO,UACrC8J,EAAc9J,QAAQyO,aAAazO,QAAQC,MACzCqN,EAAO,IAEPxD,EAAc9J,QAAQ2O,UAAU3O,UAClC8J,EAAc9J,QAAQ2O,UAAU3O,QAAQC,MACtCqN,EAAO,IAEPxD,EAAc9J,QAAQ6O,YAAY7O,UACpC8J,EAAc9J,QAAQ6O,YAAY7O,QAAUmV,GAGlD,GACF,MAEAnH,EAAAA,EAAAA,GAAK,KAAKC,MAAK,WACT7C,GAAepL,UACjBoL,GAAepL,QAAQC,MAAQ,OACnC,GAEJ,EACAN,UAAW,SAAC2N,EAAaE,EAAa5N,GACpC,IAAe,WAAXA,EAAEE,MAAgC,cAAXF,EAAEE,OACVqC,OAAO4hB,QAAQ,oCAGlB,CACZ,IAAMtJ,EAAiB9Q,EAAW3J,QAAQmb,UAU1C,OATAV,EAAeyD,OAAO1Q,EAAQ,GAC9B7D,EAAW3J,QAAQwZ,QAAQiB,QAC3BrQ,GACEqQ,EAAelE,QACb,SAACC,EAAUC,GAAa,OACtBD,EAAME,WAAWD,EAAS,GAAGE,QAAQ,KAAM,IAAI,GACjD,GAIN,CAEJ,KAEFpY,EAAAA,EAAAA,KAAA,OACElC,MAAO,CACLiK,SAAU,OACV0d,UAAW,QACX9C,OAAQ,oBACR9a,WAAY,UACZI,WAAY,QACZ7H,SAEDwL,GAAWiR,eAAe,QAAS,CAClCC,sBAAuB,EACvBC,sBAAuB,SAK/B2I,aAAY,sHAMd1lB,EAAAA,EAAAA,KAAA,OAAKlC,MAAO,CAAEY,OAAQ,UACtBsB,EAAAA,EAAAA,KAACmjB,EAAgB,CACf5jB,MAAO,iCACP6jB,cACE/iB,EAAAA,EAAAA,MAAA,OACEvC,MAAO,CACLkK,QAAS,OACT4a,OAAQ,MACR3Y,cAAe,UACf7J,SAAA,EAEFJ,EAAAA,EAAAA,KAAA,SACE2lB,QAAQ,uBACR7nB,MAAO,CACLiK,SAAU,OACVE,WAAY,OACZob,UAAW,OACXjjB,SACH,mBAGDC,EAAAA,EAAAA,MAAA,OACEvC,MAAO,CACLkK,QAAS,OACTgC,WAAY,SACZH,UAAW,OACXK,KAAM,GACN9J,SAAA,CAEDuR,IACC3R,EAAAA,EAAAA,KAAC6iB,EAAAA,EAAa,CAAC5b,QAAS0K,MAExB3R,EAAAA,EAAAA,KAAA,OAAKlC,MAAO,CAAEoM,KAAM,GAAI9J,UACtBJ,EAAAA,EAAAA,KAAC4lB,EAAAA,aAAY,CACX9kB,MAAO,CACLvB,MAAO,IACPzB,MAAO,CACLK,MAAO,MACP6J,QAAS,SAGbyY,MAAO,CACLxhB,GAAI,uBACJnB,MAAO,CACLK,MAAO,OACP+L,KAAM,IAGV/L,MAAO,OACP0nB,cAAe,cACfC,WAA2B,OAAflU,SAAe,IAAfA,QAAe,EAAfA,GAAiBzP,KAAKyP,gBAClCmU,aAAc/X,GACd7M,SAAU8L,GACVhM,SAAU,SAAC+kB,EAAe3kB,GACxBmR,QAAQC,IAAIuT,GACR/Y,GAAexL,UACjBwL,GAAexL,QAAQC,MAAQskB,EAASC,aAE1CzY,GAAW/L,QAAUukB,EAAS9P,UAC9BzI,GAAYhM,QAAUukB,EAAS5P,WAC/B1I,GAASjM,QAAUukB,EAAS7O,IAC9B,EACA+O,UAAW,SAAC7kB,GACyC,IAAD8kB,EAApC,UAAV9kB,EAAE2C,KAA6B,gBAAV3C,EAAE2C,MACzB3C,EAAEG,iBACqB,QAAvB2kB,EAAAjZ,GAAgBzL,eAAO,IAAA0kB,GAAvBA,EAAyB7iB,QAE7B,OAINtD,EAAAA,EAAAA,KAAA,UACE4B,UAAU,2BACV9D,MAAO,CACL+J,WAAY,UACZC,QAAS,QACTgc,aAAc,MACdvhB,MAAO,QACP7D,OAAQ,QAEV8D,QAAS,YACPiN,EAAAA,EAAAA,GAAK,KAAKC,MAAK,WAAO,IAAD0W,EACfnZ,GAAexL,UACjBwL,GAAexL,QAAQC,MAAQ,IAE7BwL,GAAgBzL,UAClByL,GAAgBzL,QAAQC,MAAQ,QAE9ByL,GAAO1L,UACT0L,GAAO1L,QAAQC,MAAQ,IAErB0L,GAAW3L,UACb2L,GAAW3L,QAAQC,MAAQ,IAEzB2L,GAAW5L,UACb4L,GAAW5L,QAAQC,MAAQ,WAEzB4L,GAAW7L,UACb6L,GAAW7L,QAAQC,MAAQ,IAE7B8L,GAAW/L,QAAU,GACrBgM,GAAYhM,QAAU,GACtBiM,GAASjM,QAAU,GACnB8L,GAAW9L,QAAU,GACC,QAAtB2kB,EAAAnZ,GAAexL,eAAO,IAAA2kB,GAAtBA,EAAwB9iB,QACxBgI,EAAY7J,QAAQwb,gBACpB3R,EAAY7J,QAAQub,eAAe,KACrC,GACF,EAAE5c,UAEFJ,EAAAA,EAAAA,KAAC6gB,EAAAA,EAAO,CAACtgB,GAAI,CAAEwH,SAAU,gBAG7B1H,EAAAA,EAAAA,MAAA,OACEvC,MAAO,CACLkK,QAAS,OACTgC,WAAY,SACZH,UAAW,OACX1L,MAAO,OACP+L,KAAM,GACN9J,SAAA,EAEFJ,EAAAA,EAAAA,KAACkkB,EAAAA,GAAiB,CAChB1D,eAAgB,CACdtW,KAAM,GAERpJ,MAAO,CACLvB,MAAO,YACPzB,MAAO,CACLiK,SAAU,OACVE,WAAY,OACZ9J,MAAO,SAGXsiB,MAAO,CACLK,SAAU9S,GACV5D,KAAM,OACNtM,MAAO,CAAEoM,KAAM,EAAG/L,MAAO,QACzBiD,UAAW,SAACC,GAC2C,IAADglB,EAArC,gBAAXhlB,EAAEE,MAAqC,UAAXF,EAAEE,OAClB,QAAd8kB,EAAAlZ,GAAO1L,eAAO,IAAA4kB,GAAdA,EAAgB/iB,QAEpB,GAEFnC,SAAU+L,MAGZlN,EAAAA,EAAAA,KAAA,UACE4B,UAAU,2BACV9D,MAAO,CACL+J,WAAY,UACZC,QAAS,QACTgc,aAAc,MACdvhB,MAAO,QACP7D,OAAQ,QAEV8D,QAAS,WACP6a,IACF,EAAEjd,UAEFJ,EAAAA,EAAAA,KAAC8kB,EAAAA,EAAW,CAACvkB,GAAI,CAAEwH,SAAU,gBAIjC/H,EAAAA,EAAAA,KAACugB,EAAAA,GAAS,CACRC,eAAgB,CACdriB,MAAO,QAET2C,MAAO,CACLvB,MAAO,WACPzB,MAAO,CACLiK,SAAU,OACVE,WAAY,OACZ9J,MAAO,SAGXsiB,MAAO,CACLK,SAAU9S,GACV5D,KAAM,OACNtM,MAAO,CAAEoM,KAAM,GACf9I,UAAW,SAACC,GACK,gBAAXA,EAAEE,MAAqC,UAAXF,EAAEE,MAChCiS,GAAsBnS,EAAEqf,cAAchf,MAE1C,GAEFgY,MAAM1Z,EAAAA,EAAAA,KAACkjB,EAAAA,EAAc,CAAC3iB,GAAI,CAAEwH,SAAU,UACtC6Y,YAAa,SAACvf,GACZA,EAAEG,iBACE2L,GAAO1L,SACT+R,GAAsBrG,GAAO1L,QAAQC,MAEzC,EACAP,SAAUgM,MAGZnN,EAAAA,EAAAA,KAACsmB,EAAAA,GAAa,CACZxlB,MAAO,CACLvB,MAAO,aACPzB,MAAO,CACLiK,SAAU,OACVE,WAAY,OACZ9J,MAAO,SAGXooB,SAAU,CACRzF,SAAU9S,GACVjP,KAAM,EACNjB,MAAO,CAAEoM,KAAM,GACf9I,UAAW,SAACC,GAKP,IAADmlB,GAJFnlB,EAAEolB,kBAEY,gBAAXplB,EAAEE,OAA2BF,EAAEqlB,UACpB,UAAXrlB,EAAEE,OAAqBF,EAAEqlB,YAER,QAAlBF,EAAAnZ,GAAW5L,eAAO,IAAA+kB,GAAlBA,EAAoBljB,QAExB,GAEFqjB,UAAWvZ,MAEbpN,EAAAA,EAAAA,KAACsjB,EAAAA,GAAW,CACVxiB,MAAO,CACLvB,MAAO,cACPzB,MAAO,CACLiK,SAAU,OACVE,WAAY,OACZ9J,MAAO,SAGXolB,UAAWlW,GACXmW,OAAQ,CACN1C,SAAU9S,GACVlQ,MAAO,CAAEoM,KAAM,EAAGxL,OAAQ,QAC1BskB,aAAc,UACd5hB,UAAW,SAACC,GAC2C,IAADulB,EAArC,gBAAXvlB,EAAEE,MAAqC,UAAXF,EAAEE,OAChCF,EAAEG,iBACgB,QAAlBolB,EAAAtZ,GAAW7L,eAAO,IAAAmlB,GAAlBA,EAAoBtjB,QAExB,GAEFsgB,WAAY,CACV,CAAE5f,IAAK,MAAOtC,MAAO,OACrB,CAAEsC,IAAK,UAAWtC,MAAO,YAE3BmiB,OAAQ,QACR7b,QAAS,SAEXhI,EAAAA,EAAAA,KAACugB,EAAAA,GAAS,CACRzf,MAAO,CACLvB,MAAO,aACPzB,MAAO,CACLiK,SAAU,OACVE,WAAY,OACZ9J,MAAO,SAGXsiB,MAAO,CACLK,SAAU9S,GACV5D,KAAM,OACNtM,MAAO,CAAEoM,KAAM,GACf9I,UAAW,SAACC,GACK,gBAAXA,EAAEE,MAAqC,UAAXF,EAAEE,MAChC8b,IAEJ,GAEFlc,SAAUmM,QAIhB2X,eACE5kB,EAAAA,EAAAA,MAAA,OACEvC,MAAO,CACLC,SAAU,WACVW,OAAQ,OACRP,MAAO,OACP+L,KAAM,EACNlC,QAAS,OACTiC,cAAe,UACf7J,SAAA,EAEFJ,EAAAA,EAAAA,KAACklB,EAAAA,GAAiB,CAChBjgB,IAAKqG,EACL1M,QAASyL,EACTtL,KAAM,GACNyhB,eAAgB,CACd9hB,OAAQ,OACRwL,KAAM,GAERoE,gBAAiB,SAACS,GACZA,GACFU,EAAAA,EAAAA,GAAK,KAAKC,MAAK,WACTzC,GAAexL,UACjBwL,GAAexL,QAAQC,MAAQqN,EAAO,IAEpC7B,GAAgBzL,UAClByL,GAAgBzL,QAAQC,MAAQqN,EAAO,IAErC5B,GAAO1L,UACT0L,GAAO1L,QAAQC,MAAQqN,EAAO,IAE5B3B,GAAW3L,UACb2L,GAAW3L,QAAQC,MAAQqN,EAAO,IAEhC1B,GAAW5L,UACb4L,GAAW5L,QAAQC,MAAQqN,EAAO,IAEhCzB,GAAW7L,UACb6L,GAAW7L,QAAQC,MAAQqN,EAAO,IAEpCvB,GAAW/L,QAAUsN,EAAO,GAC5BtB,GAAYhM,QAAUsN,EAAO,GAC7BrB,GAASjM,QAAUsN,EAAO,GAC1BxB,GAAW9L,QAAUsN,EAAO,EAC9B,KAEAU,EAAAA,EAAAA,GAAK,KAAKC,MAAK,WACTzC,GAAexL,UACjBwL,GAAexL,QAAQC,MAAQ,IAE7BwL,GAAgBzL,UAClByL,GAAgBzL,QAAQC,MAAQ,QAE9ByL,GAAO1L,UACT0L,GAAO1L,QAAQC,MAAQ,IAErB0L,GAAW3L,UACb2L,GAAW3L,QAAQC,MAAQ,IAEzB2L,GAAW5L,UACb4L,GAAW5L,QAAQC,MAAQ,WAEzB4L,GAAW7L,UACb6L,GAAW7L,QAAQC,MAAQ,IAE7B8L,GAAW/L,QAAU,GACrBgM,GAAYhM,QAAU,GACtBiM,GAASjM,QAAU,GACnB8L,GAAW9L,QAAU,EACvB,GAEJ,EACAL,UAAW,SAAC2N,EAAaE,EAAa5N,GACpC,IAAe,WAAXA,EAAEE,MAAgC,cAAXF,EAAEE,OACVqC,OAAO4hB,QAAQ,oCAGlB,CACZ,IAAMzH,EAAkBzS,EAAY7J,QAAQmb,UAU5C,OATAmB,EAAgB4B,OAAO1Q,EAAQ,GAC/B3D,EAAY7J,QAAQwZ,QAAQ8C,QAC5B9R,GACE8R,EAAgB/F,QACd,SAACC,EAAUC,GAAa,OACtBD,EAAME,WAAWD,EAAS,GAAGE,QAAQ,KAAM,IAAI,GACjD,GAIN,CAEJ,KAEFpY,EAAAA,EAAAA,KAAA,OACElC,MAAO,CACLiK,SAAU,OACV0d,UAAW,QACX9C,OAAQ,oBACR9a,WAAY,UACZI,WAAY,QACZ7H,SAED4L,GAAY6Q,eAAe,QAAS,CACnCC,sBAAuB,EACvBC,sBAAuB,SAK/B2I,aAAY,8MAWpB,CAEA,IAAMvC,EAAmB,SAAHva,GAKV,IAJVwa,EAAYxa,EAAZwa,aACA6B,EAAarc,EAAbqc,cACA1lB,EAAKqJ,EAALrJ,MACAmmB,EAAY9c,EAAZ8c,aAEA,OACErlB,EAAAA,EAAAA,MAAA,OACEvC,MAAO,CACLK,MAAO,OACPO,OAAQ,MACRsJ,QAAS,OACTF,QAAS,OACT1H,SAAA,EAEFJ,EAAAA,EAAAA,KAAA,SAAAI,SAAQslB,KACRrlB,EAAAA,EAAAA,MAAA,OACEvC,MAAO,CACLoM,KAAM,EACNlC,QAAS,OACT7J,MAAO,OACPwkB,OAAQ,oBACR5kB,SAAU,YACVqC,SAAA,EAEFJ,EAAAA,EAAAA,KAAA,QACElC,MAAO,CACLC,SAAU,WACVC,IAAK,QACLC,KAAM,OACN4J,WAAY,UACZC,QAAS,QACTC,SAAU,OACVE,WAAY,QACZ7H,SAEDb,KAEHS,EAAAA,EAAAA,KAAA,OACElC,MAAO,CACLK,MAAO,MACPO,OAAQ,OACRoJ,QAAS,WACT+e,UAAW,cACXzmB,SAEDgjB,KAEHpjB,EAAAA,EAAAA,KAAA,OACElC,MAAO,CACLK,MAAO,MACPO,OAAQ,OACRoJ,QAAS,WACT+e,UAAW,cACXzmB,SAED6kB,SAKX,EACMhF,GAAajb,EAAAA,EAAAA,aAAW,SAAA8hB,EAAuC7hB,GAAS,IAA7Cib,EAAY4G,EAAZ5G,aAAcE,EAAa0G,EAAb1G,cAC7C2G,GAAkCphB,EAAAA,EAAAA,WAAS,GAAMqhB,GAAAnhB,EAAAA,EAAAA,GAAAkhB,EAAA,GAA1C5nB,EAAS6nB,EAAA,GAAEC,EAAYD,EAAA,GAC9BE,GAAgDvhB,EAAAA,EAAAA,WAAS,GAAMwhB,GAAAthB,EAAAA,EAAAA,GAAAqhB,EAAA,GAAxDE,EAAgBD,EAAA,GAAEE,EAAmBF,EAAA,GAC5CG,GAA0B3hB,EAAAA,EAAAA,WAAS,GAAM4hB,GAAA1hB,EAAAA,EAAAA,GAAAyhB,EAAA,GAAlCE,EAAKD,EAAA,GAAEE,EAAQF,EAAA,GAEhB5X,GAAatE,EAAAA,EAAAA,QAAyB,MACtCwE,GAAUxE,EAAAA,EAAAA,QAAyB,MACnC0E,GAAY1E,EAAAA,EAAAA,QAAyB,MACrC+B,GAAa/B,EAAAA,EAAAA,QAA4B,MACzC6E,GAAe7E,EAAAA,EAAAA,QAAyB,MACxC+E,GAAY/E,EAAAA,EAAAA,QAAyB,MACrCiF,GAAcjF,EAAAA,EAAAA,QAAO,IACrBqc,GAAsBrc,EAAAA,EAAAA,QAAyB,MAE/C+R,EAAa,WACjBiK,GAAoB,GACpBM,YAAW,WACTV,GAAa,GACbI,GAAoB,GACpBjH,GACF,GAAG,IACL,EACMwH,GAAgBvc,EAAAA,EAAAA,QAAY+R,IAElCpX,EAAAA,EAAAA,qBAAoBf,GAAK,iBAAO,CAC9B9F,UAAW,WACT8nB,GAAa,EACf,EACAY,WAAY,WACVZ,GAAa,EACf,EACA9G,QAAS,WAUP,MATa,CACXxQ,WAAAA,EACAE,QAAAA,EACAE,UAAAA,EACA3C,WAAAA,EACA8C,aAAAA,EACAE,UAAAA,EACAE,YAAAA,EAGJ,EACAX,WAAAA,EACAE,QAAAA,EACAE,UAAAA,EACA3C,WAAAA,EACA8C,aAAAA,EACAE,UAAAA,EACAE,YAAAA,EACAoX,oBAAAA,EACAtK,WAAAA,EACD,IAED,IAAA0K,GAKIC,EAAAA,EAAAA,GAAmB,CACrBhW,KAAM,CACJiW,IAAK,oCACLC,aAAc,kBAEhBrpB,QAAS,CACP,CAAEspB,MAAO,YAAaC,WAAY,OAAQhqB,MAAO,KACjD,CAAE+pB,MAAO,OAAQC,WAAY,YAAaje,KAAM,IAElDrL,SAAU,mBACVupB,SAAU,YACVC,gBAAiB,WACjBC,WAAY,SAACC,EAAiBpmB,IAC5BsN,EAAAA,EAAAA,GAAK,KAAKC,MAAK,WAAO,IAAD8Y,EACnBlY,EAAY7O,QAAU8mB,EAAgB,GAAG5R,UACrC9G,EAAQpO,UACVoO,EAAQpO,QAAQC,MAAQ6mB,EAAgB,GAAGzY,MAE5B,QAAjB0Y,EAAAzY,EAAUtO,eAAO,IAAA+mB,GAAjBA,EAAmBllB,OACrB,IACAmlB,GACF,EAEAjpB,UAAWkoB,IA3BKgB,EAAgBZ,EAAhCa,eACWC,EAAoBd,EAA/B/W,UACY0X,EAAqBX,EAAjCrX,WACWoY,EAAyBf,EAApCnpB,UAmCF,OARAmqB,EAAAA,EAAAA,YAAU,WACRllB,OAAOE,iBAAiB,WAAW,SAACzC,GACpB,WAAVA,EAAE2C,KACJ4jB,EAAcnmB,SAElB,GACF,GAAG,IAEItC,GACLkB,EAAAA,EAAAA,MAAA0oB,EAAAA,SAAA,CAAA3oB,SAAA,EACEJ,EAAAA,EAAAA,KAAA,OACElC,MAAO,CACLC,SAAU,QACVC,IAAK,EACLgrB,OAAQ,EACR/qB,KAAM,EACNoE,MAAO,EACPwF,WAAY,cACZohB,OAAQ,MAEVzmB,QAAS,WACPilB,GAAS,GACTE,YAAW,WACTF,GAAS,EACX,GAAG,IACL,KAEFpnB,EAAAA,EAAAA,MAAA,OACEvC,MAAO,CACLY,OAAQ8oB,EAAQ,QAAU,QAC1BrpB,MAAOqpB,EAAQ,QAAU,MACzB7E,OAAQ,oBACR5kB,SAAU,WACVE,KAAM,MACND,IAAK,MACLE,UAAW,wBACX8J,QAAS,OACTiC,cAAe,SACfgf,OAAQ7B,GAAoB,IAAM,IAClC8B,QAAS9B,EAAmB,EAAI,EAChC+B,WAAY,YACZ9qB,UAAW,sCACX+B,SAAA,EAEFC,EAAAA,EAAAA,MAAA,OACEvC,MAAO,CACLY,OAAQ,OACRmJ,WAAY,QACZG,QAAS,OACT8B,eAAgB,gBAChBhC,QAAS,MACT/J,SAAU,WACViM,WAAY,UACZ5J,SAAA,EAEFJ,EAAAA,EAAAA,KAAA,QAAMlC,MAAO,CAAEiK,SAAU,OAAQE,WAAY,QAAS7H,SAAC,mBAGvDJ,EAAAA,EAAAA,KAAA,UACE4B,UAAU,uBACV9D,MAAO,CACLgK,QAAS,QACTgc,aAAc,MACdjc,WAAY,QACZtF,MAAO,QACP7D,OAAQ,OACRX,SAAU,WACVC,IAAK,EACLqE,MAAO,GAETG,QAAS,WACP4a,GACF,EAAEhd,UAEFJ,EAAAA,EAAAA,KAACyC,EAAAA,EAAS,CAAClC,GAAI,CAAEwH,SAAU,gBAG/B1H,EAAAA,EAAAA,MAAA,OACEvC,MAAO,CACLoM,KAAM,EACNrC,WAAY,UACZC,QAAS,MACTE,QAAS,QACT5H,SAAA,EAEFC,EAAAA,EAAAA,MAAA,OACEvC,MAAO,CACLK,MAAO,MACP6J,QAAS,OACTiC,cAAe,SACf2Y,OAAQ,MACR9a,QAAS,QACT1H,SAAA,EAEFJ,EAAAA,EAAAA,KAACugB,EAAAA,GAAS,CACRzf,MAAO,CACLvB,MAAO,eACPzB,MAAO,CACLiK,SAAU,OACVE,WAAY,OACZ9J,MAAO,SAGXsiB,MAAO,CACLrW,KAAM,OACNtM,MAAO,CAAEK,MAAO,SAChBiD,UAAW,SAACC,GAC2C,IAAD+nB,EAArC,gBAAX/nB,EAAEE,MAAqC,UAAXF,EAAEE,OACjB,QAAf6nB,EAAAvZ,EAAQpO,eAAO,IAAA2nB,GAAfA,EAAiB9lB,QAErB,GAEFnC,SAAUwO,IAEXkZ,GACC7oB,EAAAA,EAAAA,KAAC6iB,EAAAA,EAAa,CAAC5b,QAAS4hB,KAExB7oB,EAAAA,EAAAA,KAACugB,EAAAA,GAAS,CACRC,eAAgB,CACdriB,MAAO,SAET2C,MAAO,CACLvB,MAAO,UACPzB,MAAO,CACLiK,SAAU,OACVE,WAAY,OACZ9J,MAAO,SAGXsiB,MAAO,CACLK,UAAU,EACV1W,KAAM,OACNtM,MAAO,CAAEK,MAAO,SAChBiD,UAAW,SAACC,GACK,gBAAXA,EAAEE,MAAqC,UAAXF,EAAEE,MAChCqnB,EAAqBvnB,EAAEqf,cAAchf,MAEzC,GAEFgY,MAAM1Z,EAAAA,EAAAA,KAACkjB,EAAAA,EAAc,CAAC3iB,GAAI,CAAEwH,SAAU,UACtC6Y,YAAa,SAACvf,GACZA,EAAEG,iBACEqO,EAAQpO,SACVmnB,EAAqB/Y,EAAQpO,QAAQC,MAEzC,EACAP,SAAU0O,KAGd7P,EAAAA,EAAAA,KAACugB,EAAAA,GAAS,CACRzf,MAAO,CACLvB,MAAO,YACPzB,MAAO,CACLiK,SAAU,OACVE,WAAY,OACZ9J,MAAO,SAGXsiB,MAAO,CACLrW,KAAM,OACNtM,MAAO,CAAEK,MAAO,SAChBiD,UAAW,SAACC,GAC2C,IAADgoB,EAArC,gBAAXhoB,EAAEE,MAAqC,UAAXF,EAAEE,OACd,QAAlB8nB,EAAAjc,EAAW3L,eAAO,IAAA4nB,GAAlBA,EAAoB/lB,QAExB,GAEFnC,SAAU4O,KAEZ/P,EAAAA,EAAAA,KAACsmB,EAAAA,GAAa,CACZxlB,MAAO,CACLvB,MAAO,aACPzB,MAAO,CACLiK,SAAU,OACVE,WAAY,OACZ9J,MAAO,SAGXooB,SAAU,CACRxnB,KAAM,EACNjB,MAAO,CAAEK,MAAO,SAChBiD,UAAW,SAACC,GAKP,IAADioB,GAJFjoB,EAAEolB,kBAEY,gBAAXplB,EAAEE,OAA2BF,EAAEqlB,UACpB,UAAXrlB,EAAEE,OAAqBF,EAAEqlB,YAEN,QAApB4C,EAAApZ,EAAazO,eAAO,IAAA6nB,GAApBA,EAAsBhmB,QAE1B,GAEFqjB,UAAWvZ,QAGf/M,EAAAA,EAAAA,MAAA,OACEvC,MAAO,CACLK,MAAO,MACP6J,QAAS,OACTiC,cAAe,SACf2Y,OAAQ,MACR7kB,SAAU,WACV+J,QAAS,OACTkC,WAAY,YACZ5J,SAAA,EAEFJ,EAAAA,EAAAA,KAACugB,EAAAA,GAAS,CACRzf,MAAO,CACLvB,MAAO,UACPzB,MAAO,CACLiK,SAAU,OACVE,WAAY,OACZ9J,MAAO,SAGXsiB,MAAO,CACLrW,KAAM,OACNtM,MAAO,CAAEK,MAAO,SAChB6kB,cAAcjN,EAAAA,EAAAA,GAAO,IAAIC,KAAQ,cACjC5U,UAAW,SAACC,GAC2C,IAADkoB,EAArC,gBAAXloB,EAAEE,MAAqC,UAAXF,EAAEE,OACf,QAAjBgoB,EAAAnZ,EAAU3O,eAAO,IAAA8nB,GAAjBA,EAAmBjmB,QAEvB,GAEFnC,SAAU+O,KAEZlQ,EAAAA,EAAAA,KAACkkB,EAAAA,GAAiB,CAChBpjB,MAAO,CACLvB,MAAO,YACPzB,MAAO,CACLiK,SAAU,OACVE,WAAY,OACZ9J,MAAO,SAGXsiB,MAAO,CACLrW,KAAM,OACNtM,MAAO,CAAEK,MAAO,SAChBiD,UAAW,SAACC,GACK,gBAAXA,EAAEE,MAAqC,UAAXF,EAAEE,MAC5B2e,GACFA,GAGN,GAEF/e,SAAUiP,KAEZ/P,EAAAA,EAAAA,MAAA,OACEvC,MAAO,CACLkK,QAAS,OACT6B,UAAW,OACXK,KAAM,EACNJ,eAAgB,WAChBE,WAAY,YACZ5J,SAAA,EAEFJ,EAAAA,EAAAA,KAAC+kB,EAAAA,EAAM,CACLtkB,QAAQ,YACR8B,MAAM,UACNzE,MAAO,CACLY,OAAQ,OACRqJ,SAAU,QAEZvF,QAAS,SAACnB,GACJ6e,GACFA,GAEJ,EAAE9f,SACH,QAGDJ,EAAAA,EAAAA,KAAC+kB,EAAAA,EAAM,CACLtkB,QAAQ,YACR8B,MAAM,UACNzE,MAAO,CACLY,OAAQ,OACRqJ,SAAU,QAEZvF,QAAS,SAACnB,GACR+b,GACF,EAAEhd,SACH,oBAMNsoB,GACD1oB,EAAAA,EAAAA,KAAA,SAAAI,SAAA,2KAUF,IACN,G,gICz8EsC,SA8BvBopB,EAAkBjb,EAAAC,EAAAC,GAAA,OAAAgb,EAAAA,IAAA9a,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAjC,SAAAC,EACElB,EACAC,EACAkE,GAAuC,IAAA1D,EAAAqb,EAAA7Y,UAAA,OAAAjC,EAAAA,EAAAA,KAAAQ,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACpB,OAAnBlB,EAAcqb,EAAAjlB,OAAA,QAAA2W,IAAAsO,EAAA,GAAAA,EAAA,GAAG,GAAEra,EAAAoC,OAAA,SAEZ7D,EAAQyD,IAAI,GAADxP,OAAQ,OAAJkQ,QAAI,IAAJA,OAAI,EAAJA,EAAMiW,IAAG,KAAAnmB,OAAQ,OAAJkQ,QAAI,IAAJA,OAAI,EAAJA,EAAMkW,aAAY,KAAApmB,OAAIwM,GAAU,CACjEiD,QAAS,CACPC,cAAc,UAAD1P,OAAgB,OAAJgM,QAAI,IAAJA,OAAI,EAAJA,EAAM2D,iBAEjC,wBAAAnC,EAAAsB,OAAA,GAAA7B,EAAA,MACH8B,MAAA,KAAAC,UAAA,CAsID,IApI2B,SAAHpS,GAeU,IAADkrB,EAAAjf,EAd/BqH,EAAItT,EAAJsT,KACAqW,EAAQ3pB,EAAR2pB,SACAvpB,EAAQJ,EAARI,SACAwpB,EAAe5pB,EAAf4pB,gBACAzpB,EAAOH,EAAPG,QAAOgrB,EAAAnrB,EACP6pB,WAAAA,OAAU,IAAAsB,EAAG,WAAO,EAACA,EAAAC,EAAAprB,EACrBqrB,iBAAAA,OAAgB,IAAAD,EAAG,WAAO,EAACA,EAAAE,EAAAtrB,EAC3BsW,UAAAA,OAAS,IAAAgV,EAAG,WAAO,EAACA,EACpBvqB,EAASf,EAATe,UACAE,EAAajB,EAAbiB,cAAasqB,EAAAvrB,EACbwrB,gBAAAA,OAAe,IAAAD,EAAG,WAAO,EAACA,EAAAE,EAAAzrB,EAC1B0rB,eAAAA,OAAc,IAAAD,EAAGV,EAAkBU,EACnCtqB,EAAenB,EAAfmB,gBACAC,EAAgBpB,EAAhBoB,iBAEA8J,GAA0BC,EAAAA,EAAAA,YAAW+D,EAAAA,GAA7BC,EAAOjE,EAAPiE,QAASC,EAAIlE,EAAJkE,KACjBnI,GAA6BC,EAAAA,EAAAA,WAAS,GAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAArC0kB,EAAIxkB,EAAA,GAAEqhB,EAAYrhB,EAAA,GACzB8F,GAAwB/F,EAAAA,EAAAA,UAAgC,IAAGgG,GAAA9F,EAAAA,EAAAA,GAAA6F,EAAA,GAApD3M,EAAI4M,EAAA,GAAE3M,EAAO2M,EAAA,GAAwC,SAC7C0e,IAAkB,OAAAV,EAAAA,IAAAhb,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAjC,SAAAsC,IAAA,IAAA9C,EAAAic,EAAAzZ,UAAA,OAAAjC,EAAAA,EAAAA,KAAAQ,MAAA,SAAAgC,GAAA,cAAAA,EAAA9B,KAAA8B,EAAA7B,MAAA,OAAqD,OAAnBlB,EAAcic,EAAA7lB,OAAA,QAAA2W,IAAAkP,EAAA,GAAAA,EAAA,GAAG,GAAElZ,EAAA7B,KAAA,EACtC4a,EAAevc,EAASC,EAAMkE,EAAM1D,GAAQ,KAAD,SAAA+C,EAAAK,OAAA,SAAAL,EAAA5B,MAAA,wBAAA4B,EAAAT,OAAA,GAAAQ,EAAA,MACzDP,MAAA,KAAAC,UAAA,CACD,IAAAG,GAA+BC,EAAAA,EAAAA,UAAS,CACtCpS,SAAUA,EACVqS,QAAQ,WAAD,OAAAxG,EAAAA,IAAAiE,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAE,SAAAuD,IAAA,OAAAxD,EAAAA,EAAAA,KAAAQ,MAAA,SAAAiD,GAAA,cAAAA,EAAA/C,KAAA+C,EAAA9C,MAAA,cAAA8C,EAAA9C,KAAA,EAAkB8a,IAAoB,cAAAhY,EAAAZ,OAAA,SAAAY,EAAA7C,MAAA,wBAAA6C,EAAA1B,OAAA,GAAAyB,EAAA,MAAAxB,MAAA,KAAAC,UAAA,EAC/CkE,UAAW,SAACC,GACV,IAAM0D,EAAW1D,EACjBhW,EAAQ0Z,EAASvW,KAAKkmB,IACtBtT,EAAU2D,EACZ,EACAhH,sBAAsB,IARhB/S,EAASqS,EAATrS,UAAWqa,EAAOhI,EAAPgI,QAmGnB,MAAO,CACLoR,KAAAA,EACArrB,KAAAA,EACAJ,UAAAA,EACAoS,UA5FgB,WAA0B,IAAzB1C,EAAcwC,UAAApM,OAAA,QAAA2W,IAAAvK,UAAA,GAAAA,UAAA,GAAG,IAClCuJ,EAAAA,EAAAA,YAAU,WACR6M,GAAa,EACf,IACa,OAATznB,QAAS,IAATA,GAAAA,EAAWiC,UACbjC,EAAUiC,QAAQC,MAAQ2M,EAC1Bgc,EAAmBhc,GAAQqB,MAAK,SAACsF,GAC/B,GAAQ,OAAHA,QAAG,IAAHA,IAAAA,EAAK7S,KAAKoX,QACb,OAAOoD,MAAM,WAAD9a,OAAe,OAAHmT,QAAG,IAAHA,OAAG,EAAHA,EAAK7S,KAAKwX,UAGpC3a,EADiBgW,EACA7S,KAAKkmB,IACT,OAAT7oB,QAAS,IAATA,GAAAA,EAAWiC,SAASjC,EAAUiC,QAAQ6B,OAC5C,IAEJ,EA8EEmN,WA5EiB,WAEK,IAADnP,GADrB2lB,GAAa,GACTgD,IACFA,EAAyB,OAATzqB,QAAS,IAATA,GAAkB,QAAT8B,EAAT9B,EAAWiC,eAAO,IAAAH,OAAT,EAATA,EAAoBI,MAExC,EAwEEinB,gBArEA3oB,EAAAA,EAAAA,KAACxB,EAAAA,GAAc,CACbqB,iBAAkBA,EAClBL,UAAWA,EACXL,UAAWirB,EACXlrB,aAAc,WAEU,IAADqrB,GADrBtD,GAAa,GACTgD,IACFA,EAAyB,OAATzqB,QAAS,IAATA,GAAkB,QAAT+qB,EAAT/qB,EAAWiC,eAAO,IAAA8oB,OAAT,EAATA,EAAoB7oB,MAExC,EACAtC,iBAAkB,WAEM,IAADorB,GADrBvD,GAAa,GACTgD,IACFA,EAAyB,OAATzqB,QAAS,IAATA,GAAkB,QAATgrB,EAAThrB,EAAWiC,eAAO,IAAA+oB,OAAT,EAATA,EAAoB9oB,MAExC,EACArC,eAAgB,SAACgC,GAaf,EAEF1B,iBAAkB,SAAC+B,GACjB2oB,EAAmB3oB,GAAOgO,MAAK,SAACsF,GAC9B,GAAQ,OAAHA,QAAG,IAAHA,IAAAA,EAAK7S,KAAKoX,QACb,OAAOoD,MAAM,WAAD9a,OAAe,OAAHmT,QAAG,IAAHA,OAAG,EAAHA,EAAK7S,KAAKwX,UAGpC3a,EADiBgW,EACA7S,KAAKkmB,GACxB,GACF,EACA3oB,cAAeA,EACfhB,OAAQ,IACRC,UAAWA,EACXE,SAAUA,EACVD,QAASA,EACTE,kBAAmB,SAAC8F,EAAmBzC,GACrC,GAAIyC,EAAkBH,QAAU,EAC9B,OAAOqlB,EAAiB3nB,GAE1B,IAAMsoB,EAAc,IAAIriB,IAAIxD,GACtB2jB,EAAkBpmB,EAAKgE,QAAO,SAACgB,GACnC,OAAOsjB,EAAYniB,IAAInB,EAAIihB,GAAU1S,WACvC,IACI6S,EAAgB9jB,QAAU,GAC9B6jB,EAAWC,EAAiBpmB,EAC9B,EACAlD,GAAImpB,EACJrpB,KAAMA,EACNC,QAASA,EACTY,gBAAiBA,IAWnBoZ,QAAAA,EAEJ,C,4BCnLI0R,EAAyBC,EAAQ,OAIrCC,EAAQ,OAAU,EAClB,IAAIC,EAAiBH,EAAuBC,EAAQ,QAChDG,EAAcH,EAAQ,OACtBI,GAAW,EAAIF,EAAeG,UAAuB,EAAIF,EAAYG,KAAK,OAAQ,CACpFC,EAAG,kQACD,cACJN,EAAQ,EAAUG,C,4BCVdL,EAAyBC,EAAQ,OAIrCC,EAAQ,OAAU,EAClB,IAAIC,EAAiBH,EAAuBC,EAAQ,QAChDG,EAAcH,EAAQ,OACtBI,GAAW,EAAIF,EAAeG,UAAuB,EAAIF,EAAYG,KAAK,OAAQ,CACpFC,EAAG,wCACD,OACJN,EAAQ,EAAUG,C,4BCVdL,EAAyBC,EAAQ,OAIrCC,EAAQ,OAAU,EAClB,IAAIC,EAAiBH,EAAuBC,EAAQ,QAChDG,EAAcH,EAAQ,OACtBI,GAAW,EAAIF,EAAeG,UAAuB,EAAIF,EAAYG,KAAK,OAAQ,CACpFC,EAAG,4BACD,WACJN,EAAQ,EAAUG,C,4BCVdL,EAAyBC,EAAQ,OAIrCC,EAAQ,OAAU,EAClB,IAAIC,EAAiBH,EAAuBC,EAAQ,QAChDG,EAAcH,EAAQ,OACtBI,GAAW,EAAIF,EAAeG,UAAuB,EAAIF,EAAYG,KAAK,OAAQ,CACpFC,EAAG,4DACD,qBACJN,EAAQ,EAAUG,C,4BCVdL,EAAyBC,EAAQ,OAIrCC,EAAQ,OAAU,EAClB,IAAIC,EAAiBH,EAAuBC,EAAQ,QAChDG,EAAcH,EAAQ,OACtBI,GAAW,EAAIF,EAAeG,UAAuB,EAAIF,EAAYG,KAAK,OAAQ,CACpFC,EAAG,sJACD,kBACJN,EAAQ,EAAUG,C,4BCVdL,EAAyBC,EAAQ,OAIrCC,EAAQ,OAAU,EAClB,IAAIC,EAAiBH,EAAuBC,EAAQ,QAChDG,EAAcH,EAAQ,OACtBI,GAAW,EAAIF,EAAeG,SAAS,EAAc,EAAIF,EAAYG,KAAK,SAAU,CACtFE,GAAI,KACJC,GAAI,IACJC,EAAG,KACF,MAAmB,EAAIP,EAAYG,KAAK,OAAQ,CACjDC,EAAG,kQACF,MAAO,gBACVN,EAAQ,EAAUG,C,4BCddL,EAAyBC,EAAQ,OAIrCC,EAAQ,OAAU,EAClB,IAAIC,EAAiBH,EAAuBC,EAAQ,QAChDG,EAAcH,EAAQ,OACtBI,GAAW,EAAIF,EAAeG,UAAuB,EAAIF,EAAYG,KAAK,OAAQ,CACpFC,EAAG,oOACD,cACJN,EAAQ,EAAUG,C,4BCVdL,EAAyBC,EAAQ,OAIrCC,EAAQ,OAAU,EAClB,IAAIC,EAAiBH,EAAuBC,EAAQ,QAChDG,EAAcH,EAAQ,OACtBI,GAAW,EAAIF,EAAeG,UAAuB,EAAIF,EAAYG,KAAK,OAAQ,CACpFC,EAAG,mJACD,QACJN,EAAQ,EAAUG,C,2BCVdL,EAAyBC,EAAQ,OAIrCC,EAAQ,OAAU,EAClB,IAAIC,EAAiBH,EAAuBC,EAAQ,QAChDG,EAAcH,EAAQ,OACtBI,GAAW,EAAIF,EAAeG,UAAuB,EAAIF,EAAYG,KAAK,OAAQ,CACpFC,EAAG,+OACD,UACJN,EAAQ,EAAUG,C","sources":["components/ModalWithTable.tsx","components/Table.tsx","feautures/Admin/Task/Accounting/Collections.tsx","hooks/useQueryModalTable.tsx","../node_modules/@mui/icons-material/AccountBox.js","../node_modules/@mui/icons-material/Add.js","../node_modules/@mui/icons-material/Forward.js","../node_modules/@mui/icons-material/KeyboardArrowDown.js","../node_modules/@mui/icons-material/LocalPrintshop.js","../node_modules/@mui/icons-material/PersonSearch.js","../node_modules/@mui/icons-material/RestartAlt.js","../node_modules/@mui/icons-material/Save.js","../node_modules/@mui/icons-material/Search.js"],"sourcesContent":["import React from \"react\";\nimport {\n  GridRowSelectionModel,\n  GridRowParams,\n  GridCellParams,\n  GridTreeNode,\n} from \"@mui/x-data-grid\";\nimport { Modal, Box, Typography, IconButton, TextField } from \"@mui/material\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport Table from \"./Table\";\n\ninterface ModalWithTableParams {\n  height: number;\n  isLoading: boolean;\n  queryKey: string;\n  columns: Array<any>;\n  onSelectionChange: (rowSelectionModel: Array<any>, data: Array<any>) => void;\n  setRows: React.Dispatch<React.SetStateAction<GridRowSelectionModel>>;\n  rows: GridRowSelectionModel;\n  id: string;\n  onCloseModal: () => void;\n  onClickCloseIcon: () => void;\n  showModal: boolean;\n  searchOnChange:\n  | React.ChangeEventHandler<HTMLInputElement | HTMLTextAreaElement>\n  | undefined;\n  title?: string;\n  searchRef?: React.RefObject<HTMLInputElement>;\n  onCellKeyDown?: any;\n  onSearchKeyEnter?: (search: string) => void;\n  isRowSelectable?: ((params: GridRowParams<any>) => boolean) | undefined;\n  getCellClassName?:\n  | ((params: GridCellParams<any, any, any, GridTreeNode>) => string)\n  | undefined;\n}\n\nconst style = {\n  position: \"absolute\" as \"absolute\",\n  top: \"50%\",\n  left: \"50%\",\n  transform: \"translate(-50%, -50%)\",\n  width: \"80%\",\n  bgcolor: \"background.paper\",\n  boxShadow: 24,\n  p: 4,\n  heigth: \"auto\",\n};\n\nexport default function ModalWithTable({\n  height,\n  isLoading,\n  queryKey,\n  columns,\n  onSelectionChange,\n  setRows,\n  rows,\n  id,\n  onCloseModal,\n  showModal,\n  onClickCloseIcon,\n  searchOnChange,\n  title = \"\",\n  searchRef,\n  onCellKeyDown,\n  onSearchKeyEnter = () => { },\n  isRowSelectable,\n  getCellClassName,\n}: ModalWithTableParams) {\n  const mainId = generateRandomClass();\n\n  return (\n    <Modal\n      open={showModal}\n      onClose={onCloseModal}\n      aria-labelledby=\"modal-modal-title\"\n      aria-describedby=\"modal-modal-description\"\n    >\n      <Box sx={style}>\n        <Typography id=\"modal-modal-title\" variant=\"h6\" component=\"h2\" mb={2}>\n          {title}\n        </Typography>\n        <TextField\n          size=\"small\"\n          label=\"Search\"\n          sx={{ marginBottom: \"10px\" }}\n          fullWidth\n          onChange={searchOnChange}\n          InputProps={{\n            inputRef: searchRef,\n          }}\n          onKeyDown={(e) => {\n            if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n              e.preventDefault();\n              onSearchKeyEnter(searchRef?.current?.value as string);\n            }\n            keyBoardSelectionTable(\n              e,\n              mainId,\n              searchRef?.current as HTMLInputElement\n            );\n          }}\n        />\n        <div\n          className={`${mainId} main-table-selection-container`}\n          style={{ position: \"relative\", height: `${height + 20}px` }}\n        >\n          <Table\n            isSingleSelection={true}\n            isRowFreeze={false}\n            columns={columns}\n            isLoading={isLoading}\n            dataSelection={(selection, data, code) => {\n              onSelectionChange(selection, data);\n            }}\n            table_id={id}\n            rows={rows}\n            isRowSelectable={isRowSelectable}\n            getCellClassName={getCellClassName}\n          />\n        </div>\n\n        <div style={{ position: \"absolute\", top: \"10px\", right: \"10px\" }}>\n          <IconButton\n            aria-label=\"search-client\"\n            color=\"secondary\"\n            onClick={onClickCloseIcon}\n          >\n            <CloseIcon />\n          </IconButton>\n        </div>\n      </Box>\n    </Modal>\n  );\n}\n\nexport function generateRandomClass() {\n  const randomNumber = Math.floor(Math.random() * 10000);\n  const randomClass = \"main-\" + randomNumber;\n  return randomClass;\n}\n\nfunction keyBoardUpDown(className: string, el: HTMLElement) {\n  const firstRowParent = document.querySelector(\n    `.${className} .MuiDataGrid-row`\n  );\n  const firstInput = firstRowParent?.querySelector(\"input\");\n  firstInput?.focus();\n  const event = new MouseEvent(\"mouseenter\", {\n    bubbles: true,\n    cancelable: true,\n    view: window,\n  });\n  firstRowParent?.dispatchEvent(event);\n  firstInput?.addEventListener(\"keydown\", (es: any) => {\n    if (es.key === \"ArrowUp\") {\n      es.preventDefault();\n      el.focus();\n    }\n    if (es.key === \"ArrowUp\") {\n      firstRowParent?.classList.remove(\"hover-keyboard\");\n    }\n  });\n}\n\nexport function keyBoardSelectionTable(\n  e: React.KeyboardEvent<HTMLDivElement>,\n  className: string,\n  el: HTMLElement\n) {\n  const mainId = className;\n  if (e.code === \"ArrowDown\") {\n    const rows = document.querySelectorAll(`.${mainId} .MuiDataGrid-row`);\n    e.preventDefault();\n    rows[0]?.classList.add(\"hover-keyboard\");\n    keyBoardUpDown(className, el);\n    rows.forEach((el, idx) => {\n      el.addEventListener(\"keydown\", (es: any) => {\n        if (es.key === \"ArrowUp\") {\n          if (idx <= 0) {\n            return;\n          }\n\n          es.preventDefault();\n          rows[idx]?.classList.remove(\"hover-keyboard\");\n          rows[idx - 1]?.classList.add(\"hover-keyboard\");\n          return;\n        }\n        if (es.key === \"ArrowDown\") {\n          es.preventDefault();\n          if (idx >= rows.length - 1) {\n            return;\n          }\n          rows[idx]?.classList.remove(\"hover-keyboard\");\n          rows[idx + 1]?.classList.add(\"hover-keyboard\");\n        }\n      });\n    });\n  }\n}\n","import {\n  useState,\n  useContext,\n  createContext,\n  ReactElement,\n  forwardRef,\n  useImperativeHandle,\n} from \"react\";\nimport { Box, LinearProgress } from \"@mui/material\";\nimport {\n  DataGrid,\n  GridSlotsComponentsProps,\n  gridPageCountSelector,\n  GridPagination,\n  useGridApiContext,\n  useGridSelector,\n  GridRowSelectionModel,\n  GridColDef,\n  GridRowParams,\n  GridCellParams,\n  GridTreeNode,\n} from \"@mui/x-data-grid\";\nimport { TablePaginationProps } from \"@mui/material/TablePagination\";\nimport MuiPagination from \"@mui/material/Pagination\";\n\ninterface TableProps {\n  isLoading: boolean;\n  columns: Array<any>;\n  rows: Array<any>;\n  table_id: string;\n  isSingleSelection: boolean;\n  isRowFreeze: boolean;\n  dataSelection?: (selection: any, data: any, code: string | null) => void;\n  CustomFooterComponent?: any;\n  isRowSelectable?: ((params: GridRowParams<any>) => boolean) | undefined;\n  getCellClassName?:\n    | ((params: GridCellParams<any, any, any, GridTreeNode>) => string)\n    | undefined;\n  footerChildren?: (\n    rowSelectionModel: GridRowSelectionModel,\n    rows: Array<any>\n  ) => ReactElement;\n  footerPaginationPosition?: string;\n  showFooterSelectedCount?: boolean;\n  checkboxSelection?: boolean | undefined;\n}\n\nconst TableContext = createContext<{\n  rowSelectionModel: GridRowSelectionModel;\n  rows: Array<any>;\n  footerPaginationPosition?: string;\n  showFooterSelectedCount?: boolean;\n  footerChildren: (\n    rowSelectionModel: GridRowSelectionModel,\n    rows: Array<any>\n  ) => ReactElement;\n}>({\n  rows: [],\n  rowSelectionModel: [],\n  footerChildren: () => <div></div>,\n  footerPaginationPosition: \"right-left\",\n  showFooterSelectedCount: true,\n});\nconst Table = forwardRef(\n  (\n    {\n      isLoading,\n      columns,\n      rows,\n      table_id,\n      isSingleSelection,\n      isRowFreeze,\n      dataSelection,\n      CustomFooterComponent = DefaultooterComponent,\n      isRowSelectable,\n      getCellClassName,\n      checkboxSelection = true,\n      footerChildren = (\n        rowSelectionModel: GridRowSelectionModel,\n        rows: Array<any>\n      ) => <div></div>,\n      footerPaginationPosition = \"right-left\",\n      showFooterSelectedCount = true,\n    }: TableProps,\n    ref\n  ) => {\n    const [selectedRows, setSelectedRows] = useState<any>([]);\n\n    useImperativeHandle(ref, () => ({\n      removeSelection: () => {\n        setSelectedRows([]);\n      },\n      getSelectedRows: () => {\n        return rows.filter((item: any) =>\n          selectedRows?.includes(item[table_id])\n        );\n      },\n      setSelectedRows: (data: Array<any>) => {\n        setSelectedRows(data);\n      },\n    }));\n\n    function onSelectionChange(selection: any, data: any, code: string | null) {\n      if (dataSelection) {\n        dataSelection(selection, data, code);\n      }\n    }\n    let freezeArray: Array<any> = [];\n\n    return (\n      <TableContext.Provider\n        value={{\n          showFooterSelectedCount,\n          footerPaginationPosition,\n          rowSelectionModel: selectedRows,\n          rows,\n          footerChildren,\n        }}\n      >\n        <DataGrid\n          slots={{\n            loadingOverlay: LinearProgress,\n            footer: CustomFooterComponent,\n          }}\n          initialState={{\n            pagination: { paginationModel: { pageSize: 100 } },\n          }}\n          loading={isLoading}\n          getRowId={(row) => row[table_id]}\n          columns={columns.filter((col: any) => !col.hide) as GridColDef<any>[]}\n          rows={rows}\n          showCellVerticalBorder={true}\n          showColumnVerticalBorder={true}\n          checkboxSelection={checkboxSelection}\n          rowSelectionModel={selectedRows}\n          rowHeight={25}\n          columnHeaderHeight={35}\n          pageSizeOptions={[10, 20, 35, 50, 75, 100]}\n          sx={{\n            \"& .cash\": {\n              color: \"#ec4899\",\n            },\n            \"& .check\": {\n              color: \"#0891b2\",\n            },\n            \"& .approved\": {\n              color: \"green\",\n            },\n            \"& .pending\": {\n              color: \"orange\",\n            },\n            \"& .disapproved\": {\n              color: \"red\",\n            },\n            \"& .normal\": {\n              color: \"red\",\n            },\n            \"& .MuiDataGrid-row.Mui-selected:hover\": {\n              color: \"black\",\n              \"& .MuiSvgIcon-root \": {\n                fill: \"#3b82f6\",\n              },\n            },\n            \"& .hover-keyboard\": {\n              background: \"#2563eb\",\n              color: \"white\",\n              \"& .MuiSvgIcon-root \": {\n                fill: \"white\",\n              },\n            },\n            \"& .MuiDataGrid-row:hover\": {\n              background: \"#2563eb\",\n              color: \"white\",\n              \"& .MuiSvgIcon-root \": {\n                fill: \"white\",\n              },\n            },\n            \"& .MuiDataGrid-row.hover\": {\n              background: \"#2563eb\",\n              color: \"white\",\n              \"& .MuiSvgIcon-root \": {\n                fill: \"white\",\n              },\n            },\n            \"& .MuiTablePagination-root p \": {\n              padding: \"0 !important\",\n            },\n\n            ...{\n              \"& .MuiDataGrid-columnHeaders\": {\n                background: \"#64748b\",\n                color: \"white\",\n                fontSize: \"14px\",\n                // borderBottomColor: \"#38bdf8\",\n              },\n              \"& .MuiDataGrid-columnHeaderCheckbox .MuiDataGrid-columnHeaderTitleContainer .MuiSvgIcon-root \":\n                {\n                  display: isSingleSelection || isRowFreeze ? \"none\" : \"block\",\n                  fill: \"white\",\n                },\n              \"& .MuiDataGrid-columnHeaderCheckbox .MuiDataGrid-columnHeaderTitleContainer input \":\n                {\n                  display: isSingleSelection || isRowFreeze ? \"none\" : \"block\",\n                },\n            },\n            ...{\n              fontSize: 13,\n              fontWeight: 500,\n              \"& .MuiDataGrid-checkboxInput\": {\n                height: \"27px\",\n                width: \"27px\",\n              },\n              \"& .MuiDataGrid-checkboxInput svg\": {\n                height: \"20px\",\n                width: \"20px\",\n              },\n            },\n          }}\n          // onRowDoubleClick={(e, r) => {\n          //   console.log(e, r);\n          // }}\n\n          onRowSelectionModelChange={(selection) => {\n            if (isRowFreeze) {\n              if (selection.length <= 0) return;\n              freezeArray = selection;\n              if (selectedRows.includes(freezeArray[freezeArray.length - 1]))\n                return;\n\n              setSelectedRows(selection);\n\n              onSelectionChange([selection[selection.length - 1]], rows, null);\n              return;\n            }\n\n            if (!isRowFreeze && isSingleSelection) {\n              if (selectedRows && selectedRows?.length > 0) {\n                const selectionSet = new Set(selectedRows);\n                setSelectedRows(\n                  selection.filter((s: any) => !selectionSet.has(s))\n                );\n              } else {\n                setSelectedRows(selection);\n              }\n            } else {\n              setSelectedRows(selection);\n            }\n\n            onSelectionChange([selection[selection.length - 1]], rows, null);\n          }}\n          onCellKeyDown={(__: any, key: any) => {\n            const keyFinding = [\"NumpadEnter\", \"Enter\", \"Delete\", \"Backspace\"];\n            if (!keyFinding.includes(key.code)) {\n              return;\n            }\n            key.preventDefault();\n            if (key.code === \"Enter\" || key.code === \"NumpadEnter\") {\n              if (isSingleSelection && !isRowFreeze) {\n                return setSelectedRows((data: any) => {\n                  if (data && data.length > 0 && data[0] === __.rowNode.id) {\n                    onSelectionChange([], rows, key.code);\n                    return [];\n                  }\n                  onSelectionChange([__.rowNode.id], rows, key.code);\n                  return [__.rowNode.id];\n                });\n              } else {\n                setSelectedRows((data: any) => {\n                  if (\n                    data &&\n                    !isRowFreeze &&\n                    data.length > 0 &&\n                    data.includes(__.rowNode.id)\n                  ) {\n                    data = data.filter((item: any) => item !== __.rowNode.id);\n                    onSelectionChange([], rows, key.code);\n                    return data;\n                  }\n                  if (\n                    data &&\n                    isRowFreeze &&\n                    data.length > 0 &&\n                    data.includes(__.rowNode.id)\n                  ) {\n                    return data;\n                  }\n                  onSelectionChange([__.rowNode.id], rows, key.code);\n                  return [...data, __.rowNode.id];\n                });\n              }\n              return;\n            }\n            if (key.code === \"Delete\" || key.code === \"Backspace\") {\n              setSelectedRows([__.rowNode.id]);\n              return onSelectionChange([__.rowNode.id], rows, key.code);\n            }\n          }}\n          disableVirtualization\n          isRowSelectable={isRowSelectable}\n          getCellClassName={getCellClassName}\n        />\n      </TableContext.Provider>\n    );\n  }\n);\n\nexport default Table;\nfunction Pagination({\n  page,\n  onPageChange,\n  className,\n}: Pick<TablePaginationProps, \"page\" | \"onPageChange\" | \"className\">) {\n  const apiRef = useGridApiContext();\n  const pageCount = useGridSelector(apiRef, gridPageCountSelector);\n\n  return (\n    <MuiPagination\n      variant=\"outlined\"\n      color=\"primary\"\n      className={className}\n      count={pageCount}\n      page={page + 1}\n      onChange={(event, newPage) => {\n        onPageChange(event as any, newPage - 1);\n      }}\n    />\n  );\n}\n\nfunction CustomPagination(props: any) {\n  return <GridPagination ActionsComponent={Pagination} {...props} />;\n}\nfunction DefaultooterComponent(\n  props: NonNullable<GridSlotsComponentsProps[\"footer\"]>\n) {\n  const {\n    rowSelectionModel,\n    showFooterSelectedCount,\n    footerPaginationPosition,\n    footerChildren,\n    rows,\n  } = useContext(TableContext);\n  return (\n    <Box\n      sx={{\n        columnGap: \"50px\",\n        display: \"flex\",\n        width: \"100%\",\n        justifyContent: \"space-between\",\n        px: 3,\n        alignItems: \"center\",\n        flexDirection:\n          footerPaginationPosition === \"right-left\" ? \"row-reverse\" : \"row\",\n      }}\n    >\n      <CustomPagination {...props} />\n      <Box\n        sx={{\n          display: \"flex\",\n          justifyContent:\n            footerPaginationPosition === \"right-left\"\n              ? \"flex-start\"\n              : \"flex-end\",\n          flex: 1,\n          alignItems: \"center\",\n        }}\n      >\n        {showFooterSelectedCount && (\n          <div>Selected:{rowSelectionModel?.length}</div>\n        )}\n        <div>{footerChildren(rowSelectionModel, rows)}</div>\n      </Box>\n    </Box>\n  );\n}\n","import {\n  useContext,\n  useState,\n  useRef,\n  forwardRef,\n  useEffect,\n  useImperativeHandle,\n} from \"react\";\nimport { Button, IconButton } from \"@mui/material\";\nimport AddIcon from \"@mui/icons-material/Add\";\nimport { useMutation, useQuery } from \"react-query\";\nimport Swal from \"sweetalert2\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport SaveIcon from \"@mui/icons-material/Save\";\nimport { AuthContext } from \"../../../../components/AuthContext\";\nimport { wait } from \"../../../../lib/wait\";\nimport LoadingButton from \"@mui/lab/LoadingButton\";\nimport useQueryModalTable from \"../../../../hooks/useQueryModalTable\";\nimport { flushSync } from \"react-dom\";\nimport RestartAltIcon from \"@mui/icons-material/RestartAlt\";\nimport {\n  codeCondfirmationAlert,\n  saveCondfirmationAlert,\n} from \"../../../../lib/confirmationAlert\";\nimport PageHelmet from \"../../../../components/Helmet\";\nimport {\n  SelectInput,\n  TextAreaInput,\n  TextFormatedInput,\n  TextInput,\n} from \"../../../../components/UpwardFields\";\nimport ForwardIcon from \"@mui/icons-material/Forward\";\nimport { Autocomplete } from \"./PettyCash\";\nimport AccountBoxIcon from \"@mui/icons-material/AccountBox\";\nimport { format } from \"date-fns\";\nimport SearchIcon from \"@mui/icons-material/Search\";\nimport useExecuteQueryFromClient from \"../../../../lib/executeQueryFromClient\";\nimport LocalPrintshopIcon from \"@mui/icons-material/LocalPrintshop\";\nimport {\n  DataGridViewReact,\n  useUpwardTableModalSearch,\n  useUpwardTableModalSearchSafeMode,\n} from \"../../../../components/DataGridViewReact\";\nimport { Loading } from \"../../../../components/Loading\";\n\nexport const debitColumn = [\n  { key: \"Payment\", label: \"Payment\", flex: 1, width: 170 },\n  {\n    key: \"Amount\",\n    label: \"Amount\",\n    flex: 1,\n    width: 170,\n    type: \"number\",\n  },\n  { key: \"Check_No\", label: \"Check No\", width: 170 },\n  { key: \"Check_Date\", label: \"Check Date\", width: 170 },\n  { key: \"Bank_Branch\", label: \"Bank/Branch\", width: 300 },\n  { key: \"Acct_Code\", label: \"DR Code\", width: 170 },\n  { key: \"Acct_Title\", label: \"DR Title\", width: 300 },\n  { key: \"Deposit_Slip\", label: \"Deposit Slip\", width: 170 },\n  { key: \"Cntr\", label: \"Cntr\", width: 170 },\n  { key: \"Remarks\", label: \"Remarks\", width: 300 },\n  { key: \"TC\", label: \"TC\", width: 170 },\n  { key: \"Bank\", label: \"Bank\", hide: true },\n  { key: \"BankName\", label: \"BankName\", hide: true },\n];\nexport const creditColumn = [\n  { key: \"transaction\", label: \"Transaction\", width: 200 },\n  { key: \"amount\", label: \"Amount\", width: 150, type: \"number\" },\n  { key: \"Name\", label: \"Name\", width: 350 },\n  { key: \"Remarks\", label: \"Remarks\", width: 350 },\n  { key: \"VATType\", label: \"VAT Type\", width: 150 },\n  { key: \"invoiceNo\", label: \"Invoice No\", width: 250 },\n  { key: \"Code\", label: \"Code\", width: 150 },\n  { key: \"Title\", label: \"Title\", width: 350 },\n  { key: \"TC\", label: \"TC\", width: 200 },\n  { key: \"Account_No\", label: \"Accoount No.\", width: 180 },\n];\n\nconst queryKeyPaymentType = \"payment-type-code\";\nconst queryKeyNewORNumber = \"new-or-number\";\n\nexport default function Collection() {\n  const debitTable = useRef<any>(null);\n  const creditTable = useRef<any>(null);\n  const modalCheckRef = useRef<any>(null);\n\n  const [paymentType, setPaymentType] = useState(\"CSH\");\n  const [totalDebit, setTotalDebit] = useState(0);\n  const [totalCredit, setTotalCredit] = useState(0);\n  const [collectionMode, setCollectionMode] = useState(\"\");\n\n  // SEARCH COLLECTION\n  const searchRef = useRef<HTMLInputElement>(null);\n\n  // first layer fields\n  const ornoSubRef = useRef(\"\");\n  const ornoRef = useRef<HTMLInputElement>(null);\n  const dateRef = useRef<HTMLInputElement>(null);\n  const pnClientRef = useRef<HTMLInputElement>(null);\n  const clientNameRef = useRef<HTMLInputElement>(null);\n  const IDNo = useRef(\"\");\n\n  // second layer fields\n  const paymentTypeRef = useRef<HTMLSelectElement>(null);\n  const amountDebitRef = useRef<HTMLInputElement>(null);\n  const buttonCshSave = useRef<HTMLButtonElement>(null);\n  const buttonCheckSave = useRef<HTMLButtonElement>(null);\n  const buttonCheckList = useRef<HTMLButtonElement>(null);\n\n  // third layer fields\n  const transactionRef = useRef<HTMLSelectElement>(null);\n  const amountCreditRef = useRef<HTMLInputElement>(null);\n  const faoRef = useRef<HTMLInputElement>(null);\n  const remarksRef = useRef<HTMLTextAreaElement>(null);\n  const vatTypeRef = useRef<HTMLSelectElement>(null);\n  const invoiceRef = useRef<HTMLInputElement>(null);\n  const foaIDNoRef = useRef(\"\");\n  const accCodeRef = useRef(\"\");\n  const accTitleRef = useRef(\"\");\n  const accTCRef = useRef(\"\");\n\n  const { myAxios, user } = useContext(AuthContext);\n  const { executeQueryToClient } = useExecuteQueryFromClient();\n\n  const disableFields = collectionMode === \"\";\n\n  const { UpwardTableModalSearch, openModal, closeModal } =\n    useUpwardTableModalSearch({\n      column: [\n        { key: \"Check_No\", label: \"Check No\", width: 100 },\n        { key: \"Check_Date\", label: \"Check Date\", width: 100 },\n        {\n          key: \"Amount\",\n          label: \"Amount\",\n          width: 90,\n          type: \"number\",\n        },\n        {\n          key: \"Bank_Branch\",\n          label: \"Bank Branch\",\n          width: 200,\n        },\n        {\n          key: \"Remarks\",\n          label: \"Remarks\",\n          width: 200,\n          hide: true,\n        },\n      ],\n      query: (search: string) => {\n        if (pnClientRef.current) {\n          return `\n            SELECT \n               Check_No AS Check_No, \n               date_FORMAT(Check_Date,'%b. %d, %Y') AS Check_Date,\n              FORMAT(CAST(REPLACE(Check_Amnt, ',', '') AS DECIMAL(10,2)), 2) AS Amount,\n              CONCAT(Bank, '/', Branch) AS Bank_Branch\n            FROM PDC \n            WHERE (\n              Check_No LIKE '%${search}%' \n              OR Bank  LIKE '%${search}%' \n              OR Branch LIKE '%${search}%') \n              AND (PNo = '${pnClientRef.current.value}' ) \n              AND (ORNum IS NULL OR ORNum = '')\n            ORDER BY PDC.Check_Date\n        `;\n        }\n        return ``;\n      },\n      getSelectedItem: async (rowItm: any, _: any, rowIdx: any, __: any) => {\n        if (rowItm) {\n          if (pnClientRef.current) {\n            const dt = await executeQueryToClient(`\n            SELECT \n              Check_No, \n              Check_Date, \n              Check_Amnt, \n              PDC.Bank, \n              Bank.Bank AS BName, \n              Branch, \n              Remarks \n            FROM PDC \n            LEFT JOIN Bank ON PDC.Bank = Bank.Bank_Code\n            WHERE PNo = '${pnClientRef.current.value}' AND Check_No = '${rowItm[0]}'`);\n            const checkDetails = dt?.data.data[0];\n            wait(100).then(() => {\n              if (modalCheckRef.current) {\n                if (modalCheckRef.current.checknoRef.current) {\n                  modalCheckRef.current.checknoRef.current.value =\n                    checkDetails.Check_No;\n                }\n                if (modalCheckRef.current.bankRef.current) {\n                  modalCheckRef.current.bankRef.current.value =\n                    checkDetails.Bank;\n                }\n                if (modalCheckRef.current.branchRef.current) {\n                  modalCheckRef.current.branchRef.current.value =\n                    checkDetails.Branch;\n                }\n                if (modalCheckRef.current.remarksRef.current) {\n                  modalCheckRef.current.remarksRef.current.value =\n                    checkDetails.Remarks;\n                }\n                if (modalCheckRef.current.checkdateRef.current) {\n                  modalCheckRef.current.checkdateRef.current.value =\n                    checkDetails.Check_Date;\n                }\n                if (modalCheckRef.current.amountRef.current) {\n                  modalCheckRef.current.amountRef.current.value =\n                    checkDetails.Check_Amnt;\n                }\n                if (modalCheckRef.current.bankRefName.current) {\n                  modalCheckRef.current.bankRefName.current =\n                    checkDetails.BName;\n                }\n              }\n            });\n\n            saveCheckDebit(\n              {\n                amountRef: { current: { value: checkDetails.Check_Amnt } },\n                checknoRef: { current: { value: checkDetails.Check_No } },\n                checkdateRef: { current: { value: checkDetails.Check_Date } },\n                branchRef: { current: { value: checkDetails.Branch } },\n                remarksRef: { current: { value: checkDetails.Remarks } },\n                bankRef: { current: { value: checkDetails.Bank } },\n                bankRefName: { current: checkDetails.BName },\n              },\n              false\n            );\n            closeModal();\n            wait(250).then(() => {\n              buttonCheckList.current?.focus();\n            });\n          }\n        }\n      },\n    });\n\n  const { isLoading: paymentTypeLoading, data: transactionDesc } = useQuery({\n    queryKey: queryKeyPaymentType,\n    queryFn: async () =>\n      await myAxios.get(`/task/accounting/get-transaction-code-title`, {\n        headers: {\n          Authorization: `Bearer ${user?.accessToken}`,\n        },\n      }),\n    refetchOnWindowFocus: false,\n  });\n  //CLIENT MODAL\n  const {\n    UpwardTableModalSearch: ClientUpwardTableModalSearch,\n    openModal: clientOpenModal,\n    closeModal: clientCloseModal,\n  } = useUpwardTableModalSearchSafeMode({\n    size: \"medium\",\n    link: \"/task/accounting/search-pdc-policy-id\",\n    column: [\n      { key: \"Type\", label: \"Type\", width: 130 },\n      { key: \"IDNo\", label: \"ID No.\", width: 150 },\n      {\n        key: \"Name\",\n        label: \"Name\",\n        width: 300,\n      },\n      {\n        key: \"ID\",\n        label: \"ID\",\n        hide: true,\n      },\n      {\n        key: \"client_id\",\n        label: \"client_id\",\n        hide: true,\n      },\n    ],\n    getSelectedItem: async (rowItm: any, _: any, rowIdx: any, __: any) => {\n      if (rowItm) {\n        wait(100).then(() => {\n          console.log(rowItm);\n\n          IDNo.current = rowItm[4];\n          if (pnClientRef.current) {\n            pnClientRef.current.value = rowItm[1];\n          }\n          if (clientNameRef.current) {\n            clientNameRef.current.value = rowItm[2] ?? \"\";\n          }\n          paymentTypeRef.current?.focus();\n        });\n        clientCloseModal();\n      }\n    },\n  });\n\n  //CLIENT MODAL CREDIT\n  const {\n    UpwardTableModalSearch: ClientCreditUpwardTableModalSearch,\n    openModal: clientCreditOpenModal,\n    closeModal: clientCreditCloseModal,\n  } = useUpwardTableModalSearchSafeMode({\n    size: \"medium\",\n    link: \"/task/accounting/search-pdc-policy-id\",\n    column: [\n      { key: \"Type\", label: \"Type\", width: 130 },\n      { key: \"IDNo\", label: \"ID No.\", width: 150 },\n      {\n        key: \"Name\",\n        label: \"Name\",\n        width: 300,\n      },\n      {\n        key: \"ID\",\n        label: \"ID\",\n        hide: true,\n      },\n      {\n        key: \"client_id\",\n        label: \"client_id\",\n        hide: true,\n      },\n    ],\n    getSelectedItem: async (rowItm: any, _: any, rowIdx: any, __: any) => {\n      if (rowItm) {\n        wait(100).then(() => {\n          foaIDNoRef.current = rowItm[1];\n          if (faoRef.current) {\n            faoRef.current.value = rowItm[2] ?? \"\";\n          }\n          remarksRef.current?.focus();\n        });\n        clientCreditCloseModal();\n      }\n    },\n  });\n\n  // Search Collection\n  const {\n    UpwardTableModalSearch: SearchCollectionUpwardTableModalSearch,\n    openModal: searchCollectionCreditOpenModal,\n    closeModal: searchCollectionCreditCloseModal,\n  } = useUpwardTableModalSearchSafeMode({\n    size: \"medium\",\n    link: \"/task/accounting/search-collection\",\n    column: [\n      { key: \"Date_OR\", label: \"OR Date\", width: 100 },\n      { key: \"ORNo\", label: \"OR No.\", width: 100 },\n      { key: \"Name\", label: \"Name\", width: 400 },\n    ],\n    getSelectedItem: async (rowItm: any, _: any, rowIdx: any, __: any) => {\n      if (rowItm) {\n        wait(100).then(() => {\n          resetCredit(false);\n          resetDebit(false);\n          mutateCollectionDataSearch({ ORNo: rowItm[1] });\n        });\n        searchCollectionCreditCloseModal();\n      }\n    },\n  });\n\n  const {\n    isLoading: loadingCollectionDataSearch,\n    mutate: mutateCollectionDataSearch,\n  } = useMutation({\n    mutationKey: \"get-collection-data-search\",\n    mutationFn: async (variables: any) =>\n      await myAxios.get(\n        `/task/accounting/get-collection-data-search?ORNo=${variables.ORNo}`,\n        {\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${user?.accessToken}`,\n          },\n        }\n      ),\n    onSuccess: (res) => {\n      const response = res as any;\n      const dataCollection = response.data.collection;\n\n      if (\n        ornoRef.current &&\n        dateRef.current &&\n        pnClientRef.current &&\n        clientNameRef.current\n      ) {\n        ornoRef.current.value = dataCollection[0].ORNo;\n        dateRef.current.value = dataCollection[0].Date_OR;\n        pnClientRef.current.value = dataCollection[0].ID_No;\n        clientNameRef.current.value = dataCollection[0].Short;\n      }\n\n      const debit: Array<any> = [];\n      const credit: Array<any> = [];\n\n      for (let i = 0; i <= dataCollection.length - 1; i++) {\n        if (\n          dataCollection[i].Payment !== null &&\n          dataCollection[i].Payment.toString() !== \"\"\n        ) {\n          const isCash = dataCollection[i].Payment === \"Cash\";\n          debit.push({\n            Payment: dataCollection[i].Payment,\n            Amount: dataCollection[i].Debit,\n            Check_No: isCash ? \"\" : dataCollection[i].Check_No,\n            Check_Date: isCash\n              ? \"\"\n              : format(new Date(dataCollection[i].Check_Date), \"yyyy-MM-dd\"),\n            Bank_Branch: isCash ? \"\" : dataCollection[i].Bank,\n            Acct_Code: dataCollection[i].DRCode,\n            Acct_Title: dataCollection[i].DRTitle,\n            Deposit_Slip: dataCollection[i].SlipCode,\n            Cntr: \"\",\n            Remarks: dataCollection[i].DRRemarks,\n            TC: isCash ? \"CSH\" : \"CHK\",\n            Bank: dataCollection[i].Bank_Code,\n            BankName: dataCollection[i].BankName,\n          });\n        }\n\n        if (\n          dataCollection[i].Purpose !== null &&\n          dataCollection[i].Purpose.toString() !== \"\"\n        ) {\n          credit.push({\n            temp_id: `${i}`,\n            transaction: dataCollection[i].Purpose,\n            amount: dataCollection[i].Credit,\n            Remarks: dataCollection[i].CRRemarks,\n            Code: dataCollection[i].CRCode,\n            Title: dataCollection[i].CRTitle,\n            TC: dataCollection[i].TC,\n            Account_No: dataCollection[i].CRLoanID,\n            Name: dataCollection[i].CRLoanName,\n            VATType: dataCollection[i].CRVATType,\n            invoiceNo: dataCollection[i].CRInvoiceNo,\n          });\n        }\n      }\n\n      debitTable.current.setDataFormated(debit);\n      creditTable.current.setDataFormated(credit);\n      setTotalDebit(\n        debit.reduce(\n          (sum: any, subArray: any) =>\n            sum + parseFloat(subArray.Amount.replace(/,/g, \"\")),\n          0\n        )\n      );\n      setTotalCredit(\n        credit.reduce(\n          (sum: any, subArray: any) =>\n            sum + parseFloat(subArray.amount.replace(/,/g, \"\")),\n          0\n        )\n      );\n      setCollectionMode(\"update\");\n    },\n  });\n\n\n  const { isLoading: NewORNoLoading, refetch: refetchNewOR } = useQuery({\n    queryKey: queryKeyNewORNumber,\n    queryFn: async () =>\n      await myAxios.get(`/task/accounting/get-new-or-number`, {\n        headers: {\n          Authorization: `Bearer ${user?.accessToken}`,\n        },\n      }),\n    refetchOnWindowFocus: false,\n    onSuccess: (res) => {\n      const response = res as any;\n      wait(100).then(() => {\n        ornoSubRef.current = response.data?.ORNo[0].collectionID;\n        if (ornoRef.current) {\n          ornoRef.current.value = response.data?.ORNo[0].collectionID;\n        }\n      });\n    },\n  });\n  const { mutate, isLoading: loadingAddNew } = useMutation({\n    mutationKey: \"add-update-collection\",\n    mutationFn: async (variables: any) => {\n      if (collectionMode === \"update\") {\n        delete variables.mode;\n        return await myAxios.post(\n          \"/task/accounting/update-collection\",\n          variables,\n          {\n            headers: {\n              Authorization: `Bearer ${user?.accessToken}`,\n            },\n          }\n        );\n      }\n      delete variables.mode;\n      return await myAxios.post(\"/task/accounting/add-collection\", variables, {\n        headers: {\n          Authorization: `Bearer ${user?.accessToken}`,\n        },\n      });\n    },\n    onSuccess: (res) => {\n      if (res.data.success) {\n        resetCollection();\n        return Swal.fire({\n          position: \"center\",\n          icon: \"success\",\n          title: res.data.message,\n          showConfirmButton: false,\n          timer: 1500,\n        });\n      }\n      Swal.fire({\n        position: \"center\",\n        icon: \"error\",\n        title: res.data.message,\n        showConfirmButton: false,\n        timer: 1500,\n      });\n    },\n  });\n  const { mutate: mutataPrint, isLoading: isLoadingPrint } = useMutation({\n    mutationKey: \"on-print\",\n    mutationFn: async (variables: any) => {\n      return await myAxios.post(\"/task/accounting/on-print\", variables, {\n        headers: {\n          Authorization: `Bearer ${user?.accessToken}`,\n        },\n      });\n    },\n    onSuccess: (res) => {\n      if (res.data.success) {\n        printOR(res.data);\n      }\n    },\n  });\n  function resetCollection() {\n    wait(100).then(() => {\n      refetchNewOR();\n      resetFields();\n      resetCredit(false);\n      resetDebit(false);\n      debitTable.current?.setData([]);\n      creditTable.current?.setData([]);\n      pnClientRef.current?.focus();\n      setTotalCredit(0);\n      setTotalDebit(0);\n    });\n  }\n  async function saveCashDebit(value: string, paymentType: string) {\n    const amount = parseFloat(value.replace(/,/g, \"\"));\n    if (isNaN(amount) || amount <= 0) {\n      amountDebitRef.current?.focus();\n      return alert(\"Please provide amount!\");\n    }\n    const getSelectedRow = debitTable.current.getSelectedRow();\n    const debitTableData = debitTable.current.getData();\n\n    if (getSelectedRow !== null) {\n      debitTableData[getSelectedRow][1] = amount.toLocaleString(\"en-US\", {\n        minimumFractionDigits: 2,\n        maximumFractionDigits: 2,\n      });\n      debitTable.current.setData(debitTableData);\n      debitTable.current.setSelectedRow(null);\n      debitTable.current.resetCheckBox()\n      debitTable.current.resetCheckBox()\n      setTotalDebit(\n        debitTableData.reduce(\n          (sum: any, subArray: any) =>\n            sum + parseFloat(subArray[1].replace(/,/g, \"\")),\n          0\n        )\n      );\n    } else {\n      const dd = await executeQueryToClient(\n        `select * from Transaction_Code LEFT JOIN Chart_Account ON Transaction_Code.Acct_Code = Chart_Account.Acct_Code WHERE Code = 'CSH'`\n      );\n\n      const data = {\n        Payment: \"Cash\",\n        Amount: amount.toLocaleString(\"en-US\", {\n          minimumFractionDigits: 2,\n          maximumFractionDigits: 2,\n        }),\n        Check_No: \"\",\n        Check_Date: \"\",\n        Bank_Branch: \"\",\n        Acct_Code: dd.data?.data[0].Acct_Code,\n        Acct_Title: dd.data?.data[0].Acct_Title,\n        Deposit_Slip: \"\",\n        Cntr: \"\",\n        Remarks: \"\",\n        TC: paymentType,\n        Bank: \"\",\n        BankName: \"\",\n      };\n      const newDataFormatted = debitTableData.map((itm: any) => {\n        let newItm = {\n          Payment: itm[0],\n          Amount: itm[1],\n          Check_No: itm[2],\n          Check_Date: itm[3],\n          Bank_Branch: itm[4],\n          Acct_Code: itm[5],\n          Acct_Title: itm[6],\n          Deposit_Slip: itm[7],\n          Cntr: itm[8],\n          Remarks: itm[9],\n          TC: itm[10],\n          Bank: itm[11],\n          BankName: itm[12],\n        };\n        return newItm;\n      });\n      const newDataTable = [...newDataFormatted, data];\n      debitTable.current.setDataFormated(newDataTable);\n      setTotalDebit(\n        newDataTable.reduce(\n          (sum: any, subArray: any) =>\n            sum + parseFloat(subArray.Amount.replace(/,/g, \"\")),\n          0\n        )\n      );\n    }\n\n    if (amountDebitRef.current) {\n      amountDebitRef.current.value = \"\";\n      amountDebitRef.current?.focus();\n    }\n  }\n  function saveCheckDebit(refs: any, autoClose = true) {\n    wait(100).then(async () => {\n      // const refs = modalCheckRef.current.getRefs()\n\n      const amount = parseFloat(\n        refs.amountRef.current?.value.replace(/,/g, \"\")\n      );\n      const checkno = refs.checknoRef.current?.value;\n      const checkdate = refs.checkdateRef.current?.value;\n      const branch = refs.branchRef.current?.value;\n      const remarks = refs.remarksRef.current?.value;\n      const bank = refs.bankRef.current?.value;\n      const bankRefName = refs.bankRefName.current;\n      const getSelectedRow = debitTable.current.getSelectedRow();\n\n      if (\n        debitTable.current.checkNoIsExist(checkno) &&\n        getSelectedRow === null\n      ) {\n        return alert(`check no is already exist`);\n      }\n\n      if (getSelectedRow !== null) {\n        const debitTableData = debitTable.current.getData();\n        debitTableData[getSelectedRow][1] = amount.toLocaleString(\"en-US\", {\n          minimumFractionDigits: 2,\n          maximumFractionDigits: 2,\n        });\n        debitTableData[getSelectedRow][2] = checkno;\n        debitTableData[getSelectedRow][3] = checkdate;\n        debitTableData[getSelectedRow][4] = branch;\n        debitTableData[getSelectedRow][9] = remarks;\n        debitTableData[getSelectedRow][11] = bank;\n        debitTableData[getSelectedRow][12] = bankRefName;\n        debitTable.current.setData(debitTableData);\n        debitTable.current.setSelectedRow(null);\n        debitTable.current.resetCheckBox()\n        setTotalDebit(\n          debitTableData.reduce(\n            (sum: any, subArray: any) =>\n              sum + parseFloat(subArray[1].replace(/,/g, \"\")),\n            0\n          )\n        );\n      } else {\n        const dd = await executeQueryToClient(\n          `select * from Transaction_Code LEFT JOIN Chart_Account ON Transaction_Code.Acct_Code = Chart_Account.Acct_Code WHERE Code = 'CHK'`\n        );\n        const data = {\n          Payment: \"Check\",\n          Amount: amount.toLocaleString(\"en-US\", {\n            minimumFractionDigits: 2,\n            maximumFractionDigits: 2,\n          }),\n          Check_No: checkno,\n          Check_Date: checkdate,\n          Bank_Branch: branch,\n          Acct_Code: dd.data?.data[0].Acct_Code,\n          Acct_Title: dd.data?.data[0].Acct_Title,\n          Deposit_Slip: \"\",\n          Cntr: \"\",\n          Remarks: remarks,\n          TC: paymentType,\n          Bank: bank,\n          BankName: bankRefName,\n        };\n        const debitTableData = debitTable.current.getData();\n        const newDataFormatted = debitTableData.map((itm: any) => {\n          let newItm = {\n            Payment: itm[0],\n            Amount: itm[1],\n            Check_No: itm[2],\n            Check_Date: itm[3],\n            Bank_Branch: itm[4],\n            Acct_Code: itm[5],\n            Acct_Title: itm[6],\n            Deposit_Slip: itm[7],\n            Cntr: itm[8],\n            Remarks: itm[9],\n            TC: itm[10],\n            Bank: itm[11],\n            BankName: itm[12],\n          };\n          return newItm;\n        });\n        const newDataTable = [...newDataFormatted, data];\n        debitTable.current.setDataFormated(newDataTable);\n        setTotalDebit(\n          newDataTable.reduce(\n            (sum: any, subArray: any) =>\n              sum + parseFloat(subArray.Amount.replace(/,/g, \"\")),\n            0\n          )\n        );\n      }\n\n      if (autoClose) {\n        modalCheckRef.current.closeDelay();\n      }\n    });\n  }\n  async function saveCredit() {\n    if (\n      (transactionRef.current && transactionRef.current.value === \"\") ||\n      (transactionRef.current && transactionRef.current.value === null) ||\n      (transactionRef.current && transactionRef.current.value === undefined)\n    ) {\n      transactionRef.current.focus();\n      return alert(`Please select a transaction!`);\n    }\n    if (transactionRef.current) {\n      const dd = await executeQueryToClient(\n        `SELECT * FROM transaction_code where Description = \"${transactionRef.current.value}\"`\n      );\n      if (dd.data.data?.length <= 0) {\n        return alert(\"Transaction not yet defined!\");\n      }\n    }\n    if (amountCreditRef.current) {\n      if (\n        isNaN(parseFloat(amountCreditRef.current.value.replace(/,/g, \"\"))) ||\n        parseFloat(amountCreditRef.current.value.replace(/,/g, \"\")) <= 0\n      ) {\n        amountCreditRef.current.focus();\n        return alert(\"Please provide amount!\");\n      }\n    }\n    if (invoiceRef.current && invoiceRef.current.value === \"\") {\n      invoiceRef.current.focus();\n      return alert(\"Please provide invoice!\");\n    }\n    if (foaIDNoRef.current === \"\") {\n      faoRef.current?.focus();\n      return alert(\"Please provide usage!\");\n    }\n\n    const getSelectedRow = creditTable.current.getSelectedRow();\n\n    if (getSelectedRow !== null) {\n      const creditTableData = creditTable.current.getData();\n      creditTableData[getSelectedRow][0] = transactionRef.current?.value;\n      creditTableData[getSelectedRow][1] = amountCreditRef.current?.value;\n      creditTableData[getSelectedRow][2] = faoRef.current?.value;\n      creditTableData[getSelectedRow][3] = remarksRef.current?.value;\n      creditTableData[getSelectedRow][4] = vatTypeRef.current?.value;\n      creditTableData[getSelectedRow][5] = invoiceRef.current?.value;\n      creditTableData[getSelectedRow][6] = accCodeRef.current;\n      creditTableData[getSelectedRow][7] = accTitleRef.current;\n      creditTableData[getSelectedRow][8] = accTCRef.current;\n      creditTableData[getSelectedRow][9] = foaIDNoRef.current;\n\n      creditTable.current.setData(creditTableData);\n      creditTable.current.setSelectedRow(null);\n      creditTable.current.resetCheckBox()\n      setTotalCredit(\n        creditTableData.reduce(\n          (sum: any, subArray: any) =>\n            sum + parseFloat(subArray[1].replace(/,/g, \"\")),\n          0\n        )\n      );\n    } else {\n      const data = {\n        transaction: transactionRef.current?.value,\n        amount: amountCreditRef.current?.value,\n        Name: faoRef.current?.value,\n        Remarks: remarksRef.current?.value,\n        VATType: vatTypeRef.current?.value,\n        invoiceNo: invoiceRef.current?.value,\n        Code: accCodeRef.current,\n        Title: accTitleRef.current,\n        TC: accTCRef.current,\n        Account_No: foaIDNoRef.current,\n      };\n\n      const creditTableData = creditTable.current.getData();\n      const newDataFormatted = creditTableData.map((itm: any) => {\n        let newItm = {\n          transaction: itm[0],\n          amount: itm[1],\n          Name: itm[2],\n          Remarks: itm[3],\n          VATType: itm[4],\n          invoiceNo: itm[5],\n          Code: itm[6],\n          Title: itm[7],\n          TC: itm[8],\n          Account_No: itm[9],\n        };\n        return newItm;\n      });\n      const newCreditTableData = [...newDataFormatted, data];\n      creditTable.current.setDataFormated(newCreditTableData);\n      setTotalCredit(\n        newCreditTableData.reduce(\n          (sum: any, subArray: any) =>\n            sum + parseFloat(subArray.amount.replace(/,/g, \"\")),\n          0\n        )\n      );\n    }\n\n    if (vatTypeRef.current && vatTypeRef.current.value === \"VAT\") {\n      const dd = await executeQueryToClient(\n        `select chart_account.Acct_Code,chart_account.Acct_Title from transaction_code LEFT JOIN chart_account ON transaction_code.Acct_Code = chart_account.Acct_Code WHERE Description = 'Output Tax'`\n      );\n      const TC = await executeQueryToClient(\n        `select Code from transaction_code WHERE Description = 'Output Tax' `\n      );\n\n      let taxableamt = 0;\n      let inputtax = 0;\n\n      if (amountCreditRef.current) {\n        taxableamt =\n          parseFloat(amountCreditRef.current.value.replace(/,/g, \"\")) / 1.12;\n        inputtax = taxableamt * 0.12;\n      }\n\n      const debitTableData = creditTable.current.getData();\n\n      if (getSelectedRow !== null) {\n        const newData: any = [];\n        newData[0] = \"Output Tax\";\n        newData[1] = inputtax.toLocaleString(\"en-US\", {\n          minimumFractionDigits: 2,\n          maximumFractionDigits: 2,\n        });\n        newData[2] = faoRef.current?.value;\n        newData[3] = remarksRef.current?.value;\n        newData[4] = \"VAT\";\n        newData[5] = invoiceRef.current?.value;\n        newData[6] = dd.data?.data[0].Acct_Code;\n        newData[7] = dd.data?.data[0].Acct_Title;\n        newData[8] = TC.data?.data[0].Code;\n        newData[9] = foaIDNoRef.current;\n\n        debitTableData[getSelectedRow][1] = taxableamt.toLocaleString(\"en-US\", {\n          minimumFractionDigits: 2,\n          maximumFractionDigits: 2,\n        });\n\n        debitTableData.splice(getSelectedRow + 1, 0, newData);\n        creditTable.current.setData(debitTableData);\n      } else {\n        const newData: any = [];\n        newData[0] = \"Output Tax\";\n        newData[1] = inputtax.toLocaleString(\"en-US\", {\n          minimumFractionDigits: 2,\n          maximumFractionDigits: 2,\n        });\n        newData[2] = faoRef.current?.value;\n        newData[3] = remarksRef.current?.value;\n        newData[4] = \"VAT\";\n        newData[5] = invoiceRef.current?.value;\n        newData[6] = dd.data?.data[0].Acct_Code;\n        newData[7] = dd.data?.data[0].Acct_Title;\n        newData[8] = TC.data?.data[0].Code;\n        newData[9] = foaIDNoRef.current;\n\n        debitTableData[debitTableData.length] = newData;\n        debitTableData[debitTableData.length - 2][1] =\n          taxableamt.toLocaleString(\"en-US\", {\n            minimumFractionDigits: 2,\n            maximumFractionDigits: 2,\n          });\n        creditTable.current.setData(debitTableData);\n      }\n    }\n    resetCredit();\n  }\n  function resetFields() {\n    wait(100).then(() => {\n      if (dateRef.current) {\n        dateRef.current.value = format(new Date(), \"yyyy-MM-dd\");\n      }\n      if (pnClientRef.current) {\n        pnClientRef.current.value = \"\";\n      }\n      if (clientNameRef.current) {\n        clientNameRef.current.value = \"\";\n      }\n      IDNo.current = \"\";\n    });\n  }\n  function resetDebit(setFocus = true) {\n    modalCheckRef.current?.closeDelay();\n    setPaymentType(\"CSH\");\n    if (paymentTypeRef.current) {\n      paymentTypeRef.current.value = \"CSH\";\n    }\n    wait(100).then(() => {\n      if (amountDebitRef.current) {\n        amountDebitRef.current.value = \"\";\n        if (setFocus) amountDebitRef.current?.focus();\n      }\n    });\n  }\n  function resetCredit(setFocus = true) {\n    wait(100).then(() => {\n      if (transactionRef.current) {\n        transactionRef.current.value = \"\";\n      }\n      if (amountCreditRef.current) {\n        amountCreditRef.current.value = \"0.00\";\n      }\n      if (faoRef.current) {\n        faoRef.current.value = \"\";\n      }\n      if (remarksRef.current) {\n        remarksRef.current.value = \"\";\n      }\n      if (vatTypeRef.current) {\n        vatTypeRef.current.value = \"Non-VAT\";\n      }\n      if (invoiceRef.current) {\n        invoiceRef.current.value = \"\";\n      }\n      accCodeRef.current = \"\";\n      accTitleRef.current = \"\";\n      accTCRef.current = \"\";\n      foaIDNoRef.current = \"\";\n      if (setFocus) transactionRef.current?.focus();\n    });\n  }\n  function handleOnAdd() {\n    setCollectionMode(\"add\");\n    resetCollection();\n  }\n  function handleOnSave() {\n    const debitTableData = debitTable.current.getData();\n    const creditTableData = creditTable.current.getData();\n\n    if (ornoRef.current && ornoRef.current.value === \"\") {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: \"Please provide OR number\",\n        timer: 1500,\n      });\n    } else if (pnClientRef.current && pnClientRef.current.value === \"\") {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: \"Please provide PN/Client ID\",\n        timer: 1500,\n      }).then(() => {\n        wait(350).then(() => {\n          if (pnClientRef.current) clientOpenModal(pnClientRef.current?.value);\n        });\n      });\n    } else if (debitTableData.length <= 0) {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: \"Please provide debit entry\",\n        timer: 1500,\n      }).then(() => {\n        wait(300).then(() => {\n          paymentTypeRef.current?.focus();\n        });\n      });\n    } else if (creditTableData.length <= 0) {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: \"Please provide credit entry\",\n        timer: 1500,\n      }).then(() => {\n        wait(300).then(() => {\n          transactionRef.current?.focus();\n        });\n      });\n    } else if (\n      parseFloat(\n        debitTableData.reduce(\n          (sum: any, obj: any) =>\n            sum + parseFloat(obj[1].toString().replace(/,/g, \"\")),\n          0\n        )\n      ).toFixed(2) !==\n      parseFloat(\n        creditTableData.reduce(\n          (sum: any, obj: any) =>\n            sum + parseFloat(obj[1].toString().replace(/,/g, \"\")),\n          0\n        )\n      ).toFixed(2)\n    ) {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title:\n          \"Transaction is not balanced. Check if the amount you entered are correct!\",\n        timer: 1500,\n      });\n    }\n\n    const creditTableDataFormatted = creditTableData.map((itm: any) => {\n      let newItm = {\n        transaction: itm[0],\n        amount: itm[1],\n        Name: itm[2],\n        Remarks: itm[3],\n        VATType: itm[4],\n        invoiceNo: itm[5],\n        Code: itm[6],\n        Title: itm[7],\n        TC: itm[8],\n        Account_No: itm[9],\n      };\n      return newItm;\n    });\n\n    const debitTableDataFormatted = debitTableData.map((itm: any) => {\n      let newItm = {\n        Payment: itm[0],\n        Amount: itm[1],\n        Check_No: itm[2],\n        Check_Date: itm[3],\n        Bank_Branch: itm[4],\n        Acct_Code: itm[5],\n        Acct_Title: itm[6],\n        Deposit_Slip: itm[7],\n        Cntr: itm[8],\n        Remarks: itm[9],\n        TC: itm[10],\n        Bank: itm[11],\n        BankName: itm[12],\n      };\n      return newItm;\n    });\n\n    const state = {\n      ORNo: ornoRef.current?.value,\n      Date: dateRef.current?.value,\n      PNo: pnClientRef.current?.value,\n      Name: clientNameRef.current?.value,\n      debit: JSON.stringify(debitTableDataFormatted),\n      credit: JSON.stringify(creditTableDataFormatted),\n    };\n\n    if (collectionMode === \"update\") {\n      codeCondfirmationAlert({\n        isUpdate: true,\n        cb: (userCodeConfirmation) => {\n          mutate({ ...state, userCodeConfirmation, mode: \"\" });\n        },\n      });\n    } else {\n      saveCondfirmationAlert({\n        isConfirm: () => {\n          mutate({ ...state, mode: \"\" });\n        },\n      });\n    }\n  }\n  function handleOnPrint() {\n    if (ornoRef.current) mutataPrint({ ORNo: ornoRef.current.value });\n  }\n  function handleOnClose() {\n    Swal.fire({\n      title: \"Are you sure?\",\n      text: \"You won't be able to revert this!\",\n      icon: \"warning\",\n      showCancelButton: true,\n      confirmButtonColor: \"#3085d6\",\n      cancelButtonColor: \"#d33\",\n      confirmButtonText: \"Yes, cancel it!\",\n    }).then((result) => {\n      if (result.isConfirmed) {\n        setCollectionMode(\"\");\n        resetCollection();\n      }\n    });\n  }\n  function printOR(res: any) {\n    const data = res.data.concat(res.data1);\n    console.log(res);\n    flushSync(() => {\n      localStorage.removeItem(\"printString\");\n      localStorage.setItem(\"dataString\", JSON.stringify(data));\n      localStorage.setItem(\"paper-width\", \"8.5in\");\n      localStorage.setItem(\"paper-height\", \"11in\");\n      localStorage.setItem(\"module\", \"collection\");\n      if (user?.department === \"UMIS\") {\n        localStorage.setItem(\n          \"title\",\n          user?.department === \"UMIS\"\n            ? \"UPWARD MANAGEMENT INSURANCE SERVICES\"\n            : \"UPWARD CONSULTANCY SERVICES AND MANAGEMENT INC.\"\n        );\n      } else {\n        localStorage.setItem(\n          \"title\",\n          \"UPWARD CONSULTANCY SERVICES AND MANAGEMENT INC.\"\n        );\n      }\n    });\n    window.open(\"/dashboard/print\", \"_blank\");\n  }\n\n  return (\n    <div\n      style={{\n        height: \"100%\",\n        width: \"100%\",\n        background: \"#F1F1F1\",\n      }}\n    >\n      <SearchCollectionUpwardTableModalSearch />\n      <ClientUpwardTableModalSearch />\n      <ClientCreditUpwardTableModalSearch />\n      <PageHelmet title=\"Collection\" />\n      <UpwardTableModalSearch />\n      <ModalCheck\n        ref={modalCheckRef}\n        handleOnSave={() => {\n          const refs = modalCheckRef.current.getRefs();\n          saveCheckDebit(refs);\n        }}\n        handleOnClose={() => {\n          debitTable.current.setSelectedRow(null);\n          debitTable.current.resetCheckBox()\n          buttonCheckSave.current?.focus();\n        }}\n      />\n\n      {(loadingAddNew || isLoadingPrint || loadingCollectionDataSearch) && (\n        <Loading />\n      )}\n\n      <div\n        style={{\n          width: \"100%\",\n          height: \"20%\",\n          display: \"flex\",\n          flexDirection: \"column\",\n          padding: \"5px\",\n        }}\n      >\n        <div\n          style={{\n            height: \"30px\",\n            display: \"flex\",\n            columnGap: \"10px\",\n          }}\n        >\n          <TextInput\n            containerStyle={{ width: \"550px\" }}\n            label={{\n              title: \"Search: \",\n              style: {\n                fontSize: \"12px\",\n                fontWeight: \"bold\",\n                width: \"50px\",\n              },\n            }}\n            input={{\n              className: \"search-input-up-on-key-down\",\n              type: \"search\",\n              onKeyDown: (e) => {\n                if (e.key === \"Enter\" || e.key === \"NumpadEnter\") {\n                  e.preventDefault();\n                  searchCollectionCreditOpenModal(e.currentTarget.value);\n                }\n              },\n              style: { width: \"500px\", height: \"22px\" },\n            }}\n            icon={<SearchIcon sx={{ fontSize: \"18px\" }} />}\n            onIconClick={(e) => {\n              e.preventDefault();\n              if (searchRef.current)\n                searchCollectionCreditOpenModal(searchRef.current.value);\n            }}\n            inputRef={searchRef}\n          />\n          <IconButton\n            aria-label=\"add\"\n            size=\"small\"\n            color=\"info\"\n            onClick={handleOnAdd}\n          >\n            <AddIcon />\n          </IconButton>\n          <IconButton\n            disabled={disableFields}\n            aria-label=\"save\"\n            size=\"small\"\n            color=\"success\"\n            onClick={handleOnSave}\n          >\n            <SaveIcon />\n          </IconButton>\n          <IconButton\n            disabled={collectionMode !== \"update\"}\n            aria-label=\"print\"\n            size=\"small\"\n            color=\"secondary\"\n            onClick={handleOnPrint}\n          >\n            <LocalPrintshopIcon />\n          </IconButton>\n          <IconButton\n            disabled={disableFields}\n            aria-label=\"print\"\n            size=\"small\"\n            color=\"error\"\n            onClick={handleOnClose}\n          >\n            <CloseIcon />\n          </IconButton>\n        </div>\n        <div\n          style={{\n            flex: 1,\n            border: \"1px solid #64748b\",\n            display: \"flex\",\n            alignItems: \"center\",\n            columnGap: \"50px\",\n            padding: \"5px\",\n            width: \"100%\",\n          }}\n        >\n          <div\n            style={{\n              display: \"flex\",\n              flexDirection: \"column\",\n              rowGap: \"5px\",\n              width: \"50%\",\n            }}\n          >\n            {NewORNoLoading ? (\n              <LoadingButton loading={NewORNoLoading} />\n            ) : (\n              <TextInput\n                containerStyle={{\n                  width: \"320px\",\n                }}\n                label={{\n                  title: \"OR No. : \",\n                  style: {\n                    fontSize: \"12px\",\n                    fontWeight: \"bold\",\n                    width: \"70px\",\n                  },\n                }}\n                input={{\n                  disabled: disableFields,\n                  readOnly: true,\n                  type: \"text\",\n                  style: { width: \"250px\" },\n                  onKeyDown: (e) => {\n                    if (e.code === \"NumpadEnter\" || e.code === \"Enter\") {\n                      refetchNewOR();\n                    }\n                  },\n                }}\n                inputRef={ornoRef}\n                icon={<RestartAltIcon sx={{ fontSize: \"18px\" }} />}\n                onIconClick={(e) => {\n                  e.preventDefault();\n                  if (faoRef.current) {\n                    refetchNewOR();\n                  }\n                }}\n              />\n            )}\n            <TextInput\n              label={{\n                title: \"Date : \",\n                style: {\n                  fontSize: \"12px\",\n                  fontWeight: \"bold\",\n                  width: \"70px\",\n                },\n              }}\n              input={{\n                disabled: disableFields,\n                type: \"date\",\n                style: { width: \"250px\" },\n                defaultValue: format(new Date(), \"yyyy-MM-dd\"),\n                onKeyDown: (e) => {\n                  if (e.code === \"NumpadEnter\" || e.code === \"Enter\") {\n                    pnClientRef.current?.focus();\n                  }\n                },\n              }}\n              inputRef={dateRef}\n            />\n          </div>\n          <div\n            style={{\n              display: \"flex\",\n              flexDirection: \"column\",\n              rowGap: \"5px\",\n              width: \"50%\",\n            }}\n          >\n            <TextInput\n              containerStyle={{\n                width: \"60%\",\n              }}\n              label={{\n                title: \"PN/Client ID : \",\n                style: {\n                  fontSize: \"12px\",\n                  fontWeight: \"bold\",\n                  width: \"100px\",\n                },\n              }}\n              input={{\n                disabled: disableFields,\n                type: \"text\",\n                style: { flex: 1 },\n                onKeyDown: (e) => {\n                  if (e.code === \"NumpadEnter\" || e.code === \"Enter\") {\n                    clientOpenModal(e.currentTarget.value);\n                  }\n                },\n              }}\n              icon={<AccountBoxIcon sx={{ fontSize: \"18px\" }} />}\n              onIconClick={(e) => {\n                e.preventDefault();\n                if (pnClientRef.current) {\n                  clientOpenModal(pnClientRef.current.value);\n                }\n              }}\n              inputRef={pnClientRef}\n            />\n            <TextInput\n              label={{\n                title: \"Client Name : \",\n                style: {\n                  fontSize: \"12px\",\n                  fontWeight: \"bold\",\n                  width: \"100px\",\n                },\n              }}\n              input={{\n                disabled: disableFields,\n                type: \"text\",\n                style: { width: \"80%\" },\n                onKeyDown: (e) => {\n                  if (e.code === \"NumpadEnter\" || e.code === \"Enter\") {\n                  }\n                },\n              }}\n              inputRef={clientNameRef}\n            />\n          </div>\n        </div>\n      </div>\n      <div style={{ height: \"5px\" }}></div>\n      <ContentContainer\n        title={\"Particulars (Debit)\"}\n        firstContent={\n          <div\n            style={{\n              display: \"flex\",\n              flexDirection: \"column\",\n              rowGap: \"5px\",\n              width: \"100%\",\n            }}\n          >\n            <div\n              style={{\n                display: \"flex\",\n                alignItems: \"center\",\n                columnGap: \"15px\",\n                marginTop: \"5px\",\n                flex: 1,\n              }}\n            >\n              <SelectInput\n                containerStyle={{ width: \"100%\" }}\n                label={{\n                  title: \"Payment Type : \",\n                  style: {\n                    fontSize: \"12px\",\n                    fontWeight: \"bold\",\n                    width: \"100px\",\n                  },\n                }}\n                selectRef={paymentTypeRef}\n                select={{\n                  disabled: disableFields,\n                  style: { flex: 1, height: \"22px\" },\n                  value: paymentType,\n                  onKeyDown: (e) => {\n                    if (e.code === \"NumpadEnter\" || e.code === \"Enter\") {\n                      e.preventDefault();\n                      amountDebitRef.current?.focus();\n                    }\n                  },\n                  onChange: (e) => {\n                    if (e.target.value === \"CHK\" && amountDebitRef.current) {\n                      amountDebitRef.current.value = \"0.00\";\n                      wait(100).then(() => {\n                        buttonCheckSave.current?.focus();\n                      });\n                    }\n                    setPaymentType(e.target.value);\n                  },\n                }}\n                datasource={[\n                  { key: \"Cash\", value: \"CSH\" },\n                  { key: \"Check\", value: \"CHK\" },\n                ]}\n                values={\"value\"}\n                display={\"key\"}\n              />\n              <button\n                ref={buttonCheckSave}\n                disabled={paymentType === \"CSH\"}\n                className={`custom-btn ripple-button ${\n                  paymentType === \"CSH\" ? \"disabled\" : \"not-disabled\"\n                }`}\n                style={{\n                  padding: \"0 5px\",\n                  borderRadius: \"0px\",\n                  color: \"white\",\n                  height: \"22px\",\n                  background: paymentType === \"CSH\" ? \"#8fc993\" : \"#1b5e20\",\n                }}\n                onClick={(e) => {\n                  modalCheckRef.current?.showModal();\n                  wait(100).then(() => {\n                    modalCheckRef.current?.checknoRef.current?.focus();\n                  });\n                }}\n              >\n                <AddIcon sx={{ fontSize: \"22px\" }} />\n              </button>\n            </div>\n            <div\n              style={{\n                display: \"flex\",\n                alignItems: \"center\",\n                columnGap: \"15px\",\n              }}\n            >\n              <TextFormatedInput\n                containerStyle={{\n                  flex: 1,\n                }}\n                label={{\n                  title: \"Amount : \",\n                  style: {\n                    fontSize: \"12px\",\n                    fontWeight: \"bold\",\n                    width: \"100px\",\n                  },\n                }}\n                input={{\n                  disabled: paymentType === \"CHK\" || disableFields,\n                  type: \"text\",\n                  style: { flex: 1 },\n                  onKeyDown: (e) => {\n                    if (e.code === \"NumpadEnter\" || e.code === \"Enter\") {\n                      buttonCshSave.current?.click();\n                    }\n                  },\n                }}\n                inputRef={amountDebitRef}\n              />\n              <button\n                ref={buttonCshSave}\n                disabled={paymentType === \"CHK\"}\n                className={`custom-btn ripple-button ${\n                  paymentType === \"CHK\" ? \"disabled\" : \"not-disabled\"\n                }`}\n                style={{\n                  padding: \"0 5px\",\n                  borderRadius: \"0px\",\n                  color: \"white\",\n                  height: \"22px\",\n                  background: paymentType === \"CHK\" ? \"#8fc993\" : \"#1b5e20\",\n                }}\n                onClick={(e) => {\n                  if (amountDebitRef.current && paymentTypeRef.current) {\n                    saveCashDebit(\n                      amountDebitRef.current.value,\n                      paymentTypeRef.current.value\n                    );\n                  }\n                }}\n              >\n                <ForwardIcon sx={{ fontSize: \"22px\" }} />\n              </button>\n            </div>\n            <Button\n              ref={buttonCheckList}\n              disabled={paymentType === \"CSH\"}\n              startIcon={<AddIcon />}\n              sx={{\n                height: \"30px\",\n                fontSize: \"11px\",\n                marginTop: \"20px\",\n              }}\n              color=\"success\"\n              variant=\"contained\"\n              onClick={openModal}\n            >\n              Add Check from PDC Entry\n            </Button>\n          </div>\n        }\n        secondContent={\n          <div\n            style={{\n              position: \"relative\",\n              height: \"100%\",\n              width: \"100%\",\n              flex: 1,\n              display: \"flex\",\n              flexDirection: \"column\",\n            }}\n          >\n            <DataGridViewReact\n              ref={debitTable}\n              columns={debitColumn}\n              rows={[]}\n              containerStyle={{\n                height: \"auto\",\n                flex: 1,\n              }}\n              getSelectedItem={(rowItm: any) => {\n                if (rowItm) {\n                  if (rowItm[0] === \"Cash\") {\n                    wait(100).then(() => {\n                      if (amountDebitRef.current)\n                        amountDebitRef.current.value = rowItm[1];\n                    });\n                  } else {\n                    if (rowItm[7] && rowItm[7] !== \"\") {\n                      debitTable.current.resetCheckBox()\n                      debitTable.current.setSelectedRow(null);\n                      buttonCheckSave.current?.focus();\n                      return alert(\n                        ` Unable to edit. Check No [${rowItm[2]}] already deposited!`\n                      );\n                    }\n                    if (rowItm[8] && rowItm[8] !== \"\") {\n                      debitTable.current.resetCheckBox()\n                      debitTable.current.setSelectedRow(null);\n                      buttonCheckSave.current?.focus();\n                      return alert(\n                        ` Unable to edit. Check No [${rowItm[2]}] is a PDC reference!`\n                      );\n                    }\n                    const strBank = rowItm[4].split(\"/\");\n                    const BankName = executeQueryToClient(\n                      `select * from bank where Bank_Code = '${strBank[0]}'`\n                    );\n\n                    modalCheckRef.current?.showModal();\n\n                    wait(100).then(() => {\n                      if (modalCheckRef.current) {\n                        if (modalCheckRef.current.checknoRef.current) {\n                          modalCheckRef.current.checknoRef.current.value =\n                            rowItm[2];\n                        }\n                        if (modalCheckRef.current.bankRef.current) {\n                          modalCheckRef.current.bankRef.current.value =\n                            strBank[0];\n                        }\n                        if (modalCheckRef.current.branchRef.current) {\n                          modalCheckRef.current.branchRef.current.value =\n                            rowItm[4];\n                        }\n                        if (modalCheckRef.current.remarksRef.current) {\n                          modalCheckRef.current.remarksRef.current.value =\n                            rowItm[9];\n                        }\n                        if (modalCheckRef.current.checkdateRef.current) {\n                          modalCheckRef.current.checkdateRef.current.value =\n                            rowItm[3];\n                        }\n                        if (modalCheckRef.current.amountRef.current) {\n                          modalCheckRef.current.amountRef.current.value =\n                            rowItm[1];\n                        }\n                        if (modalCheckRef.current.bankRefName.current) {\n                          modalCheckRef.current.bankRefName.current = BankName;\n                        }\n                      }\n                    });\n                  }\n                } else {\n                  wait(100).then(() => {\n                    if (amountDebitRef.current)\n                      amountDebitRef.current.value = \"0.00\";\n                  });\n                }\n              }}\n              onKeyDown={(rowItm: any, rowIdx: any, e: any) => {\n                if (e.code === \"Delete\" || e.code === \"Backspace\") {\n                  const isConfim = window.confirm(\n                    `Are you sure you want to delete?`\n                  );\n                  if (isConfim) {\n                    const debitTableData = debitTable.current.getData();\n                    debitTableData.splice(rowIdx, 1);\n                    debitTable.current.setData(debitTableData);\n                    setTotalDebit(\n                      debitTableData.reduce(\n                        (sum: any, subArray: any) =>\n                          sum + parseFloat(subArray[1].replace(/,/g, \"\")),\n                        0\n                      )\n                    );\n                    return;\n                  }\n                }\n              }}\n            />\n            <div\n              style={{\n                fontSize: \"13px\",\n                textAlign: \"right\",\n                border: \"1px solid #d1cdcd\",\n                background: \"#dcdcdc\",\n                fontWeight: \"bold\",\n              }}\n            >\n              {totalDebit.toLocaleString(\"en-US\", {\n                minimumFractionDigits: 2,\n                maximumFractionDigits: 2,\n              })}\n            </div>\n          </div>\n        }\n        contentStyle={`\n          .custom-btn.not-disabled:hover{\n            background:#154f19 !important;\n          }\n          `}\n      />\n      <div style={{ height: \"5px\" }}></div>\n      <ContentContainer\n        title={\"Particulars Breakdown (Credit)\"}\n        firstContent={\n          <div\n            style={{\n              display: \"flex\",\n              rowGap: \"5px\",\n              flexDirection: \"column\",\n            }}\n          >\n            <label\n              htmlFor=\"auto-solo-collection\"\n              style={{\n                fontSize: \"12px\",\n                fontWeight: \"bold\",\n                marginTop: \"5px\",\n              }}\n            >\n              Transaction :\n            </label>\n            <div\n              style={{\n                display: \"flex\",\n                alignItems: \"center\",\n                columnGap: \"15px\",\n                flex: 1,\n              }}\n            >\n              {paymentTypeLoading ? (\n                <LoadingButton loading={paymentTypeLoading} />\n              ) : (\n                <div style={{ flex: 1 }}>\n                  <Autocomplete\n                    label={{\n                      title: \" \",\n                      style: {\n                        width: \"0px\",\n                        display: \"none\",\n                      },\n                    }}\n                    input={{\n                      id: \"auto-solo-collection\",\n                      style: {\n                        width: \"100%\",\n                        flex: 1,\n                      },\n                    }}\n                    width={\"100%\"}\n                    DisplayMember={\"Description\"}\n                    DataSource={transactionDesc?.data.transactionDesc}\n                    disableInput={disableFields}\n                    inputRef={transactionRef}\n                    onChange={(selected: any, e: any) => {\n                      console.log(selected);\n                      if (transactionRef.current)\n                        transactionRef.current.value = selected.Description;\n\n                      accCodeRef.current = selected.Acct_Code;\n                      accTitleRef.current = selected.Acct_Title;\n                      accTCRef.current = selected.Code;\n                    }}\n                    onKeydown={(e: any) => {\n                      if (e.key === \"Enter\" || e.key === \"NumpadEnter\") {\n                        e.preventDefault();\n                        amountCreditRef.current?.focus();\n                      }\n                    }}\n                  />\n                </div>\n              )}\n              <button\n                className=\"custom-btn ripple-button\"\n                style={{\n                  background: \"#1b5e20\",\n                  padding: \"0 5px\",\n                  borderRadius: \"0px\",\n                  color: \"white\",\n                  height: \"22px\",\n                }}\n                onClick={() => {\n                  wait(100).then(() => {\n                    if (transactionRef.current) {\n                      transactionRef.current.value = \"\";\n                    }\n                    if (amountCreditRef.current) {\n                      amountCreditRef.current.value = \"0.00\";\n                    }\n                    if (faoRef.current) {\n                      faoRef.current.value = \"\";\n                    }\n                    if (remarksRef.current) {\n                      remarksRef.current.value = \"\";\n                    }\n                    if (vatTypeRef.current) {\n                      vatTypeRef.current.value = \"Non-VAT\";\n                    }\n                    if (invoiceRef.current) {\n                      invoiceRef.current.value = \"\";\n                    }\n                    accCodeRef.current = \"\";\n                    accTitleRef.current = \"\";\n                    accTCRef.current = \"\";\n                    foaIDNoRef.current = \"\";\n                    transactionRef.current?.focus();\n                    creditTable.current.resetCheckBox()\n                    creditTable.current.setSelectedRow(null);\n                  });\n                }}\n              >\n                <AddIcon sx={{ fontSize: \"22px\" }} />\n              </button>\n            </div>\n            <div\n              style={{\n                display: \"flex\",\n                alignItems: \"center\",\n                columnGap: \"15px\",\n                width: \"100%\",\n                flex: 1,\n              }}\n            >\n              <TextFormatedInput\n                containerStyle={{\n                  flex: 1,\n                }}\n                label={{\n                  title: \"Amount : \",\n                  style: {\n                    fontSize: \"12px\",\n                    fontWeight: \"bold\",\n                    width: \"70px\",\n                  },\n                }}\n                input={{\n                  disabled: disableFields,\n                  type: \"text\",\n                  style: { flex: 1, width: \"100%\" },\n                  onKeyDown: (e) => {\n                    if (e.code === \"NumpadEnter\" || e.code === \"Enter\") {\n                      faoRef.current?.focus();\n                    }\n                  },\n                }}\n                inputRef={amountCreditRef}\n              />\n\n              <button\n                className=\"custom-btn ripple-button\"\n                style={{\n                  background: \"#1b5e20\",\n                  padding: \"0 5px\",\n                  borderRadius: \"0px\",\n                  color: \"white\",\n                  height: \"22px\",\n                }}\n                onClick={() => {\n                  saveCredit();\n                }}\n              >\n                <ForwardIcon sx={{ fontSize: \"22px\" }} />\n              </button>\n            </div>\n\n            <TextInput\n              containerStyle={{\n                width: \"100%\",\n              }}\n              label={{\n                title: \"Usage : \",\n                style: {\n                  fontSize: \"12px\",\n                  fontWeight: \"bold\",\n                  width: \"70px\",\n                },\n              }}\n              input={{\n                disabled: disableFields,\n                type: \"text\",\n                style: { flex: 1 },\n                onKeyDown: (e) => {\n                  if (e.code === \"NumpadEnter\" || e.code === \"Enter\") {\n                    clientCreditOpenModal(e.currentTarget.value);\n                  }\n                },\n              }}\n              icon={<AccountBoxIcon sx={{ fontSize: \"18px\" }} />}\n              onIconClick={(e) => {\n                e.preventDefault();\n                if (faoRef.current) {\n                  clientCreditOpenModal(faoRef.current.value);\n                }\n              }}\n              inputRef={faoRef}\n            />\n\n            <TextAreaInput\n              label={{\n                title: \"Remarks : \",\n                style: {\n                  fontSize: \"12px\",\n                  fontWeight: \"bold\",\n                  width: \"70px\",\n                },\n              }}\n              textarea={{\n                disabled: disableFields,\n                rows: 3,\n                style: { flex: 1 },\n                onKeyDown: (e) => {\n                  e.stopPropagation();\n                  if (\n                    (e.code === \"NumpadEnter\" && !e.shiftKey) ||\n                    (e.code === \"Enter\" && !e.shiftKey)\n                  ) {\n                    vatTypeRef.current?.focus();\n                  }\n                },\n              }}\n              _inputRef={remarksRef}\n            />\n            <SelectInput\n              label={{\n                title: \"Vat Type : \",\n                style: {\n                  fontSize: \"12px\",\n                  fontWeight: \"bold\",\n                  width: \"70px\",\n                },\n              }}\n              selectRef={vatTypeRef}\n              select={{\n                disabled: disableFields,\n                style: { flex: 1, height: \"22px\" },\n                defaultValue: \"Non-VAT\",\n                onKeyDown: (e) => {\n                  if (e.code === \"NumpadEnter\" || e.code === \"Enter\") {\n                    e.preventDefault();\n                    invoiceRef.current?.focus();\n                  }\n                },\n              }}\n              datasource={[\n                { key: \"VAT\", value: \"VAT\" },\n                { key: \"Non-VAT\", value: \"Non-VAT\" },\n              ]}\n              values={\"value\"}\n              display={\"key\"}\n            />\n            <TextInput\n              label={{\n                title: \"Invoice : \",\n                style: {\n                  fontSize: \"12px\",\n                  fontWeight: \"bold\",\n                  width: \"70px\",\n                },\n              }}\n              input={{\n                disabled: disableFields,\n                type: \"text\",\n                style: { flex: 1 },\n                onKeyDown: (e) => {\n                  if (e.code === \"NumpadEnter\" || e.code === \"Enter\") {\n                    saveCredit();\n                  }\n                },\n              }}\n              inputRef={invoiceRef}\n            />\n          </div>\n        }\n        secondContent={\n          <div\n            style={{\n              position: \"relative\",\n              height: \"100%\",\n              width: \"100%\",\n              flex: 1,\n              display: \"flex\",\n              flexDirection: \"column\",\n            }}\n          >\n            <DataGridViewReact\n              ref={creditTable}\n              columns={creditColumn}\n              rows={[]}\n              containerStyle={{\n                height: \"auto\",\n                flex: 1,\n              }}\n              getSelectedItem={(rowItm: any) => {\n                if (rowItm) {\n                  wait(100).then(() => {\n                    if (transactionRef.current) {\n                      transactionRef.current.value = rowItm[0];\n                    }\n                    if (amountCreditRef.current) {\n                      amountCreditRef.current.value = rowItm[1];\n                    }\n                    if (faoRef.current) {\n                      faoRef.current.value = rowItm[2];\n                    }\n                    if (remarksRef.current) {\n                      remarksRef.current.value = rowItm[3];\n                    }\n                    if (vatTypeRef.current) {\n                      vatTypeRef.current.value = rowItm[4];\n                    }\n                    if (invoiceRef.current) {\n                      invoiceRef.current.value = rowItm[5];\n                    }\n                    accCodeRef.current = rowItm[6];\n                    accTitleRef.current = rowItm[7];\n                    accTCRef.current = rowItm[8];\n                    foaIDNoRef.current = rowItm[9];\n                  });\n                } else {\n                  wait(100).then(() => {\n                    if (transactionRef.current) {\n                      transactionRef.current.value = \"\";\n                    }\n                    if (amountCreditRef.current) {\n                      amountCreditRef.current.value = \"0.00\";\n                    }\n                    if (faoRef.current) {\n                      faoRef.current.value = \"\";\n                    }\n                    if (remarksRef.current) {\n                      remarksRef.current.value = \"\";\n                    }\n                    if (vatTypeRef.current) {\n                      vatTypeRef.current.value = \"Non-VAT\";\n                    }\n                    if (invoiceRef.current) {\n                      invoiceRef.current.value = \"\";\n                    }\n                    accCodeRef.current = \"\";\n                    accTitleRef.current = \"\";\n                    accTCRef.current = \"\";\n                    foaIDNoRef.current = \"\";\n                  });\n                }\n              }}\n              onKeyDown={(rowItm: any, rowIdx: any, e: any) => {\n                if (e.code === \"Delete\" || e.code === \"Backspace\") {\n                  const isConfim = window.confirm(\n                    `Are you sure you want to delete?`\n                  );\n                  if (isConfim) {\n                    const creditTableData = creditTable.current.getData();\n                    creditTableData.splice(rowIdx, 1);\n                    creditTable.current.setData(creditTableData);\n                    setTotalCredit(\n                      creditTableData.reduce(\n                        (sum: any, subArray: any) =>\n                          sum + parseFloat(subArray[1].replace(/,/g, \"\")),\n                        0\n                      )\n                    );\n                    return;\n                  }\n                }\n              }}\n            />\n            <div\n              style={{\n                fontSize: \"13px\",\n                textAlign: \"right\",\n                border: \"1px solid #d1cdcd\",\n                background: \"#dcdcdc\",\n                fontWeight: \"bold\",\n              }}\n            >\n              {totalCredit.toLocaleString(\"en-US\", {\n                minimumFractionDigits: 2,\n                maximumFractionDigits: 2,\n              })}\n            </div>\n          </div>\n        }\n        contentStyle={`\n          .custom-btn.not-disabled:hover{\n            background:#154f19 !important;\n          }\n            .custom-btn:focus{\n              outline:3px solid #2563eb;\n            }\n        `}\n      />\n    </div>\n  );\n}\n\nconst ContentContainer = ({\n  firstContent,\n  secondContent,\n  title,\n  contentStyle,\n}: any) => {\n  return (\n    <div\n      style={{\n        width: \"100%\",\n        height: \"38%\",\n        display: \"flex\",\n        padding: \"5px\",\n      }}\n    >\n      <style>{contentStyle}</style>\n      <div\n        style={{\n          flex: 1,\n          display: \"flex\",\n          width: \"100%\",\n          border: \"1px solid #64748b\",\n          position: \"relative\",\n        }}\n      >\n        <span\n          style={{\n            position: \"absolute\",\n            top: \"-15px\",\n            left: \"20px\",\n            background: \"#F1F1F1\",\n            padding: \"0 5px\",\n            fontSize: \"14px\",\n            fontWeight: \"bold\",\n          }}\n        >\n          {title}\n        </span>\n        <div\n          style={{\n            width: \"30%\",\n            height: \"100%\",\n            padding: \"10px 5px\",\n            boxSizing: \"border-box\",\n          }}\n        >\n          {firstContent}\n        </div>\n        <div\n          style={{\n            width: \"70%\",\n            height: \"100%\",\n            padding: \"10px 5px\",\n            boxSizing: \"border-box\",\n          }}\n        >\n          {secondContent}\n        </div>\n      </div>\n    </div>\n  );\n};\nconst ModalCheck = forwardRef(({ handleOnSave, handleOnClose }: any, ref) => {\n  const [showModal, setShowModal] = useState(false);\n  const [handleDelayClose, setHandleDelayClose] = useState(false);\n  const [blick, setBlick] = useState(false);\n\n  const checknoRef = useRef<HTMLInputElement>(null);\n  const bankRef = useRef<HTMLInputElement>(null);\n  const branchRef = useRef<HTMLInputElement>(null);\n  const remarksRef = useRef<HTMLTextAreaElement>(null);\n  const checkdateRef = useRef<HTMLInputElement>(null);\n  const amountRef = useRef<HTMLInputElement>(null);\n  const bankRefName = useRef(\"\");\n  const searchModalInputRef = useRef<HTMLInputElement>(null);\n\n  const closeDelay = () => {\n    setHandleDelayClose(true);\n    setTimeout(() => {\n      setShowModal(false);\n      setHandleDelayClose(false);\n      handleOnClose();\n    }, 100);\n  };\n  const closeDelayRef = useRef<any>(closeDelay);\n\n  useImperativeHandle(ref, () => ({\n    showModal: () => {\n      setShowModal(true);\n    },\n    clsoeModal: () => {\n      setShowModal(false);\n    },\n    getRefs: () => {\n      const refs = {\n        checknoRef,\n        bankRef,\n        branchRef,\n        remarksRef,\n        checkdateRef,\n        amountRef,\n        bankRefName,\n      };\n      return refs;\n    },\n    checknoRef,\n    bankRef,\n    branchRef,\n    remarksRef,\n    checkdateRef,\n    amountRef,\n    bankRefName,\n    searchModalInputRef,\n    closeDelay,\n  }));\n\n  const {\n    ModalComponent: ModalSearchBanks,\n    openModal: openModalSearchBanks,\n    closeModal: closeModalSearchBanks,\n    isLoading: isLoadingModalSearchbanks,\n  } = useQueryModalTable({\n    link: {\n      url: \"/task/accounting/search-pdc-banks\",\n      queryUrlName: \"searchPdcBanks\",\n    },\n    columns: [\n      { field: \"Bank_Code\", headerName: \"Code\", width: 130 },\n      { field: \"Bank\", headerName: \"Bank Name\", flex: 1 },\n    ],\n    queryKey: \"collection-banks\",\n    uniqueId: \"Bank_Code\",\n    responseDataKey: \"pdcBanks\",\n    onSelected: (selectedRowData, data) => {\n      wait(100).then(() => {\n        bankRefName.current = selectedRowData[0].Bank_Code;\n        if (bankRef.current) {\n          bankRef.current.value = selectedRowData[0].Bank;\n        }\n        branchRef.current?.focus();\n      });\n      closeModalSearchBanks();\n    },\n\n    searchRef: searchModalInputRef,\n  });\n\n  useEffect(() => {\n    window.addEventListener(\"keydown\", (e: any) => {\n      if (e.key === \"Escape\") {\n        closeDelayRef.current();\n      }\n    });\n  }, []);\n\n  return showModal ? (\n    <>\n      <div\n        style={{\n          position: \"fixed\",\n          top: 0,\n          bottom: 0,\n          left: 0,\n          right: 0,\n          background: \"transparent\",\n          zIndex: \"88\",\n        }}\n        onClick={() => {\n          setBlick(true);\n          setTimeout(() => {\n            setBlick(false);\n          }, 250);\n        }}\n      ></div>\n      <div\n        style={{\n          height: blick ? \"202px\" : \"200px\",\n          width: blick ? \"60.3%\" : \"60%\",\n          border: \"1px solid #64748b\",\n          position: \"absolute\",\n          left: \"50%\",\n          top: \"50%\",\n          transform: \"translate(-50%, -75%)\",\n          display: \"flex\",\n          flexDirection: \"column\",\n          zIndex: handleDelayClose ? -100 : 100,\n          opacity: handleDelayClose ? 0 : 1,\n          transition: \"all 150ms\",\n          boxShadow: \"3px 6px 32px -7px rgba(0,0,0,0.75)\",\n        }}\n      >\n        <div\n          style={{\n            height: \"22px\",\n            background: \"white\",\n            display: \"flex\",\n            justifyContent: \"space-between\",\n            padding: \"5px\",\n            position: \"relative\",\n            alignItems: \"center\",\n          }}\n        >\n          <span style={{ fontSize: \"13px\", fontWeight: \"bold\" }}>\n            Check Details\n          </span>\n          <button\n            className=\"btn-check-exit-modal\"\n            style={{\n              padding: \"0 5px\",\n              borderRadius: \"0px\",\n              background: \"white\",\n              color: \"black\",\n              height: \"22px\",\n              position: \"absolute\",\n              top: 0,\n              right: 0,\n            }}\n            onClick={() => {\n              closeDelay();\n            }}\n          >\n            <CloseIcon sx={{ fontSize: \"22px\" }} />\n          </button>\n        </div>\n        <div\n          style={{\n            flex: 1,\n            background: \"#F1F1F1\",\n            padding: \"5px\",\n            display: \"flex\",\n          }}\n        >\n          <div\n            style={{\n              width: \"55%\",\n              display: \"flex\",\n              flexDirection: \"column\",\n              rowGap: \"5px\",\n              padding: \"10px\",\n            }}\n          >\n            <TextInput\n              label={{\n                title: \"Check No. : \",\n                style: {\n                  fontSize: \"12px\",\n                  fontWeight: \"bold\",\n                  width: \"70px\",\n                },\n              }}\n              input={{\n                type: \"text\",\n                style: { width: \"160px\" },\n                onKeyDown: (e) => {\n                  if (e.code === \"NumpadEnter\" || e.code === \"Enter\") {\n                    bankRef.current?.focus();\n                  }\n                },\n              }}\n              inputRef={checknoRef}\n            />\n            {isLoadingModalSearchbanks ? (\n              <LoadingButton loading={isLoadingModalSearchbanks} />\n            ) : (\n              <TextInput\n                containerStyle={{\n                  width: \"370px\",\n                }}\n                label={{\n                  title: \"Bank : \",\n                  style: {\n                    fontSize: \"12px\",\n                    fontWeight: \"bold\",\n                    width: \"70px\",\n                  },\n                }}\n                input={{\n                  disabled: false,\n                  type: \"text\",\n                  style: { width: \"300px\" },\n                  onKeyDown: (e) => {\n                    if (e.code === \"NumpadEnter\" || e.code === \"Enter\") {\n                      openModalSearchBanks(e.currentTarget.value);\n                    }\n                  },\n                }}\n                icon={<AccountBoxIcon sx={{ fontSize: \"18px\" }} />}\n                onIconClick={(e) => {\n                  e.preventDefault();\n                  if (bankRef.current) {\n                    openModalSearchBanks(bankRef.current.value);\n                  }\n                }}\n                inputRef={bankRef}\n              />\n            )}\n            <TextInput\n              label={{\n                title: \"Branch : \",\n                style: {\n                  fontSize: \"12px\",\n                  fontWeight: \"bold\",\n                  width: \"70px\",\n                },\n              }}\n              input={{\n                type: \"text\",\n                style: { width: \"300px\" },\n                onKeyDown: (e) => {\n                  if (e.code === \"NumpadEnter\" || e.code === \"Enter\") {\n                    remarksRef.current?.focus();\n                  }\n                },\n              }}\n              inputRef={branchRef}\n            />\n            <TextAreaInput\n              label={{\n                title: \"Remarks : \",\n                style: {\n                  fontSize: \"12px\",\n                  fontWeight: \"bold\",\n                  width: \"70px\",\n                },\n              }}\n              textarea={{\n                rows: 4,\n                style: { width: \"300px\" },\n                onKeyDown: (e) => {\n                  e.stopPropagation();\n                  if (\n                    (e.code === \"NumpadEnter\" && !e.shiftKey) ||\n                    (e.code === \"Enter\" && !e.shiftKey)\n                  ) {\n                    checkdateRef.current?.focus();\n                  }\n                },\n              }}\n              _inputRef={remarksRef}\n            />\n          </div>\n          <div\n            style={{\n              width: \"45%\",\n              display: \"flex\",\n              flexDirection: \"column\",\n              rowGap: \"5px\",\n              position: \"relative\",\n              padding: \"10px\",\n              alignItems: \"flex-end\",\n            }}\n          >\n            <TextInput\n              label={{\n                title: \"Date : \",\n                style: {\n                  fontSize: \"12px\",\n                  fontWeight: \"bold\",\n                  width: \"70px\",\n                },\n              }}\n              input={{\n                type: \"date\",\n                style: { width: \"200px\" },\n                defaultValue: format(new Date(), \"yyyy-MM-dd\"),\n                onKeyDown: (e) => {\n                  if (e.code === \"NumpadEnter\" || e.code === \"Enter\") {\n                    amountRef.current?.focus();\n                  }\n                },\n              }}\n              inputRef={checkdateRef}\n            />\n            <TextFormatedInput\n              label={{\n                title: \"Amount : \",\n                style: {\n                  fontSize: \"12px\",\n                  fontWeight: \"bold\",\n                  width: \"70px\",\n                },\n              }}\n              input={{\n                type: \"text\",\n                style: { width: \"200px\" },\n                onKeyDown: (e) => {\n                  if (e.code === \"NumpadEnter\" || e.code === \"Enter\") {\n                    if (handleOnSave) {\n                      handleOnSave();\n                    }\n                  }\n                },\n              }}\n              inputRef={amountRef}\n            />\n            <div\n              style={{\n                display: \"flex\",\n                columnGap: \"10px\",\n                flex: 1,\n                justifyContent: \"flex-end\",\n                alignItems: \"flex-end\",\n              }}\n            >\n              <Button\n                variant=\"contained\"\n                color=\"success\"\n                style={{\n                  height: \"22px\",\n                  fontSize: \"12px\",\n                }}\n                onClick={(e) => {\n                  if (handleOnSave) {\n                    handleOnSave();\n                  }\n                }}\n              >\n                OK\n              </Button>\n              <Button\n                variant=\"contained\"\n                color=\"success\"\n                style={{\n                  height: \"22px\",\n                  fontSize: \"12px\",\n                }}\n                onClick={(e) => {\n                  closeDelay();\n                }}\n              >\n                Cancel\n              </Button>\n            </div>\n          </div>\n        </div>\n        {ModalSearchBanks}\n        <style>\n          {`\n              .btn-check-exit-modal:hover{\n                background:red !important;\n                color:white !important;\n              }\n            `}\n        </style>\n      </div>\n    </>\n  ) : null;\n});\n","import { useContext, useState } from \"react\";\nimport { useQuery } from \"react-query\";\nimport { AuthContext, User } from \"../components/AuthContext\";\nimport {\n  GridRowSelectionModel,\n  GridCellParams,\n  GridTreeNode,\n} from \"@mui/x-data-grid\";\nimport ModalWithTable from \"../components/ModalWithTable\";\nimport { flushSync } from \"react-dom\";\nimport { AxiosResponse, AxiosInstance } from \"axios\";\nimport { GridRowParams } from \"@mui/x-data-grid\";\ninterface QueryModalTableParamsType {\n  link?: {\n    url: string;\n    queryUrlName: string;\n  };\n  uniqueId: string;\n  queryKey: string;\n  responseDataKey: string;\n  columns: Array<any>;\n  onSelected?: (selectedRowData: Array<any>, data: Array<any>) => void;\n  onRemoveSelected?: (data: Array<any>) => void;\n  onSuccess?: (data: any) => void;\n  searchRef?: React.RefObject<HTMLInputElement>;\n  onCellKeyDown?: any;\n  onCloseFunction?: (search: any) => void;\n  CustomizeAxios?: (\n    myAxios: AxiosInstance,\n    user: User | null,\n    link: QueryModalTableParamsType[\"link\"],\n    search?: string\n  ) => Promise<AxiosResponse<any, any>>;\n  isRowSelectable?: ((params: GridRowParams<any>) => boolean) | undefined;\n  getCellClassName?:\n    | ((params: GridCellParams<any, any, any, GridTreeNode>) => string)\n    | undefined;\n}\n\nasync function CustomizeAxiosFunc(\n  myAxios: AxiosInstance,\n  user: User | null,\n  link: QueryModalTableParamsType[\"link\"],\n  search: string = \"\"\n) {\n  return myAxios.get(`${link?.url}?${link?.queryUrlName}=${search}`, {\n    headers: {\n      Authorization: `Bearer ${user?.accessToken}`,\n    },\n  });\n}\n\nconst useQueryModalTable = ({\n  link,\n  uniqueId,\n  queryKey,\n  responseDataKey,\n  columns,\n  onSelected = () => {},\n  onRemoveSelected = () => {},\n  onSuccess = () => {},\n  searchRef,\n  onCellKeyDown,\n  onCloseFunction = () => {},\n  CustomizeAxios = CustomizeAxiosFunc,\n  isRowSelectable,\n  getCellClassName,\n}: QueryModalTableParamsType) => {\n  const { myAxios, user } = useContext(AuthContext);\n  const [show, setShowModal] = useState(false);\n  const [rows, setRows] = useState<GridRowSelectionModel>([]);\n  async function customizeAxiostool(search: string = \"\") {\n    return await CustomizeAxios(myAxios, user, link, search);\n  }\n  const { isLoading, refetch } = useQuery({\n    queryKey: queryKey,\n    queryFn: async () => await customizeAxiostool(),\n    onSuccess: (res) => {\n      const response = res as any;\n      setRows(response.data[responseDataKey]);\n      onSuccess(response);\n    },\n    refetchOnWindowFocus: false,\n  });\n\n  const openModal = (search: string = \"\") => {\n    flushSync(() => {\n      setShowModal(true);\n    });\n    if (searchRef?.current) {\n      searchRef.current.value = search;\n      customizeAxiostool(search).then((res: any) => {\n        if (!res?.data.success) {\n          return alert(`Error : ${res?.data.message}`);\n        }\n        const response = res as any;\n        setRows(response.data[responseDataKey]);\n        if (searchRef?.current) searchRef.current.focus();\n      });\n    }\n  };\n\n  const closeModal = () => {\n    setShowModal(false);\n    if (onCloseFunction) {\n      onCloseFunction(searchRef?.current?.value);\n    }\n  };\n\n  const ModalComponent = (\n    <ModalWithTable\n      getCellClassName={getCellClassName}\n      searchRef={searchRef}\n      showModal={show}\n      onCloseModal={() => {\n        setShowModal(false);\n        if (onCloseFunction) {\n          onCloseFunction(searchRef?.current?.value);\n        }\n      }}\n      onClickCloseIcon={() => {\n        setShowModal(false);\n        if (onCloseFunction) {\n          onCloseFunction(searchRef?.current?.value);\n        }\n      }}\n      searchOnChange={(e) => {\n        // myAxios\n        //   .get(`${link.url}?${link.queryUrlName}=${e.target.value}`, {\n        //     headers: {\n        //       Authorization: `Bearer ${user?.accessToken}`,\n        //     },\n        //   })\n        //   .then((res: any) => {\n        //     if (!res?.data.success) {\n        //       return alert(`Error : ${res?.data.message}`);\n        //     }\n        //     const response = res as any;\n        //     setRows(response.data[responseDataKey]);\n        //   });\n      }}\n      onSearchKeyEnter={(value) => {\n        customizeAxiostool(value).then((res: any) => {\n          if (!res?.data.success) {\n            return alert(`Error : ${res?.data.message}`);\n          }\n          const response = res as any;\n          setRows(response.data[responseDataKey]);\n        });\n      }}\n      onCellKeyDown={onCellKeyDown}\n      height={300}\n      isLoading={isLoading}\n      queryKey={queryKey}\n      columns={columns}\n      onSelectionChange={(rowSelectionModel, data) => {\n        if (rowSelectionModel.length <= 0) {\n          return onRemoveSelected(data);\n        }\n        const selectedIDs = new Set(rowSelectionModel);\n        const selectedRowData = data.filter((row: any) => {\n          return selectedIDs.has(row[uniqueId].toString());\n        });\n        if (selectedRowData.length <= 0) return;\n        onSelected(selectedRowData, data);\n      }}\n      id={uniqueId}\n      rows={rows}\n      setRows={setRows}\n      isRowSelectable={isRowSelectable}\n    />\n  );\n\n  return {\n    show,\n    rows,\n    isLoading,\n    openModal,\n    closeModal,\n    ModalComponent,\n    refetch,\n  };\n};\n\nexport default useQueryModalTable;\n","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-7 3c1.93 0 3.5 1.57 3.5 3.5S13.93 13 12 13s-3.5-1.57-3.5-3.5S10.07 6 12 6zm7 13H5v-.23c0-.62.28-1.2.76-1.58C7.47 15.82 9.64 15 12 15s4.53.82 6.24 2.19c.48.38.76.97.76 1.58V19z\"\n}), 'AccountBox');\nexports.default = _default;","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\"\n}), 'Add');\nexports.default = _default;","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 8V4l8 8-8 8v-4H4V8z\"\n}), 'Forward');\nexports.default = _default;","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M7.41 8.59 12 13.17l4.59-4.58L18 10l-6 6-6-6 1.41-1.41z\"\n}), 'KeyboardArrowDown');\nexports.default = _default;","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19 8H5c-1.66 0-3 1.34-3 3v6h4v4h12v-4h4v-6c0-1.66-1.34-3-3-3zm-3 11H8v-5h8v5zm3-7c-.55 0-1-.45-1-1s.45-1 1-1 1 .45 1 1-.45 1-1 1zm-1-9H6v4h12V3z\"\n}), 'LocalPrintshop');\nexports.default = _default;","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)([/*#__PURE__*/(0, _jsxRuntime.jsx)(\"circle\", {\n  cx: \"10\",\n  cy: \"8\",\n  r: \"4\"\n}, \"0\"), /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M10.35 14.01C7.62 13.91 2 15.27 2 18v2h9.54c-2.47-2.76-1.23-5.89-1.19-5.99zm9.08 4.01c.36-.59.57-1.28.57-2.02 0-2.21-1.79-4-4-4s-4 1.79-4 4 1.79 4 4 4c.74 0 1.43-.22 2.02-.57L20.59 22 22 20.59l-2.57-2.57zM16 18c-1.1 0-2-.9-2-2s.9-2 2-2 2 .9 2 2-.9 2-2 2z\"\n}, \"1\")], 'PersonSearch');\nexports.default = _default;","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 5V2L8 6l4 4V7c3.31 0 6 2.69 6 6 0 2.97-2.17 5.43-5 5.91v2.02c3.95-.49 7-3.85 7-7.93 0-4.42-3.58-8-8-8zm-6 8c0-1.65.67-3.15 1.76-4.24L6.34 7.34C4.9 8.79 4 10.79 4 13c0 4.08 3.05 7.44 7 7.93v-2.02c-2.83-.48-5-2.94-5-5.91z\"\n}), 'RestartAlt');\nexports.default = _default;","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M17 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V7l-4-4zm-5 16c-1.66 0-3-1.34-3-3s1.34-3 3-3 3 1.34 3 3-1.34 3-3 3zm3-10H5V5h10v4z\"\n}), 'Save');\nexports.default = _default;","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z\"\n}), 'Search');\nexports.default = _default;"],"names":["style","position","top","left","transform","width","bgcolor","boxShadow","p","heigth","ModalWithTable","_ref","height","isLoading","columns","queryKey","onSelectionChange","rows","setRows","id","onCloseModal","showModal","onClickCloseIcon","searchOnChange","_ref$title","title","searchRef","_ref$onSearchKeyEnter","onCellKeyDown","onSearchKeyEnter","isRowSelectable","getCellClassName","mainId","generateRandomClass","_jsx","Modal","open","onClose","children","_jsxs","Box","sx","Typography","variant","component","mb","TextField","size","label","marginBottom","fullWidth","onChange","InputProps","inputRef","onKeyDown","e","_searchRef$current","code","preventDefault","current","value","keyBoardSelectionTable","className","concat","Table","isSingleSelection","isRowFreeze","dataSelection","selection","data","table_id","right","IconButton","color","onClick","CloseIcon","Math","floor","random","el","_rows$","document","querySelectorAll","classList","add","firstRowParent","querySelector","firstInput","focus","event","MouseEvent","bubbles","cancelable","view","window","dispatchEvent","addEventListener","es","key","remove","keyBoardUpDown","forEach","idx","_rows$idx","_rows","_rows$idx2","_rows2","length","TableContext","createContext","rowSelectionModel","footerChildren","footerPaginationPosition","showFooterSelectedCount","forwardRef","ref","_ref$CustomFooterComp","CustomFooterComponent","DefaultooterComponent","_ref$checkboxSelectio","checkboxSelection","_ref$footerChildren","_ref$footerPagination","_ref$showFooterSelect","_useState","useState","_useState2","_slicedToArray","selectedRows","setSelectedRows","useImperativeHandle","removeSelection","getSelectedRows","filter","item","includes","freezeArray","Provider","DataGrid","slots","loadingOverlay","LinearProgress","footer","initialState","pagination","paginationModel","pageSize","loading","getRowId","row","col","hide","showCellVerticalBorder","showColumnVerticalBorder","rowHeight","columnHeaderHeight","pageSizeOptions","_objectSpread","fill","background","padding","fontSize","display","fontWeight","onRowSelectionModelChange","selectionSet","Set","s","has","__","rowNode","_toConsumableArray","disableVirtualization","Pagination","_ref2","page","onPageChange","apiRef","useGridApiContext","pageCount","useGridSelector","gridPageCountSelector","MuiPagination","count","newPage","CustomPagination","props","GridPagination","ActionsComponent","_useContext","useContext","columnGap","justifyContent","px","alignItems","flexDirection","flex","debitColumn","type","creditColumn","queryKeyPaymentType","queryKeyNewORNumber","Collection","_getSelectedItem","_queryFn","_getSelectedItem2","_getSelectedItem3","_getSelectedItem4","_mutationFn","_queryFn2","_mutationFn2","_mutationFn3","_saveCashDebit","_saveCredit","debitTable","useRef","creditTable","modalCheckRef","paymentType","setPaymentType","_useState3","_useState4","totalDebit","setTotalDebit","_useState5","_useState6","totalCredit","setTotalCredit","_useState7","_useState8","collectionMode","setCollectionMode","ornoSubRef","ornoRef","dateRef","pnClientRef","clientNameRef","IDNo","paymentTypeRef","amountDebitRef","buttonCshSave","buttonCheckSave","buttonCheckList","transactionRef","amountCreditRef","faoRef","remarksRef","vatTypeRef","invoiceRef","foaIDNoRef","accCodeRef","accTitleRef","accTCRef","AuthContext","myAxios","user","executeQueryToClient","useExecuteQueryFromClient","disableFields","_useUpwardTableModalS","useUpwardTableModalSearch","column","query","search","getSelectedItem","_x","_x2","_x3","_x4","_asyncToGenerator","_regeneratorRuntime","mark","_callee","rowItm","_","rowIdx","dt","checkDetails","wrap","_context","prev","next","sent","wait","then","checknoRef","Check_No","bankRef","Bank","branchRef","Branch","Remarks","checkdateRef","Check_Date","amountRef","Check_Amnt","bankRefName","BName","saveCheckDebit","closeModal","_buttonCheckList$curr","stop","apply","arguments","UpwardTableModalSearch","openModal","_useQuery","useQuery","queryFn","_callee2","_context2","get","headers","Authorization","accessToken","abrupt","refetchOnWindowFocus","paymentTypeLoading","transactionDesc","_useUpwardTableModalS2","useUpwardTableModalSearchSafeMode","link","_x5","_x6","_x7","_x8","_callee3","_context3","_paymentTypeRef$curre","_rowItm$","console","log","clientCloseModal","ClientUpwardTableModalSearch","clientOpenModal","_useUpwardTableModalS3","_x9","_x10","_x11","_x12","_callee4","_context4","_remarksRef$current","_rowItm$2","clientCreditCloseModal","ClientCreditUpwardTableModalSearch","clientCreditOpenModal","_useUpwardTableModalS4","_x13","_x14","_x15","_x16","_callee5","_context5","resetCredit","resetDebit","mutateCollectionDataSearch","ORNo","searchCollectionCreditCloseModal","SearchCollectionUpwardTableModalSearch","searchCollectionCreditOpenModal","_useMutation","useMutation","mutationKey","mutationFn","_x17","_callee6","variables","_context6","onSuccess","res","dataCollection","collection","Date_OR","ID_No","Short","debit","credit","i","Payment","toString","isCash","push","Amount","Debit","format","Date","Bank_Branch","Acct_Code","DRCode","Acct_Title","DRTitle","Deposit_Slip","SlipCode","Cntr","DRRemarks","TC","Bank_Code","BankName","Purpose","temp_id","transaction","amount","Credit","CRRemarks","Code","CRCode","Title","CRTitle","Account_No","CRLoanID","Name","CRLoanName","VATType","CRVATType","invoiceNo","CRInvoiceNo","setDataFormated","reduce","sum","subArray","parseFloat","replace","loadingCollectionDataSearch","mutate","_useQuery2","_callee7","_context7","response","_response$data","_response$data2","collectionID","NewORNoLoading","refetchNewOR","refetch","_useMutation2","_x18","_callee8","_context8","mode","post","success","resetCollection","Swal","icon","message","showConfirmButton","timer","loadingAddNew","_useMutation3","_x19","_callee9","_context9","data1","flushSync","localStorage","removeItem","setItem","JSON","stringify","department","printOR","mutataPrint","isLoadingPrint","_debitTable$current","_creditTable$current","_pnClientRef$current","setData","refs","autoClose","undefined","_callee11","_refs$amountRef$curre","_refs$checknoRef$curr","_refs$checkdateRef$cu","_refs$branchRef$curre","_refs$remarksRef$curr","_refs$bankRef$current","checkno","checkdate","branch","remarks","bank","getSelectedRow","debitTableData","_dd$data3","_dd$data4","dd","_debitTableData","newDataFormatted","newDataTable","_context11","checkNoIsExist","alert","getData","toLocaleString","minimumFractionDigits","maximumFractionDigits","setSelectedRow","resetCheckBox","map","itm","closeDelay","saveCredit","_callee12","_dd$data$data","_faoRef$current","_transactionRef$curre","_amountCreditRef$curr","_faoRef$current2","_remarksRef$current2","_vatTypeRef$current","_invoiceRef$current","creditTableData","_transactionRef$curre2","_amountCreditRef$curr2","_faoRef$current3","_remarksRef$current3","_vatTypeRef$current2","_invoiceRef$current2","_creditTableData","newCreditTableData","_dd","taxableamt","inputtax","_faoRef$current4","_remarksRef$current4","_invoiceRef$current3","_dd$data5","_dd$data6","_TC$data","newData","_faoRef$current5","_remarksRef$current5","_invoiceRef$current4","_dd$data7","_dd$data8","_TC$data2","_newData","_context12","isNaN","splice","_modalCheckRef$curren","setFocus","_amountDebitRef$curre3","_transactionRef$curre3","PageHelmet","ModalCheck","handleOnSave","getRefs","handleOnClose","_buttonCheckSave$curr","Loading","TextInput","containerStyle","input","currentTarget","SearchIcon","onIconClick","AddIcon","disabled","_ornoRef$current","_dateRef$current","_pnClientRef$current3","_clientNameRef$curren","_pnClientRef$current2","_paymentTypeRef$curre2","_transactionRef$curre4","obj","toFixed","creditTableDataFormatted","debitTableDataFormatted","state","PNo","codeCondfirmationAlert","isUpdate","cb","userCodeConfirmation","saveCondfirmationAlert","isConfirm","SaveIcon","LocalPrintshopIcon","text","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","result","isConfirmed","border","rowGap","LoadingButton","readOnly","RestartAltIcon","defaultValue","_pnClientRef$current4","AccountBoxIcon","ContentContainer","firstContent","marginTop","SelectInput","selectRef","select","_amountDebitRef$curre4","target","_buttonCheckSave$curr2","datasource","values","borderRadius","_modalCheckRef$curren2","_modalCheckRef$curren3","_modalCheckRef$curren4","TextFormatedInput","_buttonCshSave$curren","click","_x20","_x21","_callee10","_amountDebitRef$curre","_dd$data","_dd$data2","_amountDebitRef$curre2","_context10","saveCashDebit","ForwardIcon","Button","startIcon","secondContent","DataGridViewReact","_modalCheckRef$curren5","_buttonCheckSave$curr3","_buttonCheckSave$curr4","strBank","split","confirm","textAlign","contentStyle","htmlFor","Autocomplete","DisplayMember","DataSource","disableInput","selected","Description","onKeydown","_amountCreditRef$curr3","_transactionRef$curre5","_faoRef$current6","TextAreaInput","textarea","_vatTypeRef$current3","stopPropagation","shiftKey","_inputRef","_invoiceRef$current5","boxSizing","_ref3","_useState9","_useState10","setShowModal","_useState11","_useState12","handleDelayClose","setHandleDelayClose","_useState13","_useState14","blick","setBlick","searchModalInputRef","setTimeout","closeDelayRef","clsoeModal","_useQueryModalTable","useQueryModalTable","url","queryUrlName","field","headerName","uniqueId","responseDataKey","onSelected","selectedRowData","_branchRef$current","closeModalSearchBanks","ModalSearchBanks","ModalComponent","openModalSearchBanks","isLoadingModalSearchbanks","useEffect","_Fragment","bottom","zIndex","opacity","transition","_bankRef$current","_remarksRef$current6","_checkdateRef$current","_amountRef$current","CustomizeAxiosFunc","_CustomizeAxiosFunc","_args","_customizeAxiostool","_ref$onSelected","_ref$onRemoveSelected","onRemoveSelected","_ref$onSuccess","_ref$onCloseFunction","onCloseFunction","_ref$CustomizeAxios","CustomizeAxios","show","customizeAxiostool","_args2","_searchRef$current2","_searchRef$current3","selectedIDs","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d","cx","cy","r"],"sourceRoot":""}