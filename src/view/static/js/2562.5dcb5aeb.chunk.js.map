{"version":3,"file":"static/js/2562.5dcb5aeb.chunk.js","mappings":"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","sources":["components/DatePicker.tsx","components/ModalWithTable.tsx","components/NumberFormat.tsx","components/Table.tsx","feautures/Admin/Task/Claims/Claims.tsx","hooks/useQueryModalTable.tsx","lib/confirmationAlert.ts"],"sourcesContent":["import { LocalizationProvider } from \"@mui/x-date-pickers/LocalizationProvider\";\nimport { AdapterDateFns } from \"@mui/x-date-pickers/AdapterDateFns\";\nimport { DatePicker } from \"@mui/x-date-pickers\";\nexport default function CustomDatePicker({\n  label,\n  name,\n  onChange,\n  value,\n  onKeyDown,\n  inputRef,\n  datePickerRef,\n  fullWidth,\n  textField,\n  minWidth = \"200px\",\n  ...rest\n}: any) {\n  return (\n    <LocalizationProvider dateAdapter={AdapterDateFns}>\n      <DatePicker\n      floatingLabelStyle={{color: \"black\" }}\n        value={value}\n        onChange={onChange}\n        ref={datePickerRef}\n        slotProps={{\n          textField: {\n            size: \"small\",\n            label,\n            name,\n            onKeyDown,\n            inputRef: inputRef,\n            fullWidth,\n\n            ...textField,\n          },\n        }}\n        InputLabelProps={{\n          sx: {\n            color: \"black\",\n          },\n        }}\n        sx={{\n          minWidth,\n          fieldset: { borderColor: \"black\" },\n          \".MuiFormLabel-root\": { fontSize: \"14px\" },\n          \".MuiFormLabel-root[data-shrink=false]\": {\n            top: \"-5px\",\n          },\n        }}\n        {...rest}\n      />\n    </LocalizationProvider>\n  );\n}\n","import React from \"react\";\nimport {\n  GridRowSelectionModel,\n  GridRowParams,\n  GridCellParams,\n  GridTreeNode,\n} from \"@mui/x-data-grid\";\nimport { Modal, Box, Typography, IconButton, TextField } from \"@mui/material\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport Table from \"./Table\";\n\ninterface ModalWithTableParams {\n  height: number;\n  isLoading: boolean;\n  queryKey: string;\n  columns: Array<any>;\n  onSelectionChange: (rowSelectionModel: Array<any>, data: Array<any>) => void;\n  setRows: React.Dispatch<React.SetStateAction<GridRowSelectionModel>>;\n  rows: GridRowSelectionModel;\n  id: string;\n  onCloseModal: () => void;\n  onClickCloseIcon: () => void;\n  showModal: boolean;\n  searchOnChange:\n  | React.ChangeEventHandler<HTMLInputElement | HTMLTextAreaElement>\n  | undefined;\n  title?: string;\n  searchRef?: React.RefObject<HTMLInputElement>;\n  onCellKeyDown?: any;\n  onSearchKeyEnter?: (search: string) => void;\n  isRowSelectable?: ((params: GridRowParams<any>) => boolean) | undefined;\n  getCellClassName?:\n  | ((params: GridCellParams<any, any, any, GridTreeNode>) => string)\n  | undefined;\n}\n\nconst style = {\n  position: \"absolute\" as \"absolute\",\n  top: \"50%\",\n  left: \"50%\",\n  transform: \"translate(-50%, -50%)\",\n  width: \"80%\",\n  bgcolor: \"background.paper\",\n  boxShadow: 24,\n  p: 4,\n  heigth: \"auto\",\n};\n\nexport default function ModalWithTable({\n  height,\n  isLoading,\n  queryKey,\n  columns,\n  onSelectionChange,\n  setRows,\n  rows,\n  id,\n  onCloseModal,\n  showModal,\n  onClickCloseIcon,\n  searchOnChange,\n  title = \"\",\n  searchRef,\n  onCellKeyDown,\n  onSearchKeyEnter = () => { },\n  isRowSelectable,\n  getCellClassName,\n}: ModalWithTableParams) {\n  const mainId = generateRandomClass();\n\n  return (\n    <Modal\n      open={showModal}\n      onClose={onCloseModal}\n      aria-labelledby=\"modal-modal-title\"\n      aria-describedby=\"modal-modal-description\"\n    >\n      <Box sx={style}>\n        <Typography id=\"modal-modal-title\" variant=\"h6\" component=\"h2\" mb={2}>\n          {title}\n        </Typography>\n        <TextField\n          size=\"small\"\n          label=\"Search\"\n          sx={{ marginBottom: \"10px\" }}\n          fullWidth\n          onChange={searchOnChange}\n          InputProps={{\n            inputRef: searchRef,\n          }}\n          onKeyDown={(e) => {\n            if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n              e.preventDefault();\n              onSearchKeyEnter(searchRef?.current?.value as string);\n            }\n            keyBoardSelectionTable(\n              e,\n              mainId,\n              searchRef?.current as HTMLInputElement\n            );\n          }}\n        />\n        <div\n          className={`${mainId} main-table-selection-container`}\n          style={{ position: \"relative\", height: `${height + 20}px` }}\n        >\n          <Table\n            isSingleSelection={true}\n            isRowFreeze={false}\n            columns={columns}\n            isLoading={isLoading}\n            dataSelection={(selection, data, code) => {\n              onSelectionChange(selection, data);\n            }}\n            table_id={id}\n            rows={rows}\n            isRowSelectable={isRowSelectable}\n            getCellClassName={getCellClassName}\n          />\n        </div>\n\n        <div style={{ position: \"absolute\", top: \"10px\", right: \"10px\" }}>\n          <IconButton\n            aria-label=\"search-client\"\n            color=\"secondary\"\n            onClick={onClickCloseIcon}\n          >\n            <CloseIcon />\n          </IconButton>\n        </div>\n      </Box>\n    </Modal>\n  );\n}\n\nexport function generateRandomClass() {\n  const randomNumber = Math.floor(Math.random() * 10000);\n  const randomClass = \"main-\" + randomNumber;\n  return randomClass;\n}\n\nfunction keyBoardUpDown(className: string, el: HTMLElement) {\n  const firstRowParent = document.querySelector(\n    `.${className} .MuiDataGrid-row`\n  );\n  const firstInput = firstRowParent?.querySelector(\"input\");\n  firstInput?.focus();\n  const event = new MouseEvent(\"mouseenter\", {\n    bubbles: true,\n    cancelable: true,\n    view: window,\n  });\n  firstRowParent?.dispatchEvent(event);\n  firstInput?.addEventListener(\"keydown\", (es: any) => {\n    if (es.key === \"ArrowUp\") {\n      es.preventDefault();\n      el.focus();\n    }\n    if (es.key === \"ArrowUp\") {\n      firstRowParent?.classList.remove(\"hover-keyboard\");\n    }\n  });\n}\n\nexport function keyBoardSelectionTable(\n  e: React.KeyboardEvent<HTMLDivElement>,\n  className: string,\n  el: HTMLElement\n) {\n  const mainId = className;\n  if (e.code === \"ArrowDown\") {\n    const rows = document.querySelectorAll(`.${mainId} .MuiDataGrid-row`);\n    e.preventDefault();\n    rows[0]?.classList.add(\"hover-keyboard\");\n    keyBoardUpDown(className, el);\n    rows.forEach((el, idx) => {\n      el.addEventListener(\"keydown\", (es: any) => {\n        if (es.key === \"ArrowUp\") {\n          if (idx <= 0) {\n            return;\n          }\n\n          es.preventDefault();\n          rows[idx]?.classList.remove(\"hover-keyboard\");\n          rows[idx - 1]?.classList.add(\"hover-keyboard\");\n          return;\n        }\n        if (es.key === \"ArrowDown\") {\n          es.preventDefault();\n          if (idx >= rows.length - 1) {\n            return;\n          }\n          rows[idx]?.classList.remove(\"hover-keyboard\");\n          rows[idx + 1]?.classList.add(\"hover-keyboard\");\n        }\n      });\n    });\n  }\n}\n","import React from \"react\";\nimport { NumericFormat, NumericFormatProps } from \"react-number-format\";\n\ninterface CustomProps {\n  onChange: (event: { target: { name: string; value: string } }) => void;\n  name: string;\n}\n\nexport const NumericFormatCustom = React.forwardRef<\n  NumericFormatProps,\n  CustomProps\n>(function NumericFormatCustom(props, ref) {\n  const { onChange, ...other } = props;\n\n  return (\n    <NumericFormat\n      {...other}\n      getInputRef={ref}\n      onValueChange={(values) => {\n        onChange({\n          target: {\n            name: props.name,\n            value: values.value,\n          },\n        });\n      }}\n      allowNegative={false}\n      thousandSeparator\n      valueIsNumericString\n      //   prefix=\"$\"\n    />\n  );\n});\n","import {\n  useState,\n  useContext,\n  createContext,\n  ReactElement,\n  forwardRef,\n  useImperativeHandle,\n} from \"react\";\nimport { Box, LinearProgress } from \"@mui/material\";\nimport {\n  DataGrid,\n  GridSlotsComponentsProps,\n  gridPageCountSelector,\n  GridPagination,\n  useGridApiContext,\n  useGridSelector,\n  GridRowSelectionModel,\n  GridColDef,\n  GridRowParams,\n  GridCellParams,\n  GridTreeNode,\n} from \"@mui/x-data-grid\";\nimport { TablePaginationProps } from \"@mui/material/TablePagination\";\nimport MuiPagination from \"@mui/material/Pagination\";\n\ninterface TableProps {\n  isLoading: boolean;\n  columns: Array<any>;\n  rows: Array<any>;\n  table_id: string;\n  isSingleSelection: boolean;\n  isRowFreeze: boolean;\n  dataSelection?: (selection: any, data: any, code: string | null) => void;\n  CustomFooterComponent?: any;\n  isRowSelectable?: ((params: GridRowParams<any>) => boolean) | undefined;\n  getCellClassName?:\n    | ((params: GridCellParams<any, any, any, GridTreeNode>) => string)\n    | undefined;\n  footerChildren?: (\n    rowSelectionModel: GridRowSelectionModel,\n    rows: Array<any>\n  ) => ReactElement;\n  footerPaginationPosition?: string;\n  showFooterSelectedCount?: boolean;\n  checkboxSelection?: boolean | undefined;\n}\n\nconst TableContext = createContext<{\n  rowSelectionModel: GridRowSelectionModel;\n  rows: Array<any>;\n  footerPaginationPosition?: string;\n  showFooterSelectedCount?: boolean;\n  footerChildren: (\n    rowSelectionModel: GridRowSelectionModel,\n    rows: Array<any>\n  ) => ReactElement;\n}>({\n  rows: [],\n  rowSelectionModel: [],\n  footerChildren: () => <div></div>,\n  footerPaginationPosition: \"right-left\",\n  showFooterSelectedCount: true,\n});\nconst Table = forwardRef(\n  (\n    {\n      isLoading,\n      columns,\n      rows,\n      table_id,\n      isSingleSelection,\n      isRowFreeze,\n      dataSelection,\n      CustomFooterComponent = DefaultooterComponent,\n      isRowSelectable,\n      getCellClassName,\n      checkboxSelection = true,\n      footerChildren = (\n        rowSelectionModel: GridRowSelectionModel,\n        rows: Array<any>\n      ) => <div></div>,\n      footerPaginationPosition = \"right-left\",\n      showFooterSelectedCount = true,\n    }: TableProps,\n    ref\n  ) => {\n    const [selectedRows, setSelectedRows] = useState<any>([]);\n\n    useImperativeHandle(ref, () => ({\n      removeSelection: () => {\n        setSelectedRows([]);\n      },\n      getSelectedRows: () => {\n        return rows.filter((item: any) =>\n          selectedRows?.includes(item[table_id])\n        );\n      },\n      setSelectedRows: (data: Array<any>) => {\n        setSelectedRows(data);\n      },\n    }));\n\n    function onSelectionChange(selection: any, data: any, code: string | null) {\n      if (dataSelection) {\n        dataSelection(selection, data, code);\n      }\n    }\n    let freezeArray: Array<any> = [];\n\n    return (\n      <TableContext.Provider\n        value={{\n          showFooterSelectedCount,\n          footerPaginationPosition,\n          rowSelectionModel: selectedRows,\n          rows,\n          footerChildren,\n        }}\n      >\n        <DataGrid\n          slots={{\n            loadingOverlay: LinearProgress,\n            footer: CustomFooterComponent,\n          }}\n          initialState={{\n            pagination: { paginationModel: { pageSize: 100 } },\n          }}\n          loading={isLoading}\n          getRowId={(row) => row[table_id]}\n          columns={columns.filter((col: any) => !col.hide) as GridColDef<any>[]}\n          rows={rows}\n          showCellVerticalBorder={true}\n          showColumnVerticalBorder={true}\n          checkboxSelection={checkboxSelection}\n          rowSelectionModel={selectedRows}\n          rowHeight={25}\n          columnHeaderHeight={35}\n          pageSizeOptions={[10, 20, 35, 50, 75, 100]}\n          sx={{\n            \"& .cash\": {\n              color: \"#ec4899\",\n            },\n            \"& .check\": {\n              color: \"#0891b2\",\n            },\n            \"& .approved\": {\n              color: \"green\",\n            },\n            \"& .pending\": {\n              color: \"orange\",\n            },\n            \"& .disapproved\": {\n              color: \"red\",\n            },\n            \"& .normal\": {\n              color: \"red\",\n            },\n            \"& .MuiDataGrid-row.Mui-selected:hover\": {\n              color: \"black\",\n              \"& .MuiSvgIcon-root \": {\n                fill: \"#3b82f6\",\n              },\n            },\n            \"& .hover-keyboard\": {\n              background: \"#2563eb\",\n              color: \"white\",\n              \"& .MuiSvgIcon-root \": {\n                fill: \"white\",\n              },\n            },\n            \"& .MuiDataGrid-row:hover\": {\n              background: \"#2563eb\",\n              color: \"white\",\n              \"& .MuiSvgIcon-root \": {\n                fill: \"white\",\n              },\n            },\n            \"& .MuiDataGrid-row.hover\": {\n              background: \"#2563eb\",\n              color: \"white\",\n              \"& .MuiSvgIcon-root \": {\n                fill: \"white\",\n              },\n            },\n            \"& .MuiTablePagination-root p \": {\n              padding: \"0 !important\",\n            },\n\n            ...{\n              \"& .MuiDataGrid-columnHeaders\": {\n                background: \"#64748b\",\n                color: \"white\",\n                fontSize: \"14px\",\n                // borderBottomColor: \"#38bdf8\",\n              },\n              \"& .MuiDataGrid-columnHeaderCheckbox .MuiDataGrid-columnHeaderTitleContainer .MuiSvgIcon-root \":\n                {\n                  display: isSingleSelection || isRowFreeze ? \"none\" : \"block\",\n                  fill: \"white\",\n                },\n              \"& .MuiDataGrid-columnHeaderCheckbox .MuiDataGrid-columnHeaderTitleContainer input \":\n                {\n                  display: isSingleSelection || isRowFreeze ? \"none\" : \"block\",\n                },\n            },\n            ...{\n              fontSize: 13,\n              fontWeight: 500,\n              \"& .MuiDataGrid-checkboxInput\": {\n                height: \"27px\",\n                width: \"27px\",\n              },\n              \"& .MuiDataGrid-checkboxInput svg\": {\n                height: \"20px\",\n                width: \"20px\",\n              },\n            },\n          }}\n          // onRowDoubleClick={(e, r) => {\n          //   console.log(e, r);\n          // }}\n\n          onRowSelectionModelChange={(selection) => {\n            if (isRowFreeze) {\n              if (selection.length <= 0) return;\n              freezeArray = selection;\n              if (selectedRows.includes(freezeArray[freezeArray.length - 1]))\n                return;\n\n              setSelectedRows(selection);\n\n              onSelectionChange([selection[selection.length - 1]], rows, null);\n              return;\n            }\n\n            if (!isRowFreeze && isSingleSelection) {\n              if (selectedRows && selectedRows?.length > 0) {\n                const selectionSet = new Set(selectedRows);\n                setSelectedRows(\n                  selection.filter((s: any) => !selectionSet.has(s))\n                );\n              } else {\n                setSelectedRows(selection);\n              }\n            } else {\n              setSelectedRows(selection);\n            }\n\n            onSelectionChange([selection[selection.length - 1]], rows, null);\n          }}\n          onCellKeyDown={(__: any, key: any) => {\n            const keyFinding = [\"NumpadEnter\", \"Enter\", \"Delete\", \"Backspace\"];\n            if (!keyFinding.includes(key.code)) {\n              return;\n            }\n            key.preventDefault();\n            if (key.code === \"Enter\" || key.code === \"NumpadEnter\") {\n              if (isSingleSelection && !isRowFreeze) {\n                return setSelectedRows((data: any) => {\n                  if (data && data.length > 0 && data[0] === __.rowNode.id) {\n                    onSelectionChange([], rows, key.code);\n                    return [];\n                  }\n                  onSelectionChange([__.rowNode.id], rows, key.code);\n                  return [__.rowNode.id];\n                });\n              } else {\n                setSelectedRows((data: any) => {\n                  if (\n                    data &&\n                    !isRowFreeze &&\n                    data.length > 0 &&\n                    data.includes(__.rowNode.id)\n                  ) {\n                    data = data.filter((item: any) => item !== __.rowNode.id);\n                    onSelectionChange([], rows, key.code);\n                    return data;\n                  }\n                  if (\n                    data &&\n                    isRowFreeze &&\n                    data.length > 0 &&\n                    data.includes(__.rowNode.id)\n                  ) {\n                    return data;\n                  }\n                  onSelectionChange([__.rowNode.id], rows, key.code);\n                  return [...data, __.rowNode.id];\n                });\n              }\n              return;\n            }\n            if (key.code === \"Delete\" || key.code === \"Backspace\") {\n              setSelectedRows([__.rowNode.id]);\n              return onSelectionChange([__.rowNode.id], rows, key.code);\n            }\n          }}\n          disableVirtualization\n          isRowSelectable={isRowSelectable}\n          getCellClassName={getCellClassName}\n        />\n      </TableContext.Provider>\n    );\n  }\n);\n\nexport default Table;\nfunction Pagination({\n  page,\n  onPageChange,\n  className,\n}: Pick<TablePaginationProps, \"page\" | \"onPageChange\" | \"className\">) {\n  const apiRef = useGridApiContext();\n  const pageCount = useGridSelector(apiRef, gridPageCountSelector);\n\n  return (\n    <MuiPagination\n      variant=\"outlined\"\n      color=\"primary\"\n      className={className}\n      count={pageCount}\n      page={page + 1}\n      onChange={(event, newPage) => {\n        onPageChange(event as any, newPage - 1);\n      }}\n    />\n  );\n}\n\nfunction CustomPagination(props: any) {\n  return <GridPagination ActionsComponent={Pagination} {...props} />;\n}\nfunction DefaultooterComponent(\n  props: NonNullable<GridSlotsComponentsProps[\"footer\"]>\n) {\n  const {\n    rowSelectionModel,\n    showFooterSelectedCount,\n    footerPaginationPosition,\n    footerChildren,\n    rows,\n  } = useContext(TableContext);\n  return (\n    <Box\n      sx={{\n        columnGap: \"50px\",\n        display: \"flex\",\n        width: \"100%\",\n        justifyContent: \"space-between\",\n        px: 3,\n        alignItems: \"center\",\n        flexDirection:\n          footerPaginationPosition === \"right-left\" ? \"row-reverse\" : \"row\",\n      }}\n    >\n      <CustomPagination {...props} />\n      <Box\n        sx={{\n          display: \"flex\",\n          justifyContent:\n            footerPaginationPosition === \"right-left\"\n              ? \"flex-start\"\n              : \"flex-end\",\n          flex: 1,\n          alignItems: \"center\",\n        }}\n      >\n        {showFooterSelectedCount && (\n          <div>Selected:{rowSelectionModel?.length}</div>\n        )}\n        <div>{footerChildren(rowSelectionModel, rows)}</div>\n      </Box>\n    </Box>\n  );\n}\n","import React, {\n  useContext,\n  useId,\n  useReducer,\n  useRef,\n  useState,\n  useEffect,\n  useImperativeHandle,\n  forwardRef,\n} from \"react\";\nimport useQueryModalTable from \"../../../../hooks/useQueryModalTable\";\nimport {\n  Button,\n  FormControl,\n  IconButton,\n  InputAdornment,\n  InputLabel,\n  MenuItem,\n  OutlinedInput,\n  Select,\n  TextField,\n  Menu,\n  Stack,\n} from \"@mui/material\";\nimport LoadingButton from \"@mui/lab/LoadingButton\";\nimport PersonSearchIcon from \"@mui/icons-material/PersonSearch\";\nimport { AuthContext } from \"../../../../components/AuthContext\";\nimport CloudDownloadIcon from \"@mui/icons-material/CloudDownload\";\nimport RemoveRedEyeIcon from \"@mui/icons-material/RemoveRedEye\";\nimport HighlightOffIcon from \"@mui/icons-material/HighlightOff\";\nimport CloudUploadIcon from \"@mui/icons-material/CloudUpload\";\nimport CustomDatePicker from \"../../../../components/DatePicker\";\nimport { useMutation, useQuery } from \"react-query\";\nimport RestartAltIcon from \"@mui/icons-material/RestartAlt\";\nimport Swal from \"sweetalert2\";\nimport { flushSync } from \"react-dom\";\nimport { codeCondfirmationAlert } from \"../../../../lib/confirmationAlert\";\nimport ReactDOMServer from \"react-dom/server\";\nimport format from \"date-fns/format\";\nimport \"../../../../style/claim.css\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\nimport VisibilityIcon from \"@mui/icons-material/Visibility\";\nimport { grey } from \"@mui/material/colors\";\nimport { NumericFormatCustom } from \"../../../../components/NumberFormat\";\nimport ArticleIcon from \"@mui/icons-material/Article\";\n\nconst initialClaimState = {\n  claims_id: \"\",\n  dateReported: null,\n  dateAccident: null,\n  dateInspected: null,\n  department: 1,\n  remarks: \"\",\n  search: \"\",\n  mode: \"\",\n  claim_no: \"\",\n};\nconst initialPolicyState = {\n  policy: \"\",\n  claim_type: 0,\n  insurance: \"\",\n  PolicyNo: \"\",\n  PlateNo: \"\",\n  Model: \"\",\n  BodyType: \"\",\n  Make: \"\",\n  ChassisNo: \"\",\n  MotorNo: \"\",\n  ORNo: \"\",\n  CoverNo: \"\",\n  BLTFileNo: \"\",\n  AssuredName: \"\",\n  IDNo: \"\",\n  totaDue: \"00.00\",\n  totalpaid: \"00.00\",\n  balance: \"00.00\",\n  remitted: \"00.00\",\n  Account: \"\",\n  status: 0,\n  DateFrom: \"\",\n  DateTo: \"\",\n  DateReceived: null,\n  DateClaim: null,\n  AmountClaim: \"\",\n  AmountApproved: \"\",\n  NameTPPD: \"\",\n};\nconst claimType = [\n  \"OWN DAMAGE\",\n  \"CARNAP\",\n  \"VTPL-PROPERTY DAMAGE\",\n  \"VTPL-BODILY INJURY\",\n  \"THIRD PARTY-DEATH\",\n];\nconst basicDocuments = [\n  { label: \"Policy\", name: \"policyFile\" },\n  { label: \"ENDORCEMENT\", name: \"endorsement\" },\n  { label: \"OR of Premium Payment\", name: \"OPP\" },\n  {\n    label: \"Official Receipt and Certificate of Registration\",\n    name: \"ORCR\",\n  },\n  {\n    label: \"Drivers License and Official Receipt\",\n    name: \"DLOR\",\n  },\n  { label: \"Police Report\", name: \"PR\" },\n  { label: \"Driver's Affidavit\", name: \"DA\" },\n  { label: \"Stencil of Motor and Chassis No.\", name: \"SMCN\" },\n];\nconst insuranceDocuments = [\n  { label: \"LOA\", name: \"loa\" },\n  { label: \"Offer Letter\", name: \"offerLetter\" },\n  { label: \"Comparative Evaluation\", name: \"CE\" },\n];\nconst claimsStatus = [\n  \"Ongoing Repair\",\n  \"With Offer Letter\",\n  \"With Lacking Documents\",\n  \"With LOA\",\n  \"Submitted to Insurance Company\",\n  \"For Evaluation\",\n  \"For Inspection\",\n  \"For Check Preparation\",\n  \"Denied\",\n  \"Done\",\n  \"\",\n];\nconst renderFields = () => {\n  const arrs = [\n    [\n      { label: \"Copies of Colored Picture\", name: \"ct1_1\" },\n      { label: \"Copy of Repair Estimate\", name: \"ct1_2\" },\n    ],\n    [\n      { label: \"Complaint Sheet\", name: \"ct2_1\" },\n      { label: \"Alarm Sheet\", name: \"ct2_2\" },\n      { label: \"Original Keys\", name: \"ct2_3\" },\n      { label: \"Certificate of NO RECOVERY\", name: \"ct2_4\" },\n    ],\n    [\n      { label: \"Copies of Colored Picture\", name: \"ct3_1\" },\n      { label: \"Copy of Repair Estimate\", name: \"ct3_2\" },\n      { label: \"Certificate of Registration and OR\", name: \"ct3_3\" },\n      { label: \"Photocopy of Driver's license\", name: \"ct3_4\" },\n      { label: \"Certificate of NO Claim from Insurer\", name: \"ct3_5\" },\n    ],\n    [\n      { label: \"Medical Certificate\", name: \"ct4_1\" },\n      { label: \"Receipt of Medicine/Drugs\", name: \"ct4_2\" },\n      { label: \"Hospital Bill\", name: \"ct4_3\" },\n      { label: \"Birth Certificate\", name: \"ct4_4\" },\n      { label: \"Affidavit of Desistance\", name: \"ct4_5\" },\n    ],\n    [\n      { label: \"Death Certificate, ID\", name: \"ct5_1\" },\n      { label: \"Marriage Contract \", name: \"ct5_2\" },\n      { label: \"Funeral/Burial Official Receipts\", name: \"ct5_3\" },\n    ],\n  ];\n  return arrs;\n};\nexport const reducer = (state: any, action: any) => {\n  switch (action.type) {\n    case \"UPDATE_FIELD\":\n      return {\n        ...state,\n        [action.field]: action.value,\n      };\n    default:\n      return state;\n  }\n};\n\nfunction Claims() {\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\n  const [claimsSubmited, setClaimsSubmited] = useState([]);\n  const { myAxios, user } = useContext(AuthContext);\n  const [claimState, claimDispatch] = useReducer(reducer, initialClaimState);\n  const [policyState, policyDispatch] = useReducer(reducer, initialPolicyState);\n  const [listofClaim, setListofClaim] = useState<Array<any>>([]);\n  const [showModal, setShowModal] = useState(false);\n  const searchClaimInputRef = useRef<HTMLInputElement>(null);\n  const policySearchInputRef = useRef<HTMLInputElement>(null);\n  const datePickerRef = useRef<HTMLElement>(null);\n  const dateAccidentRef = useRef<HTMLElement>(null);\n  const dateInspectedRef = useRef<HTMLElement>(null);\n  const { isLoading: isLoadingClaimsId, refetch: refetchClaimsId } = useQuery({\n    queryKey: \"get-claims-id\",\n    queryFn: async () =>\n      await myAxios.get(`/task/claims/claims/get-claims-id`, {\n        headers: {\n          Authorization: `Bearer ${user?.accessToken}`,\n        },\n      }),\n    refetchOnWindowFocus: false,\n    onSuccess(res) {\n      claimDispatch({\n        type: \"UPDATE_FIELD\",\n        field: \"claims_id\",\n        value: res.data.claim_id[0].id,\n      });\n    },\n  });\n  const open = Boolean(anchorEl);\n  const handleClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n    setAnchorEl(event.currentTarget);\n  };\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n  const handleInputChange = (e: any) => {\n    const { name, value } = e.target;\n    claimDispatch({ type: \"UPDATE_FIELD\", field: name, value });\n  };\n  const { isLoading: isLoadingSelectedSearch, mutate: mutateSelectedSearch } =\n    useMutation({\n      mutationFn: (variable: any) => {\n        return myAxios.post(\n          \"/task/claims/claims/selected-search-claims\",\n          variable,\n          {\n            headers: {\n              Authorization: `Bearer ${user?.accessToken}`,\n            },\n          }\n        );\n      },\n      onSuccess(res) {\n        const formattedSelectedData = res.data.formattedSelectedData;\n        const claims_id = res.data.claims_id;\n        const policyTypeContainer: Array<any> = [];\n        formattedSelectedData.map(async (item: any) => {\n          policyTypeContainer.push(\n            parseInt(item.policyState.claim_type?.toString())\n          );\n          const basicDocuments: Array<any> = item.basicFileCustom;\n          const otherDocuments: Array<any> = item.otherFileCustom;\n          const insuranceDocuments: Array<any> = item.insuranceFileCustom;\n          const newObjContainerBasic = await formatDataToDocument(\n            basicDocuments,\n            `${process.env.REACT_APP_IMAGE_URL}claim-files/${claims_id}/${item.id}/Basic-Document/`\n          );\n\n          const newObjContainerOther = await formatDataToDocument(\n            otherDocuments,\n            `${process.env.REACT_APP_IMAGE_URL}claim-files/${claims_id}/${item.id}/Other-Document/`\n          );\n\n          const newObjContainerInsurance = await formatDataToDocument(\n            insuranceDocuments,\n            `${process.env.REACT_APP_IMAGE_URL}claim-files/${claims_id}/${item.id}/Insurance-Document/`\n          );\n\n          item.basicFileCustom = await Promise.all(newObjContainerBasic);\n          item.otherFileCustom = await Promise.all(newObjContainerOther);\n          item.insuranceFileCustom = await Promise.all(\n            newObjContainerInsurance\n          );\n\n          return item;\n        });\n        async function formatDataToDocument(\n          dataDocument: Array<any>,\n          url: string\n        ) {\n          const newObjContainer: Array<any> = [];\n          for (let index = 0; index < dataDocument.length; index++) {\n            const basicItem = dataDocument[index];\n            const mainURL = `${url}/${basicItem.uniqueFilename}`;\n            const response = await fetch(mainURL);\n            const blob = await response.blob();\n            const file = new File([blob], basicItem.fileName, {\n              type: basicItem.fileType,\n            });\n            const reader = new FileReader();\n            newObjContainer.push(\n              new Promise((resolve, reject) => {\n                reader.onload = function (event) {\n                  resolve({\n                    fileContent: event.target?.result,\n                    datakey: basicItem.datakey,\n                    fileName: basicItem.fileName,\n                    fileType: basicItem.fileType,\n                    file,\n                  });\n                };\n                reader.onerror = function (event) {\n                  reject(new Error(\"Error reading file: \" + file.name));\n                };\n                reader.readAsDataURL(file);\n              })\n            );\n          }\n          return newObjContainer;\n        }\n        setListofClaim(policyTypeContainer);\n        setNewStateValue(policyDispatch, formattedSelectedData[0].policyState);\n        setClaimsSubmited(formattedSelectedData);\n      },\n    });\n  const { isLoading: isLoadingClaimSave, mutate: mutateClaimSave } =\n    useMutation({\n      mutationKey: \"save-claim\",\n      mutationFn: async (variable: any) =>\n        await myAxios.post(\"/task/claims/claims/save\", variable, {\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${user?.accessToken}`,\n          },\n        }),\n      onSuccess(res) {\n        const response = res as any;\n\n        if (response.data.success) {\n          setNewStateValue(claimDispatch, initialClaimState);\n          setNewStateValue(policyDispatch, initialPolicyState);\n          setClaimsSubmited([]);\n          refetchClaimsId();\n\n          return Swal.fire({\n            position: \"center\",\n            icon: \"success\",\n            title: response.data.message,\n            timer: 1500,\n          });\n        }\n        return Swal.fire({\n          position: \"center\",\n          icon: \"warning\",\n          title: response.data.message,\n          timer: 1500,\n        });\n      },\n    });\n  const {\n    isLoading: isLoadingClaimSelectedPolicyDetails,\n    mutate: mutateClaimSelectedPolicyDetails,\n  } = useMutation({\n    mutationKey: \"get-selected-policy-details\",\n    mutationFn: async (variable: any) =>\n      await myAxios.post(\n        \"/task/claims/claims/get-selected-policy-details\",\n        variable,\n        {\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${user?.accessToken}`,\n          },\n        }\n      ),\n    onSuccess(res) {\n      const response = res as any;\n\n      if (response.data.success && response.data.data.length > 0) {\n        console.log(response);\n        setNewStateValue(policyDispatch, response.data.data[0]);\n      }\n      closePolicyModal();\n    },\n  });\n  const {\n    ModalComponent: SearchClaimModal,\n    isLoading: isLoadingClaimModal,\n    openModal: openClaimModal,\n    closeModal: closeClaimModal,\n  } = useQueryModalTable({\n    link: {\n      url: \"/task/claims/claims/search-claims\",\n      queryUrlName: \"searchClaims\",\n    },\n    columns: [\n      { field: \"claims_id\", headerName: \"Ref No.\", width: 300 },\n      { field: \"AssuredName\", headerName: \"Name\", width: 350 },\n      { field: \"PolicyNo\", headerName: \"Policy No.\", width: 200 },\n      { field: \"IDNo\", headerName: \"ID No.\", width: 200 },\n      { field: \"ChassisNo\", headerName: \"Chassis No.\", width: 200 },\n      { field: \"MotorNo\", headerName: \"Motor No.\", width: 200 },\n      { field: \"PlateNo\", headerName: \"Plate No.\", width: 200 },\n    ],\n    queryKey: \"search-claims\",\n    uniqueId: \"claims_id\",\n    responseDataKey: \"claims\",\n    onSelected: (selectedRowData) => {\n      mutateSelectedSearch({ selectedRowData });\n      setNewStateValue(claimDispatch, {\n        claims_id: selectedRowData[0].claims_id,\n        dateReported: selectedRowData[0].dateReported,\n        dateAccident: selectedRowData[0].dateAccident,\n        dateInspected: selectedRowData[0].dateInspected,\n        department: parseInt(selectedRowData[0].department),\n        remarks: selectedRowData[0].remarks,\n        claim_no: \"\",\n        mode: \"update\",\n      });\n      closeClaimModal();\n    },\n    searchRef: searchClaimInputRef,\n  });\n  const {\n    ModalComponent: PolicyModal,\n    isLoading: isLoadingPolicyModal,\n    openModal: openPolicyModal,\n    closeModal: closePolicyModal,\n  } = useQueryModalTable({\n    link: {\n      url: \"/task/claims/claims/get-policy\",\n      queryUrlName: \"searchPolicy\",\n    },\n    columns: [\n      { field: \"PolicyNo\", headerName: \"Policy No.\", width: 300 },\n      { field: \"AssuredName\", headerName: \"Name.\", width: 350 },\n      { field: \"IDNo\", headerName: \"ID No.\", width: 200 },\n      { field: \"ChassisNo\", headerName: \"Chassis No.\", width: 200 },\n    ],\n    queryKey: \"get-policy\",\n    uniqueId: \"PolicyNo\",\n    responseDataKey: \"claimPolicy\",\n    onSelected: (selectedRowData) => {\n      setNewStateValue(policyDispatch, selectedRowData[0]);\n      mutateClaimSelectedPolicyDetails({\n        PolicyNo: selectedRowData[0].PolicyNo,\n      });\n    },\n    searchRef: policySearchInputRef,\n  });\n\n  function sortList(data: any) {\n    if (data.length <= 0) {\n      return [];\n    }\n    const sortedData = data.sort((a: any, b: any) => {\n      if (a.id < b.id) {\n        return -1;\n      }\n      if (a.id > b.id) {\n        return 1;\n      }\n      return 0;\n    });\n    return sortedData;\n  }\n  const handleTdClick = (itm: any) => {\n    flushSync(() => {\n      setShowModal(true);\n    });\n    const groupByLabel = (arr: any) => {\n      const grouped: any = {};\n      arr.forEach((item: any) => {\n        if (!grouped[item.datakey]) {\n          grouped[item.datakey] = [];\n        }\n        grouped[item.datakey].push(item);\n      });\n\n      return Object.entries(grouped);\n    };\n    const displayFile = (groupedData: Array<any>) => {\n      groupedData.forEach(([datakey, items]: any) => {\n        const fileList = new DataTransfer();\n        const input = document.querySelector(\n          `#${datakey} input`\n        ) as HTMLInputElement;\n        items.forEach((itm: any) => {\n          fileList.items.add(itm.file);\n        });\n        input.files = fileList.files;\n        input.dispatchEvent(new Event(\"change\", { bubbles: true }));\n      });\n    };\n    setNewStateValue(policyDispatch, itm.policyState);\n    displayFile(groupByLabel(itm.basicFileCustom));\n    displayFile(groupByLabel(itm.otherFileCustom));\n    displayFile(groupByLabel(itm.insuranceFileCustom));\n    handleInputChange({\n      target: { name: \"claim_no\", value: itm.id },\n    });\n  };\n\n  const clickClaimInformationSheet = () => {\n    localStorage.setItem(\"paper-width\", \"8.5in\");\n    localStorage.setItem(\"paper-height\", \"13in\");\n    let printString = (claimdsDetails: any) => {\n      return (\n        <div>\n          <div\n            style={{\n              borderBottom: \"3px solid black\",\n            }}\n          >\n            <h3\n              style={{\n                textAlign: \"center\",\n                fontWeight: \"bold\",\n              }}\n            >\n              {claimdsDetails.department === 0\n                ? \"UPWARD INSURANCE SERVICES AND MANAGEMENT INC.\"\n                : \"UPWARD CONSULTANT SERVICES AND MANAGEMENT INC.\"}\n            </h3>\n          </div>\n          <h1\n            style={{\n              textAlign: \"center\",\n              fontWeight: \"bolder\",\n            }}\n          >\n            CLAIMS INFORMATION SHEET\n          </h1>\n          <p\n            style={{\n              textAlign: \"right\",\n              fontSize: \"16px\",\n              fontWeight: \"bold\",\n            }}\n          >\n            <p\n              style={{\n                textAlign: \"right\",\n                fontSize: \"16px\",\n              }}\n            >\n              <span style={{ fontWeight: \"bolder\" }}>CLAIM NO.: </span>\n              <span style={{ fontWeight: \"bold\" }}>\n                {\" \"}\n                {claimdsDetails.claims_id}\n              </span>\n            </p>\n          </p>\n          <div\n            style={{\n              minHeight: \"200px\",\n              maxHeight: \"auto\",\n              marginBottom: \"20px\",\n              display: \"flex\",\n              border: \"2px solid black\",\n            }}\n          >\n            <div\n              style={{\n                flex: 1,\n                minHeight: \"200px\",\n                maxHeight: \"auto\",\n                borderRight: \"2px solid black\",\n                display: \"flex\",\n                flexDirection: \"column\",\n                rowGap: \"5px\",\n              }}\n            >\n              <div\n                style={{\n                  width: \"100%\",\n                  display: \"flex\",\n                  padding: \"0 10px\",\n                  boxSizing: \"border-box\",\n                }}\n              >\n                <span\n                  style={{\n                    flex: 1,\n                    textAlign: \"left\",\n                    fontWeight: \"bolder\",\n                  }}\n                >\n                  Assured's Name\n                </span>\n                <span style={{ width: \"40px\", textAlign: \"left\" }}>:</span>\n                <span\n                  style={{\n                    flex: 1,\n                    textAlign: \"left\",\n                    fontWeight: \"bold\",\n                  }}\n                >\n                  {claimdsDetails.AssuredName}\n                </span>\n              </div>\n              <div\n                style={{\n                  width: \"100%\",\n                  display: \"flex\",\n                  padding: \"0 10px\",\n                  boxSizing: \"border-box\",\n                }}\n              >\n                <span\n                  style={{\n                    flex: 1,\n                    textAlign: \"left\",\n                    fontWeight: \"bolder\",\n                  }}\n                >\n                  Unit Insured\n                </span>\n                <span style={{ width: \"40px\", textAlign: \"left\" }}>:</span>\n                <span\n                  style={{\n                    flex: 1,\n                    textAlign: \"left\",\n                    fontWeight: \"bold\",\n                  }}\n                >\n                  {claimdsDetails.policy === \"COM\" ||\n                  claimdsDetails.policy === \"TPL\"\n                    ? `${claimdsDetails.Model} ${claimdsDetails.Make} ${claimdsDetails.BodyType}`\n                    : `${\n                        claimdsDetails.policy === \"PA\"\n                          ? \"Group Personal Accident\"\n                          : claimdsDetails.policy\n                      }`}\n                </span>\n              </div>\n              {claimdsDetails.policy === \"VPolicy\" && (\n                <>\n                  <div\n                    style={{\n                      width: \"100%\",\n                      display: \"flex\",\n                      padding: \"0 10px\",\n                      boxSizing: \"border-box\",\n                    }}\n                  >\n                    <span\n                      style={{\n                        flex: 1,\n                        textAlign: \"left\",\n                        fontWeight: \"bolder\",\n                      }}\n                    >\n                      Engine No.\n                    </span>\n                    <span style={{ width: \"40px\", textAlign: \"left\" }}>:</span>\n                    <span\n                      style={{\n                        flex: 1,\n                        textAlign: \"left\",\n                        fontWeight: \"bold\",\n                      }}\n                    >\n                      {claimdsDetails.MotorNo}\n                    </span>\n                  </div>\n                  <div\n                    style={{\n                      width: \"100%\",\n                      display: \"flex\",\n                      padding: \"0 10px\",\n                      boxSizing: \"border-box\",\n                    }}\n                  >\n                    <span\n                      style={{\n                        flex: 1,\n                        textAlign: \"left\",\n                        fontWeight: \"bolder\",\n                      }}\n                    >\n                      Chassis No.\n                    </span>\n                    <span style={{ width: \"40px\", textAlign: \"left\" }}>:</span>\n                    <span\n                      style={{\n                        flex: 1,\n                        textAlign: \"left\",\n                        fontWeight: \"bold\",\n                      }}\n                    >\n                      {claimdsDetails.ChassisNo}\n                    </span>\n                  </div>\n                </>\n              )}\n              <div\n                style={{\n                  width: \"100%\",\n                  display: \"flex\",\n                  padding: \"0 10px\",\n                  boxSizing: \"border-box\",\n                }}\n              >\n                <span\n                  style={{\n                    flex: 1,\n                    textAlign: \"left\",\n                    fontWeight: \"bolder\",\n                  }}\n                >\n                  Inception\n                </span>\n                <span style={{ width: \"40px\", textAlign: \"left\" }}>:</span>\n                <span\n                  style={{\n                    flex: 1,\n                    textAlign: \"left\",\n                    fontWeight: \"bold\",\n                  }}\n                >\n                  {`${format(\n                    new Date(claimdsDetails.DateFrom),\n                    \"MMMM d, yyyy\"\n                  )} - ${format(new Date(claimdsDetails.DateTo), \"yyyy\")}`}\n                </span>\n              </div>\n\n              <div\n                style={{\n                  width: \"100%\",\n                  display: \"flex\",\n                  padding: \"0 10px\",\n                  boxSizing: \"border-box\",\n                }}\n              >\n                <span\n                  style={{\n                    flex: 1,\n                    textAlign: \"left\",\n                    fontWeight: \"bolder\",\n                  }}\n                >\n                  Type of Claim\n                </span>\n                <span style={{ width: \"40px\", textAlign: \"left\" }}>:</span>\n                <div style={{ flex: 1 }}>\n                  {listofClaim.map((d: any, idx) => {\n                    return (\n                      <p\n                        style={{\n                          textAlign: \"left\",\n                          fontWeight: \"bold\",\n                          padding: \"0\",\n                          margin: \"0\",\n                        }}\n                        key={idx}\n                      >\n                        {claimType[d]}\n                      </p>\n                    );\n                  })}\n                </div>\n              </div>\n            </div>\n            <div\n              style={{\n                width: \"220px\",\n                alignSelf: \"self-start\",\n                minHeight: \"200px\",\n                maxHeight: \"auto\",\n                display: \"flex\",\n                flexDirection: \"column\",\n              }}\n            >\n              <div\n                style={{\n                  flex: 1,\n                  borderBottom: \"2px solid black\",\n                  padding: \"0 10px\",\n                }}\n              >\n                <p\n                  style={{\n                    fontWeight: \"bolder\",\n                    marginLeft: 0,\n                    marginTop: 0,\n                    marginRight: 0,\n                    marginBottom: \"10px\",\n                    padding: 0,\n                  }}\n                >\n                  Date Prepared:\n                </p>\n                <p\n                  style={{\n                    fontWeight: \"bold\",\n                    margin: 0,\n                    padding: 0,\n                  }}\n                >\n                  {format(new Date(), \"MMMM d, yyyy\")}\n                </p>\n              </div>\n              <div\n                style={{\n                  flex: 1,\n                  borderBottom: \"2px solid black\",\n                  padding: \"0 10px\",\n                }}\n              >\n                <p\n                  style={{\n                    fontWeight: \"bolder\",\n                    marginLeft: 0,\n                    marginTop: 0,\n                    marginRight: 0,\n                    marginBottom: \"10px\",\n                    padding: 0,\n                  }}\n                >\n                  Policy No.\n                </p>\n                <p\n                  style={{\n                    fontWeight: \"bold\",\n                    margin: 0,\n                    padding: 0,\n                  }}\n                >\n                  {claimdsDetails.PolicyNo}\n                </p>\n              </div>\n              <div\n                style={{\n                  flex: 1,\n                  padding: \"0 10px\",\n                }}\n              >\n                <p\n                  style={{\n                    fontWeight: \"bolder\",\n                    marginLeft: 0,\n                    marginTop: 0,\n                    marginRight: 0,\n                    marginBottom: \"10px\",\n                    padding: 0,\n                  }}\n                >\n                  Date of Accident\n                </p>\n                <p\n                  style={{\n                    fontWeight: \"bold\",\n                    margin: 0,\n                    padding: 0,\n                  }}\n                >\n                  {format(new Date(claimState.dateAccident), \"MMMM d, yyyy\")}\n                </p>\n              </div>\n            </div>\n          </div>\n          <div\n            style={{\n              border: \"2px solid black\",\n              height: \"170px\",\n              position: \"relative\",\n            }}\n          >\n            <p\n              style={{\n                borderBottom: \"2px solid black\",\n                padding: \"2px 5px\",\n                margin: \"0\",\n                fontWeight: \"bold\",\n                textAlign: \"left\",\n              }}\n            >\n              {claimdsDetails.department === 0\n                ? \"Under Writer\"\n                : \"Insurance Coordinator\"}\n            </p>\n            <p\n              style={{\n                width: \"200px\",\n                borderTop: \"2px solid black\",\n                padding: \"0\",\n                margin: \"0\",\n                fontWeight: \"bold\",\n                position: \"absolute\",\n                right: \"0\",\n                bottom: \"20px\",\n                textAlign: \"center\",\n              }}\n            >\n              {claimdsDetails.department === 0\n                ? \"Angelo Dacula\"\n                : \"Rina Fernandez\"}\n            </p>\n          </div>\n          <div\n            style={{\n              borderBottom: \"2px solid black\",\n              borderLeft: \"2px solid black\",\n              borderRight: \"2px solid black\",\n              height: \"170px\",\n              position: \"relative\",\n            }}\n          >\n            <p\n              style={{\n                borderBottom: \"2px solid black\",\n                padding: \"2px 5px\",\n                margin: \"0\",\n                fontWeight: \"bold\",\n                textAlign: \"left\",\n              }}\n            >\n              Accounting\n            </p>\n            <p\n              style={{\n                width: \"200px\",\n                borderTop: \"2px solid black\",\n                padding: \"0\",\n                margin: \"0\",\n                fontWeight: \"bold\",\n                position: \"absolute\",\n                right: \"0\",\n                bottom: \"20px\",\n                textAlign: \"center\",\n              }}\n            >\n              Gina Rondina\n            </p>\n            <div\n              style={{\n                padding: \"2px 5px\",\n                margin: \"0\",\n                fontWeight: \"bold\",\n                height: \"100%\",\n                display: \"flex\",\n                flexDirection: \"column\",\n                alignItems: \"center\",\n              }}\n            >\n              <div>\n                <div\n                  style={{\n                    textAlign: \"left\",\n                  }}\n                >\n                  <span\n                    style={{\n                      margin: 0,\n                      padding: 0,\n                    }}\n                  >\n                    {parseFloat(\n                      claimdsDetails.balance.toString().replace(/,/, \"\")\n                    ) <= 0\n                      ? \"Fully Paid,\"\n                      : \"Not Fully Paid,\"}\n                  </span>\n                  <span\n                    style={{\n                      margin: 0,\n                      padding: 0,\n                    }}\n                  >\n                    {parseFloat(\n                      claimdsDetails.balance.toString().replace(/,/, \"\")\n                    ) <= 0\n                      ? \"\"\n                      : ` Total balance : ${claimdsDetails.balance}`}\n                  </span>\n                </div>\n                <div>\n                  <span>\n                    {parseFloat(\n                      claimdsDetails.remitted.toString().replace(/,/, \"\")\n                    ) <= 0\n                      ? \"Not Remitted\"\n                      : \"Remitted\"}\n                  </span>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div\n            style={{\n              borderBottom: \"2px solid black\",\n              borderLeft: \"2px solid black\",\n              borderRight: \"2px solid black\",\n              height: \"170px\",\n              marginBottom: \"20px\",\n            }}\n          >\n            <p\n              style={{\n                padding: \"2px 5px\",\n                margin: \"0\",\n                fontWeight: \"bold\",\n                textAlign: \"left\",\n              }}\n            >\n              Remarks:\n            </p>\n            <pre\n              style={{\n                padding: \"2px 5px\",\n                margin: \"0\",\n                fontWeight: \"bold\",\n                textAlign: \"left\",\n                fontSize: \"15px\",\n              }}\n            >\n              {claimdsDetails.remarks}\n            </pre>\n          </div>\n          <div\n            style={{\n              border: \"2px solid black\",\n              height: \"140px\",\n              display: \"flex\",\n              justifyContent: \"space-around\",\n              flexDirection: \"column\",\n            }}\n          >\n            <p\n              style={{\n                padding: \"2px\",\n                margin: \"0\",\n              }}\n            >\n              <span\n                style={{\n                  fontWeight: \"bold\",\n                }}\n              >\n                Prepared by\n              </span>\n              <span\n                style={{\n                  margin: \"0\",\n                  fontWeight: \"bold\",\n                  marginLeft: \"100px\",\n                }}\n              >\n                Checked by\n              </span>\n            </p>\n            <div\n              style={{\n                display: \"flex\",\n                width: \"100%\",\n                height: \"auto\",\n                justifyContent: \"space-between\",\n                padding: \"0 10px\",\n                boxSizing: \"border-box\",\n              }}\n            >\n              <div style={{ textAlign: \"center\" }}>\n                <p\n                  style={{\n                    fontWeight: \"bolder\",\n                    fontSize: \"19px \",\n                    margin: 0,\n                    padding: 0,\n                  }}\n                >\n                  Pio Mendoza\n                </p>\n                <p\n                  style={{\n                    fontSize: \"13px\",\n                    fontWeight: \"bold\",\n                    margin: 0,\n                    padding: 0,\n                  }}\n                >\n                  Claims Officer\n                </p>\n              </div>\n              <div\n                style={{\n                  display: \"flex\",\n                  justifyContent: \"space-between\",\n                }}\n              >\n                <div style={{ textAlign: \"center\" }}>\n                  <p\n                    style={{\n                      fontWeight: \"bolder\",\n                      margin: 0,\n                      padding: 0,\n                      fontSize: \"19px \",\n                    }}\n                  >\n                    Mary Grace Lanera\n                  </p>\n                  <p\n                    style={{\n                      fontSize: \"13px\",\n                      fontWeight: \"bold\",\n                      margin: 0,\n                      padding: 0,\n                    }}\n                  >\n                    Operations Supervisor\n                  </p>\n                </div>\n              </div>\n              <div\n                style={{\n                  display: \"flex\",\n                  justifyContent: \"space-between\",\n                }}\n              >\n                <div style={{ textAlign: \"center\" }}>\n                  <p\n                    style={{\n                      fontWeight: \"bolder\",\n                      margin: 0,\n                      padding: 0,\n                      fontSize: \"19px \",\n                    }}\n                  >\n                    Leo Aquino\n                  </p>\n                  <p\n                    style={{\n                      fontSize: \"13px\",\n                      fontWeight: \"bold\",\n                      margin: 0,\n                      padding: 0,\n                    }}\n                  >\n                    General Manager\n                  </p>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      );\n    };\n    flushSync(() => {\n      const elementString = ReactDOMServer.renderToString(\n        printString({\n          ...claimState,\n          ...policyState,\n        })\n      );\n\n      localStorage.setItem(\"printString\", elementString);\n    });\n    window.open(\"/dashboard/print\", \"_blank\");\n\n    handleClose();\n  };\n  if (isLoadingClaimSelectedPolicyDetails) {\n    return <div>Loading...</div>;\n  }\n\n  return (\n    <div\n      style={{ display: \"flex\", columnGap: \"10px\", flexDirection: \"column\" }}\n    >\n      <div style={{ display: \"flex\", columnGap: \"10px\" }}>\n        {isLoadingClaimModal ? (\n          <LoadingButton loading={isLoadingClaimModal} />\n        ) : (\n          <FormControl\n            sx={{\n              width: \"400px\",\n              \".MuiFormLabel-root\": {\n                fontSize: \"14px\",\n                background: \"white\",\n                zIndex: 99,\n                padding: \"0 3px\",\n              },\n              \".MuiFormLabel-root[data-shrink=false]\": {\n                top: \"-5px\",\n              },\n            }}\n            variant=\"outlined\"\n            size=\"small\"\n          >\n            <InputLabel htmlFor=\"search-claim-id\">Search</InputLabel>\n            <OutlinedInput\n              sx={{\n                height: \"27px\",\n                fontSize: \"14px\",\n                legend: {\n                  background: \"red\",\n                },\n              }}\n              inputRef={policySearchInputRef}\n              name=\"search\"\n              value={claimState.search}\n              onChange={handleInputChange}\n              id=\"search-claim-id\"\n              onKeyDown={(e) => {\n                if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n                  return openClaimModal(claimState.search);\n                }\n              }}\n              endAdornment={\n                <InputAdornment position=\"end\">\n                  <IconButton\n                    onClick={() => {\n                      openClaimModal(claimState.search);\n                    }}\n                    edge=\"end\"\n                    color=\"secondary\"\n                  >\n                    <PersonSearchIcon />\n                  </IconButton>\n                </InputAdornment>\n              }\n              label=\"Search\"\n            />\n          </FormControl>\n        )}\n        {isLoadingClaimsId ? (\n          <LoadingButton loading={isLoadingClaimsId} />\n        ) : (\n          <FormControl\n            variant=\"outlined\"\n            size=\"small\"\n            sx={{\n              width: \"140px\",\n              \".MuiFormLabel-root\": {\n                fontSize: \"14px\",\n                background: \"white\",\n                zIndex: 99,\n                padding: \"0 3px\",\n              },\n              \".MuiFormLabel-root[data-shrink=false]\": { top: \"-1px\" },\n            }}\n          >\n            <InputLabel htmlFor=\"claims_id\">Claim ID.</InputLabel>\n            <OutlinedInput\n              sx={{\n                height: \"27px\",\n                fontSize: \"14px\",\n              }}\n              fullWidth\n              label=\"Claim ID.\"\n              name=\"claims_id\"\n              value={claimState.claims_id}\n              onChange={handleInputChange}\n              onKeyDown={(e) => {\n                if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n                  e.preventDefault();\n                  return refetchClaimsId();\n                }\n              }}\n              readOnly={true}\n              id=\"claims_id\"\n              endAdornment={\n                <InputAdornment position=\"end\">\n                  <IconButton\n                    color=\"secondary\"\n                    edge=\"end\"\n                    onClick={() => {\n                      refetchClaimsId();\n                    }}\n                  >\n                    <RestartAltIcon />\n                  </IconButton>\n                </InputAdornment>\n              }\n            />\n          </FormControl>\n        )}\n        <div>\n          <Button\n            disabled={claimState.mode !== \"update\"}\n            id=\"basic-button\"\n            aria-controls={open ? \"basic-menu\" : undefined}\n            aria-haspopup=\"true\"\n            aria-expanded={open ? \"true\" : undefined}\n            onClick={handleClick}\n            sx={{\n              height: \"30px\",\n              fontSize: \"11px\",\n              color: \"white\",\n              backgroundColor: grey[600],\n              \"&:hover\": {\n                backgroundColor: grey[700],\n              },\n            }}\n          >\n            Print\n          </Button>\n          <Menu\n            id=\"basic-menu\"\n            anchorEl={anchorEl}\n            open={open}\n            onClose={handleClose}\n            MenuListProps={{\n              \"aria-labelledby\": \"basic-button\",\n            }}\n          >\n            <MenuItem onClick={clickClaimInformationSheet}>\n              Claim Information Sheet\n            </MenuItem>\n          </Menu>\n        </div>\n        <Button\n          id=\"basic-button\"\n          aria-haspopup=\"true\"\n          sx={{\n            height: \"30px\",\n            fontSize: \"11px\",\n          }}\n          color=\"primary\"\n          variant=\"contained\"\n          onClick={() => {\n            if (policyState.PolicyNo === \"\") {\n              Swal.fire({\n                title: \"Opppss!\",\n                text: `You need to select policy first!`,\n                icon: \"warning\",\n                showCancelButton: true,\n                confirmButtonColor: \"#3085d6\",\n                cancelButtonColor: \"#d33\",\n                confirmButtonText: `Yes, select policy!`,\n              }).then((result) => {\n                if (result.isConfirmed) {\n                  openPolicyModal(policyState.PolicyNo);\n                }\n              });\n              return;\n            }\n            setNewStateValue(policyDispatch, {\n              claim_type: 0,\n              status: 0,\n              DateReceived: null,\n              DateClaim: null,\n              AmountClaim: \"\",\n              AmountApproved: \"\",\n              NameTPPD: \"\",\n            });\n            setShowModal(true);\n          }}\n        >\n          ADD\n        </Button>\n        <LoadingButton\n          loading={isLoadingClaimSave}\n          id=\"basic-button\"\n          aria-haspopup=\"true\"\n          sx={{\n            height: \"30px\",\n            fontSize: \"11px\",\n          }}\n          variant=\"contained\"\n          color=\"success\"\n          onClick={() => {\n            Swal.fire({\n              title: \"Are you sure?\",\n              text: `You want to ${\n                claimState.mode === \"update\" ? \"save changes!\" : \"save it!\"\n              }`,\n              icon: \"warning\",\n              showCancelButton: true,\n              confirmButtonColor: \"#3085d6\",\n              cancelButtonColor: \"#d33\",\n              confirmButtonText: `Yes, ${\n                claimState.mode === \"update\" ? \"save changes!\" : \"save it!\"\n              } `,\n            }).then(async (result) => {\n              if (result.isConfirmed) {\n                if (claimState.mode === \"update\") {\n                  return codeCondfirmationAlert({\n                    isUpdate: true,\n                    cb: (userCodeConfirmation) => {\n                      mutateClaimSave({\n                        ...claimState,\n                        claimsSubmited,\n                        userCodeConfirmation,\n                      });\n                    },\n                  });\n                } else {\n                  return mutateClaimSave({ ...claimState, claimsSubmited });\n                }\n              }\n            });\n          }}\n        >\n          {claimState.mode === \"update\" ? \"SAVE CHANGES\" : \"SAVE\"}\n        </LoadingButton>\n        {claimState.mode === \"update\" && (\n          <Button\n            variant=\"contained\"\n            color=\"error\"\n            aria-haspopup=\"true\"\n            sx={{\n              height: \"30px\",\n              fontSize: \"11px\",\n            }}\n            onClick={() => {\n              Swal.fire({\n                title: \"Are you sure?\",\n                text: `You want to discard the changes!`,\n                icon: \"warning\",\n                showCancelButton: true,\n                confirmButtonColor: \"#3085d6\",\n                cancelButtonColor: \"#d33\",\n                confirmButtonText: \"Yes, discard it!\",\n              }).then(async (result) => {\n                if (result.isConfirmed) {\n                  setNewStateValue(claimDispatch, initialClaimState);\n                  setNewStateValue(policyDispatch, initialPolicyState);\n                  setClaimsSubmited([]);\n                  refetchClaimsId();\n                }\n              });\n            }}\n          >\n            Discard Changes\n          </Button>\n        )}\n        {policyState.PolicyNo !== \"\" && claimState.mode !== \"update\" && (\n          <Button\n            id=\"basic-button\"\n            aria-haspopup=\"true\"\n            sx={{\n              height: \"30px\",\n              fontSize: \"11px\",\n            }}\n            color=\"error\"\n            variant=\"contained\"\n            onClick={() => {\n              Swal.fire({\n                title: \"Are you sure?\",\n                text: `You want to cancel!`,\n                icon: \"warning\",\n                showCancelButton: true,\n                confirmButtonColor: \"#3085d6\",\n                cancelButtonColor: \"#d33\",\n                confirmButtonText: `Yes, Cancel it!`,\n              }).then(async (result) => {\n                if (result.isConfirmed) {\n                  setNewStateValue(claimDispatch, initialClaimState);\n                  setNewStateValue(policyDispatch, initialPolicyState);\n                  setClaimsSubmited([]);\n                  refetchClaimsId();\n                }\n              });\n            }}\n          >\n            CANCEL\n          </Button>\n        )}\n      </div>\n      <div style={{ display: \"flex\", marginTop: \"20px\", columnGap: \"10px\" }}>\n        <CustomDatePicker\n          textField={{\n            InputLabelProps: {\n              style: {\n                fontSize: \"14px\",\n              },\n            },\n            InputProps: {\n              style: { height: \"27px\", fontSize: \"14px\" },\n            },\n          }}\n          label=\"Date Reported\"\n          onChange={(value: any) => {\n            claimDispatch({\n              type: \"UPDATE_FIELD\",\n              field: \"dateReported\",\n              value: value,\n            });\n          }}\n          value={\n            claimState.dateReported ? new Date(claimState.dateReported) : null\n          }\n          onKeyDown={(e: any) => {\n            if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n              const timeout = setTimeout(() => {\n                datePickerRef.current?.querySelector(\"button\")?.click();\n                clearTimeout(timeout);\n              }, 150);\n            }\n          }}\n          datePickerRef={datePickerRef}\n        />\n        <CustomDatePicker\n          textField={{\n            InputLabelProps: {\n              style: {\n                fontSize: \"14px\",\n              },\n            },\n            InputProps: {\n              style: { height: \"27px\", fontSize: \"14px\" },\n            },\n          }}\n          label=\"Date Accident\"\n          onChange={(value: any) => {\n            claimDispatch({\n              type: \"UPDATE_FIELD\",\n              field: \"dateAccident\",\n              value: value,\n            });\n          }}\n          value={\n            claimState.dateAccident ? new Date(claimState.dateAccident) : null\n          }\n          onKeyDown={(e: any) => {\n            if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n              const timeout = setTimeout(() => {\n                dateAccidentRef.current?.querySelector(\"button\")?.click();\n                clearTimeout(timeout);\n              }, 150);\n            }\n          }}\n          datePickerRef={dateAccidentRef}\n        />\n        <CustomDatePicker\n          textField={{\n            InputLabelProps: {\n              style: {\n                fontSize: \"14px\",\n              },\n            },\n            InputProps: {\n              style: { height: \"27px\", fontSize: \"14px\" },\n            },\n          }}\n          label=\"Date Inspected\"\n          onChange={(value: any) => {\n            claimDispatch({\n              type: \"UPDATE_FIELD\",\n              field: \"dateInspected\",\n              value: value,\n            });\n          }}\n          value={\n            claimState.dateInspected ? new Date(claimState.dateInspected) : null\n          }\n          onKeyDown={(e: any) => {\n            if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n              const timeout = setTimeout(() => {\n                dateInspectedRef.current?.querySelector(\"button\")?.click();\n                clearTimeout(timeout);\n              }, 150);\n            }\n          }}\n          datePickerRef={dateInspectedRef}\n        />\n        <FormControl\n          sx={{\n            width: \"200px\",\n            \".MuiFormLabel-root\": {\n              fontSize: \"14px\",\n              background: \"white\",\n              zIndex: 99,\n              padding: \"0 3px\",\n            },\n            \".MuiFormLabel-root[data-shrink=false]\": { top: \"-12px\" },\n          }}\n        >\n          <InputLabel id=\"department-field\">Department</InputLabel>\n          <Select\n            labelId=\"department-field\"\n            value={claimState.department}\n            onChange={handleInputChange}\n            label=\"department\"\n            size=\"small\"\n            name=\"department\"\n            sx={{\n              height: \"27px\",\n              fontSize: \"14px\",\n            }}\n            fullWidth\n          >\n            {[\"UMIS\", \"UCSMI\"].map((itm, idx) => {\n              return (\n                <MenuItem key={idx} value={idx}>\n                  {itm}\n                </MenuItem>\n              );\n            })}\n          </Select>\n        </FormControl>\n        <TextField\n          name=\"remarks\"\n          label=\"Remarks\"\n          size=\"small\"\n          value={claimState.remarks}\n          onChange={handleInputChange}\n          InputProps={{\n            style: {\n              height: \"27px\",\n              fontSize: \"14px\",\n              color: \"whie\",\n            },\n          }}\n          sx={{\n            width: \"100%\",\n            \".MuiFormLabel-root\": { fontSize: \"14px\" },\n            \".MuiFormLabel-root[data-shrink=false]\": {\n              top: \"-5px\",\n            },\n          }}\n        />\n      </div>\n      <fieldset\n        style={{\n          display: \"flex\",\n          columnGap: \"15px\",\n          padding: \"10px\",\n          border: \"1px solid #cbd5e1\",\n          borderRadius: \"5px\",\n          position: \"relative\",\n        }}\n      >\n        <legend>Policy Details</legend>\n        <div\n          style={{\n            display: \"flex\",\n            width: \"100%\",\n            gap: \"15px\",\n            flexDirection: \"column\",\n          }}\n        >\n          <div\n            style={{\n              flex: \"1\",\n              display: \"grid\",\n              gridTemplateColumns: \"repeat(4,1fr)\",\n              gap: \"7px\",\n            }}\n          >\n            {isLoadingPolicyModal ? (\n              <LoadingButton loading={isLoadingPolicyModal} />\n            ) : (\n              <FormControl\n                sx={{\n                  width: \"100%\",\n                  \".MuiFormLabel-root\": {\n                    fontSize: \"14px\",\n                    background: \"white\",\n                    zIndex: 99,\n                    padding: \"0 3px\",\n                  },\n                  \".MuiFormLabel-root[data-shrink=false]\": {\n                    top: \"-5px\",\n                  },\n                }}\n                variant=\"outlined\"\n                size=\"small\"\n              >\n                <InputLabel htmlFor=\"policy-no\">Policy No.</InputLabel>\n                <OutlinedInput\n                  sx={{\n                    height: \"27px\",\n                    fontSize: \"14px\",\n                    legend: {\n                      background: \"red\",\n                    },\n                  }}\n                  inputRef={policySearchInputRef}\n                  name=\"PolicyNo\"\n                  value={policyState.PolicyNo}\n                  onChange={handleInputChange}\n                  id=\"policy-no\"\n                  onKeyDown={(e) => {\n                    if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n                      return openPolicyModal(policyState.PolicyNo);\n                    }\n                  }}\n                  endAdornment={\n                    <InputAdornment position=\"end\">\n                      <IconButton\n                        disabled={policyState.mode === \"\"}\n                        onClick={() => {\n                          openPolicyModal(policyState.PolicyNo);\n                        }}\n                        edge=\"end\"\n                        color=\"secondary\"\n                      >\n                        <PersonSearchIcon />\n                      </IconButton>\n                    </InputAdornment>\n                  }\n                  label=\"Policy No.\"\n                />\n              </FormControl>\n            )}\n            <TextField\n              name=\"policy\"\n              label=\"Policy\"\n              size=\"small\"\n              value={policyState.policy}\n              onChange={handleInputChange}\n              InputProps={{\n                style: {\n                  height: \"27px\",\n                  fontSize: \"14px\",\n                  color: \"whie\",\n                },\n                readOnly: true,\n              }}\n              sx={{\n                \".MuiFormLabel-root\": { fontSize: \"14px\" },\n                \".MuiFormLabel-root[data-shrink=false]\": {\n                  top: \"-5px\",\n                },\n              }}\n            />\n            <TextField\n              name=\"AssuredName\"\n              label=\"Assured Name\"\n              size=\"small\"\n              value={policyState.AssuredName}\n              onChange={handleInputChange}\n              InputProps={{\n                style: {\n                  height: \"27px\",\n                  fontSize: \"14px\",\n                  color: \"whie\",\n                },\n                readOnly: true,\n              }}\n              sx={{\n                gridColumn: \"3/ span 2\",\n                width: \"100%\",\n                \".MuiFormLabel-root\": { fontSize: \"14px\" },\n                \".MuiFormLabel-root[data-shrink=false]\": {\n                  top: \"-5px\",\n                },\n              }}\n            />\n            <TextField\n              name=\"Account\"\n              label=\"Account Insurance\"\n              size=\"small\"\n              value={policyState.Account}\n              onChange={handleInputChange}\n              InputProps={{\n                style: { height: \"27px\", fontSize: \"14px\" },\n                readOnly: true,\n              }}\n              sx={{\n                width: \"100%\",\n                \".MuiFormLabel-root\": { fontSize: \"14px\" },\n                \".MuiFormLabel-root[data-shrink=false]\": {\n                  top: \"-5px\",\n                },\n              }}\n            />\n            <TextField\n              name=\"Model\"\n              label=\"Model\"\n              size=\"small\"\n              value={policyState.Model}\n              onChange={handleInputChange}\n              InputProps={{\n                style: { height: \"27px\", fontSize: \"14px\" },\n                readOnly: true,\n              }}\n              sx={{\n                width: \"100%\",\n                \".MuiFormLabel-root\": { fontSize: \"14px\" },\n                \".MuiFormLabel-root[data-shrink=false]\": {\n                  top: \"-5px\",\n                },\n              }}\n            />\n            <TextField\n              name=\"PlateNo\"\n              label=\"Plate No\"\n              size=\"small\"\n              value={policyState.PlateNo}\n              onChange={handleInputChange}\n              InputProps={{\n                style: { height: \"27px\", fontSize: \"14px\" },\n                readOnly: true,\n              }}\n              sx={{\n                width: \"100%\",\n                \".MuiFormLabel-root\": { fontSize: \"14px\" },\n                \".MuiFormLabel-root[data-shrink=false]\": {\n                  top: \"-5px\",\n                },\n              }}\n            />\n            <TextField\n              name=\"ChassisNo\"\n              label=\"Chassis No\"\n              size=\"small\"\n              value={policyState.ChassisNo}\n              onChange={handleInputChange}\n              InputProps={{\n                style: { height: \"27px\", fontSize: \"14px\" },\n                readOnly: true,\n              }}\n              sx={{\n                width: \"100%\",\n                \".MuiFormLabel-root\": { fontSize: \"14px\" },\n                \".MuiFormLabel-root[data-shrink=false]\": {\n                  top: \"-5px\",\n                },\n              }}\n            />\n            <TextField\n              name=\"MotorNo.\"\n              label=\"Motor No\"\n              size=\"small\"\n              value={policyState.MotorNo}\n              onChange={handleInputChange}\n              InputProps={{\n                style: { height: \"27px\", fontSize: \"14px\" },\n                readOnly: true,\n              }}\n              sx={{\n                width: \"100%\",\n                \".MuiFormLabel-root\": { fontSize: \"14px\" },\n                \".MuiFormLabel-root[data-shrink=false]\": {\n                  top: \"-5px\",\n                },\n              }}\n            />\n            <TextField\n              name=\"CoverNo\"\n              label=\"Cover No\"\n              size=\"small\"\n              value={policyState.CoverNo}\n              onChange={handleInputChange}\n              InputProps={{\n                style: { height: \"27px\", fontSize: \"14px\" },\n                readOnly: true,\n              }}\n              sx={{\n                width: \"100%\",\n                \".MuiFormLabel-root\": { fontSize: \"14px\" },\n                \".MuiFormLabel-root[data-shrink=false]\": {\n                  top: \"-5px\",\n                },\n              }}\n            />\n            <TextField\n              name=\"BLTFileNo\"\n              label=\"BLTFileNo\"\n              size=\"small\"\n              value={policyState.BLTFileNo}\n              onChange={handleInputChange}\n              InputProps={{\n                style: { height: \"27px\", fontSize: \"14px\" },\n                readOnly: true,\n              }}\n              sx={{\n                width: \"100%\",\n                \".MuiFormLabel-root\": { fontSize: \"14px\" },\n                \".MuiFormLabel-root[data-shrink=false]\": {\n                  top: \"-5px\",\n                },\n              }}\n            />\n            <TextField\n              name=\"BodyType\"\n              label=\"Body Type\"\n              size=\"small\"\n              value={policyState.BodyType}\n              onChange={handleInputChange}\n              InputProps={{\n                style: { height: \"27px\", fontSize: \"14px\" },\n                readOnly: true,\n              }}\n              sx={{\n                width: \"100%\",\n                \".MuiFormLabel-root\": { fontSize: \"14px\" },\n                \".MuiFormLabel-root[data-shrink=false]\": {\n                  top: \"-5px\",\n                },\n              }}\n            />\n            <TextField\n              name=\"Make\"\n              label=\"Make\"\n              size=\"small\"\n              value={policyState.Make}\n              onChange={handleInputChange}\n              InputProps={{\n                style: { height: \"27px\", fontSize: \"14px\" },\n                readOnly: true,\n              }}\n              sx={{\n                width: \"100%\",\n                \".MuiFormLabel-root\": { fontSize: \"14px\" },\n                \".MuiFormLabel-root[data-shrink=false]\": {\n                  top: \"-5px\",\n                },\n              }}\n            />\n            <TextField\n              name=\"ORNo\"\n              label=\"OR No.\"\n              size=\"small\"\n              value={policyState.ORNo}\n              onChange={handleInputChange}\n              InputProps={{\n                style: { height: \"27px\", fontSize: \"14px\" },\n                readOnly: true,\n              }}\n              sx={{\n                width: \"100%\",\n                \".MuiFormLabel-root\": { fontSize: \"14px\" },\n                \".MuiFormLabel-root[data-shrink=false]\": {\n                  top: \"-5px\",\n                },\n              }}\n            />\n          </div>\n          <div\n            style={{\n              display: \"grid\",\n              gap: \"15px\",\n              flex: \"1\",\n              gridTemplateColumns: \"repeat(4,1fr)\",\n            }}\n          >\n            <fieldset\n              style={{\n                display: \"flex\",\n                gap: \"15px\",\n                border: \"1px solid #cbd5e1\",\n                borderRadius: \"5px\",\n                gridTemplateColumns: \"repeat(4,1fr)\",\n                gridColumn: \"1 / span 3\",\n              }}\n            >\n              <legend>Client Payment</legend>\n              <TextField\n                name=\"totaDue\"\n                label=\"Total Due\"\n                size=\"small\"\n                value={policyState.totaDue}\n                onChange={handleInputChange}\n                InputProps={{\n                  style: { height: \"27px\", fontSize: \"14px\" },\n                  readOnly: true,\n                }}\n                sx={{\n                  width: \"100%\",\n                  \".MuiFormLabel-root\": { fontSize: \"14px\" },\n                  \".MuiFormLabel-root[data-shrink=false]\": {\n                    top: \"-5px\",\n                  },\n                }}\n              />\n              <TextField\n                name=\"totalpaid\"\n                label=\"Total Paid\"\n                size=\"small\"\n                value={policyState.totalpaid}\n                onChange={handleInputChange}\n                InputProps={{\n                  style: { height: \"27px\", fontSize: \"14px\" },\n                  readOnly: true,\n                }}\n                sx={{\n                  width: \"100%\",\n                  \".MuiFormLabel-root\": { fontSize: \"14px\" },\n                  \".MuiFormLabel-root[data-shrink=false]\": {\n                    top: \"-5px\",\n                  },\n                }}\n              />\n              <TextField\n                name=\"balance\"\n                label=\"Balance\"\n                size=\"small\"\n                value={policyState.balance}\n                onChange={handleInputChange}\n                InputProps={{\n                  style: { height: \"27px\", fontSize: \"14px\" },\n                  readOnly: true,\n                }}\n                sx={{\n                  width: \"100%\",\n                  \".MuiFormLabel-root\": { fontSize: \"14px\" },\n                  \".MuiFormLabel-root[data-shrink=false]\": {\n                    top: \"-5px\",\n                  },\n                }}\n              />\n            </fieldset>\n            <fieldset\n              style={{\n                display: \"flex\",\n                border: \"1px solid #cbd5e1\",\n                borderRadius: \"5px\",\n              }}\n            >\n              <legend>Insurance Payment</legend>\n              <TextField\n                name=\"remitted\"\n                label=\"Remitted\"\n                size=\"small\"\n                value={policyState.remitted}\n                onChange={handleInputChange}\n                InputProps={{\n                  style: { height: \"27px\", fontSize: \"14px\" },\n                  readOnly: true,\n                }}\n                sx={{\n                  width: \"100%\",\n                  \".MuiFormLabel-root\": { fontSize: \"14px\" },\n                  \".MuiFormLabel-root[data-shrink=false]\": {\n                    top: \"-5px\",\n                  },\n                }}\n              />\n            </fieldset>\n          </div>\n        </div>\n      </fieldset>\n      <div\n        style={{\n          marginTop: \"20px\",\n          border: \"1px solid #94a3b8\",\n          minHeight: \"600px\",\n        }}\n      >\n        <h1 style={{ textAlign: \"center\" }}>LIST OF CLAIMS</h1>\n        <div style={{ padding: \"20px\", display: \"flex\", flexWrap: \"wrap\" }}>\n          <table\n            style={{\n              borderCollapse: \"collapse\",\n              width: \"100%\",\n              fontSize: \"13px\",\n            }}\n            className=\"claim-list\"\n          >\n            <thead>\n              <tr style={{ borderBottom: \"1px solid black\" }}>\n                <th>ACTION</th>\n                <th>CLAIM TYPE</th>\n                <th>STATUS</th>\n                <th>DATE RECEIVED</th>\n                <th>DATE CLAIM</th>\n                <th>AMOUNT CLAIM</th>\n                <th>AMOUNT APPROVED</th>\n              </tr>\n            </thead>\n            <tbody>\n              {claimsSubmited.length > 0 &&\n                sortList(claimsSubmited)?.map((itm: any, idx: number) => {\n                  const statusArray = claimsStatus.sort();\n                  return (\n                    <tr key={idx}>\n                      <td className=\"left\">\n                        <Stack\n                          direction=\"row\"\n                          alignItems=\"center\"\n                          spacing={1}\n                          justifyContent={\"center\"}\n                        >\n                          <IconButton\n                            size=\"small\"\n                            color=\"secondary\"\n                            onClick={() => handleTdClick(itm)}\n                          >\n                            <VisibilityIcon fontSize=\"inherit\" />\n                          </IconButton>\n                          <IconButton\n                            size=\"small\"\n                            color=\"info\"\n                            onClick={() => {\n                              const title = document.createElement(\"h1\");\n                              const div = document.createElement(\"div\");\n                              const content = document.createElement(\"div\");\n                              title.textContent = \"Claim Summary\";\n                              const contentchild =\n                                document.createElement(\"div\");\n                              const buttonClose =\n                                document.createElement(\"button\");\n                              const body = document.body;\n\n                              const basic = itm.basicFileCustom.map(\n                                (d: any) => d.datakey\n                              );\n\n                              const uniqueBasicArray = basic.filter(\n                                (item: any, index: number) =>\n                                  basic.indexOf(item) === index\n                              );\n\n                              const other = itm.otherFileCustom.map(\n                                (d: any) => d.datakey\n                              );\n                              const uniqueOtherArray = other.filter(\n                                (item: any, index: number) =>\n                                  other.indexOf(item) === index\n                              );\n\n                              const insuranceFile = itm.insuranceFileCustom.map(\n                                (d: any) => d.datakey\n                              );\n\n                              const uniqueInsuranceArray = insuranceFile.filter(\n                                (item: any, index: number) =>\n                                  insuranceFile.indexOf(item) === index\n                              );\n\n                              const tableString = (\n                                <table style={{ fontSize: \"12px\" }}>\n                                  <tbody>\n                                    <tr>\n                                      <td className=\"datakey\">Claim Type</td>\n                                      <td>\n                                        {claimType[itm.policyState.claim_type]}\n                                      </td>\n                                    </tr>\n                                    <tr>\n                                      <td className=\"datakey\">Status</td>\n                                      <td>\n                                        {statusArray[itm.policyState.status]}\n                                      </td>\n                                    </tr>\n                                    <tr>\n                                      <td className=\"datakey\">Date Received</td>\n                                      <td>\n                                        {itm.policyState.DateReceived\n                                          ? format(\n                                              new Date(\n                                                itm.policyState.DateReceived\n                                              ),\n                                              \"yyyy/MM/dd\"\n                                            )\n                                          : \"Not Set\"}\n                                      </td>\n                                    </tr>\n                                    <tr>\n                                      <td className=\"datakey\">Date Claim</td>\n                                      <td>\n                                        {itm.policyState.DateClaim\n                                          ? format(\n                                              new Date(\n                                                itm.policyState.DateClaim\n                                              ),\n                                              \"yyyy/MM/dd\"\n                                            )\n                                          : \"Not Set\"}\n                                      </td>\n                                    </tr>\n                                    <tr>\n                                      <td className=\"datakey\">Amount Claim</td>\n                                      <td>\n                                        {itm.policyState.AmountClaim ?? \"\"}\n                                      </td>\n                                    </tr>\n                                    <tr>\n                                      <td className=\"datakey\">\n                                        Amount Approved\n                                      </td>\n                                      <td>\n                                        {itm.policyState.AmountApproved ?? \"\"}\n                                      </td>\n                                    </tr>\n                                    {itm.policyState.claim_type > 1 && (\n                                      <tr>\n                                        <td className=\"datakey\">\n                                          Name of Third Party\n                                        </td>\n                                        <td>{itm.policyState.NameTPPD}</td>\n                                      </tr>\n                                    )}\n                                    <tr\n                                      style={{\n                                        borderTop: \"1px solid black\",\n                                        borderBottom: \"1px solid black\",\n                                      }}\n                                    >\n                                      <td\n                                        colSpan={2}\n                                        style={{\n                                          fontWeight: \"bolder\",\n                                          padding: \"5px\",\n                                          color: \"#d97706\",\n                                        }}\n                                      >\n                                        Basic Document\n                                      </td>\n                                    </tr>\n                                    {basicDocuments.map((itm, idx) => {\n                                      return (\n                                        <tr key={idx}>\n                                          <td className=\"datakey\">\n                                            {itm.label}\n                                          </td>\n                                          <td>\n                                            {uniqueBasicArray.includes(\n                                              itm.name\n                                            ) ? (\n                                              <span style={{ color: \"green\" }}>\n                                                <svg\n                                                  xmlns=\"http://www.w3.org/2000/svg\"\n                                                  width=\"20px\"\n                                                  height=\"20px\"\n                                                  viewBox=\"0 0 24 24\"\n                                                  fill=\"none\"\n                                                >\n                                                  <path\n                                                    d=\"M4 14L9 19L20 8M6 8.88889L9.07692 12L16 5\"\n                                                    stroke=\"green\"\n                                                    strokeWidth=\"2\"\n                                                    strokeLinecap=\"round\"\n                                                    strokeLinejoin=\"round\"\n                                                  />\n                                                </svg>\n                                              </span>\n                                            ) : (\n                                              <span style={{ color: \"grey\" }}>\n                                                <svg\n                                                  xmlns=\"http://www.w3.org/2000/svg\"\n                                                  width=\"15px\"\n                                                  height=\"15px\"\n                                                  viewBox=\"0 0 24 24\"\n                                                  fill=\"none\"\n                                                >\n                                                  <path\n                                                    d=\"M20.7457 3.32851C20.3552 2.93798 19.722 2.93798 19.3315 3.32851L12.0371 10.6229L4.74275 3.32851C4.35223 2.93798 3.71906 2.93798 3.32854 3.32851C2.93801 3.71903 2.93801 4.3522 3.32854 4.74272L10.6229 12.0371L3.32856 19.3314C2.93803 19.722 2.93803 20.3551 3.32856 20.7457C3.71908 21.1362 4.35225 21.1362 4.74277 20.7457L12.0371 13.4513L19.3315 20.7457C19.722 21.1362 20.3552 21.1362 20.7457 20.7457C21.1362 20.3551 21.1362 19.722 20.7457 19.3315L13.4513 12.0371L20.7457 4.74272C21.1362 4.3522 21.1362 3.71903 20.7457 3.32851Z\"\n                                                    fill=\"grey\"\n                                                  />\n                                                </svg>\n                                              </span>\n                                            )}\n                                          </td>\n                                        </tr>\n                                      );\n                                    })}\n                                    <tr\n                                      style={{\n                                        borderTop: \"1px solid black\",\n                                        borderBottom: \"1px solid black\",\n                                      }}\n                                    >\n                                      <td\n                                        colSpan={2}\n                                        style={{\n                                          fontWeight: \"bolder\",\n                                          padding: \"5px\",\n                                          color: \"#d97706\",\n                                        }}\n                                      >\n                                        Other Document\n                                      </td>\n                                    </tr>\n                                    {renderFields()[\n                                      itm.policyState.claim_type\n                                    ].map((itm, idx) => {\n                                      return (\n                                        <tr key={idx}>\n                                          <td className=\"datakey\">\n                                            {itm.label}\n                                          </td>\n                                          <td>\n                                            {uniqueOtherArray.includes(\n                                              itm.name\n                                            ) ? (\n                                              <span style={{ color: \"green\" }}>\n                                                <svg\n                                                  xmlns=\"http://www.w3.org/2000/svg\"\n                                                  width=\"20px\"\n                                                  height=\"20px\"\n                                                  viewBox=\"0 0 24 24\"\n                                                  fill=\"none\"\n                                                >\n                                                  <path\n                                                    d=\"M4 14L9 19L20 8M6 8.88889L9.07692 12L16 5\"\n                                                    stroke=\"green\"\n                                                    strokeWidth=\"2\"\n                                                    strokeLinecap=\"round\"\n                                                    strokeLinejoin=\"round\"\n                                                  />\n                                                </svg>\n                                              </span>\n                                            ) : (\n                                              <span style={{ color: \"grey\" }}>\n                                                <svg\n                                                  xmlns=\"http://www.w3.org/2000/svg\"\n                                                  width=\"15px\"\n                                                  height=\"15px\"\n                                                  viewBox=\"0 0 24 24\"\n                                                  fill=\"none\"\n                                                >\n                                                  <path\n                                                    d=\"M20.7457 3.32851C20.3552 2.93798 19.722 2.93798 19.3315 3.32851L12.0371 10.6229L4.74275 3.32851C4.35223 2.93798 3.71906 2.93798 3.32854 3.32851C2.93801 3.71903 2.93801 4.3522 3.32854 4.74272L10.6229 12.0371L3.32856 19.3314C2.93803 19.722 2.93803 20.3551 3.32856 20.7457C3.71908 21.1362 4.35225 21.1362 4.74277 20.7457L12.0371 13.4513L19.3315 20.7457C19.722 21.1362 20.3552 21.1362 20.7457 20.7457C21.1362 20.3551 21.1362 19.722 20.7457 19.3315L13.4513 12.0371L20.7457 4.74272C21.1362 4.3522 21.1362 3.71903 20.7457 3.32851Z\"\n                                                    fill=\"grey\"\n                                                  />\n                                                </svg>\n                                              </span>\n                                            )}\n                                          </td>\n                                        </tr>\n                                      );\n                                    })}\n                                    <tr\n                                      style={{\n                                        borderTop: \"1px solid black\",\n                                        borderBottom: \"1px solid black\",\n                                      }}\n                                    >\n                                      <td\n                                        colSpan={2}\n                                        style={{\n                                          fontWeight: \"bolder\",\n                                          padding: \"5px\",\n                                          color: \"#d97706\",\n                                        }}\n                                      >\n                                        Insurance Documents\n                                      </td>\n                                    </tr>\n                                    {insuranceDocuments.map((itm, idx) => {\n                                      return (\n                                        <tr key={idx}>\n                                          <td className=\"datakey\">\n                                            {itm.label}\n                                          </td>\n                                          <td>\n                                            {uniqueInsuranceArray.includes(\n                                              itm.name\n                                            ) ? (\n                                              <span style={{ color: \"green\" }}>\n                                                <svg\n                                                  xmlns=\"http://www.w3.org/2000/svg\"\n                                                  width=\"20px\"\n                                                  height=\"20px\"\n                                                  viewBox=\"0 0 24 24\"\n                                                  fill=\"none\"\n                                                >\n                                                  <path\n                                                    d=\"M4 14L9 19L20 8M6 8.88889L9.07692 12L16 5\"\n                                                    stroke=\"green\"\n                                                    strokeWidth=\"2\"\n                                                    strokeLinecap=\"round\"\n                                                    strokeLinejoin=\"round\"\n                                                  />\n                                                </svg>\n                                              </span>\n                                            ) : (\n                                              <span style={{ color: \"grey\" }}>\n                                                <svg\n                                                  xmlns=\"http://www.w3.org/2000/svg\"\n                                                  width=\"15px\"\n                                                  height=\"15px\"\n                                                  viewBox=\"0 0 24 24\"\n                                                  fill=\"none\"\n                                                >\n                                                  <path\n                                                    d=\"M20.7457 3.32851C20.3552 2.93798 19.722 2.93798 19.3315 3.32851L12.0371 10.6229L4.74275 3.32851C4.35223 2.93798 3.71906 2.93798 3.32854 3.32851C2.93801 3.71903 2.93801 4.3522 3.32854 4.74272L10.6229 12.0371L3.32856 19.3314C2.93803 19.722 2.93803 20.3551 3.32856 20.7457C3.71908 21.1362 4.35225 21.1362 4.74277 20.7457L12.0371 13.4513L19.3315 20.7457C19.722 21.1362 20.3552 21.1362 20.7457 20.7457C21.1362 20.3551 21.1362 19.722 20.7457 19.3315L13.4513 12.0371L20.7457 4.74272C21.1362 4.3522 21.1362 3.71903 20.7457 3.32851Z\"\n                                                    fill=\"grey\"\n                                                  />\n                                                </svg>\n                                              </span>\n                                            )}\n                                          </td>\n                                        </tr>\n                                      );\n                                    })}\n                                  </tbody>\n                                </table>\n                              );\n                              const elementString =\n                                ReactDOMServer.renderToString(tableString);\n                              contentchild.innerHTML = elementString;\n\n                              div.appendChild(content);\n                              content.appendChild(buttonClose);\n                              content.appendChild(title);\n                              content.appendChild(contentchild);\n                              div.className = \"summary-modal \";\n                              content.className = \"content \";\n                              div.id = \"summary-modal\";\n\n                              buttonClose?.addEventListener(\"click\", () => {\n                                body.removeChild(div);\n                              });\n                              content?.addEventListener(\"click\", (e) => {\n                                e.stopPropagation();\n                              });\n\n                              div?.addEventListener(\"click\", () => {\n                                body.removeChild(div);\n                              });\n                              buttonClose.innerHTML = `\n                              <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewBox=\"0 0 24 24\" fill=\"none\">\n                              <path d=\"M20.7457 3.32851C20.3552 2.93798 19.722 2.93798 19.3315 3.32851L12.0371 10.6229L4.74275 3.32851C4.35223 2.93798 3.71906 2.93798 3.32854 3.32851C2.93801 3.71903 2.93801 4.3522 3.32854 4.74272L10.6229 12.0371L3.32856 19.3314C2.93803 19.722 2.93803 20.3551 3.32856 20.7457C3.71908 21.1362 4.35225 21.1362 4.74277 20.7457L12.0371 13.4513L19.3315 20.7457C19.722 21.1362 20.3552 21.1362 20.7457 20.7457C21.1362 20.3551 21.1362 19.722 20.7457 19.3315L13.4513 12.0371L20.7457 4.74272C21.1362 4.3522 21.1362 3.71903 20.7457 3.32851Z\" fill=\"#0F0F0F\"/>\n                              </svg>\n                              `;\n\n                              body.appendChild(div);\n                            }}\n                          >\n                            <ArticleIcon fontSize=\"inherit\" />\n                          </IconButton>\n                          <IconButton\n                            size=\"small\"\n                            color=\"error\"\n                            onClick={() => {\n                              Swal.fire({\n                                title: \"Are you sure?\",\n                                text: `You want to delete it!, won't be able to revert this!`,\n                                icon: \"warning\",\n                                showCancelButton: true,\n                                confirmButtonColor: \"#3085d6\",\n                                cancelButtonColor: \"#d33\",\n                                confirmButtonText: \"Yes, Delete it!\",\n                              }).then(async (result) => {\n                                if (result.isConfirmed) {\n                                  setClaimsSubmited((d) => {\n                                    d = d.filter((d: any) => d.id !== itm.id);\n                                    return d;\n                                  });\n                                }\n                              });\n                            }}\n                          >\n                            <DeleteIcon fontSize=\"inherit\" />\n                          </IconButton>\n                        </Stack>\n                      </td>\n                      <td onDoubleClick={() => handleTdClick(itm)}>\n                        {claimType[itm.policyState.claim_type]}\n                      </td>\n                      <td onDoubleClick={() => handleTdClick(itm)}>\n                        {statusArray[itm.policyState.status] === \"\"\n                          ? \"Status not set\"\n                          : statusArray[itm.policyState.status]}\n                      </td>\n                      <td\n                        onDoubleClick={() => handleTdClick(itm)}\n                        className=\"center\"\n                      >\n                        {itm.policyState.DateReceived\n                          ? format(\n                              new Date(itm.policyState.DateReceived),\n                              \"yyyy-MM-dd\"\n                            )\n                          : \"Date Received not set\"}\n                      </td>\n                      <td\n                        onDoubleClick={() => handleTdClick(itm)}\n                        className=\"center\"\n                      >\n                        {itm.policyState.DateClaim\n                          ? format(\n                              new Date(itm.policyState.DateClaim),\n                              \"yyyy-MM-dd\"\n                            )\n                          : \"Date Claim not set\"}\n                      </td>\n\n                      <td\n                        onDoubleClick={() => handleTdClick(itm)}\n                        className=\"center\"\n                      >\n                        {itm.policyState.AmountClaim === \"\"\n                          ? \"0.00\"\n                          : itm.policyState.AmountClaim}\n                      </td>\n                      <td\n                        onDoubleClick={() => handleTdClick(itm)}\n                        className=\"center\"\n                      >\n                        {itm.policyState.AmountApproved === \"\"\n                          ? \"0.00\"\n                          : itm.policyState.AmountApproved}\n                      </td>\n                    </tr>\n                  );\n                })}\n            </tbody>\n          </table>\n        </div>\n      </div>\n      {SearchClaimModal}\n      {showModal && (\n        <div\n          style={{\n            position: \"absolute\",\n            top: 0,\n            bottom: 0,\n            left: 0,\n            right: 0,\n            background: \"rgba(158, 155, 157, 0.31)\",\n            zIndex: \"999\",\n            display: \"flex\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n          }}\n        >\n          <div\n            style={{\n              width: \"90%\",\n              height: \"90%\",\n              overflow: \"auto\",\n              background: \"white\",\n              padding: \"20px\",\n              margin: \"auto\",\n              zIndex: \"9929\",\n              boxShadow: \" -1px 1px 13px 6px rgba(0,0,0,0.54)\",\n            }}\n          >\n            <ClaimModal\n              handleCloseModal={() => {\n                setShowModal(false);\n              }}\n              setClaimsSubmited={setClaimsSubmited}\n              claim_no={claimState.claim_no}\n              policyState={policyState}\n              policyDispatch={policyDispatch}\n              claimDispatch={claimDispatch}\n            />\n          </div>\n        </div>\n      )}\n      {isLoadingSelectedSearch && (\n        <div\n          style={{\n            position: \"absolute\",\n            top: \"0\",\n            left: \"0\",\n            right: \"0\",\n            bottom: \"0\",\n            background: \"rgba(158, 155, 157, 0.31)\",\n            zIndex: \"999\",\n            display: \"flex\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n          }}\n        >\n          <img\n            src={`${process.env.REACT_APP_IMAGE_URL}image/loading.gif`}\n            style={{ width: \"80px\", height: \"80px\" }}\n            alt=\"we\"\n          />\n        </div>\n      )}\n      {PolicyModal}\n    </div>\n  );\n}\n\nfunction ClaimModal({\n  handleCloseModal,\n  setClaimsSubmited,\n  claim_no,\n  policyDispatch,\n  policyState,\n  claimDispatch,\n}: any) {\n  const otherFileInputRef = useRef<any>(null);\n  const DateReceivedRef = useRef<HTMLDivElement>(null);\n  const DateClaimceivedRef = useRef<HTMLDivElement>(null);\n  const AmountClaimInputRef = useRef<HTMLInputElement>(null);\n  const AmountApprovedInputRef = useRef<HTMLInputElement>(null);\n  const handleInputChange = (e: any) => {\n    const { name, value } = e.target;\n    policyDispatch({ type: \"UPDATE_FIELD\", field: name, value });\n  };\n  const handleModalSave = () => {\n    Swal.fire({\n      title: \"Are you sure?\",\n      text: `You want to save it!, won't be able to revert this!`,\n      icon: \"warning\",\n      showCancelButton: true,\n      confirmButtonColor: \"#3085d6\",\n      cancelButtonColor: \"#d33\",\n      confirmButtonText: \"Yes, Save it!\",\n    }).then(async (result) => {\n      function filetransfer(arr: Array<any>, fileBasicPromises: Array<any>) {\n        const dataFile: any = [];\n        arr.forEach((itm) => {\n          const input: any = document.querySelector(`#${itm.name} input`);\n          const files = input.files;\n          dataFile.push({\n            files,\n            datakey: itm.name,\n          });\n          if (files.length > 0) {\n            for (let i = 0; i < files.length; i++) {\n              const file = files[i];\n              const reader = new FileReader();\n              fileBasicPromises.push(\n                new Promise((resolve, reject) => {\n                  reader.onload = function (event) {\n                    resolve({\n                      datakey: itm.name,\n                      fileName: file.name,\n                      fileContent: event.target?.result,\n                      fileType: file.type,\n                      file,\n                    });\n                  };\n                  reader.onerror = function (event) {\n                    reject(new Error(\"Error reading file: \" + file.name));\n                  };\n                  reader.readAsDataURL(file);\n                })\n              );\n            }\n          }\n        });\n        return fileBasicPromises;\n      }\n      if (result.isConfirmed) {\n        const fileBasicPromises: Array<any> = [];\n        filetransfer(basicDocuments, fileBasicPromises);\n\n        let fileOtherPromises: Array<any> = [];\n        renderFields().forEach((parent) => {\n          filetransfer(parent, fileOtherPromises);\n        });\n\n        const fileInsurancePromises: Array<any> = [];\n        filetransfer(insuranceDocuments, fileInsurancePromises);\n\n        const basicFileCustom = await Promise.all(fileBasicPromises);\n        const otherFileCustom = await Promise.all(fileOtherPromises);\n        const insuranceFileCustom = await Promise.all(fileInsurancePromises);\n\n        setClaimsSubmited((d: any) => {\n          let id = \"\";\n\n          if (claim_no && claim_no.trim() !== \"\") {\n            id = claim_no;\n            d = d.filter((itm: any) => itm.id !== claim_no);\n          } else {\n            id = padNumber(d.length + 1, 3);\n          }\n\n          d.push({\n            id,\n            policyState,\n            basicFileCustom,\n            otherFileCustom,\n            insuranceFileCustom,\n          });\n          return d;\n        });\n        claimDispatch({\n          type: \"UPDATE_FIELD\",\n          field: \"claim_no\",\n          value: \"\",\n        });\n        handleInputChange({\n          target: {\n            name: \"claim_type\",\n            value: 0,\n          },\n        });\n        handleInputChange({\n          target: {\n            name: \"status\",\n            value: 0,\n          },\n        });\n        handleCloseModal();\n      }\n      function padNumber(number: number, length: number) {\n        return String(number).padStart(length, \"0\");\n      }\n    });\n  };\n\n  return (\n    <>\n      <div\n        style={{\n          width: \"100%\",\n          height: \"auto\",\n          position: \"relative\",\n        }}\n      >\n        <div\n          style={{\n            height: \"30px\",\n            marginBottom: \"20px\",\n            display: \"flex\",\n            justifyContent: \"space-between\",\n            gap: \"10px\",\n          }}\n        >\n          <div\n            style={{\n              width: \"100%\",\n              display: \"flex\",\n              gap: \"10px\",\n              justifyContent: \"flex-end\",\n              padding: \"10px 20px\",\n            }}\n          >\n            <div\n              style={{\n                display: \"flex\",\n                columnGap: \"10px\",\n              }}\n            >\n              <Button\n                id=\"basic-button\"\n                aria-haspopup=\"true\"\n                sx={{\n                  height: \"30px\",\n                  fontSize: \"11px\",\n                }}\n                variant=\"contained\"\n                color=\"success\"\n                onClick={handleModalSave}\n              >\n                SAVE\n              </Button>\n              <Button\n                id=\"basic-button\"\n                aria-haspopup=\"true\"\n                sx={{\n                  height: \"30px\",\n                  fontSize: \"11px\",\n                }}\n                variant=\"contained\"\n                color=\"error\"\n                onClick={() => {\n                  Swal.fire({\n                    title: \"Are you sure?\",\n                    text: `You want to cancel it!, won't be able to revert this!`,\n                    icon: \"warning\",\n                    showCancelButton: true,\n                    confirmButtonColor: \"#3085d6\",\n                    cancelButtonColor: \"#d33\",\n                    confirmButtonText: \"Yes, Cancel it!\",\n                  }).then(async (result) => {\n                    if (result.isConfirmed) {\n                      claimDispatch({\n                        type: \"UPDATE_FIELD\",\n                        field: \"claim_no\",\n                        value: \"\",\n                      });\n                      handleInputChange({\n                        target: {\n                          name: \"claim_type\",\n                          value: 0,\n                        },\n                      });\n                      handleInputChange({\n                        target: {\n                          name: \"status\",\n                          value: 0,\n                        },\n                      });\n                      handleCloseModal();\n                      return;\n                    }\n                  });\n                }}\n              >\n                CANCEL\n              </Button>\n            </div>\n          </div>\n        </div>\n        <div>\n          <div style={{ display: \"flex\", gap: \"10px\", flexWrap: \"wrap\" }}>\n            <FormControl\n              sx={{\n                width: \"300px\",\n                marginRight: \"10px\",\n                \".MuiFormLabel-root\": {\n                  fontSize: \"14px\",\n                  background: \"white\",\n                  zIndex: 99,\n                  padding: \"0 3px\",\n                },\n                \".MuiFormLabel-root[data-shrink=false]\": { top: \"-12px\" },\n              }}\n            >\n              <InputLabel id=\"claim-type\">Claim Types</InputLabel>\n              <Select\n                labelId=\"claim-type\"\n                value={policyState.claim_type}\n                onChange={(e) => {\n                  handleInputChange(e);\n                  otherFileInputRef.current?.resetFileUpload();\n                }}\n                label=\"Claim Types\"\n                size=\"small\"\n                name=\"claim_type\"\n                sx={{\n                  height: \"27px\",\n                  fontSize: \"14px\",\n                }}\n                fullWidth\n              >\n                {claimType.map((itm, idx) => {\n                  return (\n                    <MenuItem key={idx} value={idx}>\n                      {itm}\n                    </MenuItem>\n                  );\n                })}\n              </Select>\n            </FormControl>\n            <FormControl\n              sx={{\n                width: \"300px\",\n                marginRight: \"10px\",\n                \".MuiFormLabel-root\": {\n                  fontSize: \"14px\",\n                  background: \"white\",\n                  zIndex: 99,\n                  padding: \"0 3px\",\n                },\n                \".MuiFormLabel-root[data-shrink=false]\": { top: \"-12px\" },\n              }}\n            >\n              <InputLabel id=\"status\">Status</InputLabel>\n              <Select\n                labelId=\"status\"\n                value={policyState.status}\n                onChange={handleInputChange}\n                label=\"Status\"\n                size=\"small\"\n                name=\"status\"\n                sx={{\n                  height: \"27px\",\n                  fontSize: \"14px\",\n                }}\n                fullWidth\n              >\n                {claimsStatus.sort().map((itm, idx) => {\n                  return (\n                    <MenuItem key={idx} value={idx}>\n                      {itm}\n                    </MenuItem>\n                  );\n                })}\n              </Select>\n            </FormControl>\n            <CustomDatePicker\n              textField={{\n                InputLabelProps: {\n                  style: {\n                    fontSize: \"14px\",\n                  },\n                },\n                InputProps: {\n                  style: { height: \"27px\", fontSize: \"14px\" },\n                },\n              }}\n              label=\"Date Received\"\n              onChange={(value: any) => {\n                policyDispatch({\n                  type: \"UPDATE_FIELD\",\n                  field: \"DateReceived\",\n                  value: value,\n                });\n              }}\n              value={\n                policyState.DateReceived\n                  ? new Date(policyState.DateReceived)\n                  : null\n              }\n              onKeyDown={(e: any) => {\n                if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n                  const timeout = setTimeout(() => {\n                    DateReceivedRef.current?.querySelector(\"button\")?.click();\n                    clearTimeout(timeout);\n                  }, 150);\n                }\n              }}\n              datePickerRef={DateReceivedRef}\n            />\n            <CustomDatePicker\n              textField={{\n                InputLabelProps: {\n                  style: {\n                    fontSize: \"14px\",\n                  },\n                },\n                InputProps: {\n                  style: { height: \"27px\", fontSize: \"14px\" },\n                },\n              }}\n              label=\"Date of Claim\"\n              onChange={(value: any) => {\n                policyDispatch({\n                  type: \"UPDATE_FIELD\",\n                  field: \"DateClaim\",\n                  value: value,\n                });\n              }}\n              value={\n                policyState.DateClaim ? new Date(policyState.DateClaim) : null\n              }\n              onKeyDown={(e: any) => {\n                if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n                  const timeout = setTimeout(() => {\n                    DateClaimceivedRef.current\n                      ?.querySelector(\"button\")\n                      ?.click();\n                    clearTimeout(timeout);\n                  }, 150);\n                }\n              }}\n              datePickerRef={DateClaimceivedRef}\n            />\n            <TextField\n              label=\"Amount Claim\"\n              size=\"small\"\n              name=\"AmountClaim\"\n              value={policyState.AmountClaim}\n              onChange={handleInputChange}\n              onBlur={() => {\n                policyDispatch({\n                  type: \"UPDATE_FIELD\",\n                  field: \"AmountClaim\",\n                  value: parseFloat(\n                    (policyState.AmountClaim === \"\"\n                      ? \"0\"\n                      : policyState.AmountClaim\n                    ).replace(/,/g, \"\")\n                  ).toFixed(2),\n                });\n              }}\n              InputProps={{\n                inputComponent: NumericFormatCustom as any,\n                inputRef: AmountClaimInputRef,\n                style: { height: \"27px\", fontSize: \"14px\" },\n              }}\n              sx={{\n                width: \"160px\",\n                \".MuiFormLabel-root\": { fontSize: \"14px\" },\n                \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n              }}\n            />\n            <TextField\n              label=\"Amount Approved\"\n              size=\"small\"\n              name=\"AmountApproved\"\n              value={policyState.AmountApproved}\n              onChange={handleInputChange}\n              onBlur={() => {\n                policyDispatch({\n                  type: \"UPDATE_FIELD\",\n                  field: \"AmountApproved\",\n                  value: parseFloat(\n                    (policyState.AmountApproved === \"\"\n                      ? \"0\"\n                      : policyState.AmountApproved\n                    ).replace(/,/g, \"\")\n                  ).toFixed(2),\n                });\n              }}\n              InputProps={{\n                inputComponent: NumericFormatCustom as any,\n                inputRef: AmountApprovedInputRef,\n                style: { height: \"27px\", fontSize: \"14px\" },\n              }}\n              sx={{\n                width: \"160px\",\n                \".MuiFormLabel-root\": { fontSize: \"14px\" },\n                \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n              }}\n            />\n            {policyState.claim_type > 1 && (\n              <TextField\n                name=\"NameTPPD\"\n                label=\"Name of Third Party\"\n                size=\"small\"\n                value={policyState.NameTPPD}\n                onChange={handleInputChange}\n                InputProps={{\n                  style: {\n                    height: \"27px\",\n                    fontSize: \"14px\",\n                    color: \"whie\",\n                  },\n                }}\n                sx={{\n                  width: \"400px\",\n                  \".MuiFormLabel-root\": { fontSize: \"14px\" },\n                  \".MuiFormLabel-root[data-shrink=false]\": {\n                    top: \"-5px\",\n                  },\n                }}\n              />\n            )}\n          </div>\n          <fieldset\n            style={{\n              marginTop: \"10px\",\n              display: \"flex\",\n              columnGap: \"10px\",\n              padding: \"15px\",\n              border: \"1px solid #cbd5e1\",\n              borderRadius: \"5px\",\n            }}\n          >\n            <legend>Basic Documents</legend>\n            <BasicDocument state={policyState} />\n          </fieldset>\n          <fieldset\n            style={{\n              marginTop: \"10px\",\n              display: \"flex\",\n              columnGap: \"10px\",\n              padding: \"15px\",\n              border: \"1px solid #cbd5e1\",\n              borderRadius: \"5px\",\n            }}\n          >\n            <legend>Other Documents</legend>\n            <OtherDocument\n              state={policyState}\n              otherFileInputRef={otherFileInputRef}\n            />\n          </fieldset>\n          <fieldset\n            style={{\n              marginTop: \"10px\",\n              display: \"flex\",\n              columnGap: \"10px\",\n              padding: \"15px\",\n              border: \"1px solid #cbd5e1\",\n              borderRadius: \"5px\",\n            }}\n          >\n            <legend>Insurance Documents</legend>\n            <InsuranceDocument state={policyState} />\n          </fieldset>\n        </div>\n      </div>\n    </>\n  );\n}\nfunction BasicDocument({ state }: any) {\n  const [activeListBasicDocument, setActiveListBasicDocument] =\n    useState(\"policyFile\");\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        width: \"100%\",\n        height: \"500px\",\n        maxHeight: \"500px\",\n        flexDirection: \"column\",\n      }}\n    >\n      <div\n        style={{\n          display: \"flex\",\n          paddingRight: \"10px\",\n          minWidth: \"300px\",\n        }}\n      >\n        {basicDocuments.map((itm, idx) => {\n          return (\n            <MyButton\n              key={idx}\n              itm={itm}\n              setActiveListBasicDocument={setActiveListBasicDocument}\n              activeListBasicDocument={activeListBasicDocument}\n              disabled={state.mode === \"\"}\n            />\n          );\n        })}\n      </div>\n      {basicDocuments.map((itm, idx) => {\n        return (\n          <div\n            key={idx}\n            style={{\n              flex: 1,\n              width: \"100%\",\n              position: \"relative\",\n              display: itm.name === activeListBasicDocument ? \"block\" : \"none\",\n            }}\n            id={itm.name}\n          >\n            <FileUploadInput />\n          </div>\n        );\n      })}\n    </div>\n  );\n}\nexport default Claims;\nfunction OtherDocument({ state, otherFileInputRef }: any) {\n  const [activeListBasicDocument, setActiveListBasicDocument] =\n    useState(\"policyFile\");\n\n  useEffect(() => {\n    const data = renderFields();\n    setActiveListBasicDocument(data[state.claim_type][0].name);\n  }, [state.claim_type]);\n\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        width: \"100%\",\n        height: \"500px\",\n        maxHeight: \"500px\",\n        flexDirection: \"column\",\n      }}\n    >\n      <div\n        style={{\n          display: \"flex\",\n          paddingRight: \"10px\",\n          minWidth: \"300px\",\n        }}\n      >\n        {renderFields().map((r, Ridx) => {\n          return (\n            <div\n              key={Ridx}\n              style={{\n                display: state.claim_type === Ridx ? \"block\" : \"none\",\n              }}\n            >\n              {r.map((c, cIdx) => {\n                return (\n                  <MyButton\n                    key={cIdx}\n                    itm={c}\n                    setActiveListBasicDocument={setActiveListBasicDocument}\n                    activeListBasicDocument={activeListBasicDocument}\n                    disabled={state.mode === \"\"}\n                  />\n                );\n              })}\n            </div>\n          );\n        })}\n      </div>\n      {renderFields().map((r, Ridx) => {\n        return (\n          <React.Fragment key={Ridx}>\n            {r.map((c, cIdx) => {\n              return (\n                <div\n                  key={cIdx}\n                  style={{\n                    flex: 1,\n                    width: \"100%\",\n                    position: \"relative\",\n                    display:\n                      c.name === activeListBasicDocument ? \"block\" : \"none\",\n                  }}\n                  id={c.name}\n                >\n                  <FileUploadInput ref={otherFileInputRef} />\n                </div>\n              );\n            })}\n          </React.Fragment>\n        );\n      })}\n    </div>\n  );\n}\nfunction InsuranceDocument({ state }: any) {\n  const [activeListBasicDocument, setActiveListBasicDocument] = useState(\"loa\");\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        width: \"100%\",\n        height: \"500px\",\n        maxHeight: \"500px\",\n        flexDirection: \"column\",\n      }}\n    >\n      <div\n        style={{\n          display: \"flex\",\n          paddingRight: \"10px\",\n          minWidth: \"300px\",\n        }}\n      >\n        {insuranceDocuments.map((itm, idx) => {\n          return (\n            <MyButton\n              key={idx}\n              itm={itm}\n              setActiveListBasicDocument={setActiveListBasicDocument}\n              activeListBasicDocument={activeListBasicDocument}\n              disabled={state.mode === \"\"}\n            />\n          );\n        })}\n      </div>\n      {insuranceDocuments.map((itm, idx) => {\n        return (\n          <div\n            key={idx}\n            style={{\n              flex: 1,\n              width: \"100%\",\n              position: \"relative\",\n              display: itm.name === activeListBasicDocument ? \"block\" : \"none\",\n            }}\n            id={itm.name}\n          >\n            <FileUploadInput />\n          </div>\n        );\n      })}\n    </div>\n  );\n}\nfunction MyButton({\n  setActiveListBasicDocument,\n  activeListBasicDocument,\n  itm,\n  disabled,\n}: any) {\n  const [isHovered, setIsHovered] = useState(false);\n  const handleMouseEnter = () => {\n    setIsHovered(true);\n  };\n\n  const handleMouseLeave = () => {\n    setIsHovered(false);\n  };\n\n  return (\n    <button\n      onClick={() => {\n        setActiveListBasicDocument(itm.name);\n      }}\n      onMouseEnter={handleMouseEnter}\n      onMouseLeave={handleMouseLeave}\n      style={{\n        padding: \"10px\",\n        fontSize: \"13px\",\n        cursor: \"pointer\",\n        background:\n          activeListBasicDocument === itm.name\n            ? \"black\"\n            : isHovered\n            ? \"#f1f5f9\"\n            : \"transparent\",\n        color: activeListBasicDocument === itm.name ? \"white\" : \"black\",\n        border: \"none\",\n        textAlign: \"left\",\n      }}\n    >\n      {itm.label}\n    </button>\n  );\n}\nexport function setNewStateValue(dispatch: any, obj: any) {\n  Object.entries(obj).forEach(([field, value]) => {\n    dispatch({ type: \"UPDATE_FIELD\", field, value });\n  });\n}\nexport const FileUploadInput = forwardRef((props, ref) => {\n  const [selectedFiles, setSelectedFiles] = useState<Array<File>>([]);\n  const id = useId();\n  const fileInput = useRef<HTMLInputElement>(null);\n  const [isDragging, setIsDragging] = useState(false);\n  const handleDragLeave = (e: React.DragEvent<HTMLDivElement>) => {\n    e.preventDefault();\n    setIsDragging(false);\n  };\n  const handleDragEnter = (e: React.DragEvent<HTMLDivElement>) => {\n    e.preventDefault();\n    setIsDragging(true);\n  };\n  const handleDrop = (e: React.DragEvent<HTMLDivElement>) => {\n    e.preventDefault();\n    const fileList = e.dataTransfer.files;\n    const files = Array.from(fileList);\n    const newFiles = [...selectedFiles, ...files];\n    setIsDragging(false);\n    if (checkFile(newFiles)) {\n      fileInput.current?.click();\n      return alert(\"file is not valid Extention!\");\n    } else {\n      setSelectedFiles(newFiles);\n    }\n  };\n  const handleFileChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const fileList = e.target.files as FileList;\n\n    const files = Array.from(fileList);\n    const newFiles = [...selectedFiles, ...files];\n    if (checkFile(newFiles)) {\n      return alert(\"file is not valid Extention!\");\n    }\n    setSelectedFiles(newFiles);\n  };\n\n  useEffect(() => {\n    if (selectedFiles.length <= 0) return;\n    function arrayToFileList(filesArray: Array<File>) {\n      const dataTransfer = new DataTransfer();\n      filesArray.forEach((file) => {\n        dataTransfer.items.add(file);\n      });\n      return dataTransfer.files;\n    }\n    const fileList = arrayToFileList(selectedFiles);\n    if (fileInput.current) {\n      fileInput.current.files = fileList;\n    }\n  }, [selectedFiles]);\n\n  useImperativeHandle(ref, () => ({\n    resetFileUpload: () => {\n      setSelectedFiles([]);\n    },\n  }));\n\n  return (\n    <>\n      <button\n        onClick={() => {\n          setSelectedFiles([]);\n          const form = document.getElementById(id)\n            ?.parentElement as HTMLFormElement;\n          form.reset();\n        }}\n        id=\"reset-buton\"\n        style={{\n          display: \"none\",\n        }}\n      >\n        resetALl\n      </button>\n      <div>\n        <div\n          style={{\n            display: \"flex\",\n            flexWrap: \"wrap\",\n            gap: \"5px\",\n            height: \"400px\",\n            width: \"100%\",\n            background: \"#f8fafc\",\n            overflow: \"auto\",\n            border: isDragging ? \"1px solid #c026d3\" : \"1px solid #cbd5e1\",\n            boxSizing: \"border-box\",\n            padding: \"10px\",\n          }}\n          onDragEnter={handleDragEnter}\n          onDragOver={(e) => e.preventDefault()}\n          onDragLeave={handleDragLeave}\n          onDrop={handleDrop}\n        >\n          <div\n            style={{\n              height: \"auto\",\n              width: \"100%\",\n              display: \"flex\",\n              flexWrap: \"wrap\",\n              ...(selectedFiles.length <= 0 && {\n                alignItems: \"center\",\n                textAlign: \"center\",\n                justifyContent: \"center\",\n              }),\n              gap: \"10px\",\n              marginBottom: \"50px\",\n            }}\n            onDragEnter={handleDragEnter}\n            onDragOver={(e) => e.preventDefault()}\n            onDragLeave={handleDragLeave}\n            onDrop={handleDrop}\n          >\n            {selectedFiles.length <= 0 ? (\n              <CloudUploadIcon\n                sx={{ fontSize: \"8em\", color: \"#d1d5db\", zIndex: \"2\" }}\n              />\n            ) : (\n              selectedFiles.map((itm, idx) => {\n                return (\n                  <DisplayFile\n                    key={idx}\n                    itm={itm}\n                    selectedFiles={selectedFiles}\n                    setSelectedFiles={setSelectedFiles}\n                    fileInput={fileInput}\n                  />\n                );\n              })\n            )}\n          </div>\n        </div>\n        <div\n          style={{\n            position: \"absolute\",\n            top: \"50%\",\n            left: \"50%\",\n            transform: \"translate(-50%,-50%)\",\n          }}\n          draggable={false}\n        ></div>\n      </div>\n      <form\n        style={{\n          position: \"absolute\",\n          bottom: \"1px\",\n          left: \"1px\",\n          right: \"1px\",\n          zIndex: \"4\",\n        }}\n      >\n        <label\n          style={{\n            display: \"block\",\n            fontSize: \"13px\",\n            fontWeight: \"500\",\n            textAlign: \"center\",\n            cursor: \"pointer\",\n            padding: \" 10px\",\n            background: \"#0d9488\",\n            color: \"white\",\n          }}\n          htmlFor={id}\n        >\n          Click to Upload File\n        </label>\n        <input\n          ref={fileInput}\n          style={{ display: \"none\" }}\n          id={id}\n          type=\"file\"\n          onChange={handleFileChange}\n          accept=\".jpg,.jpeg,.png,.pdf\"\n          multiple\n        />\n      </form>\n    </>\n  );\n});\nexport function DisplayFile({\n  itm,\n  selectedFiles,\n  setSelectedFiles,\n  fileInput,\n}: {\n  itm: File;\n  selectedFiles: Array<File>;\n  setSelectedFiles: React.Dispatch<React.SetStateAction<File[]>>;\n  fileInput: React.RefObject<HTMLInputElement>;\n}) {\n  const objectUrl = URL.createObjectURL(itm);\n  return (\n    <div\n      id=\"image-card\"\n      style={{\n        position: \"relative\",\n        width: \"200px\",\n        height: \"200px\",\n        textAlign: \"center\",\n        boxShadow: \"10px 10px 28px -7px rgba(0,0,0,0.75)\",\n        border: \"1px solid #cbd5e1\",\n      }}\n    >\n      {itm.type.startsWith(\"image/\") ? (\n        <div\n          style={{\n            width: \"100%\",\n            height: \"100%\",\n            display: \"flex\",\n            alignItems: \"center\",\n          }}\n        >\n          <img\n            src={objectUrl}\n            alt=\"img-sss\"\n            style={{ width: \"100%\", height: \"auto\" }}\n          />\n        </div>\n      ) : (\n        <iframe\n          title=\"dasdseasd\"\n          src={objectUrl}\n          style={{ width: \"100%\" }}\n        ></iframe>\n      )}\n      <div\n        style={{\n          position: \"absolute\",\n          bottom: \"0\",\n          left: \"0\",\n          right: \"0\",\n          background: \"white\",\n          padding: \"5px\",\n          display: \"flex\",\n          columnGap: \"10px\",\n          justifyContent: \"center\",\n        }}\n      >\n        <IconButton\n          color=\"primary\"\n          edge=\"end\"\n          onClick={() => {\n            window.open(objectUrl, \"_blank\");\n          }}\n        >\n          <RemoveRedEyeIcon />\n        </IconButton>\n        <IconButton\n          color=\"success\"\n          edge=\"end\"\n          onClick={() => {\n            var downloadLink: any = document.createElement(\"a\");\n            downloadLink.href = objectUrl;\n            downloadLink.download = itm.name;\n            downloadLink.click();\n          }}\n        >\n          <CloudDownloadIcon />\n        </IconButton>\n        <IconButton\n          color=\"error\"\n          edge=\"end\"\n          onClick={() => {\n            const filesToRemove = [itm.name];\n            const filteredFiles = selectedFiles.filter((file) => file !== itm);\n            setSelectedFiles(filteredFiles);\n            const newFileList = filterFileList(\n              fileInput.current?.files as FileList,\n              filesToRemove\n            );\n            if (fileInput.current && fileInput.current.files) {\n              fileInput.current.files = newFileList;\n            }\n            function filterFileList(\n              fileList: FileList,\n              filesToRemove: Array<string>\n            ) {\n              const dataTransfer = new DataTransfer();\n              for (let i = 0; i < fileList.length; i++) {\n                if (!filesToRemove.includes(fileList[i].name)) {\n                  dataTransfer.items.add(fileList[i]);\n                }\n              }\n              return dataTransfer.files;\n            }\n          }}\n        >\n          <HighlightOffIcon />\n        </IconButton>\n      </div>\n    </div>\n  );\n}\n\nexport function checkFile(newFiles: Array<File>) {\n  let isNotExt = false;\n  const fileTypes = [\"application/pdf\", \"image/jpg\", \"image/jpeg\", \"image/png\"];\n  const newFileTpes = newFiles.map((itm) => itm.type);\n  newFileTpes.forEach((fileType) => {\n    if (!fileTypes.includes(fileType)) {\n      isNotExt = true;\n      return;\n    }\n  });\n  return isNotExt;\n}\n","import { useContext, useState } from \"react\";\nimport { useQuery } from \"react-query\";\nimport { AuthContext, User } from \"../components/AuthContext\";\nimport {\n  GridRowSelectionModel,\n  GridCellParams,\n  GridTreeNode,\n} from \"@mui/x-data-grid\";\nimport ModalWithTable from \"../components/ModalWithTable\";\nimport { flushSync } from \"react-dom\";\nimport { AxiosResponse, AxiosInstance } from \"axios\";\nimport { GridRowParams } from \"@mui/x-data-grid\";\ninterface QueryModalTableParamsType {\n  link?: {\n    url: string;\n    queryUrlName: string;\n  };\n  uniqueId: string;\n  queryKey: string;\n  responseDataKey: string;\n  columns: Array<any>;\n  onSelected?: (selectedRowData: Array<any>, data: Array<any>) => void;\n  onRemoveSelected?: (data: Array<any>) => void;\n  onSuccess?: (data: any) => void;\n  searchRef?: React.RefObject<HTMLInputElement>;\n  onCellKeyDown?: any;\n  onCloseFunction?: (search: any) => void;\n  CustomizeAxios?: (\n    myAxios: AxiosInstance,\n    user: User | null,\n    link: QueryModalTableParamsType[\"link\"],\n    search?: string\n  ) => Promise<AxiosResponse<any, any>>;\n  isRowSelectable?: ((params: GridRowParams<any>) => boolean) | undefined;\n  getCellClassName?:\n    | ((params: GridCellParams<any, any, any, GridTreeNode>) => string)\n    | undefined;\n}\n\nasync function CustomizeAxiosFunc(\n  myAxios: AxiosInstance,\n  user: User | null,\n  link: QueryModalTableParamsType[\"link\"],\n  search: string = \"\"\n) {\n  return myAxios.get(`${link?.url}?${link?.queryUrlName}=${search}`, {\n    headers: {\n      Authorization: `Bearer ${user?.accessToken}`,\n    },\n  });\n}\n\nconst useQueryModalTable = ({\n  link,\n  uniqueId,\n  queryKey,\n  responseDataKey,\n  columns,\n  onSelected = () => {},\n  onRemoveSelected = () => {},\n  onSuccess = () => {},\n  searchRef,\n  onCellKeyDown,\n  onCloseFunction = () => {},\n  CustomizeAxios = CustomizeAxiosFunc,\n  isRowSelectable,\n  getCellClassName,\n}: QueryModalTableParamsType) => {\n  const { myAxios, user } = useContext(AuthContext);\n  const [show, setShowModal] = useState(false);\n  const [rows, setRows] = useState<GridRowSelectionModel>([]);\n  async function customizeAxiostool(search: string = \"\") {\n    return await CustomizeAxios(myAxios, user, link, search);\n  }\n  const { isLoading, refetch } = useQuery({\n    queryKey: queryKey,\n    queryFn: async () => await customizeAxiostool(),\n    onSuccess: (res) => {\n      const response = res as any;\n      setRows(response.data[responseDataKey]);\n      onSuccess(response);\n    },\n    refetchOnWindowFocus: false,\n  });\n\n  const openModal = (search: string = \"\") => {\n    flushSync(() => {\n      setShowModal(true);\n    });\n    if (searchRef?.current) {\n      searchRef.current.value = search;\n      customizeAxiostool(search).then((res: any) => {\n        if (!res?.data.success) {\n          return alert(`Error : ${res?.data.message}`);\n        }\n        const response = res as any;\n        setRows(response.data[responseDataKey]);\n        if (searchRef?.current) searchRef.current.focus();\n      });\n    }\n  };\n\n  const closeModal = () => {\n    setShowModal(false);\n    if (onCloseFunction) {\n      onCloseFunction(searchRef?.current?.value);\n    }\n  };\n\n  const ModalComponent = (\n    <ModalWithTable\n      getCellClassName={getCellClassName}\n      searchRef={searchRef}\n      showModal={show}\n      onCloseModal={() => {\n        setShowModal(false);\n        if (onCloseFunction) {\n          onCloseFunction(searchRef?.current?.value);\n        }\n      }}\n      onClickCloseIcon={() => {\n        setShowModal(false);\n        if (onCloseFunction) {\n          onCloseFunction(searchRef?.current?.value);\n        }\n      }}\n      searchOnChange={(e) => {\n        // myAxios\n        //   .get(`${link.url}?${link.queryUrlName}=${e.target.value}`, {\n        //     headers: {\n        //       Authorization: `Bearer ${user?.accessToken}`,\n        //     },\n        //   })\n        //   .then((res: any) => {\n        //     if (!res?.data.success) {\n        //       return alert(`Error : ${res?.data.message}`);\n        //     }\n        //     const response = res as any;\n        //     setRows(response.data[responseDataKey]);\n        //   });\n      }}\n      onSearchKeyEnter={(value) => {\n        customizeAxiostool(value).then((res: any) => {\n          if (!res?.data.success) {\n            return alert(`Error : ${res?.data.message}`);\n          }\n          const response = res as any;\n          setRows(response.data[responseDataKey]);\n        });\n      }}\n      onCellKeyDown={onCellKeyDown}\n      height={300}\n      isLoading={isLoading}\n      queryKey={queryKey}\n      columns={columns}\n      onSelectionChange={(rowSelectionModel, data) => {\n        if (rowSelectionModel.length <= 0) {\n          return onRemoveSelected(data);\n        }\n        const selectedIDs = new Set(rowSelectionModel);\n        const selectedRowData = data.filter((row: any) => {\n          return selectedIDs.has(row[uniqueId].toString());\n        });\n        if (selectedRowData.length <= 0) return;\n        onSelected(selectedRowData, data);\n      }}\n      id={uniqueId}\n      rows={rows}\n      setRows={setRows}\n      isRowSelectable={isRowSelectable}\n    />\n  );\n\n  return {\n    show,\n    rows,\n    isLoading,\n    openModal,\n    closeModal,\n    ModalComponent,\n    refetch,\n  };\n};\n\nexport default useQueryModalTable;\n","import Swal from \"sweetalert2\";\n\nexport function codeCondfirmationAlert(props: {\n  cb: (userCodeConfirmation: string) => void;\n  isUpdate: boolean;\n  isConfirm?: () => void;\n  isDeclined?: () => void;\n  text?: string;\n}) {\n  Swal.fire({\n    title: `Are you sure!`,\n    html: props?.text\n      ? props?.text\n      : props.isUpdate\n      ? `Are you sure you want to make this change?`\n      : \"Are you sure you want to delete this?\",\n    icon: \"warning\",\n    input: \"text\",\n    inputAttributes: {\n      autocapitalize: \"off\",\n    },\n    showCancelButton: true,\n    confirmButtonText: \"Save\",\n    confirmButtonColor: \"green\",\n    showLoaderOnConfirm: true,\n    preConfirm: async (userCodeConfirmation) => {\n      try {\n        props.cb(userCodeConfirmation);\n      } catch (error) {\n        Swal.showValidationMessage(`\n            Request failed: ${error}\n          `);\n      }\n    },\n    allowOutsideClick: () => !Swal.isLoading(),\n  }).then((result) => {\n    if (result.isConfirmed) {\n      if (props.isConfirm) {\n        return props.isConfirm();\n      }\n    }\n    if (props.isDeclined) {\n      props.isDeclined();\n    }\n  });\n}\n\nexport function saveCondfirmationAlert(props: {\n  isConfirm?: () => void;\n  isDeclined?: () => void;\n  text?: string;\n}) {\n  Swal.fire({\n    title: \"Are you sure?\",\n    text: props?.text ? props?.text : \"Do you want to proceed with saving?\",\n    icon: \"warning\",\n    showCancelButton: true,\n    confirmButtonColor: \"#3085d6\",\n    cancelButtonColor: \"#d33\",\n    confirmButtonText: \"Yes, save it!\",\n  }).then((result) => {\n    if (result.isConfirmed) {\n      if (props.isConfirm) {\n        return props.isConfirm();\n      }\n    }\n    if (props.isDeclined) {\n      props.isDeclined();\n    }\n  });\n}\n"],"names":["CustomDatePicker","_ref","label","name","onChange","value","onKeyDown","inputRef","datePickerRef","fullWidth","textField","_ref$minWidth","minWidth","rest","_objectWithoutProperties","_excluded","_jsx","LocalizationProvider","dateAdapter","AdapterDateFns","children","DatePicker","_objectSpread","floatingLabelStyle","color","ref","slotProps","size","InputLabelProps","sx","fieldset","borderColor","fontSize","top","style","position","left","transform","width","bgcolor","boxShadow","p","heigth","ModalWithTable","height","isLoading","columns","queryKey","onSelectionChange","rows","setRows","id","onCloseModal","showModal","onClickCloseIcon","searchOnChange","_ref$title","title","searchRef","_ref$onSearchKeyEnter","onCellKeyDown","onSearchKeyEnter","isRowSelectable","getCellClassName","mainId","generateRandomClass","Modal","open","onClose","_jsxs","Box","Typography","variant","component","mb","TextField","marginBottom","InputProps","e","_searchRef$current","code","preventDefault","current","keyBoardSelectionTable","className","concat","Table","isSingleSelection","isRowFreeze","dataSelection","selection","data","table_id","right","IconButton","onClick","CloseIcon","Math","floor","random","el","_rows$","document","querySelectorAll","classList","add","firstRowParent","querySelector","firstInput","focus","event","MouseEvent","bubbles","cancelable","view","window","dispatchEvent","addEventListener","es","key","remove","keyBoardUpDown","forEach","idx","_rows$idx","_rows","_rows$idx2","_rows2","length","NumericFormatCustom","React","props","other","NumericFormat","getInputRef","onValueChange","values","target","allowNegative","thousandSeparator","valueIsNumericString","TableContext","createContext","rowSelectionModel","footerChildren","footerPaginationPosition","showFooterSelectedCount","forwardRef","_ref$CustomFooterComp","CustomFooterComponent","DefaultooterComponent","_ref$checkboxSelectio","checkboxSelection","_ref$footerChildren","_ref$footerPagination","_ref$showFooterSelect","_useState","useState","_useState2","_slicedToArray","selectedRows","setSelectedRows","useImperativeHandle","removeSelection","getSelectedRows","filter","item","includes","freezeArray","Provider","DataGrid","slots","loadingOverlay","LinearProgress","footer","initialState","pagination","paginationModel","pageSize","loading","getRowId","row","col","hide","showCellVerticalBorder","showColumnVerticalBorder","rowHeight","columnHeaderHeight","pageSizeOptions","fill","background","padding","display","fontWeight","onRowSelectionModelChange","selectionSet","Set","s","has","__","rowNode","_toConsumableArray","disableVirtualization","Pagination","_ref2","page","onPageChange","apiRef","useGridApiContext","pageCount","useGridSelector","gridPageCountSelector","MuiPagination","count","newPage","CustomPagination","GridPagination","ActionsComponent","_useContext","useContext","columnGap","justifyContent","px","alignItems","flexDirection","flex","initialClaimState","claims_id","dateReported","dateAccident","dateInspected","department","remarks","search","mode","claim_no","initialPolicyState","policy","claim_type","insurance","PolicyNo","PlateNo","Model","BodyType","Make","ChassisNo","MotorNo","ORNo","CoverNo","BLTFileNo","AssuredName","IDNo","totaDue","totalpaid","balance","remitted","Account","status","DateFrom","DateTo","DateReceived","DateClaim","AmountClaim","AmountApproved","NameTPPD","claimType","basicDocuments","insuranceDocuments","claimsStatus","renderFields","reducer","state","action","type","_defineProperty","field","ClaimModal","_ref8","handleCloseModal","setClaimsSubmited","policyDispatch","policyState","claimDispatch","otherFileInputRef","useRef","DateReceivedRef","DateClaimceivedRef","AmountClaimInputRef","AmountApprovedInputRef","handleInputChange","_e$target2","_Fragment","gap","Button","_ref9","Swal","text","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","then","_x10","_asyncToGenerator","_regeneratorRuntime","mark","_callee10","result","filetransfer","fileBasicPromises","fileOtherPromises","fileInsurancePromises","basicFileCustom","otherFileCustom","insuranceFileCustom","padNumber","wrap","_context11","prev","next","number","String","padStart","arr","dataFile","itm","files","push","datakey","_loop2","file","i","reader","FileReader","Promise","resolve","reject","onload","_event$target2","fileName","fileContent","fileType","onerror","Error","readAsDataURL","isConfirmed","parent","all","sent","d","trim","stop","apply","arguments","_ref10","_x11","_callee11","_context12","abrupt","flexWrap","FormControl","marginRight","zIndex","InputLabel","Select","labelId","_otherFileInputRef$cu","resetFileUpload","map","MenuItem","sort","Date","timeout","setTimeout","_DateReceivedRef$curr","_DateReceivedRef$curr2","click","clearTimeout","_DateClaimceivedRef$c","_DateClaimceivedRef$c2","onBlur","parseFloat","replace","toFixed","inputComponent","marginTop","border","borderRadius","BasicDocument","OtherDocument","InsuranceDocument","_ref11","_useState7","_useState8","activeListBasicDocument","setActiveListBasicDocument","maxHeight","paddingRight","MyButton","disabled","FileUploadInput","_queryFn","_mutationFn","_mutationFn2","_sortList","_React$useState","_React$useState2","anchorEl","setAnchorEl","claimsSubmited","AuthContext","myAxios","user","_useReducer","useReducer","_useReducer2","claimState","_useReducer3","_useReducer4","_useState3","_useState4","listofClaim","setListofClaim","_useState5","_useState6","setShowModal","searchClaimInputRef","policySearchInputRef","dateAccidentRef","dateInspectedRef","_useQuery","useQuery","queryFn","_callee","_context","get","headers","Authorization","accessToken","refetchOnWindowFocus","onSuccess","res","claim_id","isLoadingClaimsId","refetchClaimsId","refetch","Boolean","handleClose","_e$target","_useMutation","useMutation","mutationFn","variable","post","_formatDataToDocument","formattedSelectedData","policyTypeContainer","formatDataToDocument","_x2","_x3","_callee3","dataDocument","url","newObjContainer","_loop","index","_context4","basicItem","mainURL","response","blob","_context3","uniqueFilename","fetch","File","_event$target","delegateYield","_x","_callee2","_item$policyState$cla","otherDocuments","newObjContainerBasic","newObjContainerOther","newObjContainerInsurance","_context2","parseInt","toString","process","setNewStateValue","isLoadingSelectedSearch","mutateSelectedSearch","mutate","_useMutation2","mutationKey","_x4","_callee4","_context5","success","message","timer","isLoadingClaimSave","mutateClaimSave","_useMutation3","_x5","_callee5","_context6","console","log","closePolicyModal","isLoadingClaimSelectedPolicyDetails","mutateClaimSelectedPolicyDetails","_useQueryModalTable","useQueryModalTable","link","queryUrlName","headerName","uniqueId","responseDataKey","onSelected","selectedRowData","closeClaimModal","SearchClaimModal","ModalComponent","isLoadingClaimModal","openClaimModal","openModal","closeModal","_useQueryModalTable2","PolicyModal","isLoadingPolicyModal","openPolicyModal","handleTdClick","flushSync","groupByLabel","grouped","Object","entries","displayFile","groupedData","_ref3","items","fileList","DataTransfer","input","Event","LoadingButton","htmlFor","OutlinedInput","legend","endAdornment","InputAdornment","edge","PersonSearchIcon","readOnly","RestartAltIcon","undefined","currentTarget","backgroundColor","grey","Menu","MenuListProps","localStorage","setItem","claimdsDetails","elementString","ReactDOMServer","borderBottom","textAlign","minHeight","borderRight","rowGap","boxSizing","format","margin","alignSelf","marginLeft","borderTop","bottom","borderLeft","_ref4","_x6","_callee6","_context7","codeCondfirmationAlert","isUpdate","cb","userCodeConfirmation","_ref5","_x7","_callee7","_context8","_ref6","_x8","_callee8","_context9","_datePickerRef$curren","_datePickerRef$curren2","_dateAccidentRef$curr","_dateAccidentRef$curr2","_dateInspectedRef$cur","_dateInspectedRef$cur2","gridTemplateColumns","gridColumn","borderCollapse","a","b","statusArray","Stack","direction","spacing","VisibilityIcon","_itm$policyState$Amou","_itm$policyState$Amou2","createElement","div","content","textContent","contentchild","buttonClose","body","basic","uniqueBasicArray","indexOf","uniqueOtherArray","insuranceFile","uniqueInsuranceArray","tableString","colSpan","xmlns","viewBox","stroke","strokeWidth","strokeLinecap","strokeLinejoin","innerHTML","appendChild","removeChild","stopPropagation","ArticleIcon","_ref7","_x9","_callee9","_context10","DeleteIcon","onDoubleClick","overflow","src","alt","_ref12","_useState9","_useState10","useEffect","r","Ridx","c","cIdx","_ref13","_useState11","_useState12","_ref14","_useState13","_useState14","isHovered","setIsHovered","onMouseEnter","onMouseLeave","cursor","dispatch","obj","_ref15","_ref16","_useState15","_useState16","selectedFiles","setSelectedFiles","useId","fileInput","_useState17","_useState18","isDragging","setIsDragging","handleDragLeave","handleDragEnter","handleDrop","_fileInput$current","dataTransfer","Array","from","newFiles","checkFile","alert","filesArray","arrayToFileList","_document$getElementB","getElementById","parentElement","reset","onDragEnter","onDragOver","onDragLeave","onDrop","CloudUploadIcon","DisplayFile","draggable","accept","multiple","_ref17","objectUrl","URL","createObjectURL","startsWith","RemoveRedEyeIcon","downloadLink","href","download","CloudDownloadIcon","_fileInput$current2","filesToRemove","filteredFiles","newFileList","filterFileList","HighlightOffIcon","isNotExt","fileTypes","CustomizeAxiosFunc","_CustomizeAxiosFunc","_args","_customizeAxiostool","_ref$onSelected","_ref$onRemoveSelected","onRemoveSelected","_ref$onSuccess","_ref$onCloseFunction","onCloseFunction","_ref$CustomizeAxios","CustomizeAxios","show","customizeAxiostool","_args2","_searchRef$current2","_searchRef$current3","selectedIDs","_preConfirm","html","inputAttributes","autocapitalize","showLoaderOnConfirm","preConfirm","error","allowOutsideClick","isConfirm","isDeclined","saveCondfirmationAlert"],"sourceRoot":""}