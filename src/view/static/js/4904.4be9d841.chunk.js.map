{"version":3,"file":"static/js/4904.4be9d841.chunk.js","mappings":"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","sources":["components/Helmet.tsx","components/Loading.tsx","components/ModalWithTable.tsx","components/Table.tsx","../node_modules/@mui/material/colors/brown.js","feautures/Admin/Task/Accounting/GeneralJournal.tsx","hooks/useQueryModalTable.tsx","lib/confirmationAlert.ts","../node_modules/@mui/icons-material/AccountBalanceWallet.js","../node_modules/@mui/icons-material/Add.js","../node_modules/@mui/icons-material/CardTravel.js","../node_modules/@mui/icons-material/NotInterested.js","../node_modules/@mui/icons-material/Save.js","../node_modules/@mui/icons-material/Search.js","../node_modules/@mui/material/colors/deepOrange.js","../node_modules/date-fns/esm/lastDayOfMonth/index.js"],"sourcesContent":["\r\nimport { Helmet } from \"react-helmet\";\r\n\r\nconst PageHelmet = ({ title = '' }: { title: string }) => {\r\n    const imgUrl = process.env.REACT_APP_IMAGE_URL;\r\n    return (\r\n        <Helmet>\r\n            <title>{title}</title>\r\n            <link rel=\"icon\" type=\"image/png\" href={`${imgUrl}/logo.png`} />\r\n        </Helmet>\r\n    );\r\n};\r\n\r\nexport default PageHelmet;","import { CircularProgress } from \"@mui/material\"\r\n\r\nexport const Loading = () => {\r\n\r\n    return (\r\n        <>\r\n            <div style={{\r\n                position: \"fixed\",\r\n                top: 0,\r\n                bottom: 0,\r\n                left: 0,\r\n                right: 0,\r\n                background: \"red\",\r\n                zIndex: \"88\",\r\n                backgroundColor: 'rgba(0, 0, 0, 0.4)'\r\n            }}\r\n            ></div>\r\n            <div style={{\r\n                position: \"absolute\",\r\n                zIndex: \"100\",\r\n                background: \"white\",\r\n                width: \"auto\",\r\n                height: \"auto\",\r\n                top: \"50%\",\r\n                left: \"50%\",\r\n                transform: \"translate(-50%,-50%)\",\r\n                boxShadow: '3px 6px 32px -7px rgba(0,0,0,0.75)',\r\n                display: \"flex\",\r\n                columnGap: \"20px\",\r\n                alignItems: \"center\",\r\n                justifyContent: \"center\",\r\n                padding: \"10px 15px\",\r\n            }}>\r\n                <CircularProgress color=\"primary\" />\r\n                <span>Loading...</span>\r\n            </div>\r\n        </>\r\n    )\r\n}","import React from \"react\";\nimport {\n  GridRowSelectionModel,\n  GridRowParams,\n  GridCellParams,\n  GridTreeNode,\n} from \"@mui/x-data-grid\";\nimport { Modal, Box, Typography, IconButton, TextField } from \"@mui/material\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport Table from \"./Table\";\n\ninterface ModalWithTableParams {\n  height: number;\n  isLoading: boolean;\n  queryKey: string;\n  columns: Array<any>;\n  onSelectionChange: (rowSelectionModel: Array<any>, data: Array<any>) => void;\n  setRows: React.Dispatch<React.SetStateAction<GridRowSelectionModel>>;\n  rows: GridRowSelectionModel;\n  id: string;\n  onCloseModal: () => void;\n  onClickCloseIcon: () => void;\n  showModal: boolean;\n  searchOnChange:\n  | React.ChangeEventHandler<HTMLInputElement | HTMLTextAreaElement>\n  | undefined;\n  title?: string;\n  searchRef?: React.RefObject<HTMLInputElement>;\n  onCellKeyDown?: any;\n  onSearchKeyEnter?: (search: string) => void;\n  isRowSelectable?: ((params: GridRowParams<any>) => boolean) | undefined;\n  getCellClassName?:\n  | ((params: GridCellParams<any, any, any, GridTreeNode>) => string)\n  | undefined;\n}\n\nconst style = {\n  position: \"absolute\" as \"absolute\",\n  top: \"50%\",\n  left: \"50%\",\n  transform: \"translate(-50%, -50%)\",\n  width: \"80%\",\n  bgcolor: \"background.paper\",\n  boxShadow: 24,\n  p: 4,\n  heigth: \"auto\",\n};\n\nexport default function ModalWithTable({\n  height,\n  isLoading,\n  queryKey,\n  columns,\n  onSelectionChange,\n  setRows,\n  rows,\n  id,\n  onCloseModal,\n  showModal,\n  onClickCloseIcon,\n  searchOnChange,\n  title = \"\",\n  searchRef,\n  onCellKeyDown,\n  onSearchKeyEnter = () => { },\n  isRowSelectable,\n  getCellClassName,\n}: ModalWithTableParams) {\n  const mainId = generateRandomClass();\n\n  return (\n    <Modal\n      open={showModal}\n      onClose={onCloseModal}\n      aria-labelledby=\"modal-modal-title\"\n      aria-describedby=\"modal-modal-description\"\n    >\n      <Box sx={style}>\n        <Typography id=\"modal-modal-title\" variant=\"h6\" component=\"h2\" mb={2}>\n          {title}\n        </Typography>\n        <TextField\n          size=\"small\"\n          label=\"Search\"\n          sx={{ marginBottom: \"10px\" }}\n          fullWidth\n          onChange={searchOnChange}\n          InputProps={{\n            inputRef: searchRef,\n          }}\n          onKeyDown={(e) => {\n            if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n              e.preventDefault();\n              onSearchKeyEnter(searchRef?.current?.value as string);\n            }\n            keyBoardSelectionTable(\n              e,\n              mainId,\n              searchRef?.current as HTMLInputElement\n            );\n          }}\n        />\n        <div\n          className={`${mainId} main-table-selection-container`}\n          style={{ position: \"relative\", height: `${height + 20}px` }}\n        >\n          <Table\n            isSingleSelection={true}\n            isRowFreeze={false}\n            columns={columns}\n            isLoading={isLoading}\n            dataSelection={(selection, data, code) => {\n              onSelectionChange(selection, data);\n            }}\n            table_id={id}\n            rows={rows}\n            isRowSelectable={isRowSelectable}\n            getCellClassName={getCellClassName}\n          />\n        </div>\n\n        <div style={{ position: \"absolute\", top: \"10px\", right: \"10px\" }}>\n          <IconButton\n            aria-label=\"search-client\"\n            color=\"secondary\"\n            onClick={onClickCloseIcon}\n          >\n            <CloseIcon />\n          </IconButton>\n        </div>\n      </Box>\n    </Modal>\n  );\n}\n\nexport function generateRandomClass() {\n  const randomNumber = Math.floor(Math.random() * 10000);\n  const randomClass = \"main-\" + randomNumber;\n  return randomClass;\n}\n\nfunction keyBoardUpDown(className: string, el: HTMLElement) {\n  const firstRowParent = document.querySelector(\n    `.${className} .MuiDataGrid-row`\n  );\n  const firstInput = firstRowParent?.querySelector(\"input\");\n  firstInput?.focus();\n  const event = new MouseEvent(\"mouseenter\", {\n    bubbles: true,\n    cancelable: true,\n    view: window,\n  });\n  firstRowParent?.dispatchEvent(event);\n  firstInput?.addEventListener(\"keydown\", (es: any) => {\n    if (es.key === \"ArrowUp\") {\n      es.preventDefault();\n      el.focus();\n    }\n    if (es.key === \"ArrowUp\") {\n      firstRowParent?.classList.remove(\"hover-keyboard\");\n    }\n  });\n}\n\nexport function keyBoardSelectionTable(\n  e: React.KeyboardEvent<HTMLDivElement>,\n  className: string,\n  el: HTMLElement\n) {\n  const mainId = className;\n  if (e.code === \"ArrowDown\") {\n    const rows = document.querySelectorAll(`.${mainId} .MuiDataGrid-row`);\n    e.preventDefault();\n    rows[0]?.classList.add(\"hover-keyboard\");\n    keyBoardUpDown(className, el);\n    rows.forEach((el, idx) => {\n      el.addEventListener(\"keydown\", (es: any) => {\n        if (es.key === \"ArrowUp\") {\n          if (idx <= 0) {\n            return;\n          }\n\n          es.preventDefault();\n          rows[idx]?.classList.remove(\"hover-keyboard\");\n          rows[idx - 1]?.classList.add(\"hover-keyboard\");\n          return;\n        }\n        if (es.key === \"ArrowDown\") {\n          es.preventDefault();\n          if (idx >= rows.length - 1) {\n            return;\n          }\n          rows[idx]?.classList.remove(\"hover-keyboard\");\n          rows[idx + 1]?.classList.add(\"hover-keyboard\");\n        }\n      });\n    });\n  }\n}\n","import {\n  useState,\n  useContext,\n  createContext,\n  ReactElement,\n  forwardRef,\n  useImperativeHandle,\n} from \"react\";\nimport { Box, LinearProgress } from \"@mui/material\";\nimport {\n  DataGrid,\n  GridSlotsComponentsProps,\n  gridPageCountSelector,\n  GridPagination,\n  useGridApiContext,\n  useGridSelector,\n  GridRowSelectionModel,\n  GridColDef,\n  GridRowParams,\n  GridCellParams,\n  GridTreeNode,\n} from \"@mui/x-data-grid\";\nimport { TablePaginationProps } from \"@mui/material/TablePagination\";\nimport MuiPagination from \"@mui/material/Pagination\";\n\ninterface TableProps {\n  isLoading: boolean;\n  columns: Array<any>;\n  rows: Array<any>;\n  table_id: string;\n  isSingleSelection: boolean;\n  isRowFreeze: boolean;\n  dataSelection?: (selection: any, data: any, code: string | null) => void;\n  CustomFooterComponent?: any;\n  isRowSelectable?: ((params: GridRowParams<any>) => boolean) | undefined;\n  getCellClassName?:\n    | ((params: GridCellParams<any, any, any, GridTreeNode>) => string)\n    | undefined;\n  footerChildren?: (\n    rowSelectionModel: GridRowSelectionModel,\n    rows: Array<any>\n  ) => ReactElement;\n  footerPaginationPosition?: string;\n  showFooterSelectedCount?: boolean;\n  checkboxSelection?: boolean | undefined;\n}\n\nconst TableContext = createContext<{\n  rowSelectionModel: GridRowSelectionModel;\n  rows: Array<any>;\n  footerPaginationPosition?: string;\n  showFooterSelectedCount?: boolean;\n  footerChildren: (\n    rowSelectionModel: GridRowSelectionModel,\n    rows: Array<any>\n  ) => ReactElement;\n}>({\n  rows: [],\n  rowSelectionModel: [],\n  footerChildren: () => <div></div>,\n  footerPaginationPosition: \"right-left\",\n  showFooterSelectedCount: true,\n});\nconst Table = forwardRef(\n  (\n    {\n      isLoading,\n      columns,\n      rows,\n      table_id,\n      isSingleSelection,\n      isRowFreeze,\n      dataSelection,\n      CustomFooterComponent = DefaultooterComponent,\n      isRowSelectable,\n      getCellClassName,\n      checkboxSelection = true,\n      footerChildren = (\n        rowSelectionModel: GridRowSelectionModel,\n        rows: Array<any>\n      ) => <div></div>,\n      footerPaginationPosition = \"right-left\",\n      showFooterSelectedCount = true,\n    }: TableProps,\n    ref\n  ) => {\n    const [selectedRows, setSelectedRows] = useState<any>([]);\n\n    useImperativeHandle(ref, () => ({\n      removeSelection: () => {\n        setSelectedRows([]);\n      },\n      getSelectedRows: () => {\n        return rows.filter((item: any) =>\n          selectedRows?.includes(item[table_id])\n        );\n      },\n      setSelectedRows: (data: Array<any>) => {\n        setSelectedRows(data);\n      },\n    }));\n\n    function onSelectionChange(selection: any, data: any, code: string | null) {\n      if (dataSelection) {\n        dataSelection(selection, data, code);\n      }\n    }\n    let freezeArray: Array<any> = [];\n\n    return (\n      <TableContext.Provider\n        value={{\n          showFooterSelectedCount,\n          footerPaginationPosition,\n          rowSelectionModel: selectedRows,\n          rows,\n          footerChildren,\n        }}\n      >\n        <DataGrid\n          slots={{\n            loadingOverlay: LinearProgress,\n            footer: CustomFooterComponent,\n          }}\n          initialState={{\n            pagination: { paginationModel: { pageSize: 100 } },\n          }}\n          loading={isLoading}\n          getRowId={(row) => row[table_id]}\n          columns={columns.filter((col: any) => !col.hide) as GridColDef<any>[]}\n          rows={rows}\n          showCellVerticalBorder={true}\n          showColumnVerticalBorder={true}\n          checkboxSelection={checkboxSelection}\n          rowSelectionModel={selectedRows}\n          rowHeight={25}\n          columnHeaderHeight={35}\n          pageSizeOptions={[10, 20, 35, 50, 75, 100]}\n          sx={{\n            \"& .cash\": {\n              color: \"#ec4899\",\n            },\n            \"& .check\": {\n              color: \"#0891b2\",\n            },\n            \"& .approved\": {\n              color: \"green\",\n            },\n            \"& .pending\": {\n              color: \"orange\",\n            },\n            \"& .disapproved\": {\n              color: \"red\",\n            },\n            \"& .normal\": {\n              color: \"red\",\n            },\n            \"& .MuiDataGrid-row.Mui-selected:hover\": {\n              color: \"black\",\n              \"& .MuiSvgIcon-root \": {\n                fill: \"#3b82f6\",\n              },\n            },\n            \"& .hover-keyboard\": {\n              background: \"#2563eb\",\n              color: \"white\",\n              \"& .MuiSvgIcon-root \": {\n                fill: \"white\",\n              },\n            },\n            \"& .MuiDataGrid-row:hover\": {\n              background: \"#2563eb\",\n              color: \"white\",\n              \"& .MuiSvgIcon-root \": {\n                fill: \"white\",\n              },\n            },\n            \"& .MuiDataGrid-row.hover\": {\n              background: \"#2563eb\",\n              color: \"white\",\n              \"& .MuiSvgIcon-root \": {\n                fill: \"white\",\n              },\n            },\n            \"& .MuiTablePagination-root p \": {\n              padding: \"0 !important\",\n            },\n\n            ...{\n              \"& .MuiDataGrid-columnHeaders\": {\n                background: \"#64748b\",\n                color: \"white\",\n                fontSize: \"14px\",\n                // borderBottomColor: \"#38bdf8\",\n              },\n              \"& .MuiDataGrid-columnHeaderCheckbox .MuiDataGrid-columnHeaderTitleContainer .MuiSvgIcon-root \":\n                {\n                  display: isSingleSelection || isRowFreeze ? \"none\" : \"block\",\n                  fill: \"white\",\n                },\n              \"& .MuiDataGrid-columnHeaderCheckbox .MuiDataGrid-columnHeaderTitleContainer input \":\n                {\n                  display: isSingleSelection || isRowFreeze ? \"none\" : \"block\",\n                },\n            },\n            ...{\n              fontSize: 13,\n              fontWeight: 500,\n              \"& .MuiDataGrid-checkboxInput\": {\n                height: \"27px\",\n                width: \"27px\",\n              },\n              \"& .MuiDataGrid-checkboxInput svg\": {\n                height: \"20px\",\n                width: \"20px\",\n              },\n            },\n          }}\n          // onRowDoubleClick={(e, r) => {\n          //   console.log(e, r);\n          // }}\n\n          onRowSelectionModelChange={(selection) => {\n            if (isRowFreeze) {\n              if (selection.length <= 0) return;\n              freezeArray = selection;\n              if (selectedRows.includes(freezeArray[freezeArray.length - 1]))\n                return;\n\n              setSelectedRows(selection);\n\n              onSelectionChange([selection[selection.length - 1]], rows, null);\n              return;\n            }\n\n            if (!isRowFreeze && isSingleSelection) {\n              if (selectedRows && selectedRows?.length > 0) {\n                const selectionSet = new Set(selectedRows);\n                setSelectedRows(\n                  selection.filter((s: any) => !selectionSet.has(s))\n                );\n              } else {\n                setSelectedRows(selection);\n              }\n            } else {\n              setSelectedRows(selection);\n            }\n\n            onSelectionChange([selection[selection.length - 1]], rows, null);\n          }}\n          onCellKeyDown={(__: any, key: any) => {\n            const keyFinding = [\"NumpadEnter\", \"Enter\", \"Delete\", \"Backspace\"];\n            if (!keyFinding.includes(key.code)) {\n              return;\n            }\n            key.preventDefault();\n            if (key.code === \"Enter\" || key.code === \"NumpadEnter\") {\n              if (isSingleSelection && !isRowFreeze) {\n                return setSelectedRows((data: any) => {\n                  if (data && data.length > 0 && data[0] === __.rowNode.id) {\n                    onSelectionChange([], rows, key.code);\n                    return [];\n                  }\n                  onSelectionChange([__.rowNode.id], rows, key.code);\n                  return [__.rowNode.id];\n                });\n              } else {\n                setSelectedRows((data: any) => {\n                  if (\n                    data &&\n                    !isRowFreeze &&\n                    data.length > 0 &&\n                    data.includes(__.rowNode.id)\n                  ) {\n                    data = data.filter((item: any) => item !== __.rowNode.id);\n                    onSelectionChange([], rows, key.code);\n                    return data;\n                  }\n                  if (\n                    data &&\n                    isRowFreeze &&\n                    data.length > 0 &&\n                    data.includes(__.rowNode.id)\n                  ) {\n                    return data;\n                  }\n                  onSelectionChange([__.rowNode.id], rows, key.code);\n                  return [...data, __.rowNode.id];\n                });\n              }\n              return;\n            }\n            if (key.code === \"Delete\" || key.code === \"Backspace\") {\n              setSelectedRows([__.rowNode.id]);\n              return onSelectionChange([__.rowNode.id], rows, key.code);\n            }\n          }}\n          disableVirtualization\n          isRowSelectable={isRowSelectable}\n          getCellClassName={getCellClassName}\n        />\n      </TableContext.Provider>\n    );\n  }\n);\n\nexport default Table;\nfunction Pagination({\n  page,\n  onPageChange,\n  className,\n}: Pick<TablePaginationProps, \"page\" | \"onPageChange\" | \"className\">) {\n  const apiRef = useGridApiContext();\n  const pageCount = useGridSelector(apiRef, gridPageCountSelector);\n\n  return (\n    <MuiPagination\n      variant=\"outlined\"\n      color=\"primary\"\n      className={className}\n      count={pageCount}\n      page={page + 1}\n      onChange={(event, newPage) => {\n        onPageChange(event as any, newPage - 1);\n      }}\n    />\n  );\n}\n\nfunction CustomPagination(props: any) {\n  return <GridPagination ActionsComponent={Pagination} {...props} />;\n}\nfunction DefaultooterComponent(\n  props: NonNullable<GridSlotsComponentsProps[\"footer\"]>\n) {\n  const {\n    rowSelectionModel,\n    showFooterSelectedCount,\n    footerPaginationPosition,\n    footerChildren,\n    rows,\n  } = useContext(TableContext);\n  return (\n    <Box\n      sx={{\n        columnGap: \"50px\",\n        display: \"flex\",\n        width: \"100%\",\n        justifyContent: \"space-between\",\n        px: 3,\n        alignItems: \"center\",\n        flexDirection:\n          footerPaginationPosition === \"right-left\" ? \"row-reverse\" : \"row\",\n      }}\n    >\n      <CustomPagination {...props} />\n      <Box\n        sx={{\n          display: \"flex\",\n          justifyContent:\n            footerPaginationPosition === \"right-left\"\n              ? \"flex-start\"\n              : \"flex-end\",\n          flex: 1,\n          alignItems: \"center\",\n        }}\n      >\n        {showFooterSelectedCount && (\n          <div>Selected:{rowSelectionModel?.length}</div>\n        )}\n        <div>{footerChildren(rowSelectionModel, rows)}</div>\n      </Box>\n    </Box>\n  );\n}\n","const brown = {\n  50: '#efebe9',\n  100: '#d7ccc8',\n  200: '#bcaaa4',\n  300: '#a1887f',\n  400: '#8d6e63',\n  500: '#795548',\n  600: '#6d4c41',\n  700: '#5d4037',\n  800: '#4e342e',\n  900: '#3e2723',\n  A100: '#d7ccc8',\n  A200: '#bcaaa4',\n  A400: '#8d6e63',\n  A700: '#5d4037'\n};\nexport default brown;","import { useReducer, useContext, useState, useRef, useEffect, useCallback } from \"react\";\nimport {\n  Button,\n  FormControl,\n  IconButton,\n  InputLabel,\n  Select,\n  MenuItem,\n  Modal,\n  Typography,\n  Box,\n  Checkbox,\n  FormControlLabel,\n} from \"@mui/material\";\nimport CardTravelIcon from \"@mui/icons-material/CardTravel\";\nimport LoadingButton from \"@mui/lab/LoadingButton\";\nimport AddIcon from \"@mui/icons-material/Add\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport Swal from \"sweetalert2\";\nimport { AuthContext } from \"../../../../components/AuthContext\";\nimport { useMutation, useQuery } from \"react-query\";\nimport useQueryModalTable from \"../../../../hooks/useQueryModalTable\";\nimport { wait } from \"../../../../lib/wait\";\nimport NotInterestedIcon from \"@mui/icons-material/NotInterested\";\nimport { LocalizationProvider } from \"@mui/x-date-pickers/LocalizationProvider\";\nimport { AdapterDateFns } from \"@mui/x-date-pickers/AdapterDateFns\";\nimport { DatePicker } from \"@mui/x-date-pickers\";\nimport { brown, deepOrange, grey } from \"@mui/material/colors\";\nimport {\n  codeCondfirmationAlert,\n  saveCondfirmationAlert,\n} from \"../../../../lib/confirmationAlert\";\n\nimport { flushSync } from \"react-dom\";\nimport SaveIcon from \"@mui/icons-material/Save\";\nimport { SelectInput, TextFormatedInput, TextInput } from \"../../../../components/UpwardFields\";\nimport SupervisorAccountIcon from '@mui/icons-material/SupervisorAccount';\nimport AccountCircleIcon from '@mui/icons-material/AccountCircle';\nimport AccountBalanceWalletIcon from '@mui/icons-material/AccountBalanceWallet';\nimport { format, lastDayOfMonth } from \"date-fns\";\nimport PageHelmet from \"../../../../components/Helmet\";\nimport { DataGridViewReact } from \"../../../../components/DataGridViewReact\";\nimport { Loading } from \"../../../../components/Loading\";\nimport useExecuteQueryFromClient from \"../../../../lib/executeQueryFromClient\";\n\nconst initialState = {\n\n  totalDebit: \"\",\n  totalCredit: \"\",\n  totalBalance: \"\",\n\n  jobAutoExp: false,\n  jobTransactionDate: new Date(),\n  jobType: \"\",\n  search: \"\",\n};\n\nexport const reducer = (state: any, action: any) => {\n  switch (action.type) {\n    case \"UPDATE_FIELD\":\n      return {\n        ...state,\n        [action.field]: action.value,\n      };\n    default:\n      return state;\n  }\n};\n\nconst selectedCollectionColumns = [\n  { key: \"code\", label: \"Code\", width: 150 },\n  { key: \"acctName\", label: \"Account Name\", width: 300 },\n  {\n    key: \"subAcctName\",\n    label: \"Sub Account\",\n    width: 170,\n  },\n  { key: \"ClientName\", label: \"Name\", width: 300 },\n  { key: \"debit\", label: \"Debit\", width: 120, type: \"number\" },\n  { key: \"credit\", label: \"Credit\", width: 120, type: \"number\" },\n  // hide\n  { key: \"TC_Code\", label: \"TC\", width: 120 },\n  {\n    key: \"remarks\",\n    label: \"Remarks\",\n    flex: 1,\n    width: 300,\n  },\n  { key: \"vatType\", label: \"Vat Type\", width: 120 },\n  { key: \"invoice\", label: \"Invoice\", width: 200 },\n  { key: \"TempID\", label: \"TempId\", hide: true },\n  { key: \"IDNo\", label: \"I.D.\", width: 300, hide: true },\n  {\n    key: \"BranchCode\",\n    label: \"BranchCode\",\n    width: 300,\n    hide: true,\n  },\n];\n\nexport default function GeneralJournal() {\n  const { executeQueryToClient } = useExecuteQueryFromClient()\n  const [mode, setMode] = useState<\"update\" | \"add\" | \"\">(\"\")\n  const [monitoring, setMonitoring] = useState({\n    totalRow: \"0\",\n    totalDebit: \"0.00\",\n    totalCredit: \"0.00\",\n    balance: \"0.00\"\n  })\n\n  const [loadingJob, setLoadingJob] = useState(false)\n  const inputSearchRef = useRef<HTMLInputElement>(null)\n\n  const refRefNo = useRef<HTMLInputElement>(null)\n  const _refSubRefNo = useRef<HTMLInputElement>(null)\n  const refDate = useRef<HTMLInputElement>(null)\n  const refExplanation = useRef<HTMLInputElement>(null)\n\n  const refCode = useRef<HTMLInputElement>(null)\n  const refAccountName = useRef<HTMLInputElement>(null)\n  const refSubAccount = useRef<HTMLInputElement>(null)\n  const refName = useRef<HTMLInputElement>(null)\n\n  const refDebit = useRef<HTMLInputElement>(null)\n  const refCredit = useRef<HTMLInputElement>(null)\n  const refTC = useRef<HTMLInputElement>(null)\n  const refRemarks = useRef<HTMLInputElement>(null)\n  const refVat = useRef<HTMLSelectElement>(null)\n  const refInvoice = useRef<HTMLInputElement>(null)\n\n  //client details \n  const refIDNo = useRef<string>('')\n  const refSubAcct = useRef<string>('')\n\n  //TC details\n  const refTCDesc = useRef<string>('')\n\n  const { myAxios, user } = useContext(AuthContext);\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const [openJobs, setOpenJobs] = useState(false);\n\n  const chartAccountSearchInput = useRef<HTMLInputElement>(null);\n  const IdsSearchInput = useRef<HTMLInputElement>(null);\n  const table = useRef<any>(null);\n\n\n  const modeAdd = mode === 'add'\n  const modeUpdate = mode === 'update'\n  const modeDefault = mode === ''\n\n\n  const {\n    isLoading: loadingGeneralJournalGenerator,\n    refetch: refetchGeneralJournalGenerator,\n  } = useQuery({\n    queryKey: \"general-journal-id-generator\",\n    queryFn: async () =>\n      await myAxios.get(\n        `/task/accounting/general-journal/get-general-journal-id`,\n        {\n          headers: {\n            Authorization: `Bearer ${user?.accessToken}`,\n          },\n        }\n      ),\n    refetchOnWindowFocus: false,\n    onSuccess: (data) => {\n      const response = data as any;\n      if (modeUpdate) {\n        dispatch({\n          type: \"UPDATE_FIELD\",\n          field: \"refNo\",\n          value: state.sub_refNo ?? \"\",\n        });\n        return;\n      }\n      wait(100).then(() => {\n        if (refRefNo.current) {\n          refRefNo.current.value = response.data.generateGeneralJournalID[0].general_journal_id\n        }\n        if (_refSubRefNo.current) {\n          _refSubRefNo.current.value = response.data.generateGeneralJournalID[0].general_journal_id\n        }\n\n        if (refVat.current) {\n          refVat.current.value = 'Non-VAT'\n        }\n      })\n    },\n\n  });\n  const {\n    mutate: addGeneralJournalMutate,\n    isLoading: loadingGeneralJournalMutate,\n  } = useMutation({\n    mutationKey: \"add-journal-voucher\",\n    mutationFn: async (variable: any) =>\n      await myAxios.post(\n        \"/task/accounting/general-journal/add-general-journal\",\n        variable,\n        {\n          headers: {\n            Authorization: `Bearer ${user?.accessToken}`,\n          },\n        }\n      ),\n    onSuccess: (res) => {\n      const response = res as any;\n      if (response.data.success) {\n\n        return Swal.fire({\n          position: \"center\",\n          icon: \"success\",\n          title: response.data.message,\n          timer: 1500,\n        }).then(() => {\n          Swal.fire({\n            text: \"Do you want to print it?\",\n            showCancelButton: true,\n            confirmButtonColor: \"#3085d6\",\n            cancelButtonColor: \"#d33\",\n            confirmButtonText: \"Yes, save it!\",\n          }).then((result) => {\n            if (result.isConfirmed) {\n              handleClickPrint()\n            }\n            wait(100).then(() => {\n              resetFieldRef()\n              resetRowFieldRef()\n              resetTable()\n              resetMonitoring()\n              setMode('')\n            })\n          });\n        })\n      }\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: response.data.message,\n        timer: 1500,\n      });\n    },\n  });\n\n  const {\n    mutate: mutateVoidGeneralJournal,\n    isLoading: loadingVoidGeneralJournalMutate,\n  } = useMutation({\n    mutationKey: \"void-journal-voucher\",\n    mutationFn: async (variable: any) =>\n      await myAxios.post(\n        \"/task/accounting/general-journal/void-general-journal\",\n        variable,\n        {\n          headers: {\n            Authorization: `Bearer ${user?.accessToken}`,\n          },\n        }\n      ),\n    onSuccess: (res) => {\n      const response = res as any;\n      if (response.data.success) {\n        resetFieldRef()\n        resetRowFieldRef()\n        resetTable()\n        resetMonitoring()\n        setMode('')\n\n        return Swal.fire({\n          position: \"center\",\n          icon: \"success\",\n          title: response.data.message,\n          timer: 1500,\n        });\n      }\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: response.data.message,\n        timer: 1500,\n      });\n    },\n  });\n  const {\n    mutate: getSearchSelectedGeneralJournal,\n    isLoading: loadingGetSearchSelectedGeneralJournal,\n  } = useMutation({\n    mutationKey: \"get-selected-search-general-journal\",\n    mutationFn: async (variable: any) =>\n      await myAxios.post(\n        \"/task/accounting/general-journal/get-selected-search-general-journal\",\n        variable,\n        {\n          headers: {\n            Authorization: `Bearer ${user?.accessToken}`,\n          },\n        }\n      ),\n    onSuccess: (res) => {\n      const response = res as any;\n      const selected = response.data.getSelectedSearchGeneralJournal;\n      const { explanation, dateEntry, refNo } = selected[0];\n\n      if (refRefNo.current) {\n        refRefNo.current.value = refNo\n      }\n      if (refDate.current) {\n        refDate.current.value = format(new Date(dateEntry), \"yyyy-MM-dd\")\n      }\n      if (refExplanation.current) {\n        refExplanation.current.value = explanation\n      }\n\n      table.current.setDataFormated(selected)\n      monitor()\n    },\n  });\n  const {\n    ModalComponent: ModalSearchGeneralJounal,\n    openModal: openSearchGeneralJounal,\n    isLoading: isLoadingSearchGeneralJounal,\n    closeModal: closeSearchGeneralJounal,\n  } = useQueryModalTable({\n    link: {\n      url: \"/task/accounting/general-journal/search-general-journal\",\n      queryUrlName: \"searchGeneralJournal\",\n    },\n    columns: [\n      { field: \"Date_Entry\", headerName: \"Date\", width: 130 },\n      { field: \"Source_No\", headerName: \"Ref No.\", width: 250 },\n      {\n        field: \"Explanation\",\n        headerName: \"Explanation\",\n        flex: 1,\n      },\n    ],\n    queryKey: \"search-general-journal\",\n    uniqueId: \"Source_No\",\n    responseDataKey: \"searchGeneralJournal\",\n    onSelected: (selectedRowData, data) => {\n      getSearchSelectedGeneralJournal({\n        Source_No: selectedRowData[0].Source_No,\n      });\n      setMode(\"update\")\n      table.current.resetTable()\n      closeSearchGeneralJounal();\n      resetRow()\n    },\n    onCloseFunction: (value: any) => {\n      dispatch({ type: \"UPDATE_FIELD\", field: \"search\", value });\n    },\n    searchRef: chartAccountSearchInput,\n  });\n\n  // fields\n  const {\n    ModalComponent: ModalChartAccountSearch,\n    openModal: openChartAccountSearch,\n    isLoading: isLoadingChartAccountSearch,\n    closeModal: closeChartAccountSearch,\n  } = useQueryModalTable({\n    link: {\n      url: \"/task/accounting/general-journal/get-chart-account\",\n      queryUrlName: \"chartAccountSearch\",\n    },\n    columns: [\n      { field: \"Acct_Code\", headerName: \"Account Code\", width: 130 },\n      { field: \"Acct_Title\", headerName: \"Account Title.\", width: 250 },\n      {\n        field: \"Short\",\n        headerName: \"Short\",\n        flex: 1,\n      },\n    ],\n    queryKey: \"get-chart-account\",\n    uniqueId: \"Acct_Code\",\n    responseDataKey: \"getChartOfAccount\",\n    onSelected: (selectedRowData, data) => {\n      if (refCode.current) {\n        refCode.current.value = selectedRowData[0].Acct_Code\n      }\n      if (refAccountName.current) {\n        refAccountName.current.value = selectedRowData[0].Acct_Title\n      }\n\n      closeChartAccountSearch();\n      setTimeout(() => {\n        refName.current?.focus();\n      }, 250);\n    },\n    searchRef: chartAccountSearchInput,\n  });\n  const {\n    ModalComponent: ModalPolicyIdClientIdRefId,\n    openModal: openPolicyIdClientIdRefId,\n    isLoading: isLoadingPolicyIdClientIdRefId,\n    closeModal: closePolicyIdClientIdRefId,\n  } = useQueryModalTable({\n    link: {\n      url: \"/task/accounting/search-pdc-policy-id\",\n      queryUrlName: \"searchPdcPolicyIds\",\n    },\n    columns: [\n      { field: \"Type\", headerName: \"Type\", width: 130 },\n      { field: \"IDNo\", headerName: \"ID No.\", width: 200 },\n      {\n        field: \"Name\",\n        headerName: \"Name\",\n        flex: 1,\n      },\n      {\n        field: \"ID\",\n        headerName: \"ID\",\n        hide: true,\n      },\n    ],\n    queryKey: \"get-policyId-ClientId-RefId\",\n    uniqueId: \"IDNo\",\n    responseDataKey: \"clientsId\",\n    onSelected: (selectedRowData) => {\n      if (refName.current) {\n        refName.current.value = selectedRowData[0].Name ?? \"\"\n      }\n      if (refSubAccount.current) {\n        refSubAccount.current.value = selectedRowData[0].ShortName ?? \"\"\n      }\n      refIDNo.current = selectedRowData[0].IDNo\n      refSubAcct.current = selectedRowData[0].sub_account\n\n      closePolicyIdClientIdRefId();\n      setTimeout(() => {\n        refDebit.current?.focus();\n      }, 200);\n    },\n    searchRef: IdsSearchInput,\n  });\n  const {\n    ModalComponent: ModalTransactionAccount,\n    openModal: openTransactionAccount,\n    isLoading: isLoadingTransactionAccount,\n    closeModal: closeTransactionAccount,\n  } = useQueryModalTable({\n    link: {\n      url: \"/task/accounting/general-journal/get-transaction-account\",\n      queryUrlName: \"transactionCodeSearch\",\n    },\n    columns: [\n      { field: \"Code\", headerName: \"Code\", width: 130 },\n      {\n        field: \"Description\",\n        headerName: \"Description\",\n        flex: 1,\n      },\n    ],\n    queryKey: \"get-transaction-account\",\n    uniqueId: \"Code\",\n    responseDataKey: \"getTransactionAccount\",\n    onSelected: (selectedRowData) => {\n      if (refTC.current) {\n        refTC.current.value = selectedRowData[0].Code\n      }\n      refTCDesc.current = selectedRowData[0].Description\n      closeTransactionAccount();\n      setTimeout(() => {\n        refRemarks.current?.focus();\n      }, 200);\n    },\n    searchRef: IdsSearchInput,\n  });\n  const handleInputChange = (e: any) => {\n    const { name, value } = e.target;\n    dispatch({ type: \"UPDATE_FIELD\", field: name, value });\n  };\n  const handleOnSave = useCallback(() => {\n    if (refRefNo.current?.value === \"\") {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: \"Please provide reference number!\",\n        timer: 1500,\n      });\n    }\n    if (refExplanation.current?.value === \"\") {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: \"Please provide explanation!\",\n        timer: 1500,\n      }).then(() => {\n        wait(300).then(() => {\n          refExplanation.current?.focus();\n        });\n      });\n    }\n    if (\n      parseFloat(monitoring.totalDebit.replace(/,/g, '')) <= 0 ||\n      parseFloat(monitoring.totalCredit.replace(/,/g, '')) <= 0\n    ) {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title:\n          \"Total Debit and Credit amount must not be zero(0), please double check the entries\",\n        timer: 1500,\n      }).then(() => {\n        wait(300).then(() => { });\n      });\n    }\n    if (monitoring.totalDebit !== monitoring.totalCredit) {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title:\n          \"Total Debit and Credit amount must be balance, please double check the entries\",\n        timer: 1500,\n      }).then(() => {\n        wait(300).then(() => { });\n      });\n    }\n\n    const generalJournalData: any = table.current.getData()\n    const generalJournalDataFormatted = generalJournalData.map((itm: any) => {\n      return {\n        code: itm[0],\n        acctName: itm[1],\n        subAcctName: itm[2],\n        ClientName: itm[3],\n        debit: itm[4],\n        credit: itm[5],\n        TC_Code: itm[6],\n        remarks: itm[7],\n        vatType: itm[8],\n        invoice: itm[9],\n        TempID: itm[10],\n        IDNo: itm[11],\n        BranchCode: itm[12],\n      }\n    })\n    if (modeUpdate) {\n      codeCondfirmationAlert({\n        isUpdate: true,\n        cb: (userCodeConfirmation) => {\n          addGeneralJournalMutate({\n            hasSelected: true,\n            refNo: refRefNo.current?.value,\n            dateEntry: refDate.current?.value,\n            explanation: refExplanation.current?.value,\n            generalJournal: generalJournalDataFormatted,\n            userCodeConfirmation,\n          });\n        },\n      });\n    } else {\n      saveCondfirmationAlert({\n        isConfirm: () => {\n          addGeneralJournalMutate({\n            hasSelected: false,\n            refNo: refRefNo.current?.value,\n            dateEntry: refDate.current?.value,\n            explanation: refExplanation.current?.value,\n            generalJournal: generalJournalDataFormatted,\n          });\n        },\n      });\n    }\n  }, [monitoring, addGeneralJournalMutate, modeUpdate])\n  function handleVoid() {\n    codeCondfirmationAlert({\n      isUpdate: false,\n      text: `Are you sure you want to void ${state.refNo}`,\n      cb: (userCodeConfirmation) => {\n        mutateVoidGeneralJournal({\n          refNo: state.refNo,\n          dateEntry: state.dateEntry,\n          userCodeConfirmation,\n        });\n      },\n    });\n  }\n  function resetRow() {\n    if (refCode.current) {\n      refCode.current.value = \"\"\n    }\n    if (refAccountName.current) {\n      refAccountName.current.value = \"\"\n    }\n    if (refName.current) {\n      refName.current.value = \"\"\n    }\n    if (refSubAccount.current) {\n      refSubAccount.current.value = \"\"\n    }\n    if (refTC.current) {\n      refTC.current.value = \"\"\n    }\n    if (refDebit.current) {\n      refDebit.current.value = \"\"\n    }\n    if (refCredit.current) {\n      refCredit.current.value = \"\"\n    }\n    if (refRemarks.current) {\n      refRemarks.current.value = \"\"\n    }\n    if (refVat.current) {\n      refVat.current.value = \"Non-VAT\"\n    }\n    if (refInvoice.current) {\n      refInvoice.current.value = \"\"\n    }\n\n    refTCDesc.current = \"\"\n    refIDNo.current = \"\"\n    refSubAcct.current = \"\"\n  }\n  function handleRowSave() {\n    if (refCode.current && refCode.current.value === \"\") {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: \"Code is required!\",\n        timer: 1500,\n      }).then(() => {\n        wait(300).then(() => {\n          return openChartAccountSearch(state.code);\n        })\n      });\n    }\n\n    if (refName.current && refName.current.value === \"\") {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: \"ID is required!\",\n        timer: 1500,\n      }).then(() => {\n        wait(300).then(() => {\n          return openPolicyIdClientIdRefId(refName.current?.value)\n        })\n      });\n    }\n\n    if (refDebit.current && isNaN(parseFloat(refDebit.current?.value.replace(/,/g, \"\")))) {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: \"Debit is required!\",\n        timer: 1500,\n      }).then(() => {\n        wait(300).then(() => {\n          refDebit.current?.focus()\n        })\n      })\n    }\n    if (refCredit.current && isNaN(parseFloat(refCredit.current?.value.replace(/,/g, \"\")))) {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: \"Credit is required!\",\n        timer: 1500,\n      }).then(() => {\n        wait(300).then(() => {\n          refCredit.current?.focus()\n        })\n      })\n    }\n    if (\n      refDebit.current &&\n      refCredit.current &&\n      parseFloat(refCredit.current?.value.replace(/,/g, \"\")) === 0 &&\n      parseFloat(refDebit.current?.value.replace(/,/g, \"\")) === 0\n    ) {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: \"Credit and Debit must be different!\",\n        timer: 1500,\n      }).then(() => {\n        wait(300).then(() => {\n          refCredit.current?.focus()\n        })\n      })\n    }\n    if (refTC.current && refTC.current?.value === \"\") {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: \"TC is required!\",\n        timer: 1500,\n      }).then(() => {\n        wait(300).then(() => {\n          openTransactionAccount(state.TC_Code);\n        })\n      });\n    }\n    if (refCode.current && refCode.current?.value.length >= 200) {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: \"Code is too long!\",\n        timer: 1500,\n      }).then(() => {\n        wait(300).then(() => {\n          refCode.current?.focus()\n        })\n      })\n    }\n    if (refName.current && refName.current?.value.length >= 200) {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: \"Client name is too long!\",\n        timer: 1500,\n      }).then(() => {\n        wait(300).then(() => {\n          refName.current?.focus()\n        })\n      })\n    }\n    if (refTC.current && refTC.current.value.length >= 200) {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: \"TC is too long!\",\n        timer: 1500,\n      }).then(() => {\n        wait(300).then(() => {\n          refTC.current?.focus()\n        })\n      })\n    }\n    if (refInvoice.current && refInvoice.current.value.length >= 200) {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: \"Invoice is too long!\",\n        timer: 1500,\n      }).then(() => {\n        wait(300).then(() => {\n          refInvoice.current?.focus()\n        })\n      })\n    }\n    const getSelectedRow = table.current.getSelectedRow()\n    const isUpdate = getSelectedRow !== null\n\n    Swal.fire({\n      title: isUpdate\n        ? `Are you sure you want to update row?`\n        : `Are you sure you want to add new row?`,\n      text: \"You won't be able to revert this!\",\n      icon: \"warning\",\n      showCancelButton: true,\n      confirmButtonColor: \"#3085d6\",\n      cancelButtonColor: \"#d33\",\n      confirmButtonText: isUpdate\n        ? \"Yes, update it!\"\n        : \"Yes Add it\",\n    }).then((result) => {\n      if (result.isConfirmed) {\n        if (\n          refCode.current &&\n          refAccountName.current &&\n          refSubAccount.current &&\n          refName.current &&\n          refDebit.current &&\n          refCredit.current &&\n          refTC.current &&\n          refRemarks.current &&\n          refVat.current &&\n          refInvoice.current\n        ) {\n          const newData: any = table.current.getData()\n          const newInput = [\n            refCode.current.value,\n            refAccountName.current.value,\n            refSubAccount.current.value,\n            refName.current.value,\n            refDebit.current.value,\n            refCredit.current.value,\n            refTC.current.value,\n            refRemarks.current.value,\n            refVat.current.value,\n            refInvoice.current.value,\n            refIDNo.current,\n            refIDNo.current,\n            refSubAcct.current,\n          ]\n\n          let taxtInput: any = []\n          let taxableamt = 0\n\n          if (newInput[8] === 'VAT' && newInput[0] !== '1.06.02') {\n            const debit = parseFloat(newInput[4].replace(/,/g, ''))\n            const credit = parseFloat(newInput[5].replace(/,/g, ''))\n            if (debit > 0) {\n              taxableamt = debit / 1.12\n              newInput[4] = formatNumber(taxableamt)\n            } else {\n              taxableamt = credit / 1.12\n              newInput[5] = formatNumber(taxableamt)\n            }\n\n            let inputtax = taxableamt * 0.12\n            let taxtDebit = ''\n            let taxtCredit = ''\n            if (debit > 0) {\n              taxtDebit = formatNumber(inputtax)\n              taxtCredit = newInput[5]\n            } else {\n              taxtCredit = formatNumber(inputtax)\n              taxtDebit = newInput[4]\n            }\n\n            taxtInput = [\n              \"1.06.02\",\n              \"Input Tax\",\n              refSubAccount.current.value,\n              refName.current.value,\n              taxtDebit,\n              taxtCredit,\n              refTC.current.value,\n              refRemarks.current.value,\n              refVat.current.value,\n              refInvoice.current.value,\n              refIDNo.current,\n              refIDNo.current,\n              refSubAcct.current,\n            ]\n\n          }\n          if (isUpdate) {\n            newData[getSelectedRow] = newInput\n            table.current.setSelectedRow(null)\n          } else {\n            newData[newData.length] = newInput\n          }\n          table.current.setData(newData)\n          setTimeout(() => {\n            if (newInput[8] === 'VAT' && newInput[0] !== '1.06.02') {\n              const getNewData = table.current.getData()\n              if (isUpdate) {\n                getNewData.splice(getSelectedRow + 1, 0, taxtInput);\n              } else {\n                getNewData[getNewData.length] = taxtInput\n              }\n              table.current.setData(getNewData)\n            }\n            resetRow()\n          }, 100)\n\n          setTimeout(() => {\n            if (refCode.current) {\n              refCode.current.focus()\n            }\n          }, 350)\n          monitor()\n        }\n\n      }\n    });\n  }\n  function handleJobs() {\n    setOpenJobs((d) => !d);\n  }\n  function handleClickPrint() {\n    flushSync(() => {\n      const data = table.current.getData()\n      const generalJournal: any = data.map((itm: any) => {\n\n        return {\n          code: itm[0],\n          acctName: itm[1],\n          subAcctName: itm[2],\n          ClientName: itm[3],\n          debit: itm[4],\n          credit: itm[5],\n          TC_Code: itm[6],\n          remarks: itm[7],\n          vatType: itm[8],\n          invoice: itm[9],\n          TempID: itm[10],\n          IDNo: itm[11],\n          BranchCode: itm[12]\n        }\n      })\n      console.log(generalJournal)\n\n      localStorage.removeItem(\"printString\");\n      localStorage.setItem(\"dataString\", JSON.stringify(generalJournal));\n      localStorage.setItem(\"paper-width\", \"8.5in\");\n      localStorage.setItem(\"paper-height\", \"11in\");\n      localStorage.setItem(\"module\", \"general-journal\");\n      localStorage.setItem(\"state\", JSON.stringify({\n        JVNo: refRefNo.current?.value,\n        JVDate: refDate.current?.value,\n        JVExp: refExplanation.current?.value\n\n      }));\n      localStorage.setItem(\n        \"column\",\n        JSON.stringify([\n          { datakey: \"code\", header: \"ACCT #\", width: \"70px\" },\n          { datakey: \"acctName\", header: \"ACCOUNT TITLE\", width: \"130px\" },\n          { datakey: \"IDNo\", header: \"ID NO.\", width: \"110px\" },\n          { datakey: \"ClientName\", header: \"IDENTITY\", width: \"200px\" },\n          { datakey: \"debit\", header: \"DEBIT\", width: \"75px\" },\n          { datakey: \"credit\", header: \"CREDIT\", width: \"75px\" },\n        ])\n      );\n      localStorage.setItem(\n        \"title\",\n        user?.department === \"UMIS\"\n          ? \"UPWARD MANAGEMENT INSURANCE SERVICES\\n\"\n          : \"UPWARD CONSULTANCY SERVICES AND MANAGEMENT INC.\\n\"\n      );\n    });\n    window.open(\"/dashboard/print\", \"_blank\");\n  }\n  function onCancel() {\n    resetFieldRef()\n    resetRowFieldRef()\n    resetTable()\n    resetMonitoring()\n    setMode(\"\")\n\n  }\n  function monitor() {\n    setTimeout(() => {\n      const getData = table.current.getData()\n      const totalCredit = getData.reduce((a: any, b: any) => a + parseFloat(b[4].replace(/,/g, '')), 0)\n      const totalDebit = getData.reduce((a: any, b: any) => a + parseFloat(b[5].replace(/,/g, '')), 0)\n      setMonitoring({\n        totalRow: `${getData.length}`,\n        totalCredit: formatNumber(totalCredit),\n        totalDebit: formatNumber(totalDebit),\n        balance: formatNumber(totalCredit - totalDebit),\n      })\n    }, 200)\n  }\n  function resetFieldRef() {\n    refetchGeneralJournalGenerator()\n    if (refDate.current) {\n      refDate.current.value = format(new Date(), \"yyyy-MM-dd\")\n    }\n    if (refExplanation.current) {\n      refExplanation.current.value = \"\"\n    }\n  }\n  function resetRowFieldRef() {\n    if (refCode.current) {\n      refCode.current.value = ''\n    }\n    if (refAccountName.current) {\n      refAccountName.current.value = ''\n    }\n    if (refSubAccount.current) {\n      refSubAccount.current.value = ''\n    }\n    if (refName.current) {\n      refName.current.value = ''\n    }\n\n\n    if (refDebit.current) {\n      refDebit.current.value = ''\n    }\n    if (refCredit.current) {\n      refCredit.current.value = ''\n    }\n    if (refTC.current) {\n      refTC.current.value = ''\n    }\n    if (refRemarks.current) {\n      refRemarks.current.value = ''\n    }\n    if (refVat.current) {\n      refVat.current.value = 'Non-VAT'\n    }\n    if (refInvoice.current) {\n      refInvoice.current.value = ''\n    }\n  }\n  function resetTable() {\n    table.current.resetTable()\n  }\n  function resetMonitoring() {\n    setMonitoring({\n      totalRow: \"0\",\n      totalDebit: \"0.00\",\n      totalCredit: \"0.00\",\n      balance: \"0.00\"\n    })\n  }\n\n  useEffect(() => {\n    const handleKeyDown = (event: any) => {\n      if ((event.ctrlKey || event.metaKey) && event.key === 's') {\n        event.preventDefault();\n        handleOnSave();\n      }\n    };\n\n    window.addEventListener('keydown', handleKeyDown);\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [handleOnSave]);\n\n\n  function formatNumber(Amount: number) {\n    return Amount.toLocaleString(\"en-US\", {\n      minimumFractionDigits: 2,\n      maximumFractionDigits: 2,\n    })\n  }\n\n  async function DoRPTTransactionNILHN() {\n    setLoadingJob(true)\n    setOpenJobs(false)\n    setTimeout(async () => {\n      let JobDate = new Date(state.jobTransactionDate)\n      let dtFrom = format(JobDate, \"yyyy-MM-01-\")\n      let dtTo = format(lastDayOfMonth(JobDate), \"yyyy-MM-dd\")\n      let iRow = 0\n\n      const qry = `\n    select \n      a.PolicyNo,\n      a.IDNo,\n      (TotalDue - ifnull(b.TotalPaid,0)) as 'Amount',\n      c.Mortgagee \n    from Policy a \n      left join (\n        select \n          IDNo,\n          sum(Debit) as 'TotalPaid' \n        from collection \n        group by IDNo\n      ) b on b.IDNo = a.PolicyNo \n      inner join VPolicy c on c.PolicyNo = a.PolicyNo \n      where\n      (TotalDue - ifnull(b.TotalPaid,0)) <> 0 and \n      a.PolicyType = 'TPL' and \n      c.Mortgagee = 'N I L - HN' and \n      (\n        a.DateIssued >= '${dtFrom}' and \n        a.DateIssued <= '${dtTo}'\n      ) \n      order by a.DateIssued\n      `\n      let dgvJournal: any = []\n      const { data } = await executeQueryToClient(qry)\n      const dataArray = data.data\n      if (dataArray.length > 0) {\n        let totalAmount = 0\n        let i = 0\n        for (const itm of dataArray) {\n          let tmpID = \"\";\n          if (i == 0) {\n            iRow = 0\n          } else {\n            iRow = iRow + 1\n          }\n\n          tmpID = itm.IDNo\n          const { data: tmpNameRes } = await executeQueryToClient(`SELECT Shortname ,Sub_ShortName, Sub_Acct FROM (${ID_Entry}) id_entry WHERE IDNo = '${tmpID}'`)\n          dgvJournal[iRow] = [\n            \"1.03.01\", // 0\n            \"Premium Receivables\", // 1\n            tmpNameRes.data[0]?.Sub_ShortName, // 2\n            tmpNameRes.data[0]?.Shortname, // 3\n            \"0.00\", // 4\n            formatNumber(itm.Amount), //5\n            \"RPT\", // 6\n            \"\", // 7\n            \"Non-VAT\", //8\n            \"\",\n            itm.PolicyNo,\n            itm.PolicyNo,\n            tmpNameRes.data[0]?.Sub_Acct, // 8\n          ]\n\n          totalAmount = totalAmount + parseFloat(itm.Amount.toString().replace(/,/g, ''))\n          i += 1\n        }\n\n\n        const { data: tmpNameRes } = await executeQueryToClient(`SELECT Shortname ,Sub_ShortName, Sub_Acct FROM (${ID_Entry}) id_entry WHERE IDNo = 'O-1024-00011'`)\n\n        dgvJournal[iRow + 1] = [\n          \"1.03.01\",\n          \"Premium Receivables\",\n          tmpNameRes.data[0]?.Sub_ShortName, // 2\n          tmpNameRes.data[0]?.Shortname, // 3\n          formatNumber(totalAmount), //4\n          \"0.00\", // 5,\n          \"RPT\", // 7\n          \"\", // 9\n          \"Non-VAT\", //8\n          \"\",\n          \"1.05.02\", // 9\n          \"1.05.02\", // 10\n          tmpNameRes.data[0]?.Sub_Acct, // 12\n        ]\n        table.current.setData(dgvJournal)\n        setMode('update')\n        setOpenJobs(false)\n      }\n      setLoadingJob(false)\n    }, 300)\n\n\n  }\n\n  return (\n    <>\n      <PageHelmet title=\"General Journal\" />\n      {(loadingGetSearchSelectedGeneralJournal ||\n        loadingJob ||\n        loadingGeneralJournalMutate ||\n        loadingVoidGeneralJournalMutate\n      ) && <Loading />}\n      <div\n        style={{\n          display: \"flex\",\n          flexDirection: \"column\",\n          width: \"100%\",\n          height: \"100%\",\n          flex: 1,\n          padding: \"10px\",\n          background: \"#F1F1F1\"\n        }}\n      >\n        <div\n          style={{\n            display: \"flex\",\n            alignItems: \"center\",\n            columnGap: \"5px\",\n          }}\n        >\n          <div\n            style={{\n              display: \"flex\",\n              alignItems: \"center\",\n              columnGap: \"5px\",\n            }}\n          >\n            {isLoadingSearchGeneralJounal ? (\n              <LoadingButton loading={isLoadingSearchGeneralJounal} />\n            ) : (\n              <TextInput\n                label={{\n                  title: \"Search: \",\n                  style: {\n                    fontSize: \"12px\",\n                    fontWeight: \"bold\",\n                    width: \"50px\",\n                  },\n                }}\n                input={{\n                  className: \"search-input-up-on-key-down\",\n                  type: \"search\",\n                  onKeyDown: (e) => {\n                    if (e.key === \"Enter\" || e.key === \"NumpadEnter\") {\n                      e.preventDefault();\n                      openSearchGeneralJounal(e.currentTarget.value);\n                    }\n                    if (e.key === \"ArrowDown\") {\n                      e.preventDefault();\n                      const datagridview = document.querySelector(\n                        \".grid-container\"\n                      ) as HTMLDivElement;\n                      datagridview.focus();\n                    }\n                  },\n                  style: { width: \"500px\" },\n                }}\n                inputRef={inputSearchRef}\n              />\n\n            )}\n            {modeDefault && (\n              <Button\n                sx={{\n                  height: \"30px\",\n                  fontSize: \"11px\",\n                }}\n                variant=\"contained\"\n                startIcon={<AddIcon sx={{ width: 15, height: 15 }} />}\n                id=\"entry-header-save-button\"\n                onClick={() => {\n                  setMode('add')\n                }}\n                color=\"primary\"\n              >\n                New\n              </Button>\n            )}\n            <LoadingButton\n              sx={{\n                height: \"30px\",\n                fontSize: \"11px\",\n              }}\n              loading={loadingGeneralJournalMutate}\n              disabled={modeDefault}\n              onClick={handleOnSave}\n              color=\"success\"\n              variant=\"contained\"\n            >\n              Save\n            </LoadingButton>\n            {(modeAdd || modeUpdate) && (\n              <LoadingButton\n                sx={{\n                  height: \"30px\",\n                  fontSize: \"11px\",\n                }}\n                variant=\"contained\"\n                startIcon={<CloseIcon sx={{ width: 15, height: 15 }} />}\n                color=\"error\"\n                onClick={() => {\n                  Swal.fire({\n                    title: \"Are you sure?\",\n                    text: \"You won't be able to revert this!\",\n                    icon: \"warning\",\n                    showCancelButton: true,\n                    confirmButtonColor: \"#3085d6\",\n                    cancelButtonColor: \"#d33\",\n                    confirmButtonText: \"Yes, cancel it!\",\n                  }).then((result) => {\n                    if (result.isConfirmed) {\n                      onCancel()\n                    }\n                  });\n                }}\n                disabled={modeDefault}\n              >\n                Cancel\n              </LoadingButton>\n            )}\n            <LoadingButton\n              sx={{\n                height: \"30px\",\n                fontSize: \"11px\",\n                background: deepOrange[500],\n                \":hover\": {\n                  background: deepOrange[600],\n                },\n              }}\n              onClick={handleVoid}\n              loading={loadingVoidGeneralJournalMutate}\n              disabled={modeDefault}\n              variant=\"contained\"\n              startIcon={<NotInterestedIcon sx={{ width: 20, height: 20 }} />}\n            >\n              Void\n            </LoadingButton>\n            <LoadingButton\n              sx={{\n                height: \"30px\",\n                fontSize: \"11px\",\n                background: brown[500],\n                \":hover\": {\n                  background: brown[600],\n                },\n              }}\n              onClick={handleJobs}\n              variant=\"contained\"\n              startIcon={<CardTravelIcon sx={{ width: 20, height: 20 }} />}\n            >\n              Jobs\n            </LoadingButton>\n            <Button\n              disabled={modeDefault}\n              id=\"basic-button\"\n              aria-haspopup=\"true\"\n              onClick={handleClickPrint}\n              sx={{\n                height: \"30px\",\n                fontSize: \"11px\",\n                color: \"white\",\n                backgroundColor: grey[600],\n                \"&:hover\": {\n                  backgroundColor: grey[700],\n                },\n              }}\n            >\n              Print\n            </Button>\n          </div>\n          <div\n            style={{\n              fontSize: \"13px\",\n              border: \"1px solid #d4d4d8\",\n              width: \"100%\",\n              display: \"flex\",\n              columnGap: \"50px\",\n              height: \"30px\",\n              alignItems: \"center\",\n              justifyContent: \"center\",\n            }}\n          >\n            <p style={{ margin: 0, padding: 0, color: \"black\" }}>\n              <span style={{ fontSize: \"12px\" }}>Total Rows:</span> <strong>{monitoring.totalRow}</strong>\n            </p>\n            <p style={{ margin: 0, padding: 0, color: \"black\" }}>\n              <span style={{ fontSize: \"12px\" }}>Total Debit:</span> <strong>{monitoring.totalDebit}</strong>\n            </p>\n            <p style={{ margin: 0, padding: 0, color: \"black\" }}>\n              <span style={{ fontSize: \"12px\" }}>Total Credit:</span> <strong>{monitoring.totalCredit}</strong>\n            </p>\n            <p style={{ margin: 0, padding: 0, color: \"black\" }}>\n              <span style={{ fontSize: \"12px\" }}>Balance:</span>{\" \"}\n              <strong\n                style={{\n                  color:\n                    parseInt(monitoring.balance.replace(/,/g, \"\")) !== 0\n                      ? \"red\"\n                      : \"black\",\n                }}\n              >\n                {monitoring.balance}\n              </strong>\n            </p>\n          </div>\n        </div>\n        <div\n          style={{\n            position: \"relative\",\n            width: \"100%\",\n            height: \"auto\",\n            display: \"flex\",\n            marginTop: \"10px\",\n            gap: \"10px\",\n            padding: \"5px\",\n          }}\n        >\n          {loadingGeneralJournalGenerator ? (\n            <LoadingButton loading={loadingGeneralJournalGenerator} />\n          ) : (\n            <TextInput\n              label={{\n                title: \"Ref. No. : \",\n                style: {\n                  fontSize: \"12px\",\n                  fontWeight: \"bold\",\n                  width: \"70px\",\n                },\n              }}\n              input={{\n                disabled: modeDefault || modeUpdate,\n                type: \"text\",\n                style: { width: \"190px\" },\n                onKeyDown: (e) => {\n                  if (e.code === \"NumpadEnter\" || e.code === 'Enter') {\n                    refDate.current?.focus()\n                  }\n                }\n              }}\n              inputRef={refRefNo}\n            />\n          )}\n          <TextInput\n            label={{\n              title: \"Date : \",\n              style: {\n                fontSize: \"12px\",\n                fontWeight: \"bold\",\n                width: \"50px\",\n              },\n            }}\n            input={{\n              defaultValue: format(new Date(), \"yyyy-MM-dd\"),\n              disabled: modeDefault,\n              type: \"date\",\n              style: { width: \"190px\" },\n              onKeyDown: (e) => {\n                if (e.code === \"NumpadEnter\" || e.code === 'Enter') {\n                  refExplanation.current?.focus()\n                }\n              }\n            }}\n            inputRef={refDate}\n          />\n          <TextInput\n            label={{\n              title: \"Explanation : \",\n              style: {\n                fontSize: \"12px\",\n                fontWeight: \"bold\",\n                width: \"90px\",\n              },\n            }}\n            input={{\n              disabled: modeDefault,\n              type: \"text\",\n              style: { width: \"600px\" },\n              onKeyDown: (e) => {\n                if (e.code === \"NumpadEnter\" || e.code === 'Enter') {\n                  refCode.current?.focus()\n                }\n              }\n            }}\n            inputRef={refExplanation}\n          />\n        </div>\n        <fieldset\n          style={{\n            border: \"1px solid #cbd5e1\",\n            borderRadius: \"5px\",\n            position: \"relative\",\n            width: \"100%\",\n            height: \"auto\",\n            marginTop: \"10px\",\n\n            padding: \"15px\",\n          }}\n        >\n          <div\n            style={{\n              display: \"flex\",\n              gap: \"10px\",\n            }}\n          >\n            {isLoadingChartAccountSearch ? (\n              <LoadingButton loading={isLoadingChartAccountSearch} />\n            ) : (\n              <TextInput\n                label={{\n                  title: \"Code : \",\n                  style: {\n                    fontSize: \"12px\",\n                    fontWeight: \"bold\",\n                    width: \"70px\",\n                  },\n                }}\n                input={{\n                  disabled: modeDefault,\n                  type: \"text\",\n                  style: { width: \"190px\" },\n                  onKeyDown: (e) => {\n                    if (e.key === \"Enter\" || e.key === \"NumpadEnter\") {\n                      e.preventDefault();\n                      if (refCode.current) {\n                        openChartAccountSearch(refCode.current.value)\n                      }\n                    }\n                  }\n                }}\n                inputRef={refCode}\n                icon={<SupervisorAccountIcon sx={{ fontSize: \"18px\", color: modeDefault ? \"gray\" : \"black\" }} />}\n                onIconClick={(e) => {\n                  e.preventDefault()\n                  if (refCode.current) {\n                    openChartAccountSearch(refCode.current.value)\n                  }\n                }}\n                disableIcon={modeDefault}\n              />\n            )}\n\n            <TextInput\n              label={{\n                title: \"Account Name : \",\n                style: {\n                  fontSize: \"12px\",\n                  fontWeight: \"bold\",\n                  width: \"100px\",\n                },\n              }}\n              input={{\n                disabled: modeDefault,\n                type: \"text\",\n                style: { width: \"190px\" },\n                readOnly: true,\n                onKeyDown: (e) => {\n                  if (e.code === \"NumpadEnter\" || e.code === 'Enter') {\n                    refSubAccount.current?.focus()\n                  }\n                }\n              }}\n              inputRef={refAccountName}\n            />\n\n            <TextInput\n              label={{\n                title: \"Sub Account : \",\n                style: {\n                  fontSize: \"12px\",\n                  fontWeight: \"bold\",\n                  width: \"100px\",\n                },\n              }}\n              input={{\n                disabled: modeDefault,\n                type: \"text\",\n                style: { width: \"190px\" },\n                readOnly: true,\n                onKeyDown: (e) => {\n                  if (e.code === \"NumpadEnter\" || e.code === 'Enter') {\n                    refName.current?.focus()\n                  }\n                }\n              }}\n              inputRef={refSubAccount}\n            />\n\n            {isLoadingPolicyIdClientIdRefId ? (\n              <LoadingButton loading={isLoadingPolicyIdClientIdRefId} />\n            ) : (\n              <TextInput\n                label={{\n                  title: \"I.D : \",\n                  style: {\n                    fontSize: \"12px\",\n                    fontWeight: \"bold\",\n                    width: \"70px\",\n                  },\n                }}\n                input={{\n                  disabled: modeDefault,\n                  type: \"text\",\n                  style: { width: \"300px\" },\n                  onKeyDown: (e) => {\n                    if (e.key === \"Enter\" || e.key === \"NumpadEnter\") {\n                      e.preventDefault();\n                      if (refName.current) {\n                        openPolicyIdClientIdRefId(refName.current.value)\n                      }\n                    }\n                  }\n                }}\n                inputRef={refName}\n                icon={<AccountCircleIcon sx={{ fontSize: \"18px\", color: modeDefault ? \"gray\" : \"black\" }} />}\n                onIconClick={(e) => {\n                  e.preventDefault()\n                  if (refName.current) {\n                    openPolicyIdClientIdRefId(refName.current.value)\n                  }\n                }}\n                disableIcon={modeDefault}\n              />\n            )}\n          </div>\n          <div\n            style={{\n              display: \"flex\",\n              gap: \"10px\",\n              marginTop: \"10px\",\n            }}\n          >\n            <TextFormatedInput\n              label={{\n                title: \"Debit : \",\n                style: {\n                  fontSize: \"12px\",\n                  fontWeight: \"bold\",\n                  width: \"70px\",\n                },\n              }}\n              input={{\n                disabled: modeDefault,\n                type: \"text\",\n                style: { width: \"190px\" },\n                onKeyDown: (e) => {\n                  if (e.code === \"NumpadEnter\" || e.code === 'Enter') {\n                    refCredit.current?.focus()\n                  }\n                }\n              }}\n              inputRef={refDebit}\n            />\n            <TextFormatedInput\n              label={{\n                title: \"Credit : \",\n                style: {\n                  fontSize: \"12px\",\n                  fontWeight: \"bold\",\n                  width: \"100px\",\n                },\n              }}\n              input={{\n                disabled: modeDefault,\n                type: \"text\",\n                style: { width: \"190px\" },\n                onKeyDown: (e) => {\n                  if (e.code === \"NumpadEnter\" || e.code === 'Enter') {\n                    refTC.current?.focus()\n                  }\n                }\n              }}\n              inputRef={refCredit}\n            />\n            {isLoadingTransactionAccount ? (\n              <LoadingButton loading={isLoadingTransactionAccount} />\n            ) : (\n              <TextInput\n                label={{\n                  title: \"TC : \",\n                  style: {\n                    fontSize: \"12px\",\n                    fontWeight: \"bold\",\n                    width: \"100px\",\n                  },\n                }}\n                input={{\n                  disabled: modeDefault,\n                  type: \"text\",\n                  style: { width: \"190px\" },\n                  onKeyDown: (e) => {\n                    if (e.key === \"Enter\" || e.key === \"NumpadEnter\") {\n                      e.preventDefault();\n                      if (refTC.current) {\n                        openTransactionAccount(refTC.current.value)\n                      }\n                    }\n                  }\n                }}\n                inputRef={refTC}\n                icon={<AccountBalanceWalletIcon sx={{ fontSize: \"18px\", color: modeDefault ? \"gray\" : \"black\" }} />}\n                onIconClick={(e) => {\n                  e.preventDefault()\n                  if (refTC.current) {\n                    openTransactionAccount(refTC.current.value)\n                  }\n                }}\n                disableIcon={modeDefault}\n              />\n            )}\n            <TextInput\n              label={{\n                title: \"Remarks : \",\n                style: {\n                  fontSize: \"12px\",\n                  fontWeight: \"bold\",\n                  width: \"70px\",\n                },\n              }}\n              input={{\n                disabled: modeDefault,\n                type: \"text\",\n                style: { width: \"300px\" },\n                onKeyDown: (e) => {\n                  if (e.code === \"NumpadEnter\" || e.code === 'Enter') {\n                    refVat.current?.focus()\n                  }\n                }\n              }}\n              inputRef={refRemarks}\n            />\n          </div>\n          <div style={{\n            display: \"flex\",\n            gap: \"10px\",\n            marginTop: \"10px\",\n          }}>\n\n            <SelectInput\n              label={{\n                title: \"Vat Type : \",\n                style: {\n                  fontSize: \"12px\",\n                  fontWeight: \"bold\",\n                  width: \"70px\",\n                },\n              }}\n              selectRef={refVat}\n              select={{\n                disabled: modeDefault,\n                style: { width: \"190px\", height: \"22px\" },\n                defaultValue: \"Non-VAT\",\n                onKeyDown: (e) => {\n                  if (e.code === \"NumpadEnter\" || e.code === 'Enter') {\n                    e.preventDefault()\n                    refInvoice.current?.focus()\n                  }\n                }\n              }}\n              datasource={[\n                { key: \"VAT\" },\n                { key: \"Non-VAT\" },\n              ]}\n              values={\"key\"}\n              display={\"key\"}\n            />\n            <TextInput\n              label={{\n                title: \"OR/Invoice No. : \",\n                style: {\n                  fontSize: \"12px\",\n                  fontWeight: \"bold\",\n                  width: \"100px\",\n                },\n              }}\n              input={{\n                disabled: modeDefault,\n                type: \"text\",\n                style: { width: \"300px\" },\n                onKeyDown: (e) => {\n                  if (e.code === \"NumpadEnter\" || e.code === 'Enter') {\n                    e.preventDefault()\n                    handleRowSave()\n                  }\n                }\n              }}\n              inputRef={refInvoice}\n            />\n\n            <Button\n              disabled={modeDefault}\n              sx={{\n                height: \"22px\",\n                fontSize: \"11px\",\n              }}\n              variant=\"contained\"\n              startIcon={<SaveIcon sx={{ fontSize: \"12px\", }} />}\n              onClick={() => {\n                handleRowSave()\n              }}\n              color=\"success\"\n            >\n              Save Row\n            </Button>\n          </div>\n        </fieldset>\n        <DataGridViewReact\n          ref={table}\n          columns={selectedCollectionColumns}\n          height='380px'\n          getSelectedItem={(rowItm: any) => {\n            if (rowItm) {\n              refIDNo.current = rowItm[11]\n              refSubAcct.current = rowItm[12]\n\n              if (refCode.current) {\n                refCode.current.value = rowItm[0]\n              }\n              if (refAccountName.current) {\n                refAccountName.current.value = rowItm[1]\n              }\n              if (refSubAccount.current) {\n                refSubAccount.current.value = rowItm[2]\n              }\n              if (refName.current) {\n                refName.current.value = rowItm[3]\n              }\n              if (refDebit.current) {\n                refDebit.current.value = rowItm[4]\n              }\n              if (refCredit.current) {\n                refCredit.current.value = rowItm[5]\n              }\n              if (refTC.current) {\n                refTC.current.value = rowItm[6]\n              }\n              if (refRemarks.current) {\n                refRemarks.current.value = rowItm[7]\n              }\n              if (refVat.current) {\n                refVat.current.value = rowItm[8]\n              }\n              if (refInvoice.current) {\n                refInvoice.current.value = rowItm[9]\n              }\n            } else {\n              resetRow()\n            }\n          }}\n          onKeyDown={(rowItm: any, rowIdx: any, e: any) => {\n            if (e.code === 'Delete' || e.code === 'Backspace') {\n              const isConfim = window.confirm(`Are you sure you want to delete?`)\n              if (isConfim) {\n                const debitTableData = table.current.getData()\n                debitTableData.splice(rowIdx, 1);\n                table.current.setData(debitTableData)\n\n                setTimeout(() => {\n                  const getData = table.current.getData()\n\n                  monitor()\n                }, 200)\n\n                return\n              }\n            }\n          }}\n        />\n        <Modal open={openJobs} onClose={() => setOpenJobs(false)}>\n          <Box\n            sx={{\n              position: \"absolute\" as \"absolute\",\n              top: \"50%\",\n              left: \"50%\",\n              transform: \"translate(-50%, -50%)\",\n              width: 470,\n              bgcolor: \"background.paper\",\n              p: 4,\n            }}\n          >\n            <IconButton\n              style={{\n                position: \"absolute\",\n                top: \"10px\",\n                right: \"10px\",\n              }}\n              aria-label=\"search-client\"\n              onClick={() => setOpenJobs(false)}\n            >\n              <CloseIcon />\n            </IconButton>\n            <Typography\n              id=\"modal-modal-title\"\n              variant=\"h6\"\n              component=\"h2\"\n              sx={{ marginBottom: \"20px\" }}\n            >\n              Jobs\n            </Typography>\n            <div\n              style={{\n                width: \"400px\",\n              }}\n            >\n              <div\n                style={{\n                  width: \"100%\",\n                  display: \"flex\",\n                  marginBottom: \"10px\",\n                  justifyContent: \"space-between\",\n                  alignItems: \"center\",\n                }}\n              >\n                <LocalizationProvider dateAdapter={AdapterDateFns}>\n                  <DatePicker\n                    sx={{\n                      width: \"200px\",\n                      \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n                    }}\n                    slotProps={{\n                      textField: {\n                        size: \"small\",\n                        name: \"\",\n                        InputLabelProps: {\n                          style: {\n                            fontSize: \"14px\",\n                          },\n                        },\n                        InputProps: {\n                          style: { height: \"27px\", fontSize: \"14px\" },\n                        },\n                      },\n                    }}\n                    label={\"Transaction Date: \"}\n                    views={[\"month\", \"year\"]}\n                    value={state.jobTransactionDate}\n                    onChange={(value) => {\n                      dispatch({\n                        type: \"UPDATE_FIELD\",\n                        field: \"jobTransactionDate\",\n                        value: value,\n                      });\n                    }}\n                  />\n                </LocalizationProvider>\n                <FormControlLabel\n                  sx={{\n                    height: \"30px\",\n                    \"& .MuiTypography-root\": {\n                      fontSize: \"14px\",\n                    },\n                  }}\n                  control={\n                    <Checkbox\n                      size=\"small\"\n                      checked={state.jobAutoExp}\n                      onChange={(e) => {\n                        dispatch({\n                          type: \"UPDATE_FIELD\",\n                          field: \"jobAutoExp\",\n                          value: !state.jobAutoExp,\n                        });\n                      }}\n                    />\n                  }\n                  label=\"Auto Explanation\"\n                />\n              </div>\n              <FormControl\n                fullWidth\n                size=\"small\"\n                variant=\"outlined\"\n                sx={{\n                  \".MuiFormLabel-root\": {\n                    fontSize: \"14px\",\n                    background: \"white\",\n                    zIndex: 99,\n                    padding: \"0 3px\",\n                  },\n                  \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n                }}\n              >\n                <InputLabel id=\"label-selection-job-type\">Type of Job</InputLabel>\n                <Select\n                  labelId=\"label-selection-job-type\"\n                  value={state.jobType}\n                  name=\"jobType\"\n                  onChange={handleInputChange}\n                  autoWidth\n                  sx={{\n                    height: \"27px\",\n                    fontSize: \"14px\",\n                  }}\n                >\n                  <MenuItem value={\"\"}> </MenuItem>\n                  <MenuItem value={\"0\"}>Reversal of Accrued Interest </MenuItem>\n                  <MenuItem value={\"1\"}>\n                    {\" \"}\n                    Income Recognition & Accrual of Interest\n                  </MenuItem>\n                  <MenuItem value={\"2\"}>Penalty Charges</MenuItem>\n                  <MenuItem value={\"3\"}>Penalty Income</MenuItem>\n                  <MenuItem value={\"4\"}>RPT Transaction (NIL-HN)</MenuItem>\n                  <MenuItem value={\"5\"}>RPT Transaction (AMIFIN)</MenuItem>\n                  <MenuItem value={\"6\"}>RPT Income</MenuItem>\n                  <MenuItem value={\"7\"}>Monthly Accrual Expenses</MenuItem>\n                  <MenuItem value={\"8\"}>Monthly Accrual Income</MenuItem>\n                  <MenuItem value={\"9\"}>\n                    Production (Milestone Guarantee)\n                  </MenuItem>\n                  <MenuItem value={\"10\"}>\n                    Production (Liberty Insurance Co.)\n                  </MenuItem>\n                  <MenuItem value={\"11\"}>Production (Federal Phoenix)</MenuItem>\n                </Select>\n              </FormControl>\n            </div>\n\n            <div\n              style={{\n                display: \"flex\",\n                columnGap: \"30px\",\n                alignItems: \"flex-end\",\n                marginTop: \"20px\",\n              }}\n            >\n              <LoadingButton\n                color=\"success\"\n                variant=\"contained\"\n                onClick={() => {\n                  if (state.jobType === '4') {\n                    DoRPTTransactionNILHN()\n                  }\n\n                }}\n              >\n                Create Job\n              </LoadingButton>\n              <Button\n                // ref={checkModalSaveButton}\n                color=\"error\"\n                variant=\"contained\"\n                onClick={() => setOpenJobs(false)}\n              >\n                Cancel\n              </Button>\n            </div>\n          </Box>\n        </Modal>\n        {ModalChartAccountSearch}\n        {ModalPolicyIdClientIdRefId}\n        {ModalTransactionAccount}\n        {ModalSearchGeneralJounal}\n      </div>\n    </>\n\n  );\n}\n\nfunction setNewStateValue(dispatch: any, obj: any) {\n  Object.entries(obj).forEach(([field, value]) => {\n    dispatch({ type: \"UPDATE_FIELD\", field, value });\n  });\n}\nconst ID_Entry = `\nSELECT \n       id_entry.IDNo,\n       id_entry.ShortName as Shortname,\n       IDType,\n       b.Acronym as Sub_Acct,\n       b.ShortName as Sub_ShortName\n   FROM\n       (SELECT \n           IF(aa.option = 'individual', CONCAT(IF(aa.lastname IS NOT NULL\n                   AND TRIM(aa.lastname) <> '', CONCAT(aa.lastname, ', '), ''), aa.firstname), aa.company) AS ShortName,\n               aa.entry_client_id AS IDNo,\n               aa.sub_account,\n               'Client' as IDType\n       FROM\n           entry_client aa UNION ALL SELECT \n           CONCAT(IF(aa.lastname IS NOT NULL\n                   AND TRIM(aa.lastname) <> '', CONCAT(aa.lastname, ', '), ''), aa.firstname) AS ShortName,\n               aa.entry_agent_id AS IDNo,\n               aa.sub_account,\n               'Agent' as IDType\n       FROM\n           entry_agent aa UNION ALL SELECT \n           CONCAT(IF(aa.lastname IS NOT NULL\n                   AND TRIM(aa.lastname) <> '', CONCAT(aa.lastname, ', '), ''), aa.firstname) AS ShortName,\n               aa.entry_employee_id AS IDNo,\n               aa.sub_account,\n               'Employee' as IDType\n       FROM\n           entry_employee aa UNION ALL SELECT \n           aa.fullname AS ShortName,\n               aa.entry_fixed_assets_id AS IDNo,\n               sub_account,\n                'Fixed Assets' as IDType\n       FROM\n           entry_fixed_assets aa UNION ALL SELECT \n           aa.description AS ShortName,\n               aa.entry_others_id AS IDNo,\n               aa.sub_account,\n               'Others' as IDType\n       FROM\n           entry_others aa UNION ALL SELECT \n           IF(aa.option = 'individual', CONCAT(IF(aa.lastname IS NOT NULL\n                   AND TRIM(aa.lastname) <> '', CONCAT(aa.lastname, ', '), ''), aa.firstname), aa.company) AS ShortName,\n               aa.entry_supplier_id AS IDNo,\n               aa.sub_account,\n                'Supplier' as IDType\n       FROM\n           entry_supplier aa) id_entry\n      left join sub_account b ON id_entry.sub_account = b.Sub_Acct\n `","import { useContext, useState } from \"react\";\nimport { useQuery } from \"react-query\";\nimport { AuthContext, User } from \"../components/AuthContext\";\nimport {\n  GridRowSelectionModel,\n  GridCellParams,\n  GridTreeNode,\n} from \"@mui/x-data-grid\";\nimport ModalWithTable from \"../components/ModalWithTable\";\nimport { flushSync } from \"react-dom\";\nimport { AxiosResponse, AxiosInstance } from \"axios\";\nimport { GridRowParams } from \"@mui/x-data-grid\";\ninterface QueryModalTableParamsType {\n  link?: {\n    url: string;\n    queryUrlName: string;\n  };\n  uniqueId: string;\n  queryKey: string;\n  responseDataKey: string;\n  columns: Array<any>;\n  onSelected?: (selectedRowData: Array<any>, data: Array<any>) => void;\n  onRemoveSelected?: (data: Array<any>) => void;\n  onSuccess?: (data: any) => void;\n  searchRef?: React.RefObject<HTMLInputElement>;\n  onCellKeyDown?: any;\n  onCloseFunction?: (search: any) => void;\n  CustomizeAxios?: (\n    myAxios: AxiosInstance,\n    user: User | null,\n    link: QueryModalTableParamsType[\"link\"],\n    search?: string\n  ) => Promise<AxiosResponse<any, any>>;\n  isRowSelectable?: ((params: GridRowParams<any>) => boolean) | undefined;\n  getCellClassName?:\n    | ((params: GridCellParams<any, any, any, GridTreeNode>) => string)\n    | undefined;\n}\n\nasync function CustomizeAxiosFunc(\n  myAxios: AxiosInstance,\n  user: User | null,\n  link: QueryModalTableParamsType[\"link\"],\n  search: string = \"\"\n) {\n  return myAxios.get(`${link?.url}?${link?.queryUrlName}=${search}`, {\n    headers: {\n      Authorization: `Bearer ${user?.accessToken}`,\n    },\n  });\n}\n\nconst useQueryModalTable = ({\n  link,\n  uniqueId,\n  queryKey,\n  responseDataKey,\n  columns,\n  onSelected = () => {},\n  onRemoveSelected = () => {},\n  onSuccess = () => {},\n  searchRef,\n  onCellKeyDown,\n  onCloseFunction = () => {},\n  CustomizeAxios = CustomizeAxiosFunc,\n  isRowSelectable,\n  getCellClassName,\n}: QueryModalTableParamsType) => {\n  const { myAxios, user } = useContext(AuthContext);\n  const [show, setShowModal] = useState(false);\n  const [rows, setRows] = useState<GridRowSelectionModel>([]);\n  async function customizeAxiostool(search: string = \"\") {\n    return await CustomizeAxios(myAxios, user, link, search);\n  }\n  const { isLoading, refetch } = useQuery({\n    queryKey: queryKey,\n    queryFn: async () => await customizeAxiostool(),\n    onSuccess: (res) => {\n      const response = res as any;\n      setRows(response.data[responseDataKey]);\n      onSuccess(response);\n    },\n    refetchOnWindowFocus: false,\n  });\n\n  const openModal = (search: string = \"\") => {\n    flushSync(() => {\n      setShowModal(true);\n    });\n    if (searchRef?.current) {\n      searchRef.current.value = search;\n      customizeAxiostool(search).then((res: any) => {\n        if (!res?.data.success) {\n          return alert(`Error : ${res?.data.message}`);\n        }\n        const response = res as any;\n        setRows(response.data[responseDataKey]);\n        if (searchRef?.current) searchRef.current.focus();\n      });\n    }\n  };\n\n  const closeModal = () => {\n    setShowModal(false);\n    if (onCloseFunction) {\n      onCloseFunction(searchRef?.current?.value);\n    }\n  };\n\n  const ModalComponent = (\n    <ModalWithTable\n      getCellClassName={getCellClassName}\n      searchRef={searchRef}\n      showModal={show}\n      onCloseModal={() => {\n        setShowModal(false);\n        if (onCloseFunction) {\n          onCloseFunction(searchRef?.current?.value);\n        }\n      }}\n      onClickCloseIcon={() => {\n        setShowModal(false);\n        if (onCloseFunction) {\n          onCloseFunction(searchRef?.current?.value);\n        }\n      }}\n      searchOnChange={(e) => {\n        // myAxios\n        //   .get(`${link.url}?${link.queryUrlName}=${e.target.value}`, {\n        //     headers: {\n        //       Authorization: `Bearer ${user?.accessToken}`,\n        //     },\n        //   })\n        //   .then((res: any) => {\n        //     if (!res?.data.success) {\n        //       return alert(`Error : ${res?.data.message}`);\n        //     }\n        //     const response = res as any;\n        //     setRows(response.data[responseDataKey]);\n        //   });\n      }}\n      onSearchKeyEnter={(value) => {\n        customizeAxiostool(value).then((res: any) => {\n          if (!res?.data.success) {\n            return alert(`Error : ${res?.data.message}`);\n          }\n          const response = res as any;\n          setRows(response.data[responseDataKey]);\n        });\n      }}\n      onCellKeyDown={onCellKeyDown}\n      height={300}\n      isLoading={isLoading}\n      queryKey={queryKey}\n      columns={columns}\n      onSelectionChange={(rowSelectionModel, data) => {\n        if (rowSelectionModel.length <= 0) {\n          return onRemoveSelected(data);\n        }\n        const selectedIDs = new Set(rowSelectionModel);\n        const selectedRowData = data.filter((row: any) => {\n          return selectedIDs.has(row[uniqueId].toString());\n        });\n        if (selectedRowData.length <= 0) return;\n        onSelected(selectedRowData, data);\n      }}\n      id={uniqueId}\n      rows={rows}\n      setRows={setRows}\n      isRowSelectable={isRowSelectable}\n    />\n  );\n\n  return {\n    show,\n    rows,\n    isLoading,\n    openModal,\n    closeModal,\n    ModalComponent,\n    refetch,\n  };\n};\n\nexport default useQueryModalTable;\n","import Swal from \"sweetalert2\";\n\nexport function codeCondfirmationAlert(props: {\n  cb: (userCodeConfirmation: string) => void;\n  isUpdate: boolean;\n  isConfirm?: () => void;\n  isDeclined?: () => void;\n  text?: string;\n}) {\n  Swal.fire({\n    title: `Are you sure!`,\n    html: props?.text\n      ? props?.text\n      : props.isUpdate\n      ? `Are you sure you want to make this change?`\n      : \"Are you sure you want to delete this?\",\n    icon: \"warning\",\n    input: \"text\",\n    inputAttributes: {\n      autocapitalize: \"off\",\n    },\n    showCancelButton: true,\n    confirmButtonText: \"Save\",\n    confirmButtonColor: \"green\",\n    showLoaderOnConfirm: true,\n    preConfirm: async (userCodeConfirmation) => {\n      try {\n        props.cb(userCodeConfirmation);\n      } catch (error) {\n        Swal.showValidationMessage(`\n            Request failed: ${error}\n          `);\n      }\n    },\n    allowOutsideClick: () => !Swal.isLoading(),\n  }).then((result) => {\n    if (result.isConfirmed) {\n      if (props.isConfirm) {\n        return props.isConfirm();\n      }\n    }\n    if (props.isDeclined) {\n      props.isDeclined();\n    }\n  });\n}\n\nexport function saveCondfirmationAlert(props: {\n  isConfirm?: () => void;\n  isDeclined?: () => void;\n  text?: string;\n}) {\n  Swal.fire({\n    title: \"Are you sure?\",\n    text: props?.text ? props?.text : \"Do you want to proceed with saving?\",\n    icon: \"warning\",\n    showCancelButton: true,\n    confirmButtonColor: \"#3085d6\",\n    cancelButtonColor: \"#d33\",\n    confirmButtonText: \"Yes, save it!\",\n  }).then((result) => {\n    if (result.isConfirmed) {\n      if (props.isConfirm) {\n        return props.isConfirm();\n      }\n    }\n    if (props.isDeclined) {\n      props.isDeclined();\n    }\n  });\n}\n","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M21 18v1c0 1.1-.9 2-2 2H5c-1.11 0-2-.9-2-2V5c0-1.1.89-2 2-2h14c1.1 0 2 .9 2 2v1h-9c-1.11 0-2 .9-2 2v8c0 1.1.89 2 2 2h9zm-9-2h10V8H12v8zm4-2.5c-.83 0-1.5-.67-1.5-1.5s.67-1.5 1.5-1.5 1.5.67 1.5 1.5-.67 1.5-1.5 1.5z\"\n}), 'AccountBalanceWallet');\nexports.default = _default;","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\"\n}), 'Add');\nexports.default = _default;","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M20 6h-3V4c0-1.11-.89-2-2-2H9c-1.11 0-2 .89-2 2v2H4c-1.11 0-2 .89-2 2v11c0 1.11.89 2 2 2h16c1.11 0 2-.89 2-2V8c0-1.11-.89-2-2-2zM9 4h6v2H9V4zm11 15H4v-2h16v2zm0-5H4V8h3v2h2V8h6v2h2V8h3v6z\"\n}), 'CardTravel');\nexports.default = _default;","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.42 0-8-3.58-8-8 0-1.85.63-3.55 1.69-4.9L16.9 18.31C15.55 19.37 13.85 20 12 20zm6.31-3.1L7.1 5.69C8.45 4.63 10.15 4 12 4c4.42 0 8 3.58 8 8 0 1.85-.63 3.55-1.69 4.9z\"\n}), 'NotInterested');\nexports.default = _default;","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M17 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V7l-4-4zm-5 16c-1.66 0-3-1.34-3-3s1.34-3 3-3 3 1.34 3 3-1.34 3-3 3zm3-10H5V5h10v4z\"\n}), 'Save');\nexports.default = _default;","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z\"\n}), 'Search');\nexports.default = _default;","const deepOrange = {\n  50: '#fbe9e7',\n  100: '#ffccbc',\n  200: '#ffab91',\n  300: '#ff8a65',\n  400: '#ff7043',\n  500: '#ff5722',\n  600: '#f4511e',\n  700: '#e64a19',\n  800: '#d84315',\n  900: '#bf360c',\n  A100: '#ff9e80',\n  A200: '#ff6e40',\n  A400: '#ff3d00',\n  A700: '#dd2c00'\n};\nexport default deepOrange;","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name lastDayOfMonth\n * @category Month Helpers\n * @summary Return the last day of a month for the given date.\n *\n * @description\n * Return the last day of a month for the given date.\n * The result will be in the local timezone.\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the last day of a month\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The last day of a month for 2 September 2014 11:55:00:\n * const result = lastDayOfMonth(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Tue Sep 30 2014 00:00:00\n */\nexport default function lastDayOfMonth(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var month = date.getMonth();\n  date.setFullYear(date.getFullYear(), month + 1, 0);\n  date.setHours(0, 0, 0, 0);\n  return date;\n}"],"names":["_ref","_ref$title","title","_jsxs","Helmet","children","_jsx","rel","type","href","concat","process","Loading","_Fragment","style","position","top","bottom","left","right","background","zIndex","backgroundColor","width","height","transform","boxShadow","display","columnGap","alignItems","justifyContent","padding","CircularProgress","color","bgcolor","p","heigth","ModalWithTable","isLoading","columns","queryKey","onSelectionChange","rows","setRows","id","onCloseModal","showModal","onClickCloseIcon","searchOnChange","searchRef","_ref$onSearchKeyEnter","onCellKeyDown","onSearchKeyEnter","isRowSelectable","getCellClassName","mainId","generateRandomClass","Modal","open","onClose","Box","sx","Typography","variant","component","mb","TextField","size","label","marginBottom","fullWidth","onChange","InputProps","inputRef","onKeyDown","e","_searchRef$current","code","preventDefault","current","value","keyBoardSelectionTable","className","Table","isSingleSelection","isRowFreeze","dataSelection","selection","data","table_id","IconButton","onClick","CloseIcon","Math","floor","random","el","_rows$","document","querySelectorAll","classList","add","firstRowParent","querySelector","firstInput","focus","event","MouseEvent","bubbles","cancelable","view","window","dispatchEvent","addEventListener","es","key","remove","keyBoardUpDown","forEach","idx","_rows$idx","_rows","_rows$idx2","_rows2","length","TableContext","createContext","rowSelectionModel","footerChildren","footerPaginationPosition","showFooterSelectedCount","forwardRef","ref","_ref$CustomFooterComp","CustomFooterComponent","DefaultooterComponent","_ref$checkboxSelectio","checkboxSelection","_ref$footerChildren","_ref$footerPagination","_ref$showFooterSelect","_useState","useState","_useState2","_slicedToArray","selectedRows","setSelectedRows","useImperativeHandle","removeSelection","getSelectedRows","filter","item","includes","freezeArray","Provider","DataGrid","slots","loadingOverlay","LinearProgress","footer","initialState","pagination","paginationModel","pageSize","loading","getRowId","row","col","hide","showCellVerticalBorder","showColumnVerticalBorder","rowHeight","columnHeaderHeight","pageSizeOptions","_objectSpread","fill","fontSize","fontWeight","onRowSelectionModelChange","selectionSet","Set","s","has","__","rowNode","_toConsumableArray","disableVirtualization","Pagination","_ref2","page","onPageChange","apiRef","useGridApiContext","pageCount","useGridSelector","gridPageCountSelector","MuiPagination","count","newPage","CustomPagination","props","GridPagination","ActionsComponent","_useContext","useContext","px","flexDirection","flex","A100","A200","A400","A700","totalDebit","totalCredit","totalBalance","jobAutoExp","jobTransactionDate","Date","jobType","search","reducer","state","action","_defineProperty","field","selectedCollectionColumns","GeneralJournal","_queryFn","_mutationFn","_mutationFn2","_mutationFn3","_DoRPTTransactionNILHN","executeQueryToClient","useExecuteQueryFromClient","mode","setMode","_useState3","totalRow","balance","_useState4","monitoring","setMonitoring","_useState5","_useState6","loadingJob","setLoadingJob","inputSearchRef","useRef","refRefNo","_refSubRefNo","refDate","refExplanation","refCode","refAccountName","refSubAccount","refName","refDebit","refCredit","refTC","refRemarks","refVat","refInvoice","refIDNo","refSubAcct","refTCDesc","AuthContext","myAxios","user","_useReducer","useReducer","_useReducer2","dispatch","_useState7","_useState8","openJobs","setOpenJobs","chartAccountSearchInput","IdsSearchInput","table","modeAdd","modeUpdate","modeDefault","_useQuery","useQuery","queryFn","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","get","headers","Authorization","accessToken","abrupt","sent","stop","apply","arguments","refetchOnWindowFocus","onSuccess","_state$sub_refNo","response","sub_refNo","wait","then","generateGeneralJournalID","general_journal_id","loadingGeneralJournalGenerator","refetchGeneralJournalGenerator","refetch","_useMutation","useMutation","mutationKey","mutationFn","_x","_callee2","variable","_context2","post","res","success","Swal","icon","message","timer","text","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","result","isConfirmed","handleClickPrint","resetFieldRef","resetRowFieldRef","resetTable","resetMonitoring","addGeneralJournalMutate","mutate","loadingGeneralJournalMutate","_useMutation2","_x2","_callee3","_context3","mutateVoidGeneralJournal","loadingVoidGeneralJournalMutate","_useMutation3","_x3","_callee4","_context4","selected","getSelectedSearchGeneralJournal","_selected$","explanation","dateEntry","refNo","format","setDataFormated","monitor","getSearchSelectedGeneralJournal","loadingGetSearchSelectedGeneralJournal","_useQueryModalTable","useQueryModalTable","link","url","queryUrlName","headerName","uniqueId","responseDataKey","onSelected","selectedRowData","Source_No","closeSearchGeneralJounal","resetRow","onCloseFunction","ModalSearchGeneralJounal","ModalComponent","openSearchGeneralJounal","openModal","isLoadingSearchGeneralJounal","closeModal","_useQueryModalTable2","Acct_Code","Acct_Title","closeChartAccountSearch","setTimeout","_refName$current","ModalChartAccountSearch","openChartAccountSearch","isLoadingChartAccountSearch","_useQueryModalTable3","_selectedRowData$0$Na","_selectedRowData$0$Sh","Name","ShortName","IDNo","sub_account","closePolicyIdClientIdRefId","_refDebit$current","ModalPolicyIdClientIdRefId","openPolicyIdClientIdRefId","isLoadingPolicyIdClientIdRefId","_useQueryModalTable4","Code","Description","closeTransactionAccount","_refRemarks$current","ModalTransactionAccount","openTransactionAccount","isLoadingTransactionAccount","handleOnSave","useCallback","_refRefNo$current","_refExplanation$curre","_refExplanation$curre2","parseFloat","replace","generalJournalDataFormatted","getData","map","itm","acctName","subAcctName","ClientName","debit","credit","TC_Code","remarks","vatType","invoice","TempID","BranchCode","codeCondfirmationAlert","isUpdate","cb","userCodeConfirmation","_refRefNo$current2","_refDate$current","_refExplanation$curre3","hasSelected","generalJournal","saveCondfirmationAlert","isConfirm","_refRefNo$current3","_refDate$current2","_refExplanation$curre4","handleRowSave","_refDebit$current2","_refCredit$current","_refCredit$current3","_refDebit$current4","_refTC$current","_refCode$current","_refName$current3","_refName$current2","isNaN","_refDebit$current3","_refCredit$current2","_refCredit$current4","_refCode$current2","_refName$current4","_refTC$current2","_refInvoice$current","getSelectedRow","newData","newInput","taxtInput","taxableamt","formatNumber","inputtax","taxtDebit","taxtCredit","setSelectedRow","setData","getNewData","splice","flushSync","_refRefNo$current4","_refDate$current3","_refExplanation$curre5","console","log","localStorage","removeItem","setItem","JSON","stringify","JVNo","JVDate","JVExp","datakey","header","department","reduce","a","b","Amount","toLocaleString","minimumFractionDigits","maximumFractionDigits","useEffect","handleKeyDown","ctrlKey","metaKey","removeEventListener","PageHelmet","LoadingButton","TextInput","input","currentTarget","Button","startIcon","AddIcon","disabled","deepOrange","NotInterestedIcon","brown","d","CardTravelIcon","grey","border","margin","parseInt","marginTop","gap","_refDate$current4","defaultValue","_refExplanation$curre6","_refCode$current3","borderRadius","SupervisorAccountIcon","onIconClick","disableIcon","readOnly","_refSubAccount$curren","_refName$current5","AccountCircleIcon","TextFormatedInput","_refCredit$current5","_refTC$current3","AccountBalanceWalletIcon","_refVat$current","SelectInput","selectRef","select","_refInvoice$current2","datasource","values","SaveIcon","DataGridViewReact","getSelectedItem","rowItm","rowIdx","confirm","debitTableData","LocalizationProvider","dateAdapter","AdapterDateFns","DatePicker","slotProps","textField","name","InputLabelProps","views","FormControlLabel","control","Checkbox","checked","FormControl","InputLabel","Select","labelId","_e$target","target","autoWidth","MenuItem","_callee6","_context6","_callee5","JobDate","dtFrom","dtTo","iRow","qry","dgvJournal","_yield$executeQueryTo","dataArray","_tmpNameRes$data$","_tmpNameRes$data$2","_tmpNameRes$data$3","totalAmount","i","_iterator","_step","_tmpNameRes$data$4","_tmpNameRes$data$5","_tmpNameRes$data$6","tmpID","_yield$executeQueryTo3","_tmpNameRes","_yield$executeQueryTo2","tmpNameRes","_context5","lastDayOfMonth","_createForOfIteratorHelper","n","done","ID_Entry","Sub_ShortName","Shortname","PolicyNo","Sub_Acct","toString","t0","f","finish","DoRPTTransactionNILHN","CustomizeAxiosFunc","_CustomizeAxiosFunc","_args","undefined","_customizeAxiostool","_ref$onSelected","_ref$onRemoveSelected","onRemoveSelected","_ref$onSuccess","_ref$onCloseFunction","_ref$CustomizeAxios","CustomizeAxios","show","setShowModal","customizeAxiostool","_args2","alert","_searchRef$current2","_searchRef$current3","selectedIDs","_preConfirm","html","inputAttributes","autocapitalize","showLoaderOnConfirm","preConfirm","error","allowOutsideClick","isDeclined","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","dirtyDate","requiredArgs","date","toDate","month","getMonth","setFullYear","getFullYear","setHours"],"sourceRoot":""}