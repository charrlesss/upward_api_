{"version":3,"file":"static/js/1441.7898304f.chunk.js","mappings":"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","sources":["components/Helmet.tsx","components/ModalWithTable.tsx","components/Table.tsx","components/UpwardFields.tsx","feautures/Admin/Task/Accounting/PettyCash.tsx","hooks/useQueryModalTable.tsx","lib/confirmationAlert.ts","lib/executeQueryFromClient.ts","../node_modules/@mui/icons-material/Add.js","../node_modules/@mui/icons-material/RestartAlt.js","../node_modules/@mui/icons-material/Save.js"],"sourcesContent":["\r\nimport { Helmet } from \"react-helmet\";\r\n\r\nconst PageHelmet = ({ title = '' }: { title: string }) => {\r\n    const imgUrl = process.env.REACT_APP_IMAGE_URL;\r\n    return (\r\n        <Helmet>\r\n            <title>{title}</title>\r\n            <link rel=\"icon\" type=\"image/png\" href={`${imgUrl}/logo.png`} />\r\n        </Helmet>\r\n    );\r\n};\r\n\r\nexport default PageHelmet;","import React from \"react\";\nimport {\n  GridRowSelectionModel,\n  GridRowParams,\n  GridCellParams,\n  GridTreeNode,\n} from \"@mui/x-data-grid\";\nimport { Modal, Box, Typography, IconButton, TextField } from \"@mui/material\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport Table from \"./Table\";\n\ninterface ModalWithTableParams {\n  height: number;\n  isLoading: boolean;\n  queryKey: string;\n  columns: Array<any>;\n  onSelectionChange: (rowSelectionModel: Array<any>, data: Array<any>) => void;\n  setRows: React.Dispatch<React.SetStateAction<GridRowSelectionModel>>;\n  rows: GridRowSelectionModel;\n  id: string;\n  onCloseModal: () => void;\n  onClickCloseIcon: () => void;\n  showModal: boolean;\n  searchOnChange:\n  | React.ChangeEventHandler<HTMLInputElement | HTMLTextAreaElement>\n  | undefined;\n  title?: string;\n  searchRef?: React.RefObject<HTMLInputElement>;\n  onCellKeyDown?: any;\n  onSearchKeyEnter?: (search: string) => void;\n  isRowSelectable?: ((params: GridRowParams<any>) => boolean) | undefined;\n  getCellClassName?:\n  | ((params: GridCellParams<any, any, any, GridTreeNode>) => string)\n  | undefined;\n}\n\nconst style = {\n  position: \"absolute\" as \"absolute\",\n  top: \"50%\",\n  left: \"50%\",\n  transform: \"translate(-50%, -50%)\",\n  width: \"80%\",\n  bgcolor: \"background.paper\",\n  boxShadow: 24,\n  p: 4,\n  heigth: \"auto\",\n};\n\nexport default function ModalWithTable({\n  height,\n  isLoading,\n  queryKey,\n  columns,\n  onSelectionChange,\n  setRows,\n  rows,\n  id,\n  onCloseModal,\n  showModal,\n  onClickCloseIcon,\n  searchOnChange,\n  title = \"\",\n  searchRef,\n  onCellKeyDown,\n  onSearchKeyEnter = () => { },\n  isRowSelectable,\n  getCellClassName,\n}: ModalWithTableParams) {\n  const mainId = generateRandomClass();\n\n  return (\n    <Modal\n      open={showModal}\n      onClose={onCloseModal}\n      aria-labelledby=\"modal-modal-title\"\n      aria-describedby=\"modal-modal-description\"\n    >\n      <Box sx={style}>\n        <Typography id=\"modal-modal-title\" variant=\"h6\" component=\"h2\" mb={2}>\n          {title}\n        </Typography>\n        <TextField\n          size=\"small\"\n          label=\"Search\"\n          sx={{ marginBottom: \"10px\" }}\n          fullWidth\n          onChange={searchOnChange}\n          InputProps={{\n            inputRef: searchRef,\n          }}\n          onKeyDown={(e) => {\n            if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n              e.preventDefault();\n              onSearchKeyEnter(searchRef?.current?.value as string);\n            }\n            keyBoardSelectionTable(\n              e,\n              mainId,\n              searchRef?.current as HTMLInputElement\n            );\n          }}\n        />\n        <div\n          className={`${mainId} main-table-selection-container`}\n          style={{ position: \"relative\", height: `${height + 20}px` }}\n        >\n          <Table\n            isSingleSelection={true}\n            isRowFreeze={false}\n            columns={columns}\n            isLoading={isLoading}\n            dataSelection={(selection, data, code) => {\n              onSelectionChange(selection, data);\n            }}\n            table_id={id}\n            rows={rows}\n            isRowSelectable={isRowSelectable}\n            getCellClassName={getCellClassName}\n          />\n        </div>\n\n        <div style={{ position: \"absolute\", top: \"10px\", right: \"10px\" }}>\n          <IconButton\n            aria-label=\"search-client\"\n            color=\"secondary\"\n            onClick={onClickCloseIcon}\n          >\n            <CloseIcon />\n          </IconButton>\n        </div>\n      </Box>\n    </Modal>\n  );\n}\n\nexport function generateRandomClass() {\n  const randomNumber = Math.floor(Math.random() * 10000);\n  const randomClass = \"main-\" + randomNumber;\n  return randomClass;\n}\n\nfunction keyBoardUpDown(className: string, el: HTMLElement) {\n  const firstRowParent = document.querySelector(\n    `.${className} .MuiDataGrid-row`\n  );\n  const firstInput = firstRowParent?.querySelector(\"input\");\n  firstInput?.focus();\n  const event = new MouseEvent(\"mouseenter\", {\n    bubbles: true,\n    cancelable: true,\n    view: window,\n  });\n  firstRowParent?.dispatchEvent(event);\n  firstInput?.addEventListener(\"keydown\", (es: any) => {\n    if (es.key === \"ArrowUp\") {\n      es.preventDefault();\n      el.focus();\n    }\n    if (es.key === \"ArrowUp\") {\n      firstRowParent?.classList.remove(\"hover-keyboard\");\n    }\n  });\n}\n\nexport function keyBoardSelectionTable(\n  e: React.KeyboardEvent<HTMLDivElement>,\n  className: string,\n  el: HTMLElement\n) {\n  const mainId = className;\n  if (e.code === \"ArrowDown\") {\n    const rows = document.querySelectorAll(`.${mainId} .MuiDataGrid-row`);\n    e.preventDefault();\n    rows[0]?.classList.add(\"hover-keyboard\");\n    keyBoardUpDown(className, el);\n    rows.forEach((el, idx) => {\n      el.addEventListener(\"keydown\", (es: any) => {\n        if (es.key === \"ArrowUp\") {\n          if (idx <= 0) {\n            return;\n          }\n\n          es.preventDefault();\n          rows[idx]?.classList.remove(\"hover-keyboard\");\n          rows[idx - 1]?.classList.add(\"hover-keyboard\");\n          return;\n        }\n        if (es.key === \"ArrowDown\") {\n          es.preventDefault();\n          if (idx >= rows.length - 1) {\n            return;\n          }\n          rows[idx]?.classList.remove(\"hover-keyboard\");\n          rows[idx + 1]?.classList.add(\"hover-keyboard\");\n        }\n      });\n    });\n  }\n}\n","import {\n  useState,\n  useContext,\n  createContext,\n  ReactElement,\n  forwardRef,\n  useImperativeHandle,\n} from \"react\";\nimport { Box, LinearProgress } from \"@mui/material\";\nimport {\n  DataGrid,\n  GridSlotsComponentsProps,\n  gridPageCountSelector,\n  GridPagination,\n  useGridApiContext,\n  useGridSelector,\n  GridRowSelectionModel,\n  GridColDef,\n  GridRowParams,\n  GridCellParams,\n  GridTreeNode,\n} from \"@mui/x-data-grid\";\nimport { TablePaginationProps } from \"@mui/material/TablePagination\";\nimport MuiPagination from \"@mui/material/Pagination\";\n\ninterface TableProps {\n  isLoading: boolean;\n  columns: Array<any>;\n  rows: Array<any>;\n  table_id: string;\n  isSingleSelection: boolean;\n  isRowFreeze: boolean;\n  dataSelection?: (selection: any, data: any, code: string | null) => void;\n  CustomFooterComponent?: any;\n  isRowSelectable?: ((params: GridRowParams<any>) => boolean) | undefined;\n  getCellClassName?:\n    | ((params: GridCellParams<any, any, any, GridTreeNode>) => string)\n    | undefined;\n  footerChildren?: (\n    rowSelectionModel: GridRowSelectionModel,\n    rows: Array<any>\n  ) => ReactElement;\n  footerPaginationPosition?: string;\n  showFooterSelectedCount?: boolean;\n  checkboxSelection?: boolean | undefined;\n}\n\nconst TableContext = createContext<{\n  rowSelectionModel: GridRowSelectionModel;\n  rows: Array<any>;\n  footerPaginationPosition?: string;\n  showFooterSelectedCount?: boolean;\n  footerChildren: (\n    rowSelectionModel: GridRowSelectionModel,\n    rows: Array<any>\n  ) => ReactElement;\n}>({\n  rows: [],\n  rowSelectionModel: [],\n  footerChildren: () => <div></div>,\n  footerPaginationPosition: \"right-left\",\n  showFooterSelectedCount: true,\n});\nconst Table = forwardRef(\n  (\n    {\n      isLoading,\n      columns,\n      rows,\n      table_id,\n      isSingleSelection,\n      isRowFreeze,\n      dataSelection,\n      CustomFooterComponent = DefaultooterComponent,\n      isRowSelectable,\n      getCellClassName,\n      checkboxSelection = true,\n      footerChildren = (\n        rowSelectionModel: GridRowSelectionModel,\n        rows: Array<any>\n      ) => <div></div>,\n      footerPaginationPosition = \"right-left\",\n      showFooterSelectedCount = true,\n    }: TableProps,\n    ref\n  ) => {\n    const [selectedRows, setSelectedRows] = useState<any>([]);\n\n    useImperativeHandle(ref, () => ({\n      removeSelection: () => {\n        setSelectedRows([]);\n      },\n      getSelectedRows: () => {\n        return rows.filter((item: any) =>\n          selectedRows?.includes(item[table_id])\n        );\n      },\n      setSelectedRows: (data: Array<any>) => {\n        setSelectedRows(data);\n      },\n    }));\n\n    function onSelectionChange(selection: any, data: any, code: string | null) {\n      if (dataSelection) {\n        dataSelection(selection, data, code);\n      }\n    }\n    let freezeArray: Array<any> = [];\n\n    return (\n      <TableContext.Provider\n        value={{\n          showFooterSelectedCount,\n          footerPaginationPosition,\n          rowSelectionModel: selectedRows,\n          rows,\n          footerChildren,\n        }}\n      >\n        <DataGrid\n          slots={{\n            loadingOverlay: LinearProgress,\n            footer: CustomFooterComponent,\n          }}\n          initialState={{\n            pagination: { paginationModel: { pageSize: 100 } },\n          }}\n          loading={isLoading}\n          getRowId={(row) => row[table_id]}\n          columns={columns.filter((col: any) => !col.hide) as GridColDef<any>[]}\n          rows={rows}\n          showCellVerticalBorder={true}\n          showColumnVerticalBorder={true}\n          checkboxSelection={checkboxSelection}\n          rowSelectionModel={selectedRows}\n          rowHeight={25}\n          columnHeaderHeight={35}\n          pageSizeOptions={[10, 20, 35, 50, 75, 100]}\n          sx={{\n            \"& .cash\": {\n              color: \"#ec4899\",\n            },\n            \"& .check\": {\n              color: \"#0891b2\",\n            },\n            \"& .approved\": {\n              color: \"green\",\n            },\n            \"& .pending\": {\n              color: \"orange\",\n            },\n            \"& .disapproved\": {\n              color: \"red\",\n            },\n            \"& .normal\": {\n              color: \"red\",\n            },\n            \"& .MuiDataGrid-row.Mui-selected:hover\": {\n              color: \"black\",\n              \"& .MuiSvgIcon-root \": {\n                fill: \"#3b82f6\",\n              },\n            },\n            \"& .hover-keyboard\": {\n              background: \"#2563eb\",\n              color: \"white\",\n              \"& .MuiSvgIcon-root \": {\n                fill: \"white\",\n              },\n            },\n            \"& .MuiDataGrid-row:hover\": {\n              background: \"#2563eb\",\n              color: \"white\",\n              \"& .MuiSvgIcon-root \": {\n                fill: \"white\",\n              },\n            },\n            \"& .MuiDataGrid-row.hover\": {\n              background: \"#2563eb\",\n              color: \"white\",\n              \"& .MuiSvgIcon-root \": {\n                fill: \"white\",\n              },\n            },\n            \"& .MuiTablePagination-root p \": {\n              padding: \"0 !important\",\n            },\n\n            ...{\n              \"& .MuiDataGrid-columnHeaders\": {\n                background: \"#64748b\",\n                color: \"white\",\n                fontSize: \"14px\",\n                // borderBottomColor: \"#38bdf8\",\n              },\n              \"& .MuiDataGrid-columnHeaderCheckbox .MuiDataGrid-columnHeaderTitleContainer .MuiSvgIcon-root \":\n                {\n                  display: isSingleSelection || isRowFreeze ? \"none\" : \"block\",\n                  fill: \"white\",\n                },\n              \"& .MuiDataGrid-columnHeaderCheckbox .MuiDataGrid-columnHeaderTitleContainer input \":\n                {\n                  display: isSingleSelection || isRowFreeze ? \"none\" : \"block\",\n                },\n            },\n            ...{\n              fontSize: 13,\n              fontWeight: 500,\n              \"& .MuiDataGrid-checkboxInput\": {\n                height: \"27px\",\n                width: \"27px\",\n              },\n              \"& .MuiDataGrid-checkboxInput svg\": {\n                height: \"20px\",\n                width: \"20px\",\n              },\n            },\n          }}\n          // onRowDoubleClick={(e, r) => {\n          //   console.log(e, r);\n          // }}\n\n          onRowSelectionModelChange={(selection) => {\n            if (isRowFreeze) {\n              if (selection.length <= 0) return;\n              freezeArray = selection;\n              if (selectedRows.includes(freezeArray[freezeArray.length - 1]))\n                return;\n\n              setSelectedRows(selection);\n\n              onSelectionChange([selection[selection.length - 1]], rows, null);\n              return;\n            }\n\n            if (!isRowFreeze && isSingleSelection) {\n              if (selectedRows && selectedRows?.length > 0) {\n                const selectionSet = new Set(selectedRows);\n                setSelectedRows(\n                  selection.filter((s: any) => !selectionSet.has(s))\n                );\n              } else {\n                setSelectedRows(selection);\n              }\n            } else {\n              setSelectedRows(selection);\n            }\n\n            onSelectionChange([selection[selection.length - 1]], rows, null);\n          }}\n          onCellKeyDown={(__: any, key: any) => {\n            const keyFinding = [\"NumpadEnter\", \"Enter\", \"Delete\", \"Backspace\"];\n            if (!keyFinding.includes(key.code)) {\n              return;\n            }\n            key.preventDefault();\n            if (key.code === \"Enter\" || key.code === \"NumpadEnter\") {\n              if (isSingleSelection && !isRowFreeze) {\n                return setSelectedRows((data: any) => {\n                  if (data && data.length > 0 && data[0] === __.rowNode.id) {\n                    onSelectionChange([], rows, key.code);\n                    return [];\n                  }\n                  onSelectionChange([__.rowNode.id], rows, key.code);\n                  return [__.rowNode.id];\n                });\n              } else {\n                setSelectedRows((data: any) => {\n                  if (\n                    data &&\n                    !isRowFreeze &&\n                    data.length > 0 &&\n                    data.includes(__.rowNode.id)\n                  ) {\n                    data = data.filter((item: any) => item !== __.rowNode.id);\n                    onSelectionChange([], rows, key.code);\n                    return data;\n                  }\n                  if (\n                    data &&\n                    isRowFreeze &&\n                    data.length > 0 &&\n                    data.includes(__.rowNode.id)\n                  ) {\n                    return data;\n                  }\n                  onSelectionChange([__.rowNode.id], rows, key.code);\n                  return [...data, __.rowNode.id];\n                });\n              }\n              return;\n            }\n            if (key.code === \"Delete\" || key.code === \"Backspace\") {\n              setSelectedRows([__.rowNode.id]);\n              return onSelectionChange([__.rowNode.id], rows, key.code);\n            }\n          }}\n          disableVirtualization\n          isRowSelectable={isRowSelectable}\n          getCellClassName={getCellClassName}\n        />\n      </TableContext.Provider>\n    );\n  }\n);\n\nexport default Table;\nfunction Pagination({\n  page,\n  onPageChange,\n  className,\n}: Pick<TablePaginationProps, \"page\" | \"onPageChange\" | \"className\">) {\n  const apiRef = useGridApiContext();\n  const pageCount = useGridSelector(apiRef, gridPageCountSelector);\n\n  return (\n    <MuiPagination\n      variant=\"outlined\"\n      color=\"primary\"\n      className={className}\n      count={pageCount}\n      page={page + 1}\n      onChange={(event, newPage) => {\n        onPageChange(event as any, newPage - 1);\n      }}\n    />\n  );\n}\n\nfunction CustomPagination(props: any) {\n  return <GridPagination ActionsComponent={Pagination} {...props} />;\n}\nfunction DefaultooterComponent(\n  props: NonNullable<GridSlotsComponentsProps[\"footer\"]>\n) {\n  const {\n    rowSelectionModel,\n    showFooterSelectedCount,\n    footerPaginationPosition,\n    footerChildren,\n    rows,\n  } = useContext(TableContext);\n  return (\n    <Box\n      sx={{\n        columnGap: \"50px\",\n        display: \"flex\",\n        width: \"100%\",\n        justifyContent: \"space-between\",\n        px: 3,\n        alignItems: \"center\",\n        flexDirection:\n          footerPaginationPosition === \"right-left\" ? \"row-reverse\" : \"row\",\n      }}\n    >\n      <CustomPagination {...props} />\n      <Box\n        sx={{\n          display: \"flex\",\n          justifyContent:\n            footerPaginationPosition === \"right-left\"\n              ? \"flex-start\"\n              : \"flex-end\",\n          flex: 1,\n          alignItems: \"center\",\n        }}\n      >\n        {showFooterSelectedCount && (\n          <div>Selected:{rowSelectionModel?.length}</div>\n        )}\n        <div>{footerChildren(rowSelectionModel, rows)}</div>\n      </Box>\n    </Box>\n  );\n}\n","import { HtmlHTMLAttributes, InputHTMLAttributes, useId, ReactNode, useState, LegacyRef, HTMLInputTypeAttribute, TextareaHTMLAttributes, CSSProperties } from \"react\";\nimport \"../style/design.css\";\n\n\ninterface TextInputProps {\n  input: InputHTMLAttributes<HTMLInputElement>;\n  label: HtmlHTMLAttributes<HTMLLabelElement>;\n  inputRef?: React.RefObject<HTMLInputElement>;\n  icon?: ReactNode; // New prop for the icon\n  iconPosition?: 'start' | 'end'; // New prop to choose icon position\n  onIconClick?: React.MouseEventHandler<HTMLDivElement> | undefined,\n  disableIcon?: boolean\n  containerStyle?: CSSProperties\n}\n\ninterface TextAreaPrps {\n  textarea: TextareaHTMLAttributes<HTMLTextAreaElement>\n  label: HtmlHTMLAttributes<HTMLLabelElement>;\n  _inputRef: LegacyRef<HTMLTextAreaElement>\n  icon?: ReactNode; // New prop for the icon\n  iconPosition?: 'start' | 'end'; // New prop to choose icon position\n  onIconClick?: React.MouseEventHandler<HTMLDivElement> | undefined,\n  disableIcon?: boolean\n}\n\ninterface TextFormatedInputProps extends TextInputProps {\n  onChange?: React.ChangeEventHandler<HTMLInputElement> | undefined\n}\nexport function TextFormatedInput({\n  input,\n  label,\n  inputRef,\n  icon,\n  iconPosition = 'end', // Default position is 'end'\n  disableIcon = false,\n  onIconClick = (e) => { },\n  onChange = (e) => { },\n  containerStyle\n}: TextFormatedInputProps) {\n  // const [inputValue, setInputValue] = useState('');\n  const id = useId();\n\n\n  // Helper function to format numbers with commas\n  const formatNumber = (value: string) => {\n    if (!value) return value;\n\n    // Split the value into integer and decimal parts\n    const parts = value.split('.');\n\n    // Add commas to the integer part only\n    parts[0] = parts[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n\n    // Join the integer and decimal parts if decimal exists\n    return parts.join('.');\n  };\n\n  // Helper function to remove commas\n  const unformatNumber = (value: string) => {\n    return value.replace(/,/g, '');\n  };\n\n  // Function to ensure two decimal places\n  const ensureTwoDecimals = (value: string) => {\n    // If the value has no decimal part, append '.00'\n    if (!value.includes('.')) {\n      if (value === '') {\n        return '0.00';\n      } else {\n\n        return value + '.00';\n      }\n    }\n\n    // If the value has one decimal place, append '0'\n    const parts = value.split('.');\n    if (parts[1].length === 1) {\n      return value + '0';\n    }\n\n    // If it already has two decimal places, return as is\n    return value;\n  };\n\n  const handleChange = (e: any) => {\n    let value = e.target.value;\n\n    // Remove commas for processing\n    value = unformatNumber(value);\n\n    // Allow only numbers, commas, and one decimal point\n    const regex = /^-?\\d+(,\\d{3})*(\\.\\d*)?$/;\n\n    // Remove commas for processing\n    value = unformatNumber(value);\n\n    // Check if the value is valid\n    if (value === '' || regex.test(value)) {\n      // Set the formatted value back in the input field\n\n      //setInputValue(formatNumber(value));\n      e.target.value = formatNumber(value)\n\n    }\n  };\n\n  const handleBlur = (e: any) => {\n    let value = unformatNumber(e.target.value);\n\n    // Ensure the value has two decimal places\n    value = ensureTwoDecimals(value);\n\n    // Set the value with commas and .00 (if needed)\n    // setInputValue(formatNumber(value));\n    e.target.value = formatNumber(value)\n  };\n\n  return (\n    <div\n      style={{\n        display: 'flex',\n        alignItems: 'center',\n        position: 'relative',\n        ...containerStyle // Enable absolute positioning for icon\n      }}\n    >\n      <label {...label} htmlFor={id}>\n        {label.title}\n      </label>\n      {icon && iconPosition === 'start' && (\n        <div style={{ position: 'absolute', left: '8px', zIndex: 1 }}>\n          {icon}\n        </div>\n      )}\n      <input\n        ref={inputRef}\n        id={id}\n        {...input}\n        type=\"text\"\n        style={{\n          height: '100%',\n          ...input.style,\n        }}\n        onChange={(e) => {\n          handleChange(e)\n          onChange(e)\n        }}\n        onBlur={(e) => {\n          handleBlur(e)\n        }}  // Add .00 on blur\n\n      />\n      {icon && iconPosition === 'end' && (\n        <div onClick={onIconClick}\n          style={{\n            position: 'absolute',\n            right: '2px',\n            top: \"50%\",\n            transform: \"translateY(-50%)\",\n            zIndex: 1,\n            cursor: disableIcon ? \"none\" : \"pointer\",\n            display: \"flex\",\n            alignItems: \"center\",\n            justifyContent: \"center\",\n            background: \"white\",\n            pointerEvents: disableIcon ? \"none\" : \"auto\"\n          }}>\n          {icon}\n        </div>\n\n      )\n      }\n    </div >\n  );\n}\n\n\nexport function TextInput({\n  input,\n  label,\n  inputRef,\n  icon,\n  iconPosition = 'end', // Default position is 'end'\n  disableIcon = false,\n  containerStyle,\n  onIconClick = (e) => { }\n}: TextInputProps) {\n  const id = useId();\n\n\n  return (\n    <div\n      style={{\n        display: 'flex',\n        alignItems: 'center',\n        position: 'relative',\n        ...containerStyle\n      }}\n    >\n      <label {...label} htmlFor={id}>\n        {label.title}\n      </label>\n      {icon && iconPosition === 'start' && (\n        <div style={{ position: 'absolute', left: '8px', zIndex: 1 }}>\n          {icon}\n        </div>\n      )}\n      <input\n        ref={inputRef}\n        id={id}\n        {...input}\n        style={{\n          height: '100%',\n          ...input.style,\n        }}\n      />\n      {icon && iconPosition === 'end' && (\n        <div onClick={onIconClick}\n          style={{\n            position: 'absolute',\n            right: '2px',\n            top: \"50%\",\n            transform: \"translateY(-50%)\",\n            zIndex: 1,\n            cursor: disableIcon ? \"none\" : \"pointer\",\n            display: \"flex\",\n            alignItems: \"center\",\n            justifyContent: \"center\",\n            background: \"white\",\n            pointerEvents: disableIcon ? \"none\" : \"auto\",\n          }}>\n          {icon}\n        </div>\n\n      )\n      }\n    </div >\n  );\n}\n\n\n\nexport function TextAreaInput({\n  textarea,\n  label,\n  _inputRef,\n  icon,\n  iconPosition = 'end', // Default position is 'end'\n  disableIcon = false,\n  onIconClick = (e) => { }\n}: TextAreaPrps) {\n  const id = useId();\n\n  return (\n    <div\n      style={{\n        display: 'flex',\n        alignItems: 'center',\n        position: 'relative', // Enable absolute positioning for icon\n      }}\n    >\n      <label {...label} htmlFor={id}>\n        {label.title}\n      </label>\n      {icon && iconPosition === 'start' && (\n        <div style={{ position: 'absolute', left: '8px', zIndex: 1 }}>\n          {icon}\n        </div>\n      )}\n      <textarea\n        ref={_inputRef}\n        id={id}\n        {...textarea}\n        style={{\n          height: '100%',\n          ...textarea.style,\n        }}\n\n      />\n      {icon && iconPosition === 'end' && (\n        <div onClick={onIconClick}\n          style={{\n            position: 'absolute',\n            right: '2px',\n            top: \"50%\",\n            transform: \"translateY(-50%)\",\n            zIndex: 1,\n            cursor: disableIcon ? \"none\" : \"pointer\",\n            display: \"flex\",\n            alignItems: \"center\",\n            justifyContent: \"center\",\n            background: \"white\",\n            pointerEvents: disableIcon ? \"none\" : \"auto\"\n          }}>\n          {icon}\n        </div>\n\n      )\n      }\n    </div >\n  );\n}\n\n\nexport function SelectInput({\n  select,\n  label,\n  selectRef,\n  datasource = [],\n  values = \"\",\n  display = \"\",\n  containerStyle\n}: {\n  selectRef?: React.RefObject<HTMLSelectElement>;\n  labelRef?: React.RefObject<HTMLLabelElement>;\n  select: InputHTMLAttributes<HTMLSelectElement>;\n  label: HtmlHTMLAttributes<HTMLLabelElement>;\n  datasource: Array<any>;\n  values: string;\n  display: string;\n  containerStyle?: React.CSSProperties | undefined\n}) {\n  const id = useId();\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        height: \"18px\",\n        alignItems: \"center\",\n        ...containerStyle\n      }}\n    >\n      <label {...label} htmlFor={id}>\n        {label.title}\n      </label>\n      <select\n        {...select}\n        ref={selectRef}\n        className={`select ${select.className}`}\n        style={{\n          height: \"18px\",\n          ...select.style,\n        }}\n      >\n        {datasource.map((itm, idx) => {\n          return (\n            <option key={idx} value={itm[values]}>\n              {itm[display]}\n            </option>\n          );\n        })}\n      </select>\n    </div>\n  );\n}\n\nexport function ButtonField({\n  buttonRetRef,\n  button,\n  tooltipText = \"\",\n  children,\n  disabled = false,\n}: {\n  buttonRetRef?: React.RefObject<HTMLButtonElement>;\n  button: HtmlHTMLAttributes<HTMLButtonElement>;\n  tooltipText: string;\n  children: React.ReactNode;\n  disabled?: boolean;\n}) {\n  return (\n    <div className=\"tooltip\">\n      <button\n        disabled={disabled}\n        {...button}\n        ref={buttonRetRef}\n        style={{ ...button.style, background: !disabled ? \"transparent\" : \"#f1f1f1\" }}\n        className=\"tooltip-button\"\n      >\n        {children}\n      </button>\n      {!disabled && <span className=\"tooltip-text\">{tooltipText}</span>}\n    </div>\n  );\n}\n","import { useContext, useState, useRef, useEffect, useImperativeHandle, forwardRef } from \"react\";\nimport {\n  Button,\n} from \"@mui/material\";\nimport LoadingButton from \"@mui/lab/LoadingButton\";\nimport AddIcon from \"@mui/icons-material/Add\";\nimport SaveIcon from \"@mui/icons-material/Save\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport Swal from \"sweetalert2\";\nimport { AuthContext } from \"../../../../components/AuthContext\";\nimport RestartAltIcon from \"@mui/icons-material/RestartAlt\";\nimport { useMutation, useQuery } from \"react-query\";\nimport useQueryModalTable from \"../../../../hooks/useQueryModalTable\";\nimport { wait } from \"../../../../lib/wait\";\nimport {\n  codeCondfirmationAlert,\n  saveCondfirmationAlert,\n} from \"../../../../lib/confirmationAlert\";\nimport PageHelmet from \"../../../../components/Helmet\";\nimport { SelectInput, TextInput } from \"../../../../components/UpwardFields\";\nimport { NumericFormat } from \"react-number-format\";\nimport { format } from \"date-fns\";\nimport useExecuteQueryFromClient from \"../../../../lib/executeQueryFromClient\";\n\nexport const reducer = (state: any, action: any) => {\n  switch (action.type) {\n    case \"UPDATE_FIELD\":\n      return {\n        ...state,\n        [action.field]: action.value,\n      };\n    default:\n      return state;\n  }\n};\nconst columns = [\n  { key: \"purpose\", label: \"Purpose\", width: 400 },\n  { key: \"amount\", label: \"Amount\", width: 140 },\n  {\n    key: \"usage\",\n    label: \"Usage\",\n    width: 450,\n  },\n  { key: \"accountID\", label: \"Account ID\", width: 400 },\n  { key: \"sub_account\", label: \"Sub Account\", width: 80 },\n  { key: \"clientID\", label: \"ID No\", width: 140 },\n  // hide\n  { key: \"clientName\", label: \"Name\", width: 350 },\n  { key: \"accountCode\", label: \"Accoount Code\", width: 130 },\n  {\n    key: \"accountShort\",\n    label: \"Account Short\",\n    width: 300,\n  },\n  { key: \"vatType\", label: \"Vat Type\", width: 100 },\n  { key: \"invoice\", label: \"Invoice\", width: 200 },\n  { key: \"TempID\", label: \"TempId\", hide: true },\n];\nexport const chartColumn = [\n  { field: \"Acct_Code\", headerName: \"Code\", flex: 1 },\n  { field: \"Acct_Title\", headerName: \"Title\", flex: 1 },\n  { field: \"Short\", headerName: \"Short Name\", flex: 1 },\n];\n\nexport default function PettyCash() {\n  const { myAxios, user } = useContext(AuthContext);\n  const [pettyCashMode, setPettyCashMode] = useState('')\n  const { executeQueryToClient } = useExecuteQueryFromClient()\n  const tableRef = useRef<any>(null)\n  const inputSearchRef = useRef<HTMLInputElement>(null)\n\n  const subrefNoRef = useRef('')\n  const refNoRef = useRef<HTMLInputElement>(null)\n  const dateRef = useRef<HTMLInputElement>(null)\n  const payeeRef = useRef<HTMLInputElement>(null)\n  const explanationRef = useRef<HTMLInputElement>(null)\n\n\n  const accountRef = useRef<HTMLInputElement>(null);\n  const usageRef = useRef<HTMLInputElement>(null);\n  const amountRef = useRef<HTMLInputElement>(null);\n  const vatRef = useRef<HTMLSelectElement>(null);\n  const invoiceRef = useRef<HTMLInputElement>(null);\n\n\n  const pdcSearchInput = useRef<HTMLInputElement>(null);\n\n  const transactionCodeRef = useRef('')\n  const transactionShortRef = useRef('')\n  const clientIdRef = useRef('')\n  const subAcctRef = useRef('')\n\n\n\n\n\n  const isDisableField = pettyCashMode === \"\";\n\n\n  const {\n    isLoading: loadingPettyCashIdGenerator,\n    refetch: refetchettyCashIdGenerator,\n  } = useQuery({\n    queryKey: \"petty-cash-id-generator\",\n    queryFn: async () =>\n      await myAxios.get(`/task/accounting/get-petty-cash-id`, {\n        headers: {\n          Authorization: `Bearer ${user?.accessToken}`,\n        },\n      }),\n    refetchOnWindowFocus: false,\n    onSuccess: (data) => {\n      const response = data as any;\n      wait(100).then(() => {\n        subrefNoRef.current = response.data.pettyCashId[0].petty_cash_id\n        if (refNoRef.current) {\n          refNoRef.current.value = response.data.pettyCashId[0].petty_cash_id\n        }\n      })\n    },\n  });\n  const {\n    isLoading: loadingAddUpdatePettyCash,\n    mutate: mutateAddUpdatePettyCash,\n  } = useMutation({\n    mutationKey: \"add-update-petty-cash\",\n    mutationFn: async (variables: any) =>\n      await myAxios.post(`/task/accounting/add-petty-cash`, variables, {\n        headers: {\n          Authorization: `Bearer ${user?.accessToken}`,\n        },\n      }),\n    onSuccess: (data) => {\n      const response = data as any;\n      if (response.data.success) {\n        resetPettyCash()\n        return Swal.fire({\n          position: \"center\",\n          icon: \"success\",\n          title: response.data.message,\n          timer: 1500,\n        });\n      }\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: response.data.message,\n        timer: 1500,\n      });\n    },\n  });\n  const {\n    isLoading: isLoadingLoadSelectedPettyCash,\n    mutate: mutateLoadSelectedPettyCash,\n  } = useMutation({\n    mutationKey: \"load-selected-petty-cash\",\n    mutationFn: async (variables: any) =>\n      await myAxios.post(\n        `/task/accounting/load-selected-petty-cash`,\n        variables,\n        {\n          headers: {\n            Authorization: `Bearer ${user?.accessToken}`,\n          },\n        }\n      ),\n    onSuccess: (data) => {\n      const response = data as any;\n      const loadPettyCash = response.data.loadSelectedPettyCash;\n      subrefNoRef.current = loadPettyCash[0].PC_No\n      if (refNoRef.current) {\n        refNoRef.current.value = loadPettyCash[0].PC_No\n      }\n      if (dateRef.current) {\n        dateRef.current.value = loadPettyCash[0].PC_Date\n      }\n      if (payeeRef.current) {\n        payeeRef.current.value = loadPettyCash[0].Payee\n      }\n      if (explanationRef.current) {\n        explanationRef.current.value = loadPettyCash[0].Explanation\n      }\n\n      tableRef.current.setDataFormated(loadPettyCash)\n    },\n  });\n\n  const {\n    isLoading: laodPettyCashTransaction,\n    data: dataCashTransaction\n  } = useQuery({\n    queryKey: \"load-transcation\",\n    queryFn: async () =>\n      await myAxios.get(`/task/accounting/load-transcation`, {\n        headers: {\n          Authorization: `Bearer ${user?.accessToken}`,\n        },\n      }),\n    refetchOnWindowFocus: false,\n  });\n\n  const {\n    ModalComponent: ModalClientIDs,\n    openModal: openCliendIDsModal,\n    isLoading: isLoadingClientIdsModal,\n    closeModal: closeCliendIDsModal,\n  } = useQueryModalTable({\n    link: {\n      url: \"/task/accounting/search-pdc-policy-id\",\n      queryUrlName: \"searchPdcPolicyIds\",\n    },\n    columns: [\n      { field: \"Type\", headerName: \"Type\", width: 130 },\n      { field: \"IDNo\", headerName: \"ID No.\", width: 200 },\n      {\n        field: \"Name\",\n        headerName: \"Name\",\n        flex: 1,\n      },\n      {\n        field: \"ID\",\n        headerName: \"ID\",\n        flex: 1,\n        hide: true,\n      },\n    ],\n    queryKey: \"collection-polidy-ids\",\n    uniqueId: \"IDNo\",\n    responseDataKey: \"clientsId\",\n    onSelected: (selectedRowData, data) => {\n      closeCliendIDsModal();\n      wait(100).then(() => {\n        clientIdRef.current = selectedRowData[0].IDNo\n        subAcctRef.current = selectedRowData[0].Acronym\n        if (usageRef.current)\n          usageRef.current.value = selectedRowData[0].Name\n      })\n      wait(200).then(() => {\n        if (amountRef.current) {\n          amountRef.current?.focus()\n          amountRef.current.value = ''\n        }\n\n      })\n    },\n    searchRef: pdcSearchInput,\n  });\n  const {\n    ModalComponent: ModalSearchPettyCash,\n    openModal: openModalSearchPettyCash,\n    isLoading: isLoadingModalSearchPettyCash,\n    closeModal: closeModalSearchPettyCash,\n  } = useQueryModalTable({\n    link: {\n      url: \"/task/accounting/search-petty-cash\",\n      queryUrlName: \"searchPettyCash\",\n    },\n    columns: [\n      { field: \"PC_Date\", headerName: \"Type\", width: 130 },\n      { field: \"PC_No\", headerName: \"ID No.\", width: 200 },\n      {\n        field: \"Payee\",\n        headerName: \"Name\",\n        flex: 1,\n      },\n      {\n        field: \"Explanation\",\n        headerName: \"ID\",\n        flex: 1,\n      },\n      {\n        field: \"Explanation\",\n        headerName: \"ID\",\n        flex: 1,\n        hide: true,\n      },\n    ],\n    queryKey: \"petty-cash-search\",\n    uniqueId: \"PC_No\",\n    responseDataKey: \"searchPettyCash\",\n    onSelected: (selectedRowData) => {\n      mutateLoadSelectedPettyCash({ PC_No: selectedRowData[0].PC_No });\n\n      setPettyCashMode(\"edit\")\n\n      closeModalSearchPettyCash();\n    },\n    searchRef: pdcSearchInput,\n\n  });\n\n  function handleOnSave() {\n    if (payeeRef.current && payeeRef.current.value === \"\") {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: \"Please provide payee!\",\n        timer: 1500,\n      }).then((result) => {\n        wait(300).then(() => {\n          payeeRef.current?.focus();\n        });\n      });\n    }\n    if (explanationRef.current && explanationRef.current.value === \"\") {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: \"Please provide explanation!\",\n        timer: 1500,\n      }).then((result) => {\n        wait(300).then(() => {\n          explanationRef.current?.focus();\n        });\n      });\n    }\n\n    const currentData = tableRef.current.getDataFormatted()\n\n    if (currentData.length <= 0) {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: \"Please provide transaction entry!\",\n        timer: 1500,\n      });\n    }\n\n\n\n    if (pettyCashMode === \"edit\") {\n      codeCondfirmationAlert({\n        isUpdate: true,\n        cb: (userCodeConfirmation) => {\n          mutateAddUpdatePettyCash({\n            refNo: refNoRef.current?.value,\n            datePetty: dateRef.current?.value,\n            payee: payeeRef.current?.value,\n            explanation: explanationRef.current?.value,\n            hasSelected: pettyCashMode === \"edit\",\n            pettyCash: currentData,\n            userCodeConfirmation,\n          });\n        },\n      });\n    } else {\n      saveCondfirmationAlert({\n        isConfirm: () => {\n          mutateAddUpdatePettyCash({\n            refNo: refNoRef.current?.value,\n            datePetty: dateRef.current?.value,\n            payee: payeeRef.current?.value,\n            explanation: explanationRef.current?.value,\n            hasSelected: pettyCashMode === \"edit\",\n            pettyCash: currentData,\n          });\n        },\n      });\n    }\n  }\n\n  async function handleAddTransaction() {\n    if (accountRef.current && accountRef.current.value === \"\") {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: \"Please provide transaction\",\n        timer: 1500,\n      }).then(() => {\n        wait(300).then(() => {\n          accountRef.current?.focus();\n        });\n      });\n    }\n    if (clientIdRef.current === \"\") {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: \"Please provide usage\",\n        timer: 1500,\n      }).then(() => {\n        wait(300).then(() => {\n          openCliendIDsModal();\n        });\n      });\n    }\n    if (amountRef.current && (amountRef.current.value === \"\" || parseFloat(amountRef.current.value.replace(/,/g, \"\")) < 1)) {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: \"Please provide proper amount\",\n        timer: 1500,\n      }).then(() => {\n        wait(300).then(() => {\n          amountRef.current?.focus();\n        });\n      });\n    }\n\n    const TransDetail = await executeQueryToClient(`\n         SELECT DISTINCT\n              Chart_Account.Acct_Code,\n              Chart_Account.Acct_Title,\n              Chart_Account.Short\n          FROM\n              Petty_Log\n                  LEFT JOIN\n              Chart_Account ON Petty_Log.Acct_Code = Chart_Account.Acct_Code\n          WHERE\n              Petty_Log.Acct_Code = '${transactionCodeRef.current}'\n      `)\n\n    const currentData = tableRef.current.getData()\n    let RowIndex = 0\n    if (currentData.length <= 0) {\n      currentData[0] = []\n    } else {\n      const getSelectedRow = tableRef.current.getSelectedRow()\n      if (getSelectedRow) {\n        RowIndex = getSelectedRow\n      } else {\n        RowIndex = currentData.length\n        currentData[currentData.length] = []\n      }\n\n    }\n    currentData[RowIndex][0] = accountRef.current?.value\n    currentData[RowIndex][1] = amountRef.current?.value\n    currentData[RowIndex][2] = `${usageRef.current?.value} > ${clientIdRef.current} > ${subAcctRef.current}`\n    currentData[RowIndex][3] = `${TransDetail.data.data[0].Short} > ${TransDetail.data.data[0].Acct_Code}`\n    currentData[RowIndex][4] = subAcctRef.current\n    currentData[RowIndex][5] = clientIdRef.current\n    currentData[RowIndex][6] = usageRef.current?.value\n    currentData[RowIndex][7] = TransDetail.data.data[0].Acct_Code\n    currentData[RowIndex][8] = TransDetail.data.data[0].Short\n    currentData[RowIndex][9] = vatRef.current?.value\n    currentData[RowIndex][10] = invoiceRef.current?.value\n    tableRef.current.setData(currentData)\n    tableRef.current.setSelectedRow(null)\n\n\n    resetRefs()\n\n    if (accountRef.current) {\n      accountRef.current.focus()\n    }\n  }\n\n  function resetRefs() {\n    setTimeout(() => {\n      if (accountRef.current) {\n        accountRef.current.value = ''\n      }\n      if (amountRef.current) {\n        amountRef.current.value = ''\n      }\n      if (usageRef.current) {\n        usageRef.current.value = ''\n      }\n      if (vatRef.current) {\n        vatRef.current.value = 'NON-VAT'\n      }\n      if (invoiceRef.current) {\n        invoiceRef.current.value = ''\n      }\n      subAcctRef.current = ''\n      clientIdRef.current = ''\n      transactionCodeRef.current = ''\n      transactionShortRef.current = ''\n    }, 100)\n  }\n  function resetRefsEntry() {\n    setTimeout(() => {\n      refetchettyCashIdGenerator()\n      if (dateRef.current) {\n        dateRef.current.value = format(new Date(), \"yyyy-MM-dd\")\n      }\n      if (payeeRef.current) {\n        payeeRef.current.value = ''\n      }\n      if (explanationRef.current) {\n        explanationRef.current.value = ''\n      }\n\n    }, 100)\n  }\n  function resetPettyCash() {\n    setPettyCashMode('');\n    refetchettyCashIdGenerator();\n    resetRefsEntry()\n    resetRefs()\n    tableRef.current.setData([])\n  }\n  function valueIsNaN(input: any) {\n    if (input !== '' && input !== null) {\n      const num = parseFloat(input.replace(/,/g, ''));\n      return isNaN(num) ? '0.00' : input\n    }\n    return '0.00'\n  }\n\n\n\n\n  return (\n    <>\n      <PageHelmet title=\"Petty Cash\" />\n      <div\n        style={{\n          display: \"flex\",\n          flexDirection: \"column\",\n          width: \"100%\",\n          height: \"100%\",\n          flex: 1,\n          padding: \"5px\",\n          background: \"#F1F1F1\",\n        }}\n      >\n        <div\n          style={{\n            display: \"flex\",\n            alignItems: \"center\",\n            columnGap: \"5px\",\n            marginBottom: \"10px\"\n          }}\n        >\n          {isLoadingModalSearchPettyCash ? (\n            <LoadingButton loading={isLoadingModalSearchPettyCash} />\n          ) : (\n            <TextInput\n              label={{\n                title: \"Search: \",\n                style: {\n                  fontSize: \"12px\",\n                  fontWeight: \"bold\",\n                  width: \"50px\",\n                },\n              }}\n              input={{\n                className: \"search-input-up-on-key-down\",\n                type: \"search\",\n                onKeyDown: (e) => {\n                  if (e.key === \"Enter\" || e.key === \"NumpadEnter\") {\n                    e.preventDefault();\n                    openModalSearchPettyCash(e.currentTarget.value);\n                  }\n                  if (e.key === \"ArrowDown\") {\n                    e.preventDefault();\n                    const datagridview = document.querySelector(\n                      \".grid-container\"\n                    ) as HTMLDivElement;\n                    datagridview.focus();\n                  }\n                },\n                style: { width: \"500px\" },\n              }}\n              inputRef={inputSearchRef}\n            />\n\n\n          )}\n          {pettyCashMode === \"\" && (\n            <Button\n              sx={{\n                height: \"30px\",\n                fontSize: \"11px\",\n              }}\n              variant=\"contained\"\n              startIcon={<AddIcon sx={{ width: 15, height: 15 }} />}\n              id=\"entry-header-save-button\"\n              onClick={() => {\n                setPettyCashMode('add')\n              }}\n            >\n              New\n            </Button>\n          )}\n          <LoadingButton\n            sx={{\n              height: \"30px\",\n              fontSize: \"11px\",\n            }}\n            id=\"save-entry-header\"\n            color=\"primary\"\n            variant=\"contained\"\n            type=\"submit\"\n            onClick={handleOnSave}\n            disabled={pettyCashMode === \"\"}\n            startIcon={<SaveIcon sx={{ width: 15, height: 15 }} />}\n            loading={loadingAddUpdatePettyCash}\n          >\n            {pettyCashMode === \"edit\" ? \"Update\" : \"Save\"}\n          </LoadingButton>\n          {pettyCashMode !== \"\" && (\n            <Button\n              sx={{\n                height: \"30px\",\n                fontSize: \"11px\",\n              }}\n              variant=\"contained\"\n              startIcon={<CloseIcon sx={{ width: 15, height: 15 }} />}\n              color=\"error\"\n              onClick={() => {\n                Swal.fire({\n                  title: \"Are you sure?\",\n                  text: \"You won't be able to revert this!\",\n                  icon: \"warning\",\n                  showCancelButton: true,\n                  confirmButtonColor: \"#3085d6\",\n                  cancelButtonColor: \"#d33\",\n                  confirmButtonText: \"Yes, cancel it!\",\n                }).then((result) => {\n                  if (result.isConfirmed) {\n                    resetPettyCash()\n                  }\n                });\n              }}\n            >\n              Cancel\n            </Button>\n          )}\n        </div>\n        <div\n          style={{\n            display: \"flex\",\n            flexDirection: \"row\",\n            width: \"100%\",\n            borderBottom: \"1px dashed  #334155\",\n            paddingBottom: \"20px\",\n            gap: \"50px\",\n            marginTop: \"5px\",\n          }}\n        >\n          <div\n            style={{\n              display: \"flex\",\n              flexDirection: \"column\",\n              rowGap: \"10px\",\n            }}\n          >\n            {loadingPettyCashIdGenerator ? (\n              <LoadingButton loading={loadingPettyCashIdGenerator} />\n            ) : (\n              <TextInput\n                label={{\n                  title: \"Ref. No. : \",\n                  style: {\n                    fontSize: \"12px\",\n                    fontWeight: \"bold\",\n                    width: \"80px\",\n                  },\n                }}\n                input={{\n                  disabled: isDisableField,\n                  type: \"text\",\n                  style: { width: \"200px\" },\n                  readOnly: true,\n                  onKeyDown: (e) => {\n                    if (e.code === \"NumpadEnter\" || e.code === 'Enter') {\n                      dateRef.current?.focus()\n                    }\n                  }\n                }}\n                icon={<RestartAltIcon sx={{ fontSize: \"18px\" }} />}\n                onIconClick={(e) => {\n                  e.preventDefault()\n                  refetchettyCashIdGenerator()\n                }}\n                inputRef={refNoRef}\n              />\n            )}\n            <TextInput\n              label={{\n                title: \"Deposit Date: \",\n                style: {\n                  fontSize: \"12px\",\n                  fontWeight: \"bold\",\n                  width: \"80px\",\n                },\n              }}\n              input={{\n                defaultValue: format(new Date(), \"yyyy-MM-dd\"),\n                className: \"search-input-up-on-key-down\",\n                type: \"date\",\n                style: { width: \"200px\" },\n                disabled: isDisableField,\n                onKeyDown: (e) => {\n                  if (e.code === \"NumpadEnter\" || e.code === 'Enter') {\n                    payeeRef.current?.focus()\n                  }\n                }\n              }}\n              inputRef={dateRef}\n            />\n          </div>\n          <div\n            style={{\n              flex: 1,\n              display: \"flex\",\n              flexDirection: \"column\",\n              rowGap: \"10px\",\n            }}>\n            <TextInput\n              label={{\n                title: \"Payee : \",\n                style: {\n                  fontSize: \"12px\",\n                  fontWeight: \"bold\",\n                  width: \"100px\",\n                },\n              }}\n              input={{\n                disabled: isDisableField,\n                type: \"text\",\n                style: { width: '400px' },\n                onKeyDown: (e) => {\n                  if (e.code === \"NumpadEnter\" || e.code === 'Enter') {\n                    explanationRef.current?.focus()\n                  }\n                }\n              }}\n              inputRef={payeeRef}\n            />\n            <TextInput\n              label={{\n                title: \"Explanation : \",\n                style: {\n                  fontSize: \"12px\",\n                  fontWeight: \"bold\",\n                  width: \"100px\",\n                },\n              }}\n              input={{\n                disabled: isDisableField,\n                type: \"text\",\n                style: { flex: 1 },\n                onKeyDown: (e) => {\n                  if (e.code === \"NumpadEnter\" || e.code === 'Enter') {\n                    accountRef.current?.focus()\n                  }\n                }\n              }}\n              inputRef={explanationRef}\n            />\n          </div>\n        </div>\n        <div style={{\n          display: \"flex\",\n          flexDirection: \"row\",\n          width: \"100%\",\n          paddingTop: \"20px\",\n          gap: \"50px\",\n          borderRadius: \"3px\",\n        }}>\n          <div style={{\n            display: \"flex\",\n            flexDirection: \"column\",\n            rowGap: \"10px\"\n          }}>\n            {\n              laodPettyCashTransaction ?\n                <LoadingButton loading={laodPettyCashTransaction} /> :\n                <Autocomplete\n                  DisplayMember={'Purpose'}\n                  DataSource={dataCashTransaction?.data.laodTranscation}\n                  disableInput={isDisableField}\n                  inputRef={accountRef}\n                  onChange={(selected: any, e: any) => {\n                    transactionCodeRef.current = selected.Acct_Code\n                    transactionShortRef.current = selected.Short\n                  }}\n                  onKeydown={(e: any) => {\n                    if (e.key === \"Enter\" || e.key === 'NumpadEnter') {\n                      e.preventDefault()\n                      usageRef.current?.focus()\n                    }\n                  }}\n                />\n            }\n            <div\n              style={{\n                display: \"flex\",\n                columnGap: \"20px\"\n              }}\n            >\n              {isLoadingClientIdsModal ? (\n                <LoadingButton loading={isLoadingClientIdsModal} />\n              ) : (\n                <TextInput\n                  label={{\n                    title: \"Usage : \",\n                    style: {\n                      fontSize: \"12px\",\n                      fontWeight: \"bold\",\n                      width: \"80px\",\n                    },\n                  }}\n                  input={{\n                    disabled: isDisableField,\n                    type: \"text\",\n                    style: { width: \"450px\" },\n                    onKeyDown: (e) => {\n                      if (e.code === \"NumpadEnter\" || e.code === 'Enter') {\n                        openCliendIDsModal(e.currentTarget.value)\n                      }\n                    }\n                  }}\n                  icon={<RestartAltIcon sx={{ fontSize: \"18px\" }} />}\n                  onIconClick={(e) => {\n                    e.preventDefault()\n                    if (usageRef.current) {\n                      openCliendIDsModal(usageRef.current.value)\n                    }\n                  }}\n                  inputRef={usageRef}\n                />\n              )}\n              <div style={{\n                display: \"flex\",\n              }}>\n                <label style={{\n                  fontSize: \"12px\",\n                  fontWeight: \"bold\",\n                  width: \"70px\",\n                }}>Amount :</label>\n                <NumericFormat\n                  disabled={isDisableField}\n                  getInputRef={amountRef}\n                  decimalScale={2}\n                  fixedDecimalScale={true}\n                  style={{\n                    width: '200px',\n                  }}\n                  onKeyDown={(e) => {\n                    if (e.code === 'Enter' || e.code === 'NumpadEnter') {\n                      e.currentTarget.value = valueIsNaN(e.currentTarget.value)\n                      vatRef.current?.focus()\n                    }\n\n                  }}\n                  onBlur={(e) => {\n                    if (e.currentTarget.value === '') {\n                      e.currentTarget.value = '0.00'\n                    }\n                  }}\n                  allowNegative={false}\n                  thousandSeparator\n                  valueIsNumericString\n                />\n              </div>\n\n            </div>\n            <div style={{\n              display: \"flex\",\n              columnGap: \"20px\"\n            }}>\n              <SelectInput\n                containerStyle={{\n                  fontSize: \"12px\",\n                  fontWeight: \"bold\",\n                }}\n                label={{\n                  title: \"VAT Type\",\n                  style: {\n                    width: \"80px\",\n                  },\n                }}\n                select={{\n                  defaultValue: \"NON-VAT\",\n                  disabled: isDisableField,\n                  style: {\n                    width: \"100% !important\",\n                    flex: 1,\n                    height: \"100% !important\",\n                    padding: 0,\n                    margin: 0,\n                    cursor: \"pointer\",\n                  },\n                  onKeyDown: (e) => {\n                    if (e.code === 'Enter' || e.code === 'NumpadEnter') {\n                      invoiceRef.current?.focus()\n                    }\n                  },\n                }}\n                datasource={[{ key: 'NON-VAT' }, { key: 'VAT' }]}\n                values={\"key\"}\n                display={\"key\"}\n                selectRef={vatRef}\n              />\n              <TextInput\n                label={{\n                  title: \"Invoice : \",\n                  style: {\n                    fontSize: \"12px\",\n                    fontWeight: \"bold\",\n                    width: \"80px\",\n                  },\n                }}\n                input={{\n                  disabled: isDisableField,\n                  type: \"text\",\n                  style: { width: '270px' },\n                  onKeyDown: (e) => {\n                    if (e.code === \"NumpadEnter\" || e.code === 'Enter') {\n                      e.preventDefault()\n                      handleAddTransaction();\n                    }\n                  }\n                }}\n                inputRef={invoiceRef}\n              />\n              <Button\n                disabled={isDisableField}\n                color=\"success\"\n                variant=\"contained\"\n                style={{ gridArea: \"button\", height: \"22px\", fontSize: \"12px\", width: \"270px\" }}\n                startIcon={<AddIcon />}\n                onClick={() => {\n                  handleAddTransaction();\n                }}\n              >\n                Save Transaction\n              </Button>\n            </div>\n          </div>\n        </div>\n        <br />\n        <PettyCashTableSelected\n          ref={tableRef}\n          width=\"100%\"\n          height=\"350px\"\n          columns={columns}\n          rows={[]}\n          getSelectedItem={(rowItm: any, colItm: any, rowIdx: any, colIdx: any) => {\n            if (accountRef.current) {\n              accountRef.current.value = rowItm[0]\n            }\n            if (amountRef.current) {\n              amountRef.current.value = rowItm[1]\n            }\n            if (usageRef.current) {\n              usageRef.current.value = rowItm[6]\n            }\n            if (vatRef.current) {\n              vatRef.current.value = rowItm[9]\n            }\n            if (invoiceRef.current) {\n              invoiceRef.current.value = rowItm[10]\n            }\n            subAcctRef.current = rowItm[4]\n            clientIdRef.current = rowItm[5]\n            transactionCodeRef.current = rowItm[7]\n            transactionShortRef.current = rowItm[8]\n          }}\n        />\n        {ModalClientIDs}\n        {ModalSearchPettyCash}\n      </div>\n    </>\n\n  );\n}\nconst PettyCashTableSelected = forwardRef(({\n  columns,\n  rows,\n  height = \"400px\",\n  getSelectedItem,\n  disbaleTable = false,\n  isTableSelectable = true\n}: any, ref) => {\n  const parentElementRef = useRef<any>(null)\n  const [data, setData] = useState([])\n  const [column, setColumn] = useState([])\n  const [selectedRow, setSelectedRow] = useState<any>(0)\n  const [selectedRowIndex, setSelectedRowIndex] = useState<any>(null)\n  const totalRowWidth = column.reduce((a: any, b: any) => a + b.width, 0)\n\n  useEffect(() => {\n    if (columns.length > 0) {\n      setColumn(columns.filter((itm: any) => !itm.hide))\n    }\n  }, [columns])\n\n  useEffect(() => {\n    if (rows.length > 0) {\n      setData(rows.map((itm: any) => {\n        return columns.map((col: any) => itm[col.key])\n      }))\n    }\n  }, [rows, columns])\n\n  useImperativeHandle(ref, () => ({\n    selectedRow: () => selectedRow,\n    getData: () => {\n      const newData = [...data];\n      return newData\n    },\n    setData: (newData: any) => {\n      setData(newData)\n    },\n    getColumns: () => {\n      return columns\n    },\n    resetTable: () => {\n      setData([])\n      setSelectedRow(0)\n    },\n    getSelectedRow: () => {\n      return selectedRowIndex\n    },\n    setSelectedRow: (value: any) => {\n      return setSelectedRowIndex(value)\n    },\n    setDataFormated: (newData: any) => {\n      setData(newData.map((itm: any) => {\n        return columns.map((col: any) => itm[col.key])\n      }))\n    },\n    getDataFormatted: () => {\n      const newData = [...data];\n      const newDataFormatted = newData.map((itm: any) => {\n        let newItm = {\n          purpose: itm[0],\n          amount: itm[1],\n          usage: itm[2],\n          accountID: itm[3],\n          sub_account: itm[4],\n          clientID: itm[5],\n          clientName: itm[6],\n          accountCode: itm[7],\n          accountShort: itm[8],\n          vatType: itm[9],\n          invoice: itm[10],\n        }\n        return newItm\n      })\n\n      return newDataFormatted\n    }\n  }))\n\n  return (\n    <div\n      ref={parentElementRef}\n      style={{\n        width: \"100%\",\n        height,\n        overflow: \"auto\",\n        position: \"relative\",\n        pointerEvents: disbaleTable ? \"none\" : \"auto\",\n        border: disbaleTable ? \"2px solid #8c8f8e\" : '2px solid #c0c0c0',\n        boxShadow: `inset -2px -2px 0 #ffffff, \n                      inset 2px 2px 0 #808080`\n\n      }}\n    >\n      <div style={{ position: \"absolute\", width: `${totalRowWidth}px`, height: \"auto\" }}>\n        <table style={{ borderCollapse: \"collapse\", width: \"100%\", position: \"relative\", background: \"white\" }}>\n          <thead >\n            <tr>\n              <th style={{\n                width: '30px',\n                border: \"1px solid black\",\n                position: \"sticky\",\n                top: 0,\n                zIndex: 1,\n                background: \"#f0f0f0\",\n\n              }}\n              ></th>\n              {\n                column.map((colItm: any, idx: number) => {\n                  return (\n                    <th\n                      key={idx}\n                      style={{\n                        width: colItm.width,\n                        border: \"1px solid black\",\n                        position: \"sticky\",\n                        top: 0,\n                        zIndex: 1,\n                        background: \"#f0f0f0\",\n                        fontSize: \"12px\",\n                        textAlign: \"left\",\n                        padding: \"0px 5px\",\n\n                      }}\n                    >{colItm.label}</th>\n                  )\n                })\n              }\n            </tr>\n          </thead>\n          <tbody>\n            {\n              data?.map((rowItm: any, rowIdx: number) => {\n                const selectedRowBg = selectedRow === rowIdx && selectedRowIndex === rowIdx ? \"#dedfe0\" : selectedRow === rowIdx ? \"#b6e4fc\" : selectedRowIndex === rowIdx ? \"#cbcfd4\" : \"\"\n                return (\n                  <tr key={rowIdx}>\n                    <td style={{\n                      position: \"relative\", borderBottom: \"1px solid black\",\n                      borderLeft: \"1px solid black\",\n                      borderTop: \"none\",\n                      borderRight: \"1px solid black\",\n                      cursor: \"pointer\",\n                      background: selectedRowBg,\n                    }}>\n                      <input\n                        style={{\n                          cursor: \"pointer\",\n                          height: \"10px\"\n                        }}\n                        readOnly={true}\n                        checked={selectedRowIndex === rowIdx}\n                        type=\"checkbox\"\n                        onClick={() => {\n                          if (!isTableSelectable) {\n                            return\n                          }\n                          setSelectedRowIndex(rowIdx)\n\n                          if (getSelectedItem) {\n                            getSelectedItem(rowItm, null, rowIdx, null)\n                          }\n                          setSelectedRow(null)\n\n                        }}\n\n                      />\n                    </td>\n\n                    {\n                      column.map((colItm: any, colIdx: number) => {\n                        return (\n                          <td\n                            className={`td row-${rowIdx} col-${colIdx}`}\n                            tabIndex={0}\n                            onDoubleClick={() => {\n                              if (!isTableSelectable) {\n                                return\n                              }\n\n                              setSelectedRowIndex(rowIdx)\n                              if (getSelectedItem) {\n                                getSelectedItem(rowItm, null, rowIdx, null)\n                              }\n                              setSelectedRow(null)\n                            }}\n                            onClick={() => {\n                              setSelectedRow(rowIdx)\n                            }}\n                            onMouseEnter={(e) => {\n                              e.preventDefault()\n                              setSelectedRow(rowIdx)\n                            }}\n                            onMouseLeave={(e) => {\n                              e.preventDefault()\n                              setSelectedRow(null)\n                            }}\n                            onKeyDown={(e) => {\n\n                              if (e.key === \"ArrowUp\") {\n                                setSelectedRow((prev: any) => {\n                                  const index = Math.max(prev - 1, 0)\n                                  const td = document.querySelector(`.td.row-${index}`) as HTMLTableDataCellElement\n                                  if (td) {\n                                    td.focus()\n                                  }\n                                  return index\n                                });\n                              } else if (e.key === \"ArrowDown\") {\n                                setSelectedRow((prev: any) => {\n                                  const index = Math.min(prev + 1, data.length - 1)\n                                  const td = document.querySelector(`.td.row-${index}`) as HTMLTableDataCellElement\n                                  if (td) {\n                                    td.focus()\n                                  }\n                                  return index\n                                });\n                              }\n\n                              if (e.code === 'Enter' || e.code === 'NumpadEnter') {\n                                e.preventDefault()\n\n                                if (!isTableSelectable) {\n                                  return\n                                }\n\n                                setSelectedRowIndex(rowIdx)\n                                if (getSelectedItem) {\n                                  getSelectedItem(rowItm, null, rowIdx, null)\n                                }\n                                setSelectedRow(null)\n                              }\n                            }}\n                            key={colIdx}\n                            style={{\n                              border: \"1px solid black\",\n                              background: selectedRowBg,\n                              fontSize: \"12px\",\n                              padding: \"0px 5px\",\n                              cursor: \"pointer\",\n                            }}\n                          >{\n                              <input\n                                readOnly={true}\n                                value={rowItm[colIdx]}\n                                style={{\n                                  width: colItm.width,\n                                  pointerEvents: \"none\",\n                                  border: \"none\",\n                                  background: \"transparent\",\n                                  userSelect: \"none\"\n                                }} />\n                            }</td>\n                        )\n                      })\n                    }\n                  </tr>\n                )\n              })\n            }\n          </tbody>\n        </table>\n      </div>\n    </div>\n  )\n})\nexport const Autocomplete = ({\n  DisplayMember,\n  DataSource,\n  inputRef,\n  disableInput = false,\n  onKeydown,\n  onChange,\n  label = {\n    title: \"Transaction : \",\n    style: {\n      fontSize: \"12px\",\n      fontWeight: \"bold\",\n      width: \"100px\",\n    },\n  },\n  input = {\n    width: '740px',\n  }\n}: any) => {\n  const [inputValue, setInputValue] = useState(\"\");\n  const [filteredSuggestions, setFilteredSuggestions] = useState([]);\n  const [showSuggestions, setShowSuggestions] = useState(false);\n  const [activeSuggestionIndex, setActiveSuggestionIndex] = useState(0);\n\n  // Ref to store the suggestion container\n  const suggestionListRef = useRef<HTMLUListElement>(null);\n\n  useEffect(() => {\n    // Scroll the active suggestion into view\n    const activeElement = suggestionListRef.current?.children[activeSuggestionIndex];\n    if (activeElement) {\n      activeElement.scrollIntoView({\n        behavior: \"smooth\",\n        block: \"nearest\",\n      });\n    }\n  }, [activeSuggestionIndex]);\n\n  const handleChange = (e: any) => {\n    const value = e.target.value;\n\n    setInputValue(value);\n\n    if (value.trim()) {\n      const filtered = DataSource.filter((item: any) =>\n        item[DisplayMember].toLowerCase().includes(value.toLowerCase())\n      );\n      setFilteredSuggestions(filtered);\n      setShowSuggestions(true);\n    } else {\n      setFilteredSuggestions([]);\n      setShowSuggestions(false);\n    }\n  };\n\n  const handleClick = (suggestion: any) => {\n    setInputValue(suggestion[DisplayMember]);\n    setShowSuggestions(false);\n  };\n\n  const handleKeyDown = (e: any) => {\n    if (e.key === \"ArrowDown\") {\n      e.preventDefault()\n      setActiveSuggestionIndex((prevIndex) =>\n        Math.min(prevIndex + 1, filteredSuggestions.length - 1)\n      );\n    } else if (e.key === \"ArrowUp\") {\n      e.preventDefault()\n\n      setActiveSuggestionIndex((prevIndex) =>\n        Math.max(prevIndex - 1, 0)\n      );\n    } else if (e.key === \"Enter\" || e.key === 'NumpadEnter') {\n      e.preventDefault()\n\n\n      if (filteredSuggestions.length > 0) {\n        const selectedSuggestion = filteredSuggestions[activeSuggestionIndex];\n        onChange(selectedSuggestion, e)\n        setInputValue(selectedSuggestion[DisplayMember]);\n        setShowSuggestions(false);\n      }\n\n    }\n\n    setTimeout(() => {\n      if (onKeydown)\n        onKeydown(e)\n    }, 150)\n  };\n\n  return (\n    <div style={{flex:1}}>\n      <TextInput\n        label={label}\n        input={{\n          ...input,\n          disabled: disableInput,\n          type: \"text\",\n          value: inputValue,\n          onKeyDown: handleKeyDown,\n          onChange: handleChange\n        }}\n        inputRef={inputRef}\n      />\n      {showSuggestions && filteredSuggestions.length > 0 && (\n        <ul className=\"suggestions\" ref={suggestionListRef}>\n          {filteredSuggestions.map((suggestion, index) => (\n            <li\n              key={index}\n              onClick={(e) => {\n                handleClick(suggestion)\n                onChange(suggestion, e)\n              }}\n              className={index === activeSuggestionIndex ? \"active\" : \"\"}\n              onMouseEnter={(e) => {\n                e.preventDefault()\n                setActiveSuggestionIndex(Math.min(index, filteredSuggestions.length - 1));\n              }}\n            >\n              {suggestion[DisplayMember]}\n            </li>\n          ))}\n        </ul>\n      )}\n      <style>\n        {`\n          .suggestions {\n            margin-top: 0;\n            padding: 0;\n            list-style: none;\n            max-height: 150px;\n            overflow-y: auto;\n            position:absolute;\n            z-index:100;\n            background:white;\n            width:350px;\n            border:1px solid #e5e7eb;\n            box-shadow: 0px 23px 32px -17px rgba(0,0,0,0.75);\n          }\n          .suggestions li {\n            padding:3px 10px;\n            cursor: pointer;\n            font-size:14px;\n          }\n          .suggestions li.active {\n            background-color: #e2e8f0;\n          }\n      \n        `}\n      </style>\n    </div>\n  );\n};\nfunction setNewStateValue(dispatch: any, obj: any) {\n  Object.entries(obj).forEach(([field, value]) => {\n    dispatch({ type: \"UPDATE_FIELD\", field, value });\n  });\n}\n\n","import { useContext, useState } from \"react\";\nimport { useQuery } from \"react-query\";\nimport { AuthContext, User } from \"../components/AuthContext\";\nimport {\n  GridRowSelectionModel,\n  GridCellParams,\n  GridTreeNode,\n} from \"@mui/x-data-grid\";\nimport ModalWithTable from \"../components/ModalWithTable\";\nimport { flushSync } from \"react-dom\";\nimport { AxiosResponse, AxiosInstance } from \"axios\";\nimport { GridRowParams } from \"@mui/x-data-grid\";\ninterface QueryModalTableParamsType {\n  link?: {\n    url: string;\n    queryUrlName: string;\n  };\n  uniqueId: string;\n  queryKey: string;\n  responseDataKey: string;\n  columns: Array<any>;\n  onSelected?: (selectedRowData: Array<any>, data: Array<any>) => void;\n  onRemoveSelected?: (data: Array<any>) => void;\n  onSuccess?: (data: any) => void;\n  searchRef?: React.RefObject<HTMLInputElement>;\n  onCellKeyDown?: any;\n  onCloseFunction?: (search: any) => void;\n  CustomizeAxios?: (\n    myAxios: AxiosInstance,\n    user: User | null,\n    link: QueryModalTableParamsType[\"link\"],\n    search?: string\n  ) => Promise<AxiosResponse<any, any>>;\n  isRowSelectable?: ((params: GridRowParams<any>) => boolean) | undefined;\n  getCellClassName?:\n    | ((params: GridCellParams<any, any, any, GridTreeNode>) => string)\n    | undefined;\n}\n\nasync function CustomizeAxiosFunc(\n  myAxios: AxiosInstance,\n  user: User | null,\n  link: QueryModalTableParamsType[\"link\"],\n  search: string = \"\"\n) {\n  return myAxios.get(`${link?.url}?${link?.queryUrlName}=${search}`, {\n    headers: {\n      Authorization: `Bearer ${user?.accessToken}`,\n    },\n  });\n}\n\nconst useQueryModalTable = ({\n  link,\n  uniqueId,\n  queryKey,\n  responseDataKey,\n  columns,\n  onSelected = () => {},\n  onRemoveSelected = () => {},\n  onSuccess = () => {},\n  searchRef,\n  onCellKeyDown,\n  onCloseFunction = () => {},\n  CustomizeAxios = CustomizeAxiosFunc,\n  isRowSelectable,\n  getCellClassName,\n}: QueryModalTableParamsType) => {\n  const { myAxios, user } = useContext(AuthContext);\n  const [show, setShowModal] = useState(false);\n  const [rows, setRows] = useState<GridRowSelectionModel>([]);\n  async function customizeAxiostool(search: string = \"\") {\n    return await CustomizeAxios(myAxios, user, link, search);\n  }\n  const { isLoading, refetch } = useQuery({\n    queryKey: queryKey,\n    queryFn: async () => await customizeAxiostool(),\n    onSuccess: (res) => {\n      const response = res as any;\n      setRows(response.data[responseDataKey]);\n      onSuccess(response);\n    },\n    refetchOnWindowFocus: false,\n  });\n\n  const openModal = (search: string = \"\") => {\n    flushSync(() => {\n      setShowModal(true);\n    });\n    if (searchRef?.current) {\n      searchRef.current.value = search;\n      customizeAxiostool(search).then((res: any) => {\n        if (!res?.data.success) {\n          return alert(`Error : ${res?.data.message}`);\n        }\n        const response = res as any;\n        setRows(response.data[responseDataKey]);\n        if (searchRef?.current) searchRef.current.focus();\n      });\n    }\n  };\n\n  const closeModal = () => {\n    setShowModal(false);\n    if (onCloseFunction) {\n      onCloseFunction(searchRef?.current?.value);\n    }\n  };\n\n  const ModalComponent = (\n    <ModalWithTable\n      getCellClassName={getCellClassName}\n      searchRef={searchRef}\n      showModal={show}\n      onCloseModal={() => {\n        setShowModal(false);\n        if (onCloseFunction) {\n          onCloseFunction(searchRef?.current?.value);\n        }\n      }}\n      onClickCloseIcon={() => {\n        setShowModal(false);\n        if (onCloseFunction) {\n          onCloseFunction(searchRef?.current?.value);\n        }\n      }}\n      searchOnChange={(e) => {\n        // myAxios\n        //   .get(`${link.url}?${link.queryUrlName}=${e.target.value}`, {\n        //     headers: {\n        //       Authorization: `Bearer ${user?.accessToken}`,\n        //     },\n        //   })\n        //   .then((res: any) => {\n        //     if (!res?.data.success) {\n        //       return alert(`Error : ${res?.data.message}`);\n        //     }\n        //     const response = res as any;\n        //     setRows(response.data[responseDataKey]);\n        //   });\n      }}\n      onSearchKeyEnter={(value) => {\n        customizeAxiostool(value).then((res: any) => {\n          if (!res?.data.success) {\n            return alert(`Error : ${res?.data.message}`);\n          }\n          const response = res as any;\n          setRows(response.data[responseDataKey]);\n        });\n      }}\n      onCellKeyDown={onCellKeyDown}\n      height={300}\n      isLoading={isLoading}\n      queryKey={queryKey}\n      columns={columns}\n      onSelectionChange={(rowSelectionModel, data) => {\n        if (rowSelectionModel.length <= 0) {\n          return onRemoveSelected(data);\n        }\n        const selectedIDs = new Set(rowSelectionModel);\n        const selectedRowData = data.filter((row: any) => {\n          return selectedIDs.has(row[uniqueId].toString());\n        });\n        if (selectedRowData.length <= 0) return;\n        onSelected(selectedRowData, data);\n      }}\n      id={uniqueId}\n      rows={rows}\n      setRows={setRows}\n      isRowSelectable={isRowSelectable}\n    />\n  );\n\n  return {\n    show,\n    rows,\n    isLoading,\n    openModal,\n    closeModal,\n    ModalComponent,\n    refetch,\n  };\n};\n\nexport default useQueryModalTable;\n","import Swal from \"sweetalert2\";\n\nexport function codeCondfirmationAlert(props: {\n  cb: (userCodeConfirmation: string) => void;\n  isUpdate: boolean;\n  isConfirm?: () => void;\n  isDeclined?: () => void;\n  text?: string;\n}) {\n  Swal.fire({\n    title: `Are you sure!`,\n    html: props?.text\n      ? props?.text\n      : props.isUpdate\n      ? `Are you sure you want to make this change?`\n      : \"Are you sure you want to delete this?\",\n    icon: \"warning\",\n    input: \"text\",\n    inputAttributes: {\n      autocapitalize: \"off\",\n    },\n    showCancelButton: true,\n    confirmButtonText: \"Save\",\n    confirmButtonColor: \"green\",\n    showLoaderOnConfirm: true,\n    preConfirm: async (userCodeConfirmation) => {\n      try {\n        props.cb(userCodeConfirmation);\n      } catch (error) {\n        Swal.showValidationMessage(`\n            Request failed: ${error}\n          `);\n      }\n    },\n    allowOutsideClick: () => !Swal.isLoading(),\n  }).then((result) => {\n    if (result.isConfirmed) {\n      if (props.isConfirm) {\n        return props.isConfirm();\n      }\n    }\n    if (props.isDeclined) {\n      props.isDeclined();\n    }\n  });\n}\n\nexport function saveCondfirmationAlert(props: {\n  isConfirm?: () => void;\n  isDeclined?: () => void;\n  text?: string;\n}) {\n  Swal.fire({\n    title: \"Are you sure?\",\n    text: props?.text ? props?.text : \"Do you want to proceed with saving?\",\n    icon: \"warning\",\n    showCancelButton: true,\n    confirmButtonColor: \"#3085d6\",\n    cancelButtonColor: \"#d33\",\n    confirmButtonText: \"Yes, save it!\",\n  }).then((result) => {\n    if (result.isConfirmed) {\n      if (props.isConfirm) {\n        return props.isConfirm();\n      }\n    }\n    if (props.isDeclined) {\n      props.isDeclined();\n    }\n  });\n}\n","import { useContext } from \"react\";\r\nimport { AuthContext } from \"../components/AuthContext\"\r\n\r\n\r\n\r\nexport default function useExecuteQueryFromClient() {\r\n    const { myAxios, user } = useContext(AuthContext);\r\n\r\n\r\n    async function executeQueryToClient(query: string) {\r\n        return await myAxios.post('/execute-query', { query }, {\r\n            headers: {\r\n                Authorization: `Bearer ${user?.accessToken}`\r\n            }\r\n        })\r\n    }\r\n\r\n    return {\r\n        executeQueryToClient\r\n    }\r\n}\r\n\r\n","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\"\n}), 'Add');\nexports.default = _default;","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 5V2L8 6l4 4V7c3.31 0 6 2.69 6 6 0 2.97-2.17 5.43-5 5.91v2.02c3.95-.49 7-3.85 7-7.93 0-4.42-3.58-8-8-8zm-6 8c0-1.65.67-3.15 1.76-4.24L6.34 7.34C4.9 8.79 4 10.79 4 13c0 4.08 3.05 7.44 7 7.93v-2.02c-2.83-.48-5-2.94-5-5.91z\"\n}), 'RestartAlt');\nexports.default = _default;","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M17 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V7l-4-4zm-5 16c-1.66 0-3-1.34-3-3s1.34-3 3-3 3 1.34 3 3-1.34 3-3 3zm3-10H5V5h10v4z\"\n}), 'Save');\nexports.default = _default;"],"names":["_ref","_ref$title","title","_jsxs","Helmet","children","_jsx","rel","type","href","concat","process","style","position","top","left","transform","width","bgcolor","boxShadow","p","heigth","ModalWithTable","height","isLoading","columns","queryKey","onSelectionChange","rows","setRows","id","onCloseModal","showModal","onClickCloseIcon","searchOnChange","searchRef","_ref$onSearchKeyEnter","onCellKeyDown","onSearchKeyEnter","isRowSelectable","getCellClassName","mainId","generateRandomClass","Modal","open","onClose","Box","sx","Typography","variant","component","mb","TextField","size","label","marginBottom","fullWidth","onChange","InputProps","inputRef","onKeyDown","e","_searchRef$current","code","preventDefault","current","value","keyBoardSelectionTable","className","Table","isSingleSelection","isRowFreeze","dataSelection","selection","data","table_id","right","IconButton","color","onClick","CloseIcon","Math","floor","random","el","_rows$","document","querySelectorAll","classList","add","firstRowParent","querySelector","firstInput","focus","event","MouseEvent","bubbles","cancelable","view","window","dispatchEvent","addEventListener","es","key","remove","keyBoardUpDown","forEach","idx","_rows$idx","_rows","_rows$idx2","_rows2","length","TableContext","createContext","rowSelectionModel","footerChildren","footerPaginationPosition","showFooterSelectedCount","forwardRef","ref","_ref$CustomFooterComp","CustomFooterComponent","DefaultooterComponent","_ref$checkboxSelectio","checkboxSelection","_ref$footerChildren","_ref$footerPagination","_ref$showFooterSelect","_useState","useState","_useState2","_slicedToArray","selectedRows","setSelectedRows","useImperativeHandle","removeSelection","getSelectedRows","filter","item","includes","freezeArray","Provider","DataGrid","slots","loadingOverlay","LinearProgress","footer","initialState","pagination","paginationModel","pageSize","loading","getRowId","row","col","hide","showCellVerticalBorder","showColumnVerticalBorder","rowHeight","columnHeaderHeight","pageSizeOptions","_objectSpread","fill","background","padding","fontSize","display","fontWeight","onRowSelectionModelChange","selectionSet","Set","s","has","__","rowNode","_toConsumableArray","disableVirtualization","Pagination","_ref2","page","onPageChange","apiRef","useGridApiContext","pageCount","useGridSelector","gridPageCountSelector","MuiPagination","count","newPage","CustomPagination","props","GridPagination","ActionsComponent","_useContext","useContext","columnGap","justifyContent","px","alignItems","flexDirection","flex","TextFormatedInput","input","icon","_ref$iconPosition","iconPosition","_ref$disableIcon","disableIcon","_ref$onIconClick","onIconClick","_ref$onChange","containerStyle","useId","formatNumber","parts","split","replace","join","unformatNumber","htmlFor","zIndex","target","test","handleChange","onBlur","ensureTwoDecimals","handleBlur","cursor","pointerEvents","TextInput","_ref2$iconPosition","_ref2$disableIcon","_ref2$onIconClick","TextAreaInput","_ref3","textarea","_inputRef","_ref3$iconPosition","_ref3$disableIcon","_ref3$onIconClick","SelectInput","_ref4","select","selectRef","_ref4$datasource","datasource","_ref4$values","values","_ref4$display","map","itm","ButtonField","_ref5","buttonRetRef","button","_ref5$tooltipText","tooltipText","_ref5$disabled","disabled","reducer","state","action","_defineProperty","field","chartColumn","headerName","PettyCash","_queryFn","_mutationFn","_mutationFn2","_queryFn2","_handleAddTransaction","AuthContext","myAxios","user","pettyCashMode","setPettyCashMode","executeQueryToClient","useExecuteQueryFromClient","tableRef","useRef","inputSearchRef","subrefNoRef","refNoRef","dateRef","payeeRef","explanationRef","accountRef","usageRef","amountRef","vatRef","invoiceRef","pdcSearchInput","transactionCodeRef","transactionShortRef","clientIdRef","subAcctRef","isDisableField","_useQuery","useQuery","queryFn","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","get","headers","Authorization","accessToken","abrupt","sent","stop","apply","arguments","refetchOnWindowFocus","onSuccess","response","wait","then","pettyCashId","petty_cash_id","loadingPettyCashIdGenerator","refetchettyCashIdGenerator","refetch","_useMutation","useMutation","mutationKey","mutationFn","_x","_callee2","variables","_context2","post","success","resetPettyCash","Swal","message","timer","loadingAddUpdatePettyCash","mutateAddUpdatePettyCash","mutate","_useMutation2","_x2","_callee3","_context3","loadPettyCash","loadSelectedPettyCash","PC_No","PC_Date","Payee","Explanation","setDataFormated","mutateLoadSelectedPettyCash","_useQuery2","_callee4","_context4","laodPettyCashTransaction","dataCashTransaction","_useQueryModalTable","useQueryModalTable","link","url","queryUrlName","uniqueId","responseDataKey","onSelected","selectedRowData","closeCliendIDsModal","IDNo","Acronym","Name","_amountRef$current","ModalClientIDs","ModalComponent","openCliendIDsModal","openModal","isLoadingClientIdsModal","closeModal","_useQueryModalTable2","closeModalSearchPettyCash","ModalSearchPettyCash","openModalSearchPettyCash","isLoadingModalSearchPettyCash","handleAddTransaction","_callee5","_accountRef$current2","_amountRef$current3","_usageRef$current","_usageRef$current2","_vatRef$current","_invoiceRef$current","TransDetail","currentData","RowIndex","getSelectedRow","_context5","_accountRef$current","parseFloat","_amountRef$current2","getData","Short","Acct_Code","setData","setSelectedRow","resetRefs","setTimeout","format","Date","_Fragment","PageHelmet","LoadingButton","currentTarget","Button","startIcon","AddIcon","result","_payeeRef$current","_explanationRef$curre","getDataFormatted","codeCondfirmationAlert","isUpdate","cb","userCodeConfirmation","_refNoRef$current","_dateRef$current","_payeeRef$current2","_explanationRef$curre2","refNo","datePetty","payee","explanation","hasSelected","pettyCash","saveCondfirmationAlert","isConfirm","_refNoRef$current2","_dateRef$current2","_payeeRef$current3","_explanationRef$curre3","SaveIcon","text","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","isConfirmed","borderBottom","paddingBottom","gap","marginTop","rowGap","readOnly","_dateRef$current3","RestartAltIcon","defaultValue","_payeeRef$current4","_explanationRef$curre4","_accountRef$current3","paddingTop","borderRadius","Autocomplete","DisplayMember","DataSource","laodTranscation","disableInput","selected","onKeydown","_usageRef$current3","NumericFormat","getInputRef","decimalScale","fixedDecimalScale","_vatRef$current2","num","isNaN","valueIsNaN","allowNegative","thousandSeparator","valueIsNumericString","margin","_invoiceRef$current2","gridArea","PettyCashTableSelected","getSelectedItem","rowItm","colItm","rowIdx","colIdx","_ref$height","_ref$disbaleTable","disbaleTable","_ref$isTableSelectabl","isTableSelectable","parentElementRef","_useState3","_useState4","_useState5","_useState6","column","setColumn","_useState7","_useState8","selectedRow","_useState9","_useState10","selectedRowIndex","setSelectedRowIndex","totalRowWidth","reduce","a","b","useEffect","newData","getColumns","resetTable","purpose","amount","usage","accountID","sub_account","clientID","clientName","accountCode","accountShort","vatType","invoice","overflow","border","borderCollapse","textAlign","selectedRowBg","borderLeft","borderTop","borderRight","checked","tabIndex","onDoubleClick","onMouseEnter","onMouseLeave","index","max","td","min","userSelect","_ref2$disableInput","_ref2$label","_ref2$input","_useState11","_useState12","inputValue","setInputValue","_useState13","_useState14","filteredSuggestions","setFilteredSuggestions","_useState15","_useState16","showSuggestions","setShowSuggestions","_useState17","_useState18","activeSuggestionIndex","setActiveSuggestionIndex","suggestionListRef","_suggestionListRef$cu","activeElement","scrollIntoView","behavior","block","prevIndex","selectedSuggestion","trim","filtered","toLowerCase","suggestion","handleClick","CustomizeAxiosFunc","_x3","_CustomizeAxiosFunc","search","_args","undefined","_customizeAxiostool","_ref$onSelected","_ref$onRemoveSelected","onRemoveSelected","_ref$onSuccess","_ref$onCloseFunction","onCloseFunction","_ref$CustomizeAxios","CustomizeAxios","show","setShowModal","customizeAxiostool","_args2","res","flushSync","alert","_searchRef$current2","_searchRef$current3","selectedIDs","toString","_preConfirm","html","inputAttributes","autocapitalize","showLoaderOnConfirm","preConfirm","error","allowOutsideClick","isDeclined","_executeQueryToClient","query","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d"],"sourceRoot":""}