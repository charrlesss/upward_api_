{"version":3,"file":"static/js/1690.8fba6125.chunk.js","mappings":"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","sources":["components/DataGridViewReact.tsx","lib/validateDate.ts","components/UpwardFields.tsx","lib/executeQueryFromClient.ts"],"sourcesContent":["import {\r\n  useState,\r\n  useRef,\r\n  forwardRef,\r\n  useEffect,\r\n  useImperativeHandle,\r\n  useContext,\r\n} from \"react\";\r\nimport useExecuteQueryFromClient from \"../lib/executeQueryFromClient\";\r\nimport SearchIcon from \"@mui/icons-material/Search\";\r\nimport { TextInput } from \"./UpwardFields\";\r\nimport { wait } from \"../lib/wait\";\r\nimport CloseIcon from \"@mui/icons-material/Close\";\r\nimport ReactDOMServer from \"react-dom/server\";\r\nimport { AuthContext } from \"./AuthContext\";\r\nimport { Loading } from \"./Loading\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nexport const DataGridViewReact = forwardRef(\r\n  (\r\n    {\r\n      columns,\r\n      rows = [],\r\n      height = \"400px\",\r\n      getSelectedItem,\r\n      onKeyDown,\r\n      disbaleTable = false,\r\n      isTableSelectable: _isTableSelectable = true,\r\n      containerStyle,\r\n      focusElementOnMaxTop,\r\n      ActionComponent = () => <></>,\r\n      showSequence = false,\r\n    }: any,\r\n    ref\r\n  ) => {\r\n    const parentElementRef = useRef<any>(null);\r\n    const actionModalRef = useRef<any>(null);\r\n    const checkboxRef = useRef([]);\r\n    const tbodyRef = useRef<HTMLTableSectionElement>(null);\r\n    const [data, setData] = useState([]);\r\n    const [column, setColumn] = useState([]);\r\n    const [selectedRow, setSelectedRow] = useState<any>(0);\r\n    const [selectedRowIndex, setSelectedRowIndex] = useState<any>(null);\r\n    const totalRowWidth = column.reduce((a: any, b: any) => a + b.width, 0);\r\n    const [isTableSelectable, setIsTableSelectable] =\r\n      useState(_isTableSelectable);\r\n\r\n    const [columnHeader, setColumnHeader] = useState(\r\n      columns.filter((itm: any) => !itm.hide)\r\n    );\r\n    const [hoveredColumn, setHoveredColumn] = useState(null);\r\n\r\n    useEffect(() => {\r\n      if (columns.length > 0) {\r\n        setColumn(columns.filter((itm: any) => !itm.hide));\r\n      }\r\n    }, [columns]);\r\n\r\n    useImperativeHandle(ref, () => ({\r\n      checkNoIsExist: (checkNo: string) => {\r\n        return data.some((subArray: any) => subArray[2] === checkNo);\r\n      },\r\n      selectedRow: () => selectedRow,\r\n      getData: () => {\r\n        const newData = [...data];\r\n        return newData;\r\n      },\r\n      setData: (newData: any) => {\r\n        setData(newData);\r\n      },\r\n      getColumns: () => {\r\n        return columns;\r\n      },\r\n      resetTable: () => {\r\n        setData([]);\r\n        setSelectedRow(0);\r\n        setSelectedRowIndex(null);\r\n      },\r\n      getSelectedRow: () => {\r\n        return selectedRowIndex;\r\n      },\r\n      setSelectedRow: (value: any) => {\r\n        return setSelectedRowIndex(value);\r\n      },\r\n      resetCheckBox: () => {\r\n        return handleResetCheckBox();\r\n      },\r\n      _setSelectedRow: (value: any) => {\r\n        return setSelectedRow(value);\r\n      },\r\n      setIsTableSelectable: (param: boolean) => {\r\n        setIsTableSelectable(param);\r\n      },\r\n      setDataFormated: (newData: any) => {\r\n        setData(\r\n          newData.map((itm: any) => {\r\n            return columns.map((col: any) => itm[col.key]);\r\n          })\r\n        );\r\n      },\r\n      getDataFormatted: () => {\r\n        const newData = [...data];\r\n        const newDataFormatted = newData.map((itm: any) => {\r\n          let newItm = {\r\n            Check_No: itm[0],\r\n            Check_Date: itm[1],\r\n            Check_Amnt: itm[2],\r\n            BankName: itm[3],\r\n            Branch: itm[4],\r\n            Check_Remarks: itm[5],\r\n            Deposit_Slip: itm[6],\r\n            DateDeposit: itm[7],\r\n            OR_No: itm[8],\r\n            BankCode: itm[9],\r\n          };\r\n          return newItm;\r\n        });\r\n\r\n        return newDataFormatted;\r\n      },\r\n      getElementBody: () => tbodyRef.current,\r\n      getParentElement: () => parentElementRef.current,\r\n    }));\r\n    const handleResetCheckBox = () => {\r\n      checkboxRef.current.forEach((checkbox: HTMLInputElement, idx: any) => {\r\n        if (checkbox) checkbox.checked = false;\r\n      });\r\n    };\r\n    const handleResetCheckBoxByIndex = (_idx: any) => {\r\n      checkboxRef.current.forEach((checkbox: HTMLInputElement, idx: any) => {\r\n        if (_idx === idx) {\r\n          return;\r\n        } else {\r\n          if (checkbox) checkbox.checked = false;\r\n        }\r\n      });\r\n    };\r\n    const handleRightClick = (event: any, idx: number) => {\r\n      event.preventDefault(); // Prevent the default context menu from appearing\r\n      if (idx === selectedRowIndex) {\r\n        actionModalRef.current.showModal();\r\n      }\r\n    };\r\n    const startResize = (index: any, e: any) => {\r\n      e.preventDefault();\r\n      e.stopPropagation();\r\n\r\n      const startX = e.clientX;\r\n      const startWidth = columnHeader[index].width;\r\n\r\n      const doDrag = (moveEvent: any) => {\r\n        const newWidth = startWidth + (moveEvent.clientX - startX);\r\n        const updatedColumns = [...columnHeader];\r\n        updatedColumns[index].width = newWidth > 50 ? newWidth : 50; // Set minimum column width\r\n        setColumnHeader(updatedColumns);\r\n      };\r\n\r\n      const stopDrag = () => {\r\n        document.removeEventListener(\"mousemove\", doDrag);\r\n        document.removeEventListener(\"mouseup\", stopDrag);\r\n      };\r\n\r\n      document.addEventListener(\"mousemove\", doDrag);\r\n      document.addEventListener(\"mouseup\", stopDrag);\r\n    };\r\n    const handleMouseEnter = (index: any) => {\r\n      setHoveredColumn(index); // Set the hovered column index\r\n    };\r\n    const handleMouseLeave = () => {\r\n      setHoveredColumn(null); // Reset hovered column index\r\n    };\r\n\r\n    return (\r\n      <>\r\n        <ActionModal\r\n          ref={actionModalRef}\r\n          Component={\r\n            <ActionComponent\r\n              selectedRowIndex={selectedRowIndex}\r\n              closeModal={() => actionModalRef.current.closeDelay()}\r\n              rowItm={data[selectedRowIndex]}\r\n            />\r\n          }\r\n        />\r\n        <div\r\n          ref={parentElementRef}\r\n          style={{\r\n            width: \"100%\",\r\n            height,\r\n            overflow: \"auto\",\r\n            position: \"relative\",\r\n            pointerEvents: disbaleTable ? \"none\" : \"auto\",\r\n            border: disbaleTable ? \"2px solid #8c8f8e\" : \"2px solid #c0c0c0\",\r\n            boxShadow: `inset -2px -2px 0 #ffffff, \r\n                        inset 2px 2px 0 #808080`,\r\n            ...containerStyle,\r\n            background: \"#dcdcdc\",\r\n          }}\r\n        >\r\n          <div\r\n            style={{\r\n              position: \"absolute\",\r\n              width: `${totalRowWidth}px`,\r\n              height: \"auto\",\r\n            }}\r\n          >\r\n            <table\r\n              id=\"upward-cutom-table\"\r\n              style={{\r\n                borderCollapse: \"collapse\",\r\n                width: \"100%\",\r\n                position: \"relative\",\r\n                background: \"#dcdcdc\",\r\n              }}\r\n            >\r\n              <thead>\r\n                <tr>\r\n                  <th\r\n                    style={{\r\n                      width: \"30px\",\r\n                      border: \"none\",\r\n                      position: \"sticky\",\r\n                      top: 0,\r\n                      zIndex: 1,\r\n                      background: \"#f0f0f0\",\r\n                    }}\r\n                  ></th>\r\n                  {showSequence && (\r\n                    <th\r\n                      style={{\r\n                        width: \"50px\",\r\n                        borderRight: \"1px solid #e2e8f0\",\r\n                        position: \"sticky\",\r\n                        top: 0,\r\n                        zIndex: 1,\r\n                        background: \"#f0f0f0\",\r\n                        fontSize: \"12px\",\r\n                        padding: \"0px 5px\",\r\n                        textAlign: \"center\",\r\n                      }}\r\n                    >\r\n                      SEQ\r\n                    </th>\r\n                  )}\r\n                  {column.map((colItm: any, idx: number) => {\r\n                    return (\r\n                      <th\r\n                        key={idx}\r\n                        style={{\r\n                          width: colItm.width,\r\n                          borderRight: \"1px solid #e2e8f0\",\r\n                          position: \"sticky\",\r\n                          top: 0,\r\n                          zIndex: 1,\r\n                          background: \"#f0f0f0\",\r\n                          fontSize: \"12px\",\r\n                          padding: \"0px 5px\",\r\n                          textAlign:\r\n                            colItm.type === \"number\" ? \"center\" : \"left\",\r\n                        }}\r\n                      >\r\n                        <div\r\n                          key={idx}\r\n                          className={` ${\r\n                            hoveredColumn === idx ? `highlight-column` : \"\"\r\n                          }`} // Add the class if hovered\r\n                          style={{ width: colItm.width, height: \"20px\" }}\r\n                        >\r\n                          {colItm.label}\r\n\r\n                          <div\r\n                            className=\"resize-handle\"\r\n                            onMouseDown={(e) => startResize(idx, e)}\r\n                            onMouseEnter={(e) => {\r\n                              e.preventDefault();\r\n                              handleMouseEnter(idx);\r\n                            }} // On hover\r\n                            onMouseLeave={(e) => {\r\n                              e.preventDefault();\r\n                              handleMouseLeave();\r\n                            }} // On mouse leave\r\n                          />\r\n                        </div>\r\n                      </th>\r\n                    );\r\n                  })}\r\n                </tr>\r\n              </thead>\r\n              <tbody ref={tbodyRef}>\r\n                {data?.map((rowItm: any, rowIdx: number) => {\r\n                  return (\r\n                    <RowComponent\r\n                      key={rowIdx}\r\n                      rowIdx={rowIdx}\r\n                      rowItm={rowItm}\r\n                      selectedRowIndex={selectedRowIndex}\r\n                      selectedRow={selectedRow}\r\n                      isTableSelectable={isTableSelectable}\r\n                      setSelectedRowIndex={setSelectedRowIndex}\r\n                      getSelectedItem={getSelectedItem}\r\n                      setSelectedRow={setSelectedRow}\r\n                      column={column}\r\n                      onKeyDown={onKeyDown}\r\n                      focusElementOnMaxTop={focusElementOnMaxTop}\r\n                      data={data}\r\n                      parentElementRef={parentElementRef}\r\n                      checkboxRef={checkboxRef}\r\n                      handleResetCheckBox={handleResetCheckBox}\r\n                      handleResetCheckBoxByIndex={handleResetCheckBoxByIndex}\r\n                      handleRightClick={handleRightClick}\r\n                      showSequence={showSequence}\r\n                    />\r\n                  );\r\n                })}\r\n              </tbody>\r\n            </table>\r\n            <style>\r\n              {`\r\n             #upward-cutom-table tr td{\r\n               border-right:1px solid #f1f5f9 !important;\r\n             }\r\n          \r\n              #upward-cutom-table tr:nth-child(odd) td {\r\n                  background-color: #ffffff !important;\r\n              }\r\n              #upward-cutom-table tr:nth-child(even) td {\r\n                  background-color: #f5f5f5 !important;\r\n              }\r\n              #upward-cutom-table tr.selected td {\r\n                  background-color: #0076d7 !important;\r\n                  color: #ffffff !important;\r\n                  border-right:1px solid white !important;\r\n                border-bottom:1px solid white !important;\r\n\r\n              }\r\n              \r\n               #upward-cutom-table tr.selected td input {\r\n                  color: #ffffff !important;\r\n              }\r\n\r\n              .resize-handle {\r\n                    position: absolute;\r\n                    right: 0;\r\n                    top: 0;\r\n                    width: 5px;\r\n                    height: 100%;\r\n                    cursor: col-resize;\r\n                    background-color: transparent;\r\n                  }\r\n\r\n                  .resize-handle:hover {\r\n                    background-color: #101111;\r\n                  }\r\n\r\n                  .highlight-column {\r\n                    border-right: 2px solid #007bff !important;\r\n                  }\r\n  \r\n              `}\r\n            </style>\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n);\r\n\r\nconst RowComponent = forwardRef(\r\n  (\r\n    {\r\n      rowIdx,\r\n      rowItm,\r\n      selectedRowIndex,\r\n      selectedRow,\r\n      isTableSelectable,\r\n      setSelectedRowIndex,\r\n      getSelectedItem,\r\n      setSelectedRow,\r\n      column,\r\n      onKeyDown,\r\n      focusElementOnMaxTop,\r\n      data,\r\n      parentElementRef,\r\n      checkboxRef,\r\n      handleResetCheckBox,\r\n      handleResetCheckBoxByIndex,\r\n      handleRightClick,\r\n      showSequence,\r\n    }: any,\r\n    ref\r\n  ) => {\r\n    return (\r\n      <tr\r\n        data-index={rowIdx}\r\n        key={rowIdx}\r\n        className={`row ${\r\n          selectedRow === rowIdx || selectedRowIndex === rowIdx\r\n            ? \"selected\"\r\n            : \"\"\r\n        }`}\r\n      >\r\n        <td\r\n          style={{\r\n            position: \"relative\",\r\n            border: \"none\",\r\n            cursor: \"pointer\",\r\n            background: selectedRow === rowIdx ? \"#0076d\" : \"\",\r\n            padding: 0,\r\n            margin: 0,\r\n          }}\r\n        >\r\n          <div\r\n            style={{\r\n              width: \"18px\",\r\n              height: \"18px\",\r\n              position: \"relative\",\r\n              display: \"flex\",\r\n              alignItems: \"center\",\r\n              justifyContent: \"center\",\r\n            }}\r\n          >\r\n            <CheckBoxSelection\r\n              key={rowIdx}\r\n              checkboxRef={checkboxRef}\r\n              isTableSelectable={isTableSelectable}\r\n              setSelectedRowIndex={setSelectedRowIndex}\r\n              rowIdx={rowIdx}\r\n              rowItm={rowItm}\r\n              getSelectedItem={getSelectedItem}\r\n              setSelectedRow={setSelectedRow}\r\n              handleResetCheckBoxByIndex={handleResetCheckBoxByIndex}\r\n            />\r\n          </div>\r\n        </td>\r\n\r\n        {showSequence && (\r\n          <td\r\n            style={{\r\n              position: \"relative\",\r\n              border: \"none\",\r\n              cursor: \"pointer\",\r\n              background: selectedRow === rowIdx ? \"#0076d\" : \"\",\r\n              padding: 0,\r\n              margin: 0,\r\n            }}\r\n          >\r\n            <input\r\n              readOnly={true}\r\n              defaultValue={`${String(rowIdx + 1).padStart(2, \"0\")}`}\r\n              style={{\r\n                width: \"50px\",\r\n                pointerEvents: \"none\",\r\n                border: \"none\",\r\n                background: \"transparent\",\r\n                userSelect: \"none\",\r\n                height: \"100%\",\r\n                textAlign: \"center\",\r\n              }}\r\n            />\r\n          </td>\r\n        )}\r\n\r\n        {column.map((colItm: any, colIdx: number) => {\r\n          return (\r\n            <td\r\n              className={`td row-${rowIdx} col-${colIdx} `}\r\n              tabIndex={0}\r\n              onDoubleClick={() => {\r\n                if (!isTableSelectable) {\r\n                  return;\r\n                }\r\n                handleResetCheckBox();\r\n                if (selectedRowIndex === rowIdx) {\r\n                  setSelectedRowIndex(null);\r\n\r\n                  checkboxRef.current[rowIdx].checked = false;\r\n\r\n                  if (getSelectedItem) {\r\n                    getSelectedItem(null, null, rowIdx, null);\r\n                  }\r\n                } else {\r\n                  checkboxRef.current[rowIdx].checked = true;\r\n\r\n                  setSelectedRowIndex(rowIdx);\r\n                  if (getSelectedItem) {\r\n                    getSelectedItem(rowItm, null, rowIdx, null);\r\n                  }\r\n                }\r\n                setSelectedRow(null);\r\n              }}\r\n              onClick={() => {\r\n                setSelectedRow(rowIdx);\r\n              }}\r\n              onKeyDown={(e) => {\r\n                if (onKeyDown) {\r\n                  onKeyDown(rowItm, rowIdx, e);\r\n                }\r\n                if (e.key === \"ArrowUp\") {\r\n                  setSelectedRow((prev: any) => {\r\n                    const index = Math.max(prev - 1, -1);\r\n                    const td = document.querySelector(\r\n                      `.td.row-${index}`\r\n                    ) as HTMLTableDataCellElement;\r\n\r\n                    if (index < 0) {\r\n                      if (focusElementOnMaxTop) {\r\n                        focusElementOnMaxTop();\r\n                      }\r\n                      return;\r\n                    }\r\n                    if (td) {\r\n                      td.focus();\r\n                    }\r\n                    return index;\r\n                  });\r\n                } else if (e.key === \"ArrowDown\") {\r\n                  setSelectedRow((prev: any) => {\r\n                    const index = Math.min(prev + 1, data.length - 1);\r\n                    const td = document.querySelector(\r\n                      `.td.row-${index}`\r\n                    ) as HTMLTableDataCellElement;\r\n\r\n                    if (td) {\r\n                      td.focus();\r\n                      if (index <= 15) {\r\n                        parentElementRef.current.style.overflow = \"hidden\";\r\n                        setTimeout(() => {\r\n                          parentElementRef.current.style.overflow = \"auto\";\r\n                        }, 100);\r\n                        return index;\r\n                      }\r\n                    }\r\n                    return index;\r\n                  });\r\n                }\r\n                if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\r\n                  e.preventDefault();\r\n\r\n                  if (!isTableSelectable) {\r\n                    return;\r\n                  }\r\n\r\n                  setSelectedRowIndex(rowIdx);\r\n\r\n                  if (getSelectedItem) {\r\n                    getSelectedItem(rowItm, null, rowIdx, null);\r\n                  }\r\n                  setSelectedRow(null);\r\n                }\r\n              }}\r\n              key={colIdx}\r\n              style={{\r\n                border: \"none\",\r\n                fontSize: \"12px\",\r\n                padding: \"0px 5px\",\r\n                cursor: \"pointer\",\r\n                height: \"20px\",\r\n                userSelect: \"none\",\r\n              }}\r\n              onContextMenu={(e) => handleRightClick(e, rowIdx)}\r\n            >\r\n              {\r\n                <input\r\n                  readOnly={true}\r\n                  value={rowItm[colIdx]}\r\n                  style={{\r\n                    width: colItm.width,\r\n                    pointerEvents: \"none\",\r\n                    border: \"none\",\r\n                    background: \"transparent\",\r\n                    userSelect: \"none\",\r\n                    height: \"100%\",\r\n                    textAlign: colItm.type === \"number\" ? \"right\" : \"left\",\r\n                  }}\r\n                />\r\n              }\r\n            </td>\r\n          );\r\n        })}\r\n      </tr>\r\n    );\r\n  }\r\n);\r\nconst CheckBoxSelection = forwardRef(\r\n  (\r\n    {\r\n      isTableSelectable,\r\n      setSelectedRowIndex,\r\n      rowIdx,\r\n      rowItm,\r\n      getSelectedItem,\r\n      setSelectedRow,\r\n      checkboxRef,\r\n      handleResetCheckBoxByIndex,\r\n    }: any,\r\n    ref\r\n  ) => {\r\n    return (\r\n      <input\r\n        ref={(el) => (checkboxRef.current[rowIdx] = el)}\r\n        style={{\r\n          cursor: \"pointer\",\r\n          margin: \"0px !important\",\r\n          position: \"absolute\",\r\n        }}\r\n        readOnly={true}\r\n        type=\"checkbox\"\r\n        onClick={(e) => {\r\n          if (!isTableSelectable) {\r\n            return;\r\n          }\r\n          handleResetCheckBoxByIndex(rowIdx);\r\n          if (e.currentTarget.checked) {\r\n            setSelectedRowIndex(rowIdx);\r\n            if (getSelectedItem) {\r\n              getSelectedItem(rowItm, null, rowIdx, null);\r\n            }\r\n            setSelectedRow(null);\r\n            return;\r\n          } else {\r\n            setSelectedRowIndex(null);\r\n            if (getSelectedItem) {\r\n              getSelectedItem(null, null, rowIdx, null);\r\n            }\r\n            setSelectedRow(null);\r\n            return;\r\n          }\r\n        }}\r\n      />\r\n    );\r\n  }\r\n);\r\n\r\nconst ActionModal = forwardRef(\r\n  ({ handleOnSave, handleOnClose, hasSelectedRow, Component }: any, ref) => {\r\n    const [showModal, setShowModal] = useState(false);\r\n    const [handleDelayClose, setHandleDelayClose] = useState(false);\r\n    const [blick, setBlick] = useState(false);\r\n\r\n    const closeDelay = () => {\r\n      setHandleDelayClose(true);\r\n      setTimeout(() => {\r\n        setShowModal(false);\r\n        setHandleDelayClose(false);\r\n        if (handleOnClose) handleOnClose();\r\n      }, 100);\r\n    };\r\n    const closeDelayRef = useRef<any>(closeDelay);\r\n\r\n    useImperativeHandle(ref, () => ({\r\n      showModal: () => {\r\n        setShowModal(true);\r\n      },\r\n      clsoeModal: () => {\r\n        setShowModal(false);\r\n      },\r\n      blick,\r\n      closeDelay,\r\n    }));\r\n\r\n    useEffect(() => {\r\n      window.addEventListener(\"keydown\", (e: any) => {\r\n        if (e.key === \"Escape\") {\r\n          closeDelayRef.current();\r\n        }\r\n      });\r\n    }, []);\r\n\r\n    return showModal ? (\r\n      <>\r\n        <div\r\n          style={{\r\n            position: \"fixed\",\r\n            top: 0,\r\n            bottom: 0,\r\n            left: 0,\r\n            right: 0,\r\n            background: \"transparent\",\r\n            zIndex: \"88\",\r\n          }}\r\n          onClick={() => {\r\n            setBlick(true);\r\n            setTimeout(() => {\r\n              setBlick(false);\r\n            }, 250);\r\n          }}\r\n        ></div>\r\n        <div\r\n          style={{\r\n            height: \"auto\",\r\n            width: \"auto\",\r\n            border: \"1px solid #64748b\",\r\n            position: \"absolute\",\r\n            left: \"50%\",\r\n            top: \"50%\",\r\n            transform: \"translate(-50%, -75%)\",\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            zIndex: handleDelayClose ? -100 : 100,\r\n            opacity: handleDelayClose ? 0 : 1,\r\n            transition: \"all 150ms\",\r\n            boxShadow: \"3px 6px 32px -7px rgba(0,0,0,0.75)\",\r\n          }}\r\n        >\r\n          <div\r\n            style={{\r\n              height: \"22px\",\r\n              background: \"white\",\r\n              display: \"flex\",\r\n              justifyContent: \"space-between\",\r\n              padding: \"5px\",\r\n              position: \"relative\",\r\n              alignItems: \"center\",\r\n            }}\r\n          >\r\n            <span style={{ fontSize: \"13px\", fontWeight: \"bold\" }}>Action</span>\r\n            <button\r\n              className=\"btn-check-exit-modal\"\r\n              style={{\r\n                padding: \"0 5px\",\r\n                borderRadius: \"0px\",\r\n                background: \"white\",\r\n                color: \"black\",\r\n                height: \"22px\",\r\n                position: \"absolute\",\r\n                top: 0,\r\n                right: 0,\r\n              }}\r\n              onClick={() => {\r\n                closeDelay();\r\n              }}\r\n            >\r\n              <CloseIcon sx={{ fontSize: \"22px\" }} />\r\n            </button>\r\n          </div>\r\n          {Component}\r\n          <style>\r\n            {`\r\n              .btn-check-exit-modal:hover{\r\n                background:red !important;\r\n                color:white !important;\r\n              }\r\n            `}\r\n          </style>\r\n        </div>\r\n      </>\r\n    ) : null;\r\n  }\r\n);\r\n\r\nexport const DataGridViewMultiSelectionReact = forwardRef(\r\n  (\r\n    {\r\n      columns,\r\n      rows = [],\r\n      height = \"400px\",\r\n      getSelectedItem,\r\n      onKeyDown,\r\n      disbaleTable = false,\r\n      isTableSelectable: _isTableSelectable = true,\r\n      containerStyle,\r\n      focusElementOnMaxTop,\r\n      onCheckAll,\r\n      onUnCheckAll,\r\n      rowIsSelectable,\r\n    }: any,\r\n    ref\r\n  ) => {\r\n    const parentElementRef = useRef<any>(null);\r\n    const tbodyRef = useRef<HTMLTableSectionElement>(null);\r\n    const [data, setData] = useState([]);\r\n    const [column, setColumn] = useState([]);\r\n    const [selectedRow, setSelectedRow] = useState<any>(0);\r\n    const [selectedRowIndex, setSelectedRowIndex] = useState<Array<any>>([]);\r\n    const totalRowWidth = column.reduce((a: any, b: any) => a + b.width, 0);\r\n    const [isTableSelectable, setIsTableSelectable] =\r\n      useState(_isTableSelectable);\r\n\r\n    const [columnHeader, setColumnHeader] = useState(\r\n      columns.filter((itm: any) => !itm.hide)\r\n    );\r\n    const [hoveredColumn, setHoveredColumn] = useState(null);\r\n\r\n    useEffect(() => {\r\n      if (columns.length > 0) {\r\n        setColumn(columns.filter((itm: any) => !itm.hide));\r\n      }\r\n    }, [columns]);\r\n\r\n    useImperativeHandle(ref, () => ({\r\n      checkNoIsExist: (checkNo: string) => {\r\n        return data.some((subArray: any) => subArray[2] === checkNo);\r\n      },\r\n      selectedRow: () => selectedRow,\r\n      getData: () => {\r\n        const newData = [...data];\r\n        return newData;\r\n      },\r\n      getSelectedRowsData: () => {\r\n        const newData = [...data];\r\n        return selectedRowIndex\r\n          .map((index) => newData[index])\r\n          .filter((item) => item !== undefined);\r\n      },\r\n      setData: (newData: any) => {\r\n        setData(newData);\r\n      },\r\n      getColumns: () => {\r\n        return columns;\r\n      },\r\n      resetTable: () => {\r\n        setData([]);\r\n        setSelectedRow(0);\r\n        setSelectedRowIndex([]);\r\n      },\r\n      getSelectedRow: () => {\r\n        return selectedRowIndex;\r\n      },\r\n      setSelectedRow: (value: any) => {\r\n        return setSelectedRowIndex(value);\r\n      },\r\n      _setSelectedRow: (value: any) => {\r\n        return setSelectedRow(value);\r\n      },\r\n      setDataFormated: (newData: any) => {\r\n        setData(\r\n          newData.map((itm: any) => {\r\n            return columns.map((col: any) => itm[col.key]);\r\n          })\r\n        );\r\n      },\r\n      setIsTableSelectable: (param: boolean) => {\r\n        setIsTableSelectable(param);\r\n      },\r\n      getDataFormatted: () => {\r\n        const newData = [...data];\r\n        const newDataFormatted = newData.map((itm: any) => {\r\n          let newItm = {\r\n            Check_No: itm[0],\r\n            Check_Date: itm[1],\r\n            Check_Amnt: itm[2],\r\n            BankName: itm[3],\r\n            Branch: itm[4],\r\n            Check_Remarks: itm[5],\r\n            Deposit_Slip: itm[6],\r\n            DateDeposit: itm[7],\r\n            OR_No: itm[8],\r\n            BankCode: itm[9],\r\n          };\r\n          return newItm;\r\n        });\r\n\r\n        return newDataFormatted;\r\n      },\r\n      getElementBody: () => tbodyRef.current,\r\n      getParentElement: () => parentElementRef.current,\r\n      isTableSelectable,\r\n    }));\r\n\r\n    const startResize = (index: any, e: any) => {\r\n      e.preventDefault();\r\n      e.stopPropagation();\r\n\r\n      const startX = e.clientX;\r\n      const startWidth = columnHeader[index].width;\r\n\r\n      const doDrag = (moveEvent: any) => {\r\n        const newWidth = startWidth + (moveEvent.clientX - startX);\r\n        const updatedColumns = [...columnHeader];\r\n        updatedColumns[index].width = newWidth > 50 ? newWidth : 50; // Set minimum column width\r\n        setColumnHeader(updatedColumns);\r\n      };\r\n\r\n      const stopDrag = () => {\r\n        document.removeEventListener(\"mousemove\", doDrag);\r\n        document.removeEventListener(\"mouseup\", stopDrag);\r\n      };\r\n\r\n      document.addEventListener(\"mousemove\", doDrag);\r\n      document.addEventListener(\"mouseup\", stopDrag);\r\n    };\r\n    const handleMouseEnter = (index: any) => {\r\n      setHoveredColumn(index); // Set the hovered column index\r\n    };\r\n    const handleMouseLeave = () => {\r\n      setHoveredColumn(null); // Reset hovered column index\r\n    };\r\n\r\n    return (\r\n      <div\r\n        ref={parentElementRef}\r\n        style={{\r\n          width: \"100%\",\r\n          height,\r\n          overflow: \"auto\",\r\n          position: \"relative\",\r\n          pointerEvents: disbaleTable ? \"none\" : \"auto\",\r\n          border: disbaleTable ? \"2px solid #8c8f8e\" : \"2px solid #c0c0c0\",\r\n          boxShadow: `inset -2px -2px 0 #ffffff, \r\n                        inset 2px 2px 0 #808080`,\r\n          ...containerStyle,\r\n          background: \"#dcdcdc\",\r\n        }}\r\n      >\r\n        <div\r\n          style={{\r\n            position: \"absolute\",\r\n            width: `${totalRowWidth}px`,\r\n            height: \"auto\",\r\n          }}\r\n        >\r\n          <table\r\n            id=\"upward-cutom-table-multi\"\r\n            style={{\r\n              borderCollapse: \"collapse\",\r\n              width: \"100%\",\r\n              position: \"relative\",\r\n              background: \"#dcdcdc\",\r\n            }}\r\n          >\r\n            <thead>\r\n              <tr>\r\n                {isTableSelectable && (\r\n                  <th\r\n                    style={{\r\n                      width: \"30px\",\r\n                      border: \"none\",\r\n                      position: \"sticky\",\r\n                      top: 0,\r\n                      zIndex: 1,\r\n                      background: \"#f0f0f0\",\r\n                    }}\r\n                  >\r\n                    <div\r\n                      style={{\r\n                        width: \"18px\",\r\n                        height: \"18px\",\r\n                        position: \"relative\",\r\n                        display: \"flex\",\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\",\r\n                      }}\r\n                    >\r\n                      <input\r\n                        style={{\r\n                          cursor: \"pointer\",\r\n                          margin: \"0px !important\",\r\n                          position: \"absolute\",\r\n                        }}\r\n                        readOnly={true}\r\n                        type=\"checkbox\"\r\n                        onClick={(e) => {\r\n                          if (e.currentTarget.checked) {\r\n                            if (onCheckAll) {\r\n                              onCheckAll();\r\n                            }\r\n                          } else {\r\n                            if (onUnCheckAll) {\r\n                              onUnCheckAll();\r\n                            }\r\n                          }\r\n                        }}\r\n                      />\r\n                    </div>\r\n                  </th>\r\n                )}\r\n                {column.map((colItm: any, idx: number) => {\r\n                  return (\r\n                    <th\r\n                      key={idx}\r\n                      style={{\r\n                        width: colItm.width,\r\n                        borderRight: \"1px solid #e2e8f0\",\r\n                        position: \"sticky\",\r\n                        top: 0,\r\n                        zIndex: 1,\r\n                        background: \"#f0f0f0\",\r\n                        fontSize: \"12px\",\r\n                        padding: \"0px 5px\",\r\n                        textAlign: colItm.type === \"number\" ? \"center\" : \"left\",\r\n                      }}\r\n                    >\r\n                      <div\r\n                        key={idx}\r\n                        className={` ${\r\n                          hoveredColumn === idx ? `highlight-column` : \"\"\r\n                        }`} // Add the class if hovered\r\n                        style={{ width: colItm.width, height: \"20px\" }}\r\n                      >\r\n                        {colItm.label}\r\n\r\n                        <div\r\n                          className=\"resize-handle\"\r\n                          onMouseDown={(e) => startResize(idx, e)}\r\n                          onMouseEnter={(e) => {\r\n                            e.preventDefault();\r\n                            handleMouseEnter(idx);\r\n                          }} // On hover\r\n                          onMouseLeave={(e) => {\r\n                            e.preventDefault();\r\n                            handleMouseLeave();\r\n                          }} // On mouse leave\r\n                        />\r\n                      </div>\r\n                    </th>\r\n                  );\r\n                })}\r\n              </tr>\r\n            </thead>\r\n            <tbody ref={tbodyRef}>\r\n              {data?.map((rowItm: any, rowIdx: number) => {\r\n                return (\r\n                  <tr\r\n                    data-index={rowIdx}\r\n                    key={rowIdx}\r\n                    className={`row ${\r\n                      selectedRow === rowIdx &&\r\n                      selectedRowIndex.includes(rowIdx)\r\n                        ? \"multi-selected-row-item\"\r\n                        : selectedRow === rowIdx\r\n                        ? \"multi-selected-row\"\r\n                        : selectedRowIndex.includes(rowIdx)\r\n                        ? \"multi-selected-item\"\r\n                        : \"\"\r\n                    }`}\r\n                  >\r\n                    {isTableSelectable && (\r\n                      <td\r\n                        style={{\r\n                          position: \"relative\",\r\n                          border: \"none\",\r\n                          cursor: \"pointer\",\r\n                          background: selectedRow === rowIdx ? \"#0076d\" : \"\",\r\n                          padding: 0,\r\n                          margin: 0,\r\n                        }}\r\n                      >\r\n                        <div\r\n                          style={{\r\n                            width: \"18px\",\r\n                            height: \"18px\",\r\n                            position: \"relative\",\r\n                            display: \"flex\",\r\n                            alignItems: \"center\",\r\n                            justifyContent: \"center\",\r\n                          }}\r\n                        >\r\n                          <input\r\n                            style={{\r\n                              cursor: \"pointer\",\r\n                              margin: \"0px !important\",\r\n                              position: \"absolute\",\r\n                            }}\r\n                            readOnly={true}\r\n                            checked={selectedRowIndex.includes(rowIdx)}\r\n                            type=\"checkbox\"\r\n                            onClick={() => {\r\n                              if (rowIsSelectable && rowIsSelectable(rowItm)) {\r\n                                return;\r\n                              }\r\n                              if (!isTableSelectable) {\r\n                                return;\r\n                              }\r\n\r\n                              if (selectedRowIndex.includes(rowIdx)) {\r\n                                setSelectedRowIndex((d: any) =>\r\n                                  d.filter((i: any) => i !== rowIdx)\r\n                                );\r\n                              } else {\r\n                                setSelectedRowIndex((d: any) => [...d, rowIdx]);\r\n                              }\r\n\r\n                              if (getSelectedItem) {\r\n                                getSelectedItem(rowItm, null, rowIdx, null);\r\n                              }\r\n                            }}\r\n                          />\r\n                        </div>\r\n                      </td>\r\n                    )}\r\n\r\n                    {column.map((colItm: any, colIdx: number) => {\r\n                      return (\r\n                        <td\r\n                          className={`td row-${rowIdx} col-${colIdx} `}\r\n                          tabIndex={0}\r\n                          onDoubleClick={() => {\r\n                            if (rowIsSelectable && rowIsSelectable(rowItm)) {\r\n                              return;\r\n                            }\r\n                            if (!isTableSelectable) {\r\n                              return;\r\n                            }\r\n\r\n                            if (selectedRowIndex.includes(rowIdx)) {\r\n                              setSelectedRowIndex((d: any) =>\r\n                                d.filter((i: any) => i !== rowIdx)\r\n                              );\r\n\r\n                              if (getSelectedItem) {\r\n                                getSelectedItem(null, null, rowIdx, null);\r\n                              }\r\n\r\n                              return;\r\n                            } else {\r\n                              setSelectedRowIndex((d: any) => [...d, rowIdx]);\r\n\r\n                              if (getSelectedItem) {\r\n                                getSelectedItem(rowItm, null, rowIdx, null);\r\n                              }\r\n                            }\r\n                          }}\r\n                          onClick={() => {\r\n                            setSelectedRow(rowIdx);\r\n                          }}\r\n                          onKeyDown={(e) => {\r\n                            if (onKeyDown) {\r\n                              onKeyDown(rowItm, rowIdx, e);\r\n                            }\r\n                            if (e.key === \"ArrowUp\") {\r\n                              setSelectedRow((prev: any) => {\r\n                                const index = Math.max(prev - 1, -1);\r\n                                const td = document.querySelector(\r\n                                  `.td.row-${index}`\r\n                                ) as HTMLTableDataCellElement;\r\n                                if (index < 0) {\r\n                                  if (focusElementOnMaxTop) {\r\n                                    focusElementOnMaxTop();\r\n                                  }\r\n                                  return;\r\n                                }\r\n                                if (td) {\r\n                                  td.focus();\r\n                                }\r\n                                return index;\r\n                              });\r\n                            } else if (e.key === \"ArrowDown\") {\r\n                              setSelectedRow((prev: any) => {\r\n                                const index = Math.min(\r\n                                  prev + 1,\r\n                                  data.length - 1\r\n                                );\r\n                                const td = document.querySelector(\r\n                                  `.td.row-${index}`\r\n                                ) as HTMLTableDataCellElement;\r\n                                if (td) {\r\n                                  td.focus();\r\n                                  if (index <= 15) {\r\n                                    parentElementRef.current.style.overflow =\r\n                                      \"hidden\";\r\n                                    setTimeout(() => {\r\n                                      parentElementRef.current.style.overflow =\r\n                                        \"auto\";\r\n                                    }, 100);\r\n                                    return index;\r\n                                  }\r\n                                }\r\n                                return index;\r\n                              });\r\n                            }\r\n                            if (\r\n                              e.code === \"Enter\" ||\r\n                              e.code === \"NumpadEnter\"\r\n                            ) {\r\n                              e.preventDefault();\r\n\r\n                              if (!isTableSelectable) {\r\n                                return;\r\n                              }\r\n\r\n                              if (selectedRowIndex.includes(rowIdx)) {\r\n                                setSelectedRowIndex((d: any) =>\r\n                                  d.filter((i: any) => i !== rowIdx)\r\n                                );\r\n                              } else {\r\n                                setSelectedRowIndex((d: any) => [...d, rowIdx]);\r\n                              }\r\n                              if (getSelectedItem) {\r\n                                getSelectedItem(rowItm, null, rowIdx, null);\r\n                              }\r\n                            }\r\n                          }}\r\n                          key={colIdx}\r\n                          style={{\r\n                            border: \"none\",\r\n                            fontSize: \"12px\",\r\n                            padding: \"0px 5px\",\r\n                            cursor: \"pointer\",\r\n                            height: \"20px\",\r\n                            userSelect: \"none\",\r\n                          }}\r\n                        >\r\n                          {\r\n                            <input\r\n                              readOnly={true}\r\n                              value={rowItm[colIdx]}\r\n                              style={{\r\n                                width: colItm.width,\r\n                                pointerEvents: \"none\",\r\n                                border: \"none\",\r\n                                background: \"transparent\",\r\n                                userSelect: \"none\",\r\n                                height: \"100%\",\r\n                                textAlign:\r\n                                  colItm.type === \"number\" ? \"right\" : \"left\",\r\n                              }}\r\n                            />\r\n                          }\r\n                        </td>\r\n                      );\r\n                    })}\r\n                  </tr>\r\n                );\r\n              })}\r\n            </tbody>\r\n          </table>\r\n          <style>\r\n            {`\r\n             #upward-cutom-table-multi tr td{\r\n               border-right:1px solid #f1f5f9 !important;\r\n             }\r\n          \r\n              #upward-cutom-table-multi tr:nth-child(odd) td {\r\n                  background-color: #ffffff !important;\r\n              }\r\n              #upward-cutom-table-multi tr:nth-child(even) td {\r\n                  background-color: #f5f5f5 !important;\r\n              }\r\n\r\n             #upward-cutom-table-multi tr.multi-selected-row-item td {\r\n                background-color: rgba(84, 84, 82, 0.73) !important;\r\n                border-right:1px solid white !important;\r\n                border-bottom:1px solid white !important;\r\n              }\r\n              #upward-cutom-table-multi tr.multi-selected-row-item td input {\r\n                  color: #ffffff !important;\r\n              }\r\n\r\n            #upward-cutom-table-multi tr.multi-selected-item td {\r\n                background-color: rgba(232, 232, 226, 0.99) !important;\r\n                border-right:1px solid white !important;\r\n                border-bottom:1px solid white !important;\r\n              }\r\n              #upward-cutom-table-multi tr.multi-selected-item td input {\r\n                  color: black !important;\r\n              }\r\n\r\n              #upward-cutom-table-multi tr.multi-selected-row td {\r\n                  background-color: #0076d7 !important;\r\n                  border-right:1px solid white !important;\r\n                  border-bottom:1px solid white !important;\r\n              }\r\n              #upward-cutom-table-multi tr.multi-selected-row td input {\r\n                  color: #ffffff !important;\r\n              }\r\n                  .resize-handle {\r\n                    position: absolute;\r\n                    right: 0;\r\n                    top: 0;\r\n                    width: 5px;\r\n                    height: 100%;\r\n                    cursor: col-resize;\r\n                    background-color: transparent;\r\n                  }\r\n\r\n                  .resize-handle:hover {\r\n                    background-color: #101111;\r\n                  }\r\n\r\n                  .highlight-column {\r\n                    border-right: 2px solid #007bff !important;\r\n                  }\r\n  \r\n  \r\n              `}\r\n          </style>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n);\r\n\r\nlet dataCache: any = [];\r\nlet searchInputValueCache = \"\";\r\nexport const useUpwardTableModalSearch = ({\r\n  column,\r\n  query,\r\n  getSelectedItem,\r\n  onKeyDown,\r\n  customWidth,\r\n  onClose,\r\n}: any) => {\r\n  const [show, setShow] = useState(false);\r\n  const searchInputRef = useRef<HTMLInputElement>(null);\r\n\r\n  function openModal() {\r\n    const body = document.body;\r\n    const div = document.createElement(\"div\");\r\n    div.id = \"modal-portal\";\r\n\r\n    if (document.getElementById(\"modal-portal\"))\r\n      body.removeChild(document.getElementById(\"modal-portal\") as HTMLElement);\r\n\r\n    body.insertBefore(div, document.getElementById(\"root\"));\r\n    wait(100).then(() => {\r\n      div.innerHTML = ReactDOMServer.renderToString(<UpwardTableModalSearch />);\r\n    });\r\n\r\n    setShow(true);\r\n    setTimeout(() => {\r\n      if (searchInputRef.current) {\r\n        const event = new KeyboardEvent(\"keydown\", {\r\n          code: \"Enter\",\r\n          bubbles: true,\r\n        });\r\n        searchInputRef.current.focus(); // Ensure the element has focus\r\n        searchInputRef.current.dispatchEvent(event); // Dispatch the native event\r\n        setTimeout(() => {\r\n          searchInputRef.current?.focus();\r\n        }, 100);\r\n      }\r\n    }, 100);\r\n  }\r\n  function closeModal(muteOnClose = true) {\r\n    if (onClose && muteOnClose) {\r\n      onClose();\r\n    }\r\n    setShow(false);\r\n    dataCache = [];\r\n  }\r\n  const UpwardTableModalSearch = () => {\r\n    const modalRef = useRef<HTMLDivElement>(null);\r\n    const isMoving = useRef(false);\r\n    const offset = useRef({ x: 0, y: 0 });\r\n\r\n    const tableRef = useRef<any>(null);\r\n    const [blick, setBlick] = useState(false);\r\n    const [data, setData] = useState([]);\r\n    const { executeQueryToClient } = useExecuteQueryFromClient();\r\n\r\n    useEffect(() => {\r\n      if (dataCache.length > 0) {\r\n        if (searchInputRef.current) {\r\n          searchInputRef.current.value = searchInputValueCache;\r\n        }\r\n        setData(dataCache);\r\n      }\r\n    }, [setData]);\r\n\r\n    useEffect(() => {\r\n      if (data.length > 0) {\r\n        dataCache = data;\r\n        tableRef.current?.setDataFormated(data);\r\n      }\r\n    }, [data]);\r\n\r\n    const handleMouseDown = (e: any) => {\r\n      if (!modalRef.current) return;\r\n\r\n      isMoving.current = true;\r\n      offset.current = {\r\n        x: e.clientX - modalRef.current.offsetLeft,\r\n        y: e.clientY - modalRef.current.offsetTop,\r\n      };\r\n\r\n      document.addEventListener(\"mousemove\", handleMouseMove);\r\n      document.addEventListener(\"mouseup\", handleMouseUp);\r\n    };\r\n\r\n    // Move modal with mouse\r\n    const handleMouseMove = (e: any) => {\r\n      if (!isMoving.current || !modalRef.current) return;\r\n\r\n      modalRef.current.style.left = `${e.clientX - offset.current.x}px`;\r\n      modalRef.current.style.top = `${e.clientY - offset.current.y}px`;\r\n    };\r\n\r\n    // Stop moving when releasing mouse\r\n    const handleMouseUp = () => {\r\n      isMoving.current = false;\r\n      document.removeEventListener(\"mousemove\", handleMouseMove);\r\n      document.removeEventListener(\"mouseup\", handleMouseUp);\r\n    };\r\n\r\n    return show ? (\r\n      <div id=\"modal-inject\">\r\n        <div\r\n          style={{\r\n            position: \"fixed\",\r\n            top: 0,\r\n            bottom: 0,\r\n            left: 0,\r\n            right: 0,\r\n            background: \"transparent\",\r\n            zIndex: \"88\",\r\n          }}\r\n          onClick={() => {\r\n            setBlick(true);\r\n            setTimeout(() => {\r\n              setBlick(false);\r\n            }, 250);\r\n          }}\r\n        ></div>\r\n\r\n        <div\r\n        ref={modalRef}\r\n          style={{\r\n            background: \"#F1F1F1\",\r\n            width: customWidth\r\n              ? customWidth(blick, column)\r\n              : blick\r\n              ? \"451px\"\r\n              : \"450px\",\r\n            height: blick ? \"501px\" : \"500px\",\r\n            position: \"absolute\",\r\n            zIndex: 111111,\r\n            top: \"50%\",\r\n            left: \"50%\",\r\n            transform: \"translate(-50%,-50%)\",\r\n            boxShadow: \"3px 6px 32px -7px rgba(0,0,0,0.75)\",\r\n            boxSizing: \"border-box\",\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n          }}\r\n        >\r\n          <div\r\n            style={{\r\n              height: \"22px\",\r\n              background: \"white\",\r\n              display: \"flex\",\r\n              justifyContent: \"space-between\",\r\n              padding: \"5px\",\r\n              position: \"relative\",\r\n              alignItems: \"center\",\r\n              cursor: \"grab\",\r\n\r\n            }}\r\n            onMouseDown={handleMouseDown}\r\n\r\n          >\r\n            <span style={{ fontSize: \"13px\", fontWeight: \"bold\" }}>Search</span>\r\n            <button\r\n              className=\"btn-check-exit-modal\"\r\n              style={{\r\n                padding: \"0 5px\",\r\n                borderRadius: \"0px\",\r\n                background: \"white\",\r\n                color: \"black\",\r\n                height: \"22px\",\r\n                position: \"absolute\",\r\n                top: 0,\r\n                right: 0,\r\n              }}\r\n              onClick={() => {\r\n                closeModal();\r\n              }}\r\n            >\r\n              <CloseIcon sx={{ fontSize: \"22px\" }} />\r\n            </button>\r\n          </div>\r\n          <div\r\n            style={{\r\n              padding: \"5px\",\r\n            }}\r\n          >\r\n            <TextInput\r\n              containerStyle={{\r\n                width: \"100%\",\r\n              }}\r\n              label={{\r\n                title: \"Search : \",\r\n                style: {\r\n                  fontSize: \"12px\",\r\n                  fontWeight: \"bold\",\r\n                  width: \"70px\",\r\n                  display: \"none\",\r\n                },\r\n              }}\r\n              input={{\r\n                type: \"text\",\r\n                style: { width: \"100%\" },\r\n                onKeyDown: async (e) => {\r\n                  if (e.code === \"NumpadEnter\" || e.code === \"Enter\") {\r\n                    searchInputValueCache = e.currentTarget.value;\r\n                    const searchQuery = query(e.currentTarget.value);\r\n                    console.log(searchQuery);\r\n                    const dd = await executeQueryToClient(searchQuery);\r\n                    setData(dd.data.data);\r\n                  }\r\n\r\n                  if (e.code === \"ArrowDown\") {\r\n                    const td = document.querySelector(\r\n                      `.td.row-0`\r\n                    ) as HTMLTableDataCellElement;\r\n                    if (td) {\r\n                      const parentElement = tableRef.current.getParentElement();\r\n\r\n                      td.focus({\r\n                        preventScroll: true,\r\n                      });\r\n                      parentElement.style.overflow = \"hidden\";\r\n                      wait(100).then(() => {\r\n                        parentElement.style.overflow = \"auto\";\r\n                      });\r\n                    }\r\n                    tableRef.current?._setSelectedRow(0);\r\n                  }\r\n                },\r\n              }}\r\n              inputRef={searchInputRef}\r\n              icon={<SearchIcon sx={{ fontSize: \"18px\" }} />}\r\n              onIconClick={async (e) => {\r\n                e.preventDefault();\r\n                if (searchInputRef.current)\r\n                  searchInputValueCache = searchInputRef.current.value;\r\n                const searchQuery = query(searchInputRef.current?.value);\r\n                const dd = await executeQueryToClient(searchQuery);\r\n                setData(dd.data.data);\r\n              }}\r\n            />\r\n          </div>\r\n          <div\r\n            style={{\r\n              flex: 1,\r\n            }}\r\n          >\r\n            <DataGridViewReact\r\n              columns={column}\r\n              height={\"100%\"}\r\n              ref={tableRef}\r\n              getSelectedItem={getSelectedItem}\r\n              onKeyDown={onKeyDown}\r\n              focusElementOnMaxTop={() => {\r\n                searchInputRef.current?.focus();\r\n              }}\r\n            />\r\n          </div>\r\n          <div style={{ padding: \"0 10px\" }}>\r\n            <span style={{ fontSize: \"13px\", fontWeight: \"bold\" }}>\r\n              Records: Top {data.length}\r\n            </span>\r\n          </div>\r\n          <style>\r\n            {`\r\n                                    .btn-check-exit-modal:hover{\r\n                                        background:red !important;\r\n                                        color:white !important;\r\n                                    }\r\n                                `}\r\n          </style>\r\n        </div>\r\n      </div>\r\n    ) : (\r\n      <></>\r\n    );\r\n  };\r\n\r\n  return {\r\n    openModal,\r\n    closeModal,\r\n    UpwardTableModalSearch,\r\n  };\r\n};\r\n\r\nlet _dataCache: any = [];\r\nlet _searchInputValueCache = \"\";\r\nexport const useUpwardTableModalSearchSafeMode = ({\r\n  column,\r\n  link,\r\n  getSelectedItem,\r\n  onKeyDown,\r\n  customWidth,\r\n  onClose,\r\n  size = \"small\",\r\n}: any) => {\r\n  const [show, setShow] = useState(false);\r\n  const searchInputRef = useRef<HTMLInputElement>(null);\r\n\r\n  function openModal(search: string = \"\") {\r\n    const body = document.body;\r\n    const div = document.createElement(\"div\");\r\n    div.id = \"modal-portal\";\r\n\r\n    if (document.getElementById(\"modal-portal\"))\r\n      body.removeChild(document.getElementById(\"modal-portal\") as HTMLElement);\r\n    body.insertBefore(div, body.firstChild);\r\n\r\n    setShow(true);\r\n    wait(100).then(() => {\r\n      if (searchInputRef.current) {\r\n        searchInputRef.current.value = search;\r\n        const event = new KeyboardEvent(\"keydown\", {\r\n          code: \"Enter\",\r\n          bubbles: true,\r\n        });\r\n        searchInputRef.current.focus(); // Ensure the element has focus\r\n        searchInputRef.current.dispatchEvent(event); // Dispatch the native event\r\n        wait(100).then(() => {\r\n          searchInputRef.current?.focus();\r\n        });\r\n      }\r\n    });\r\n  }\r\n  function closeModal(muteOnClose = true) {\r\n    if (onClose && muteOnClose) {\r\n      onClose();\r\n    }\r\n    setShow(false);\r\n    _dataCache = [];\r\n  }\r\n  const UpwardTableModalSearch = () => {\r\n    const modalRef = useRef<HTMLDivElement>(null);\r\n    const isMoving = useRef(false);\r\n    const offset = useRef({ x: 0, y: 0 });\r\n\r\n    const { user, myAxios } = useContext(AuthContext);\r\n    const tableRef = useRef<any>(null);\r\n    const [blick, setBlick] = useState(false);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [data, setData] = useState([]);\r\n\r\n    function mutate(variable: any) {\r\n      setIsLoading(true);\r\n      myAxios\r\n        .post(link, variable, {\r\n          headers: {\r\n            Authorization: `Bearer ${user?.accessToken}`,\r\n          },\r\n        })\r\n        .then((response) => {\r\n          setData(response.data?.data);\r\n          setIsLoading(false);\r\n        })\r\n        .catch((err) => {\r\n          setIsLoading(false);\r\n          console.log(err);\r\n        })\r\n        .finally(() => {\r\n          setIsLoading(false);\r\n        });\r\n    }\r\n\r\n    useEffect(() => {\r\n      if (_dataCache.length > 0) {\r\n        if (searchInputRef.current) {\r\n          searchInputRef.current.value = _searchInputValueCache;\r\n        }\r\n        setData(_dataCache);\r\n      }\r\n    }, [setData]);\r\n\r\n    useEffect(() => {\r\n      if (data.length > 0) {\r\n        _dataCache = data;\r\n      }\r\n      tableRef.current?.setDataFormated(data);\r\n    }, [data]);\r\n\r\n    function customWidth(blick: boolean) {\r\n      if (size === \"large\") {\r\n        return blick ? \"851px\" : \"850px\";\r\n      } else if (size === \"medium\") {\r\n        return blick ? \"651px\" : \"650px\";\r\n      } else {\r\n        return blick ? \"451px\" : \"450px\";\r\n      }\r\n    }\r\n\r\n    const handleMouseDown = (e: any) => {\r\n      if (!modalRef.current) return;\r\n\r\n      isMoving.current = true;\r\n      offset.current = {\r\n        x: e.clientX - modalRef.current.offsetLeft,\r\n        y: e.clientY - modalRef.current.offsetTop,\r\n      };\r\n\r\n      document.addEventListener(\"mousemove\", handleMouseMove);\r\n      document.addEventListener(\"mouseup\", handleMouseUp);\r\n    };\r\n\r\n    // Move modal with mouse\r\n    const handleMouseMove = (e: any) => {\r\n      if (!isMoving.current || !modalRef.current) return;\r\n\r\n      modalRef.current.style.left = `${e.clientX - offset.current.x}px`;\r\n      modalRef.current.style.top = `${e.clientY - offset.current.y}px`;\r\n    };\r\n\r\n    // Stop moving when releasing mouse\r\n    const handleMouseUp = () => {\r\n      isMoving.current = false;\r\n      document.removeEventListener(\"mousemove\", handleMouseMove);\r\n      document.removeEventListener(\"mouseup\", handleMouseUp);\r\n    };\r\n\r\n    return show ? (\r\n      ReactDOM.createPortal(\r\n        <div id=\"modal-inject\">\r\n          <div\r\n            style={{\r\n              position: \"fixed\",\r\n              top: 0,\r\n              bottom: 0,\r\n              left: 0,\r\n              right: 0,\r\n              background: \"transparent\",\r\n              zIndex: \"88\",\r\n            }}\r\n            onClick={() => {\r\n              setBlick(true);\r\n              setTimeout(() => {\r\n                setBlick(false);\r\n              }, 250);\r\n            }}\r\n          ></div>\r\n\r\n          <div\r\n            ref={modalRef}\r\n            style={{\r\n              background: \"#F1F1F1\",\r\n              width: customWidth(blick),\r\n              height: blick ? \"501px\" : \"500px\",\r\n              position: \"absolute\",\r\n              zIndex: 111111,\r\n              top: \"50%\",\r\n              left: \"50%\",\r\n              transform: \"translate(-50%,-50%)\",\r\n              boxShadow: \"3px 6px 32px -7px rgba(0,0,0,0.75)\",\r\n              boxSizing: \"border-box\",\r\n              display: \"flex\",\r\n              flexDirection: \"column\",\r\n            }}\r\n          >\r\n            {isLoading && <Loading />}\r\n            <div\r\n              style={{\r\n                height: \"22px\",\r\n                background: \"white\",\r\n                display: \"flex\",\r\n                justifyContent: \"space-between\",\r\n                padding: \"5px\",\r\n                position: \"relative\",\r\n                alignItems: \"center\",\r\n                cursor: \"grab\",\r\n              }}\r\n              onMouseDown={handleMouseDown}\r\n            >\r\n              <span style={{ fontSize: \"13px\", fontWeight: \"bold\" }}>\r\n                Search\r\n              </span>\r\n              <button\r\n                className=\"btn-check-exit-modal\"\r\n                style={{\r\n                  padding: \"0 5px\",\r\n                  borderRadius: \"0px\",\r\n                  background: \"white\",\r\n                  color: \"black\",\r\n                  height: \"22px\",\r\n                  position: \"absolute\",\r\n                  top: 0,\r\n                  right: 0,\r\n                }}\r\n                onClick={() => {\r\n                  closeModal();\r\n                }}\r\n              >\r\n                <CloseIcon sx={{ fontSize: \"22px\" }} />\r\n              </button>\r\n            </div>\r\n            <div\r\n              style={{\r\n                padding: \"5px\",\r\n              }}\r\n            >\r\n              <TextInput\r\n                containerStyle={{\r\n                  width: \"100%\",\r\n                }}\r\n                label={{\r\n                  title: \"Search : \",\r\n                  style: {\r\n                    fontSize: \"12px\",\r\n                    fontWeight: \"bold\",\r\n                    width: \"70px\",\r\n                    display: \"none\",\r\n                  },\r\n                }}\r\n                input={{\r\n                  type: \"text\",\r\n                  style: { width: \"100%\" },\r\n                  onKeyDown: async (e) => {\r\n                    if (e.code === \"NumpadEnter\" || e.code === \"Enter\") {\r\n                      _searchInputValueCache = e.currentTarget.value;\r\n                      mutate({ search: e.currentTarget.value });\r\n                    }\r\n\r\n                    if (e.code === \"ArrowDown\") {\r\n                      const td = document.querySelector(\r\n                        `.td.row-0`\r\n                      ) as HTMLTableDataCellElement;\r\n                      if (td) {\r\n                        const parentElement =\r\n                          tableRef.current.getParentElement();\r\n\r\n                        td.focus({\r\n                          preventScroll: true,\r\n                        });\r\n                        parentElement.style.overflow = \"hidden\";\r\n                        wait(100).then(() => {\r\n                          parentElement.style.overflow = \"auto\";\r\n                        });\r\n                      }\r\n                      tableRef.current?._setSelectedRow(0);\r\n                    }\r\n                  },\r\n                  onInput: (e) => {\r\n                    if (e.currentTarget.value === \"\") {\r\n                      mutate({ search: \"\" });\r\n                    }\r\n                  },\r\n                }}\r\n                inputRef={searchInputRef}\r\n                icon={<SearchIcon sx={{ fontSize: \"18px\" }} />}\r\n                onIconClick={async (e) => {\r\n                  e.preventDefault();\r\n                  if (searchInputRef.current)\r\n                    _searchInputValueCache = searchInputRef.current.value;\r\n\r\n                  mutate({ search: searchInputRef.current?.value });\r\n                }}\r\n              />\r\n            </div>\r\n            <div\r\n              style={{\r\n                flex: 1,\r\n              }}\r\n            >\r\n              <DataGridViewReact\r\n                columns={column}\r\n                height={\"100%\"}\r\n                ref={tableRef}\r\n                getSelectedItem={getSelectedItem}\r\n                onKeyDown={onKeyDown}\r\n                focusElementOnMaxTop={() => {\r\n                  searchInputRef.current?.focus();\r\n                }}\r\n              />\r\n            </div>\r\n            <div style={{ padding: \"0 10px\" }}>\r\n              <span style={{ fontSize: \"13px\", fontWeight: \"bold\" }}>\r\n                Records: Top {data.length}\r\n              </span>\r\n            </div>\r\n            <style>\r\n              {`\r\n                                    .btn-check-exit-modal:hover{\r\n                                        background:red !important;\r\n                                        color:white !important;\r\n                                    }\r\n                                `}\r\n            </style>\r\n          </div>\r\n        </div>,\r\n        document.getElementById(\"modal-portal\") as HTMLElement\r\n      )\r\n    ) : (\r\n      <></>\r\n    );\r\n  };\r\n\r\n  return {\r\n    openModal,\r\n    closeModal,\r\n    UpwardTableModalSearch,\r\n    searchInputRef,\r\n  };\r\n};\r\n","export function isValidDate(dateString:string) {\r\n    // Ensure the date is in the correct format: YYYY-MM-DD\r\n     const regex = /^\\d{4}-\\d{2}-\\d{2}$/;\r\n     if (!regex.test(dateString)) {\r\n         return false;\r\n     }\r\n \r\n     // Extract the year, month, and day\r\n     const [year, month, day] = dateString.split(\"-\");\r\n \r\n     // Ensure year is a valid four-digit number and within a reasonable range\r\n     const parsedYear = parseInt(year);\r\n     if (parsedYear < 1000 || parsedYear > 2040) {\r\n         return false;\r\n     }\r\n \r\n     const date = new Date(dateString);\r\n     // Ensure the created date matches the parts we input, adjusting for overflow\r\n     return date.getFullYear() === parsedYear &&\r\n            date.getMonth() + 1 === parseInt(month) &&\r\n            date.getDate() === parseInt(day);\r\n }","import {\n  HtmlHTMLAttributes,\n  InputHTMLAttributes,\n  useId,\n  ReactNode,\n  useState,\n  LegacyRef,\n  TextareaHTMLAttributes,\n  CSSProperties,\n  forwardRef,\n  useImperativeHandle,\n} from \"react\";\nimport \"../style/design.css\";\nimport { isValidDate } from \"../lib/validateDate\";\nimport { format } from \"date-fns\";\nimport { wait } from \"../lib/wait\";\n\ninterface TextInputProps {\n  input: InputHTMLAttributes<HTMLInputElement>;\n  label: HtmlHTMLAttributes<HTMLLabelElement>;\n  inputRef?: React.RefObject<HTMLInputElement>;\n  icon?: ReactNode; // New prop for the icon\n  iconPosition?: \"start\" | \"end\"; // New prop to choose icon position\n  onIconClick?: React.MouseEventHandler<HTMLDivElement> | undefined;\n  disableIcon?: boolean;\n  containerStyle?: CSSProperties;\n}\n\ninterface TextAreaPrps {\n  textarea: TextareaHTMLAttributes<HTMLTextAreaElement>;\n  label: HtmlHTMLAttributes<HTMLLabelElement>;\n  _inputRef: LegacyRef<HTMLTextAreaElement>;\n  icon?: ReactNode; // New prop for the icon\n  iconPosition?: \"start\" | \"end\"; // New prop to choose icon position\n  onIconClick?: React.MouseEventHandler<HTMLDivElement> | undefined;\n  disableIcon?: boolean;\n  containerStyle?: CSSProperties;\n}\n\ninterface TextFormatedInputProps extends TextInputProps {\n  onChange?: React.ChangeEventHandler<HTMLInputElement> | undefined;\n  onBlur?: React.ChangeEventHandler<HTMLInputElement> | undefined;\n}\nexport function TextFormatedInput({\n  input,\n  label,\n  inputRef,\n  icon,\n  iconPosition = \"end\", // Default position is 'end'\n  disableIcon = false,\n  onIconClick = (e) => {},\n  onChange = (e) => {},\n  onBlur = (e) => {},\n  containerStyle,\n}: TextFormatedInputProps) {\n  // const [inputValue, setInputValue] = useState('');\n  const id = useId();\n\n  // Helper function to format numbers with commas\n  const formatNumber = (value: string) => {\n    if (!value) return value;\n\n    // Split the value into integer and decimal parts\n    const parts = value.split(\".\");\n\n    // Add commas to the integer part only\n    parts[0] = parts[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n\n    // Join the integer and decimal parts if decimal exists\n    return parts.join(\".\");\n  };\n\n  // Helper function to remove commas\n  const unformatNumber = (value: string) => {\n    return value.replace(/,/g, \"\");\n  };\n\n  // Function to ensure two decimal places\n  const ensureTwoDecimals = (value: string) => {\n    // If the value has no decimal part, append '.00'\n    if (!value.includes(\".\")) {\n      if (value === \"\") {\n        return \"0.00\";\n      } else {\n        return value + \".00\";\n      }\n    }\n\n    // If the value has one decimal place, append '0'\n    const parts = value.split(\".\");\n    if (parts[1].length === 1) {\n      return value + \"0\";\n    }\n\n    // If it already has two decimal places, return as is\n    return value;\n  };\n\n  const handleChange = (e: any) => {\n    let value = e.target.value;\n\n    // Remove commas for processing\n    value = unformatNumber(value);\n\n    // Allow only numbers, commas, and one decimal point\n    const regex = /^-?\\d+(,\\d{3})*(\\.\\d*)?$/;\n\n    // Remove commas for processing\n    value = unformatNumber(value);\n\n    // Check if the value is valid\n    if (value === \"\" || regex.test(value)) {\n      // Set the formatted value back in the input field\n      //setInputValue(formatNumber(value));\n      e.target.value = formatNumber(value);\n    } else {\n      const numbers = value.match(/\\d+/g);\n      if (numbers) {\n        const newV = numbers.join(\"\");\n        e.target.value = formatNumber(newV);\n      } else {\n        e.target.value = \"0\";\n      }\n    }\n  };\n\n  const handleBlur = (e: any) => {\n    let value = unformatNumber(e.target.value);\n\n    // Ensure the value has two decimal places\n    value = ensureTwoDecimals(value);\n\n    // Set the value with commas and .00 (if needed)\n    // setInputValue(formatNumber(value));\n    e.target.value = formatNumber(value);\n  };\n\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        alignItems: \"center\",\n        position: \"relative\",\n        ...containerStyle, // Enable absolute positioning for icon\n      }}\n    >\n      <label {...label} htmlFor={id}>\n        {label.title}\n      </label>\n      {icon && iconPosition === \"start\" && (\n        <div style={{ position: \"absolute\", left: \"8px\", zIndex: 1 }}>\n          {icon}\n        </div>\n      )}\n      <input\n        ref={inputRef}\n        id={id}\n        {...input}\n        type=\"text\"\n        style={{\n          height: \"100%\",\n          textAlign: \"right\",\n          ...input.style,\n        }}\n        onChange={(e) => {\n          handleChange(e);\n          onChange(e);\n        }}\n        onBlur={(e) => {\n          handleBlur(e);\n          onBlur(e);\n        }} // Add .00 on blur\n        onFocus={(e)=>{\n          e.currentTarget.select()\n          if(input && input.onFocus)\n          input.onFocus(e)\n        }}\n      />\n      {icon && iconPosition === \"end\" && (\n        <div\n          onClick={onIconClick}\n          style={{\n            position: \"absolute\",\n            right: \"2px\",\n            top: \"50%\",\n            transform: \"translateY(-50%)\",\n            zIndex: 1,\n            cursor: disableIcon ? \"none\" : \"pointer\",\n            display: \"flex\",\n            alignItems: \"center\",\n            justifyContent: \"center\",\n            background: \"white\",\n            pointerEvents: disableIcon ? \"none\" : \"auto\",\n          }}\n        >\n          {icon}\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport function TextInput({\n  input,\n  label,\n  inputRef,\n  icon,\n  iconPosition = \"end\", // Default position is 'end'\n  disableIcon = false,\n  containerStyle,\n  onIconClick = (e) => {},\n}: TextInputProps) {\n  const id = useId();\n\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        alignItems: \"center\",\n        position: \"relative\",\n        ...containerStyle,\n      }}\n    >\n      <label {...label} htmlFor={id}>\n        {label.title}\n      </label>\n      {icon && iconPosition === \"start\" && (\n        <div style={{ position: \"absolute\", left: \"8px\", zIndex: 1 }}>\n          {icon}\n        </div>\n      )}\n      <input\n        ref={inputRef}\n        id={id}\n        {...input}\n        onBlur={(e) => {\n          if (input.type === \"month\") {\n            if(!isValidDate(`${e.currentTarget.value}-01`)){\n              alert(`Invalid ${label.title?.replace(/:/g, \"\").trim()}!, Resetting date.`)\n              e.currentTarget.value = format(new Date(),'yyyy-MM')\n              wait(100).then(()=>{\n                inputRef?.current?.focus()\n              })\n              return\n            }\n          }\n          if (input.type === \"date\") {\n            if(!isValidDate(e.currentTarget.value)){\n                 alert(`Invalid ${label.title?.replace(/:/g, \"\").trim()}!, Resetting date.`)\n                  e.currentTarget.value = format(new Date(),'yyyy-MM-dd')\n                  wait(100).then(()=>{\n                    inputRef?.current?.focus()\n                  })\n                  return\n            }\n          }\n          if (input && input.onBlur) input.onBlur(e);\n        }}\n        style={{\n          height: \"100%\",\n          ...input.style,\n        }}\n      />\n      {icon && iconPosition === \"end\" && (\n        <div\n          onClick={onIconClick}\n          style={{\n            position: \"absolute\",\n            right: \"2px\",\n            top: \"50%\",\n            transform: \"translateY(-50%)\",\n            zIndex: 1,\n            cursor: disableIcon ? \"none\" : \"pointer\",\n            display: \"flex\",\n            alignItems: \"center\",\n            justifyContent: \"center\",\n            background: \"white\",\n            pointerEvents: disableIcon ? \"none\" : \"auto\",\n          }}\n        >\n          {icon}\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport function TextAreaInput({\n  textarea,\n  label,\n  _inputRef,\n  icon,\n  iconPosition = \"end\", // Default position is 'end'\n  disableIcon = false,\n  onIconClick = (e) => {},\n  containerStyle,\n}: TextAreaPrps) {\n  const id = useId();\n\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        alignItems: \"center\",\n        position: \"relative\",\n        ...containerStyle, // Enable absolute positioning for icon\n      }}\n    >\n      <label {...label} htmlFor={id}>\n        {label.title}\n      </label>\n      {icon && iconPosition === \"start\" && (\n        <div style={{ position: \"absolute\", left: \"8px\", zIndex: 1 }}>\n          {icon}\n        </div>\n      )}\n      <textarea\n        ref={_inputRef}\n        id={id}\n        {...textarea}\n        style={{\n          height: \"100%\",\n          ...textarea.style,\n        }}\n      />\n      {icon && iconPosition === \"end\" && (\n        <div\n          onClick={onIconClick}\n          style={{\n            position: \"absolute\",\n            right: \"2px\",\n            top: \"50%\",\n            transform: \"translateY(-50%)\",\n            zIndex: 1,\n            cursor: disableIcon ? \"none\" : \"pointer\",\n            display: \"flex\",\n            alignItems: \"center\",\n            justifyContent: \"center\",\n            background: \"white\",\n            pointerEvents: disableIcon ? \"none\" : \"auto\",\n          }}\n        >\n          {icon}\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport const SelectInput = forwardRef(\n  (\n    {\n      select,\n      label,\n      selectRef,\n      datasource = [],\n      values = \"\",\n      display = \"\",\n      containerStyle,\n    }: {\n      selectRef?: React.RefObject<HTMLSelectElement>;\n      labelRef?: React.RefObject<HTMLLabelElement>;\n      select: InputHTMLAttributes<HTMLSelectElement>;\n      label: HtmlHTMLAttributes<HTMLLabelElement>;\n      datasource: Array<any>;\n      values: string;\n      display: string;\n      containerStyle?: React.CSSProperties | undefined;\n    },\n    ref: any\n  ) => {\n    const [_datasource, _setDataSource] = useState(datasource);\n    const id = useId();\n\n    useImperativeHandle(ref, () => ({\n      setDataSource: (_dataSource: any) => {\n        _setDataSource(_dataSource);\n      },\n      getDataSource: () => {\n        return _datasource;\n      },\n    }));\n\n    return (\n      <div\n        style={{\n          display: \"flex\",\n          height: \"18px\",\n          alignItems: \"center\",\n          ...containerStyle,\n        }}\n      >\n        <label {...label} htmlFor={id}>\n          {label.title}\n        </label>\n        <select\n          {...select}\n          ref={selectRef}\n          className={`select ${select.className}`}\n          style={{\n            height: \"18px\",\n            ...select.style,\n          }}\n        >\n          {_datasource.map((itm, idx) => {\n            return (\n              <option key={idx} value={itm[values]}>\n                {itm[display]}\n              </option>\n            );\n          })}\n        </select>\n      </div>\n    );\n  }\n);\n\nexport function ButtonField({\n  buttonRetRef,\n  button,\n  tooltipText = \"\",\n  children,\n  disabled = false,\n}: {\n  buttonRetRef?: React.RefObject<HTMLButtonElement>;\n  button: HtmlHTMLAttributes<HTMLButtonElement>;\n  tooltipText: string;\n  children: React.ReactNode;\n  disabled?: boolean;\n}) {\n  return (\n    <div className=\"tooltip\">\n      <button\n        disabled={disabled}\n        {...button}\n        ref={buttonRetRef}\n        style={{\n          ...button.style,\n          background: !disabled ? \"transparent\" : \"#f1f1f1\",\n        }}\n        className=\"tooltip-button\"\n      >\n        {children}\n      </button>\n      {!disabled && <span className=\"tooltip-text\">{tooltipText}</span>}\n    </div>\n  );\n}\n","import { useContext } from \"react\";\r\nimport { AuthContext } from \"../components/AuthContext\"\r\n\r\n\r\n\r\nexport default function useExecuteQueryFromClient() {\r\n    const { myAxios, user } = useContext(AuthContext);\r\n\r\n\r\n    async function executeQueryToClient(query: string) {\r\n        return await myAxios.post('/execute-query', { query }, {\r\n            headers: {\r\n                Authorization: `Bearer ${user?.accessToken}`\r\n            }\r\n        })\r\n    }\r\n\r\n    return {\r\n        executeQueryToClient\r\n    }\r\n}\r\n\r\n"],"names":["DataGridViewReact","forwardRef","_ref","ref","columns","_ref$height","rows","height","getSelectedItem","onKeyDown","_ref$disbaleTable","disbaleTable","_ref$isTableSelectabl","isTableSelectable","_isTableSelectable","containerStyle","focusElementOnMaxTop","_ref$ActionComponent","ActionComponent","_jsx","_Fragment","_ref$showSequence","showSequence","parentElementRef","useRef","actionModalRef","checkboxRef","tbodyRef","_useState","useState","_useState2","_slicedToArray","data","setData","_useState3","_useState4","column","setColumn","_useState5","_useState6","selectedRow","setSelectedRow","_useState7","_useState8","selectedRowIndex","setSelectedRowIndex","totalRowWidth","reduce","a","b","width","_useState9","_useState10","setIsTableSelectable","_useState11","filter","itm","hide","_useState12","columnHeader","setColumnHeader","_useState13","_useState14","hoveredColumn","setHoveredColumn","useEffect","length","useImperativeHandle","checkNoIsExist","checkNo","some","subArray","getData","_toConsumableArray","newData","getColumns","resetTable","getSelectedRow","value","resetCheckBox","handleResetCheckBox","_setSelectedRow","param","setDataFormated","map","col","key","getDataFormatted","Check_No","Check_Date","Check_Amnt","BankName","Branch","Check_Remarks","Deposit_Slip","DateDeposit","OR_No","BankCode","getElementBody","current","getParentElement","forEach","checkbox","idx","checked","handleResetCheckBoxByIndex","_idx","handleRightClick","event","preventDefault","showModal","_jsxs","children","ActionModal","Component","closeModal","closeDelay","rowItm","style","_objectSpread","overflow","position","pointerEvents","border","boxShadow","background","concat","id","borderCollapse","top","zIndex","borderRight","fontSize","padding","textAlign","colItm","type","className","label","onMouseDown","e","index","stopPropagation","startX","clientX","startWidth","doDrag","moveEvent","newWidth","updatedColumns","document","addEventListener","stopDrag","removeEventListener","startResize","onMouseEnter","onMouseLeave","rowIdx","RowComponent","_ref2","cursor","margin","display","alignItems","justifyContent","CheckBoxSelection","readOnly","defaultValue","String","padStart","userSelect","colIdx","tabIndex","onDoubleClick","onClick","prev","Math","max","td","querySelector","focus","min","setTimeout","code","onContextMenu","_ref3","el","currentTarget","_ref4","handleOnSave","handleOnClose","hasSelectedRow","_useState15","_useState16","setShowModal","_useState17","_useState18","handleDelayClose","setHandleDelayClose","_useState19","_useState20","blick","setBlick","closeDelayRef","clsoeModal","window","bottom","left","right","transform","flexDirection","opacity","transition","fontWeight","borderRadius","color","CloseIcon","sx","DataGridViewMultiSelectionReact","_ref5","_ref5$height","_ref5$disbaleTable","_ref5$isTableSelectab","onCheckAll","onUnCheckAll","rowIsSelectable","_useState21","_useState22","_useState23","_useState24","_useState25","_useState26","_useState27","_useState28","_useState29","_useState30","_useState31","_useState32","_useState33","_useState34","getSelectedRowsData","item","undefined","includes","d","i","dataCache","searchInputValueCache","useUpwardTableModalSearch","_ref6","query","customWidth","onClose","_useState35","_useState36","show","setShow","searchInputRef","arguments","UpwardTableModalSearch","_onKeyDown3","_ref7","modalRef","isMoving","offset","x","y","tableRef","_useState37","_useState38","_useState39","_useState40","executeQueryToClient","useExecuteQueryFromClient","_tableRef$current","handleMouseMove","clientY","handleMouseUp","boxSizing","offsetLeft","offsetTop","TextInput","title","input","_x","_asyncToGenerator","_regeneratorRuntime","mark","_callee","searchQuery","dd","_tableRef$current2","parentElement","wrap","_context","next","console","log","sent","preventScroll","wait","then","stop","apply","inputRef","icon","SearchIcon","onIconClick","_x2","_callee2","_searchInputRef$curre2","_context2","flex","_searchInputRef$curre3","openModal","body","div","createElement","getElementById","removeChild","insertBefore","innerHTML","ReactDOMServer","KeyboardEvent","bubbles","dispatchEvent","_searchInputRef$curre","_dataCache","_searchInputValueCache","useUpwardTableModalSearchSafeMode","_ref8","link","_ref8$size","size","_useState41","_useState42","search","firstChild","_searchInputRef$curre4","_onKeyDown4","_ref9","_useContext","useContext","AuthContext","user","myAxios","_useState43","_useState44","_useState45","_useState46","isLoading","setIsLoading","_useState47","_useState48","mutate","variable","post","headers","Authorization","accessToken","response","_response$data","catch","err","finally","_tableRef$current3","ReactDOM","Loading","_x3","_callee3","_tableRef$current4","_context3","onInput","_x4","_callee4","_searchInputRef$curre5","_context4","_searchInputRef$curre6","isValidDate","dateString","test","_dateString$split","split","_dateString$split2","year","month","day","parsedYear","parseInt","date","Date","getFullYear","getMonth","getDate","TextFormatedInput","_ref$iconPosition","iconPosition","_ref$disableIcon","disableIcon","_ref$onIconClick","_ref$onChange","onChange","_ref$onBlur","onBlur","useId","formatNumber","parts","replace","join","unformatNumber","htmlFor","target","numbers","match","newV","handleChange","ensureTwoDecimals","handleBlur","onFocus","select","_ref2$iconPosition","_ref2$disableIcon","_ref2$onIconClick","_label$title","_label$title2","alert","trim","format","_inputRef$current","_inputRef$current2","TextAreaInput","textarea","_inputRef","_ref3$iconPosition","_ref3$disableIcon","_ref3$onIconClick","SelectInput","selectRef","_ref4$datasource","datasource","_ref4$values","values","_ref4$display","_datasource","_setDataSource","setDataSource","_dataSource","getDataSource","ButtonField","buttonRetRef","button","_ref5$tooltipText","tooltipText","_ref5$disabled","disabled","_executeQueryToClient","abrupt"],"sourceRoot":""}