{"version":3,"file":"static/js/1749.b8e8cf34.chunk.js","mappings":"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","sources":["components/DatePicker.tsx","components/ModalWithTable.tsx","components/Table.tsx","feautures/Admin/Task/Accounting/Deposit.tsx","hooks/useMultipleComponent.tsx","hooks/useQueryModalTable.tsx","lib/confirmationAlert.ts","../node_modules/@mui/icons-material/Add.js","../node_modules/@mui/icons-material/RestartAlt.js","../node_modules/@mui/icons-material/Save.js","../node_modules/@mui/icons-material/Search.js","../node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js"],"sourcesContent":["import { LocalizationProvider } from \"@mui/x-date-pickers/LocalizationProvider\";\nimport { AdapterDateFns } from \"@mui/x-date-pickers/AdapterDateFns\";\nimport { DatePicker } from \"@mui/x-date-pickers\";\nexport default function CustomDatePicker({\n  label,\n  name,\n  onChange,\n  value,\n  onKeyDown,\n  inputRef,\n  datePickerRef,\n  fullWidth,\n  textField,\n  minWidth = \"200px\",\n  ...rest\n}: any) {\n  return (\n    <LocalizationProvider dateAdapter={AdapterDateFns}>\n      <DatePicker\n      floatingLabelStyle={{color: \"black\" }}\n        value={value}\n        onChange={onChange}\n        ref={datePickerRef}\n        slotProps={{\n          textField: {\n            size: \"small\",\n            label,\n            name,\n            onKeyDown,\n            inputRef: inputRef,\n            fullWidth,\n\n            ...textField,\n          },\n        }}\n        InputLabelProps={{\n          sx: {\n            color: \"black\",\n          },\n        }}\n        sx={{\n          minWidth,\n          fieldset: { borderColor: \"black\" },\n          \".MuiFormLabel-root\": { fontSize: \"14px\" },\n          \".MuiFormLabel-root[data-shrink=false]\": {\n            top: \"-5px\",\n          },\n        }}\n        {...rest}\n      />\n    </LocalizationProvider>\n  );\n}\n","import React from \"react\";\nimport {\n  GridRowSelectionModel,\n  GridRowParams,\n  GridCellParams,\n  GridTreeNode,\n} from \"@mui/x-data-grid\";\nimport { Modal, Box, Typography, IconButton, TextField, InputAdornment } from \"@mui/material\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport Table from \"./Table\";\nimport SearchIcon from \"@mui/icons-material/Search\";\n\ninterface ModalWithTableParams {\n  height: number;\n  isLoading: boolean;\n  queryKey: string;\n  columns: Array<any>;\n  onSelectionChange: (rowSelectionModel: Array<any>, data: Array<any>) => void;\n  setRows: React.Dispatch<React.SetStateAction<GridRowSelectionModel>>;\n  rows: GridRowSelectionModel;\n  id: string;\n  onCloseModal: () => void;\n  onClickCloseIcon: () => void;\n  showModal: boolean;\n  searchOnChange:\n    | React.ChangeEventHandler<HTMLInputElement | HTMLTextAreaElement>\n    | undefined;\n  title?: string;\n  searchRef?: React.RefObject<HTMLInputElement>;\n  onCellKeyDown?: any;\n  onSearchKeyEnter?: (search: string) => void;\n  isRowSelectable?: ((params: GridRowParams<any>) => boolean) | undefined;\n  getCellClassName?:\n    | ((params: GridCellParams<any, any, any, GridTreeNode>) => string)\n    | undefined;\n}\n\nconst style = {\n  position: \"absolute\" as \"absolute\",\n  top: \"50%\",\n  left: \"50%\",\n  transform: \"translate(-50%, -50%)\",\n  width: \"70%\",\n  bgcolor: \"background.paper\",\n  boxShadow: 24,\n  p: 4,\n  heigth: \"auto\",\n};\n\nexport default function ModalWithTable({\n  height,\n  isLoading,\n  queryKey,\n  columns,\n  onSelectionChange,\n  setRows,\n  rows,\n  id,\n  onCloseModal,\n  showModal,\n  onClickCloseIcon,\n  searchOnChange,\n  title = \"\",\n  searchRef,\n  onCellKeyDown,\n  onSearchKeyEnter = () => {},\n  isRowSelectable,\n  getCellClassName,\n}: ModalWithTableParams) {\n  const mainId = generateRandomClass();\n\n  return (\n    <Modal\n      open={showModal}\n      onClose={onCloseModal}\n      aria-labelledby=\"modal-modal-title\"\n      aria-describedby=\"modal-modal-description\"\n    >\n      <Box sx={style}>\n        <Typography id=\"modal-modal-title\" variant=\"h6\" component=\"h2\" mb={2}>\n          {title}\n        </Typography>\n        <TextField\n          size=\"small\"\n          label=\"Search\"\n          fullWidth\n          onChange={searchOnChange}\n          InputProps={{\n            inputRef: searchRef,\n            style: { height: \"27px\", fontSize: \"14px\" },\n            endAdornment: (\n              <InputAdornment position=\"end\">\n                <IconButton\n                  onClick={() => {\n                    onSearchKeyEnter(searchRef?.current?.value as string);\n                  }}\n                  edge=\"end\"\n                >\n                  <SearchIcon />\n                </IconButton>\n              </InputAdornment>\n            ),\n          }}\n          type=\"search\"\n          onKeyDown={(e) => {\n            if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n              e.preventDefault();\n              onSearchKeyEnter(searchRef?.current?.value as string);\n            }\n            keyBoardSelectionTable(\n              e,\n              mainId,\n              searchRef?.current as HTMLInputElement\n            );\n          }}\n          sx={{\n            marginBottom: \"10px\",\n            \".MuiFormLabel-root\": { fontSize: \"14px\" },\n            \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n          }}\n        />\n        <div\n          className={`${mainId} main-table-selection-container`}\n          style={{ position: \"relative\", height: `${height + 20}px` }}\n        >\n          <Table\n            isSingleSelection={true}\n            isRowFreeze={false}\n            columns={columns}\n            isLoading={isLoading}\n            dataSelection={(selection, data, code) => {\n              onSelectionChange(selection, data);\n            }}\n            table_id={id}\n            rows={rows}\n            isRowSelectable={isRowSelectable}\n            getCellClassName={getCellClassName}\n          />\n        </div>\n\n        <div style={{ position: \"absolute\", top: \"10px\", right: \"10px\" }}>\n          <IconButton\n            aria-label=\"search-client\"\n            color=\"secondary\"\n            onClick={onClickCloseIcon}\n          >\n            <CloseIcon />\n          </IconButton>\n        </div>\n      </Box>\n    </Modal>\n  );\n}\n\nexport function generateRandomClass() {\n  const randomNumber = Math.floor(Math.random() * 10000);\n  const randomClass = \"main-\" + randomNumber;\n  return randomClass;\n}\n\nfunction keyBoardUpDown(className: string, el: HTMLElement) {\n  const firstRowParent = document.querySelector(\n    `.${className} .MuiDataGrid-row`\n  );\n  const firstInput = firstRowParent?.querySelector(\"input\");\n  firstInput?.focus();\n  const event = new MouseEvent(\"mouseenter\", {\n    bubbles: true,\n    cancelable: true,\n    view: window,\n  });\n  firstRowParent?.dispatchEvent(event);\n  firstInput?.addEventListener(\"keydown\", (es: any) => {\n    if (es.key === \"ArrowUp\") {\n      es.preventDefault();\n      el.focus();\n    }\n    if (es.key === \"ArrowUp\") {\n      firstRowParent?.classList.remove(\"hover-keyboard\");\n    }\n  });\n}\n\nexport function keyBoardSelectionTable(\n  e: React.KeyboardEvent<HTMLDivElement>,\n  className: string,\n  el: HTMLElement\n) {\n  const mainId = className;\n  if (e.code === \"ArrowDown\") {\n    const rows = document.querySelectorAll(`.${mainId} .MuiDataGrid-row`);\n    e.preventDefault();\n    rows[0]?.classList.add(\"hover-keyboard\");\n    keyBoardUpDown(className, el);\n    rows.forEach((el, idx) => {\n      el.addEventListener(\"keydown\", (es: any) => {\n        if (es.key === \"ArrowUp\") {\n          if (idx <= 0) {\n            return;\n          }\n\n          es.preventDefault();\n          rows[idx]?.classList.remove(\"hover-keyboard\");\n          rows[idx - 1]?.classList.add(\"hover-keyboard\");\n          return;\n        }\n        if (es.key === \"ArrowDown\") {\n          es.preventDefault();\n          if (idx >= rows.length - 1) {\n            return;\n          }\n          rows[idx]?.classList.remove(\"hover-keyboard\");\n          rows[idx + 1]?.classList.add(\"hover-keyboard\");\n        }\n      });\n    });\n  }\n}\n","import {\n  useState,\n  useContext,\n  createContext,\n  ReactElement,\n  forwardRef,\n  useImperativeHandle,\n} from \"react\";\nimport { Box, LinearProgress } from \"@mui/material\";\nimport {\n  DataGrid,\n  GridSlotsComponentsProps,\n  gridPageCountSelector,\n  GridPagination,\n  useGridApiContext,\n  useGridSelector,\n  GridRowSelectionModel,\n  GridColDef,\n  GridRowParams,\n  GridCellParams,\n  GridTreeNode,\n} from \"@mui/x-data-grid\";\nimport { TablePaginationProps } from \"@mui/material/TablePagination\";\nimport MuiPagination from \"@mui/material/Pagination\";\n\ninterface TableProps {\n  isLoading: boolean;\n  columns: Array<any>;\n  rows: Array<any>;\n  table_id: string;\n  isSingleSelection: boolean;\n  isRowFreeze: boolean;\n  dataSelection?: (selection: any, data: any, code: string | null) => void;\n  CustomFooterComponent?: any;\n  isRowSelectable?: ((params: GridRowParams<any>) => boolean) | undefined;\n  getCellClassName?:\n    | ((params: GridCellParams<any, any, any, GridTreeNode>) => string)\n    | undefined;\n  footerChildren?: (\n    rowSelectionModel: GridRowSelectionModel,\n    rows: Array<any>\n  ) => ReactElement;\n  footerPaginationPosition?: string;\n  showFooterSelectedCount?: boolean;\n  checkboxSelection?: boolean | undefined;\n}\n\nconst TableContext = createContext<{\n  rowSelectionModel: GridRowSelectionModel;\n  rows: Array<any>;\n  footerPaginationPosition?: string;\n  showFooterSelectedCount?: boolean;\n  footerChildren: (\n    rowSelectionModel: GridRowSelectionModel,\n    rows: Array<any>\n  ) => ReactElement;\n}>({\n  rows: [],\n  rowSelectionModel: [],\n  footerChildren: () => <div></div>,\n  footerPaginationPosition: \"right-left\",\n  showFooterSelectedCount: true,\n});\nconst Table = forwardRef(\n  (\n    {\n      isLoading,\n      columns,\n      rows,\n      table_id,\n      isSingleSelection,\n      isRowFreeze,\n      dataSelection,\n      CustomFooterComponent = DefaultooterComponent,\n      isRowSelectable,\n      getCellClassName,\n      checkboxSelection = true,\n      footerChildren = (\n        rowSelectionModel: GridRowSelectionModel,\n        rows: Array<any>\n      ) => <div></div>,\n      footerPaginationPosition = \"right-left\",\n      showFooterSelectedCount = true,\n    }: TableProps,\n    ref\n  ) => {\n    const [selectedRows, setSelectedRows] = useState<any>([]);\n\n    useImperativeHandle(ref, () => ({\n      removeSelection: () => {\n        setSelectedRows([]);\n      },\n      getSelectedRows: () => {\n        return rows.filter((item: any) =>\n          selectedRows?.includes(item[table_id])\n        );\n      },\n      setSelectedRows: (data: Array<any>) => {\n        setSelectedRows(data);\n      },\n    }));\n\n    function onSelectionChange(selection: any, data: any, code: string | null) {\n      if (dataSelection) {\n        dataSelection(selection, data, code);\n      }\n    }\n    let freezeArray: Array<any> = [];\n\n    return (\n      <TableContext.Provider\n        value={{\n          showFooterSelectedCount,\n          footerPaginationPosition,\n          rowSelectionModel: selectedRows,\n          rows,\n          footerChildren,\n        }}\n      >\n        <DataGrid\n          slots={{\n            loadingOverlay: LinearProgress,\n            footer: CustomFooterComponent,\n          }}\n          initialState={{\n            pagination: { paginationModel: { pageSize: 35 } },\n          }}\n          loading={isLoading}\n          getRowId={(row) => row[table_id]}\n          columns={columns.filter((col: any) => !col.hide) as GridColDef<any>[]}\n          rows={rows}\n          showCellVerticalBorder={true}\n          showColumnVerticalBorder={true}\n          checkboxSelection={checkboxSelection}\n          rowSelectionModel={selectedRows}\n          rowHeight={25}\n          columnHeaderHeight={35}\n          pageSizeOptions={[10, 20, 35, 50, 75, 100]}\n          sx={{\n            \"& .cash\": {\n              color: \"#ec4899\",\n            },\n            \"& .check\": {\n              color: \"#0891b2\",\n            },\n            \"& .approved\": {\n              color: \"green\",\n            },\n            \"& .pending\": {\n              color: \"orange\",\n            },\n            \"& .disapproved\": {\n              color: \"red\",\n            },\n            \"& .normal\": {\n              color: \"red\",\n            },\n            \"& .MuiDataGrid-row.Mui-selected:hover\": {\n              color: \"black\",\n              \"& .MuiSvgIcon-root \": {\n                fill: \"#3b82f6\",\n              },\n            },\n            \"& .hover-keyboard\": {\n              background: \"#2563eb\",\n              color: \"white\",\n              \"& .MuiSvgIcon-root \": {\n                fill: \"white\",\n              },\n            },\n            \"& .MuiDataGrid-row:hover\": {\n              background: \"#2563eb\",\n              color: \"white\",\n              \"& .MuiSvgIcon-root \": {\n                fill: \"white\",\n              },\n            },\n            \"& .MuiDataGrid-row.hover\": {\n              background: \"#2563eb\",\n              color: \"white\",\n              \"& .MuiSvgIcon-root \": {\n                fill: \"white\",\n              },\n            },\n            \"& .MuiTablePagination-root p \": {\n              padding: \"0 !important\",\n            },\n\n            ...{\n              \"& .MuiDataGrid-columnHeaders\": {\n                background: \"#64748b\",\n                color: \"white\",\n                fontSize: \"14px\",\n                // borderBottomColor: \"#38bdf8\",\n              },\n              \"& .MuiDataGrid-columnHeaderCheckbox .MuiDataGrid-columnHeaderTitleContainer .MuiSvgIcon-root \":\n                {\n                  display: isSingleSelection || isRowFreeze ? \"none\" : \"block\",\n                  fill: \"white\",\n                },\n              \"& .MuiDataGrid-columnHeaderCheckbox .MuiDataGrid-columnHeaderTitleContainer input \":\n                {\n                  display: isSingleSelection || isRowFreeze ? \"none\" : \"block\",\n                },\n            },\n            ...{\n              fontSize: 13,\n              fontWeight: 500,\n              \"& .MuiDataGrid-checkboxInput\": {\n                height: \"27px\",\n                width: \"27px\",\n              },\n              \"& .MuiDataGrid-checkboxInput svg\": {\n                height: \"20px\",\n                width: \"20px\",\n              },\n            },\n          }}\n          // onRowDoubleClick={(e, r) => {\n          //   console.log(e, r);\n          // }}\n\n          onRowSelectionModelChange={(selection) => {\n            if (isRowFreeze) {\n              if (selection.length <= 0) return;\n              freezeArray = selection;\n              if (selectedRows.includes(freezeArray[freezeArray.length - 1]))\n                return;\n\n              setSelectedRows(selection);\n\n              onSelectionChange([selection[selection.length - 1]], rows, null);\n              return;\n            }\n\n            if (!isRowFreeze && isSingleSelection) {\n              if (selectedRows && selectedRows?.length > 0) {\n                const selectionSet = new Set(selectedRows);\n                setSelectedRows(\n                  selection.filter((s: any) => !selectionSet.has(s))\n                );\n              } else {\n                setSelectedRows(selection);\n              }\n            } else {\n              setSelectedRows(selection);\n            }\n\n            onSelectionChange([selection[selection.length - 1]], rows, null);\n          }}\n          onCellKeyDown={(__: any, key: any) => {\n            const keyFinding = [\"NumpadEnter\", \"Enter\", \"Delete\", \"Backspace\"];\n            if (!keyFinding.includes(key.code)) {\n              return;\n            }\n            key.preventDefault();\n            if (key.code === \"Enter\" || key.code === \"NumpadEnter\") {\n              if (isSingleSelection && !isRowFreeze) {\n                return setSelectedRows((data: any) => {\n                  if (data && data.length > 0 && data[0] === __.rowNode.id) {\n                    onSelectionChange([], rows, key.code);\n                    return [];\n                  }\n                  onSelectionChange([__.rowNode.id], rows, key.code);\n                  return [__.rowNode.id];\n                });\n              } else {\n                setSelectedRows((data: any) => {\n                  if (\n                    data &&\n                    !isRowFreeze &&\n                    data.length > 0 &&\n                    data.includes(__.rowNode.id)\n                  ) {\n                    data = data.filter((item: any) => item !== __.rowNode.id);\n                    onSelectionChange([], rows, key.code);\n                    return data;\n                  }\n                  if (\n                    data &&\n                    isRowFreeze &&\n                    data.length > 0 &&\n                    data.includes(__.rowNode.id)\n                  ) {\n                    return data;\n                  }\n                  onSelectionChange([__.rowNode.id], rows, key.code);\n                  return [...data, __.rowNode.id];\n                });\n              }\n              return;\n            }\n            if (key.code === \"Delete\" || key.code === \"Backspace\") {\n              setSelectedRows([__.rowNode.id]);\n              return onSelectionChange([__.rowNode.id], rows, key.code);\n            }\n          }}\n          disableVirtualization\n          isRowSelectable={isRowSelectable}\n          getCellClassName={getCellClassName}\n        />\n      </TableContext.Provider>\n    );\n  }\n);\n\nexport default Table;\nfunction Pagination({\n  page,\n  onPageChange,\n  className,\n}: Pick<TablePaginationProps, \"page\" | \"onPageChange\" | \"className\">) {\n  const apiRef = useGridApiContext();\n  const pageCount = useGridSelector(apiRef, gridPageCountSelector);\n\n  return (\n    <MuiPagination\n      variant=\"outlined\"\n      color=\"primary\"\n      className={className}\n      count={pageCount}\n      page={page + 1}\n      onChange={(event, newPage) => {\n        onPageChange(event as any, newPage - 1);\n      }}\n    />\n  );\n}\n\nfunction CustomPagination(props: any) {\n  return <GridPagination ActionsComponent={Pagination} {...props} />;\n}\nfunction DefaultooterComponent(\n  props: NonNullable<GridSlotsComponentsProps[\"footer\"]>\n) {\n  const {\n    rowSelectionModel,\n    showFooterSelectedCount,\n    footerPaginationPosition,\n    footerChildren,\n    rows,\n  } = useContext(TableContext);\n  return (\n    <Box\n      sx={{\n        columnGap: \"50px\",\n        display: \"flex\",\n        width: \"100%\",\n        justifyContent: \"space-between\",\n        px: 3,\n        alignItems: \"center\",\n        flexDirection:\n          footerPaginationPosition === \"right-left\" ? \"row-reverse\" : \"row\",\n      }}\n    >\n      <CustomPagination {...props} />\n      <Box\n        sx={{\n          display: \"flex\",\n          justifyContent:\n            footerPaginationPosition === \"right-left\"\n              ? \"flex-start\"\n              : \"flex-end\",\n          flex: 1,\n          alignItems: \"center\",\n        }}\n      >\n        {showFooterSelectedCount && (\n          <div>Selected:{rowSelectionModel?.length}</div>\n        )}\n        <div>{footerChildren(rowSelectionModel, rows)}</div>\n      </Box>\n    </Box>\n  );\n}\n","import {\n  useState,\n  createContext,\n  useContext,\n  CSSProperties,\n  useEffect,\n  useRef,\n  useReducer,\n} from \"react\";\nimport { GridRowSelectionModel } from \"@mui/x-data-grid\";\nimport { useMutation, useQuery, useQueryClient } from \"react-query\";\nimport { AuthContext } from \"../../../../components/AuthContext\";\nimport {\n  Box,\n  TextField,\n  FormControl,\n  InputLabel,\n  OutlinedInput,\n  InputAdornment,\n  IconButton,\n  Button,\n} from \"@mui/material\";\nimport CustomDatePicker from \"../../../../components/DatePicker\";\nimport useQueryModalTable from \"../../../../hooks/useQueryModalTable\";\nimport PolicyIcon from \"@mui/icons-material/Policy\";\nimport LoadingButton from \"@mui/lab/LoadingButton\";\nimport RestartAltIcon from \"@mui/icons-material/RestartAlt\";\nimport AddIcon from \"@mui/icons-material/Add\";\nimport SaveIcon from \"@mui/icons-material/Save\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport Swal from \"sweetalert2\";\nimport { wait } from \"@testing-library/user-event/dist/utils\";\nimport useMultipleComponent from \"../../../../hooks/useMultipleComponent\";\nimport Table from \"../../../../components/Table\";\nimport {\n  codeCondfirmationAlert,\n  saveCondfirmationAlert,\n} from \"../../../../lib/confirmationAlert\";\nconst defaultCashBreakDown = [\n  { value1: \"1,000.00\", value2: \"\", value3: \"0.00\" },\n  { value1: \"500.00\", value2: \"\", value3: \"0.00\" },\n  { value1: \"200.00\", value2: \"\", value3: \"0.00\" },\n  { value1: \"100.00\", value2: \"\", value3: \"0.00\" },\n  { value1: \"50.00\", value2: \"\", value3: \"0.00\" },\n  { value1: \"20.00\", value2: \"\", value3: \"0.00\" },\n  { value1: \"10.00\", value2: \"\", value3: \"0.00\" },\n  { value1: \"5.00\", value2: \"\", value3: \"0.00\" },\n  { value1: \"2.00\", value2: \"\", value3: \"0.00\" },\n  { value1: \"1.00\", value2: \"\", value3: \"0.00\" },\n  { value1: \".50\", value2: \"\", value3: \"0.00\" },\n  { value1: \".25\", value2: \"\", value3: \"0.00\" },\n  { value1: \".10\", value2: \"\", value3: \"0.00\" },\n  { value1: \".05\", value2: \"\", value3: \"0.00\" },\n  { value1: \".01\", value2: \"\", value3: \"0.00\" },\n];\nconst buttons = [\n  {\n    title: \"Cash Collection\",\n    index: 0,\n  },\n  {\n    title: \"Check Collection\",\n    index: 1,\n  },\n  {\n    title: \"Selected Collection\",\n    index: 2,\n  },\n  {\n    title: \"Collection for Deposit\",\n    index: 3,\n  },\n];\ninterface DepositContextType {\n  cashCollection: GridRowSelectionModel;\n  setCashCollection: React.Dispatch<\n    React.SetStateAction<GridRowSelectionModel>\n  >;\n  checkCollection: GridRowSelectionModel;\n  setCheckCollection: React.Dispatch<\n    React.SetStateAction<GridRowSelectionModel>\n  >;\n  selectedCollection: GridRowSelectionModel;\n  setSelectedCollection: React.Dispatch<\n    React.SetStateAction<GridRowSelectionModel>\n  >;\n  collectionForDeposit: GridRowSelectionModel;\n  setCollectionForDeposit: React.Dispatch<\n    React.SetStateAction<GridRowSelectionModel>\n  >;\n  tableRows: Array<{ value1: string; value2: string; value3: string }>;\n  updateTableRowsInput: (\n    fields: {\n      value1: string;\n      value2: string;\n      value3: string;\n    },\n    idx: number\n  ) => void;\n  LoadingCashTable: boolean;\n  LoadingCheckTable: boolean;\n  total: string;\n  setTotal: React.Dispatch<React.SetStateAction<string>>;\n  TotalCashForDeposit: string;\n  loadingSearchByDepositSlip: boolean;\n}\nconst initialState = {\n  depositSlip: \"\",\n  temp_depositSlip: \"\",\n  depositdate: new Date(),\n  Account_ID: \"\",\n  Account_Name: \"\",\n  Account_No: \"\",\n  Account_Type: \"\",\n  Desc: \"\",\n  IDNo: \"\",\n  Short: \"\",\n  ShortName: \"\",\n  Sub_ShortName: \"\",\n  Sub_Acct: \"\",\n  search: \"\",\n  depositMode: \"\",\n  Identity: \"\",\n};\nexport const reducer = (state: any, action: any) => {\n  switch (action.type) {\n    case \"UPDATE_FIELD\":\n      return {\n        ...state,\n        [action.field]: action.value,\n      };\n    default:\n      return state;\n  }\n};\nconst DepositContext = createContext<DepositContextType>({\n  cashCollection: [],\n  setCashCollection: () => {},\n  checkCollection: [],\n  setCheckCollection: () => {},\n  selectedCollection: [],\n  setSelectedCollection: () => {},\n  collectionForDeposit: [],\n  setCollectionForDeposit: () => {},\n  tableRows: [],\n  updateTableRowsInput: () => {},\n  LoadingCashTable: false,\n  LoadingCheckTable: false,\n  setTotal: () => {},\n  total: \"0.00\",\n  TotalCashForDeposit: \"0.00\",\n  loadingSearchByDepositSlip: false,\n});\n\nexport default function Deposit() {\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const { myAxios, user } = useContext(AuthContext);\n  const { currentStepIndex, step, goTo } = useMultipleComponent([\n    <CashCollection />,\n    <CheckCollection />,\n    <SelectedCollection />,\n    <CollectionForDeposit />,\n  ]);\n  const [tableRowsInputValue, setTableRowsInputValue] =\n    useState<Array<{ value1: string; value2: string; value3: string }>>(\n      defaultCashBreakDown\n    );\n  const [cashCollection, setCashCollection] = useState<GridRowSelectionModel>(\n    []\n  );\n  const [checkCollection, setCheckCollection] = useState<GridRowSelectionModel>(\n    []\n  );\n  const [selectedCollection, setSelectedCollection] =\n    useState<GridRowSelectionModel>([]);\n  const [collectionForDeposit, setCollectionForDeposit] =\n    useState<GridRowSelectionModel>([]);\n  const updateTableRowsInput = (\n    fields: { value1: string; value2: string; value3: string },\n    idx: number\n  ) => {\n    setTableRowsInputValue((d) => {\n      return d.map((item, index) => {\n        if (idx === index) {\n          item = { ...item, ...fields };\n        }\n        return item;\n      });\n    });\n  };\n  const queryClient = useQueryClient();\n  const { isLoading: LoadingCashTable, refetch: refetchCash } = useQuery({\n    queryKey: \"cash\",\n    queryFn: async () =>\n      await myAxios.get(`/task/accounting/getCashCollection`, {\n        headers: {\n          Authorization: `Bearer ${user?.accessToken}`,\n        },\n      }),\n    refetchOnWindowFocus: false,\n    onSuccess: (data) => {\n      const response = data as any;\n      setCashCollection(response.data.cash);\n    },\n  });\n  const { isLoading: LoadingDepositSlipCode, refetch: RefetchDepositSlipCode } =\n    useQuery({\n      queryKey: \"deposit-slipcode\",\n      queryFn: async () =>\n        await myAxios.get(`/task/accounting/get-deposit-slipcode`, {\n          headers: {\n            Authorization: `Bearer ${user?.accessToken}`,\n          },\n        }),\n      refetchOnWindowFocus: false,\n      onSuccess: (data) => {\n        const response = data as any;\n    \n        dispatch({\n          type: \"UPDATE_FIELD\",\n          field: \"depositSlip\",\n          value: response.data.slipcode[0].collectionID,\n        });\n        dispatch({\n          type: \"UPDATE_FIELD\",\n          field: \"temp_depositSlip\",\n          value: response.data.slipcode[0].collectionID,\n        });\n      },\n    });\n  const { isLoading: LoadingCheckTable, refetch: refetchCheck } = useQuery({\n    queryKey: \"check\",\n    queryFn: async () =>\n      await myAxios.get(`/task/accounting/getCheckCollection`, {\n        headers: {\n          Authorization: `Bearer ${user?.accessToken}`,\n        },\n      }),\n    refetchOnWindowFocus: false,\n    onSuccess: (data) => {\n      const response = data as any;\n      setCheckCollection(response.data.check);\n    },\n  });\n  const [total, setTotal] = useState(\"0.00\");\n  const datePickerRef = useRef<HTMLElement>(null);\n  const bankDepositSearch = useRef<HTMLInputElement>(null);\n  const depositSearch = useRef<HTMLInputElement>(null);\n  const submitButton = useRef<HTMLButtonElement>(null);\n  const goToRef = useRef<(index: number) => void>(goTo);\n\n  const TotalCashForDeposit = selectedCollection\n    .reduce((accumulator: number, currentValue: any) => {\n      const dd =\n        currentValue.Check_No || currentValue.Check_No !== \"\"\n          ? 0\n          : parseFloat(currentValue.Amount.replace(/,/g, \"\"));\n      return accumulator + dd;\n    }, 0.0)\n    .toLocaleString(\"en-US\", {\n      minimumFractionDigits: 2,\n      maximumFractionDigits: 2,\n    });\n  const {\n    ModalComponent: ModalDepostitBanks,\n    openModal: openDepositBanks,\n    isLoading: isLoadingDepostitBanks,\n    closeModal: closeDepositBanks,\n  } = useQueryModalTable({\n    link: {\n      url: \"/task/accounting/getBanks\",\n      queryUrlName: \"bankDepositSearch\",\n    },\n    columns: [\n      { field: \"Account_Type\", headerName: \"Account_Type\", width: 200 },\n      { field: \"Account_No\", headerName: \"Account_No\", width: 170 },\n      {\n        field: \"Account_Name\",\n        headerName: \"Account_Name\",\n        flex: 1,\n      },\n    ],\n    queryKey: \"bank-deposit\",\n    uniqueId: \"Account_No\",\n    responseDataKey: \"banks\",\n    onSelected: (selectedRowData) => {\n      console.log(selectedRowData[0]);\n      const newState = {\n        ...state,\n        ...selectedRowData[0],\n      };\n      setNewStateValue(dispatch, newState);\n      closeDepositBanks();\n    },\n\n    searchRef: bankDepositSearch,\n  });\n  const { mutate: addDepositMutation, isLoading: addDepositMutationLoading } =\n    useMutation({\n      mutationKey: \"add-deposit\",\n      mutationFn: async (variables: any) => {\n        return await myAxios.post(\"/task/accounting/add-deposit\", variables, {\n          headers: {\n            Authorization: `Bearer ${user?.accessToken}`,\n          },\n        });\n      },\n      onSuccess: (res) => {\n        const resposnse = res as any;\n        if (resposnse.data.success) {\n          queryClient.invalidateQueries(\"deposit-search\");\n          setNewStateValue(dispatch, initialState);\n          setSelectedCollection([]);\n          setCollectionForDeposit([]);\n          refetchCash();\n          RefetchDepositSlipCode();\n          refetchCheck();\n          setTableRowsInputValue(defaultCashBreakDown);\n          return Swal.fire({\n            position: \"center\",\n            icon: \"success\",\n            title: resposnse.data.message,\n            timer: 1500,\n          });\n        }\n        return Swal.fire({\n          position: \"center\",\n          icon: \"warning\",\n          title: resposnse.data.message,\n          timer: 1500,\n        });\n      },\n    });\n  const {\n    mutate: updateDepositMutation,\n    isLoading: updateDepositMutationLoading,\n  } = useMutation({\n    mutationKey: \"update-deposit\",\n    mutationFn: async (variables: any) => {\n      return await myAxios.post(\"/task/accounting/update-deposit\", variables, {\n        headers: {\n          Authorization: `Bearer ${user?.accessToken}`,\n        },\n      });\n    },\n    onSuccess: (res) => {\n      const resposnse = res as any;\n      if (resposnse.data.success) {\n        queryClient.invalidateQueries(\"deposit-search\");\n        setNewStateValue(dispatch, initialState);\n        setSelectedCollection([]);\n        setCollectionForDeposit([]);\n        refetchCash();\n        RefetchDepositSlipCode();\n        refetchCheck();\n        setTableRowsInputValue(defaultCashBreakDown);\n        return Swal.fire({\n          position: \"center\",\n          icon: \"success\",\n          title: resposnse.data.message,\n          timer: 1500,\n        });\n      }\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: resposnse.data.message,\n        timer: 1500,\n      });\n    },\n  });\n  const { mutate: searchByDepositSlip, isLoading: loadingSearchByDepositSlip } =\n    useMutation({\n      mutationKey: \"search-deposit-cash-check\",\n      mutationFn: async (variables: any) => {\n        return await myAxios.post(\n          \"/task/accounting/search-cash-check\",\n          variables,\n          {\n            headers: {\n              Authorization: `Bearer ${user?.accessToken}`,\n            },\n          }\n        );\n      },\n      onSuccess: (res) => {\n        const response = res as any;\n        console.log(\"asdasd\", response);\n\n        setCashCollection(response.data.cash);\n        setCheckCollection(response.data.check);\n        setSelectedCollection([\n          ...response.data.cash.filter((items: any) => items.SlipCode !== \"\"),\n          ...response.data.check.filter((items: any) => items.SlipCode !== \"\"),\n        ]);\n        setCollectionForDeposit([\n          ...response.data.check.filter((items: any) => items.SlipCode !== \"\"),\n        ]);\n        setTableRowsInputValue(response.data.cashBreakDownToArray);\n        setNewStateValue(dispatch, {\n          ...state,\n          ...response.data.getBankFromDeposit[0],\n        });\n        setTotal(response.data.cashBreakDownTotal);\n        handleInputChange({ target: { name: \"depositMode\", value: \"edit\" } });\n      },\n    });\n  const {\n    ModalComponent: ModalDeposit,\n    openModal: openDeposit,\n    isLoading: isLoadingDeposit,\n    closeModal: closeDeposit,\n  } = useQueryModalTable({\n    link: {\n      url: \"/task/accounting/search-deposit\",\n      queryUrlName: \"searchDeposit\",\n    },\n    columns: [\n      { field: \"Date\", headerName: \"Date\", width: 150 },\n      { field: \"SlipCode\", headerName: \"Slip Code\", width: 170 },\n      {\n        field: \"BankAccount\",\n        headerName: \"Bank Account\",\n        width: 170,\n      },\n      {\n        field: \"AccountName\",\n        headerName: \"Account Name\",\n        flex: 1,\n      },\n    ],\n    queryKey: \"deposit-search\",\n    uniqueId: \"SlipCode\",\n    responseDataKey: \"deposit\",\n    onSelected: (selectedRowData) => {\n      const SlipCode = selectedRowData[0].SlipCode;\n      const BankAccount = selectedRowData[0].BankAccount;\n      searchByDepositSlip({ SlipCode, BankAccount });\n      dispatch({\n        type: \"UPDATE_FIELD\",\n        field: \"depositSlip\",\n        value: SlipCode,\n      });\n      state.depositSlip = SlipCode;\n      closeDeposit();\n    },\n    onCloseFunction: (value: any) => {\n      dispatch({ type: \"UPDATE_FIELD\", field: \"search\", value });\n    },\n    searchRef: depositSearch,\n  });\n  const handleInputChange = (e: any) => {\n    const { name, value } = e.target;\n    dispatch({ type: \"UPDATE_FIELD\", field: name, value });\n  };\n  const handleOnSave = (e: any) => {\n    e.preventDefault();\n    if (state.Account_ID.length >= 200) {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: \"Bank Account is too long!\",\n        timer: 1500,\n      });\n    }\n    if (state.Account_ID === \"\") {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: \"Please provide bank account\",\n        timer: 1500,\n      }).then((result) => {\n        wait(350).then(() => {\n          openDepositBanks();\n        });\n      });\n    }\n    if (selectedCollection.length <= 0) {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: \"No selected collection to be deposit\",\n        timer: 1500,\n      });\n    }\n    if (TotalCashForDeposit.trim() !== total.trim()) {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: \"Cash breakdown is not balance\",\n        timer: 1500,\n      });\n    }\n    if (state.depositMode === \"edit\") {\n      codeCondfirmationAlert({\n        isUpdate: true,\n        cb: (userCodeConfirmation) => {\n          updateDepositMutation({\n            ...state,\n            userCodeConfirmation,\n            selectedCollection: JSON.stringify(selectedCollection),\n            tableRowsInputValue: JSON.stringify(tableRowsInputValue),\n          });\n        },\n      });\n    } else {\n      saveCondfirmationAlert({\n        isConfirm: () => {\n          addDepositMutation({\n            ...state,\n            selectedCollection: JSON.stringify(selectedCollection),\n            tableRowsInputValue: JSON.stringify(tableRowsInputValue),\n          });\n        },\n      });\n    }\n  };\n\n  // useEffect(() => {\n  //   if (selectedCollection.length > 0) {\n  //     goToRef.current(2);\n  //   }\n  // }, [selectedCollection]);\n\n  const disabledFields = state.depositMode === \"\";\n\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        flexDirection: \"column\",\n        width: \"100%\",\n        height: \"100%\",\n        flex: 1,\n      }}\n    >\n      <div\n        style={{\n          display: \"flex\",\n          alignItems: \"center\",\n          columnGap: \"5px\",\n        }}\n      >\n        {isLoadingDeposit ? (\n          <LoadingButton loading={isLoadingDeposit} />\n        ) : (\n          <TextField\n            label=\"Search\"\n            size=\"small\"\n            name=\"search\"\n            value={state.search}\n            onChange={handleInputChange}\n            onKeyDown={(e) => {\n              if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n                e.preventDefault();\n                return openDeposit((e.target as HTMLInputElement).value);\n              }\n            }}\n            InputProps={{\n              style: { height: \"27px\", fontSize: \"14px\" },\n            }}\n            sx={{\n              width: \"300px\",\n              height: \"27px\",\n              \".MuiFormLabel-root\": { fontSize: \"14px\" },\n              \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n            }}\n          />\n        )}\n        {disabledFields && (\n          <Button\n            sx={{\n              height: \"30px\",\n              fontSize: \"11px\",\n            }}\n            variant=\"contained\"\n            startIcon={<AddIcon sx={{ width: 15, height: 15 }} />}\n            id=\"entry-header-save-button\"\n            onClick={() => {\n              handleInputChange({\n                target: { name: \"depositMode\", value: \"add\" },\n              });\n            }}\n          >\n            New\n          </Button>\n        )}\n        <LoadingButton\n          sx={{\n            height: \"30px\",\n            fontSize: \"11px\",\n          }}\n          id=\"save-entry-header\"\n          color=\"primary\"\n          variant=\"contained\"\n          type=\"submit\"\n          onClick={handleOnSave}\n          disabled={disabledFields}\n          startIcon={<SaveIcon sx={{ width: 15, height: 15 }} />}\n          loading={updateDepositMutationLoading || addDepositMutationLoading}\n        >\n          Save\n        </LoadingButton>\n        {!disabledFields && (\n          <Button\n            sx={{\n              height: \"30px\",\n              fontSize: \"11px\",\n            }}\n            variant=\"contained\"\n            startIcon={<CloseIcon sx={{ width: 15, height: 15 }} />}\n            color=\"error\"\n            onClick={() => {\n              Swal.fire({\n                title: \"Are you sure?\",\n                text: \"You won't be able to revert this!\",\n                icon: \"warning\",\n                showCancelButton: true,\n                confirmButtonColor: \"#3085d6\",\n                cancelButtonColor: \"#d33\",\n                confirmButtonText: \"Yes, cancel it!\",\n              }).then((result) => {\n                if (result.isConfirmed) {\n                  initialState.depositMode = \"\";\n                  setNewStateValue(dispatch, initialState);\n                  setSelectedCollection([]);\n                  setCollectionForDeposit([]);\n                  refetchCash();\n                  RefetchDepositSlipCode();\n                  refetchCheck();\n                  setTableRowsInputValue(defaultCashBreakDown);\n                }\n              });\n            }}\n          >\n            Cancel\n          </Button>\n        )}\n      </div>\n      <br />\n      <form\n        onKeyDown={(e) => {\n          if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n            e.preventDefault();\n            return;\n          }\n        }}\n        style={{\n          display: \"flex\",\n          gap: \"10px\",\n        }}\n      >\n        {LoadingDepositSlipCode ? (\n          <LoadingButton loading={LoadingDepositSlipCode} />\n        ) : (\n          <FormControl\n            variant=\"outlined\"\n            size=\"small\"\n            disabled={disabledFields}\n            sx={{\n              width: \"200px\",\n              \".MuiFormLabel-root\": {\n                fontSize: \"14px\",\n                background: \"white\",\n                zIndex: 99,\n                padding: \"0 3px\",\n              },\n              \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n            }}\n          >\n            <InputLabel htmlFor=\"deposit-id-field\">Slip Code</InputLabel>\n            <OutlinedInput\n              // inputRef={checkBankRef}\n              sx={{\n                height: \"27px\",\n                fontSize: \"14px\",\n              }}\n              disabled={disabledFields}\n              fullWidth\n              label=\"Slip Code\"\n              name=\"depositSlip\"\n              value={state.depositSlip}\n              onChange={handleInputChange}\n              onKeyDown={(e) => {\n                if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n                  return handleOnSave(e);\n                }\n              }}\n              readOnly={user?.department !== \"UCSMI\"}\n              id=\"deposit-id-field\"\n              endAdornment={\n                <InputAdornment position=\"end\">\n                  <IconButton\n                    disabled={disabledFields}\n                    aria-label=\"search-client\"\n                    color=\"secondary\"\n                    edge=\"end\"\n                    onClick={() => {\n                      RefetchDepositSlipCode();\n                    }}\n                  >\n                    <RestartAltIcon />\n                  </IconButton>\n                </InputAdornment>\n              }\n            />\n          </FormControl>\n        )}\n        <CustomDatePicker\n          disabled={disabledFields}\n          label=\"Deposit Date\"\n          onChange={(value: any) => {\n            dispatch({\n              type: \"UPDATE_FIELD\",\n              field: \"depositdate\",\n              value: value,\n            });\n          }}\n          value={new Date(state.depositdate)}\n          onKeyDown={(e: any) => {\n            if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n              const timeout = setTimeout(() => {\n                datePickerRef.current?.querySelector(\"button\")?.click();\n                clearTimeout(timeout);\n              }, 150);\n            }\n          }}\n          textField={{\n            InputLabelProps: {\n              style: {\n                fontSize: \"14px\",\n              },\n            },\n            InputProps: {\n              style: { height: \"27px\", fontSize: \"14px\" },\n            },\n          }}\n          datePickerRef={datePickerRef}\n        />\n        {isLoadingDepostitBanks ? (\n          <LoadingButton loading={isLoadingDepostitBanks} />\n        ) : (\n          <FormControl\n            sx={{\n              width: \"200px\",\n              \".MuiFormLabel-root\": {\n                fontSize: \"14px\",\n                background: \"white\",\n                zIndex: 99,\n                padding: \"0 3px\",\n              },\n              \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n            }}\n            variant=\"outlined\"\n            size=\"small\"\n            disabled={disabledFields}\n          >\n            <InputLabel htmlFor=\"deposit-bank\">Bank Account</InputLabel>\n            <OutlinedInput\n              sx={{\n                height: \"27px\",\n                fontSize: \"14px\",\n              }}\n              disabled={disabledFields}\n              label=\"Bank Account\"\n              name=\"Account_ID\"\n              value={state.Account_ID}\n              onChange={handleInputChange}\n              onKeyDown={(e) => {\n                if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n                  return openDepositBanks(state.Account_ID);\n                }\n              }}\n              id=\"deposit-bank\"\n              endAdornment={\n                <InputAdornment position=\"end\">\n                  <IconButton\n                    disabled={disabledFields}\n                    aria-label=\"search-client\"\n                    color=\"secondary\"\n                    edge=\"end\"\n                    onClick={() => openDepositBanks(state.Account_ID)}\n                  >\n                    <PolicyIcon />\n                  </IconButton>\n                </InputAdornment>\n              }\n            />\n          </FormControl>\n        )}\n        <TextField\n          disabled={disabledFields}\n          name=\"Account_Name\"\n          onChange={handleInputChange}\n          value={state.Account_Name}\n          label=\"Account Name\"\n          size=\"small\"\n          onKeyDown={(e) => {\n            if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n              return handleOnSave(e);\n            }\n          }}\n          InputProps={{\n            style: { height: \"27px\", fontSize: \"14px\" },\n            readOnly: true,\n          }}\n          sx={{\n            flex: 1,\n            \".MuiFormLabel-root\": { fontSize: \"14px\" },\n            \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n          }}\n        />\n        <button\n          ref={submitButton}\n          style={{ display: \"none\" }}\n          type=\"submit\"\n        ></button>\n      </form>\n      <br />\n      <div>\n        <div style={{ display: \"flex\" }}>\n          {buttons.map((item, idx) => {\n            return (\n              <button\n                key={idx}\n                style={{\n                  border: \"none\",\n                  outline: \"none\",\n                  backgroundColor: \"rgba(51, 51, 51, 0.05)\",\n                  borderWidth: \"0\",\n                  color: currentStepIndex === idx ? \"#7e22ce\" : \"#333333\",\n                  cursor: \"pointer\",\n                  display: \"inline-block\",\n                  fontFamily: `\"Haas Grot Text R Web\", \"Helvetica Neue\", Helvetica, Arial, sans-serif`,\n                  fontSize: \"14px\",\n                  fontWeight: \"500\",\n                  lineHeight: \"20px\",\n                  listStyle: \"none\",\n                  margin: \"0\",\n                  padding: \"10px 12px\",\n                  textAlign: \"center\",\n                  transition: \"all 200ms\",\n                  verticalAlign: \"baseline\",\n                  whiteSpace: \"nowrap\",\n                  userSelect: \"none\",\n                  touchAction: \"manipulation\",\n                  position: \"relative\",\n                  overflow: \"hidden\",\n                }}\n                onClick={() => goTo(idx)}\n              >\n                <span\n                  style={{\n                    position: \"absolute\",\n                    top: 0,\n                    bottom: 0,\n                    left: 0,\n                    right: 0,\n                    background: \"rgba(206, 214, 211, 0.18)\",\n                    transition: \"all 200ms\",\n                    transform: slideAnimation(currentStepIndex, idx),\n                  }}\n                ></span>\n                {item.title}\n              </button>\n            );\n          })}\n        </div>\n      </div>\n      <br />\n      <DepositContext.Provider\n        value={{\n          cashCollection,\n          setCashCollection,\n          checkCollection,\n          setCheckCollection,\n          selectedCollection,\n          setSelectedCollection,\n          collectionForDeposit,\n          setCollectionForDeposit,\n          tableRows: tableRowsInputValue,\n          updateTableRowsInput,\n          LoadingCashTable,\n          LoadingCheckTable,\n          total,\n          setTotal,\n          TotalCashForDeposit,\n          loadingSearchByDepositSlip,\n        }}\n      >\n        <div\n          style={{\n            display: \"flex\",\n            flexDirection: \"column\",\n            flex: 1,\n          }}\n          id=\"concatiner\"\n        >\n          {step}\n        </div>\n      </DepositContext.Provider>\n      {ModalDepostitBanks}\n      {ModalDeposit}\n    </div>\n  );\n}\nfunction slideAnimation(activeButton: number, idx: number) {\n  if (activeButton === idx) {\n    return \"translateX(100%)\";\n  } else {\n    return \"translateX(0%)\";\n  }\n}\nfunction CashCollection() {\n  const {\n    cashCollection,\n    LoadingCashTable,\n    setSelectedCollection,\n    selectedCollection,\n    loadingSearchByDepositSlip,\n  } = useContext(DepositContext);\n\n  const table = useRef<any>(null);\n  const cashColumns = [\n    {\n      field: \"OR_No\",\n      headerName: \"OR No.\",\n      minWidth: 170,\n    },\n    {\n      field: \"OR_Date\",\n      headerName: \"OR Date\",\n      minWidth: 170,\n    },\n    {\n      field: \"Amount\",\n      headerName: \"Amount\",\n      minWidth: 150,\n      align: \"right\",\n      cellClassName: \"super-app-theme--cell\",\n    },\n    {\n      field: \"Client_Name\",\n      headerName: \"Client Name\",\n      flex: 1,\n      minWidth: 400,\n    },\n    {\n      field: \"Temp_OR\",\n      headerName: \"Temp_OR\",\n      hide: true,\n    },\n  ];\n\n  useEffect(() => {\n    table.current?.setSelectedRows(\n      selectedCollection\n        .filter((item: any) => item.Check_No === \"\")\n        .map((item: any) => item.TempOR)\n    );\n  }, [selectedCollection, table, loadingSearchByDepositSlip]);\n  return (\n    <div\n      style={{\n        flex: 1,\n        marginTop: \"10px\",\n        width: \"100%\",\n        position: \"relative\",\n      }}\n    >\n      <Box\n        style={{\n          height: `${\n            document.getElementById(\"concatiner\")?.getBoundingClientRect()\n              .height\n          }px`,\n          width: \"100%\",\n          overflowX: \"scroll\",\n          position: \"absolute\",\n        }}\n      >\n        <Table\n          ref={table}\n          isLoading={LoadingCashTable || loadingSearchByDepositSlip}\n          columns={cashColumns}\n          rows={cashCollection}\n          table_id={\"Temp_OR\"}\n          isSingleSelection={true}\n          isRowFreeze={true}\n          dataSelection={(selection, data, code) => {\n            const rowSelected = data.filter(\n              (item: any) => item.Temp_OR === selection[0]\n            )[0];\n            if (rowSelected === undefined || rowSelected.length <= 0) {\n              return;\n            }\n\n            const newSelected: any = {\n              Deposit: \"Cash\",\n              Check_No: \"\",\n              Check_Date: \"\",\n              Bank: \"\",\n              Amount: rowSelected.Amount,\n              Name: rowSelected.Client_Name,\n              RowIndex: rowSelected.Temp_OR,\n              DRCode: rowSelected.DRCode,\n              ORNo: rowSelected.OR_No,\n              DRRemarks: rowSelected.ORNo,\n              IDNo: rowSelected.ID_No,\n              TempOR: rowSelected.Temp_OR,\n              Short: rowSelected.Short,\n            };\n            setSelectedCollection((d) => {\n              d = [...d, newSelected];\n              return d;\n            });\n          }}\n        />\n      </Box>\n    </div>\n  );\n}\nfunction CheckCollection() {\n  const {\n    checkCollection,\n    LoadingCheckTable,\n    setSelectedCollection,\n    selectedCollection,\n    setCollectionForDeposit,\n    loadingSearchByDepositSlip,\n  } = useContext(DepositContext);\n  const checkColumns = [\n    {\n      field: \"OR_No\",\n      headerName: \"OR No.\",\n      minWidth: 170,\n    },\n    {\n      field: \"OR_Date\",\n      headerName: \"OR Date\",\n      minWidth: 170,\n    },\n    {\n      field: \"Check_No\",\n      headerName: \"Check No\",\n      minWidth: 170,\n    },\n    {\n      field: \"Check_Date\",\n      headerName: \"Check Date\",\n      minWidth: 170,\n    },\n    {\n      field: \"Amount\",\n      headerName: \"Amount\",\n      minWidth: 160,\n      align: \"right\",\n    },\n    {\n      field: \"Bank_Branch\",\n      headerName: \"Bank/Branch\",\n      minWidth: 300,\n    },\n    {\n      field: \"Client_Name\",\n      headerName: \"Client Name\",\n      minWidth: 300,\n      flex: 1,\n    },\n    {\n      field: \"Temp_OR\",\n      headerName: \"Temp_OR\",\n      hide: true,\n    },\n  ];\n  const table = useRef<any>(null);\n  useEffect(() => {\n    table.current?.setSelectedRows(\n      selectedCollection\n        .filter((item: any) => item.Check_No !== \"\")\n        .map((item: any) => item.TempOR)\n    );\n  }, [selectedCollection, table, loadingSearchByDepositSlip]);\n  return (\n    <div\n      style={{\n        marginTop: \"10px\",\n        width: \"100%\",\n        position: \"relative\",\n        flex: 1,\n      }}\n    >\n      <Box\n        style={{\n          height: `${\n            document.getElementById(\"concatiner\")?.getBoundingClientRect()\n              .height\n          }px`,\n          width: \"100%\",\n          overflowX: \"scroll\",\n          position: \"absolute\",\n        }}\n      >\n        <Table\n          ref={table}\n          isLoading={LoadingCheckTable || loadingSearchByDepositSlip}\n          columns={checkColumns}\n          rows={checkCollection}\n          table_id={\"Temp_OR\"}\n          isSingleSelection={true}\n          isRowFreeze={true}\n          dataSelection={(selection, data, code) => {\n            const rowSelected = data.filter(\n              (item: any) => item.Temp_OR === selection[0]\n            )[0];\n            if (rowSelected === undefined || rowSelected.length <= 0) {\n              return;\n            }\n            const newSelected: any = {\n              Deposit: \"Check\",\n              Check_No: rowSelected.Check_No,\n              Check_Date: rowSelected.Check_Date,\n              Bank: rowSelected.Bank_Branch,\n              Amount: rowSelected.Amount,\n              Name: rowSelected.Client_Name,\n              RowIndex: rowSelected.Temp_OR,\n              DRCode: rowSelected.DRCode,\n              ORNo: rowSelected.OR_No,\n              DRRemarks: rowSelected.DRRemarks,\n              IDNo: rowSelected.ID_No,\n              TempOR: rowSelected.Temp_OR,\n              Short: rowSelected.Short,\n            };\n            setSelectedCollection((d) => {\n              d = [...d, newSelected];\n              return d;\n            });\n\n            const newSelectedCheckForDeposit: any = {\n              Bank: rowSelected.Bank_Branch,\n              Check_No: rowSelected.Check_No,\n              Amount: rowSelected.Amount,\n              TempOR: rowSelected.Temp_OR,\n            };\n            setCollectionForDeposit((d) => {\n              d = [...d, newSelectedCheckForDeposit];\n              return d;\n            });\n          }}\n        />\n      </Box>\n    </div>\n  );\n}\nfunction SelectedCollection() {\n  const {\n    selectedCollection,\n    setSelectedCollection,\n    setCollectionForDeposit,\n    loadingSearchByDepositSlip,\n  } = useContext(DepositContext);\n\n  const table = useRef<any>(null);\n\n  const selectedCollectionColumns = [\n    { field: \"Deposit\", headerName: \"Deposit\", flex: 1, minWidth: 170 },\n    { field: \"Check_No\", headerName: \"Check No\", flex: 1, minWidth: 170 },\n    {\n      field: \"Check_Date\",\n      headerName: \"Check Date\",\n      flex: 1,\n      minWidth: 170,\n    },\n    { field: \"Bank\", headerName: \"Bank/Branch\", flex: 1, minWidth: 200 },\n    { field: \"Amount\", headerName: \"Amount\", flex: 1, minWidth: 170 },\n    { field: \"Name\", headerName: \"Client Name\", flex: 1, minWidth: 400 },\n    // hide\n    { field: \"RowIndex\", headerName: \"RowIndex\", hide: true },\n    { field: \"DRCode\", headerName: \"DRCode\", hide: true },\n    { field: \"ORNo\", headerName: \"ORNo\", hide: true },\n    { field: \"DRRemarks\", headerName: \"DRRemarks\", hide: true },\n    { field: \"IDNo\", headerName: \"IDNo\", hide: true },\n    { field: \"TempOR\", headerName: \"TempOR\", hide: true },\n    { field: \"Short\", headerName: \"Short\", hide: true },\n  ];\n\n  return (\n    <div\n      style={{\n        marginTop: \"10px\",\n        width: \"100%\",\n        position: \"relative\",\n        flex: 1,\n      }}\n    >\n      <Box\n        style={{\n          height: `${\n            document.getElementById(\"concatiner\")?.getBoundingClientRect()\n              .height\n          }px`,\n          width: \"100%\",\n          overflowX: \"scroll\",\n          position: \"absolute\",\n        }}\n      >\n        <Table\n          ref={table}\n          isLoading={loadingSearchByDepositSlip}\n          columns={selectedCollectionColumns}\n          rows={selectedCollection}\n          table_id={\"TempOR\"}\n          isSingleSelection={true}\n          isRowFreeze={false}\n          dataSelection={(selection, data, code) => {\n            const rowSelected = data.filter(\n              (item: any) => item.TempOR === selection[0]\n            )[0];\n            if (rowSelected === undefined || rowSelected.length <= 0) {\n              return;\n            }\n\n            setSelectedCollection((d) => {\n              return d.filter((item: any) => item.TempOR !== selection[0]);\n            });\n            setCollectionForDeposit((d) => {\n              return d.filter((item: any) => item.TempOR !== selection[0]);\n            });\n          }}\n          getCellClassName={(params) => {\n            if (params.field === \"Deposit\" && params.value === \"Cash\") {\n              return \"cash\";\n            } else if (params.field === \"Deposit\" && params.value === \"Check\") {\n              return \"check\";\n            } else {\n              return \"\";\n            }\n          }}\n        />\n      </Box>\n    </div>\n  );\n}\nfunction CollectionForDeposit() {\n  const {\n    collectionForDeposit,\n    tableRows,\n    total,\n    setTotal,\n    TotalCashForDeposit,\n  } = useContext(DepositContext);\n  const table = useRef<any>(null);\n  useEffect(() => {\n    setTotal(\n      tableRows\n        .reduce((accumulator, currentValue) => {\n          return (\n            accumulator + parseFloat(currentValue.value3.replace(/,/g, \"\"))\n          );\n        }, 0.0)\n        .toLocaleString(\"en-US\", {\n          minimumFractionDigits: 2,\n          maximumFractionDigits: 2,\n        })\n    );\n  }, [tableRows, setTotal]);\n\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        gap: \"10px\",\n        height: \"auto \",\n      }}\n    >\n      <fieldset\n        style={{\n          flexDirection: \"column\",\n          gap: \"10px\",\n          padding: \"15px\",\n          border: \"1px solid #cbd5e1\",\n          borderRadius: \"5px\",\n          width: \"60%\",\n          position: \"relative\",\n        }}\n      >\n        <legend>Checks</legend>\n        <div style={{ marginTop: \"10px\", width: \"100%\", position: \"relative\" }}>\n          <Box\n            style={{\n              height: \"530px\",\n              width: \"100%\",\n              overflowX: \"scroll\",\n              position: \"absolute\",\n            }}\n          >\n            <Table\n              ref={table}\n              isLoading={false}\n              checkboxSelection={false}\n              columns={[\n                {\n                  field: \"Bank\",\n                  headerName: \"Bank/Branch\",\n                  flex: 1,\n                  minWidth: 170,\n                },\n                {\n                  field: \"Check_No\",\n                  headerName: \"Check No\",\n                  flex: 1,\n                  minWidth: 170,\n                },\n                {\n                  field: \"Amount\",\n                  headerName: \"Amount\",\n                  flex: 1,\n                  minWidth: 170,\n                },\n              ]}\n              rows={collectionForDeposit}\n              table_id={\"TempOR\"}\n              isSingleSelection={true}\n              isRowFreeze={false}\n              isRowSelectable={() => false}\n              footerChildren={() => {\n                return <FooterCollectionForDepositCheck />;\n              }}\n              footerPaginationPosition={\"left-right\"}\n              showFooterSelectedCount={false}\n            />\n          </Box>\n        </div>\n      </fieldset>\n      <fieldset\n        style={{\n          flexDirection: \"column\",\n          gap: \"10px\",\n          padding: \"15px\",\n          border: \"1px solid #cbd5e1\",\n          borderRadius: \"5px\",\n          alignSelf: \"flex-end\",\n          display: \"flex\",\n          width: \"40%\",\n        }}\n      >\n        <legend\n          style={{\n            color: total === TotalCashForDeposit ? \"green\" : \"#ec4899\",\n          }}\n        >\n          Cash ( {TotalCashForDeposit} )\n        </legend>\n        <table\n          style={{\n            border: \"2px solid black\",\n            borderCollapse: \"collapse\",\n            marginTop: \"10px\",\n            width: \"100%\",\n          }}\n        >\n          <colgroup>\n            <col style={{ width: \"140px\" }} />\n            <col style={{ width: \"100px\" }} />\n            <col style={{ width: \"140px\" }} />\n          </colgroup>\n          <thead>\n            <tr\n              style={{\n                borderBottom: \"2px solid black\",\n                fontSize: \"14px\",\n              }}\n            >\n              <th\n                style={{\n                  borderRight: \"2px solid black\",\n                }}\n              >\n                Denominations\n              </th>\n              <th\n                style={{\n                  borderRight: \"2px solid black\",\n                }}\n              >\n                QTY\n              </th>\n              <th\n                style={{\n                  borderRight: \"2px solid black\",\n                }}\n              >\n                Amount\n              </th>\n            </tr>\n          </thead>\n          <tbody>\n            {tableRows.map((items, idx) => {\n              return (\n                <TrComponent\n                  key={idx}\n                  value1={items.value1}\n                  value2={items.value2}\n                  value3={items.value3}\n                  idx={idx}\n                />\n              );\n            })}\n          </tbody>\n          <tfoot>\n            <tr\n              style={{\n                borderTop: \"2px solid black\",\n                height: \"50px\",\n              }}\n            >\n              <td colSpan={3}>\n                <div\n                  style={{\n                    display: \"flex\",\n                    justifyContent: \"flex-end\",\n                    padding: \"0 10px  \",\n                  }}\n                >\n                  <div\n                    style={{\n                      display: \"flex\",\n                      alignItems: \"center\",\n                      width: \"250px\",\n                    }}\n                  >\n                    <span style={{ fontSize: \"14px\", marginRight: \"5px\" }}>\n                      Total Cash Deposit:\n                    </span>\n                    <input\n                      style={{\n                        fontWeight: \"bold\",\n                        border: \"1px solid black\",\n                        textAlign: \"right\",\n                        fontSize: \"15px\",\n                        width: \"117px\",\n                      }}\n                      value={total}\n                      onChange={(e) => {\n                        setTotal(e.target.value);\n                      }}\n                      readOnly={true}\n                    />\n                  </div>\n                </div>\n              </td>\n            </tr>\n          </tfoot>\n        </table>\n      </fieldset>\n    </div>\n  );\n}\nfunction TrComponent({ value1, value2, value3, idx }: any) {\n  const { updateTableRowsInput } = useContext(DepositContext);\n\n  const [input1, setInput1] = useState(value1);\n  const [input2, setInput2] = useState(value2);\n  const [input3, setInput3] = useState(value3);\n  const InputStyle: CSSProperties = {\n    textAlign: \"right\",\n    height: \"28px\",\n    borderRight: \"none\",\n    borderLeft: \"none\",\n    borderTop: \"none\",\n    outline: \"none\",\n    borderBottom: \"1px solid #cbd5e1\",\n    padding: \"0 8px\",\n    width: \"100%\",\n  };\n\n  return (\n    <tr>\n      <td\n        style={{\n          borderRight: \"2px solid black\",\n        }}\n      >\n        <input\n          type=\"text\"\n          style={InputStyle}\n          value={input1}\n          onChange={(e) => setInput1(e.target.value)}\n          readOnly={true}\n        />\n      </td>\n      <td\n        style={{\n          borderRight: \"2px solid black\",\n          overflow: \"hidden\",\n        }}\n      >\n        <input\n          style={InputStyle}\n          value={input2}\n          onChange={(e) => {\n            let input1Value = input1;\n            setInput2(e.target.value);\n            if (input1.includes(\",\")) {\n              input1Value = input1.replace(/,/g, \"\").toString();\n            }\n            const valueFor3 = (\n              parseFloat(input1Value) *\n              (isNaN(parseInt(e.target.value)) ? 0 : parseInt(e.target.value))\n            ).toLocaleString(\"en-US\", {\n              minimumFractionDigits: 2,\n              maximumFractionDigits: 2,\n            });\n            setInput3(valueFor3);\n\n            updateTableRowsInput(\n              {\n                value1,\n                value2: e.target.value,\n                value3: valueFor3,\n              },\n              idx\n            );\n          }}\n        />\n      </td>\n      <td\n        style={{\n          borderRight: \"2px solid black\",\n        }}\n      >\n        <input\n          type=\"text\"\n          style={InputStyle}\n          value={input3}\n          onChange={(e) => setInput3(e.target.value)}\n          readOnly={true}\n        />\n      </td>\n    </tr>\n  );\n}\nfunction FooterCollectionForDepositCheck() {\n  const { collectionForDeposit } = useContext(DepositContext);\n  return (\n    <Box\n      sx={{\n        px: 2,\n        py: 1,\n        display: \"flex\",\n        justifyContent: \"flex-end\",\n        borderTop: \"2px solid #e2e8f0\",\n      }}\n    >\n      <strong>\n        Total:{\" \"}\n        {collectionForDeposit\n          .reduce((sum: number, obj: any) => {\n            return sum + parseFloat(obj.Amount.replace(/,/g, \"\"));\n          }, 0)\n          .toLocaleString(\"en-US\", {\n            minimumFractionDigits: 2,\n            maximumFractionDigits: 2,\n          })}\n      </strong>\n    </Box>\n  );\n}\nfunction setNewStateValue(dispatch: any, obj: any) {\n  Object.entries(obj).forEach(([field, value]) => {\n    dispatch({ type: \"UPDATE_FIELD\", field, value });\n  });\n}\n","import { useState, ReactElement } from \"react\";\n\nexport default function useMultipleComponent(steps: ReactElement[]) {\n  const [currentStepIndex, setCurrentStepIndex] = useState(0);\n\n  function next() {\n    setCurrentStepIndex((i) => {\n      if (i >= steps.length - 1) {\n        return i;\n      }\n      return i + 1;\n    });\n  }\n  function back() {\n    setCurrentStepIndex((i) => {\n      if (i <= 0) {\n        return i;\n      }\n      return i + 1;\n    });\n  }\n  function goTo(index: number) {\n    setCurrentStepIndex(index);\n  }\n  return {\n    step: steps[currentStepIndex],\n    goTo,\n    back,\n    next,\n    isFirstStep: currentStepIndex !== 0,\n    isLastStep: currentStepIndex === steps.length - 1,\n    currentStepIndex,\n  };\n}\n","import { useContext, useState } from \"react\";\nimport { useQuery } from \"react-query\";\nimport { AuthContext, User } from \"../components/AuthContext\";\nimport {\n  GridRowSelectionModel,\n  GridCellParams,\n  GridTreeNode,\n} from \"@mui/x-data-grid\";\nimport ModalWithTable from \"../components/ModalWithTable\";\nimport { flushSync } from \"react-dom\";\nimport { AxiosResponse, AxiosInstance } from \"axios\";\nimport { GridRowParams } from \"@mui/x-data-grid\";\ninterface QueryModalTableParamsType {\n  link?: {\n    url: string;\n    queryUrlName: string;\n  };\n  uniqueId: string;\n  queryKey: string;\n  responseDataKey: string;\n  columns: Array<any>;\n  onSelected?: (selectedRowData: Array<any>, data: Array<any>) => void;\n  onRemoveSelected?: (data: Array<any>) => void;\n  onSuccess?: (data: any) => void;\n  searchRef?: React.RefObject<HTMLInputElement>;\n  onCellKeyDown?: any;\n  onCloseFunction?: (search: any) => void;\n  CustomizeAxios?: (\n    myAxios: AxiosInstance,\n    user: User | null,\n    link: QueryModalTableParamsType[\"link\"],\n    search?: string\n  ) => Promise<AxiosResponse<any, any>>;\n  isRowSelectable?: ((params: GridRowParams<any>) => boolean) | undefined;\n  getCellClassName?:\n    | ((params: GridCellParams<any, any, any, GridTreeNode>) => string)\n    | undefined;\n}\n\nasync function CustomizeAxiosFunc(\n  myAxios: AxiosInstance,\n  user: User | null,\n  link: QueryModalTableParamsType[\"link\"],\n  search: string = \"\"\n) {\n  return myAxios.get(`${link?.url}?${link?.queryUrlName}=${search}`, {\n    headers: {\n      Authorization: `Bearer ${user?.accessToken}`,\n    },\n  });\n}\n\nconst useQueryModalTable = ({\n  link,\n  uniqueId,\n  queryKey,\n  responseDataKey,\n  columns,\n  onSelected = () => {},\n  onRemoveSelected = () => {},\n  onSuccess = () => {},\n  searchRef,\n  onCellKeyDown,\n  onCloseFunction = () => {},\n  CustomizeAxios = CustomizeAxiosFunc,\n  isRowSelectable,\n  getCellClassName,\n}: QueryModalTableParamsType) => {\n  const { myAxios, user } = useContext(AuthContext);\n  const [show, setShowModal] = useState(false);\n  const [rows, setRows] = useState<GridRowSelectionModel>([]);\n  async function customizeAxiostool(search: string = \"\") {\n    return await CustomizeAxios(myAxios, user, link, search);\n  }\n  const { isLoading, refetch } = useQuery({\n    queryKey: queryKey,\n    queryFn: async () => await customizeAxiostool(),\n    onSuccess: (res) => {\n      const response = res as any;\n      setRows(response.data[responseDataKey]);\n      onSuccess(response);\n    },\n    refetchOnWindowFocus: false,\n  });\n\n  const openModal = (search: string = \"\") => {\n    flushSync(() => {\n      setShowModal(true);\n    });\n    if (searchRef?.current) {\n      searchRef.current.value = search;\n      customizeAxiostool(search).then((res: any) => {\n        if (!res?.data.success) {\n          return alert(`Error : ${res?.data.message}`);\n        }\n        const response = res as any;\n        setRows(response.data[responseDataKey]);\n        if (searchRef?.current) searchRef.current.focus();\n      });\n    }\n  };\n\n  const closeModal = () => {\n    setShowModal(false);\n    if (onCloseFunction) {\n      onCloseFunction(searchRef?.current?.value);\n    }\n  };\n\n  const ModalComponent = (\n    <ModalWithTable\n      getCellClassName={getCellClassName}\n      searchRef={searchRef}\n      showModal={show}\n      onCloseModal={() => {\n        setShowModal(false);\n        if (onCloseFunction) {\n          onCloseFunction(searchRef?.current?.value);\n        }\n      }}\n      onClickCloseIcon={() => {\n        setShowModal(false);\n        if (onCloseFunction) {\n          onCloseFunction(searchRef?.current?.value);\n        }\n      }}\n      searchOnChange={(e) => {\n        // myAxios\n        //   .get(`${link.url}?${link.queryUrlName}=${e.target.value}`, {\n        //     headers: {\n        //       Authorization: `Bearer ${user?.accessToken}`,\n        //     },\n        //   })\n        //   .then((res: any) => {\n        //     if (!res?.data.success) {\n        //       return alert(`Error : ${res?.data.message}`);\n        //     }\n        //     const response = res as any;\n        //     setRows(response.data[responseDataKey]);\n        //   });\n      }}\n      onSearchKeyEnter={(value) => {\n        customizeAxiostool(value).then((res: any) => {\n          if (!res?.data.success) {\n            return alert(`Error : ${res?.data.message}`);\n          }\n          const response = res as any;\n          setRows(response.data[responseDataKey]);\n        });\n      }}\n      onCellKeyDown={onCellKeyDown}\n      height={300}\n      isLoading={isLoading}\n      queryKey={queryKey}\n      columns={columns}\n      onSelectionChange={(rowSelectionModel, data) => {\n        if (rowSelectionModel.length <= 0) {\n          return onRemoveSelected(data);\n        }\n        const selectedIDs = new Set(rowSelectionModel);\n        const selectedRowData = data.filter((row: any) => {\n          return selectedIDs.has(row[uniqueId].toString());\n        });\n        if (selectedRowData.length <= 0) return;\n        onSelected(selectedRowData, data);\n      }}\n      id={uniqueId}\n      rows={rows}\n      setRows={setRows}\n      isRowSelectable={isRowSelectable}\n    />\n  );\n\n  return {\n    show,\n    rows,\n    isLoading,\n    openModal,\n    closeModal,\n    ModalComponent,\n    refetch,\n  };\n};\n\nexport default useQueryModalTable;\n","import Swal from \"sweetalert2\";\n\nexport function codeCondfirmationAlert(props: {\n  cb: (userCodeConfirmation: string) => void;\n  isUpdate: boolean;\n  isConfirm?: () => void;\n  isDeclined?: () => void;\n  text?: string;\n}) {\n  Swal.fire({\n    title: `Are you sure!`,\n    html: props?.text\n      ? props?.text\n      : props.isUpdate\n      ? `Are you sure you want to make this change?`\n      : \"Are you sure you want to delete this?\",\n    icon: \"warning\",\n    input: \"text\",\n    inputAttributes: {\n      autocapitalize: \"off\",\n    },\n    showCancelButton: true,\n    confirmButtonText: \"Save\",\n    confirmButtonColor: \"green\",\n    showLoaderOnConfirm: true,\n    preConfirm: async (userCodeConfirmation) => {\n      try {\n        props.cb(userCodeConfirmation);\n      } catch (error) {\n        Swal.showValidationMessage(`\n            Request failed: ${error}\n          `);\n      }\n    },\n    allowOutsideClick: () => !Swal.isLoading(),\n  }).then((result) => {\n    if (result.isConfirmed) {\n      if (props.isConfirm) {\n        return props.isConfirm();\n      }\n    }\n    if (props.isDeclined) {\n      props.isDeclined();\n    }\n  });\n}\n\nexport function saveCondfirmationAlert(props: {\n  isConfirm?: () => void;\n  isDeclined?: () => void;\n  text?: string;\n}) {\n  Swal.fire({\n    title: \"Are you sure?\",\n    text: props?.text ? props?.text : \"Do you want to proceed with saving?\",\n    icon: \"warning\",\n    showCancelButton: true,\n    confirmButtonColor: \"#3085d6\",\n    cancelButtonColor: \"#d33\",\n    confirmButtonText: \"Yes, save it!\",\n  }).then((result) => {\n    if (result.isConfirmed) {\n      if (props.isConfirm) {\n        return props.isConfirm();\n      }\n    }\n    if (props.isDeclined) {\n      props.isDeclined();\n    }\n  });\n}\n","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\"\n}), 'Add');\nexports.default = _default;","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 5V2L8 6l4 4V7c3.31 0 6 2.69 6 6 0 2.97-2.17 5.43-5 5.91v2.02c3.95-.49 7-3.85 7-7.93 0-4.42-3.58-8-8-8zm-6 8c0-1.65.67-3.15 1.76-4.24L6.34 7.34C4.9 8.79 4 10.79 4 13c0 4.08 3.05 7.44 7 7.93v-2.02c-2.83-.48-5-2.94-5-5.91z\"\n}), 'RestartAlt');\nexports.default = _default;","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M17 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V7l-4-4zm-5 16c-1.66 0-3-1.34-3-3s1.34-3 3-3 3 1.34 3 3-1.34 3-3 3zm3-10H5V5h10v4z\"\n}), 'Save');\nexports.default = _default;","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z\"\n}), 'Search');\nexports.default = _default;","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}"],"names":["CustomDatePicker","_ref","label","name","onChange","value","onKeyDown","inputRef","datePickerRef","fullWidth","textField","_ref$minWidth","minWidth","rest","_objectWithoutProperties","_excluded","_jsx","LocalizationProvider","dateAdapter","AdapterDateFns","children","DatePicker","_objectSpread","floatingLabelStyle","color","ref","slotProps","size","InputLabelProps","sx","fieldset","borderColor","fontSize","top","style","position","left","transform","width","bgcolor","boxShadow","p","heigth","ModalWithTable","height","isLoading","columns","queryKey","onSelectionChange","rows","setRows","id","onCloseModal","showModal","onClickCloseIcon","searchOnChange","_ref$title","title","searchRef","_ref$onSearchKeyEnter","onCellKeyDown","onSearchKeyEnter","isRowSelectable","getCellClassName","mainId","generateRandomClass","Modal","open","onClose","_jsxs","Box","Typography","variant","component","mb","TextField","InputProps","endAdornment","InputAdornment","IconButton","onClick","_searchRef$current","current","edge","SearchIcon","type","e","_searchRef$current2","code","preventDefault","keyBoardSelectionTable","marginBottom","className","concat","Table","isSingleSelection","isRowFreeze","dataSelection","selection","data","table_id","right","CloseIcon","Math","floor","random","el","_rows$","document","querySelectorAll","classList","add","firstRowParent","querySelector","firstInput","focus","event","MouseEvent","bubbles","cancelable","view","window","dispatchEvent","addEventListener","es","key","remove","keyBoardUpDown","forEach","idx","_rows$idx","_rows","_rows$idx2","_rows2","length","TableContext","createContext","rowSelectionModel","footerChildren","footerPaginationPosition","showFooterSelectedCount","forwardRef","_ref$CustomFooterComp","CustomFooterComponent","DefaultooterComponent","_ref$checkboxSelectio","checkboxSelection","_ref$footerChildren","_ref$footerPagination","_ref$showFooterSelect","_useState","useState","_useState2","_slicedToArray","selectedRows","setSelectedRows","useImperativeHandle","removeSelection","getSelectedRows","filter","item","includes","freezeArray","Provider","DataGrid","slots","loadingOverlay","LinearProgress","footer","initialState","pagination","paginationModel","pageSize","loading","getRowId","row","col","hide","showCellVerticalBorder","showColumnVerticalBorder","rowHeight","columnHeaderHeight","pageSizeOptions","fill","background","padding","display","fontWeight","onRowSelectionModelChange","selectionSet","Set","s","has","__","rowNode","_toConsumableArray","disableVirtualization","Pagination","_ref2","page","onPageChange","apiRef","useGridApiContext","pageCount","useGridSelector","gridPageCountSelector","MuiPagination","count","newPage","CustomPagination","props","GridPagination","ActionsComponent","_useContext","useContext","columnGap","justifyContent","px","alignItems","flexDirection","flex","defaultCashBreakDown","value1","value2","value3","buttons","index","depositSlip","temp_depositSlip","depositdate","Date","Account_ID","Account_Name","Account_No","Account_Type","Desc","IDNo","Short","ShortName","Sub_ShortName","Sub_Acct","search","depositMode","Identity","reducer","state","action","_defineProperty","field","DepositContext","cashCollection","setCashCollection","checkCollection","setCheckCollection","selectedCollection","setSelectedCollection","collectionForDeposit","setCollectionForDeposit","tableRows","updateTableRowsInput","LoadingCashTable","LoadingCheckTable","setTotal","total","TotalCashForDeposit","loadingSearchByDepositSlip","Deposit","_queryFn","_queryFn2","_queryFn3","_mutationFn","_mutationFn2","_mutationFn3","_useReducer","useReducer","_useReducer2","dispatch","AuthContext","myAxios","user","_useMultipleComponent","useMultipleComponent","CashCollection","CheckCollection","SelectedCollection","CollectionForDeposit","currentStepIndex","step","goTo","tableRowsInputValue","setTableRowsInputValue","_useState3","_useState4","_useState5","_useState6","_useState7","_useState8","_useState9","_useState10","queryClient","useQueryClient","_useQuery","useQuery","queryFn","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","get","headers","Authorization","accessToken","abrupt","sent","stop","apply","arguments","refetchOnWindowFocus","onSuccess","cash","refetchCash","refetch","_useQuery2","_callee2","_context2","response","slipcode","collectionID","LoadingDepositSlipCode","RefetchDepositSlipCode","_useQuery3","_callee3","_context3","check","refetchCheck","_useState11","_useState12","useRef","bankDepositSearch","depositSearch","submitButton","reduce","accumulator","currentValue","Check_No","parseFloat","Amount","replace","toLocaleString","minimumFractionDigits","maximumFractionDigits","_useQueryModalTable","useQueryModalTable","link","url","queryUrlName","headerName","uniqueId","responseDataKey","onSelected","selectedRowData","console","log","newState","setNewStateValue","closeDepositBanks","ModalDepostitBanks","ModalComponent","openDepositBanks","openModal","isLoadingDepostitBanks","closeModal","_useMutation","useMutation","mutationKey","mutationFn","_x","_callee4","variables","_context4","post","res","resposnse","success","invalidateQueries","Swal","icon","message","timer","addDepositMutation","mutate","addDepositMutationLoading","_useMutation2","_x2","_callee5","_context5","updateDepositMutation","updateDepositMutationLoading","_useMutation3","_x3","_callee6","_context6","items","SlipCode","cashBreakDownToArray","getBankFromDeposit","cashBreakDownTotal","handleInputChange","target","searchByDepositSlip","_useQueryModalTable2","BankAccount","closeDeposit","onCloseFunction","ModalDeposit","openDeposit","isLoadingDeposit","_e$target","handleOnSave","then","result","wait","trim","codeCondfirmationAlert","isUpdate","cb","userCodeConfirmation","JSON","stringify","saveCondfirmationAlert","isConfirm","disabledFields","LoadingButton","Button","startIcon","AddIcon","disabled","SaveIcon","text","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","isConfirmed","gap","FormControl","zIndex","InputLabel","htmlFor","OutlinedInput","readOnly","department","RestartAltIcon","timeout","setTimeout","_datePickerRef$curren","_datePickerRef$curren2","click","clearTimeout","PolicyIcon","map","border","outline","backgroundColor","borderWidth","cursor","fontFamily","lineHeight","listStyle","margin","textAlign","transition","verticalAlign","whiteSpace","userSelect","touchAction","overflow","bottom","slideAnimation","fields","d","activeButton","_document$getElementB","_useContext2","table","useEffect","_table$current","TempOR","marginTop","getElementById","getBoundingClientRect","overflowX","align","cellClassName","rowSelected","Temp_OR","undefined","newSelected","Check_Date","Bank","Name","Client_Name","RowIndex","DRCode","ORNo","OR_No","DRRemarks","ID_No","_document$getElementB2","_useContext3","_table$current2","Bank_Branch","newSelectedCheckForDeposit","_document$getElementB3","_useContext4","params","_useContext5","borderRadius","FooterCollectionForDepositCheck","alignSelf","borderCollapse","borderBottom","borderRight","TrComponent","borderTop","colSpan","marginRight","_useState13","_useState14","input1","setInput1","_useState15","_useState16","input2","setInput2","_useState17","_useState18","input3","setInput3","InputStyle","borderLeft","input1Value","toString","valueFor3","isNaN","parseInt","py","sum","obj","Object","entries","_ref3","steps","setCurrentStepIndex","back","i","isFirstStep","isLastStep","CustomizeAxiosFunc","_CustomizeAxiosFunc","_args","_customizeAxiostool","_ref$onSelected","_ref$onRemoveSelected","onRemoveSelected","_ref$onSuccess","_ref$onCloseFunction","_ref$CustomizeAxios","CustomizeAxios","show","setShowModal","customizeAxiostool","_args2","flushSync","alert","_searchRef$current3","selectedIDs","_preConfirm","html","input","inputAttributes","autocapitalize","showLoaderOnConfirm","preConfirm","error","allowOutsideClick","isDeclined","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","source","excluded","getOwnPropertySymbols","sourceSymbolKeys","indexOf","prototype","propertyIsEnumerable","call"],"sourceRoot":""}