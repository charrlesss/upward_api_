{"version":3,"file":"static/js/8185.81346fb3.chunk.js","mappings":"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","sources":["components/Helmet.tsx","components/UpwardTable.tsx","hooks/useUpwardTableModal.tsx","feautures/Admin/Task/Accounting/PostDateChecks.tsx"],"sourcesContent":["\r\nimport { Helmet } from \"react-helmet\";\r\n\r\nconst PageHelmet = ({ title = '' }: { title: string }) => {\r\n    const imgUrl = process.env.REACT_APP_IMAGE_URL;\r\n    return (\r\n        <Helmet>\r\n            <title>{title}</title>\r\n            <link rel=\"icon\" type=\"image/png\" href={`${imgUrl}/logo.png`} />\r\n        </Helmet>\r\n    );\r\n};\r\n\r\nexport default PageHelmet;","import React, {\n  useState,\n  useRef,\n  useEffect,\n  forwardRef,\n  useImperativeHandle,\n} from \"react\";\nimport \"../style/datagridview.css\";\nimport { Pagination } from \"@mui/material\";\ninterface UpwardTablePropsType {\n  rows: Array<any>;\n  column: Array<any>;\n  width: number;\n  height: number;\n  dataReadOnly: boolean;\n  onSelectionChange?: (row: Array<any>, rowIndex: number) => void;\n  onKeyDown?: (row: Array<any>, key: string, rowIndex: number) => void;\n  isMultipleSelect?: boolean;\n  freeze?: boolean;\n  inputsearchselector?: string;\n  isRowSelectable?: boolean;\n  unSelectable?: (row: any) => boolean;\n  isLoading?: boolean,\n  onRightClick?: (rowSelected: any, event: any) => any\n}\nconst UpwardTable = forwardRef(\n  (\n    {\n      rows,\n      column,\n      width,\n      height,\n      dataReadOnly,\n      onSelectionChange = () => { },\n      isMultipleSelect = false,\n      freeze = false,\n      onKeyDown,\n      inputsearchselector = \".search-input-up-on-key-down\",\n      isRowSelectable = true,\n      unSelectable = () => false,\n      isLoading,\n      onRightClick\n    }: UpwardTablePropsType,\n    UpwardTableRef\n  ) => {\n    const [pages, setPages] = useState<Array<any>>([])\n    const [pageNumber, setPageNumber] = useState(0)\n    const onSelectionChangeRef = useRef(onSelectionChange);\n    const onKeyDownRef = useRef(onKeyDown);\n    const [columns, setColumns] = useState(column.filter((itm) => !itm.hide));\n    const [hoveredColumn, setHoveredColumn] = useState(null);\n    const [selectedRows, setSelectedRows] = useState<Array<number>>([0]);\n    const [lastSelectedRowIndex, setLastSelectedRowIndex] = useState(0);\n    const [selectedItems, setSelectedItems] = useState<Array<number>>([]);\n    const divRef = useRef<HTMLDivElement>(null);\n    const [_clickTimeout, _setClickTimeout] = useState(null);\n\n\n    useEffect(() => {\n      const _pages = formatArrayIntoChunks(rows, 100)\n      setPages(_pages)\n    }, [rows])\n\n    const startResize = (index: any, e: any) => {\n      e.preventDefault();\n      e.stopPropagation();\n\n      const startX = e.clientX;\n      const startWidth = columns[index].width;\n\n      const doDrag = (moveEvent: any) => {\n        const newWidth = startWidth + (moveEvent.clientX - startX);\n        const updatedColumns = [...columns];\n        updatedColumns[index].width = newWidth > 50 ? newWidth : 50; // Set minimum column width\n        setColumns(updatedColumns);\n      };\n\n      const stopDrag = () => {\n        document.removeEventListener(\"mousemove\", doDrag);\n        document.removeEventListener(\"mouseup\", stopDrag);\n      };\n\n      document.addEventListener(\"mousemove\", doDrag);\n      document.addEventListener(\"mouseup\", stopDrag);\n    };\n    const handleMouseEnter = (index: any) => {\n      setHoveredColumn(index); // Set the hovered column index\n    };\n    const handleMouseLeave = () => {\n      setHoveredColumn(null); // Reset hovered column index\n    };\n    const handleRowClick = (\n      rowIndex: any,\n      event: React.MouseEvent<HTMLDivElement, MouseEvent>\n    ) => {\n      function getIndexAndData(selectedRowData: Array<any>) {\n        const filterSelectrowData = selectedRowData.map((d, idx) => {\n          if (!unSelectable(d)) {\n            return { idx, data: d };\n          }\n          return null;\n        });\n        const removeNullValue = filterSelectrowData.filter((d) => d !== null);\n        const data = removeNullValue.map((itm: any) => itm.data);\n        const newSelectedRowsFiltered = removeNullValue.map(\n          (itm: any) => itm.idx\n        );\n        return { newSelectedRowsFiltered, data };\n      }\n\n      if (!isMultipleSelect) {\n        // Single selection mode\n        setSelectedRows([rowIndex]);\n      } else {\n        // Multiple selection mode\n        if (event.shiftKey && lastSelectedRowIndex !== null) {\n          // Shift + Click: Select range between last clicked row and current clicked row\n          const rangeStart = Math.min(lastSelectedRowIndex, rowIndex);\n          const rangeEnd = Math.max(lastSelectedRowIndex, rowIndex);\n          const newSelectedRows: Array<number> = [];\n          for (let i = rangeStart; i <= rangeEnd; i++) {\n            if (!selectedRows.includes(i)) {\n              newSelectedRows.push(i);\n            }\n          }\n\n          let selectedItemsParams: Array<number> = [\n            ...selectedItems,\n            ...newSelectedRows,\n          ];\n\n          setSelectedRows([...selectedRows, ...newSelectedRows]);\n          const selectedRowData = rows.filter((d, idx) =>\n            selectedItemsParams.includes(idx)\n          );\n          const { newSelectedRowsFiltered } =\n            getIndexAndData(selectedRowData);\n\n          setSelectedItems(newSelectedRowsFiltered);\n          // onSelectionChangeRef.current(data, rowIndex);\n        } else if (event.ctrlKey || event.metaKey) {\n          // Ctrl (or Cmd on macOS) + Click: Toggle row selection\n          if (selectedRows.includes(rowIndex) && !freeze) {\n            setSelectedRows(selectedRows.filter((i) => i !== rowIndex));\n            setSelectedItems((d) => {\n              d = d.filter((i) => i !== rowIndex);\n              return d;\n            });\n            let selectedItemsParams: Array<number> = selectedItems.filter(\n              (i) => i !== rowIndex\n            );\n\n            setSelectedItems(selectedItemsParams);\n            // onSelectionChangeRef.current(selectedRowData, rowIndex);\n          } else {\n            setSelectedRows([...selectedRows, rowIndex]);\n            setSelectedItems((d) => {\n              d.push(rowIndex);\n              return d;\n            });\n            let selectedItemsParams: Array<number> = [\n              ...selectedItems,\n              rowIndex,\n            ];\n\n            setSelectedItems(selectedItemsParams);\n            // onSelectionChangeRef.current(selectedRowData, rowIndex);\n          }\n        } else {\n          // Regular click in multiple selection mode: Single click to select a row\n          setSelectedRows([rowIndex]);\n        }\n      }\n      setLastSelectedRowIndex(rowIndex); // Update the last selected index\n    };\n    const handleRowDoubleClick = (\n      rowIndex: any,\n      event: React.MouseEvent<HTMLDivElement, MouseEvent>\n    ) => {\n      const row = rows[rowIndex];\n      if (unSelectable(row)) return;\n      if (!isRowSelectable) return;\n\n\n      let selectedItemsParams: Array<number> = [];\n      if (isMultipleSelect) {\n        selectedItemsParams = [...selectedItems, ...selectedRows];\n      } else {\n        selectedItemsParams = [rowIndex];\n      }\n\n\n      if (selectedItems.includes(rowIndex) && !freeze) {\n        selectedItemsParams = selectedItems.filter((i) => i !== rowIndex);\n        setSelectedItems(selectedItemsParams);\n        onSelectionChangeRef.current([], rowIndex);\n        return;\n      }\n\n      setSelectedItems(selectedItemsParams);\n      onSelectionChangeRef.current([row], rowIndex);\n    };\n    const handleKeyDown = (e: any) => {\n\n      if (e.key === \"ArrowDown\") {\n        e.preventDefault();\n        setSelectedRows((prevIndex: any) => {\n          if (prevIndex[prevIndex.length - 1] === null) return [0];\n          if (prevIndex[prevIndex.length - 1] >= rows.length - 1) {\n            return [rows.length - 1];\n          }\n          const newPrevIndex = prevIndex[prevIndex.length - 1] + 1;\n          const row = document.querySelector(`.row-${newPrevIndex}`);\n          row?.querySelector(\"input\")?.focus();\n\n          row?.scrollIntoView({ block: \"end\", behavior: \"smooth\" });\n          return [newPrevIndex];\n        });\n      } else if (e.key === \"ArrowUp\") {\n        e.preventDefault();\n\n        if (selectedRows[selectedRows.length - 1] === 0) {\n          const input = document.querySelector(\n            inputsearchselector\n          ) as HTMLInputElement;\n          if (input && input.tagName === \"INPUT\") {\n            input?.focus();\n          } else if (input && input.tagName === \"DIV\") {\n            const divInput = document.querySelector(\n              `${inputsearchselector} input`\n            ) as HTMLInputElement;\n\n            divInput?.focus();\n          }\n        }\n\n        setSelectedRows((prevIndex: any) => {\n          if (prevIndex[prevIndex.length - 1] === 0) return [0];\n          const newPrevIndex = prevIndex[prevIndex.length - 1] - 1;\n          const row = document.querySelector(`.row-${newPrevIndex}`);\n\n          row?.scrollIntoView({ block: \"end\", behavior: \"smooth\" });\n          row?.querySelector(\"input\")?.focus();\n          return [newPrevIndex];\n        });\n      }\n\n    };\n    const handleRowKeyDown = (e: any) => {\n      e.stopPropagation()\n\n      if (e.key === \"Enter\" || e.key === \"NumpadEnter\") {\n        e.preventDefault();\n        if (!isRowSelectable) return;\n\n        let selectedItemsParams: Array<number> = [];\n        const rowIndex = selectedRows[selectedRows.length - 1];\n        if (isMultipleSelect) {\n          selectedItemsParams = [...selectedItems, ...selectedRows];\n        } else {\n          selectedItemsParams = [rowIndex];\n        }\n        const row = rows[selectedItemsParams[selectedItemsParams.length - 1]];\n        if (unSelectable(row)) {\n          return;\n        }\n\n        if (selectedItems.includes(rowIndex) && !freeze) {\n          selectedItemsParams = selectedItems.filter((i) => i !== rowIndex);\n          setSelectedItems(selectedItemsParams);\n          onSelectionChangeRef.current([], rowIndex);\n          return;\n        }\n\n        setSelectedItems(selectedItemsParams);\n        onSelectionChangeRef.current([row], rowIndex);\n      } else if (e.key === \"Delete\" || e.key === \"Backspace\") {\n        if (!isRowSelectable) return;\n        const rowIndex = selectedRows[selectedRows.length - 1];\n\n        const selectedRowData = rows.filter((d, idx) =>\n          selectedRows.includes(idx)\n        );\n\n        if (onKeyDownRef?.current) {\n          onKeyDownRef?.current(selectedRowData, e.key, rowIndex);\n        }\n      }\n    }\n    useImperativeHandle(UpwardTableRef, () => ({\n      resetTableSelected: () => {\n        setSelectedRows([0]);\n        setLastSelectedRowIndex(0);\n        setSelectedItems([]);\n        if (rows.length > 0) {\n          const row = document.querySelector(`.row-${0}`);\n          row?.scrollIntoView({ block: \"end\", behavior: \"smooth\" });\n        }\n      },\n      getSelectedIndex: () => {\n        return selectedItems[0];\n      },\n      getSelectedRows: () => {\n        return rows.filter((d, idx) => selectedItems.includes(idx));\n      },\n      getFirstColumn: () => {\n        return rows.filter((d, idx) => selectedItems.includes(idx));\n      },\n      getParentElement: () => {\n        return divRef.current\n      },\n      getSelectedRowsOnClick: () => {\n        return selectedRows[0];\n      },\n      setSelectRows: (indx: number) => {\n        return setSelectedItems([indx])\n      },\n    }));\n\n    const handleRightClick = (event: any, rowIndex: number) => {\n      event.preventDefault();\n      const rowSelected = rows[rowIndex]\n      if (onRightClick) {\n        onRightClick(rowSelected, event)\n      }\n    };\n\n\n\n    return (\n      <div\n        style={{\n          display: \"flex\",\n          justifyContent: \"center\",\n        }}\n        onKeyDown={handleKeyDown}\n      >\n        <div>\n          <div className=\"table-frame-color\">\n            <div\n              style={{\n                display: \"flex\",\n                flexDirection: \"column\",\n                width: `${width - 10}px        `,\n                height: `${height - 135}px`,\n                minHeight: \"270px\"\n              }}\n              className=\"table-frame\"\n            >\n              <div className=\"table-panel\">\n                <div ref={divRef} className={`grid-container `} tabIndex={-1}>\n                  <div\n                    className=\"grid-row grid-header\"\n                    style={{\n                      position: \"sticky\",\n                      zIndex: \"10\",\n                      top: \"-1px\",\n                      background: \"white\",\n                    }}\n                  >\n                    {columns.map((col: any, index: number) => (\n                      <div\n                        key={index}\n                        className={`grid-cell header-cell ${hoveredColumn === index ? `highlight-column` : \"\"\n                          }`} // Add the class if hovered\n                        style={{ width: col.width, height: \"20px\", }}\n                      >\n                        <input\n                          style={{ fontWeight: \"bold\" }}\n                          defaultValue={col.headerName}\n                          readOnly\n                          onChange={(e) => { }}\n                        />\n                        <div\n                          className=\"resize-handle\"\n                          onMouseDown={(e) => startResize(index, e)}\n                          onMouseEnter={(e) => {\n                            e.preventDefault();\n                            handleMouseEnter(index);\n                          }} // On hover\n                          onMouseLeave={(e) => {\n                            e.preventDefault();\n                            handleMouseLeave();\n                          }} // On mouse leave\n                        />\n                      </div>\n                    ))}\n                  </div>\n                  {pages[pageNumber]?.map((row: any, rowIndex: any) => (\n                    <div\n                      className={`grid-row row-${rowIndex}`} // Highlight selected row\n                      key={rowIndex}\n                      onClick={(e) => handleRowClick(rowIndex, e)}\n                      onDoubleClick={(e) => {\n                        // e.stopPropagation()\n\n                        if (_clickTimeout) {\n                          clearTimeout(_clickTimeout);\n                          _setClickTimeout(null);\n                        }\n\n                        const timeoutId: any = setTimeout(() => {\n                          handleRowDoubleClick(rowIndex, e)\n                        }, 200);\n\n                        _setClickTimeout(timeoutId);\n\n\n\n                      }}\n                      onKeyDown={(e) => {\n\n                        // e.stopPropagation()\n\n                        if (_clickTimeout) {\n                          clearTimeout(_clickTimeout);\n                          _setClickTimeout(null);\n                        }\n\n                        const timeoutId: any = setTimeout(() => {\n                          handleRowKeyDown(e)\n                        }, 200);\n\n                        _setClickTimeout(timeoutId);\n\n\n                      }}\n                      onContextMenu={(e) => handleRightClick(e, rowIndex)}\n                    >\n                      {columns.map((col: any, colIndex: number) => (\n                        <div\n                          key={colIndex}\n                          style={{ width: col.width }}\n                          className={`grid-cell ${hoveredColumn === colIndex ? `highlight-column` : \"\"} row-${rowIndex} col-${colIndex}`}\n                        >\n                          <input\n                            value={row[col.field]}\n                            onChange={(e) => { }}\n                            readOnly={dataReadOnly}\n                            className={`${selectedRows.includes(rowIndex)\n                              ? \"selected-row\"\n                              : \"\"\n                              } ${selectedItems.includes(rowIndex)\n                                ? \"selected-items\"\n                                : \"\"\n                              }\n                          ${col.type === \"number\" ? \"number\" : \"text\"}\n                          `}\n                          />\n                          <div\n                            className=\"resize-handle\"\n                            onMouseDown={(e) => {\n                              e.preventDefault();\n                              startResize(colIndex, e);\n                            }}\n                            onMouseEnter={(e) => {\n                              e.preventDefault();\n                              handleMouseEnter(colIndex);\n                            }} // On hover\n                            onMouseLeave={(e) => {\n                              e.preventDefault();\n                              handleMouseLeave();\n                            }} // On mouse leave\n                          />\n                        </div>\n                      ))}\n                    </div>\n                  ))}\n                </div>\n              </div>\n            </div>\n\n            {isLoading && <div className=\"table-loading\">\n              <div className=\"loader\"></div>\n            </div>}\n          </div>\n          <div className=\"table-panel-footer\" >\n            <div>Records : {rows?.length}</div>\n            <div><Pagination count={pages.length} onChange={(e, value) => {\n              setPageNumber(value - 1)\n            }} />\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n);\nfunction formatArrayIntoChunks(arr: Array<any>, chunkSize = 100) {\n  let result = [];\n\n  for (let i = 0; i < arr.length; i += chunkSize) {\n    // Use slice to create chunks of 'chunkSize'\n    result.push(arr.slice(i, i + chunkSize));\n  }\n  return result;\n}\nexport { UpwardTable, };\n","import { useEffect, useRef, useState, useId } from \"react\";\nimport \"../style/upwardtablemodel.css\";\nimport { TextInput } from \"../components/UpwardFields\";\nimport { UpwardTable } from \"../components/UpwardTable\";\nimport { throttle } from \"lodash\";\nimport { AxiosInstance } from \"axios\";\nimport { User } from \"../components/AuthContext\";\nimport { useMutation } from \"react-query\";\nimport { wait } from \"../lib/wait\";\nimport { IconButton, Modal } from '@mui/material'\nimport CloseIcon from \"@mui/icons-material/Close\";\n\n\ninterface UseUpwardTableModalProps {\n  myAxios: AxiosInstance;\n  user: User | null;\n  column: Array<any>;\n  link: {\n    url: string;\n    queryUrlName: string;\n  };\n  onSelectionChange: (selectedRow: any) => void;\n  onModalClose?: () => void;\n  responseDataKey: string;\n}\nexport const useUpwardTableModal = ({\n  myAxios,\n  user,\n  column,\n  link,\n  onSelectionChange,\n  responseDataKey,\n  onModalClose = () => { },\n}: UseUpwardTableModalProps) => {\n  const id = useId();\n  const inputSearchRef = useRef<HTMLInputElement>(null);\n  const tableRef = useRef<any>(null);\n  const parentRef = useRef<any>(null);\n  const [show, setShowModal] = useState(false);\n  const [rows, setRows] = useState([]);\n  const { isLoading, mutate } = useMutation({\n    mutationKey: id,\n    mutationFn: async (variable: any) =>\n      await myAxios.get(\n        `${link?.url}?${link?.queryUrlName}=${variable.search}`,\n        {\n          headers: {\n            Authorization: `Bearer ${user?.accessToken}`,\n          },\n        }\n      ),\n    onSuccess: (res) => {\n      const response = res as any;\n      setRows(response.data[responseDataKey]);\n    },\n  });\n  const performSearch = (query: string) => {\n    if (query === \"\") {\n      mutate({ search: query });\n    }\n  };\n  // Throttle the search function to limit it to once every 500ms\n  const throttledSearch = throttle((query) => performSearch(query), 500)\n\n  const openModal = (search: string) => {\n    mutate({ search: search });\n    setShowModal(true);\n    setTimeout(() => {\n      if (inputSearchRef.current) {\n        inputSearchRef.current.value = search;\n      }\n      inputSearchRef.current?.focus();\n    }, 150);\n  };\n  const closeModal = () => {\n    setShowModal(false);\n    onModalClose();\n  };\n\n  const width = 460;\n  const height = 530;\n\n  useEffect(() => {\n    if (show && parentRef.current) {\n      wait(1050).then(() => {\n        parentRef.current?.focus();\n      })\n    }\n  }, [show, parentRef]);\n\n  const ModalComponent = (\n    <Modal\n      open={show}\n      onClose={() => {\n        setShowModal(false);\n      }}\n      aria-labelledby=\"modal-modal-title\"\n      aria-describedby=\"modal-modal-description\"\n    >\n      <div style={{\n        position: \"absolute\",\n        top: \"50%\",\n        left: \"50%\",\n        transform: \"translate(-50%, -50%)\",\n        width: \"auto\",\n        background: \"#fff\",\n        paddingTop: \"30px\",\n        paddingBottom: \"20px\",\n        paddingLeft: \"10px\",\n        paddingRight: \"10px\"\n      }}>\n        <div >\n          <TextInput\n            label={{ style: { display: \"none\" } }}\n            input={{\n              className: \"search-input-up-on-key-down\",\n              type: \"text\",\n              style: { width: \"100%\", marginBottom: \"20px\" },\n              onChange: (e) => {\n                e.preventDefault();\n                throttledSearch(e.currentTarget.value);\n              },\n              onKeyDown: (e) => {\n                if (e.key === \"Enter\" || e.key === \"NumpadEnter\") {\n                  e.preventDefault();\n                  mutate({ search: (e.target as any).value });\n                }\n                if (e.key === \"ArrowDown\") {\n                  e.preventDefault();\n                  const datagridview = tableRef.current.getParentElement().querySelector(\n                    `.grid-container .row-0.col-0 input`\n                  ) as HTMLDivElement;\n                  setTimeout(() => {\n                    if (datagridview)\n                      datagridview.focus();\n                  }, 100)\n                }\n              },\n            }}\n            inputRef={inputSearchRef}\n          />\n          <UpwardTable\n            ref={tableRef}\n            rows={rows}\n            column={column.filter((itm) => !itm.hide)}\n            width={width}\n            height={height}\n            dataReadOnly={true}\n            onSelectionChange={onSelectionChange}\n          />\n\n          <IconButton\n            style={{\n              position: \"absolute\",\n              top: \"5px\",\n              right: \"10px\",\n            }}\n            aria-label=\"search-client\"\n            onClick={closeModal}\n          >\n            <CloseIcon style={{ fontSize: \"15px\" }} />\n          </IconButton>\n\n\n        </div>\n      </div>\n\n    </Modal>\n\n  );\n\n  return {\n    Modal: ModalComponent,\n    openModal,\n    closeModal,\n    isLoading,\n  };\n};\n","import React, {\n  useContext,\n  useState,\n  useRef,\n  useEffect,\n  useCallback,\n  useImperativeHandle,\n  forwardRef,\n} from \"react\";\nimport {\n  Box,\n  Typography,\n  Button,\n  IconButton,\n  Modal,\n  MenuItem,\n  Menu,\n} from \"@mui/material\";\nimport AddIcon from \"@mui/icons-material/Add\";\nimport { useMutation, useQuery } from \"react-query\";\nimport Swal from \"sweetalert2\";\nimport SaveIcon from \"@mui/icons-material/Save\";\nimport { AuthContext } from \"../../../../components/AuthContext\";\nimport PersonSearchIcon from \"@mui/icons-material/PersonSearch\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport { flushSync } from \"react-dom\";\nimport { LoadingButton } from \"@mui/lab\";\nimport RestartAltIcon from \"@mui/icons-material/RestartAlt\";\nimport DownloadIcon from \"@mui/icons-material/Download\";\nimport {\n  codeCondfirmationAlert,\n  saveCondfirmationAlert,\n} from \"../../../../lib/confirmationAlert\";\nimport DriveFolderUploadIcon from \"@mui/icons-material/DriveFolderUpload\";\nimport { DisplayFile, checkFile } from \"../Claims/Claims\";\nimport ReactDOMServer from \"react-dom/server\";\nimport { grey } from \"@mui/material/colors\";\nimport { useUpwardTableModal } from \"../../../../hooks/useUpwardTableModal\";\nimport {\n  TextAreaInput,\n  TextFormatedInput,\n  TextInput,\n} from \"../../../../components/UpwardFields\";\nimport AccountBalanceIcon from \"@mui/icons-material/AccountBalance\";\nimport { NumericFormat } from \"react-number-format\";\nimport { format } from \"date-fns\";\nimport PageHelmet from \"../../../../components/Helmet\";\nimport { wait } from \"@testing-library/user-event/dist/utils\";\nimport SearchIcon from \"@mui/icons-material/Search\";\nimport {\n  DataGridViewReact,\n  useUpwardTableModalSearchSafeMode,\n} from \"../../../../components/DataGridViewReact\";\nimport { Loading } from \"../../../../components/Loading\";\nimport AccountBoxIcon from \"@mui/icons-material/AccountBox\";\n\nexport const reducer = (state: any, action: any) => {\n  switch (action.type) {\n    case \"UPDATE_FIELD\":\n      return {\n        ...state,\n        [action.field]: action.value,\n      };\n    default:\n      return state;\n  }\n};\nexport const pdcColumn = [\n  { key: \"Check_No\", label: \"Check No.\", width: 150 },\n  { key: \"Check_Date\", label: \"Check Date\", width: 150 },\n  { key: \"Check_Amnt\", label: \"Amount\", width: 150, type: \"number\" },\n  { key: \"BankName\", label: \"Bank\", width: 200 },\n  { key: \"Branch\", label: \"Branch\", width: 200 },\n  {\n    key: \"Check_Remarks\",\n    label: \"Checked Remarks\",\n    width: 350,\n  },\n  { key: \"Deposit_Slip\", label: \"Deposit Slip\", width: 150 },\n  { key: \"DateDeposit\", label: \"Date Deposit\", width: 150 },\n  { key: \"OR_No\", label: \"OR Num\", width: 150 },\n  { key: \"BankCode\", label: \"Bank Code\", width: 150, hide: true },\n];\nexport const pdcSearchColumn = [\n  { field: \"Date\", headerName: \"Date Received\", width: 160 },\n  { field: \"Ref_No\", headerName: \"Ref No.\", width: 160 },\n  {\n    field: \"Name\",\n    headerName: \"Name\",\n    flex: 1,\n  },\n];\nexport const pdcBanksColumn = [\n  { field: \"Bank_Code\", headerName: \"Code\", width: 130 },\n  { field: \"Bank\", headerName: \"Bank Name\", flex: 1 },\n];\n\nexport default function PostDateChecks() {\n  const modalCheckRef = useRef<any>(null);\n  const tableRef = useRef<any>(null);\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\n  const open = Boolean(anchorEl);\n  const handleClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n    setAnchorEl(event.currentTarget);\n  };\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n  const [isDragging, setIsDragging] = useState(false);\n  const [selectedFiles, setSelectedFiles] = useState<Array<File>>([]);\n  const [showModal, setShowModal] = useState(false);\n\n  const searchInputRef = useRef<HTMLInputElement>(null);\n\n  const [hasSelectedRow, setHasSelectedRow] = useState(null);\n  const [pdcMode, setPdcMode] = useState(\"\");\n\n  const { myAxios, user } = useContext(AuthContext);\n  const searchRef = useRef<HTMLInputElement>(null);\n\n  // pdc form save button\n  const fileInputRef = useRef<HTMLInputElement>(null);\n  const savePDCButtonRef = useRef<HTMLButtonElement>(null);\n\n\n\n\n\n  const addRefButton = useRef<HTMLButtonElement>(null);\n\n  const subRefNoRef = useRef(\"\");\n  const PNoRef = useRef(\"\");\n  const subAccountRef = useRef(\"\");\n\n  const refNoRef = useRef<HTMLInputElement>(null);\n  const dateRef = useRef<HTMLInputElement>(null);\n  const remakrsRef = useRef<HTMLTextAreaElement>(null);\n  const pnRef = useRef<HTMLInputElement>(null);\n  const branchRef = useRef<HTMLInputElement>(null);\n  const clientnameRef = useRef<HTMLTextAreaElement>(null);\n\n  const { isLoading: newRefNumberLoading, refetch: refetchNewRefNumber } =\n    useQuery({\n      queryKey: \"new-ref-number\",\n      queryFn: async () => {\n        return await myAxios.get(\"/task/accounting/pdc-new-ref-number\", {\n          headers: {\n            Authorization: `Bearer ${user?.accessToken}`,\n          },\n        });\n      },\n      refetchOnWindowFocus: false,\n      onSuccess: (res) => {\n        const response = res as any;\n        wait(100).then(() => {\n          subRefNoRef.current = response.data.RefNo[0].pdcID;\n          if (refNoRef.current) {\n            refNoRef.current.value = response.data.RefNo[0].pdcID;\n          }\n        });\n      },\n    });\n\n  const { mutate, isLoading: loadingAddNew } = useMutation({\n    mutationKey: \"update-pdc\",\n    mutationFn: async (variables: any) => {\n      if (pdcMode === \"update\") {\n        delete variables.mode;\n        return await myAxios.post(\"/task/accounting/update-pdc\", variables, {\n          headers: {\n            Authorization: `Bearer ${user?.accessToken}`,\n          },\n        });\n      }\n      delete variables.mode;\n      return await myAxios.post(\"/task/accounting/add-pdc\", variables, {\n        headers: {\n          Authorization: `Bearer ${user?.accessToken}`,\n        },\n      });\n    },\n    onSuccess: (res) => {\n      if (res.data.success) {\n        resetPDC();\n        return Swal.fire({\n          position: \"center\",\n          icon: \"success\",\n          title: res.data.message,\n          showConfirmButton: false,\n          timer: 1500,\n        });\n      }\n\n      Swal.fire({\n        position: \"center\",\n        icon: \"error\",\n        title: res.data.message,\n        showConfirmButton: false,\n        timer: 1500,\n      });\n    },\n  });\n  //selecte search\n\n  const { mutate: mutateSelectedSearch, isLoading: isLoadingSelectedSearch } =\n    useMutation({\n      mutationKey: \"get-search-pdc-check\",\n      mutationFn: async (variables: any) =>\n        await myAxios.post(\"/task/accounting/get-search-pdc-check\", variables, {\n          headers: {\n            Authorization: `Bearer ${user?.accessToken}`,\n          },\n        }),\n      onSuccess: async (res) => {\n        if (!res?.data.success) {\n          return alert(`Error : ${res?.data.message}`);\n        }\n\n        const response = res as any;\n        const Ref_No = response.data.getSearchPDCCheck[0].Ref_No;\n        if (response.data.upload[0]) {\n          const uploadFiles = JSON.parse(response.data.upload[0]?.upload);\n          const newObjContainerBasic = await formatDataToDocument(\n            uploadFiles,\n            `${process.env.REACT_APP_IMAGE_URL}pdc/${Ref_No}`\n          );\n          const fileSelected = await Promise.all(newObjContainerBasic);\n          setSelectedFiles(fileSelected);\n        }\n        async function formatDataToDocument(\n          dataDocument: Array<any>,\n          url: string\n        ) {\n          const newObjContainer: Array<any> = [];\n          for (let index = 0; index < dataDocument.length; index++) {\n            const basicItem = dataDocument[index];\n            const mainURL = `${url}/${basicItem.uniqueFilename}`;\n            const response = await fetch(mainURL);\n            const blob = await response.blob();\n            const file = new File([blob], basicItem.fileName, {\n              type: basicItem.fileType,\n            });\n            const reader = new FileReader();\n            newObjContainer.push(\n              new Promise((resolve, reject) => {\n                reader.onload = function (event) {\n                  resolve(file);\n                };\n                reader.onerror = function (event) {\n                  reject(new Error(\"Error reading file: \" + file.name));\n                };\n                reader.readAsDataURL(file);\n              })\n            );\n          }\n          return newObjContainer;\n        }\n\n        tableRef.current.setDataFormated(response.data.getSearchPDCCheck);\n\n        if (refNoRef.current) {\n          refNoRef.current.value = response.data.getSearchPDCCheck[0].Ref_No;\n        }\n        if (clientnameRef.current) {\n          clientnameRef.current.value = response.data.getSearchPDCCheck[0].Name;\n        }\n        if (dateRef.current) {\n          dateRef.current.value = response.data.getSearchPDCCheck[0].Date;\n        }\n        if (pnRef.current) {\n          pnRef.current.value = response.data.getSearchPDCCheck[0].PNo;\n        }\n        if (branchRef.current) {\n          branchRef.current.value = response.data.getSearchPDCCheck[0].Acronym;\n        }\n        if (remakrsRef.current) {\n          remakrsRef.current.value = response.data.getSearchPDCCheck[0].Remarks;\n        }\n        PNoRef.current = response.data.getSearchPDCCheck[0].IDNo;\n        subAccountRef.current = response.data.getSearchPDCCheck[0].sub_account;\n      },\n    });\n\n  // policy ids search table modal\n\n  const {\n    UpwardTableModalSearch: ClientUpwardTableModalSearch,\n    openModal: clientOpenModal,\n    closeModal: clientCloseModal,\n  } = useUpwardTableModalSearchSafeMode({\n    size: \"large\",\n    link: \"/task/accounting/search-pdc-policy-id\",\n    column: [\n      { key: \"Type\", label: \"Type\", width: 100 },\n      { key: \"IDNo\", label: \"ID No.\", width: 120 },\n      {\n        key: \"Name\",\n        label: \"Name\",\n        width: 350,\n      },\n      { key: \"chassis\", label: \"Chassis No.\", width: 200 },\n      {\n        key: \"remarks\",\n        label: \"remarks\",\n        width: 0,\n        hide: true,\n      },\n      {\n        key: \"client_id\",\n        label: \"client_id\",\n        width: 0,\n        hide: true,\n      },\n      {\n        key: \"Acronym\",\n        label: \"Acronym\",\n        width: 0,\n        hide: true,\n      },\n      {\n        key: \"sub_account\",\n        label: \"sub_account\",\n        width: 0,\n        hide: true,\n      },\n    ],\n    getSelectedItem: async (rowItm: any, _: any, rowIdx: any, __: any) => {\n      if (rowItm) {\n        wait(100).then(() => {\n          PNoRef.current = rowItm[5];\n          subAccountRef.current = rowItm[7];\n          if (pnRef.current) {\n            pnRef.current.value = rowItm[1];\n          }\n          if (clientnameRef.current) {\n            clientnameRef.current.value = rowItm[2];\n          }\n          if (branchRef.current) {\n            branchRef.current.value = rowItm[6];\n          }\n          if (rowItm[4] && rowItm[4] !== \"\") {\n            if (remakrsRef.current) {\n              remakrsRef.current.value = rowItm[4];\n            }\n          }\n        });\n        clientCloseModal();\n      }\n    },\n  });\n\n  // pdc search table modal\n  const {\n    Modal: UpwardPDCModal,\n    closeModal: closeUpwardPDCModal,\n    openModal: openUpwardPDCModal,\n    isLoading: isLoadingModalSearchPDC,\n  } = useUpwardTableModal({\n    myAxios,\n    user,\n    column: [\n      { field: \"Date\", headerName: \"Date Received\", width: 90 },\n      { field: \"Ref_No\", headerName: \"Ref No.\", width: 80 },\n      {\n        field: \"Name\",\n        headerName: \"Name\",\n        width: 320,\n      },\n    ],\n    link: {\n      url: \"/task/accounting/search-pdc\",\n      queryUrlName: \"searchPDCInput\",\n    },\n    onSelectionChange: (selectedRow: any) => {\n      if (selectedRow.length > 0) {\n        mutateSelectedSearch({ ref_no: selectedRow[0].Ref_No });\n        setPdcMode(\"update\");\n        closeUpwardPDCModal();\n        if (searchRef.current) {\n          searchRef.current?.focus();\n        }\n      }\n    },\n    responseDataKey: \"searchPDC\",\n  });\n\n  const handleOnSave = useCallback(\n    async (e: any) => {\n      const pdcTableData = tableRef.current.getDataFormatted();\n\n      if (pnRef.current && pnRef.current.value === \"\") {\n        return Swal.fire({\n          position: \"center\",\n          icon: \"warning\",\n          title: \"Please provide loan information!\",\n          timer: 1500,\n        }).then(() => {\n          setTimeout(() => {\n            pnRef.current?.click();\n          }, 350);\n        });\n      }\n      if (pdcTableData.length <= 0) {\n        return Swal.fire({\n          position: \"center\",\n          icon: \"warning\",\n          title: \"Please provide entry!\",\n          timer: 1500,\n        })\n      }\n\n      const filePromises: Array<any> = [];\n      function fileTransfer(filePromises: Array<any>) {\n        const files = selectedFiles;\n        if (files.length > 0) {\n          for (let i = 0; i < files.length; i++) {\n            const file = files[i];\n            const reader = new FileReader();\n            filePromises.push(\n              new Promise((resolve, reject) => {\n                reader.onload = function (event) {\n                  resolve({\n                    datakey: \"pdc_file\",\n                    fileName: file.name,\n                    fileContent: event.target?.result,\n                    fileType: file.type,\n                    file,\n                  });\n                };\n                reader.onerror = function (event) {\n                  reject(new Error(\"Error reading file: \" + file.name));\n                };\n                reader.readAsDataURL(file);\n              })\n            );\n          }\n        }\n      }\n      fileTransfer(filePromises);\n      const fileToSave = await Promise.all(filePromises);\n      const stateSubmited = {\n        Ref_No: refNoRef.current?.value,\n        PNo: pnRef.current?.value,\n        IDNo: PNoRef.current,\n        Date: dateRef.current?.value,\n        Name: clientnameRef.current?.value,\n        Remarks: remakrsRef.current?.value,\n        Branch: branchRef.current?.value,\n        checks: JSON.stringify(pdcTableData),\n      };\n      if (pdcMode === \"update\") {\n        codeCondfirmationAlert({\n          isUpdate: true,\n          cb: (userCodeConfirmation) => {\n            mutate({ ...stateSubmited, userCodeConfirmation, fileToSave });\n          },\n        });\n      } else {\n        saveCondfirmationAlert({\n          isConfirm: () => {\n            mutate({ ...stateSubmited, fileToSave });\n          },\n        });\n      }\n    },\n    [mutate, selectedFiles, pdcMode]\n  );\n\n  const handleDragLeave = (e: React.DragEvent<HTMLDivElement>) => {\n    e.preventDefault();\n    setIsDragging(false);\n  };\n  const handleDragEnter = (e: React.DragEvent<HTMLDivElement>) => {\n    e.preventDefault();\n    setIsDragging(true);\n  };\n  const handleDrop = (e: React.DragEvent<HTMLDivElement>) => {\n    e.preventDefault();\n    const fileList = e.dataTransfer.files;\n    const files = Array.from(fileList);\n    const newFiles = [...selectedFiles, ...files];\n    setIsDragging(false);\n    if (checkFile(newFiles)) {\n      fileInputRef.current?.click();\n      return alert(\"file is not valid Extention!\");\n    } else {\n      setSelectedFiles(newFiles);\n    }\n  };\n  const clickPDCReceipt = () => {\n    const pdcTableData = tableRef.current.getDataFormatted();\n\n    flushSync(() => {\n      const state = {\n        Ref_No: refNoRef.current?.value,\n        PNo: pnRef.current?.value,\n        IDNo: PNoRef.current,\n        Date: dateRef.current?.value,\n        Name: clientnameRef.current?.value,\n        Remarks: remakrsRef.current?.value,\n        Branch: branchRef.current?.value,\n      };\n\n      localStorage.removeItem(\"printString\");\n      localStorage.setItem(\"dataString\", JSON.stringify(pdcTableData));\n      localStorage.setItem(\"paper-width\", \"8.5in\");\n      localStorage.setItem(\"paper-height\", \"11in\");\n      localStorage.setItem(\"module\", \"pdc\");\n      localStorage.setItem(\"state\", JSON.stringify(state));\n      localStorage.setItem(\n        \"column\",\n        JSON.stringify([\n          { datakey: \"Check_No\", header: \"CHECK NO\", width: \"80px\" },\n          { datakey: \"Check_Date\", header: \"DATE\", width: \"130px\" },\n          { datakey: \"BankName\", header: \"BANK\", width: \"240px\" },\n          { datakey: \"Check_Amnt\", header: \"AMOUNT\", width: \"70px\" },\n          { datakey: \"SEQ\", header: \"SEQ\", width: \"30px\" },\n        ])\n      );\n\n      localStorage.setItem(\n        \"title\",\n        user?.department === \"UMIS\"\n          ? \"UPWARD MANAGEMENT INSURANCE SERVICES\\n Post Date Checks Receipt\"\n          : \"UPWARD CONSULTANCY SERVICES AND MANAGEMENT INC.\\n Post Date Checks Receipt\"\n      );\n    });\n    window.open(\"/dashboard/print\", \"_blank\");\n  };\n  const clickPDCLabeling = () => {\n    let printString = () => {\n      return (\n        <div>\n          <p\n            style={{\n              color: \"#d1d5db\",\n              fontSize: \"11px\",\n              textAlign: \"center\",\n              padding: 0,\n              marginTop: \"8px\",\n              marginBottom: 0,\n            }}\n          >\n            UCSMI\n          </p>\n          <p\n            style={{\n              color: \"#d1d5db\",\n              fontSize: \"11px\",\n              textAlign: \"center\",\n              padding: 0,\n              margin: 0,\n            }}\n          >\n            {clientnameRef.current?.value}\n          </p>\n          <p\n            style={{\n              color: \"#d1d5db\",\n              fontSize: \"11px\",\n              textAlign: \"center\",\n              padding: 0,\n              margin: 0,\n            }}\n          >\n            {PNoRef.current}\n          </p>\n          <p\n            style={{\n              color: \"#d1d5db\",\n              fontSize: \"11px\",\n              textAlign: \"center\",\n              padding: 0,\n              margin: \"20px\",\n            }}\n          >\n            {refNoRef.current?.value}\n          </p>\n        </div>\n      );\n    };\n\n    flushSync(() => {\n      const elementString = ReactDOMServer.renderToString(printString());\n      localStorage.setItem(\"printString\", elementString);\n      localStorage.removeItem(\"dataString\");\n      localStorage.setItem(\"paper-width\", \"8.5in\");\n      localStorage.setItem(\"paper-height\", \"11in\");\n    });\n    window.open(\"/dashboard/print\", \"_blank\");\n  };\n\n  function resetPDC() {\n    setPdcMode(\"\");\n    tableRef.current.setSelectedRow(null);\n    tableRef.current.setData([]);\n    refetchNewRefNumber();\n\n    if (dateRef.current) {\n      dateRef.current.value = format(new Date(), \"yyyy-MM-dd\");\n    }\n    if (remakrsRef.current) {\n      remakrsRef.current.value = \"\";\n    }\n    if (pnRef.current) {\n      pnRef.current.value = \"\";\n    }\n    if (branchRef.current) {\n      branchRef.current.value = \"\";\n    }\n    if (clientnameRef.current) {\n      clientnameRef.current.value = \"\";\n    }\n  }\n  function formatNumber(num: number) {\n    return (num || 0).toLocaleString(\"en-US\", {\n      minimumFractionDigits: 2,\n      maximumFractionDigits: 2,\n    });\n  }\n  function handleCheckDetailsSave() {\n    function incrementStringNumbers(str: string, increment: number) {\n      let num = parseInt(str);\n      num = num + increment;\n      return num.toString().padStart(str.length, \"0\");\n    }\n    function incrementDate(dateString: any, i: number) {\n      const currentDate = new Date(dateString);\n      currentDate.setMonth(currentDate.getMonth() + i);\n\n      return format(currentDate, \"yyyy-MM-dd\");\n    }\n    function isValidDate(dateString: string): boolean {\n      const date = new Date(dateString);\n      return date instanceof Date && !isNaN(date.getTime());\n    }\n\n    if (\n      modalCheckRef.current.getRefs().checknoRef.current &&\n      modalCheckRef.current.getRefs().bankRef.current &&\n      modalCheckRef.current.getRefs().branchRef.current &&\n      modalCheckRef.current.getRefs().remarksRef.current &&\n      modalCheckRef.current.getRefs().checkdateRef.current &&\n      modalCheckRef.current.getRefs().amountRef.current \n    ) {\n      const tableRows = tableRef.current.getDataFormatted();\n      const selectedIndex = tableRef.current.getSelectedRow();\n\n      const filteredChecks = tableRows.filter((itm: any) => {\n        return (\n          modalCheckRef.current.getRefs().checknoRef.current && modalCheckRef.current.getRefs().checknoRef.current.value === itm.Check_No\n        );\n      });\n\n      if (filteredChecks.length > 0 && selectedIndex === null) {\n        alert(\"check no. is already exist!\");\n        modalCheckRef.current.getRefs().checknoRef.current.focus();\n        return;\n      }\n      if (modalCheckRef.current.getRefs().checknoRef.current.value === \"\") {\n        alert(\"check no. is required!\");\n        modalCheckRef.current.getRefs().checknoRef.current.focus();\n        return;\n      } else if (modalCheckRef.current.getRefs().bankRef.current.value === \"\") {\n        alert(\"bank is required!\");\n        modalCheckRef.current.getRefs().bankRef.current.focus();\n        return;\n      } else if (\n        modalCheckRef.current.getRefs().branchRef.current.value === \"\"\n      ) {\n        alert(\"branch is required!\");\n        modalCheckRef.current.getRefs().bankRef.current.focus();\n        return;\n      } else if (\n        !isValidDate(modalCheckRef.current.getRefs().checkdateRef.current.value)\n      ) {\n        alert(\"invalid date!\");\n        modalCheckRef.current.getRefs().checkdateRef.current.focus();\n        return;\n      } else if (\n        parseFloat(\n          modalCheckRef.current\n            .getRefs()\n            .amountRef.current.value.replace(/,/g, \"\")\n        ) <= 0\n      ) {\n        alert(\"amount must be greater than 0!\");\n        modalCheckRef.current.getRefs().amountRef.current.focus();\n        return;\n      }\n\n      if (\n        modalCheckRef.current.getRefs().checknoRef.current &&\n        modalCheckRef.current.getRefs().bankRef.current &&\n        modalCheckRef.current.getRefs().branchRef.current &&\n        modalCheckRef.current.getRefs().remarksRef.current &&\n        modalCheckRef.current.getRefs().checkdateRef.current &&\n        modalCheckRef.current.getRefs().amountRef.current       ) {\n        if (selectedIndex !== null) {\n          const selectedRow = tableRef.current.getData();\n          selectedRow[selectedIndex][0] =\n            modalCheckRef.current.getRefs().checknoRef.current.value;\n          selectedRow[selectedIndex][1] =\n            modalCheckRef.current.getRefs().checkdateRef.current.value;\n          selectedRow[selectedIndex][2] =\n            modalCheckRef.current.getRefs().amountRef.current.value;\n          selectedRow[selectedIndex][3] =\n            modalCheckRef.current.getRefs().bankRef.current.value;\n          selectedRow[selectedIndex][4] =\n            modalCheckRef.current.getRefs().branchRef.current.value;\n          selectedRow[selectedIndex][5] =\n            modalCheckRef.current.getRefs().remarksRef.current.value;\n          selectedRow[selectedIndex][6] = modalCheckRef.current.getRefs()._slipCodeRef.current;\n          selectedRow[selectedIndex][7] = modalCheckRef.current.getRefs()._slipDateRef.current;\n          selectedRow[selectedIndex][8] = modalCheckRef.current.getRefs()._checkOR.current;\n          selectedRow[selectedIndex][9] = modalCheckRef.current.getRefs().bankCode.current;\n          tableRef.current.setData(selectedRow);\n          tableRef.current.setSelectedRow(null);\n          setHasSelectedRow(null);\n        } else {\n          const newData: any = [];\n          for (\n            let i = 0;\n            i <\n            parseInt(\n              modalCheckRef.current.getRefs()._checkcountRef.current.value\n            );\n            i++\n          ) {\n            const data: any = {\n              Check_No: incrementStringNumbers(\n                modalCheckRef.current.getRefs().checknoRef.current.value,\n                i\n              ),\n              Check_Date: incrementDate(\n                modalCheckRef.current.getRefs().checkdateRef.current.value,\n                i\n              ),\n              Check_Amnt:\n                modalCheckRef.current.getRefs().amountRef.current.value,\n              BankName: modalCheckRef.current.getRefs().bankRef.current.value,\n              BankCode: modalCheckRef.current.getRefs().bankCode.current,\n              Branch: modalCheckRef.current.getRefs().branchRef.current.value,\n              Check_Remarks:\n                modalCheckRef.current.getRefs().remarksRef.current.value,\n              Deposit_Slip:modalCheckRef.current.getRefs()._slipCodeRef.current,\n              DateDeposit: modalCheckRef.current.getRefs()._slipDateRef.current,\n              OR_No: modalCheckRef.current.getRefs()._checkOR.current,\n            };\n            newData.push(data);\n          }\n          tableRef.current.setDataFormated(newData);\n        }\n      }\n\n    }\n  }\n  useEffect(() => {\n    const handleKeyDown = (event: any) => {\n      if ((event.ctrlKey || event.metaKey) && event.key === \"s\") {\n        event.preventDefault();\n        handleOnSave(event);\n      }\n    };\n\n    window.addEventListener(\"keydown\", handleKeyDown);\n    return () => {\n      window.removeEventListener(\"keydown\", handleKeyDown);\n    };\n  }, [handleOnSave]);\n\n  const isDisableField = pdcMode === \"\";\n\n  return (\n    <>\n      <ModalCheck\n        ref={modalCheckRef}\n        handleOnSave={() => {\n          handleCheckDetailsSave();\n          modalCheckRef.current.clsoeModal();\n        }}\n        handleOnClose={() => {\n          // debitTable.current.setSelectedRow(null);\n          // buttonCheckSave.current?.focus();\n        }}\n        hasSelectedRow={hasSelectedRow}\n      />\n      <ClientUpwardTableModalSearch />\n      <PageHelmet title=\"PDC\" />\n      {(loadingAddNew || isLoadingSelectedSearch) && <Loading />}\n      <div\n        style={{\n          width: \"100%\",\n          height: \"100%\",\n          flex: 1,\n          background: \"red\",\n          padding: \"10px\",\n          backgroundColor: \"#F1F1F1\",\n        }}\n      >\n        {UpwardPDCModal}\n\n        <Box\n          sx={(theme) => ({\n            display: \"flex\",\n            alignItems: \"center\",\n            columnGap: \"20px\",\n            [theme.breakpoints.down(\"sm\")]: {\n              flexDirection: \"column\",\n              alignItems: \"flex-start\",\n              flex: 1,\n              marginBottom: \"15px\",\n            },\n          })}\n        >\n          <div\n            style={{\n              display: \"flex\",\n              alignItems: \"center\",\n              columnGap: \"5px\",\n              marginBottom: \"15px\",\n            }}\n          >\n            {isLoadingModalSearchPDC ? (\n              <LoadingButton loading={isLoadingModalSearchPDC} />\n            ) : (\n              <TextInput\n                label={{\n                  title: \"Search: \",\n                  style: {\n                    fontSize: \"12px\",\n                    fontWeight: \"bold\",\n                    width: \"50px\",\n                  },\n                }}\n                input={{\n                  className: \"search-input-up-on-key-down\",\n                  type: \"search\",\n                  onKeyDown: (e) => {\n                    if (e.key === \"Enter\" || e.key === \"NumpadEnter\") {\n                      e.preventDefault();\n                      openUpwardPDCModal(e.currentTarget.value);\n                    }\n                  },\n                  style: { width: \"500px\" },\n                }}\n                icon={<SearchIcon sx={{ fontSize: \"18px\" }} />}\n                onIconClick={(e) => {\n                  e.preventDefault();\n                  if (searchInputRef.current)\n                    openUpwardPDCModal(searchInputRef.current.value);\n                }}\n                inputRef={searchInputRef}\n              />\n            )}\n            {pdcMode === \"\" && (\n              <Button\n                sx={{\n                  height: \"30px\",\n                  fontSize: \"11px\",\n                }}\n                variant=\"contained\"\n                startIcon={<AddIcon sx={{ width: 15, height: 15 }} />}\n                id=\"entry-header-save-button\"\n                color=\"primary\"\n                onClick={() => {\n                  setPdcMode(\"add\");\n                }}\n              >\n                New\n              </Button>\n            )}\n            <LoadingButton\n              sx={{\n                height: \"30px\",\n                fontSize: \"11px\",\n              }}\n              ref={savePDCButtonRef}\n              id=\"save-entry-header\"\n              color=\"success\"\n              variant=\"contained\"\n              type=\"submit\"\n              onClick={handleOnSave}\n              disabled={pdcMode === \"\"}\n              loading={loadingAddNew}\n              startIcon={<SaveIcon sx={{ width: 15, height: 15 }} />}\n            >\n              Save\n            </LoadingButton>\n            {(pdcMode === \"add\" || pdcMode === \"update\") && (\n              <Button\n                sx={{\n                  height: \"30px\",\n                  fontSize: \"11px\",\n                }}\n                variant=\"contained\"\n                startIcon={<CloseIcon sx={{ width: 15, height: 15 }} />}\n                onClick={() => {\n                  Swal.fire({\n                    title: \"Are you sure?\",\n                    text: \"You won't be able to revert this!\",\n                    icon: \"warning\",\n                    showCancelButton: true,\n                    confirmButtonColor: \"#3085d6\",\n                    cancelButtonColor: \"#d33\",\n                    confirmButtonText: \"Yes, cancel it!\",\n                  }).then((result) => {\n                    if (result.isConfirmed) {\n                      resetPDC();\n                    }\n                  });\n                }}\n                color=\"error\"\n              >\n                Cancel\n              </Button>\n            )}\n            <Button\n              sx={{\n                height: \"30px\",\n                fontSize: \"11px\",\n              }}\n              disabled={pdcMode === \"\"}\n              variant=\"contained\"\n              startIcon={<AddIcon sx={{ width: 15, height: 15 }} />}\n              onClick={() => {\n                wait(100).then(() => {\n                  const tableRows = tableRef.current.getDataFormatted();\n                  const getLastCheck_No: any = tableRows[tableRows.length - 1];\n                  if (modalCheckRef.current.getRefs().checknoRef.current) {\n                    modalCheckRef.current.getRefs().checknoRef.current.value =\n                      incrementCheckNo(getLastCheck_No?.Check_No);\n                  }\n                  tableRef.current.setSelectedRow(null);\n                  setHasSelectedRow(null);\n                  modalCheckRef.current.getRefs().checknoRef.current?.focus();\n                });\n                modalCheckRef.current?.showModal();\n              }}\n              ref={addRefButton}\n            >\n              Add Check\n            </Button>\n            <div>\n              <Button\n                disabled={pdcMode !== \"update\"}\n                id=\"basic-button\"\n                aria-controls={open ? \"basic-menu\" : undefined}\n                aria-haspopup=\"true\"\n                aria-expanded={open ? \"true\" : undefined}\n                onClick={handleClick}\n                sx={{\n                  height: \"30px\",\n                  fontSize: \"11px\",\n                  color: \"white\",\n                  backgroundColor: grey[600],\n                  \"&:hover\": {\n                    backgroundColor: grey[700],\n                  },\n                }}\n              >\n                Print\n              </Button>\n              <Menu\n                id=\"basic-menu\"\n                anchorEl={anchorEl}\n                open={open}\n                onClose={handleClose}\n                MenuListProps={{\n                  \"aria-labelledby\": \"basic-button\",\n                }}\n              >\n                <MenuItem onClick={clickPDCReceipt}>PDC Receipt</MenuItem>\n                <MenuItem onClick={clickPDCLabeling}>PDC Labeling</MenuItem>\n              </Menu>\n            </div>\n          </div>\n        </Box>\n        <form\n          onKeyDown={(e) => {\n            if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n              e.preventDefault();\n              return;\n            }\n          }}\n          style={{\n            marginBottom: \"20px\",\n          }}\n        >\n          <Box\n            sx={(theme) => ({\n              display: \"flex\",\n              columnGap: \"15px\",\n              flexDirection: \"row\",\n              [theme.breakpoints.down(\"md\")]: {\n                flexDirection: \"column\",\n                rowGap: \"10px\",\n              },\n            })}\n          >\n            <Box\n              sx={{\n                display: \"flex\",\n                gap: \"10px\",\n                width: \"100%\",\n              }}\n            >\n              <fieldset\n                style={\n                  {\n                    flex: 1,\n                    display: \"flex\",\n                    flexDirection: \"column\",\n                    gap: \"10px\",\n                    padding: \"15px\",\n                    border: \"1px solid #cbd5e1\",\n                    borderRadius: \"5px\",\n                  } as any\n                }\n              >\n                <div\n                  style={{\n                    display: \"flex\",\n                    gap: \"15px\",\n                  }}\n                >\n                  {newRefNumberLoading ? (\n                    <LoadingButton loading={newRefNumberLoading} />\n                  ) : (\n                    <TextInput\n                      label={{\n                        title: \"Reference No.\",\n                        style: {\n                          fontSize: \"12px\",\n                          fontWeight: \"bold\",\n                          width: \"100px\",\n                        },\n                      }}\n                      input={{\n                        disabled: isDisableField,\n                        type: \"text\",\n                        style: { width: \"300px\" },\n                        onKeyDown: (e) => {\n                          if (e.key === \"Enter\" || e.key === \"NumpadEnter\") {\n                            e.preventDefault();\n                            dateRef.current?.focus();\n                          }\n                        },\n                      }}\n                      inputRef={refNoRef}\n                      icon={\n                        <RestartAltIcon\n                          sx={{\n                            fontSize: \"18px\",\n                            color: isDisableField ? \"gray\" : \"black\",\n                          }}\n                        />\n                      }\n                      disableIcon={isDisableField}\n                    />\n                  )}\n\n                  <TextInput\n                    label={{\n                      title: \"Date : \",\n                      style: {\n                        fontSize: \"12px\",\n                        fontWeight: \"bold\",\n                        width: \"50px\",\n                      },\n                    }}\n                    input={{\n                      disabled: isDisableField,\n                      type: \"date\",\n                      defaultValue: format(new Date(), \"yyyy-MM-dd\"),\n                      style: { width: \"190px\" },\n                      onKeyDown: (e) => {\n                        if (e.code === \"NumpadEnter\" || e.code === \"Enter\") {\n                          remakrsRef.current?.focus();\n                        }\n                      },\n                    }}\n                    inputRef={dateRef}\n                  />\n                </div>\n\n                <TextAreaInput\n                  label={{\n                    title: \"Remarks : \",\n                    style: {\n                      fontSize: \"12px\",\n                      fontWeight: \"bold\",\n                      width: \"100px\",\n                    },\n                  }}\n                  textarea={{\n                    rows: 2,\n                    disabled: isDisableField,\n                    style: { flex: 1 },\n                    onKeyDown: (e) => {\n                      e.stopPropagation();\n                      if (\n                        (e.code === \"NumpadEnter\" && !e.shiftKey) ||\n                        (e.code === \"Enter\" && !e.shiftKey)\n                      ) {\n                        pnRef.current?.focus();\n                      }\n                    },\n                  }}\n                  _inputRef={remakrsRef}\n                />\n              </fieldset>\n              <fieldset\n                style={\n                  {\n                    flex: 1,\n                    display: \"flex\",\n                    gap: \"10px\",\n                    padding: \" 15px\",\n                    border: \"1px solid #cbd5e1\",\n                    borderRadius: \"5px\",\n                    flexDirection: \"column\",\n                  } as any\n                }\n              >\n                <div\n                  style={{\n                    width: \"100%\",\n                    flex: 1,\n                    display: \"flex\",\n                    gap: \"15px\",\n                  }}\n                >\n                  <TextInput\n                    label={{\n                      title: \"PN/Client ID : \",\n                      style: {\n                        fontSize: \"12px\",\n                        fontWeight: \"bold\",\n                        width: \"100px\",\n                      },\n                    }}\n                    input={{\n                      disabled: isDisableField,\n                      type: \"text\",\n                      style: { width: \"250px\", height: \"22px\" },\n                      onKeyDown: (e) => {\n                        if (e.key === \"Enter\" || e.key === \"NumpadEnter\") {\n                          e.preventDefault();\n                          if (pnRef.current) {\n                            clientOpenModal(pnRef.current.value);\n                          }\n                        }\n                      },\n                    }}\n                    inputRef={pnRef}\n                    icon={\n                      <PersonSearchIcon\n                        sx={{\n                          fontSize: \"18px\",\n                          color: isDisableField ? \"gray\" : \"black\",\n                        }}\n                      />\n                    }\n                    onIconClick={(e) => {\n                      e.preventDefault();\n                      if (pnRef.current) {\n                        clientOpenModal(pnRef.current.value);\n                      }\n                    }}\n                    disableIcon={isDisableField}\n                  />\n\n                  <TextInput\n                    label={{\n                      title: \"Branch : \",\n                      style: {\n                        fontSize: \"12px\",\n                        fontWeight: \"bold\",\n                        width: \"70px\",\n                      },\n                    }}\n                    input={{\n                      disabled: isDisableField,\n                      type: \"text\",\n                      style: { width: \"auto\", height: \"22px\" },\n                      onKeyDown: (e) => {\n                        if (e.code === \"NumpadEnter\" || e.code === \"Enter\") {\n                          clientnameRef.current?.focus();\n                        }\n                      },\n                    }}\n                    inputRef={branchRef}\n                  />\n                </div>\n\n                <div\n                  style={{ width: \"100%\", display: \"flex\", columnGap: \"10px\" }}\n                >\n                  <TextAreaInput\n                    label={{\n                      title: \"Clients Name : \",\n                      style: {\n                        fontSize: \"12px\",\n                        fontWeight: \"bold\",\n                        width: \"100px\",\n                      },\n                    }}\n                    textarea={{\n                      rows: 2,\n                      disabled: isDisableField,\n                      style: { width: \"325px\" },\n                      onKeyDown: (e) => {\n                        e.stopPropagation();\n                        if (\n                          (e.code === \"NumpadEnter\" && !e.shiftKey) ||\n                          (e.code === \"Enter\" && !e.shiftKey)\n                        ) {\n                          savePDCButtonRef.current?.click();\n                        }\n                      },\n                    }}\n                    _inputRef={clientnameRef}\n                  />\n                  <Button\n                    sx={{\n                      height: \"27px\",\n                      fontSize: \"11px\",\n                    }}\n                    disabled={pdcMode === \"\"}\n                    variant=\"contained\"\n                    startIcon={<DownloadIcon sx={{ width: 15, height: 15 }} />}\n                    onClick={() => {\n                      setShowModal(true);\n                    }}\n                  >\n                    Upload Check\n                  </Button>\n                </div>\n              </fieldset>\n            </Box>\n          </Box>\n        </form>\n        <DataGridViewReact\n          disbaleTable={isDisableField}\n          ref={tableRef}\n          rows={[]}\n          columns={pdcColumn}\n          getSelectedItem={(rowSelected: any, _: any, RowIndex: any) => {\n            if (rowSelected) {\n              \n              if (\n                (rowSelected[6] && rowSelected[6] !== \"\") ||\n                (rowSelected[7] && rowSelected[7] !== \"\") ||\n                (rowSelected[8] && rowSelected[8] !== \"\")\n              ) {\n                setHasSelectedRow(null);\n                tableRef.current.setSelectedRow(null);\n                return Swal.fire({\n                  position: \"center\",\n                  icon: \"warning\",\n                  title: `Unable to delete. Check No ${rowSelected[0]} is already ${rowSelected[8]} issued of OR!`,\n                  showConfirmButton: false,\n                  timer: 1500,\n                });\n              }\n              setHasSelectedRow(RowIndex);\n              modalCheckRef.current?.showModal();\n              wait(100).then(() => {\n                if (\n                  modalCheckRef.current.getRefs().checknoRef.current &&\n                  modalCheckRef.current.getRefs().bankRef.current &&\n                  modalCheckRef.current.getRefs().branchRef.current &&\n                  modalCheckRef.current.getRefs().remarksRef.current &&\n                  modalCheckRef.current.getRefs().checkdateRef.current &&\n                  modalCheckRef.current.getRefs().amountRef.current\n                ) {\n                  modalCheckRef.current.getRefs().checknoRef.current.value = rowSelected[0];\n                  modalCheckRef.current.getRefs().checkdateRef.current.value = rowSelected[1];\n                  modalCheckRef.current.getRefs().amountRef.current.value = formatNumber(\n                    parseFloat(rowSelected[2].replace(/,/g, \"\"))\n                  );\n                  modalCheckRef.current.getRefs(). bankRef.current.value = rowSelected[3];\n                  modalCheckRef.current.getRefs().branchRef.current.value = rowSelected[4];\n                  modalCheckRef.current.getRefs().remarksRef.current.value = rowSelected[5];\n                  modalCheckRef.current.getRefs()._slipCodeRef.current = rowSelected[6] || \"\";\n                  modalCheckRef.current.getRefs()._slipDateRef.current = rowSelected[7] || \"\";\n                  modalCheckRef.current.getRefs()._checkOR.current = rowSelected[8] || \"\";\n                  modalCheckRef.current.getRefs().bankCode.current = rowSelected[9];\n\n                  modalCheckRef.current.getRefs().bankRef.current.focus();\n                }\n              });\n\n            } else {\n              setHasSelectedRow(null);\n            }\n          }}\n          onKeyDown={(rowSelected: any, RowIndex: any, e: any) => {\n            if (e.code === \"Delete\" || e.code === \"Backspace\") {\n              if (\n                (rowSelected[6] && rowSelected[6] !== \"\") ||\n                (rowSelected[7] && rowSelected[7] !== \"\") ||\n                (rowSelected[8] && rowSelected[8] !== \"\")\n              ) {\n                setHasSelectedRow(null);\n                tableRef.current.setSelectedRow(null);\n\n                return Swal.fire({\n                  position: \"center\",\n                  icon: \"warning\",\n                  title: `Unable to delete. Check No ${rowSelected[0]} is already ${rowSelected[8]} issued of OR!`,\n                  showConfirmButton: false,\n                  timer: 1500,\n                });\n              }\n\n              Swal.fire({\n                title: \"Are you sure?\",\n                text: `You won't to delete this Check No. ${rowSelected[0]}`,\n                icon: \"warning\",\n                showCancelButton: true,\n                confirmButtonColor: \"#3085d6\",\n                cancelButtonColor: \"#d33\",\n                confirmButtonText: \"Yes, delete it!\",\n              }).then((result) => {\n                if (result.isConfirmed) {\n                  setTimeout(() => {\n                    const newData = tableRef.current.getData();\n                    newData.splice(RowIndex, 1);\n                    tableRef.current.setData(newData);\n\n                    setHasSelectedRow(null);\n                    tableRef.current.setSelectedRow(null);\n                  }, 100);\n                }\n              });\n            }\n          }}\n        />\n   \n        <div\n          style={{\n            display: showModal ? \"flex\" : \"none\",\n            position: \"absolute\",\n            top: 0,\n            bottom: 0,\n            left: 0,\n            right: 0,\n            background: \"rgba(158, 155, 157, 0.31)\",\n            zIndex: \"999\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n          }}\n        >\n          <div\n            style={{\n              width: \"90%\",\n              height: \"90%\",\n            }}\n          >\n            <div\n              style={{\n                width: \"90%\",\n                height: \"90%\",\n                overflow: \"auto\",\n                background: \"white\",\n                padding: \"20px\",\n                margin: \"auto\",\n                zIndex: \"9929\",\n                boxShadow: \" -1px 1px 13px 6px rgba(0,0,0,0.54)\",\n                position: \"relative\",\n              }}\n            >\n              <div\n                style={{\n                  height: \"100%\",\n                  width: \"100%\",\n                  position: \"relative\",\n                  display: \"flex\",\n                  justifyContent: \"center\",\n                  alignItems: \"center\",\n                  flexDirection: \"column\",\n                }}\n              >\n                <IconButton\n                  sx={{\n                    position: \"absolute\",\n                    right: \"5px\",\n                    top: \"5px\",\n                  }}\n                  onClick={() => {\n                    setShowModal(false);\n                  }}\n                >\n                  <CloseIcon />\n                </IconButton>\n                <div\n                  style={{\n                    width: \"100%\",\n                    height: \"500px\",\n                    border: isDragging ? \"5px dashed green\" : \"5px dashed grey\",\n                    overflow: \"auto\",\n                    padding: \"10px\",\n                  }}\n                  onDragEnter={handleDragEnter}\n                  onDragOver={(e) => e.preventDefault()}\n                  onDragLeave={handleDragLeave}\n                  onDrop={handleDrop}\n                >\n                  <div\n                    id=\"upload-container\"\n                    style={{\n                      width: \"100%\",\n                      height: \"100%\",\n                      display: \"flex\",\n                      gap: \"10px\",\n                      flexWrap: \"wrap\",\n                    }}\n                    onDragEnter={handleDragEnter}\n                    onDragOver={(e) => e.preventDefault()}\n                    onDragLeave={handleDragLeave}\n                    onDrop={handleDrop}\n                  >\n                    {selectedFiles.map((itm, idx) => {\n                      return (\n                        <DisplayFile\n                          key={idx}\n                          itm={itm}\n                          selectedFiles={selectedFiles}\n                          setSelectedFiles={setSelectedFiles}\n                          fileInput={fileInputRef}\n                        />\n                      );\n                    })}\n                  </div>\n                  {selectedFiles.length <= 0 && (\n                    <div\n                      style={{\n                        position: \"absolute\",\n                        top: \"50%\",\n                        left: \"50%\",\n                        transform: \"translate(-50%,-50%)\",\n                        textAlign: \"center\",\n                      }}\n                    >\n                      <DriveFolderUploadIcon\n                        sx={{ fontSize: \"20em\", color: \"#64748b\" }}\n                      />\n                    </div>\n                  )}\n                  <input\n                    ref={fileInputRef}\n                    type=\"file\"\n                    multiple\n                    style={{ display: \"none\", background: \"white\" }}\n                    id=\"input-file\"\n                    onChange={(e) => {\n                      const fileList = e.target.files as FileList;\n                      const files = Array.from(fileList);\n                      const newFiles = [...selectedFiles, ...files];\n                      if (checkFile(newFiles)) {\n                        return alert(\"file is not valid Extention!\");\n                      }\n                      setSelectedFiles(newFiles);\n                    }}\n                  />\n                </div>\n                <div\n                  style={{\n                    width: \"100%\",\n                  }}\n                >\n                  <Button\n                    fullWidth\n                    onClick={() => {\n                      const inputFile = document.getElementById(\"input-file\");\n                      inputFile?.click();\n                    }}\n                  >\n                    CLick it to upload\n                  </Button>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n\nconst ModalCheck = forwardRef(\n  ({ handleOnSave, handleOnClose, hasSelectedRow }: any, ref) => {\n    const [showModal, setShowModal] = useState(false);\n    const [handleDelayClose, setHandleDelayClose] = useState(false);\n    const [blick, setBlick] = useState(false);\n\n    const checknoRef = useRef<HTMLInputElement>(null);\n    const bankRef = useRef<HTMLInputElement>(null);\n    const branchRef = useRef<HTMLInputElement>(null);\n    const remarksRef = useRef<HTMLTextAreaElement>(null);\n    const checkdateRef = useRef<HTMLInputElement>(null);\n    const amountRef = useRef<HTMLInputElement>(null);\n    const bankCode = useRef(\"\");\n    const _checkcountRef = useRef<HTMLInputElement>(null);\n    const searchModalInputRef = useRef<HTMLInputElement>(null);\n\n    const _slipCodeRef = useRef('');\n    const _slipDateRef = useRef('');\n    const _checkOR = useRef('');\n\n\n    const closeDelay = () => {\n      setHandleDelayClose(true);\n      setTimeout(() => {\n        setShowModal(false);\n        setHandleDelayClose(false);\n        handleOnClose();\n      }, 100);\n    };\n    const closeDelayRef = useRef<any>(closeDelay);\n\n    useImperativeHandle(ref, () => ({\n      showModal: () => {\n        setShowModal(true);\n      },\n      clsoeModal: () => {\n        setShowModal(false);\n      },\n      getRefs: () => {\n        const refs = {\n          checknoRef,\n          bankRef,\n          branchRef,\n          remarksRef,\n          checkdateRef,\n          amountRef,\n          bankCode,\n          _checkcountRef,\n          _slipCodeRef,\n          _slipDateRef,\n          _checkOR\n        };\n        return refs;\n      },\n      checknoRef,\n      bankRef,\n      branchRef,\n      remarksRef,\n      checkdateRef,\n      amountRef,\n      bankCode,\n      searchModalInputRef,\n      closeDelay,\n    }));\n\n    const {\n      UpwardTableModalSearch: BankUpwardTableModalSearch,\n      openModal: BankOpenModal,\n      closeModal: BankCloseModal,\n    } = useUpwardTableModalSearchSafeMode({\n      link: \"/task/accounting/search-pdc-banks\",\n      column: [\n        { key: \"Bank_Code\", label: \"Code\", width: 100 },\n        { key: \"Bank\", label: \"Bank Name\", width: 350 },\n      ],\n      getSelectedItem: async (rowItm: any, _: any, rowIdx: any, __: any) => {\n        if (rowItm) {\n          wait(100).then(() => {\n            bankCode.current = rowItm[0];\n            if (bankRef.current) {\n              bankRef.current.value = rowItm[1];\n            }\n            branchRef.current?.focus();\n          });\n          BankCloseModal();\n        }\n      },\n    });\n\n    useEffect(() => {\n      window.addEventListener(\"keydown\", (e: any) => {\n        if (e.key === \"Escape\") {\n          closeDelayRef.current();\n        }\n      });\n    }, []);\n\n    return showModal ? (\n      <>\n        <BankUpwardTableModalSearch />\n        <div\n          style={{\n            position: \"fixed\",\n            top: 0,\n            bottom: 0,\n            left: 0,\n            right: 0,\n            background: \"transparent\",\n            zIndex: \"88\",\n          }}\n          onClick={() => {\n            setBlick(true);\n            setTimeout(() => {\n              setBlick(false);\n            }, 250);\n          }}\n        ></div>\n        <div\n          style={{\n            height: blick ? \"202px\" : \"200px\",\n            width: blick ? \"60.3%\" : \"60%\",\n            border: \"1px solid #64748b\",\n            position: \"absolute\",\n            left: \"50%\",\n            top: \"50%\",\n            transform: \"translate(-50%, -75%)\",\n            display: \"flex\",\n            flexDirection: \"column\",\n            zIndex: handleDelayClose ? -100 : 100,\n            opacity: handleDelayClose ? 0 : 1,\n            transition: \"all 150ms\",\n            boxShadow: \"3px 6px 32px -7px rgba(0,0,0,0.75)\",\n          }}\n        >\n          <div\n            style={{\n              height: \"22px\",\n              background: \"white\",\n              display: \"flex\",\n              justifyContent: \"space-between\",\n              padding: \"5px\",\n              position: \"relative\",\n              alignItems: \"center\",\n            }}\n          >\n            <span style={{ fontSize: \"13px\", fontWeight: \"bold\" }}>\n              Check Details\n            </span>\n            <button\n              className=\"btn-check-exit-modal\"\n              style={{\n                padding: \"0 5px\",\n                borderRadius: \"0px\",\n                background: \"white\",\n                color: \"black\",\n                height: \"22px\",\n                position: \"absolute\",\n                top: 0,\n                right: 0,\n              }}\n              onClick={() => {\n                closeDelay();\n              }}\n            >\n              <CloseIcon sx={{ fontSize: \"22px\" }} />\n            </button>\n          </div>\n          <div\n            style={{\n              flex: 1,\n              background: \"#F1F1F1\",\n              padding: \"5px\",\n              display: \"flex\",\n            }}\n          >\n            <div\n              style={{\n                width: \"55%\",\n                display: \"flex\",\n                flexDirection: \"column\",\n                rowGap: \"5px\",\n                padding: \"10px\",\n              }}\n            >\n              <TextInput\n                label={{\n                  title: \"Check No. : \",\n                  style: {\n                    fontSize: \"12px\",\n                    fontWeight: \"bold\",\n                    width: \"70px\",\n                  },\n                }}\n                input={{\n                  disabled: hasSelectedRow !== null,\n                  type: \"text\",\n                  style: { width: \"160px\" },\n                  onKeyDown: (e) => {\n                    if (e.code === \"NumpadEnter\" || e.code === \"Enter\") {\n                      bankRef.current?.focus();\n                    }\n                  },\n                }}\n                inputRef={checknoRef}\n              />\n\n              <TextInput\n                containerStyle={{\n                  width: \"370px\",\n                }}\n                label={{\n                  title: \"Bank : \",\n                  style: {\n                    fontSize: \"12px\",\n                    fontWeight: \"bold\",\n                    width: \"70px\",\n                  },\n                }}\n                input={{\n                  disabled: false,\n                  type: \"text\",\n                  style: { width: \"300px\" },\n                  onKeyDown: (e) => {\n                    if (e.code === \"NumpadEnter\" || e.code === \"Enter\") {\n                      BankOpenModal(e.currentTarget.value);\n                    }\n                  },\n                }}\n                icon={<AccountBoxIcon sx={{ fontSize: \"18px\" }} />}\n                onIconClick={(e) => {\n                  e.preventDefault();\n                  if (bankRef.current) {\n                    BankOpenModal(bankRef.current.value);\n                  }\n                }}\n                inputRef={bankRef}\n              />\n\n              <TextInput\n                label={{\n                  title: \"Branch : \",\n                  style: {\n                    fontSize: \"12px\",\n                    fontWeight: \"bold\",\n                    width: \"70px\",\n                  },\n                }}\n                input={{\n                  type: \"text\",\n                  style: { width: \"300px\" },\n                  onKeyDown: (e) => {\n                    if (e.code === \"NumpadEnter\" || e.code === \"Enter\") {\n                      remarksRef.current?.focus();\n                    }\n                  },\n                }}\n                inputRef={branchRef}\n              />\n              <TextAreaInput\n                label={{\n                  title: \"Remarks : \",\n                  style: {\n                    fontSize: \"12px\",\n                    fontWeight: \"bold\",\n                    width: \"70px\",\n                  },\n                }}\n                textarea={{\n                  rows: 4,\n                  style: { width: \"300px\" },\n                  onKeyDown: (e) => {\n                    e.stopPropagation();\n                    if (\n                      (e.code === \"NumpadEnter\" && !e.shiftKey) ||\n                      (e.code === \"Enter\" && !e.shiftKey)\n                    ) {\n                      checkdateRef.current?.focus();\n                    }\n                  },\n                }}\n                _inputRef={remarksRef}\n              />\n            </div>\n            <div\n              style={{\n                width: \"45%\",\n                display: \"flex\",\n                flexDirection: \"column\",\n                rowGap: \"5px\",\n                position: \"relative\",\n                padding: \"10px\",\n                alignItems: \"flex-end\",\n              }}\n            >\n              <TextInput\n                label={{\n                  title: \"Date : \",\n                  style: {\n                    fontSize: \"12px\",\n                    fontWeight: \"bold\",\n                    width: \"90px\",\n                  },\n                }}\n                input={{\n                  type: \"date\",\n                  style: { width: \"200px\" },\n                  defaultValue: format(new Date(), \"yyyy-MM-dd\"),\n                  onKeyDown: (e) => {\n                    if (e.code === \"NumpadEnter\" || e.code === \"Enter\") {\n                      amountRef.current?.focus();\n                    }\n                  },\n                }}\n                inputRef={checkdateRef}\n              />\n              <TextFormatedInput\n                label={{\n                  title: \"Amount : \",\n                  style: {\n                    fontSize: \"12px\",\n                    fontWeight: \"bold\",\n                    width: \"90px\",\n                  },\n                }}\n                input={{\n                  defaultValue: \"0.00\",\n                  type: \"text\",\n                  style: { width: \"200px\" },\n                  onKeyDown: (e) => {\n                    if (e.code === \"NumpadEnter\" || e.code === \"Enter\") {\n                      if (handleOnSave) {\n                        _checkcountRef.current?.focus();\n                      }\n                    }\n                  },\n                }}\n                inputRef={amountRef}\n              />\n              {hasSelectedRow === null && (\n                <TextInput\n                  label={{\n                    title: \"Check Count : \",\n                    style: {\n                      fontSize: \"12px\",\n                      fontWeight: \"bold\",\n                      width: \"90px\",\n                    },\n                  }}\n                  input={{\n                    defaultValue: \"0\",\n                    type: \"number\",\n                    style: { width: \"200px\", textAlign: \"right\" },\n                    onKeyDown: (e) => {\n                      if (e.code === \"NumpadEnter\" || e.code === \"Enter\") {\n                        handleOnSave();\n                      }\n                    },\n                  }}\n                  inputRef={_checkcountRef}\n                />\n              )}\n              <div\n                style={{\n                  display: \"flex\",\n                  columnGap: \"10px\",\n                  flex: 1,\n                  justifyContent: \"flex-end\",\n                  alignItems: \"flex-end\",\n                }}\n              >\n                <Button\n                  variant=\"contained\"\n                  color=\"success\"\n                  style={{\n                    height: \"22px\",\n                    fontSize: \"12px\",\n                  }}\n                  onClick={(e) => {\n                    if (handleOnSave) {\n                      handleOnSave();\n                    }\n                  }}\n                >\n                  OK\n                </Button>\n                <Button\n                  variant=\"contained\"\n                  color=\"error\"\n                  style={{\n                    height: \"22px\",\n                    fontSize: \"12px\",\n                  }}\n                  onClick={(e) => {\n                    closeDelay();\n                  }}\n                >\n                  Cancel\n                </Button>\n              </div>\n            </div>\n          </div>\n          <style>\n            {`\n              .btn-check-exit-modal:hover{\n                background:red !important;\n                color:white !important;\n              }\n            `}\n          </style>\n        </div>\n      </>\n    ) : null;\n  }\n);\n\nexport function setNewStateValue(dispatch: any, obj: any) {\n  Object.entries(obj).forEach(([field, value]) => {\n    dispatch({ type: \"UPDATE_FIELD\", field, value });\n  });\n}\nexport function incrementCheckNo(Check_No: string) {\n  if (Check_No) {\n    let incrementedNumber = (parseInt(Check_No) + 1).toString();\n    while (incrementedNumber.length < Check_No.length) {\n      incrementedNumber = \"0\" + incrementedNumber;\n    }\n    return incrementedNumber;\n  }\n\n  return \"001\";\n}\n"],"names":["_ref","_ref$title","title","_jsxs","Helmet","children","_jsx","rel","type","href","concat","process","UpwardTable","forwardRef","UpwardTableRef","_pages$pageNumber","rows","column","width","height","dataReadOnly","_ref$onSelectionChang","onSelectionChange","_ref$isMultipleSelect","isMultipleSelect","_ref$freeze","freeze","onKeyDown","_ref$inputsearchselec","inputsearchselector","_ref$isRowSelectable","isRowSelectable","_ref$unSelectable","unSelectable","isLoading","onRightClick","_useState","useState","_useState2","_slicedToArray","pages","setPages","_useState3","_useState4","pageNumber","setPageNumber","onSelectionChangeRef","useRef","onKeyDownRef","_useState5","filter","itm","hide","_useState6","columns","setColumns","_useState7","_useState8","hoveredColumn","setHoveredColumn","_useState9","_useState10","selectedRows","setSelectedRows","_useState11","_useState12","lastSelectedRowIndex","setLastSelectedRowIndex","_useState13","_useState14","selectedItems","setSelectedItems","divRef","_useState15","_useState16","_clickTimeout","_setClickTimeout","useEffect","_pages","arr","chunkSize","arguments","length","undefined","result","i","push","slice","formatArrayIntoChunks","startResize","index","e","preventDefault","stopPropagation","startX","clientX","startWidth","doDrag","moveEvent","newWidth","updatedColumns","_toConsumableArray","document","addEventListener","stopDrag","removeEventListener","handleMouseEnter","handleMouseLeave","useImperativeHandle","resetTableSelected","row","querySelector","scrollIntoView","block","behavior","getSelectedIndex","getSelectedRows","d","idx","includes","getFirstColumn","getParentElement","current","getSelectedRowsOnClick","setSelectRows","indx","style","display","justifyContent","key","prevIndex","_row$querySelector","newPrevIndex","focus","input","tagName","divInput","_row$querySelector2","className","flexDirection","minHeight","ref","tabIndex","position","zIndex","top","background","map","col","fontWeight","defaultValue","headerName","readOnly","onChange","onMouseDown","onMouseEnter","onMouseLeave","rowIndex","onClick","event","shiftKey","rangeStart","Math","min","rangeEnd","max","newSelectedRows","selectedItemsParams","newSelectedRowsFiltered","selectedRowData","removeNullValue","data","getIndexAndData","ctrlKey","metaKey","handleRowClick","onDoubleClick","clearTimeout","timeoutId","setTimeout","handleRowDoubleClick","handleRowKeyDown","onContextMenu","rowSelected","handleRightClick","colIndex","value","field","Pagination","count","useUpwardTableModal","_mutationFn","myAxios","user","link","responseDataKey","_ref$onModalClose","onModalClose","id","useId","inputSearchRef","tableRef","parentRef","show","setShowModal","setRows","_useMutation","useMutation","mutationKey","mutationFn","_x","_asyncToGenerator","_regeneratorRuntime","mark","_callee","variable","wrap","_context","prev","next","get","url","queryUrlName","search","headers","Authorization","accessToken","abrupt","sent","stop","apply","onSuccess","res","mutate","throttledSearch","throttle","query","performSearch","closeModal","wait","then","_parentRef$current","Modal","open","onClose","left","transform","paddingTop","paddingBottom","paddingLeft","paddingRight","TextInput","label","marginBottom","currentTarget","target","datagridview","inputRef","IconButton","right","CloseIcon","fontSize","openModal","_inputSearchRef$curre","reducer","state","action","_objectSpread","_defineProperty","pdcColumn","pdcSearchColumn","flex","pdcBanksColumn","PostDateChecks","_queryFn","_mutationFn2","_onSuccess","_getSelectedItem","modalCheckRef","_React$useState","React","_React$useState2","anchorEl","setAnchorEl","Boolean","isDragging","setIsDragging","selectedFiles","setSelectedFiles","showModal","searchInputRef","hasSelectedRow","setHasSelectedRow","pdcMode","setPdcMode","_useContext","useContext","AuthContext","searchRef","fileInputRef","savePDCButtonRef","addRefButton","subRefNoRef","PNoRef","subAccountRef","refNoRef","dateRef","remakrsRef","pnRef","branchRef","clientnameRef","_useQuery","useQuery","queryKey","queryFn","refetchOnWindowFocus","response","RefNo","pdcID","newRefNumberLoading","refetchNewRefNumber","refetch","_callee2","variables","_context2","mode","post","success","resetPDC","Swal","icon","message","showConfirmButton","timer","loadingAddNew","_useMutation2","_x2","_callee3","_context3","_x3","_callee5","_formatDataToDocument","Ref_No","_response$data$upload","uploadFiles","newObjContainerBasic","fileSelected","formatDataToDocument","_context6","_x4","_x5","_callee4","dataDocument","newObjContainer","_loop","_context5","basicItem","mainURL","blob","file","reader","_context4","uniqueFilename","fetch","File","fileName","fileType","FileReader","Promise","resolve","reject","onload","onerror","Error","name","readAsDataURL","delegateYield","alert","getSearchPDCCheck","upload","JSON","parse","all","setDataFormated","Name","Date","PNo","Acronym","Remarks","IDNo","sub_account","mutateSelectedSearch","isLoadingSelectedSearch","_useUpwardTableModalS","useUpwardTableModalSearchSafeMode","size","getSelectedItem","_x6","_x7","_x8","_x9","_callee6","rowItm","_","rowIdx","__","_context7","clientCloseModal","ClientUpwardTableModalSearch","UpwardTableModalSearch","clientOpenModal","_useUpwardTableModal","selectedRow","_searchRef$current","ref_no","closeUpwardPDCModal","UpwardPDCModal","openUpwardPDCModal","isLoadingModalSearchPDC","handleOnSave","useCallback","_x10","_callee7","_refNoRef$current","_pnRef$current2","_dateRef$current","_clientnameRef$curren","_remakrsRef$current","_branchRef$current","pdcTableData","filePromises","fileTransfer","fileToSave","stateSubmited","_context8","files","_loop2","_event$target","datakey","fileContent","getDataFormatted","_pnRef$current","click","Branch","checks","stringify","codeCondfirmationAlert","isUpdate","cb","userCodeConfirmation","saveCondfirmationAlert","isConfirm","handleDragLeave","handleDragEnter","handleDrop","_fileInputRef$current","fileList","dataTransfer","Array","from","newFiles","checkFile","setSelectedRow","setData","format","handleKeyDown","window","isDisableField","_Fragment","ModalCheck","incrementStringNumbers","str","increment","num","parseInt","toString","padStart","incrementDate","dateString","currentDate","setMonth","getMonth","getRefs","checknoRef","bankRef","remarksRef","checkdateRef","amountRef","tableRows","selectedIndex","getSelectedRow","Check_No","date","isNaN","getTime","isValidDate","parseFloat","replace","getData","_slipCodeRef","_slipDateRef","_checkOR","bankCode","newData","_checkcountRef","Check_Date","Check_Amnt","BankName","BankCode","Check_Remarks","Deposit_Slip","DateDeposit","OR_No","handleCheckDetailsSave","clsoeModal","handleOnClose","PageHelmet","Loading","padding","backgroundColor","Box","sx","theme","alignItems","columnGap","breakpoints","down","LoadingButton","loading","SearchIcon","onIconClick","Button","variant","startIcon","AddIcon","color","disabled","SaveIcon","text","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","isConfirmed","_modalCheckRef$curren2","_modalCheckRef$curren","getLastCheck_No","incrementCheckNo","grey","Menu","MenuListProps","MenuItem","flushSync","_refNoRef$current2","_pnRef$current3","_dateRef$current2","_clientnameRef$curren2","_remakrsRef$current2","_branchRef$current2","localStorage","removeItem","setItem","header","department","elementString","ReactDOMServer","_clientnameRef$curren3","_refNoRef$current3","textAlign","marginTop","margin","printString","code","rowGap","gap","border","borderRadius","_dateRef$current3","RestartAltIcon","disableIcon","_remakrsRef$current3","TextAreaInput","textarea","_pnRef$current4","_inputRef","PersonSearchIcon","_clientnameRef$curren4","_savePDCButtonRef$cur","DownloadIcon","DataGridViewReact","disbaleTable","RowIndex","_modalCheckRef$curren3","toLocaleString","minimumFractionDigits","maximumFractionDigits","splice","bottom","overflow","boxShadow","onDragEnter","onDragOver","onDragLeave","onDrop","flexWrap","DisplayFile","fileInput","DriveFolderUploadIcon","multiple","fullWidth","inputFile","getElementById","_ref4","_getSelectedItem2","handleDelayClose","setHandleDelayClose","blick","setBlick","searchModalInputRef","closeDelay","closeDelayRef","_useUpwardTableModalS2","_x11","_x12","_x13","_x14","_callee8","_context9","_branchRef$current3","BankCloseModal","BankUpwardTableModalSearch","BankOpenModal","opacity","transition","_bankRef$current","containerStyle","AccountBoxIcon","_remarksRef$current","_checkdateRef$current","_amountRef$current","TextFormatedInput","_checkcountRef$curren","setNewStateValue","dispatch","obj","Object","entries","forEach","_ref5","_ref6","incrementedNumber"],"sourceRoot":""}