{"version":3,"file":"static/js/9425.037f957f.chunk.js","mappings":"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","sources":["components/NumberFormat.tsx","components/UpwardTable.tsx","feautures/Admin/Task/Accounting/GeneralJournal.tsx","../node_modules/@mui/icons-material/CardTravel.js","../node_modules/@mui/material/colors/brown.js","../node_modules/@mui/material/colors/deepOrange.js"],"sourcesContent":["import React from \"react\";\nimport { NumericFormat, NumericFormatProps } from \"react-number-format\";\n\ninterface CustomProps {\n  onChange: (event: { target: { name: string; value: string } }) => void;\n  name: string;\n}\n\nexport const NumericFormatCustom = React.forwardRef<\n  NumericFormatProps,\n  CustomProps\n>(function NumericFormatCustom(props, ref) {\n  const { onChange, ...other } = props;\n\n  return (\n    <NumericFormat\n      {...other}\n      getInputRef={ref}\n      onValueChange={(values) => {\n        onChange({\n          target: {\n            name: props.name,\n            value: values.value,\n          },\n        });\n      }}\n      allowNegative={false}\n      thousandSeparator\n      valueIsNumericString\n      //   prefix=\"$\"\n    />\n  );\n});\n","import React, {\r\n  useState,\r\n  useRef,\r\n  forwardRef,\r\n  useImperativeHandle,\r\n} from \"react\";\r\n\r\nimport \"../style/datagridview.css\";\r\n\r\ninterface UpwardTablePropsType {\r\n  rows: Array<any>;\r\n  column: Array<any>;\r\n  width: number;\r\n  height: number;\r\n  dataReadOnly: boolean;\r\n  onSelectionChange?: (row: Array<any>) => void;\r\n  onKeyDown?: (row: Array<any>, key: string) => void;\r\n  isMultipleSelect?: boolean;\r\n  freeze?: boolean;\r\n  inputsearchselector?: string;\r\n  isRowSelectable?: boolean;\r\n  unSelectable?: (row: any) => boolean;\r\n  writeFooter?: (row: any) => React.ReactNode;\r\n  isLoading?: boolean;\r\n}\r\n\r\nconst UpwardTable = forwardRef(\r\n  (\r\n    {\r\n      rows,\r\n      column,\r\n      width,\r\n      height,\r\n      dataReadOnly,\r\n      onSelectionChange = () => {},\r\n      isMultipleSelect = false,\r\n      freeze = false,\r\n      onKeyDown,\r\n      inputsearchselector = \".search-input-up-on-key-down\",\r\n      isRowSelectable = true,\r\n      unSelectable = () => false,\r\n      writeFooter = () => null,\r\n      isLoading = false,\r\n    }: UpwardTablePropsType,\r\n    UpwardTableRef\r\n  ) => {\r\n    const onSelectionChangeRef = useRef(onSelectionChange);\r\n    const onKeyDownRef = useRef(onKeyDown);\r\n    const [columns, setColumns] = useState(column.filter((itm) => !itm.hide));\r\n    const [hoveredColumn, setHoveredColumn] = useState(null);\r\n    const [selectedRows, setSelectedRows] = useState<Array<number>>([0]);\r\n    const [lastSelectedRowIndex, setLastSelectedRowIndex] = useState(0);\r\n    const [selectedItems, setSelectedItems] = useState<Array<number>>([]);\r\n    const divRef = useRef<HTMLDivElement>(null);\r\n\r\n    const startResize = (index: any, e: any) => {\r\n      e.preventDefault();\r\n      e.stopPropagation();\r\n\r\n      const startX = e.clientX;\r\n      const startWidth = columns[index].width;\r\n\r\n      const doDrag = (moveEvent: any) => {\r\n        const newWidth = startWidth + (moveEvent.clientX - startX);\r\n        const updatedColumns = [...columns];\r\n        updatedColumns[index].width = newWidth > 50 ? newWidth : 50; // Set minimum column width\r\n        setColumns(updatedColumns);\r\n      };\r\n\r\n      const stopDrag = () => {\r\n        document.removeEventListener(\"mousemove\", doDrag);\r\n        document.removeEventListener(\"mouseup\", stopDrag);\r\n      };\r\n\r\n      document.addEventListener(\"mousemove\", doDrag);\r\n      document.addEventListener(\"mouseup\", stopDrag);\r\n    };\r\n    const handleMouseEnter = (index: any) => {\r\n      setHoveredColumn(index); // Set the hovered column index\r\n    };\r\n    const handleMouseLeave = () => {\r\n      setHoveredColumn(null); // Reset hovered column index\r\n    };\r\n    const handleRowClick = (\r\n      rowIndex: any,\r\n      event: React.MouseEvent<HTMLDivElement, MouseEvent>\r\n    ) => {\r\n      function getIndexAndData(selectedRowData: Array<any>) {\r\n        const filterSelectrowData = selectedRowData.map((d, idx) => {\r\n          if (!unSelectable(d)) {\r\n            return { idx, data: d };\r\n          }\r\n          return null;\r\n        });\r\n        const removeNullValue = filterSelectrowData.filter((d) => d !== null);\r\n        const data = removeNullValue.map((itm: any) => itm.data);\r\n        const newSelectedRowsFiltered = removeNullValue.map(\r\n          (itm: any) => itm.idx\r\n        );\r\n        return { newSelectedRowsFiltered, data };\r\n      }\r\n\r\n      if (!isMultipleSelect) {\r\n        // Single selection mode\r\n        setSelectedRows([rowIndex]);\r\n      } else {\r\n        // Multiple selection mode\r\n        if (event.shiftKey && lastSelectedRowIndex !== null) {\r\n          // Shift + Click: Select range between last clicked row and current clicked row\r\n          const rangeStart = Math.min(lastSelectedRowIndex, rowIndex);\r\n          const rangeEnd = Math.max(lastSelectedRowIndex, rowIndex);\r\n          const newSelectedRows: Array<number> = [];\r\n          for (let i = rangeStart; i <= rangeEnd; i++) {\r\n            if (!selectedRows.includes(i)) {\r\n              newSelectedRows.push(i);\r\n            }\r\n          }\r\n\r\n          let selectedItemsParams: Array<number> = [\r\n            ...selectedItems,\r\n            ...newSelectedRows,\r\n          ];\r\n\r\n          setSelectedRows([...selectedRows, ...newSelectedRows]);\r\n          const selectedRowData = rows.filter((d, idx) =>\r\n            selectedItemsParams.includes(idx)\r\n          );\r\n          const { newSelectedRowsFiltered, data } =\r\n            getIndexAndData(selectedRowData);\r\n\r\n          setSelectedItems(newSelectedRowsFiltered);\r\n          onSelectionChangeRef.current(data);\r\n        } else if (event.ctrlKey || event.metaKey) {\r\n          // Ctrl (or Cmd on macOS) + Click: Toggle row selection\r\n          if (selectedRows.includes(rowIndex) && !freeze) {\r\n            setSelectedRows(selectedRows.filter((i) => i !== rowIndex));\r\n            setSelectedItems((d) => {\r\n              d = d.filter((i) => i !== rowIndex);\r\n              return d;\r\n            });\r\n            let selectedItemsParams: Array<number> = selectedItems.filter(\r\n              (i) => i !== rowIndex\r\n            );\r\n            const selectedRowData = rows.filter((d, idx) =>\r\n              selectedItemsParams.includes(idx)\r\n            );\r\n\r\n            setSelectedItems(selectedItemsParams);\r\n            onSelectionChangeRef.current(selectedRowData);\r\n          } else {\r\n            setSelectedRows([...selectedRows, rowIndex]);\r\n            setSelectedItems((d) => {\r\n              d.push(rowIndex);\r\n              return d;\r\n            });\r\n            let selectedItemsParams: Array<number> = [\r\n              ...selectedItems,\r\n              rowIndex,\r\n            ];\r\n\r\n            const selectedRowData = rows.filter((d, idx) =>\r\n              selectedItemsParams.includes(idx)\r\n            );\r\n\r\n            setSelectedItems(selectedItemsParams);\r\n            onSelectionChangeRef.current(selectedRowData);\r\n          }\r\n        } else {\r\n          // Regular click in multiple selection mode: Single click to select a row\r\n          setSelectedRows([rowIndex]);\r\n        }\r\n      }\r\n      setLastSelectedRowIndex(rowIndex); // Update the last selected index\r\n    };\r\n    const handleRowDoubleClick = (\r\n      rowIndex: any,\r\n      event: React.MouseEvent<HTMLDivElement, MouseEvent>\r\n    ) => {\r\n      const row = rows[rowIndex];\r\n      if (unSelectable(row)) return;\r\n      if (!isRowSelectable) return;\r\n\r\n      let selectedItemsParams: Array<number> = [];\r\n\r\n      if (selectedItems.includes(rowIndex) && !freeze) {\r\n        selectedItemsParams = selectedItems.filter((i) => i !== rowIndex);\r\n        setSelectedItems(selectedItemsParams);\r\n        const selectedRowData = rows.filter((d, idx) =>\r\n          selectedItemsParams.includes(idx)\r\n        );\r\n        onSelectionChangeRef.current(selectedRowData);\r\n\r\n        return;\r\n      }\r\n\r\n      if (isMultipleSelect) {\r\n        selectedItemsParams = [...selectedItems, rowIndex];\r\n      } else {\r\n        selectedItemsParams = [rowIndex];\r\n      }\r\n\r\n      setSelectedItems(selectedItemsParams);\r\n      const selectedRowData = rows.filter((d, idx) =>\r\n        selectedItemsParams.includes(idx)\r\n      );\r\n      onSelectionChangeRef.current(selectedRowData);\r\n    };\r\n    const handleKeyDown = (e: any) => {\r\n      if (e.key === \"Enter\" || e.key === \"NumpadEnter\") {\r\n        e.preventDefault();\r\n        if (!isRowSelectable) return;\r\n\r\n        let selectedItemsParams: Array<number> = [];\r\n        const rowIndex = selectedRows[selectedRows.length - 1];\r\n        if (isMultipleSelect) {\r\n          selectedItemsParams = [...selectedItems, ...selectedRows];\r\n        } else {\r\n          selectedItemsParams = [rowIndex];\r\n        }\r\n        const row = rows[selectedItemsParams[selectedItemsParams.length - 1]];\r\n        if (unSelectable(row)) {\r\n          return;\r\n        }\r\n\r\n        if (selectedItems.includes(rowIndex) && !freeze) {\r\n          selectedItemsParams = selectedItems.filter((i) => i !== rowIndex);\r\n          setSelectedItems(selectedItemsParams);\r\n          onSelectionChangeRef.current([]);\r\n          return;\r\n        }\r\n\r\n        setSelectedItems(selectedItemsParams);\r\n        onSelectionChangeRef.current([row]);\r\n      } else if (e.key === \"ArrowDown\") {\r\n        e.preventDefault();\r\n        setSelectedRows((prevIndex: any) => {\r\n          if (prevIndex[prevIndex.length - 1] === null) return [0];\r\n          if (prevIndex[prevIndex.length - 1] >= rows.length - 1) {\r\n            return [rows.length - 1];\r\n          }\r\n          const newPrevIndex = prevIndex[prevIndex.length - 1] + 1;\r\n          const row = document.querySelector(`.row-${newPrevIndex}`);\r\n          row?.querySelector(\"input\")?.focus();\r\n\r\n          row?.scrollIntoView({ block: \"end\", behavior: \"smooth\" });\r\n          return [newPrevIndex];\r\n        });\r\n      } else if (e.key === \"ArrowUp\") {\r\n        e.preventDefault();\r\n\r\n        if (selectedRows[selectedRows.length - 1] === 0) {\r\n          const input = document.querySelector(\r\n            inputsearchselector\r\n          ) as HTMLInputElement;\r\n          if (input && input.tagName === \"INPUT\") {\r\n            input?.focus();\r\n          } else if (input && input.tagName === \"DIV\") {\r\n            const divInput = document.querySelector(\r\n              `${inputsearchselector} input`\r\n            ) as HTMLInputElement;\r\n\r\n            divInput?.focus();\r\n          }\r\n        }\r\n\r\n        setSelectedRows((prevIndex: any) => {\r\n          if (prevIndex[prevIndex.length - 1] === 0) return [0];\r\n          const newPrevIndex = prevIndex[prevIndex.length - 1] - 1;\r\n          const row = document.querySelector(`.row-${newPrevIndex}`);\r\n\r\n          row?.scrollIntoView({ block: \"end\", behavior: \"smooth\" });\r\n          row?.querySelector(\"input\")?.focus();\r\n          return [newPrevIndex];\r\n        });\r\n      } else if (e.key === \"Delete\" || e.key === \"Backspace\") {\r\n        if (!isRowSelectable) return;\r\n\r\n        const selectedRowData = rows.filter((d, idx) =>\r\n          selectedRows.includes(idx)\r\n        );\r\n\r\n        if (onKeyDownRef?.current) {\r\n          onKeyDownRef?.current(selectedRowData, e.key);\r\n        }\r\n      }\r\n    };\r\n    useImperativeHandle(UpwardTableRef, () => ({\r\n      resetTableSelected: () => {\r\n        setSelectedRows([0]);\r\n        setLastSelectedRowIndex(0);\r\n        setSelectedItems([]);\r\n        if (rows.length > 0) {\r\n          const row = document.querySelector(`.row-${0}`);\r\n          row?.scrollIntoView({ block: \"end\", behavior: \"smooth\" });\r\n        }\r\n      },\r\n      getSelectedRows: () => {\r\n        return rows.filter((d, idx) => selectedItems.includes(idx));\r\n      },\r\n    }));\r\n\r\n\r\n    return (\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          justifyContent: \"center\",\r\n        }}\r\n        onKeyDown={handleKeyDown}\r\n      >\r\n        <div className=\"table-frame-color\">\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              flexDirection: \"column\",\r\n              width: `${width - 10}px        `,\r\n              height: `${height - 135}px`,\r\n            }}\r\n            className=\"table-frame\"\r\n          >\r\n            <div className=\"table-panel\">\r\n              <div ref={divRef} className={`grid-container `} tabIndex={-1}>\r\n                <div\r\n                  className=\"grid-row grid-header\"\r\n                  style={{\r\n                    position: \"sticky\",\r\n                    zIndex: \"10\",\r\n                    top: \"-1px\",\r\n                    background: \"white\",\r\n                  }}\r\n                >\r\n                  {columns.map((col: any, index: number) => (\r\n                    <div\r\n                      key={index}\r\n                      className={`grid-cell header-cell ${\r\n                        hoveredColumn === index ? `highlight-column` : \"\"\r\n                      }\r\n                      \r\n                      `} // Add the class if hovered\r\n                      style={{\r\n                        width: col.width,\r\n                        height: \"20px\",\r\n                        textAlign: col.type === \"number\" ? \"center\" : \"left\",\r\n                      }}\r\n                    >\r\n                      <input\r\n                        style={{ fontWeight: \"bold\" }}\r\n                        defaultValue={col.headerName}\r\n                        readOnly\r\n                        onChange={(e) => {}}\r\n                      />\r\n                      <div\r\n                        className=\"resize-handle\"\r\n                        onMouseDown={(e) => startResize(index, e)}\r\n                        onMouseEnter={(e) => {\r\n                          e.preventDefault();\r\n                          handleMouseEnter(index);\r\n                        }} // On hover\r\n                        onMouseLeave={(e) => {\r\n                          e.preventDefault();\r\n                          handleMouseLeave();\r\n                        }} // On mouse leave\r\n                      />\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n                {rows.map((row: any, rowIndex: any) => (\r\n                  <div\r\n                    className={`grid-row row-${rowIndex}`} // Highlight selected row\r\n                    key={rowIndex}\r\n                    onClick={(e) => handleRowClick(rowIndex, e)}\r\n                    onDoubleClick={(e) => handleRowDoubleClick(rowIndex, e)}\r\n                  >\r\n                    {columns.map((col: any, colIndex: number) => (\r\n                      <div\r\n                        key={colIndex}\r\n                        style={{ width: col.width }}\r\n                        className={`grid-cell ${\r\n                          hoveredColumn === colIndex ? `highlight-column` : \"\"\r\n                        }`}\r\n                      >\r\n                        <input\r\n                          value={row[col.field]}\r\n                          onChange={(e) => {}}\r\n                          readOnly={dataReadOnly}\r\n                          className={`${\r\n                            selectedRows.includes(rowIndex)\r\n                              ? \"selected-row\"\r\n                              : \"\"\r\n                          } ${\r\n                            selectedItems.includes(rowIndex)\r\n                              ? \"selected-items\"\r\n                              : \"\"\r\n                          }\r\n                          ${col.type === \"number\" ? \"number\" : \"text\"}\r\n                          `}\r\n                        />\r\n                        <div\r\n                          className=\"resize-handle\"\r\n                          onMouseDown={(e) => {\r\n                            e.preventDefault();\r\n                            startResize(colIndex, e);\r\n                          }}\r\n                          onMouseEnter={(e) => {\r\n                            e.preventDefault();\r\n                            handleMouseEnter(colIndex);\r\n                          }} // On hover\r\n                          onMouseLeave={(e) => {\r\n                            e.preventDefault();\r\n                            handleMouseLeave();\r\n                          }} // On mouse leave\r\n                        />\r\n                      </div>\r\n                    ))}\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            </div>\r\n          </div>\r\n          {writeFooter(rows) ? (\r\n            <>{writeFooter(rows)}</>\r\n          ) : (\r\n            <div className=\"table-panel-footer\">Records : {rows.length}</div>\r\n          )}\r\n        </div>\r\n        {isLoading && (\r\n          <div className=\"table-loading\">\r\n            <div className=\"loader\">\r\n              <img\r\n                alt=\"loader-gif\"\r\n                src={process.env.REACT_APP_IMAGE_URL + \"/image/loading.gif\"}\r\n              />\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n);\r\n\r\nexport default UpwardTable;\r\n","import { useReducer, useContext, useState, useRef, useEffect } from \"react\";\nimport {\n  TextField,\n  Button,\n  FormControl,\n  InputAdornment,\n  IconButton,\n  InputLabel,\n  OutlinedInput,\n  Select,\n  MenuItem,\n  Modal,\n  Typography,\n  Box,\n  Checkbox,\n  FormControlLabel,\n} from \"@mui/material\";\nimport CardTravelIcon from \"@mui/icons-material/CardTravel\";\nimport CustomDatePicker from \"../../../../components/DatePicker\";\nimport LoadingButton from \"@mui/lab/LoadingButton\";\nimport AddIcon from \"@mui/icons-material/Add\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport Swal from \"sweetalert2\";\nimport { AuthContext } from \"../../../../components/AuthContext\";\nimport RestartAltIcon from \"@mui/icons-material/RestartAlt\";\nimport { useMutation, useQuery, useQueryClient } from \"react-query\";\nimport { NumericFormatCustom } from \"../../../../components/NumberFormat\";\nimport useQueryModalTable from \"../../../../hooks/useQueryModalTable\";\nimport { wait } from \"../../../../lib/wait\";\nimport { GridRowSelectionModel } from \"@mui/x-data-grid\";\nimport NotInterestedIcon from \"@mui/icons-material/NotInterested\";\nimport { LocalizationProvider } from \"@mui/x-date-pickers/LocalizationProvider\";\nimport { AdapterDateFns } from \"@mui/x-date-pickers/AdapterDateFns\";\nimport { DatePicker } from \"@mui/x-date-pickers\";\nimport { brown, deepOrange, grey } from \"@mui/material/colors\";\nimport Table from \"../../../../components/Table\";\nimport {\n  codeCondfirmationAlert,\n  saveCondfirmationAlert,\n} from \"../../../../lib/confirmationAlert\";\nimport {\n  generateRandomClass,\n  keyBoardSelectionTable,\n} from \"../../../../components/ModalWithTable\";\nimport { flushSync } from \"react-dom\";\nimport UpwardTable from \"../../../../components/UpwardTable\";\nconst initialState = {\n  sub_refNo: \"\",\n  refNo: \"\",\n  dateEntry: new Date(),\n  explanation: \"\",\n\n  code: \"\",\n  acctName: \"\",\n  subAcct: \"\",\n  subAcctName: \"\",\n  IDNo: \"\",\n  ClientName: \"\",\n  credit: \"\",\n  debit: \"\",\n  TC_Code: \"\",\n  TC_Desc: \"\",\n  remarks: \"\",\n  vatType: \"NON-VAT\",\n  invoice: \"\",\n  BranchCode: \"HO\",\n  totalDebit: \"\",\n  totalCredit: \"\",\n  totalBalance: \"\",\n\n  jobAutoExp: false,\n  jobTransactionDate: new Date(),\n  jobType: \"\",\n  search: \"\",\n};\n\nexport const reducer = (state: any, action: any) => {\n  switch (action.type) {\n    case \"UPDATE_FIELD\":\n      return {\n        ...state,\n        [action.field]: action.value,\n      };\n    default:\n      return state;\n  }\n};\n\nconst selectedCollectionColumns = [\n  { field: \"code\", headerName: \"Code\", width: 150 },\n  { field: \"acctName\", headerName: \"Account Name\", width: 300 },\n  {\n    field: \"subAcctName\",\n    headerName: \"Sub Account\",\n    flex: 1,\n    width: 170,\n  },\n  { field: \"ClientName\", headerName: \"Name\", flex: 1, width: 300 },\n  { field: \"debit\", headerName: \"Debit\", width: 80 },\n  { field: \"credit\", headerName: \"Credit\", width: 100 },\n  // hide\n  { field: \"TC_Code\", headerName: \"TC\", width: 100 },\n  {\n    field: \"remarks\",\n    headerName: \"Remarks\",\n    flex: 1,\n    width: 300,\n  },\n  { field: \"vatType\", headerName: \"Vat Type\", width: 100 },\n  { field: \"invoice\", headerName: \"Invoice\", flex: 1, width: 200 },\n  { field: \"TempID\", headerName: \"TempId\", hide: true },\n  { field: \"IDNo\", headerName: \"I.D.\", flex: 1, width: 300, hide: true },\n  {\n    field: \"BranchCode\",\n    headerName: \"BranchCode\",\n    flex: 1,\n    width: 300,\n    hide: true,\n  },\n];\n\nexport default function GeneralJournal() {\n  const mainId = generateRandomClass();\n  const { myAxios, user } = useContext(AuthContext);\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const [save, setSave] = useState(false);\n  const [openJobs, setOpenJobs] = useState(false);\n  const [hasSelected, setHasSelected] = useState(false);\n  const [searchSelected, setSearchSelected] = useState(false);\n  const [editTransaction, setEditTransaction] = useState({\n    edit: false,\n    updateId: \"\",\n  });\n  const [generalJournal, setGeneralJournal] = useState<GridRowSelectionModel>(\n    []\n  );\n  const queryClient = useQueryClient();\n  const datePickerRef = useRef<HTMLElement>(null);\n  const reloadIDButtonRef = useRef<HTMLButtonElement>(null);\n  const explanationInputRef = useRef<HTMLInputElement>(null);\n\n  const idInputRef = useRef<HTMLInputElement>(null);\n  const debitInputRef = useRef<HTMLInputElement>(null);\n  const tcInputRef = useRef<HTMLInputElement>(null);\n\n  const chartAccountSearchInput = useRef<HTMLInputElement>(null);\n  const IdsSearchInput = useRef<HTMLInputElement>(null);\n  const codeInputRef = useRef<HTMLInputElement>(null);\n  const table = useRef<any>(null);\n\n  const invoiceRef = useRef<HTMLInputElement>(null);\n\n  const {\n    isLoading: loadingGeneralJournalGenerator,\n    refetch: refetchGeneralJournalGenerator,\n  } = useQuery({\n    queryKey: \"general-journal-id-generator\",\n    queryFn: async () =>\n      await myAxios.get(\n        `/task/accounting/general-journal/get-general-journal-id`,\n        {\n          headers: {\n            Authorization: `Bearer ${user?.accessToken}`,\n          },\n        }\n      ),\n    refetchOnWindowFocus: false,\n    onSuccess: (data) => {\n      const response = data as any;\n      if (hasSelected) {\n        dispatch({\n          type: \"UPDATE_FIELD\",\n          field: \"refNo\",\n          value: state.sub_refNo ?? \"\",\n        });\n        return;\n      }\n      dispatch({\n        type: \"UPDATE_FIELD\",\n        field: \"refNo\",\n        value:\n          response.data.generateGeneralJournalID[0].general_journal_id ?? \"\",\n      });\n      dispatch({\n        type: \"UPDATE_FIELD\",\n        field: \"sub_refNo\",\n        value:\n          response.data.generateGeneralJournalID[0].general_journal_id ?? \"\",\n      });\n    },\n  });\n  const {\n    mutate: addGeneralJournalMutate,\n    isLoading: loadingGeneralJournalMutate,\n  } = useMutation({\n    mutationKey: \"add-journal-voucher\",\n    mutationFn: async (variable: any) =>\n      await myAxios.post(\n        \"/task/accounting/general-journal/add-general-journal\",\n        variable,\n        {\n          headers: {\n            Authorization: `Bearer ${user?.accessToken}`,\n          },\n        }\n      ),\n    onSuccess: (res) => {\n      const response = res as any;\n      if (response.data.success) {\n        queryClient.invalidateQueries(\"search-general-journal\");\n        setSave(false);\n        setHasSelected(false);\n        setNewStateValue(dispatch, initialState);\n        refetchGeneralJournalGenerator();\n        setGeneralJournal([]);\n        setEditTransaction({\n          edit: false,\n          updateId: \"\",\n        });\n        return Swal.fire({\n          position: \"center\",\n          icon: \"success\",\n          title: response.data.message,\n          timer: 1500,\n        });\n      }\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: response.data.message,\n        timer: 1500,\n      });\n    },\n  });\n  const { mutate: mutateJob, isLoading: isLoadingJob } = useMutation({\n    mutationKey: \"jobs\",\n    mutationFn: async (variable: any) =>\n      await myAxios.post(\"/task/accounting/general-journal/jobs\", variable, {\n        headers: {\n          Authorization: `Bearer ${user?.accessToken}`,\n        },\n      }),\n    onSuccess: (res) => {\n      const response = res as any;\n      setGeneralJournal([]);\n      setGeneralJournal(response.data.jobs);\n      setSave(true);\n      setOpenJobs(false);\n    },\n  });\n  const {\n    mutate: mutateVoidGeneralJournal,\n    isLoading: loadingVoidGeneralJournalMutate,\n  } = useMutation({\n    mutationKey: \"void-journal-voucher\",\n    mutationFn: async (variable: any) =>\n      await myAxios.post(\n        \"/task/accounting/general-journal/void-general-journal\",\n        variable,\n        {\n          headers: {\n            Authorization: `Bearer ${user?.accessToken}`,\n          },\n        }\n      ),\n    onSuccess: (res) => {\n      const response = res as any;\n      if (response.data.success) {\n        queryClient.invalidateQueries(\"search-general-journal\");\n        setSave(false);\n        setHasSelected(false);\n        setNewStateValue(dispatch, initialState);\n        refetchGeneralJournalGenerator();\n        setGeneralJournal([]);\n        setEditTransaction({\n          edit: false,\n          updateId: \"\",\n        });\n        return Swal.fire({\n          position: \"center\",\n          icon: \"success\",\n          title: response.data.message,\n          timer: 1500,\n        });\n      }\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: response.data.message,\n        timer: 1500,\n      });\n    },\n  });\n  const {\n    mutate: getSearchSelectedGeneralJournal,\n    isLoading: loadingGetSearchSelectedGeneralJournal,\n  } = useMutation({\n    mutationKey: \"get-selected-search-general-journal\",\n    mutationFn: async (variable: any) =>\n      await myAxios.post(\n        \"/task/accounting/general-journal/get-selected-search-general-journal\",\n        variable,\n        {\n          headers: {\n            Authorization: `Bearer ${user?.accessToken}`,\n          },\n        }\n      ),\n    onSuccess: (res) => {\n      const response = res as any;\n      const selected = response.data.getSelectedSearchGeneralJournal;\n      const { explanation, dateEntry, refNo } = selected[0];\n\n      dispatch({\n        type: \"UPDATE_FIELD\",\n        field: \"sub_refNo\",\n        value: refNo,\n      });\n      dispatch({\n        type: \"UPDATE_FIELD\",\n        field: \"refNo\",\n        value: refNo,\n      });\n      dispatch({\n        type: \"UPDATE_FIELD\",\n        field: \"dateEntry\",\n        value: dateEntry,\n      });\n      dispatch({\n        type: \"UPDATE_FIELD\",\n        field: \"explanation\",\n        value: explanation,\n      });\n      setGeneralJournal(selected);\n    },\n  });\n  const {\n    ModalComponent: ModalSearchGeneralJounal,\n    openModal: openSearchGeneralJounal,\n    isLoading: isLoadingSearchGeneralJounal,\n    closeModal: closeSearchGeneralJounal,\n  } = useQueryModalTable({\n    link: {\n      url: \"/task/accounting/general-journal/search-general-journal\",\n      queryUrlName: \"searchGeneralJournal\",\n    },\n    columns: [\n      { field: \"Date_Entry\", headerName: \"Date\", width: 130 },\n      { field: \"Source_No\", headerName: \"Ref No.\", width: 250 },\n      {\n        field: \"Explanation\",\n        headerName: \"Explanation\",\n        flex: 1,\n      },\n    ],\n    queryKey: \"search-general-journal\",\n    uniqueId: \"Source_No\",\n    responseDataKey: \"searchGeneralJournal\",\n    onSelected: (selectedRowData, data) => {\n      getSearchSelectedGeneralJournal({\n        Source_No: selectedRowData[0].Source_No,\n      });\n      setSearchSelected(true);\n      setSave(true);\n      setHasSelected(true);\n      setGeneralJournal([]);\n      setEditTransaction({\n        edit: false,\n        updateId: \"\",\n      });\n\n      closeSearchGeneralJounal();\n    },\n    onCloseFunction: (value: any) => {\n      dispatch({ type: \"UPDATE_FIELD\", field: \"search\", value });\n    },\n    searchRef: chartAccountSearchInput,\n  });\n  const {\n    ModalComponent: ModalChartAccountSearch,\n    openModal: openChartAccountSearch,\n    isLoading: isLoadingChartAccountSearch,\n    closeModal: closeChartAccountSearch,\n  } = useQueryModalTable({\n    link: {\n      url: \"/task/accounting/general-journal/get-chart-account\",\n      queryUrlName: \"chartAccountSearch\",\n    },\n    columns: [\n      { field: \"Acct_Code\", headerName: \"Account Code\", width: 130 },\n      { field: \"Acct_Title\", headerName: \"Account Title.\", width: 250 },\n      {\n        field: \"Short\",\n        headerName: \"Short\",\n        flex: 1,\n      },\n    ],\n    queryKey: \"get-chart-account\",\n    uniqueId: \"Acct_Code\",\n    responseDataKey: \"getChartOfAccount\",\n    onSelected: (selectedRowData, data) => {\n      dispatch({\n        type: \"UPDATE_FIELD\",\n        field: \"code\",\n        value: selectedRowData[0].Acct_Code,\n      });\n      dispatch({\n        type: \"UPDATE_FIELD\",\n        field: \"acctName\",\n        value: selectedRowData[0].Acct_Title,\n      });\n      closeChartAccountSearch();\n      setTimeout(() => {\n        idInputRef.current?.focus();\n      }, 250);\n    },\n    searchRef: chartAccountSearchInput,\n  });\n  const {\n    ModalComponent: ModalPolicyIdClientIdRefId,\n    openModal: openPolicyIdClientIdRefId,\n    isLoading: isLoadingPolicyIdClientIdRefId,\n    closeModal: closePolicyIdClientIdRefId,\n  } = useQueryModalTable({\n    link: {\n      url: \"/task/accounting/search-pdc-policy-id\",\n      queryUrlName: \"searchPdcPolicyIds\",\n    },\n    columns: [\n      { field: \"Type\", headerName: \"Type\", width: 130 },\n      { field: \"IDNo\", headerName: \"ID No.\", width: 200 },\n      {\n        field: \"Name\",\n        headerName: \"Name\",\n        flex: 1,\n      },\n      {\n        field: \"ID\",\n        headerName: \"ID\",\n        hide: true,\n      },\n    ],\n    queryKey: \"get-policyId-ClientId-RefId\",\n    uniqueId: \"IDNo\",\n    responseDataKey: \"clientsId\",\n    onSelected: (selectedRowData) => {\n      console.log(selectedRowData);\n      dispatch({\n        type: \"UPDATE_FIELD\",\n        field: \"ClientName\",\n        value: selectedRowData[0].Name ?? \"\",\n      });\n      dispatch({\n        type: \"UPDATE_FIELD\",\n        field: \"IDNo\",\n        value: selectedRowData[0].IDNo ?? \"\",\n      });\n\n      dispatch({\n        type: \"UPDATE_FIELD\",\n        field: \"subAcct\",\n        value: selectedRowData[0].sub_account,\n      });\n      dispatch({\n        type: \"UPDATE_FIELD\",\n        field: \"subAcctName\",\n        value: selectedRowData[0].ShortName ?? \"\",\n      });\n\n      closePolicyIdClientIdRefId();\n      setTimeout(() => {\n        debitInputRef.current?.focus();\n      }, 200);\n    },\n    searchRef: IdsSearchInput,\n  });\n  const {\n    ModalComponent: ModalTransactionAccount,\n    openModal: openTransactionAccount,\n    isLoading: isLoadingTransactionAccount,\n    closeModal: closeTransactionAccount,\n  } = useQueryModalTable({\n    link: {\n      url: \"/task/accounting/general-journal/get-transaction-account\",\n      queryUrlName: \"transactionCodeSearch\",\n    },\n    columns: [\n      { field: \"Code\", headerName: \"Code\", width: 130 },\n      {\n        field: \"Description\",\n        headerName: \"Description\",\n        flex: 1,\n      },\n    ],\n    queryKey: \"get-transaction-account\",\n    uniqueId: \"Code\",\n    responseDataKey: \"getTransactionAccount\",\n    onSelected: (selectedRowData) => {\n      dispatch({\n        type: \"UPDATE_FIELD\",\n        field: \"TC_Code\",\n        value: selectedRowData[0].Code,\n      });\n      dispatch({\n        type: \"UPDATE_FIELD\",\n        field: \"TC_Desc\",\n        value: selectedRowData[0].Description,\n      });\n      closeTransactionAccount();\n      setTimeout(() => {\n        tcInputRef.current?.focus();\n      }, 200);\n    },\n    searchRef: IdsSearchInput,\n  });\n  useEffect(() => {\n    const debit = generalJournal.reduce((a: number, item: any) => {\n      return a + parseFloat(item.debit.replace(/,/g, \"\"));\n    }, 0);\n    const credit = generalJournal.reduce((a: number, item: any) => {\n      return a + parseFloat(item.credit.replace(/,/g, \"\"));\n    }, 0);\n    dispatch({\n      type: \"UPDATE_FIELD\",\n      field: \"totalDebit\",\n      value: debit.toFixed(2),\n    });\n    dispatch({\n      type: \"UPDATE_FIELD\",\n      field: \"totalCredit\",\n      value: credit.toFixed(2),\n    });\n    dispatch({\n      type: \"UPDATE_FIELD\",\n      field: \"totalBalance\",\n      value: (debit - credit).toFixed(2),\n    });\n  }, [generalJournal]);\n  const handleInputChange = (e: any) => {\n    const { name, value } = e.target;\n    dispatch({ type: \"UPDATE_FIELD\", field: name, value });\n  };\n\n  function handleOnSave() {\n    if (state.refNo === \"\") {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: \"Please provide reference number!\",\n        timer: 1500,\n      });\n    }\n    if (state.explanation === \"\") {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: \"Please provide explanation!\",\n        timer: 1500,\n      }).then(() => {\n        wait(300).then(() => {\n          explanationInputRef.current?.focus();\n        });\n      });\n    }\n    if (\n      (state.totalDebit === \"\" && state.totalCredit === \"\") ||\n      (state.totalDebit === \"0.00\" && state.totalCredit === \"0.00\")\n    ) {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title:\n          \"Total Debit and Credit amount must not be zero(0), please double check the entries\",\n        timer: 1500,\n      }).then(() => {\n        wait(300).then(() => {});\n      });\n    }\n    if (state.totalDebit !== state.totalCredit) {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title:\n          \"Total Debit and Credit amount must be balance, please double check the entries\",\n        timer: 1500,\n      }).then(() => {\n        wait(300).then(() => {});\n      });\n    }\n    if (hasSelected) {\n      codeCondfirmationAlert({\n        isUpdate: true,\n        cb: (userCodeConfirmation) => {\n          addGeneralJournalMutate({\n            hasSelected,\n            refNo: state.refNo,\n            dateEntry: state.dateEntry,\n            explanation: state.explanation,\n            generalJournal,\n            userCodeConfirmation,\n          });\n        },\n      });\n    } else {\n      saveCondfirmationAlert({\n        isConfirm: () => {\n          addGeneralJournalMutate({\n            hasSelected,\n            refNo: state.refNo,\n            dateEntry: state.dateEntry,\n            explanation: state.explanation,\n            generalJournal,\n          });\n        },\n      });\n    }\n  }\n  function handleVoid() {\n    codeCondfirmationAlert({\n      isUpdate: false,\n      text: `Are you sure you want to void ${state.refNo}`,\n      cb: (userCodeConfirmation) => {\n        mutateVoidGeneralJournal({\n          refNo: state.refNo,\n          dateEntry: state.dateEntry,\n          userCodeConfirmation,\n        });\n      },\n    });\n  }\n  function handleRowSave() {\n    if (state.code === \"\") {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: \"Code is required!\",\n        timer: 1500,\n      }).then(() => {\n        return openChartAccountSearch(state.code);\n      });\n    }\n\n    if (state.ClientName === \"\") {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: \"ID is required!\",\n        timer: 1500,\n      }).then(() => {\n        return openPolicyIdClientIdRefId(state.ClientName);\n      });\n    }\n\n    if (isNaN(parseFloat(state.debit.replace(/,/g, \"\")))) {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: \"Debit is required!\",\n        timer: 1500,\n      });\n    }\n    if (isNaN(parseFloat(state.credit.replace(/,/g, \"\")))) {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: \"Credit is required!\",\n        timer: 1500,\n      });\n    }\n    if (\n      parseFloat(state.credit.replace(/,/g, \"\")) === 0 &&\n      parseFloat(state.debit.replace(/,/g, \"\")) === 0\n    ) {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: \"Credit and Debit must be different!\",\n        timer: 1500,\n      });\n    }\n\n    if (state.TC_Code === \"\") {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: \"TC is required!\",\n        timer: 1500,\n      }).then(() => {\n        return openTransactionAccount(state.TC_Code);\n      });\n    }\n\n    if (state.code.length >= 200) {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: \"Code is too long!\",\n        timer: 1500,\n      });\n    }\n    if (state.ClientName.length >= 200) {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: \"Client name is too long!\",\n        timer: 1500,\n      });\n    }\n    if (state.TC_Code.length >= 200) {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: \"TC is too long!\",\n        timer: 1500,\n      });\n    }\n    if (state.invoice.length >= 200) {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: \"Invoice is too long!\",\n        timer: 1500,\n      });\n    }\n\n    if (state.TC_Code.length >= 200) {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: \"TC is too long!\",\n        timer: 1500,\n      });\n    }\n\n    function generateID(array: Array<any>) {\n      const lastItem = array.length ? array[array.length - 1].TempID : \"000\";\n      const numericPart = (parseInt(lastItem.toString().match(/\\d+/)[0]) + 1)\n        .toString()\n        .padStart(3, \"0\");\n      return numericPart;\n    }\n    Swal.fire({\n      title: editTransaction.edit\n        ? `Are you sure you want to update row?`\n        : `Are you sure you want to add new row?`,\n      text: \"You won't be able to revert this!\",\n      icon: \"warning\",\n      showCancelButton: true,\n      confirmButtonColor: \"#3085d6\",\n      cancelButtonColor: \"#d33\",\n      confirmButtonText: editTransaction.edit\n        ? \"Yes, update it!\"\n        : \"Yes Add it\",\n    }).then((result) => {\n      if (result.isConfirmed) {\n        setGeneralJournal((d: any) => {\n          if (state.debit === \"\") {\n            state.debit = \"0.00\";\n          }\n          if (state.credit === \"\") {\n            state.credit = \"0.00\";\n          }\n\n          if (state.vatType === \"VAT\" && state.code !== \"1.06.02\") {\n            let taxableamt;\n\n            if (parseFloat(state.debit.replace(/,/g, \"\")) !== 0) {\n              taxableamt = parseFloat(state.debit.replace(/,/g, \"\")) / 1.12;\n              state.debit = taxableamt.toLocaleString(\"en-US\", {\n                minimumFractionDigits: 2,\n                maximumFractionDigits: 2,\n              });\n            } else {\n              taxableamt = parseFloat(state.credit.replace(/,/g, \"\")) / 1.12;\n              state.credit = taxableamt.toLocaleString(\"en-US\", {\n                minimumFractionDigits: 2,\n                maximumFractionDigits: 2,\n              });\n            }\n\n            const credit = parseFloat(\n              state.credit.toString().replace(/,/g, \"\")\n            ).toLocaleString(\"en-US\", {\n              minimumFractionDigits: 2,\n              maximumFractionDigits: 2,\n            });\n            const debit = parseFloat(\n              state.debit.toString().replace(/,/g, \"\")\n            ).toLocaleString(\"en-US\", {\n              minimumFractionDigits: 2,\n              maximumFractionDigits: 2,\n            });\n\n            state.credit = credit;\n            state.debit = debit;\n\n            if (editTransaction.edit) {\n              d = d.map((item: any) => {\n                if (editTransaction.updateId === item.TempID) {\n                  item = {\n                    ...item,\n                    ...state,\n                  };\n                }\n                return item;\n              });\n            } else {\n              d = [\n                ...d,\n                {\n                  ...state,\n                  TempID: generateID(d),\n                },\n              ];\n            }\n\n            let inputtax = taxableamt * 0.12;\n\n            if (parseFloat(state.debit.toString().replace(/,/g, \"\")) !== 0) {\n              state.debit = inputtax.toFixed(2);\n            } else {\n              state.credit = inputtax.toFixed(2);\n            }\n            d = [\n              ...d,\n              {\n                ...state,\n                code: \"1.06.02\",\n\n                acctName: \"Input Tax\",\n                TempID: generateID(d),\n              },\n            ];\n          } else {\n            const credit = parseFloat(\n              state.credit.toString().replace(/,/g, \"\")\n            ).toLocaleString(\"en-US\", {\n              minimumFractionDigits: 2,\n              maximumFractionDigits: 2,\n            });\n            const debit = parseFloat(\n              state.debit.toString().replace(/,/g, \"\")\n            ).toLocaleString(\"en-US\", {\n              minimumFractionDigits: 2,\n              maximumFractionDigits: 2,\n            });\n\n            state.credit = credit;\n            state.debit = debit;\n\n            if (editTransaction.edit) {\n              const newD = d.map((item: any) => {\n                if (editTransaction.updateId === item.TempID) {\n                  item = {\n                    ...item,\n                    ...state,\n                  };\n                }\n                return item;\n              });\n              return newD;\n            }\n            d = [\n              ...d,\n              {\n                ...state,\n                TempID: generateID(d),\n              },\n            ];\n          }\n          return d;\n        });\n\n        const resetValue = {\n          code: \"\",\n          acctName: \"\",\n          subAcct: \"\",\n          subAcctName: \"\",\n          IDNo: \"\",\n          ClientName: \"\",\n          credit: \"\",\n          debit: \"\",\n          TC_Code: \"\",\n          TC_Desc: \"\",\n          remarks: \"\",\n          vatType: \"NON-VAT\",\n          invoice: \"\",\n        };\n        setNewStateValue(dispatch, { ...state, ...resetValue });\n        setEditTransaction({ edit: false, updateId: \"\" });\n        wait(300).then(() => {\n          codeInputRef.current?.focus();\n        });\n      }\n    });\n  }\n  function handleJobs() {\n    setOpenJobs((d) => !d);\n  }\n\n  function handleClickPrint() {\n    flushSync(() => {\n      localStorage.removeItem(\"printString\");\n      localStorage.setItem(\"dataString\", JSON.stringify(generalJournal));\n      localStorage.setItem(\"paper-width\", \"8.5in\");\n      localStorage.setItem(\"paper-height\", \"11in\");\n      localStorage.setItem(\"module\", \"general-journal\");\n      localStorage.setItem(\"state\", JSON.stringify(state));\n      localStorage.setItem(\n        \"column\",\n        JSON.stringify([\n          { datakey: \"code\", header: \"ACCT #\", width: \"100px\" },\n          { datakey: \"acctName\", header: \"ACCOUNT TITLE\", width: \"200px\" },\n          { datakey: \"subAcctName\", header: \"SUB ACCOUNT\", width: \"120px\" },\n          { datakey: \"IDNo\", header: \"ID NO.\", width: \"150px\" },\n          { datakey: \"ClientName\", header: \"IDENTITY\", width: \"200px\" },\n          { datakey: \"debit\", header: \"DEBIT\", width: \"100px\" },\n          { datakey: \"credit\", header: \"CREDIT\", width: \"100px\" },\n        ])\n      );\n      localStorage.setItem(\n        \"title\",\n        user?.department === \"UMIS\"\n          ? \"UPWARD MANAGEMENT INSURANCE SERVICES\\n\"\n          : \"UPWARD CONSULTANCY SERVICES AND MANAGEMENT INC.\\n\"\n      );\n    });\n    window.open(\"/dashboard/print\", \"_blank\");\n  }\n  const width = window.innerWidth - 60;\n  const height = window.innerHeight - 220;\n\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        flexDirection: \"column\",\n        width: \"100%\",\n        height: \"100%\",\n        flex: 1,\n        padding: \"10px\",\n      }}\n    >\n      <div\n        style={{\n          display: \"flex\",\n          alignItems: \"center\",\n          columnGap: \"5px\",\n        }}\n      >\n        <div\n          style={{\n            display: \"flex\",\n            alignItems: \"center\",\n            columnGap: \"5px\",\n          }}\n        >\n          {isLoadingSearchGeneralJounal ? (\n            <LoadingButton loading={isLoadingSearchGeneralJounal} />\n          ) : (\n            <TextField\n              label=\"Search\"\n              size=\"small\"\n              name=\"search\"\n              value={state.search}\n              onChange={handleInputChange}\n              onKeyDown={(e) => {\n                if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n                  e.preventDefault();\n                  return openSearchGeneralJounal(\n                    (e.target as HTMLInputElement).value\n                  );\n                }\n                if (e.key === \"ArrowDown\") {\n                  e.preventDefault();\n                  const datagridview = document.querySelector(\n                    `.grid-container`\n                  ) as HTMLDivElement;\n                  datagridview.focus();\n                }\n              }}\n              InputProps={{\n                style: { height: \"27px\", fontSize: \"14px\" },\n                className: \"manok\",\n              }}\n              sx={{\n                width: \"300px\",\n                height: \"27px\",\n                \".MuiFormLabel-root\": { fontSize: \"14px\" },\n                \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n              }}\n            />\n          )}\n          {!save && (\n            <Button\n              sx={{\n                height: \"30px\",\n                fontSize: \"11px\",\n              }}\n              variant=\"contained\"\n              startIcon={<AddIcon sx={{ width: 15, height: 15 }} />}\n              id=\"entry-header-save-button\"\n              onClick={() => {\n                setSave(true);\n              }}\n              color=\"primary\"\n            >\n              New\n            </Button>\n          )}\n          <LoadingButton\n            sx={{\n              height: \"30px\",\n              fontSize: \"11px\",\n            }}\n            loading={loadingGeneralJournalMutate}\n            disabled={!save}\n            onClick={handleOnSave}\n            color=\"success\"\n            variant=\"contained\"\n          >\n            Save\n          </LoadingButton>\n          {save && (\n            <LoadingButton\n              sx={{\n                height: \"30px\",\n                fontSize: \"11px\",\n              }}\n              variant=\"contained\"\n              startIcon={<CloseIcon sx={{ width: 15, height: 15 }} />}\n              color=\"error\"\n              onClick={() => {\n                Swal.fire({\n                  title: \"Are you sure?\",\n                  text: \"You won't be able to revert this!\",\n                  icon: \"warning\",\n                  showCancelButton: true,\n                  confirmButtonColor: \"#3085d6\",\n                  cancelButtonColor: \"#d33\",\n                  confirmButtonText: \"Yes, cancel it!\",\n                }).then((result) => {\n                  if (result.isConfirmed) {\n                    setSave(false);\n                    setHasSelected(false);\n                    setNewStateValue(dispatch, initialState);\n                    refetchGeneralJournalGenerator();\n                    setGeneralJournal([]);\n                    setSearchSelected(false);\n                    setEditTransaction({\n                      edit: false,\n                      updateId: \"\",\n                    });\n                  }\n                });\n              }}\n              disabled={!save || loadingGeneralJournalMutate}\n            >\n              Cancel\n            </LoadingButton>\n          )}\n          <LoadingButton\n            sx={{\n              height: \"30px\",\n              fontSize: \"11px\",\n              background: deepOrange[500],\n              \":hover\": {\n                background: deepOrange[600],\n              },\n            }}\n            onClick={handleVoid}\n            loading={loadingVoidGeneralJournalMutate}\n            disabled={!searchSelected}\n            variant=\"contained\"\n            startIcon={<NotInterestedIcon sx={{ width: 20, height: 20 }} />}\n          >\n            Void\n          </LoadingButton>\n          <LoadingButton\n            sx={{\n              height: \"30px\",\n              fontSize: \"11px\",\n              background: brown[500],\n              \":hover\": {\n                background: brown[600],\n              },\n            }}\n            onClick={handleJobs}\n            loading={isLoadingJob}\n            variant=\"contained\"\n            startIcon={<CardTravelIcon sx={{ width: 20, height: 20 }} />}\n          >\n            Jobs\n          </LoadingButton>\n          <Button\n            disabled={!searchSelected}\n            id=\"basic-button\"\n            aria-haspopup=\"true\"\n            onClick={handleClickPrint}\n            sx={{\n              height: \"30px\",\n              fontSize: \"11px\",\n              color: \"white\",\n              backgroundColor: grey[600],\n              \"&:hover\": {\n                backgroundColor: grey[700],\n              },\n            }}\n          >\n            Print\n          </Button>\n        </div>\n        <div\n          style={{\n            fontSize: \"13px\",\n            border: \"1px solid #d4d4d8\",\n            width: \"100%\",\n            display: \"flex\",\n            columnGap: \"50px\",\n            height: \"30px\",\n            alignItems: \"center\",\n            justifyContent: \"center\",\n          }}\n        >\n          <p>\n            <span>Total Rows:</span> <strong>{generalJournal.length}</strong>\n          </p>\n          <p>\n            <span>Total Debit:</span> <strong>{state.totalDebit}</strong>\n          </p>\n          <p>\n            <span>Total Credit:</span> <strong>{state.totalCredit}</strong>\n          </p>\n          <p>\n            <span>Balance:</span>{\" \"}\n            <strong\n              style={{\n                color:\n                  parseFloat(state.totalBalance.replace(/,/g, \"\")) > 0\n                    ? \"red\"\n                    : \"black\",\n              }}\n            >\n              {state.totalBalance}\n            </strong>\n          </p>\n        </div>\n      </div>\n      <div style={{ padding: \"0px 10px\" }}>\n        <fieldset\n          style={{\n            border: \"1px solid #cbd5e1\",\n            borderRadius: \"5px\",\n            position: \"relative\",\n            width: \"100%\",\n            height: \"auto\",\n            display: \"flex\",\n            marginTop: \"10px\",\n            gap: \"10px\",\n            padding: \"15px\",\n          }}\n        >\n          {loadingGeneralJournalGenerator ? (\n            <LoadingButton loading={loadingGeneralJournalGenerator} />\n          ) : (\n            <FormControl\n              variant=\"outlined\"\n              size=\"small\"\n              disabled={!save || hasSelected}\n              sx={{\n                width: \"170px\",\n                \".MuiFormLabel-root\": {\n                  fontSize: \"14px\",\n                  background: \"white\",\n                  zIndex: 99,\n                  padding: \"0 3px\",\n                },\n                \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n              }}\n            >\n              <InputLabel htmlFor=\"return-check-id-field\">Ref. No.</InputLabel>\n              <OutlinedInput\n                sx={{\n                  height: \"27px\",\n                  fontSize: \"14px\",\n                }}\n                disabled={!save || hasSelected}\n                fullWidth\n                label=\"Ref. No.\"\n                name=\"refNo\"\n                value={state.refNo}\n                onChange={handleInputChange}\n                onKeyDown={(e) => {\n                  if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n                    e.preventDefault();\n                    return handleOnSave();\n                  }\n                }}\n                readOnly={user?.department !== \"UCSMI\"}\n                id=\"return-check-id-field\"\n                endAdornment={\n                  <InputAdornment position=\"end\">\n                    <IconButton\n                      ref={reloadIDButtonRef}\n                      disabled={!save || hasSelected}\n                      aria-label=\"search-client\"\n                      color=\"secondary\"\n                      edge=\"end\"\n                      onClick={() => {\n                        refetchGeneralJournalGenerator();\n                      }}\n                    >\n                      <RestartAltIcon />\n                    </IconButton>\n                  </InputAdornment>\n                }\n              />\n            </FormControl>\n          )}\n          <CustomDatePicker\n            fullWidth={false}\n            disabled={!save}\n            label=\"Date\"\n            onChange={(value: any) => {\n              dispatch({\n                type: \"UPDATE_FIELD\",\n                field: \"dateEntry\",\n                value: value,\n              });\n            }}\n            value={new Date(state.dateEntry)}\n            onKeyDown={(e: any) => {\n              if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n                const timeout = setTimeout(() => {\n                  datePickerRef.current?.querySelector(\"button\")?.click();\n                  clearTimeout(timeout);\n                }, 150);\n              }\n            }}\n            datePickerRef={datePickerRef}\n            textField={{\n              InputLabelProps: {\n                style: {\n                  fontSize: \"14px\",\n                },\n              },\n              InputProps: {\n                style: { height: \"27px\", fontSize: \"14px\" },\n              },\n            }}\n          />\n          <TextField\n            disabled={!save}\n            label=\"Explanation\"\n            size=\"small\"\n            name=\"explanation\"\n            value={state.explanation}\n            onChange={handleInputChange}\n            onKeyDown={(e) => {\n              if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n                e.preventDefault();\n                return handleOnSave();\n              }\n            }}\n            inputRef={explanationInputRef}\n            InputProps={{\n              style: { height: \"27px\", fontSize: \"14px\" },\n            }}\n            sx={{\n              flex: 1,\n              height: \"27px\",\n              \".MuiFormLabel-root\": { fontSize: \"14px\" },\n              \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n            }}\n          />\n        </fieldset>\n        <fieldset\n          style={{\n            border: \"1px solid #cbd5e1\",\n            borderRadius: \"5px\",\n            position: \"relative\",\n            width: \"100%\",\n            height: \"auto\",\n            marginTop: \"10px\",\n\n            padding: \"15px\",\n          }}\n        >\n          <div\n            style={{\n              display: \"flex\",\n              gap: \"10px\",\n            }}\n          >\n            {isLoadingChartAccountSearch ? (\n              <LoadingButton loading={isLoadingChartAccountSearch} />\n            ) : (\n              <FormControl\n                variant=\"outlined\"\n                size=\"small\"\n                disabled={!save}\n                sx={{\n                  width: \"150px\",\n                  \".MuiFormLabel-root\": {\n                    fontSize: \"14px\",\n                    background: \"white\",\n                    zIndex: 99,\n                    padding: \"0 3px\",\n                  },\n                  \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n                }}\n              >\n                <InputLabel htmlFor=\"chart-account-id\">Code</InputLabel>\n                <OutlinedInput\n                  sx={{\n                    height: \"27px\",\n                    fontSize: \"14px\",\n                  }}\n                  readOnly={true}\n                  inputRef={codeInputRef}\n                  disabled={!save}\n                  fullWidth\n                  label=\"Code\"\n                  name=\"code\"\n                  value={state.code}\n                  onChange={handleInputChange}\n                  onKeyDown={(e: any) => {\n                    if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n                      e.preventDefault();\n                      return openChartAccountSearch(state.code);\n                    }\n                    keyBoardSelectionTable(e, mainId, e.target as HTMLElement);\n                  }}\n                  id=\"chart-account-id\"\n                  endAdornment={\n                    <InputAdornment position=\"end\">\n                      <IconButton\n                        ref={reloadIDButtonRef}\n                        disabled={!save}\n                        aria-label=\"search-client\"\n                        color=\"secondary\"\n                        edge=\"end\"\n                        onClick={() => {\n                          openChartAccountSearch(state.code);\n                        }}\n                      >\n                        <RestartAltIcon />\n                      </IconButton>\n                    </InputAdornment>\n                  }\n                />\n              </FormControl>\n            )}\n\n            <TextField\n              disabled={!save}\n              label=\"Account Name\"\n              size=\"small\"\n              name=\"acctName\"\n              value={state.acctName}\n              onChange={handleInputChange}\n              onKeyDown={(e) => {\n                if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n                  e.preventDefault();\n                  return handleRowSave();\n                }\n                keyBoardSelectionTable(e, mainId, e.target as HTMLElement);\n              }}\n              InputProps={{\n                readOnly: true,\n                style: { height: \"27px\", fontSize: \"14px\" },\n              }}\n              sx={{\n                flex: 1,\n                \".MuiFormLabel-root\": { fontSize: \"14px\" },\n                \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n              }}\n            />\n\n            <TextField\n              disabled={!save}\n              label=\"Sub Account\"\n              size=\"small\"\n              name=\"subAcctName\"\n              value={state.subAcctName}\n              onChange={handleInputChange}\n              onKeyDown={(e) => {\n                if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n                  e.preventDefault();\n                  return handleRowSave();\n                }\n                keyBoardSelectionTable(e, mainId, e.target as HTMLElement);\n              }}\n              InputProps={{\n                readOnly: true,\n                style: { height: \"27px\", fontSize: \"14px\" },\n              }}\n              sx={{\n                flex: 1,\n                \".MuiFormLabel-root\": { fontSize: \"14px\" },\n                \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n              }}\n            />\n            {isLoadingPolicyIdClientIdRefId ? (\n              <LoadingButton loading={isLoadingPolicyIdClientIdRefId} />\n            ) : (\n              <FormControl\n                variant=\"outlined\"\n                size=\"small\"\n                disabled={!save}\n                sx={{\n                  flex: 1,\n                  \".MuiFormLabel-root\": {\n                    fontSize: \"14px\",\n                    background: \"white\",\n                    zIndex: 99,\n                    padding: \"0 3px\",\n                  },\n                  \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n                }}\n              >\n                <InputLabel htmlFor=\"policy-client-ref-id\">I.D</InputLabel>\n                <OutlinedInput\n                  sx={{\n                    height: \"27px\",\n                    fontSize: \"14px\",\n                  }}\n                  readOnly={true}\n                  inputRef={idInputRef}\n                  disabled={!save}\n                  fullWidth\n                  label=\"I.D\"\n                  name=\"ClientName\"\n                  value={state.ClientName}\n                  onChange={handleInputChange}\n                  onKeyDown={(e: any) => {\n                    if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n                      e.preventDefault();\n                      return openPolicyIdClientIdRefId(state.ClientName);\n                    }\n                    keyBoardSelectionTable(e, mainId, e.target as HTMLElement);\n                  }}\n                  id=\"policy-client-ref-id\"\n                  endAdornment={\n                    <InputAdornment position=\"end\">\n                      <IconButton\n                        ref={reloadIDButtonRef}\n                        disabled={!save}\n                        aria-label=\"search-client\"\n                        color=\"secondary\"\n                        edge=\"end\"\n                        onClick={() => {\n                          openPolicyIdClientIdRefId(state.ClientName);\n                        }}\n                      >\n                        <RestartAltIcon />\n                      </IconButton>\n                    </InputAdornment>\n                  }\n                />\n              </FormControl>\n            )}\n          </div>\n          <div\n            style={{\n              display: \"flex\",\n              gap: \"10px\",\n              marginTop: \"10px\",\n            }}\n          >\n            <TextField\n              disabled={!save}\n              label=\"Debit\"\n              size=\"small\"\n              name=\"debit\"\n              value={state.debit}\n              onChange={handleInputChange}\n              onKeyDown={(e) => {\n                if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n                  e.preventDefault();\n                  handleInputChange({\n                    target: { name: \"credit\", value: \"0.00\" },\n                  });\n\n                  return handleRowSave();\n                }\n                keyBoardSelectionTable(e, mainId, e.target as HTMLElement);\n              }}\n              onBlur={() => {\n                dispatch({\n                  type: \"UPDATE_FIELD\",\n                  field: \"debit\",\n                  value: parseFloat(\n                    (state.debit === \"\" ? \"0\" : state.debit).replace(/,/g, \"\")\n                  ).toFixed(2),\n                });\n              }}\n              InputProps={{\n                inputComponent: NumericFormatCustom as any,\n                inputRef: debitInputRef,\n                style: { height: \"27px\", fontSize: \"14px\" },\n              }}\n              sx={{\n                width: \"160px\",\n                \".MuiFormLabel-root\": { fontSize: \"14px\" },\n                \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n              }}\n            />\n            <TextField\n              disabled={!save}\n              label=\"Credit\"\n              size=\"small\"\n              name=\"credit\"\n              value={state.credit}\n              onChange={handleInputChange}\n              onKeyDown={(e) => {\n                if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n                  e.preventDefault();\n                  return handleRowSave();\n                }\n                keyBoardSelectionTable(e, mainId, e.target as HTMLElement);\n              }}\n              InputProps={{\n                inputComponent: NumericFormatCustom as any,\n                style: { height: \"27px\", fontSize: \"14px\" },\n              }}\n              sx={{\n                width: \"160px\",\n                \".MuiFormLabel-root\": { fontSize: \"14px\" },\n                \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n              }}\n              onBlur={(e) => {\n                e.preventDefault();\n                dispatch({\n                  type: \"UPDATE_FIELD\",\n                  field: \"credit\",\n                  value: parseFloat(\n                    (state.credit === \"\" ? \"0\" : state.credit).replace(/,/g, \"\")\n                  ).toFixed(2),\n                });\n              }}\n            />\n            {isLoadingTransactionAccount ? (\n              <LoadingButton loading={isLoadingTransactionAccount} />\n            ) : (\n              <FormControl\n                variant=\"outlined\"\n                size=\"small\"\n                disabled={!save}\n                sx={{\n                  width: \"130px\",\n                  \".MuiFormLabel-root\": {\n                    fontSize: \"14px\",\n                    background: \"white\",\n                    zIndex: 99,\n                    padding: \"0 3px\",\n                  },\n                  \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n                }}\n              >\n                <InputLabel htmlFor=\"tc\">TC</InputLabel>\n                <OutlinedInput\n                  sx={{\n                    height: \"27px\",\n                    fontSize: \"14px\",\n                  }}\n                  readOnly={true}\n                  fullWidth\n                  label=\"TC\"\n                  name=\"TC_Code\"\n                  value={state.TC_Code}\n                  onChange={handleInputChange}\n                  onKeyDown={(e: any) => {\n                    if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n                      e.preventDefault();\n                      return openTransactionAccount(state.TC_Code);\n                    }\n                    keyBoardSelectionTable(e, mainId, e.target as HTMLElement);\n                  }}\n                  id=\"tc\"\n                  endAdornment={\n                    <InputAdornment position=\"end\">\n                      <IconButton\n                        ref={reloadIDButtonRef}\n                        disabled={!save}\n                        aria-label=\"search-client\"\n                        color=\"secondary\"\n                        edge=\"end\"\n                        onClick={() => {\n                          openTransactionAccount(state.TC_Code);\n                        }}\n                      >\n                        <RestartAltIcon />\n                      </IconButton>\n                    </InputAdornment>\n                  }\n                />\n              </FormControl>\n            )}\n            <TextField\n              disabled={!save}\n              label=\"Remarks\"\n              size=\"small\"\n              name=\"remarks\"\n              value={state.remarks}\n              onChange={handleInputChange}\n              onKeyDown={(e) => {\n                if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n                  e.preventDefault();\n                  return handleRowSave();\n                }\n                keyBoardSelectionTable(e, mainId, e.target as HTMLElement);\n              }}\n              InputProps={{\n                style: { height: \"27px\", fontSize: \"14px\" },\n                inputRef: tcInputRef,\n              }}\n              sx={{\n                flex: 1,\n                \".MuiFormLabel-root\": { fontSize: \"14px\" },\n                \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n              }}\n            />\n            <FormControl\n              size=\"small\"\n              variant=\"outlined\"\n              sx={{\n                width: \"120px\",\n                \".MuiFormLabel-root\": {\n                  fontSize: \"14px\",\n                  background: \"white\",\n                  zIndex: 99,\n                  padding: \"0 3px\",\n                },\n                \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n              }}\n            >\n              <InputLabel id=\"label-selection-reason\">Vat Type</InputLabel>\n              <Select\n                labelId=\"label-selection-reason\"\n                value={state.vatType}\n                name=\"vatType\"\n                onChange={handleInputChange}\n                autoWidth\n                sx={{\n                  height: \"27px\",\n                  fontSize: \"14px\",\n                }}\n                disabled={!save}\n              >\n                <MenuItem value=\"\"></MenuItem>\n                <MenuItem value=\"VAT\">VAT</MenuItem>\n                <MenuItem value={\"NON-VAT\"}>NON-VAT</MenuItem>\n              </Select>\n            </FormControl>\n            <TextField\n              disabled={!save}\n              label=\"OR/Invoice No.\"\n              size=\"small\"\n              name=\"invoice\"\n              value={state.invoice}\n              onChange={handleInputChange}\n              onKeyDown={(e) => {\n                if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n                  e.preventDefault();\n                  return handleRowSave();\n                }\n                keyBoardSelectionTable(e, mainId, e.target as HTMLElement);\n              }}\n              InputProps={{\n                style: { height: \"27px\", fontSize: \"14px\" },\n                inputRef: invoiceRef,\n              }}\n              sx={{\n                width: \"200px\",\n                \".MuiFormLabel-root\": { fontSize: \"14px\" },\n                \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n              }}\n            />\n          </div>\n        </fieldset>\n      </div>\n      <br />\n      <UpwardTable\n        ref={table}\n        rows={generalJournal}\n        column={selectedCollectionColumns}\n        width={width}\n        height={height}\n        dataReadOnly={true}\n        onSelectionChange={(row) => {\n          if (row.length > 0) {\n            const rowSelected = row[0];\n            setNewStateValue(dispatch, {\n              ...rowSelected,\n              sub_refNo: state.sub_refNo,\n              refNo: state.refNo,\n              dateEntry: state.dateEntry,\n              explanation: state.explanation,\n              totalDebit: state.totalDebit,\n              totalCredit: state.totalCredit,\n              totalBalance: state.totalBalance,\n            });\n            setEditTransaction({\n              edit: true,\n              updateId: rowSelected.TempID,\n            });\n          } else {\n            const resetValue = {\n              code: \"\",\n              acctName: \"\",\n              subAcct: \"\",\n              subAcctName: \"\",\n              IDNo: \"\",\n              ClientName: \"\",\n              credit: \"\",\n              debit: \"\",\n              TC_Code: \"\",\n              TC_Desc: \"\",\n              remarks: \"\",\n              vatType: \"NON-VAT\",\n              invoice: \"\",\n            };\n            setNewStateValue(dispatch, { ...state, ...resetValue });\n            setEditTransaction({ edit: false, updateId: \"\" });\n          }\n        }}\n        onKeyDown={(row, key) => {\n          if (key === \"Delete\" || key === \"Backspace\") {\n            Swal.fire({\n              title: `Are you sure you want to delete?`,\n              text: \"You won't be able to revert this!\",\n              icon: \"warning\",\n              showCancelButton: true,\n              confirmButtonColor: \"#3085d6\",\n              cancelButtonColor: \"#d33\",\n              confirmButtonText: \"Yes, delete it!\",\n            }).then((result) => {\n              if (result.isConfirmed) {\n                return setGeneralJournal((d) => {\n                  return d.filter(\n                    (items: any) => items.TempID !== row[0].TempID\n                  );\n                });\n              }\n            });\n            return;\n          }\n        }}\n        inputsearchselector=\".manok\"\n        isLoading={\n          loadingGeneralJournalMutate ||\n          loadingGetSearchSelectedGeneralJournal ||\n          isLoadingJob\n        }\n      />\n      {/* <div\n        ref={refParent}\n        className={mainId}\n        style={{\n          marginTop: \"10px\",\n          width: \"100%\",\n          position: \"relative\",\n          flex: 1,\n        }}\n      >\n        <Box\n          style={{\n            height: `${refParent.current?.getBoundingClientRect().height}px`,\n            width: \"100%\",\n            overflowX: \"scroll\",\n            position: \"absolute\",\n          }}\n        >\n          <Table\n            ref={table}\n            isLoading={\n              loadingGeneralJournalMutate ||\n              loadingGetSearchSelectedGeneralJournal ||\n              isLoadingJob\n            }\n            columns={selectedCollectionColumns}\n            rows={generalJournal}\n            table_id={\"TempID\"}\n            isSingleSelection={true}\n            isRowFreeze={false}\n            dataSelection={(selection, data, code) => {\n              const rowSelected = data.filter(\n                (item: any) => item.TempID === selection[0]\n              )[0];\n              if (rowSelected === undefined || rowSelected.length <= 0) {\n               \n                return;\n              }\n             \n\n          \n            }}\n          />\n        </Box>\n      </div> */}\n      <Modal open={openJobs} onClose={() => setOpenJobs(false)}>\n        <Box\n          sx={{\n            position: \"absolute\" as \"absolute\",\n            top: \"50%\",\n            left: \"50%\",\n            transform: \"translate(-50%, -50%)\",\n            width: 470,\n            bgcolor: \"background.paper\",\n            p: 4,\n          }}\n        >\n          <IconButton\n            style={{\n              position: \"absolute\",\n              top: \"10px\",\n              right: \"10px\",\n            }}\n            aria-label=\"search-client\"\n            onClick={() => setOpenJobs(false)}\n          >\n            <CloseIcon />\n          </IconButton>\n          <Typography\n            id=\"modal-modal-title\"\n            variant=\"h6\"\n            component=\"h2\"\n            sx={{ marginBottom: \"20px\" }}\n          >\n            Jobs\n          </Typography>\n          <div\n            style={{\n              width: \"400px\",\n            }}\n          >\n            <div\n              style={{\n                width: \"100%\",\n                display: \"flex\",\n                marginBottom: \"10px\",\n                justifyContent: \"space-between\",\n                alignItems: \"center\",\n              }}\n            >\n              <LocalizationProvider dateAdapter={AdapterDateFns}>\n                <DatePicker\n                  sx={{\n                    width: \"200px\",\n                    \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n                  }}\n                  slotProps={{\n                    textField: {\n                      size: \"small\",\n                      name: \"\",\n                      InputLabelProps: {\n                        style: {\n                          fontSize: \"14px\",\n                        },\n                      },\n                      InputProps: {\n                        style: { height: \"27px\", fontSize: \"14px\" },\n                      },\n                    },\n                  }}\n                  label={\"Transaction Date: \"}\n                  views={[\"month\", \"year\"]}\n                  value={state.jobTransactionDate}\n                  onChange={(value) => {\n                    dispatch({\n                      type: \"UPDATE_FIELD\",\n                      field: \"jobTransactionDate\",\n                      value: value,\n                    });\n                  }}\n                />\n              </LocalizationProvider>\n              <FormControlLabel\n                sx={{\n                  height: \"30px\",\n                  \"& .MuiTypography-root\": {\n                    fontSize: \"14px\",\n                  },\n                }}\n                control={\n                  <Checkbox\n                    size=\"small\"\n                    checked={state.jobAutoExp}\n                    onChange={(e) => {\n                      dispatch({\n                        type: \"UPDATE_FIELD\",\n                        field: \"jobAutoExp\",\n                        value: !state.jobAutoExp,\n                      });\n                    }}\n                  />\n                }\n                label=\"Auto Explanation\"\n              />\n            </div>\n            <FormControl\n              fullWidth\n              size=\"small\"\n              variant=\"outlined\"\n              sx={{\n                \".MuiFormLabel-root\": {\n                  fontSize: \"14px\",\n                  background: \"white\",\n                  zIndex: 99,\n                  padding: \"0 3px\",\n                },\n                \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n              }}\n            >\n              <InputLabel id=\"label-selection-job-type\">Type of Job</InputLabel>\n              <Select\n                labelId=\"label-selection-job-type\"\n                value={state.jobType}\n                name=\"jobType\"\n                onChange={handleInputChange}\n                autoWidth\n                sx={{\n                  height: \"27px\",\n                  fontSize: \"14px\",\n                }}\n              >\n                <MenuItem value={\"\"}> </MenuItem>\n                <MenuItem value={\"0\"}>Reversal of Accrued Interest </MenuItem>\n                <MenuItem value={\"1\"}>\n                  {\" \"}\n                  Income Recognition & Accrual of Interest\n                </MenuItem>\n                <MenuItem value={\"2\"}>Penalty Charges</MenuItem>\n                <MenuItem value={\"3\"}>Penalty Income</MenuItem>\n                <MenuItem value={\"4\"}>RPT Transaction (NIL-HN)</MenuItem>\n                <MenuItem value={\"5\"}>RPT Transaction (AMIFIN)</MenuItem>\n                <MenuItem value={\"6\"}>RPT Income</MenuItem>\n                <MenuItem value={\"7\"}>Monthly Accrual Expenses</MenuItem>\n                <MenuItem value={\"8\"}>Monthly Accrual Income</MenuItem>\n                <MenuItem value={\"9\"}>\n                  Production (Milestone Guarantee)\n                </MenuItem>\n                <MenuItem value={\"10\"}>\n                  Production (Liberty Insurance Co.)\n                </MenuItem>\n                <MenuItem value={\"11\"}>Production (Federal Phoenix)</MenuItem>\n              </Select>\n            </FormControl>\n          </div>\n\n          <div\n            style={{\n              display: \"flex\",\n              columnGap: \"30px\",\n              alignItems: \"flex-end\",\n              marginTop: \"20px\",\n            }}\n          >\n            <LoadingButton\n              loading={isLoadingJob}\n              color=\"success\"\n              variant=\"contained\"\n              onClick={() => mutateJob(state)}\n            >\n              Create Job\n            </LoadingButton>\n            <Button\n              // ref={checkModalSaveButton}\n              color=\"error\"\n              variant=\"contained\"\n              onClick={() => setOpenJobs(false)}\n            >\n              Cancel\n            </Button>\n          </div>\n        </Box>\n      </Modal>\n      {ModalChartAccountSearch}\n      {ModalPolicyIdClientIdRefId}\n      {ModalTransactionAccount}\n      {ModalSearchGeneralJounal}\n    </div>\n  );\n}\n\nfunction setNewStateValue(dispatch: any, obj: any) {\n  Object.entries(obj).forEach(([field, value]) => {\n    dispatch({ type: \"UPDATE_FIELD\", field, value });\n  });\n}\n","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M20 6h-3V4c0-1.11-.89-2-2-2H9c-1.11 0-2 .89-2 2v2H4c-1.11 0-2 .89-2 2v11c0 1.11.89 2 2 2h16c1.11 0 2-.89 2-2V8c0-1.11-.89-2-2-2zM9 4h6v2H9V4zm11 15H4v-2h16v2zm0-5H4V8h3v2h2V8h6v2h2V8h3v6z\"\n}), 'CardTravel');\nexports.default = _default;","const brown = {\n  50: '#efebe9',\n  100: '#d7ccc8',\n  200: '#bcaaa4',\n  300: '#a1887f',\n  400: '#8d6e63',\n  500: '#795548',\n  600: '#6d4c41',\n  700: '#5d4037',\n  800: '#4e342e',\n  900: '#3e2723',\n  A100: '#d7ccc8',\n  A200: '#bcaaa4',\n  A400: '#8d6e63',\n  A700: '#5d4037'\n};\nexport default brown;","const deepOrange = {\n  50: '#fbe9e7',\n  100: '#ffccbc',\n  200: '#ffab91',\n  300: '#ff8a65',\n  400: '#ff7043',\n  500: '#ff5722',\n  600: '#f4511e',\n  700: '#e64a19',\n  800: '#d84315',\n  900: '#bf360c',\n  A100: '#ff9e80',\n  A200: '#ff6e40',\n  A400: '#ff3d00',\n  A700: '#dd2c00'\n};\nexport default deepOrange;"],"names":["NumericFormatCustom","React","props","ref","onChange","other","_objectWithoutProperties","_excluded","_jsx","NumericFormat","_objectSpread","getInputRef","onValueChange","values","target","name","value","allowNegative","thousandSeparator","valueIsNumericString","forwardRef","_ref","UpwardTableRef","rows","column","width","height","dataReadOnly","_ref$onSelectionChang","onSelectionChange","_ref$isMultipleSelect","isMultipleSelect","_ref$freeze","freeze","onKeyDown","_ref$inputsearchselec","inputsearchselector","_ref$isRowSelectable","isRowSelectable","_ref$unSelectable","unSelectable","_ref$writeFooter","writeFooter","_ref$isLoading","isLoading","onSelectionChangeRef","useRef","onKeyDownRef","_useState","useState","filter","itm","hide","_useState2","_slicedToArray","columns","setColumns","_useState3","_useState4","hoveredColumn","setHoveredColumn","_useState5","_useState6","selectedRows","setSelectedRows","_useState7","_useState8","lastSelectedRowIndex","setLastSelectedRowIndex","_useState9","_useState10","selectedItems","setSelectedItems","divRef","startResize","index","e","preventDefault","stopPropagation","startX","clientX","startWidth","doDrag","moveEvent","newWidth","updatedColumns","_toConsumableArray","document","addEventListener","stopDrag","removeEventListener","handleMouseEnter","handleMouseLeave","useImperativeHandle","resetTableSelected","length","row","querySelector","concat","scrollIntoView","block","behavior","getSelectedRows","d","idx","includes","_jsxs","style","display","justifyContent","key","selectedItemsParams","rowIndex","i","current","prevIndex","_row$querySelector","newPrevIndex","focus","input","tagName","divInput","_row$querySelector2","selectedRowData","children","className","flexDirection","tabIndex","position","zIndex","top","background","map","col","textAlign","type","fontWeight","defaultValue","headerName","readOnly","onMouseDown","onMouseEnter","onMouseLeave","onClick","event","shiftKey","rangeStart","Math","min","rangeEnd","max","newSelectedRows","push","_getIndexAndData","removeNullValue","data","newSelectedRowsFiltered","getIndexAndData","ctrlKey","metaKey","handleRowClick","onDoubleClick","handleRowDoubleClick","colIndex","field","_Fragment","alt","src","process","initialState","sub_refNo","refNo","dateEntry","Date","explanation","code","acctName","subAcct","subAcctName","IDNo","ClientName","credit","debit","TC_Code","TC_Desc","remarks","vatType","invoice","BranchCode","totalDebit","totalCredit","totalBalance","jobAutoExp","jobTransactionDate","jobType","search","reducer","state","action","_defineProperty","selectedCollectionColumns","flex","GeneralJournal","_queryFn","_mutationFn","_mutationFn2","_mutationFn3","_mutationFn4","mainId","generateRandomClass","_useContext","useContext","AuthContext","myAxios","user","_useReducer","useReducer","_useReducer2","dispatch","save","setSave","openJobs","setOpenJobs","hasSelected","setHasSelected","searchSelected","setSearchSelected","edit","updateId","editTransaction","setEditTransaction","_useState11","_useState12","generalJournal","setGeneralJournal","queryClient","useQueryClient","datePickerRef","reloadIDButtonRef","explanationInputRef","idInputRef","debitInputRef","tcInputRef","chartAccountSearchInput","IdsSearchInput","codeInputRef","table","invoiceRef","_useQuery","useQuery","queryKey","queryFn","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","get","headers","Authorization","accessToken","abrupt","sent","stop","apply","arguments","refetchOnWindowFocus","onSuccess","_response$data$genera","_response$data$genera2","_state$sub_refNo","response","generateGeneralJournalID","general_journal_id","loadingGeneralJournalGenerator","refetchGeneralJournalGenerator","refetch","_useMutation","useMutation","mutationKey","mutationFn","_x","_callee2","variable","_context2","post","res","success","invalidateQueries","setNewStateValue","Swal","icon","title","message","timer","addGeneralJournalMutate","mutate","loadingGeneralJournalMutate","_useMutation2","_x2","_callee3","_context3","jobs","mutateJob","isLoadingJob","_useMutation3","_x3","_callee4","_context4","mutateVoidGeneralJournal","loadingVoidGeneralJournalMutate","_useMutation4","_x4","_callee5","_context5","selected","getSelectedSearchGeneralJournal","_selected$","getSearchSelectedGeneralJournal","loadingGetSearchSelectedGeneralJournal","_useQueryModalTable","useQueryModalTable","link","url","queryUrlName","uniqueId","responseDataKey","onSelected","Source_No","closeSearchGeneralJounal","onCloseFunction","searchRef","ModalSearchGeneralJounal","ModalComponent","openSearchGeneralJounal","openModal","isLoadingSearchGeneralJounal","closeModal","_useQueryModalTable2","Acct_Code","Acct_Title","closeChartAccountSearch","setTimeout","_idInputRef$current","ModalChartAccountSearch","openChartAccountSearch","isLoadingChartAccountSearch","_useQueryModalTable3","_selectedRowData$0$Na","_selectedRowData$0$ID","_selectedRowData$0$Sh","console","log","Name","sub_account","ShortName","closePolicyIdClientIdRefId","_debitInputRef$curren","ModalPolicyIdClientIdRefId","openPolicyIdClientIdRefId","isLoadingPolicyIdClientIdRefId","_useQueryModalTable4","Code","Description","closeTransactionAccount","_tcInputRef$current","ModalTransactionAccount","openTransactionAccount","isLoadingTransactionAccount","useEffect","reduce","a","item","parseFloat","replace","toFixed","handleInputChange","_e$target","handleOnSave","then","wait","_explanationInputRef$","codeCondfirmationAlert","isUpdate","cb","userCodeConfirmation","saveCondfirmationAlert","isConfirm","handleRowSave","isNaN","generateID","array","lastItem","TempID","parseInt","toString","match","padStart","text","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","result","isConfirmed","taxableamt","toLocaleString","minimumFractionDigits","maximumFractionDigits","inputtax","_codeInputRef$current","window","innerWidth","innerHeight","padding","alignItems","columnGap","LoadingButton","loading","TextField","label","size","InputProps","fontSize","sx","Button","variant","startIcon","AddIcon","id","color","disabled","CloseIcon","deepOrange","NotInterestedIcon","brown","CardTravelIcon","flushSync","localStorage","removeItem","setItem","JSON","stringify","datakey","header","department","open","backgroundColor","grey","border","borderRadius","marginTop","gap","FormControl","InputLabel","htmlFor","OutlinedInput","fullWidth","endAdornment","InputAdornment","IconButton","edge","RestartAltIcon","CustomDatePicker","timeout","_datePickerRef$curren","_datePickerRef$curren2","click","clearTimeout","textField","InputLabelProps","inputRef","keyBoardSelectionTable","onBlur","inputComponent","Select","labelId","autoWidth","MenuItem","UpwardTable","rowSelected","items","Modal","onClose","Box","left","transform","bgcolor","p","right","Typography","component","marginBottom","LocalizationProvider","dateAdapter","AdapterDateFns","DatePicker","slotProps","views","FormControlLabel","control","Checkbox","checked","obj","Object","entries","forEach","_ref2","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","A100","A200","A400","A700"],"sourceRoot":""}