{"version":3,"file":"static/js/8185.fdcf6682.chunk.js","mappings":"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","sources":["components/Helmet.tsx","components/UpwardFields.tsx","components/UpwardTable.tsx","hooks/useUpwardTableModal.tsx","feautures/Admin/Task/Accounting/PostDateChecks.tsx"],"sourcesContent":["\r\nimport { Helmet } from \"react-helmet\";\r\n\r\nconst PageHelmet = ({ title = '' }: { title: string }) => {\r\n    const imgUrl = process.env.REACT_APP_IMAGE_URL;\r\n    return (\r\n        <Helmet>\r\n            <title>{title}</title>\r\n            <link rel=\"icon\" type=\"image/png\" href={`${imgUrl}/logo.png`} />\r\n        </Helmet>\r\n    );\r\n};\r\n\r\nexport default PageHelmet;","import { HtmlHTMLAttributes, InputHTMLAttributes, useId, ReactNode, useState, LegacyRef, HTMLInputTypeAttribute, TextareaHTMLAttributes } from \"react\";\nimport \"../style/design.css\";\n\n\ninterface TextInputProps {\n  input: InputHTMLAttributes<HTMLInputElement>;\n  label: HtmlHTMLAttributes<HTMLLabelElement>;\n  inputRef?: React.RefObject<HTMLInputElement>;\n  icon?: ReactNode; // New prop for the icon\n  iconPosition?: 'start' | 'end'; // New prop to choose icon position\n  onIconClick?: React.MouseEventHandler<HTMLDivElement> | undefined,\n  disableIcon?: boolean\n}\n\ninterface TextAreaPrps {\n  textarea: TextareaHTMLAttributes<HTMLTextAreaElement>\n  label: HtmlHTMLAttributes<HTMLLabelElement>;\n  _inputRef: LegacyRef<HTMLTextAreaElement>\n  icon?: ReactNode; // New prop for the icon\n  iconPosition?: 'start' | 'end'; // New prop to choose icon position\n  onIconClick?: React.MouseEventHandler<HTMLDivElement> | undefined,\n  disableIcon?: boolean\n}\n\ninterface TextFormatedInputProps extends TextInputProps {\n  onChange?: React.ChangeEventHandler<HTMLInputElement> | undefined\n}\nexport function TextFormatedInput({\n  input,\n  label,\n  inputRef,\n  icon,\n  iconPosition = 'end', // Default position is 'end'\n  disableIcon = false,\n  onIconClick = (e) => { },\n  onChange = (e) => { }\n}: TextFormatedInputProps) {\n  // const [inputValue, setInputValue] = useState('');\n  const id = useId();\n\n\n  // Helper function to format numbers with commas\n  const formatNumber = (value: string) => {\n    if (!value) return value;\n\n    // Split the value into integer and decimal parts\n    const parts = value.split('.');\n\n    // Add commas to the integer part only\n    parts[0] = parts[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n\n    // Join the integer and decimal parts if decimal exists\n    return parts.join('.');\n  };\n\n  // Helper function to remove commas\n  const unformatNumber = (value: string) => {\n    return value.replace(/,/g, '');\n  };\n\n  // Function to ensure two decimal places\n  const ensureTwoDecimals = (value: string) => {\n    // If the value has no decimal part, append '.00'\n    if (!value.includes('.')) {\n      if (value === '') {\n        return '0.00';\n      } else {\n\n        return value + '.00';\n      }\n    }\n\n    // If the value has one decimal place, append '0'\n    const parts = value.split('.');\n    if (parts[1].length === 1) {\n      return value + '0';\n    }\n\n    // If it already has two decimal places, return as is\n    return value;\n  };\n\n  const handleChange = (e: any) => {\n    let value = e.target.value;\n\n    // Remove commas for processing\n    value = unformatNumber(value);\n\n    // Allow only numbers, commas, and one decimal point\n    const regex = /^-?\\d+(,\\d{3})*(\\.\\d*)?$/;\n\n    // Remove commas for processing\n    value = unformatNumber(value);\n\n    // Check if the value is valid\n    if (value === '' || regex.test(value)) {\n      // Set the formatted value back in the input field\n\n      //setInputValue(formatNumber(value));\n      e.target.value = formatNumber(value)\n\n    }\n  };\n\n  const handleBlur = (e: any) => {\n    let value = unformatNumber(e.target.value);\n\n    // Ensure the value has two decimal places\n    value = ensureTwoDecimals(value);\n\n    // Set the value with commas and .00 (if needed)\n    // setInputValue(formatNumber(value));\n    e.target.value = formatNumber(value)\n  };\n\n  return (\n    <div\n      style={{\n        display: 'flex',\n        alignItems: 'center',\n        position: 'relative', // Enable absolute positioning for icon\n      }}\n    >\n      <label {...label} htmlFor={id}>\n        {label.title}\n      </label>\n      {icon && iconPosition === 'start' && (\n        <div style={{ position: 'absolute', left: '8px', zIndex: 1 }}>\n          {icon}\n        </div>\n      )}\n      <input\n        ref={inputRef}\n        id={id}\n        {...input}\n        type=\"text\"\n        style={{\n          height: '100%',\n          ...input.style,\n        }}\n        onChange={(e) => {\n          handleChange(e)\n          onChange(e)\n        }}\n        onBlur={(e) => {\n          handleBlur(e)\n        }}  // Add .00 on blur\n\n      />\n      {icon && iconPosition === 'end' && (\n        <div onClick={onIconClick}\n          style={{\n            position: 'absolute',\n            right: '2px',\n            top: \"50%\",\n            transform: \"translateY(-50%)\",\n            zIndex: 1,\n            cursor: disableIcon ? \"none\" : \"pointer\",\n            display: \"flex\",\n            alignItems: \"center\",\n            justifyContent: \"center\",\n            background: \"white\",\n            pointerEvents: disableIcon ? \"none\" : \"auto\"\n          }}>\n          {icon}\n        </div>\n\n      )\n      }\n    </div >\n  );\n}\n\n\nexport function TextInput({\n  input,\n  label,\n  inputRef,\n  icon,\n  iconPosition = 'end', // Default position is 'end'\n  disableIcon = false,\n  onIconClick = (e) => { }\n}: TextInputProps) {\n  const id = useId();\n\n  return (\n    <div\n      style={{\n        display: 'flex',\n        alignItems: 'center',\n        position: 'relative', // Enable absolute positioning for icon\n      }}\n    >\n      <label {...label} htmlFor={id}>\n        {label.title}\n      </label>\n      {icon && iconPosition === 'start' && (\n        <div style={{ position: 'absolute', left: '8px', zIndex: 1 }}>\n          {icon}\n        </div>\n      )}\n      <input\n        ref={inputRef}\n        id={id}\n        {...input}\n        style={{\n          height: '100%',\n          ...input.style,\n        }}\n      />\n      {icon && iconPosition === 'end' && (\n        <div onClick={onIconClick}\n          style={{\n            position: 'absolute',\n            right: '2px',\n            top: \"50%\",\n            transform: \"translateY(-50%)\",\n            zIndex: 1,\n            cursor: disableIcon ? \"none\" : \"pointer\",\n            display: \"flex\",\n            alignItems: \"center\",\n            justifyContent: \"center\",\n            background: \"white\",\n            pointerEvents: disableIcon ? \"none\" : \"auto\"\n          }}>\n          {icon}\n        </div>\n\n      )\n      }\n    </div >\n  );\n}\n\n\n\nexport function TextAreaInput({\n  textarea,\n  label,\n  _inputRef,\n  icon,\n  iconPosition = 'end', // Default position is 'end'\n  disableIcon = false,\n  onIconClick = (e) => { }\n}: TextAreaPrps) {\n  const id = useId();\n\n  return (\n    <div\n      style={{\n        display: 'flex',\n        alignItems: 'center',\n        position: 'relative', // Enable absolute positioning for icon\n      }}\n    >\n      <label {...label} htmlFor={id}>\n        {label.title}\n      </label>\n      {icon && iconPosition === 'start' && (\n        <div style={{ position: 'absolute', left: '8px', zIndex: 1 }}>\n          {icon}\n        </div>\n      )}\n      <textarea\n        ref={_inputRef}\n        id={id}\n        {...textarea}\n        style={{\n          height: '100%',\n          ...textarea.style,\n        }}\n\n      />\n      {icon && iconPosition === 'end' && (\n        <div onClick={onIconClick}\n          style={{\n            position: 'absolute',\n            right: '2px',\n            top: \"50%\",\n            transform: \"translateY(-50%)\",\n            zIndex: 1,\n            cursor: disableIcon ? \"none\" : \"pointer\",\n            display: \"flex\",\n            alignItems: \"center\",\n            justifyContent: \"center\",\n            background: \"white\",\n            pointerEvents: disableIcon ? \"none\" : \"auto\"\n          }}>\n          {icon}\n        </div>\n\n      )\n      }\n    </div >\n  );\n}\n\n\nexport function SelectInput({\n  select,\n  label,\n  selectRef,\n  datasource = [],\n  values = \"\",\n  display = \"\",\n  containerStyle\n}: {\n  selectRef?: React.RefObject<HTMLSelectElement>;\n  labelRef?: React.RefObject<HTMLLabelElement>;\n  select: InputHTMLAttributes<HTMLSelectElement>;\n  label: HtmlHTMLAttributes<HTMLLabelElement>;\n  datasource: Array<any>;\n  values: string;\n  display: string;\n  containerStyle?: React.CSSProperties | undefined\n}) {\n  const id = useId();\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        height: \"18px\",\n        alignItems: \"center\",\n        ...containerStyle\n      }}\n    >\n      <label {...label} htmlFor={id}>\n        {label.title}\n      </label>\n      <select\n        {...select}\n        ref={selectRef}\n        className={`select ${select.className}`}\n        style={{\n          height: \"18px\",\n          ...select.style,\n        }}\n      >\n        {datasource.map((itm, idx) => {\n          return (\n            <option key={idx} value={itm[values]}>\n              {itm[display]}\n            </option>\n          );\n        })}\n      </select>\n    </div>\n  );\n}\n\nexport function ButtonField({\n  buttonRetRef,\n  button,\n  tooltipText = \"\",\n  children,\n  disabled = false,\n}: {\n  buttonRetRef?: React.RefObject<HTMLButtonElement>;\n  button: HtmlHTMLAttributes<HTMLButtonElement>;\n  tooltipText: string;\n  children: React.ReactNode;\n  disabled?: boolean;\n}) {\n  return (\n    <div className=\"tooltip\">\n      <button\n        disabled={disabled}\n        {...button}\n        ref={buttonRetRef}\n        style={{ ...button.style, background: !disabled ? \"transparent\" : \"#f1f1f1\" }}\n        className=\"tooltip-button\"\n      >\n        {children}\n      </button>\n      {!disabled && <span className=\"tooltip-text\">{tooltipText}</span>}\n    </div>\n  );\n}\n","\n\nimport React, {\n  useState,\n  useRef,\n  useEffect,\n  forwardRef,\n  useImperativeHandle,\n} from \"react\";\n\nimport \"../style/datagridview.css\";\nimport { Pagination } from \"@mui/material\";\n\ninterface UpwardTablePropsType {\n  rows: Array<any>;\n  column: Array<any>;\n  width: number;\n  height: number;\n  dataReadOnly: boolean;\n  onSelectionChange?: (row: Array<any>, rowIndex: number) => void;\n  onKeyDown?: (row: Array<any>, key: string, rowIndex: number) => void;\n  isMultipleSelect?: boolean;\n  freeze?: boolean;\n  inputsearchselector?: string;\n  isRowSelectable?: boolean;\n  unSelectable?: (row: any) => boolean;\n  isLoading?: boolean,\n  onRightClick?: (rowSelected: any, event: any) => any\n}\n\nconst UpwardTable = forwardRef(\n  (\n    {\n      rows,\n      column,\n      width,\n      height,\n      dataReadOnly,\n      onSelectionChange = () => { },\n      isMultipleSelect = false,\n      freeze = false,\n      onKeyDown,\n      inputsearchselector = \".search-input-up-on-key-down\",\n      isRowSelectable = true,\n      unSelectable = () => false,\n      isLoading,\n      onRightClick\n    }: UpwardTablePropsType,\n    UpwardTableRef\n  ) => {\n    const [pages, setPages] = useState<Array<any>>([])\n    const [pageNumber, setPageNumber] = useState(0)\n    const onSelectionChangeRef = useRef(onSelectionChange);\n    const onKeyDownRef = useRef(onKeyDown);\n    const [columns, setColumns] = useState(column.filter((itm) => !itm.hide));\n    const [hoveredColumn, setHoveredColumn] = useState(null);\n    const [selectedRows, setSelectedRows] = useState<Array<number>>([0]);\n    const [lastSelectedRowIndex, setLastSelectedRowIndex] = useState(0);\n    const [selectedItems, setSelectedItems] = useState<Array<number>>([]);\n    const divRef = useRef<HTMLDivElement>(null);\n    const [_clickTimeout, _setClickTimeout] = useState(null);\n\n\n    useEffect(() => {\n      const _pages = formatArrayIntoChunks(rows, 100)\n      setPages(_pages)\n    }, [rows])\n\n    const startResize = (index: any, e: any) => {\n      e.preventDefault();\n      e.stopPropagation();\n\n      const startX = e.clientX;\n      const startWidth = columns[index].width;\n\n      const doDrag = (moveEvent: any) => {\n        const newWidth = startWidth + (moveEvent.clientX - startX);\n        const updatedColumns = [...columns];\n        updatedColumns[index].width = newWidth > 50 ? newWidth : 50; // Set minimum column width\n        setColumns(updatedColumns);\n      };\n\n      const stopDrag = () => {\n        document.removeEventListener(\"mousemove\", doDrag);\n        document.removeEventListener(\"mouseup\", stopDrag);\n      };\n\n      document.addEventListener(\"mousemove\", doDrag);\n      document.addEventListener(\"mouseup\", stopDrag);\n    };\n    const handleMouseEnter = (index: any) => {\n      setHoveredColumn(index); // Set the hovered column index\n    };\n    const handleMouseLeave = () => {\n      setHoveredColumn(null); // Reset hovered column index\n    };\n    const handleRowClick = (\n      rowIndex: any,\n      event: React.MouseEvent<HTMLDivElement, MouseEvent>\n    ) => {\n      function getIndexAndData(selectedRowData: Array<any>) {\n        const filterSelectrowData = selectedRowData.map((d, idx) => {\n          if (!unSelectable(d)) {\n            return { idx, data: d };\n          }\n          return null;\n        });\n        const removeNullValue = filterSelectrowData.filter((d) => d !== null);\n        const data = removeNullValue.map((itm: any) => itm.data);\n        const newSelectedRowsFiltered = removeNullValue.map(\n          (itm: any) => itm.idx\n        );\n        return { newSelectedRowsFiltered, data };\n      }\n\n      if (!isMultipleSelect) {\n        // Single selection mode\n        setSelectedRows([rowIndex]);\n      } else {\n        // Multiple selection mode\n        if (event.shiftKey && lastSelectedRowIndex !== null) {\n          // Shift + Click: Select range between last clicked row and current clicked row\n          const rangeStart = Math.min(lastSelectedRowIndex, rowIndex);\n          const rangeEnd = Math.max(lastSelectedRowIndex, rowIndex);\n          const newSelectedRows: Array<number> = [];\n          for (let i = rangeStart; i <= rangeEnd; i++) {\n            if (!selectedRows.includes(i)) {\n              newSelectedRows.push(i);\n            }\n          }\n\n          let selectedItemsParams: Array<number> = [\n            ...selectedItems,\n            ...newSelectedRows,\n          ];\n\n          setSelectedRows([...selectedRows, ...newSelectedRows]);\n          const selectedRowData = rows.filter((d, idx) =>\n            selectedItemsParams.includes(idx)\n          );\n          const { newSelectedRowsFiltered } =\n            getIndexAndData(selectedRowData);\n\n          setSelectedItems(newSelectedRowsFiltered);\n          // onSelectionChangeRef.current(data, rowIndex);\n        } else if (event.ctrlKey || event.metaKey) {\n          // Ctrl (or Cmd on macOS) + Click: Toggle row selection\n          if (selectedRows.includes(rowIndex) && !freeze) {\n            setSelectedRows(selectedRows.filter((i) => i !== rowIndex));\n            setSelectedItems((d) => {\n              d = d.filter((i) => i !== rowIndex);\n              return d;\n            });\n            let selectedItemsParams: Array<number> = selectedItems.filter(\n              (i) => i !== rowIndex\n            );\n\n            setSelectedItems(selectedItemsParams);\n            // onSelectionChangeRef.current(selectedRowData, rowIndex);\n          } else {\n            setSelectedRows([...selectedRows, rowIndex]);\n            setSelectedItems((d) => {\n              d.push(rowIndex);\n              return d;\n            });\n            let selectedItemsParams: Array<number> = [\n              ...selectedItems,\n              rowIndex,\n            ];\n\n            setSelectedItems(selectedItemsParams);\n            // onSelectionChangeRef.current(selectedRowData, rowIndex);\n          }\n        } else {\n          // Regular click in multiple selection mode: Single click to select a row\n          setSelectedRows([rowIndex]);\n        }\n      }\n      setLastSelectedRowIndex(rowIndex); // Update the last selected index\n    };\n    const handleRowDoubleClick = (\n      rowIndex: any,\n      event: React.MouseEvent<HTMLDivElement, MouseEvent>\n    ) => {\n      const row = rows[rowIndex];\n      if (unSelectable(row)) return;\n      if (!isRowSelectable) return;\n\n\n      let selectedItemsParams: Array<number> = [];\n      if (isMultipleSelect) {\n        selectedItemsParams = [...selectedItems, ...selectedRows];\n      } else {\n        selectedItemsParams = [rowIndex];\n      }\n\n\n      if (selectedItems.includes(rowIndex) && !freeze) {\n        selectedItemsParams = selectedItems.filter((i) => i !== rowIndex);\n        setSelectedItems(selectedItemsParams);\n        onSelectionChangeRef.current([], rowIndex);\n        return;\n      }\n\n      setSelectedItems(selectedItemsParams);\n      onSelectionChangeRef.current([row], rowIndex);\n    };\n    const handleKeyDown = (e: any) => {\n\n      if (e.key === \"ArrowDown\") {\n        e.preventDefault();\n        setSelectedRows((prevIndex: any) => {\n          if (prevIndex[prevIndex.length - 1] === null) return [0];\n          if (prevIndex[prevIndex.length - 1] >= rows.length - 1) {\n            return [rows.length - 1];\n          }\n          const newPrevIndex = prevIndex[prevIndex.length - 1] + 1;\n          const row = document.querySelector(`.row-${newPrevIndex}`);\n          row?.querySelector(\"input\")?.focus();\n\n          row?.scrollIntoView({ block: \"end\", behavior: \"smooth\" });\n          return [newPrevIndex];\n        });\n      } else if (e.key === \"ArrowUp\") {\n        e.preventDefault();\n\n        if (selectedRows[selectedRows.length - 1] === 0) {\n          const input = document.querySelector(\n            inputsearchselector\n          ) as HTMLInputElement;\n          if (input && input.tagName === \"INPUT\") {\n            input?.focus();\n          } else if (input && input.tagName === \"DIV\") {\n            const divInput = document.querySelector(\n              `${inputsearchselector} input`\n            ) as HTMLInputElement;\n\n            divInput?.focus();\n          }\n        }\n\n        setSelectedRows((prevIndex: any) => {\n          if (prevIndex[prevIndex.length - 1] === 0) return [0];\n          const newPrevIndex = prevIndex[prevIndex.length - 1] - 1;\n          const row = document.querySelector(`.row-${newPrevIndex}`);\n\n          row?.scrollIntoView({ block: \"end\", behavior: \"smooth\" });\n          row?.querySelector(\"input\")?.focus();\n          return [newPrevIndex];\n        });\n      }\n\n    };\n    const handleRowKeyDown = (e: any) => {\n      e.stopPropagation()\n\n      if (e.key === \"Enter\" || e.key === \"NumpadEnter\") {\n        e.preventDefault();\n        if (!isRowSelectable) return;\n\n        let selectedItemsParams: Array<number> = [];\n        const rowIndex = selectedRows[selectedRows.length - 1];\n        if (isMultipleSelect) {\n          selectedItemsParams = [...selectedItems, ...selectedRows];\n        } else {\n          selectedItemsParams = [rowIndex];\n        }\n        const row = rows[selectedItemsParams[selectedItemsParams.length - 1]];\n        if (unSelectable(row)) {\n          return;\n        }\n\n        if (selectedItems.includes(rowIndex) && !freeze) {\n          selectedItemsParams = selectedItems.filter((i) => i !== rowIndex);\n          setSelectedItems(selectedItemsParams);\n          onSelectionChangeRef.current([], rowIndex);\n          return;\n        }\n\n        setSelectedItems(selectedItemsParams);\n        onSelectionChangeRef.current([row], rowIndex);\n      } else if (e.key === \"Delete\" || e.key === \"Backspace\") {\n        if (!isRowSelectable) return;\n        const rowIndex = selectedRows[selectedRows.length - 1];\n\n        const selectedRowData = rows.filter((d, idx) =>\n          selectedRows.includes(idx)\n        );\n\n        if (onKeyDownRef?.current) {\n          onKeyDownRef?.current(selectedRowData, e.key, rowIndex);\n        }\n      }\n    }\n    useImperativeHandle(UpwardTableRef, () => ({\n      resetTableSelected: () => {\n        setSelectedRows([0]);\n        setLastSelectedRowIndex(0);\n        setSelectedItems([]);\n        if (rows.length > 0) {\n          const row = document.querySelector(`.row-${0}`);\n          row?.scrollIntoView({ block: \"end\", behavior: \"smooth\" });\n        }\n      },\n      getSelectedIndex: () => {\n        return selectedItems[0];\n      },\n      getSelectedRows: () => {\n        return rows.filter((d, idx) => selectedItems.includes(idx));\n      },\n      getFirstColumn: () => {\n        return rows.filter((d, idx) => selectedItems.includes(idx));\n      },\n      getParentElement: () => {\n        return divRef.current\n      },\n      getSelectedRowsOnClick: () => {\n        return selectedRows[0];\n      },\n      setSelectRows: (indx: number) => {\n        return setSelectedItems([indx])\n      },\n    }));\n\n    const handleRightClick = (event: any, rowIndex: number) => {\n      event.preventDefault();\n      const rowSelected = rows[rowIndex]\n      if (onRightClick) {\n        onRightClick(rowSelected, event)\n      }\n    };\n\n\n\n    return (\n      <div\n        style={{\n          display: \"flex\",\n          justifyContent: \"center\",\n        }}\n        onKeyDown={handleKeyDown}\n      >\n        <div>\n          <div className=\"table-frame-color\">\n            <div\n              style={{\n                display: \"flex\",\n                flexDirection: \"column\",\n                width: `${width - 10}px        `,\n                height: `${height - 135}px`,\n                minHeight: \"270px\"\n              }}\n              className=\"table-frame\"\n            >\n              <div className=\"table-panel\">\n                <div ref={divRef} className={`grid-container `} tabIndex={-1}>\n                  <div\n                    className=\"grid-row grid-header\"\n                    style={{\n                      position: \"sticky\",\n                      zIndex: \"10\",\n                      top: \"-1px\",\n                      background: \"white\",\n                    }}\n                  >\n                    {columns.map((col: any, index: number) => (\n                      <div\n                        key={index}\n                        className={`grid-cell header-cell ${hoveredColumn === index ? `highlight-column` : \"\"\n                          }`} // Add the class if hovered\n                        style={{ width: col.width, height: \"20px\", }}\n                      >\n                        <input\n                          style={{ fontWeight: \"bold\" }}\n                          defaultValue={col.headerName}\n                          readOnly\n                          onChange={(e) => { }}\n                        />\n                        <div\n                          className=\"resize-handle\"\n                          onMouseDown={(e) => startResize(index, e)}\n                          onMouseEnter={(e) => {\n                            e.preventDefault();\n                            handleMouseEnter(index);\n                          }} // On hover\n                          onMouseLeave={(e) => {\n                            e.preventDefault();\n                            handleMouseLeave();\n                          }} // On mouse leave\n                        />\n                      </div>\n                    ))}\n                  </div>\n                  {pages[pageNumber]?.map((row: any, rowIndex: any) => (\n                    <div\n                      className={`grid-row row-${rowIndex}`} // Highlight selected row\n                      key={rowIndex}\n                      onClick={(e) => handleRowClick(rowIndex, e)}\n                      onDoubleClick={(e) => {\n                        // e.stopPropagation()\n\n                        if (_clickTimeout) {\n                          clearTimeout(_clickTimeout);\n                          _setClickTimeout(null);\n                        }\n\n                        const timeoutId: any = setTimeout(() => {\n                          handleRowDoubleClick(rowIndex, e)\n                        }, 200);\n\n                        _setClickTimeout(timeoutId);\n\n\n\n                      }}\n                      onKeyDown={(e) => {\n\n                        // e.stopPropagation()\n\n                        if (_clickTimeout) {\n                          clearTimeout(_clickTimeout);\n                          _setClickTimeout(null);\n                        }\n\n                        const timeoutId: any = setTimeout(() => {\n                          handleRowKeyDown(e)\n                        }, 200);\n\n                        _setClickTimeout(timeoutId);\n\n\n                      }}\n                      onContextMenu={(e) => handleRightClick(e, rowIndex)}\n                    >\n                      {columns.map((col: any, colIndex: number) => (\n                        <div\n                          key={colIndex}\n                          style={{ width: col.width }}\n                          className={`grid-cell ${hoveredColumn === colIndex ? `highlight-column` : \"\"} row-${rowIndex} col-${colIndex}`}\n                        >\n                          <input\n                            value={row[col.field]}\n                            onChange={(e) => { }}\n                            readOnly={dataReadOnly}\n                            className={`${selectedRows.includes(rowIndex)\n                              ? \"selected-row\"\n                              : \"\"\n                              } ${selectedItems.includes(rowIndex)\n                                ? \"selected-items\"\n                                : \"\"\n                              }\n                          ${col.type === \"number\" ? \"number\" : \"text\"}\n                          `}\n                          />\n                          <div\n                            className=\"resize-handle\"\n                            onMouseDown={(e) => {\n                              e.preventDefault();\n                              startResize(colIndex, e);\n                            }}\n                            onMouseEnter={(e) => {\n                              e.preventDefault();\n                              handleMouseEnter(colIndex);\n                            }} // On hover\n                            onMouseLeave={(e) => {\n                              e.preventDefault();\n                              handleMouseLeave();\n                            }} // On mouse leave\n                          />\n                        </div>\n                      ))}\n                    </div>\n                  ))}\n                </div>\n              </div>\n            </div>\n\n            {isLoading && <div className=\"table-loading\">\n              <div className=\"loader\"></div>\n            </div>}\n          </div>\n          <div className=\"table-panel-footer\" >\n            <div>Records : {rows?.length}</div>\n            <div><Pagination count={pages.length} onChange={(e, value) => {\n              setPageNumber(value - 1)\n            }} />\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n);\n\nfunction formatArrayIntoChunks(arr: Array<any>, chunkSize = 100) {\n  let result = [];\n\n  for (let i = 0; i < arr.length; i += chunkSize) {\n    // Use slice to create chunks of 'chunkSize'\n    result.push(arr.slice(i, i + chunkSize));\n  }\n  return result;\n}\n\n\n\n\n\nexport { UpwardTable, };\n","import { useEffect, useRef, useState, useId } from \"react\";\nimport \"../style/upwardtablemodel.css\";\nimport { TextInput } from \"../components/UpwardFields\";\nimport { UpwardTable } from \"../components/UpwardTable\";\nimport { throttle } from \"lodash\";\nimport { AxiosInstance } from \"axios\";\nimport { User } from \"../components/AuthContext\";\nimport { useMutation } from \"react-query\";\nimport { wait } from \"../lib/wait\";\nimport { IconButton, Modal } from '@mui/material'\nimport CloseIcon from \"@mui/icons-material/Close\";\n\n\ninterface UseUpwardTableModalProps {\n  myAxios: AxiosInstance;\n  user: User | null;\n  column: Array<any>;\n  link: {\n    url: string;\n    queryUrlName: string;\n  };\n  onSelectionChange: (selectedRow: any) => void;\n  onModalClose?: () => void;\n  responseDataKey: string;\n}\nexport const useUpwardTableModal = ({\n  myAxios,\n  user,\n  column,\n  link,\n  onSelectionChange,\n  responseDataKey,\n  onModalClose = () => { },\n}: UseUpwardTableModalProps) => {\n  const id = useId();\n  const inputSearchRef = useRef<HTMLInputElement>(null);\n  const tableRef = useRef<any>(null);\n  const parentRef = useRef<any>(null);\n  const [show, setShowModal] = useState(false);\n  const [rows, setRows] = useState([]);\n  const { isLoading, mutate } = useMutation({\n    mutationKey: id,\n    mutationFn: async (variable: any) =>\n      await myAxios.get(\n        `${link?.url}?${link?.queryUrlName}=${variable.search}`,\n        {\n          headers: {\n            Authorization: `Bearer ${user?.accessToken}`,\n          },\n        }\n      ),\n    onSuccess: (res) => {\n      const response = res as any;\n      setRows(response.data[responseDataKey]);\n    },\n  });\n  const performSearch = (query: string) => {\n    if (query === \"\") {\n      mutate({ search: query });\n    }\n  };\n  // Throttle the search function to limit it to once every 500ms\n  const throttledSearch = throttle((query) => performSearch(query), 500)\n\n  const openModal = (search: string) => {\n    mutate({ search: search });\n    setShowModal(true);\n    setTimeout(() => {\n      if (inputSearchRef.current) {\n        inputSearchRef.current.value = search;\n      }\n      inputSearchRef.current?.focus();\n    }, 150);\n  };\n  const closeModal = () => {\n    setShowModal(false);\n    onModalClose();\n  };\n\n  const width = 460;\n  const height = 530;\n\n  useEffect(() => {\n    if (show && parentRef.current) {\n      wait(1050).then(() => {\n        parentRef.current?.focus();\n      })\n    }\n  }, [show, parentRef]);\n\n  const ModalComponent = (\n    <Modal\n      open={show}\n      onClose={() => {\n        setShowModal(false);\n      }}\n      aria-labelledby=\"modal-modal-title\"\n      aria-describedby=\"modal-modal-description\"\n    >\n      <div style={{\n        position: \"absolute\",\n        top: \"50%\",\n        left: \"50%\",\n        transform: \"translate(-50%, -50%)\",\n        width: \"auto\",\n        background: \"#fff\",\n        paddingTop: \"30px\",\n        paddingBottom: \"20px\",\n        paddingLeft: \"10px\",\n        paddingRight: \"10px\"\n      }}>\n        <div >\n          <TextInput\n            label={{ style: { display: \"none\" } }}\n            input={{\n              className: \"search-input-up-on-key-down\",\n              type: \"text\",\n              style: { width: \"100%\", marginBottom: \"20px\" },\n              onChange: (e) => {\n                e.preventDefault();\n                throttledSearch(e.currentTarget.value);\n              },\n              onKeyDown: (e) => {\n                if (e.key === \"Enter\" || e.key === \"NumpadEnter\") {\n                  e.preventDefault();\n                  mutate({ search: (e.target as any).value });\n                }\n                if (e.key === \"ArrowDown\") {\n                  e.preventDefault();\n                  const datagridview = tableRef.current.getParentElement().querySelector(\n                    `.grid-container .row-0.col-0 input`\n                  ) as HTMLDivElement;\n                  setTimeout(() => {\n                    if (datagridview)\n                      datagridview.focus();\n                  }, 100)\n                }\n              },\n            }}\n            inputRef={inputSearchRef}\n          />\n          <UpwardTable\n            ref={tableRef}\n            rows={rows}\n            column={column.filter((itm) => !itm.hide)}\n            width={width}\n            height={height}\n            dataReadOnly={true}\n            onSelectionChange={onSelectionChange}\n          />\n\n          <IconButton\n            style={{\n              position: \"absolute\",\n              top: \"5px\",\n              right: \"10px\",\n            }}\n            aria-label=\"search-client\"\n            onClick={closeModal}\n          >\n            <CloseIcon style={{ fontSize: \"15px\" }} />\n          </IconButton>\n\n\n        </div>\n      </div>\n\n    </Modal>\n\n  );\n\n  return {\n    Modal: ModalComponent,\n    openModal,\n    closeModal,\n    isLoading,\n  };\n};\n","import React, { useContext, useState, useRef, useReducer, useEffect, useCallback } from \"react\";\nimport {\n  Box,\n  Typography,\n  TextField,\n  Button,\n  IconButton,\n  Modal,\n  FormControl,\n  InputLabel,\n  OutlinedInput,\n  InputAdornment,\n  MenuItem,\n  Menu,\n} from \"@mui/material\";\nimport AddIcon from \"@mui/icons-material/Add\";\nimport { GridRowSelectionModel } from \"@mui/x-data-grid\";\nimport { useMutation, useQuery, useQueryClient } from \"react-query\";\nimport Swal from \"sweetalert2\";\nimport SaveIcon from \"@mui/icons-material/Save\";\nimport { AuthContext } from \"../../../../components/AuthContext\";\nimport CustomDatePicker from \"../../../../components/DatePicker\";\nimport PersonSearchIcon from \"@mui/icons-material/PersonSearch\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport { flushSync } from \"react-dom\";\nimport { LoadingButton } from \"@mui/lab\";\nimport RestartAltIcon from \"@mui/icons-material/RestartAlt\";\nimport DownloadIcon from \"@mui/icons-material/Download\";\nimport {\n  codeCondfirmationAlert,\n  saveCondfirmationAlert,\n} from \"../../../../lib/confirmationAlert\";\nimport DriveFolderUploadIcon from \"@mui/icons-material/DriveFolderUpload\";\nimport { DisplayFile, checkFile } from \"../Claims/Claims\";\nimport ReactDOMServer from \"react-dom/server\";\nimport { grey } from \"@mui/material/colors\";\nimport { UpwardTable } from \"../../../../components/UpwardTable\";\nimport { useUpwardTableModal } from \"../../../../hooks/useUpwardTableModal\";\nimport { TextAreaInput, TextInput } from \"../../../../components/UpwardFields\";\nimport AccountBalanceIcon from '@mui/icons-material/AccountBalance';\nimport { NumericFormat } from \"react-number-format\";\nimport { format } from \"date-fns\";\nimport PageHelmet from \"../../../../components/Helmet\";\n\nconst initialState = {\n  Sub_Ref_No: \"\",\n  Ref_No: \"\",\n  PNo: \"\",\n  IDNo: \"\",\n  Date: new Date(),\n  Name: \"\",\n  Remarks: \"\",\n  PDC_Status: \"\",\n  Deposit_Slip: \"\",\n  DateDeposit: \"\",\n  OR_No: \"\",\n  search: \"\",\n  pdcMode: \"\",\n  checkMode: \"\",\n  sub_account: \"\",\n  Acronym: \"\",\n};\nconst modalPdcCheckInititalState = {\n  CheckIdx: \"0\",\n  BankName: \"\",\n  BankCode: \"\",\n  Branch: \"\",\n  Check_Date: new Date(),\n  Check_No: \"\",\n  Check_Amnt: \"\",\n  Check_Remarks: \"\",\n  Check_Count: \"\",\n};\nexport const reducer = (state: any, action: any) => {\n  switch (action.type) {\n    case \"UPDATE_FIELD\":\n      return {\n        ...state,\n        [action.field]: action.value,\n      };\n    default:\n      return state;\n  }\n};\nexport const pdcColumn = [\n  { field: \"Check_No\", headerName: \"Check No.\", width: 150 },\n  { field: \"Check_Date\", headerName: \"Check Date\", width: 150 },\n  { field: \"Check_Amnt\", headerName: \"Amount\", width: 150, type: \"number\" },\n  { field: \"BankName\", headerName: \"Bank\", width: 200 },\n  { field: \"Branch\", headerName: \"Branch\", width: 200 },\n  {\n    field: \"Check_Remarks\",\n    headerName: \"Checked Remarks\",\n    width: 350,\n  },\n  { field: \"Deposit_Slip\", headerName: \"Deposit Slip\", width: 150 },\n  { field: \"DateDeposit\", headerName: \"Date Deposit\", width: 150 },\n  { field: \"OR_No\", headerName: \"OR Num\", width: 150 },\n  { field: \"BankCode\", headerName: \"Bank Code\", width: 150, hide: true },\n];\nexport const pdcSearchColumn = [\n  { field: \"Date\", headerName: \"Date Received\", width: 160 },\n  { field: \"Ref_No\", headerName: \"Ref No.\", width: 160 },\n  {\n    field: \"Name\",\n    headerName: \"Name\",\n    flex: 1,\n  },\n];\nexport const pdcBanksColumn = [\n  { field: \"Bank_Code\", headerName: \"Code\", width: 130 },\n  { field: \"Bank\", headerName: \"Bank Name\", flex: 1 },\n];\nconst queryKey = \"pdc\";\nconst quertKeyPDCSearch = \"pdc-search\";\n\nexport default function PostDateChecks() {\n  const tableRef = useRef<any>(null);\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\n  const open = Boolean(anchorEl);\n  const handleClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n    setAnchorEl(event.currentTarget);\n  };\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n  const [isDragging, setIsDragging] = useState(false);\n  const [selectedFiles, setSelectedFiles] = useState<Array<File>>([]);\n  const [pdcDataRows, setPdcDataRows] = useState<GridRowSelectionModel>([]);\n  const [openPdcInputModal, setOpenPdcInputModal] = useState(false);\n  const [showModal, setShowModal] = useState(false);\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const [stateModalPdcCheck, dispatchModalPdcCheck] = useReducer(\n    reducer,\n    modalPdcCheckInititalState\n  );\n\n  const { myAxios, user } = useContext(AuthContext);\n  const searchRef = useRef<HTMLInputElement>(null);\n\n  // pdc form save button\n  const fileInputRef = useRef<HTMLInputElement>(null);\n  const savePDCButtonRef = useRef<HTMLButtonElement>(null);\n  const openIdsButtonRef = useRef<HTMLButtonElement>(null);\n\n\n  //check modal refs\n\n  const checkModalSaveButton = useRef<HTMLButtonElement>(null);\n  const checkModalSaveButtonActionRef = useRef<any>(null);\n  // search modal auto focus on load\n\n\n  // modal \n  const _checknoRef = useRef<HTMLInputElement>(null);\n  const _bankRef = useRef<HTMLInputElement>(null);\n  const _branchRef = useRef<HTMLInputElement>(null);\n  const _remarksRef = useRef<HTMLTextAreaElement>(null);\n  const _chekdateRef = useRef<HTMLInputElement>(null);\n  const _amountRef = useRef<HTMLInputElement>(null);\n  const _checkcountRef = useRef<HTMLInputElement>(null);\n  const _bankCode = useRef('');\n  const _slipCodeRef = useRef('');\n  const _slipDateRef = useRef('');\n  const _checkOR = useRef('');\n\n\n  const addRefButton = useRef<HTMLButtonElement>(null);\n  const queryClient = useQueryClient();\n\n  const dateRef = useRef<HTMLButtonElement>(null);\n  const remakrsRef = useRef<HTMLButtonElement>(null);\n  const pnRef = useRef<HTMLButtonElement>(null);\n  const branchRef = useRef<HTMLButtonElement>(null);\n  const clientnameRef = useRef<HTMLButtonElement>(null);\n\n\n  const { isLoading: newRefNumberLoading, refetch: refetchNewRefNumber } =\n    useQuery({\n      queryKey: \"new-ref-number\",\n      queryFn: async () => {\n        return await myAxios.get(\"/task/accounting/pdc-new-ref-number\", {\n          headers: {\n            Authorization: `Bearer ${user?.accessToken}`,\n          },\n        });\n      },\n      refetchOnWindowFocus: false,\n      onSuccess: (res) => {\n        const response = res as any;\n        dispatch({\n          type: \"UPDATE_FIELD\",\n          field: \"Ref_No\",\n          value: response.data.RefNo[0].pdcID,\n        });\n        dispatch({\n          type: \"UPDATE_FIELD\",\n          field: \"Sub_Ref_No\",\n          value: response.data.RefNo[0].pdcID,\n        });\n\n      },\n    });\n  const { mutate, isLoading: loadingAddNew } = useMutation({\n    mutationKey: queryKey,\n    mutationFn: async (variables: any) => {\n      if (state.pdcMode === \"update\") {\n        delete variables.mode;\n        return await myAxios.post(\"/task/accounting/update-pdc\", variables, {\n          headers: {\n            Authorization: `Bearer ${user?.accessToken}`,\n          },\n        });\n      }\n      delete variables.mode;\n      return await myAxios.post(\"/task/accounting/add-pdc\", variables, {\n        headers: {\n          Authorization: `Bearer ${user?.accessToken}`,\n        },\n      });\n    },\n    onSuccess: (res) => {\n      if (res.data.success) {\n        refetchNewRefNumber();\n        queryClient.invalidateQueries(quertKeyPDCSearch);\n        setNewStateValue(dispatch, initialState);\n        setPdcDataRows([]);\n        dispatch({\n          type: \"UPDATE_FIELD\",\n          field: \"pdcMode\",\n          value: \"\",\n        });\n\n        return Swal.fire({\n          position: \"center\",\n          icon: \"success\",\n          title: res.data.message,\n          showConfirmButton: false,\n          timer: 1500,\n        });\n      }\n\n      Swal.fire({\n        position: \"center\",\n        icon: \"error\",\n        title: res.data.message,\n        showConfirmButton: false,\n        timer: 1500,\n      });\n    },\n  });\n  //selecte search\n\n  const { mutate: mutateSelectedSearch, isLoading: isLoadingSelectedSearch } =\n    useMutation({\n      mutationKey: queryKey,\n      mutationFn: async (variables: any) =>\n        await myAxios.post(\"/task/accounting/get-search-pdc-check\", variables, {\n          headers: {\n            Authorization: `Bearer ${user?.accessToken}`,\n          },\n        }),\n      onSuccess: async (res) => {\n        if (!res?.data.success) {\n          return alert(`Error : ${res?.data.message}`);\n        }\n\n        const response = res as any;\n        const Ref_No = response.data.getSearchPDCCheck[0].Ref_No;\n        if (response.data.upload[0]) {\n          const uploadFiles = JSON.parse(response.data.upload[0]?.upload);\n          const newObjContainerBasic = await formatDataToDocument(\n            uploadFiles,\n            `${process.env.REACT_APP_IMAGE_URL}pdc/${Ref_No}`\n          );\n          const fileSelected = await Promise.all(newObjContainerBasic);\n          setSelectedFiles(fileSelected);\n        }\n        async function formatDataToDocument(\n          dataDocument: Array<any>,\n          url: string\n        ) {\n          const newObjContainer: Array<any> = [];\n          for (let index = 0; index < dataDocument.length; index++) {\n            const basicItem = dataDocument[index];\n            const mainURL = `${url}/${basicItem.uniqueFilename}`;\n            const response = await fetch(mainURL);\n            const blob = await response.blob();\n            const file = new File([blob], basicItem.fileName, {\n              type: basicItem.fileType,\n            });\n            const reader = new FileReader();\n            newObjContainer.push(\n              new Promise((resolve, reject) => {\n                reader.onload = function (event) {\n                  resolve(file);\n                };\n                reader.onerror = function (event) {\n                  reject(new Error(\"Error reading file: \" + file.name));\n                };\n                reader.readAsDataURL(file);\n              })\n            );\n          }\n          return newObjContainer;\n        }\n\n        setPdcDataRows(\n          response.data.getSearchPDCCheck.map((item: any, idx: number) => {\n            return { ...item, CheckIdx: `${idx}` };\n          })\n        );\n        dispatch({\n          type: \"UPDATE_FIELD\",\n          field: \"Ref_No\",\n          value: response.data.getSearchPDCCheck[0].Ref_No,\n        });\n        dispatch({\n          type: \"UPDATE_FIELD\",\n          field: \"Name\",\n          value: response.data.getSearchPDCCheck[0].Name,\n        });\n        dispatch({\n          type: \"UPDATE_FIELD\",\n          field: \"Date\",\n          value: response.data.getSearchPDCCheck[0].Date,\n        });\n        dispatch({\n          type: \"UPDATE_FIELD\",\n          field: \"PNo\",\n          value: response.data.getSearchPDCCheck[0].PNo,\n        });\n        dispatch({\n          type: \"UPDATE_FIELD\",\n          field: \"IDNo\",\n          value: response.data.getSearchPDCCheck[0].IDNo,\n        });\n\n        dispatch({\n          type: \"UPDATE_FIELD\",\n          field: \"Acronym\",\n          value: response.data.getSearchPDCCheck[0].Acronym,\n        });\n        dispatch({\n          type: \"UPDATE_FIELD\",\n          field: \"sub_account\",\n          value: response.data.getSearchPDCCheck[0].sub_account,\n        });\n        dispatch({\n          type: \"UPDATE_FIELD\",\n          field: \"Remarks\",\n          value: response.data.getSearchPDCCheck[0].Remarks,\n        });\n        dispatch({\n          type: \"UPDATE_FIELD\",\n          field: \"pdcMode\",\n          value: \"update\",\n        });\n      },\n    });\n  // policy ids search table modal\n  const {\n    Modal: ModalSearchPdcIDs,\n    closeModal: closeModalSearchPdcIDs,\n    openModal: openModalSearchPdcIDs,\n    isLoading: isLoadingModalSearchPdcIDs,\n  } = useUpwardTableModal({\n    myAxios,\n    user,\n    link: {\n      url: \"/task/accounting/search-pdc-policy-id\",\n      queryUrlName: \"searchPdcPolicyIds\",\n    },\n    column: [\n      { field: \"Type\", headerName: \"Type\", width: 130 },\n      { field: \"IDNo\", headerName: \"ID No.\", width: 200 },\n      { field: \"chassis\", headerName: \"Chassis No.\", width: 200, hide: true },\n      {\n        field: \"Name\",\n        headerName: \"Name\",\n        width: 350,\n      },\n      {\n        field: \"ID\",\n        headerName: \"ID\",\n        width: 300,\n        hide: true,\n      },\n      {\n        field: \"client_id\",\n        headerName: \"client_id\",\n        width: 200,\n        hide: true,\n      },\n    ],\n    onSelectionChange: (selectedRow: any) => {\n      if (selectedRow.length > 0) {\n        dispatch({\n          type: \"UPDATE_FIELD\",\n          field: \"PNo\",\n          value: selectedRow[0].IDNo,\n        });\n        dispatch({\n          type: \"UPDATE_FIELD\",\n          field: \"IDNo\",\n          value: selectedRow[0].client_id,\n        });\n        dispatch({\n          type: \"UPDATE_FIELD\",\n          field: \"Name\",\n          value: selectedRow[0].Name ?? \"\",\n        });\n        dispatch({\n          type: \"UPDATE_FIELD\",\n          field: \"Remarks\",\n          value: selectedRow[0].remarks ?? \"\",\n        });\n        dispatch({\n          type: \"UPDATE_FIELD\",\n          field: \"sub_account\",\n          value: selectedRow[0].sub_account,\n        });\n        dispatch({\n          type: \"UPDATE_FIELD\",\n          field: \"Acronym\",\n          value: selectedRow[0].Acronym,\n        });\n\n        closeModalSearchPdcIDs();\n        if (pdcDataRows.length <= 0) {\n          setTimeout(() => {\n            addRefButton.current?.click();\n          }, 100);\n        }\n      }\n    },\n\n    responseDataKey: \"clientsId\",\n  });\n  // bank search table modal\n  const {\n    Modal: ModalSearchBanks,\n    closeModal: closeModalSearchBanks,\n    openModal: openModalSearchBanks,\n    isLoading: isLoadingModalSearchbanks,\n  } = useUpwardTableModal({\n    myAxios,\n    user,\n    link: {\n      url: \"/task/accounting/search-pdc-banks\",\n      queryUrlName: \"searchPdcBanks\",\n    },\n    column: [\n      { field: \"Bank_Code\", headerName: \"Code\", width: 100 },\n      { field: \"Bank\", headerName: \"Bank Name\", width: 350 },\n    ],\n    onSelectionChange: (selectedRow: any) => {\n      if (selectedRow.length > 0) {\n        setTimeout(() => {\n          _bankCode.current = selectedRow[0].Bank_Code\n          if (_bankRef.current) {\n            _bankRef.current.value = selectedRow[0].Bank\n          }\n        }, 100)\n\n        closeModalSearchBanks();\n        setOpenPdcInputModal(true);\n        setTimeout(() => {\n          _branchRef.current?.focus()\n        }, 100);\n      }\n    },\n    onModalClose: () => {\n      setTimeout(() => {\n        setOpenPdcInputModal(true);\n      }, 100);\n    },\n    responseDataKey: \"pdcBanks\",\n  });\n  // pdc search table modal\n  const {\n    Modal: UpwardPDCModal,\n    closeModal: closeUpwardPDCModal,\n    openModal: openUpwardPDCModal,\n    isLoading: isLoadingModalSearchPDC,\n  } = useUpwardTableModal({\n    myAxios,\n    user,\n    column: [\n      { field: \"Date\", headerName: \"Date Received\", width: 90 },\n      { field: \"Ref_No\", headerName: \"Ref No.\", width: 80 },\n      {\n        field: \"Name\",\n        headerName: \"Name\",\n        width: 320,\n      },\n    ],\n    link: {\n      url: \"/task/accounting/search-pdc\",\n      queryUrlName: \"searchPDCInput\",\n    },\n    onSelectionChange: (selectedRow: any) => {\n      if (selectedRow.length > 0) {\n        mutateSelectedSearch({ ref_no: selectedRow[0].Ref_No });\n        closeUpwardPDCModal();\n        if (searchRef.current) {\n          searchRef.current?.focus();\n        }\n      }\n    },\n    responseDataKey: \"searchPDC\",\n  });\n\n  const handleInputChange = (e: any) => {\n    const { name, value } = e.target;\n    dispatch({ type: \"UPDATE_FIELD\", field: name, value });\n  };\n  // async function handleOnSave(e: any) {\n\n  // }\n\n  const handleOnSave = useCallback(async (e: any) => {\n    if (state.PNo === \"\") {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: \"Please provide loan information!\",\n        timer: 1500,\n      }).then(() => {\n        setTimeout(() => {\n          openIdsButtonRef.current?.click();\n        }, 350);\n      });\n    }\n    if (pdcDataRows.length <= 0) {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: \"Please provide entry!\",\n        timer: 1500,\n      }).then(() => {\n        setOpenPdcInputModal(true);\n      });\n    }\n    if (state.PNo.length >= 45) {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: \"Pno is too long!\",\n        timer: 1500,\n      });\n    }\n    if (state.Remarks.length >= 220) {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: \"Remarks is too long!\",\n        timer: 1500,\n      });\n    }\n    const filePromises: Array<any> = [];\n    function fileTransfer(filePromises: Array<any>) {\n      const files = selectedFiles;\n      if (files.length > 0) {\n        for (let i = 0; i < files.length; i++) {\n          const file = files[i];\n          const reader = new FileReader();\n          filePromises.push(\n            new Promise((resolve, reject) => {\n              reader.onload = function (event) {\n                resolve({\n                  datakey: \"pdc_file\",\n                  fileName: file.name,\n                  fileContent: event.target?.result,\n                  fileType: file.type,\n                  file,\n                });\n              };\n              reader.onerror = function (event) {\n                reject(new Error(\"Error reading file: \" + file.name));\n              };\n              reader.readAsDataURL(file);\n            })\n          );\n        }\n      }\n    }\n    fileTransfer(filePromises);\n    const fileToSave = await Promise.all(filePromises);\n    const stateSubmited = {\n      Ref_No: state.Ref_No,\n      PNo: state.PNo,\n      IDNo: state.IDNo,\n      Date: state.Date,\n      Name: state.Name,\n      Remarks: state.Remarks,\n      BankCode: state.BankCode,\n      checks: JSON.stringify(pdcDataRows),\n    };\n    if (state.pdcMode === \"update\") {\n      codeCondfirmationAlert({\n        isUpdate: true,\n        cb: (userCodeConfirmation) => {\n          mutate({ ...stateSubmited, userCodeConfirmation, fileToSave });\n        },\n      });\n    } else {\n      saveCondfirmationAlert({\n        isConfirm: () => {\n          mutate({ ...stateSubmited, fileToSave });\n        },\n      });\n    }\n  }, [state, mutate, pdcDataRows, selectedFiles])\n  const handleDragLeave = (e: React.DragEvent<HTMLDivElement>) => {\n    e.preventDefault();\n    setIsDragging(false);\n  };\n  const handleDragEnter = (e: React.DragEvent<HTMLDivElement>) => {\n    e.preventDefault();\n    setIsDragging(true);\n  };\n  const handleDrop = (e: React.DragEvent<HTMLDivElement>) => {\n    e.preventDefault();\n    const fileList = e.dataTransfer.files;\n    const files = Array.from(fileList);\n    const newFiles = [...selectedFiles, ...files];\n    setIsDragging(false);\n    if (checkFile(newFiles)) {\n      fileInputRef.current?.click();\n      return alert(\"file is not valid Extention!\");\n    } else {\n      setSelectedFiles(newFiles);\n    }\n  };\n  const clickPDCReceipt = () => {\n    flushSync(() => {\n      localStorage.removeItem(\"printString\");\n      localStorage.setItem(\"dataString\", JSON.stringify(pdcDataRows));\n      localStorage.setItem(\"paper-width\", \"8.5in\");\n      localStorage.setItem(\"paper-height\", \"11in\");\n      localStorage.setItem(\"module\", \"pdc\");\n      localStorage.setItem(\"state\", JSON.stringify(state));\n      localStorage.setItem(\n        \"column\",\n        JSON.stringify([\n          { datakey: \"Check_No\", header: \"CHECK NO\", width: \"80px\" },\n          { datakey: \"Check_Date\", header: \"DATE\", width: \"130px\" },\n          { datakey: \"BankName\", header: \"BANK\", width: \"240px\" },\n          { datakey: \"Check_Amnt\", header: \"AMOUNT\", width: \"70px\" },\n          { datakey: \"SEQ\", header: \"SEQ\", width: \"30px\" },\n        ])\n      );\n\n      localStorage.setItem(\n        \"title\",\n        user?.department === \"UMIS\"\n          ? \"UPWARD MANAGEMENT INSURANCE SERVICES\\n Post Date Checks Receipt\"\n          : \"UPWARD CONSULTANCY SERVICES AND MANAGEMENT INC.\\n Post Date Checks Receipt\"\n      );\n    });\n    window.open(\"/dashboard/print\", \"_blank\");\n  };\n  const clickPDCLabeling = () => {\n    let printString = () => {\n      return (\n        <div>\n          <p\n            style={{\n              color: \"#d1d5db\",\n              fontSize: \"11px\",\n              textAlign: \"center\",\n              padding: 0,\n              marginTop: \"8px\",\n              marginBottom: 0,\n            }}\n          >\n            UCSMI\n          </p>\n          <p\n            style={{\n              color: \"#d1d5db\",\n              fontSize: \"11px\",\n              textAlign: \"center\",\n              padding: 0,\n              margin: 0,\n            }}\n          >\n            {state.Name}\n          </p>\n          <p\n            style={{\n              color: \"#d1d5db\",\n              fontSize: \"11px\",\n              textAlign: \"center\",\n              padding: 0,\n              margin: 0,\n            }}\n          >\n            {state.IDNo}\n          </p>\n          <p\n            style={{\n              color: \"#d1d5db\",\n              fontSize: \"11px\",\n              textAlign: \"center\",\n              padding: 0,\n              margin: \"20px\",\n            }}\n          >\n            {state.Ref_No}\n          </p>\n        </div>\n      );\n    };\n\n    flushSync(() => {\n      const elementString = ReactDOMServer.renderToString(printString());\n      localStorage.setItem(\"printString\", elementString);\n      localStorage.removeItem(\"dataString\");\n      localStorage.setItem(\"paper-width\", \"8.5in\");\n      localStorage.setItem(\"paper-height\", \"11in\");\n    });\n    window.open(\"/dashboard/print\", \"_blank\");\n  };\n  const onSelectionChange = (selectedRow: any) => {\n    if (selectedRow.length > 0) {\n      const rowSelected = selectedRow[0];\n      setTimeout(() => {\n        if (\n          _checknoRef.current &&\n          _bankRef.current &&\n          _branchRef.current &&\n          _remarksRef.current &&\n          _chekdateRef.current &&\n          _amountRef.current &&\n          _checkcountRef.current\n        ) {\n          _checknoRef.current.value = rowSelected.Check_No\n          _bankRef.current.value = rowSelected.BankName\n          _branchRef.current.value = rowSelected.Branch\n          _remarksRef.current.value = rowSelected.Check_Remarks\n          _chekdateRef.current.value = rowSelected.Check_Date\n          _amountRef.current.value = formatNumber(parseFloat(rowSelected.Check_Amnt.replace(/,/g, '')))\n          _checkcountRef.current.value = '0'\n          _bankCode.current = rowSelected.BankCode\n          _slipCodeRef.current = rowSelected.Deposit_Slip\n          _slipDateRef.current = rowSelected.DateDeposit\n          _checkOR.current = rowSelected.Ref_No\n        }\n      }, 100)\n\n\n\n      flushSync(() => {\n        setOpenPdcInputModal(true);\n      });\n      checkModalSaveButtonActionRef.current?.focusVisible();\n    } else {\n      dispatch({\n        type: \"UPDATE_FIELD\",\n        field: \"checkMode\",\n        value: \"\",\n      });\n    }\n  };\n  function formatNumber(num: number) {\n    return (num || 0).toLocaleString(\"en-US\", {\n      minimumFractionDigits: 2,\n      maximumFractionDigits: 2,\n    })\n  }\n  function handleCheckDetailsSave() {\n    function incrementStringNumbers(\n      str: string,\n      increment: number\n    ) {\n      let num = parseInt(str);\n      num = num + increment;\n      return num.toString().padStart(str.length, \"0\");\n    }\n    function incrementDate(dateString: any, i: number) {\n      const currentDate = new Date(\n        dateString\n      );\n      currentDate.setMonth(currentDate.getMonth() + i);\n\n      return format(currentDate, 'yyyy-MM-dd')\n    }\n    function isValidDate(dateString: string): boolean {\n      const date = new Date(dateString);\n      return date instanceof Date && !isNaN(date.getTime());\n    }\n\n    if (\n      _checknoRef.current &&\n      _bankRef.current &&\n      _branchRef.current &&\n      _remarksRef.current &&\n      _chekdateRef.current &&\n      _amountRef.current &&\n      _checkcountRef.current\n    ) {\n      const filteredChecks = pdcDataRows.filter((itm: any) => {\n        return _checknoRef.current && _checknoRef.current.value === itm.Check_No\n      })\n      if (filteredChecks.length > 0) {\n        alert('check no. is already exist!')\n        _checknoRef.current.focus()\n        return\n      }\n      if (_checknoRef.current.value === '') {\n        alert('check no. is required!')\n        _checknoRef.current.focus()\n        return\n      } else if (_bankRef.current.value === '') {\n        alert('bank is required!')\n        _bankRef.current.focus()\n        return\n      } else if (_branchRef.current.value === '') {\n        alert('branch is required!')\n        _branchRef.current.focus()\n        return\n      } else if (!isValidDate(_chekdateRef.current.value)) {\n        alert('invalid date!')\n        _chekdateRef.current.focus()\n        return\n      } else if (parseFloat(_amountRef.current.value.replace(/,/g, '')) <= 0) {\n        alert('amount must be greater than 0!')\n        _amountRef.current.focus()\n        return\n      }\n\n\n      setPdcDataRows((d: any) => {\n        if (\n          _checknoRef.current &&\n          _bankRef.current &&\n          _branchRef.current &&\n          _remarksRef.current &&\n          _chekdateRef.current &&\n          _amountRef.current &&\n          _checkcountRef.current\n        ) {\n          const selectedIndex = tableRef.current.getSelectedIndex()\n\n          if (selectedIndex !== null && selectedIndex !== undefined) {\n            const newData = d.map((itm: any, idx: number) => {\n              if (\n                _checknoRef.current &&\n                _bankRef.current &&\n                _branchRef.current &&\n                _remarksRef.current &&\n                _chekdateRef.current &&\n                _amountRef.current &&\n                _checkcountRef.current &&\n                idx === selectedIndex\n              ) {\n                itm = {\n                  Check_No: _checknoRef.current.value,\n                  Check_Date: _chekdateRef.current.value,\n                  Check_Amnt: _amountRef.current.value,\n                  BankName: _bankRef.current.value,\n                  BankCode: _bankCode.current,\n                  Branch: _branchRef.current.value,\n                  Check_Remarks: _remarksRef.current.value,\n                  Deposit_Slip: _slipCodeRef.current,\n                  DateDeposit: _slipDateRef.current,\n                  OR_No: _checkOR.current,\n                }\n              }\n\n              return itm\n            })\n            return newData\n          } else {\n            const newData: any = []\n            for (\n              let i = 0;\n              i < parseInt(_checkcountRef.current.value);\n              i++\n            ) {\n              const data: any = {\n                Check_No: incrementStringNumbers(\n                  _checknoRef.current.value,\n                  i\n                ),\n                Check_Date: incrementDate(_chekdateRef.current.value, i),\n                Check_Amnt: _amountRef.current.value,\n                BankName: _bankRef.current.value,\n                BankCode: _bankCode.current,\n                Branch: _branchRef.current.value,\n                Check_Remarks: _remarksRef.current.value,\n                Deposit_Slip: _slipCodeRef.current,\n                DateDeposit: _slipDateRef.current,\n                OR_No: _checkOR.current,\n              };\n              newData.push(data)\n            }\n            return [...d, ...newData]\n          }\n\n        }\n        return d\n      })\n\n      setOpenPdcInputModal(false);\n      focusOnTable()\n    }\n\n  }\n  function focusOnTable() {\n    setTimeout(() => {\n      tableRef.current?.resetTableSelected();\n      const datagridview = tableRef.current.getParentElement().querySelector(\n        `.grid-container .row-0.col-0 input`\n      ) as HTMLDivElement;\n      setTimeout(() => {\n        if (datagridview)\n          datagridview.focus();\n      }, 100)\n    }, 100)\n  }\n\n  useEffect(() => {\n    const handleKeyDown = (event: any) => {\n      if ((event.ctrlKey || event.metaKey) && event.key === 's') {\n        event.preventDefault();\n        handleOnSave(event);\n      }\n    };\n\n    window.addEventListener('keydown', handleKeyDown);\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [handleOnSave]);\n\n\n  const isDisableField = state.pdcMode === \"\";\n  const width = window.innerWidth - 50;\n  const height = window.innerHeight - 145;\n\n\n  return (\n    <>\n      <PageHelmet title=\"PDC\" />\n      <div\n        style={{\n          width: \"100%\",\n          height: \"100%\",\n          flex: 1,\n          background: \"red\",\n          padding: \"10px\",\n          backgroundColor: \"#F8F8FF\",\n        }}\n      >\n\n        {ModalSearchBanks}\n        {UpwardPDCModal}\n        {ModalSearchPdcIDs}\n        <Box\n          sx={(theme) => ({\n            display: \"flex\",\n            alignItems: \"center\",\n            columnGap: \"20px\",\n            [theme.breakpoints.down(\"sm\")]: {\n              flexDirection: \"column\",\n              alignItems: \"flex-start\",\n              flex: 1,\n              marginBottom: \"15px\",\n            },\n          })}\n        >\n          <div\n            style={{\n              display: \"flex\",\n              alignItems: \"center\",\n              columnGap: \"5px\",\n              marginBottom: \"15px\",\n            }}\n          >\n            {isLoadingModalSearchPDC ? (\n              <LoadingButton loading={isLoadingModalSearchPDC} />\n            ) : (\n              <TextField\n                label=\"Search\"\n                size=\"small\"\n                name=\"search\"\n                value={state.search}\n                onChange={handleInputChange}\n                onKeyDown={(e) => {\n                  if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n                    e.preventDefault();\n                    openUpwardPDCModal((e.target as HTMLInputElement).value);\n                  }\n                  if (e.key === \"ArrowDown\") {\n                    e.preventDefault();\n                    const datagridview = document.querySelector(\n                      `.grid-container`\n                    ) as HTMLDivElement;\n                    datagridview.focus();\n                  }\n                }}\n                InputProps={{\n                  style: { height: \"27px\", fontSize: \"14px\" },\n                  inputRef: searchRef,\n                  className: \"manok\",\n                }}\n                sx={{\n                  width: \"400px\",\n                  height: \"27px\",\n                  \".MuiFormLabel-root\": { fontSize: \"14px\" },\n                  \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n                }}\n              />\n            )}\n            {state.pdcMode === \"\" && (\n              <Button\n                sx={{\n                  height: \"30px\",\n                  fontSize: \"11px\",\n                }}\n                variant=\"contained\"\n                startIcon={<AddIcon sx={{ width: 15, height: 15 }} />}\n                id=\"entry-header-save-button\"\n                color=\"primary\"\n                onClick={() => {\n                  dispatch({\n                    type: \"UPDATE_FIELD\",\n                    field: \"pdcMode\",\n                    value: \"add\",\n                  });\n                }}\n              >\n                New\n              </Button>\n            )}\n            <LoadingButton\n              sx={{\n                height: \"30px\",\n                fontSize: \"11px\",\n              }}\n              ref={savePDCButtonRef}\n              id=\"save-entry-header\"\n              color=\"success\"\n              variant=\"contained\"\n              type=\"submit\"\n              onClick={handleOnSave}\n              disabled={state.pdcMode === \"\"}\n              loading={loadingAddNew}\n              startIcon={<SaveIcon sx={{ width: 15, height: 15 }} />}\n            >\n              Save\n            </LoadingButton>\n            {(state.pdcMode === \"add\" || state.pdcMode === \"update\") && (\n              <Button\n                sx={{\n                  height: \"30px\",\n                  fontSize: \"11px\",\n                }}\n                variant=\"contained\"\n                startIcon={<CloseIcon sx={{ width: 15, height: 15 }} />}\n                onClick={() => {\n                  Swal.fire({\n                    title: \"Are you sure?\",\n                    text: \"You won't be able to revert this!\",\n                    icon: \"warning\",\n                    showCancelButton: true,\n                    confirmButtonColor: \"#3085d6\",\n                    cancelButtonColor: \"#d33\",\n                    confirmButtonText: \"Yes, cancel it!\",\n                  }).then((result) => {\n                    if (result.isConfirmed) {\n                      initialState.Sub_Ref_No = state.Sub_Ref_No;\n                      initialState.Ref_No = state.Sub_Ref_No;\n                      setNewStateValue(dispatch, initialState);\n                      setPdcDataRows([]);\n                      dispatch({\n                        type: \"UPDATE_FIELD\",\n                        field: \"pdcMode\",\n                        value: \"\",\n                      });\n                    }\n                  });\n                }}\n                color=\"error\"\n              >\n                Cancel\n              </Button>\n            )}\n            <Button\n              sx={{\n                height: \"30px\",\n                fontSize: \"11px\",\n              }}\n              disabled={state.pdcMode === \"\"}\n              variant=\"contained\"\n              startIcon={<AddIcon sx={{ width: 15, height: 15 }} />}\n              onClick={() => {\n                const getLastCheck_No: any = pdcDataRows[pdcDataRows.length - 1];\n                modalPdcCheckInititalState.Check_No = incrementCheckNo(\n                  getLastCheck_No?.Check_No\n                );\n                setNewStateValue(\n                  dispatchModalPdcCheck,\n                  modalPdcCheckInititalState\n                );\n                dispatch({\n                  type: \"UPDATE_FIELD\",\n                  field: \"checkMode\",\n                  value: \"\",\n                });\n                flushSync(() => {\n                  setOpenPdcInputModal(true);\n                });\n\n                _checknoRef.current?.focus();\n              }}\n              ref={addRefButton}\n            >\n              Add Check\n            </Button>\n            <div>\n              <Button\n                disabled={state.pdcMode !== \"update\"}\n                id=\"basic-button\"\n                aria-controls={open ? \"basic-menu\" : undefined}\n                aria-haspopup=\"true\"\n                aria-expanded={open ? \"true\" : undefined}\n                onClick={handleClick}\n                sx={{\n                  height: \"30px\",\n                  fontSize: \"11px\",\n                  color: \"white\",\n                  backgroundColor: grey[600],\n                  \"&:hover\": {\n                    backgroundColor: grey[700],\n                  },\n                }}\n              >\n                Print\n              </Button>\n              <Menu\n                id=\"basic-menu\"\n                anchorEl={anchorEl}\n                open={open}\n                onClose={handleClose}\n                MenuListProps={{\n                  \"aria-labelledby\": \"basic-button\",\n                }}\n              >\n                <MenuItem onClick={clickPDCReceipt}>PDC Receipt</MenuItem>\n                <MenuItem onClick={clickPDCLabeling}>PDC Labeling</MenuItem>\n              </Menu>\n            </div>\n          </div>\n        </Box>\n        <form\n          onKeyDown={(e) => {\n            if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n              e.preventDefault();\n              return;\n            }\n          }}\n          style={{\n            marginBottom: \"20px\",\n          }}\n        >\n          <Box\n            sx={(theme) => ({\n              display: \"flex\",\n              columnGap: \"15px\",\n              flexDirection: \"row\",\n              [theme.breakpoints.down(\"md\")]: {\n                flexDirection: \"column\",\n                rowGap: \"10px\",\n              },\n            })}\n          >\n            <Box\n              sx={{\n                display: \"flex\",\n                gap: \"10px\",\n                width: \"100%\",\n              }}\n            >\n              <fieldset\n                style={\n                  {\n                    flex: 1,\n                    display: \"flex\",\n                    flexDirection: \"column\",\n                    gap: \"10px\",\n                    padding: \"15px\",\n                    border: \"1px solid #cbd5e1\",\n                    borderRadius: \"5px\",\n                  } as any\n                }\n              >\n                <div\n                  style={{\n                    display: \"flex\",\n                    gap: \"10px\",\n                  }}\n                >\n                  {newRefNumberLoading ? (\n                    <LoadingButton loading={newRefNumberLoading} />\n                  ) : (\n                    <FormControl\n                      fullWidth\n                      variant=\"outlined\"\n                      size=\"small\"\n                      disabled={isDisableField}\n                      sx={{\n                        \".MuiFormLabel-root\": {\n                          fontSize: \"14px\",\n                          background: \"white\",\n                          zIndex: 99,\n                          padding: \"0 3px\",\n                        },\n                        \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n                      }}\n                    >\n                      <InputLabel htmlFor=\"pdc-id-field\">\n                        Reference No.\n                      </InputLabel>\n                      <OutlinedInput\n                        readOnly={user?.department !== \"UCSMI\"}\n                        sx={{\n                          height: \"27px\",\n                          fontSize: \"14px\",\n                          fieldset: { borderColor: \"black\" },\n                        }}\n                        disabled={isDisableField}\n                        label=\"Reference No.\"\n                        name=\"Ref_No\"\n                        value={state.Ref_No}\n                        onChange={handleInputChange}\n                        onKeyDown={(e) => {\n                          if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n                            dateRef.current?.focus()\n                          }\n                        }}\n                        id=\"pdc-id-field\"\n                        endAdornment={\n                          <InputAdornment position=\"end\">\n                            <IconButton\n                              disabled={isDisableField}\n                              aria-label=\"search-client\"\n                              color=\"secondary\"\n                              edge=\"end\"\n                            >\n                              <RestartAltIcon />\n                            </IconButton>\n                          </InputAdornment>\n                        }\n                      />\n                    </FormControl>\n                  )}\n                  <CustomDatePicker\n                    fullWidth={true}\n                    disabled={isDisableField}\n                    label=\"Date Received\"\n                    onChange={(value: any) => {\n                      dispatch({\n                        type: \"UPDATE_FIELD\",\n                        field: \"Date\",\n                        value: value,\n                      });\n                    }}\n                    inputRef={dateRef}\n                    value={new Date(state.Date)}\n                    onKeyDown={(e: any) => {\n                      if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n                        // savePDCButtonRef.current?.click();\n                        remakrsRef.current?.focus()\n                      }\n                    }}\n                    textField={{\n                      InputLabelProps: {\n                        style: {\n                          fontSize: \"14px\",\n                        },\n                      },\n                      InputProps: {\n                        style: { height: \"27px\", fontSize: \"14px\" },\n                      },\n                    }}\n                  />\n                </div>\n                <TextField\n                  InputLabelProps={{\n                    sx: {\n                      color: \"black\",\n                    },\n                  }}\n                  variant=\"outlined\"\n                  size=\"small\"\n                  label=\"Remarks\"\n                  name=\"Remarks\"\n                  value={state.Remarks}\n                  onChange={handleInputChange}\n                  disabled={isDisableField}\n                  onKeyDown={(e) => {\n                    if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n                      pnRef.current?.focus()\n                    }\n                  }}\n                  InputProps={{\n                    style: { height: \"27px\", fontSize: \"14px\" },\n                    inputRef: remakrsRef\n                  }}\n                  sx={{\n                    fieldset: { borderColor: \"black\" },\n                    \".MuiFormLabel-root\": { fontSize: \"14px\" },\n                    \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n                  }}\n                />\n              </fieldset>\n              <fieldset\n                style={\n                  {\n                    flex: 1,\n                    display: \"flex\",\n                    gap: \"10px\",\n                    padding: \"15px\",\n                    border: \"1px solid #cbd5e1\",\n                    borderRadius: \"5px\",\n                    flexDirection: \"column\",\n                  } as any\n                }\n              >\n                <div\n                  style={{ width: \"100%\", flex: 1, display: \"flex\", gap: \"10px\" }}\n                >\n                  {isLoadingModalSearchPdcIDs ? (\n                    <LoadingButton loading={isLoadingModalSearchPdcIDs} />\n                  ) : (\n                    <FormControl\n                      fullWidth\n                      variant=\"outlined\"\n                      size=\"small\"\n                      disabled={isDisableField}\n                      sx={{\n                        flex: 1,\n                        \".MuiFormLabel-root\": {\n                          fontSize: \"14px\",\n                          background: \"white\",\n                          zIndex: 99,\n                          padding: \"0 3px\",\n                        },\n                        \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n                      }}\n                    >\n                      <InputLabel htmlFor=\"label-input-id\">\n                        PN/Client ID\n                      </InputLabel>\n                      <OutlinedInput\n                        inputRef={pnRef}\n                        sx={{\n                          fieldset: { borderColor: \"black\" },\n\n                          height: \"27px\",\n                          fontSize: \"14px\",\n                        }}\n                        onKeyDown={(e) => {\n                          if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n                            openIdsButtonRef.current?.click();\n                          }\n                        }}\n                        name=\"PNo\"\n                        value={state.PNo}\n                        onChange={handleInputChange}\n                        id=\"label-input-id\"\n                        endAdornment={\n                          <InputAdornment position=\"end\">\n                            <IconButton\n                              ref={openIdsButtonRef}\n                              disabled={isDisableField}\n                              aria-label=\"search-client\"\n                              color=\"secondary\"\n                              edge=\"end\"\n                              onClick={() => openModalSearchPdcIDs(state.PNo)}\n                            >\n                              <PersonSearchIcon />\n                            </IconButton>\n                          </InputAdornment>\n                        }\n                        label=\"PN/Client ID\"\n                      />\n                    </FormControl>\n                  )}\n                  <TextField\n                    InputLabelProps={{\n                      sx: {\n                        color: \"black\",\n                      },\n                    }}\n                    variant=\"outlined\"\n                    size=\"small\"\n                    label=\"Branch\"\n                    name=\"Acronym\"\n                    value={state.Acronym}\n                    onChange={handleInputChange}\n                    disabled={isDisableField}\n                    onKeyDown={(e) => {\n                      if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n                        clientnameRef.current?.focus();\n                      }\n                    }}\n                    InputProps={{\n                      style: { height: \"27px\", fontSize: \"14px\" },\n                      readOnly: true,\n                      inputRef: branchRef\n                    }}\n                    sx={{\n                      fieldset: { borderColor: \"black\" },\n                      flex: 1,\n                      height: \"27px\",\n                      \".MuiFormLabel-root\": { fontSize: \"14px\" },\n                      \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n                    }}\n                  />\n                </div>\n                <div\n                  style={{ width: \"100%\", display: \"flex\", columnGap: \"10px\" }}\n                >\n                  <TextField\n                    InputLabelProps={{\n                      sx: {\n                        color: \"black\",\n                      },\n                    }}\n                    variant=\"outlined\"\n                    size=\"small\"\n                    label=\"Clients Name\"\n                    name=\"Name\"\n                    value={state.Name}\n                    onChange={handleInputChange}\n                    disabled={isDisableField}\n                    onKeyDown={(e) => {\n                      if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n                        savePDCButtonRef.current?.click();\n                      }\n                    }}\n                    InputProps={{\n                      style: { height: \"27px\", fontSize: \"14px\" },\n                      readOnly: true,\n                      inputRef: clientnameRef\n                    }}\n                    sx={{\n                      fieldset: { borderColor: \"black\" },\n                      flex: 1,\n                      height: \"27px\",\n                      \".MuiFormLabel-root\": { fontSize: \"14px\" },\n                      \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n                    }}\n                  />\n                  <Button\n                    sx={{\n                      height: \"27px\",\n                      fontSize: \"11px\",\n                    }}\n                    disabled={state.pdcMode === \"\"}\n                    variant=\"contained\"\n                    startIcon={<DownloadIcon sx={{ width: 15, height: 15 }} />}\n                    onClick={() => {\n                      setShowModal(true);\n                    }}\n                  >\n                    Upload Check\n                  </Button>\n                </div>\n              </fieldset>\n            </Box>\n          </Box>\n        </form>\n        <UpwardTable\n          isLoading={isLoadingSelectedSearch}\n          ref={tableRef}\n          rows={pdcDataRows}\n          column={pdcColumn}\n          width={width}\n          height={height}\n          dataReadOnly={true}\n          onSelectionChange={onSelectionChange}\n          onKeyDown={(row, key) => {\n            if (key === \"Delete\" || key === \"Backspace\") {\n              const rowSelected = row[0];\n              if (\n                (rowSelected.Deposit_Slip && rowSelected.Deposit_Slip !== \"\") ||\n                (rowSelected.DateDeposit && rowSelected.DateDeposit !== \"\") ||\n                (rowSelected.OR_No && rowSelected.OR_No !== \"\")\n              ) {\n                return Swal.fire({\n                  position: \"center\",\n                  icon: \"warning\",\n                  title: `Unable to delete. Check No ${rowSelected.Check_No} is already ${rowSelected.OR_No} issued of OR!`,\n                  showConfirmButton: false,\n                  timer: 1500,\n                });\n              }\n              Swal.fire({\n                title: \"Are you sure?\",\n                text: `You won't to delete this Check No. ${rowSelected.Check_No}`,\n                icon: \"warning\",\n                showCancelButton: true,\n                confirmButtonColor: \"#3085d6\",\n                cancelButtonColor: \"#d33\",\n                confirmButtonText: \"Yes, delete it!\",\n              }).then((result) => {\n                if (result.isConfirmed) {\n                  setTimeout(() => {\n                    const selectedIndex = tableRef.current.getSelectedRowsOnClick()\n                    setPdcDataRows((dt) => {\n                      return dt.filter(\n                        (item: any, idx: number) => idx !== selectedIndex\n                      );\n                    });\n                    tableRef.current?.resetTableSelected();\n                  }, 100)\n                }\n              });\n            }\n          }}\n          inputsearchselector=\".manok\"\n        />\n\n        <Modal\n          open={openPdcInputModal}\n          onClose={() => {\n            tableRef.current?.resetTableSelected();\n            setOpenPdcInputModal(false);\n            focusOnTable()\n          }}\n          aria-labelledby=\"modal-modal-title\"\n          aria-describedby=\"modal-modal-description\"\n        >\n          <Box\n            sx={{\n              position: \"absolute\" as \"absolute\",\n              top: \"50%\",\n              left: \"50%\",\n              transform: \"translate(-50%, -50%)\",\n              width: \"auto\",\n              bgcolor: \"background.paper\",\n              p: 4,\n            }}\n          >\n            <Typography id=\"modal-modal-title\" variant=\"h6\" component=\"h2\">\n              Check Detail\n            </Typography>\n            <br />\n            <div\n              style={{\n                display: \"flex\",\n                columnGap: \"10px\",\n              }}\n            >\n              <div\n                style={{\n                  display: \"flex\",\n                  flexDirection: \"column\",\n                  gap: \"10px\",\n                }}\n              >\n                <TextInput\n                  label={{\n                    title: \"Check No : \",\n                    style: {\n                      fontSize: \"12px\",\n                      fontWeight: \"bold\",\n                      width: \"70px\",\n                    },\n                  }}\n                  input={{\n                    type: \"text\",\n                    style: { width: \"190px\" },\n                    onKeyDown: (e) => {\n                      if (e.code === \"NumpadEnter\" || e.code === 'Enter') {\n                        _bankRef.current?.focus()\n                      }\n                    },\n                  }}\n                  inputRef={_checknoRef}\n                />\n                {isLoadingModalSearchbanks ? (\n                  <LoadingButton loading={isLoadingModalSearchbanks} />\n                ) : (\n                  <TextInput\n                    label={{\n                      title: \"Bank : \",\n                      style: {\n                        fontSize: \"12px\",\n                        fontWeight: \"bold\",\n                        width: \"70px\",\n                      },\n                    }}\n                    input={{\n                      type: \"text\",\n                      style: { width: \"190px\" },\n                      value: state.refNo,\n                      name: \"refNo\",\n                      onKeyDown: (e) => {\n                        if (e.code === \"NumpadEnter\" || e.code === 'Enter') {\n                          return openModalSearchBanks(\n                            e.currentTarget.value\n                          );\n                        }\n                      }\n                    }}\n                    icon={<AccountBalanceIcon sx={{ fontSize: \"18px\" }} />}\n                    onIconClick={(e) => {\n                      e.preventDefault()\n                      if (_bankRef.current) {\n                        openModalSearchBanks(\n                          _bankRef.current?.value\n                        );\n                      }\n                    }}\n                    inputRef={_bankRef}\n                  />\n                )}\n\n                <TextInput\n                  label={{\n                    title: \"Branch : \",\n                    style: {\n                      fontSize: \"12px\",\n                      fontWeight: \"bold\",\n                      width: \"70px\",\n                    },\n                  }}\n                  input={{\n                    type: \"text\",\n                    style: { width: \"190px\" },\n                    onKeyDown: (e) => {\n                      if (e.code === \"NumpadEnter\" || e.code === 'Enter') {\n                        _remarksRef.current?.focus()\n                      }\n                    },\n                  }}\n                  inputRef={_branchRef}\n                />\n                <TextAreaInput\n                  label={{\n                    title: \"Remarks : \",\n                    style: {\n                      fontSize: \"12px\",\n                      fontWeight: \"bold\",\n                      width: \"70px\",\n                    },\n                  }}\n                  textarea={{\n                    rows: 4,\n                    disabled: isDisableField,\n                    style: { flex: 1 },\n                    onKeyDown: (e) => {\n                      if (e.key === \"Enter\" && e.shiftKey) {\n                        return\n                      }\n                      if (e.code === \"NumpadEnter\" || e.code === 'Enter') {\n                        _chekdateRef.current?.focus()\n                      }\n                    },\n                  }}\n                  _inputRef={_remarksRef}\n                />\n              </div>\n              <div\n                style={{\n                  display: \"flex\",\n                  gap: \"10px\",\n                  flexDirection: \"column\",\n                }}\n              >\n\n                <TextInput\n                  label={{\n                    title: \"Check Dated : \",\n                    style: {\n                      fontSize: \"12px\",\n                      fontWeight: \"bold\",\n                      width: \"90px\",\n                    },\n                  }}\n                  input={{\n                    disabled: isDisableField,\n                    type: \"date\",\n                    style: { width: \"190px\" },\n                    defaultValue: new Date().toISOString().split(\"T\")[0],\n                    onKeyDown: (e) => {\n                      if (e.code === \"NumpadEnter\" || e.code === 'Enter') {\n                        _amountRef.current?.focus()\n                      }\n                    },\n                  }}\n                  inputRef={_chekdateRef}\n                />\n\n                <div style={{\n                  display: \"flex\"\n                }}>\n                  <label style={{\n                    fontSize: \"12px\",\n                    fontWeight: \"bold\",\n                    width: \"90px\",\n                  }}>Amount :</label>\n                  <NumericFormat\n                    style={{\n                      flex: 1\n                    }}\n                    value={_amountRef.current?.value ?? \"\"}\n                    getInputRef={_amountRef}\n                    allowNegative={false}\n                    thousandSeparator\n                    valueIsNumericString\n                    onKeyDown={(e) => {\n                      if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n                        let currentValue = _amountRef.current?.value as string;\n                        let numericValue = parseFloat(currentValue.replace(/,/g, ''));\n                        if (_amountRef.current) {\n                          if (isNaN(numericValue)) {\n                            _amountRef.current.value = \"0.00\";\n                          } else {\n                            if (!currentValue.includes(\".\")) {\n                              _amountRef.current.value = `${formatNumber(numericValue)}`;\n                            } else {\n                              _amountRef.current.value = formatNumber(numericValue);\n                            }\n                          }\n                        }\n                        _checkcountRef.current?.focus()\n                      }\n                    }}\n                  />\n                </div>\n                {state.checkMode !== \"update\" && (\n                  <TextInput\n                    label={{\n                      title: \"Check Count : \",\n                      style: {\n                        fontSize: \"12px\",\n                        fontWeight: \"bold\",\n                        width: \"90px\",\n                      },\n                    }}\n                    input={{\n                      disabled: isDisableField,\n                      type: \"number\",\n                      style: { width: \"190px\" },\n                      onKeyDown: (e) => {\n                        if (e.code === \"NumpadEnter\" || e.code === 'Enter') {\n                          const timeout = setTimeout(() => {\n                            checkModalSaveButton.current?.click();\n                            clearTimeout(timeout);\n                          }, 100);\n                        }\n                      },\n                    }}\n                    inputRef={_checkcountRef}\n                  />\n                )}\n              </div>\n            </div>\n            <div\n              style={{\n                display: \"flex\",\n                justifyContent: \"flex-end\",\n                width: \"100%\",\n                marginTop: \"10px\",\n              }}\n            >\n              <div style={{ display: \"flex\", gap: \"10px\" }}>\n                <Button\n                  ref={checkModalSaveButton}\n                  action={checkModalSaveButtonActionRef}\n                  color=\"primary\"\n                  variant=\"contained\"\n                  autoFocus={state.checkMode !== \"\"}\n                  onClick={() => {\n                    handleCheckDetailsSave()\n                  }}\n                  sx={{\n                    height: \"30px\",\n                    fontSize: \"11px\",\n                  }}\n                >\n                  {state.checkMode === \"update\" ? \"Update\" : \"Save\"}\n                </Button>\n                {state.checkMode === \"update\" && (\n                  <Button\n                    color=\"error\"\n                    variant=\"contained\"\n                    onClick={() => {\n                      flushSync(() => {\n                        setOpenPdcInputModal(false);\n                      });\n                      Swal.fire({\n                        title: \"Are you sure?\",\n                        text: `Delete Check ${stateModalPdcCheck.Check_No} `,\n                        icon: \"warning\",\n                        showCancelButton: true,\n                        confirmButtonColor: \"#3085d6\",\n                        cancelButtonColor: \"#d33\",\n                        confirmButtonText: \"Yes, delete it!\",\n                      }).then((result) => {\n                        if (result.isConfirmed) {\n                          setPdcDataRows((dt) => {\n                            dt = dt.filter(\n                              (items: any) =>\n                                items.CheckIdx !== stateModalPdcCheck.CheckIdx\n                            );\n                            return dt;\n                          });\n                        }\n                        focusOnTable()\n                      });\n                    }}\n                    sx={{\n                      height: \"30px\",\n                      fontSize: \"11px\",\n                    }}\n                  >\n                    Delete\n                  </Button>\n                )}\n                <Button\n                  color=\"success\"\n                  variant=\"contained\"\n                  sx={{\n                    height: \"30px\",\n                    fontSize: \"11px\",\n                  }}\n                  onClick={() => {\n                    focusOnTable()\n                    setOpenPdcInputModal(false);\n                  }}\n                >\n                  Cancel\n                </Button>\n                <IconButton\n                  style={{\n                    position: \"absolute\",\n                    top: \"10px\",\n                    right: \"10px\",\n                  }}\n                  aria-label=\"search-client\"\n                  onClick={() => {\n                    setOpenPdcInputModal(false);\n                    focusOnTable()\n                  }}\n                >\n                  <CloseIcon />\n                </IconButton>\n              </div>\n            </div>\n          </Box>\n        </Modal>\n        <div\n          style={{\n            display: showModal ? \"flex\" : \"none\",\n            position: \"absolute\",\n            top: 0,\n            bottom: 0,\n            left: 0,\n            right: 0,\n            background: \"rgba(158, 155, 157, 0.31)\",\n            zIndex: \"999\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n          }}\n        >\n          <div\n            style={{\n              width: \"90%\",\n              height: \"90%\",\n            }}\n          >\n            <div\n              style={{\n                width: \"90%\",\n                height: \"90%\",\n                overflow: \"auto\",\n                background: \"white\",\n                padding: \"20px\",\n                margin: \"auto\",\n                zIndex: \"9929\",\n                boxShadow: \" -1px 1px 13px 6px rgba(0,0,0,0.54)\",\n                position: \"relative\",\n              }}\n            >\n              <div\n                style={{\n                  height: \"100%\",\n                  width: \"100%\",\n                  position: \"relative\",\n                  display: \"flex\",\n                  justifyContent: \"center\",\n                  alignItems: \"center\",\n                  flexDirection: \"column\",\n                }}\n              >\n                <IconButton\n                  sx={{\n                    position: \"absolute\",\n                    right: \"5px\",\n                    top: \"5px\",\n                  }}\n                  onClick={() => {\n                    setShowModal(false);\n                  }}\n                >\n                  <CloseIcon />\n                </IconButton>\n                <div\n                  style={{\n                    width: \"100%\",\n                    height: \"500px\",\n                    border: isDragging ? \"5px dashed green\" : \"5px dashed grey\",\n                    overflow: \"auto\",\n                    padding: \"10px\",\n                  }}\n                  onDragEnter={handleDragEnter}\n                  onDragOver={(e) => e.preventDefault()}\n                  onDragLeave={handleDragLeave}\n                  onDrop={handleDrop}\n                >\n                  <div\n                    id=\"upload-container\"\n                    style={{\n                      width: \"100%\",\n                      height: \"100%\",\n                      display: \"flex\",\n                      gap: \"10px\",\n                      flexWrap: \"wrap\",\n                    }}\n                    onDragEnter={handleDragEnter}\n                    onDragOver={(e) => e.preventDefault()}\n                    onDragLeave={handleDragLeave}\n                    onDrop={handleDrop}\n                  >\n                    {selectedFiles.map((itm, idx) => {\n                      return (\n                        <DisplayFile\n                          key={idx}\n                          itm={itm}\n                          selectedFiles={selectedFiles}\n                          setSelectedFiles={setSelectedFiles}\n                          fileInput={fileInputRef}\n                        />\n                      );\n                    })}\n                  </div>\n                  {selectedFiles.length <= 0 && (\n                    <div\n                      style={{\n                        position: \"absolute\",\n                        top: \"50%\",\n                        left: \"50%\",\n                        transform: \"translate(-50%,-50%)\",\n                        textAlign: \"center\",\n                      }}\n                    >\n                      <DriveFolderUploadIcon\n                        sx={{ fontSize: \"20em\", color: \"#64748b\" }}\n                      />\n                    </div>\n                  )}\n                  <input\n                    ref={fileInputRef}\n                    type=\"file\"\n                    multiple\n                    style={{ display: \"none\", background: \"white\" }}\n                    id=\"input-file\"\n                    onChange={(e) => {\n                      const fileList = e.target.files as FileList;\n                      const files = Array.from(fileList);\n                      const newFiles = [...selectedFiles, ...files];\n                      if (checkFile(newFiles)) {\n                        return alert(\"file is not valid Extention!\");\n                      }\n                      setSelectedFiles(newFiles);\n                    }}\n                  />\n                </div>\n                <div\n                  style={{\n                    width: \"100%\",\n                  }}\n                >\n                  <Button\n                    fullWidth\n                    onClick={() => {\n                      const inputFile = document.getElementById(\"input-file\");\n                      inputFile?.click();\n                    }}\n                  >\n                    CLick it to upload\n                  </Button>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        {(loadingAddNew ||\n          isLoadingSelectedSearch) && <div className=\"loading-component\"><div className=\"loader\"></div></div>}\n\n      </div>\n    </>\n  );\n}\nexport function setNewStateValue(dispatch: any, obj: any) {\n  Object.entries(obj).forEach(([field, value]) => {\n    dispatch({ type: \"UPDATE_FIELD\", field, value });\n  });\n}\nexport function incrementCheckNo(Check_No: string) {\n  if (Check_No === undefined || Check_No === null || Check_No === \"\") {\n    return \"001\";\n  }\n\n  let incrementedNumber = (parseInt(Check_No) + 1).toString();\n  while (incrementedNumber.length < Check_No.length) {\n    incrementedNumber = \"0\" + incrementedNumber;\n  }\n  return incrementedNumber;\n}\n"],"names":["_ref","_ref$title","title","_jsxs","Helmet","children","_jsx","rel","type","href","concat","process","TextFormatedInput","input","label","inputRef","icon","_ref$iconPosition","iconPosition","_ref$disableIcon","disableIcon","_ref$onIconClick","onIconClick","e","_ref$onChange","onChange","id","useId","formatNumber","value","parts","split","replace","join","unformatNumber","style","display","alignItems","position","_objectSpread","htmlFor","left","zIndex","ref","height","target","test","handleChange","onBlur","includes","length","ensureTwoDecimals","handleBlur","onClick","right","top","transform","cursor","justifyContent","background","pointerEvents","TextInput","_ref2","_ref2$iconPosition","_ref2$disableIcon","_ref2$onIconClick","TextAreaInput","_ref3","textarea","_inputRef","_ref3$iconPosition","_ref3$disableIcon","_ref3$onIconClick","SelectInput","_ref4","select","selectRef","_ref4$datasource","datasource","_ref4$values","values","_ref4$display","containerStyle","className","map","itm","idx","ButtonField","_ref5","buttonRetRef","button","_ref5$tooltipText","tooltipText","_ref5$disabled","disabled","UpwardTable","forwardRef","UpwardTableRef","_pages$pageNumber","rows","column","width","dataReadOnly","_ref$onSelectionChang","onSelectionChange","_ref$isMultipleSelect","isMultipleSelect","_ref$freeze","freeze","onKeyDown","_ref$inputsearchselec","inputsearchselector","_ref$isRowSelectable","isRowSelectable","_ref$unSelectable","unSelectable","isLoading","onRightClick","_useState","useState","_useState2","_slicedToArray","pages","setPages","_useState3","_useState4","pageNumber","setPageNumber","onSelectionChangeRef","useRef","onKeyDownRef","_useState5","filter","hide","_useState6","columns","setColumns","_useState7","_useState8","hoveredColumn","setHoveredColumn","_useState9","_useState10","selectedRows","setSelectedRows","_useState11","_useState12","lastSelectedRowIndex","setLastSelectedRowIndex","_useState13","_useState14","selectedItems","setSelectedItems","divRef","_useState15","_useState16","_clickTimeout","_setClickTimeout","useEffect","_pages","arr","chunkSize","arguments","undefined","result","i","push","slice","formatArrayIntoChunks","startResize","index","preventDefault","stopPropagation","startX","clientX","startWidth","doDrag","moveEvent","newWidth","updatedColumns","_toConsumableArray","document","addEventListener","stopDrag","removeEventListener","handleMouseEnter","handleMouseLeave","useImperativeHandle","resetTableSelected","row","querySelector","scrollIntoView","block","behavior","getSelectedIndex","getSelectedRows","d","getFirstColumn","getParentElement","current","getSelectedRowsOnClick","setSelectRows","indx","key","prevIndex","_row$querySelector","newPrevIndex","focus","tagName","divInput","_row$querySelector2","flexDirection","minHeight","tabIndex","col","fontWeight","defaultValue","headerName","readOnly","onMouseDown","onMouseEnter","onMouseLeave","rowIndex","event","shiftKey","rangeStart","Math","min","rangeEnd","max","newSelectedRows","selectedItemsParams","newSelectedRowsFiltered","selectedRowData","removeNullValue","data","getIndexAndData","ctrlKey","metaKey","handleRowClick","onDoubleClick","clearTimeout","timeoutId","setTimeout","handleRowDoubleClick","handleRowKeyDown","onContextMenu","rowSelected","handleRightClick","colIndex","field","Pagination","count","useUpwardTableModal","_mutationFn","myAxios","user","link","responseDataKey","_ref$onModalClose","onModalClose","inputSearchRef","tableRef","parentRef","show","setShowModal","setRows","_useMutation","useMutation","mutationKey","mutationFn","_x","_asyncToGenerator","_regeneratorRuntime","mark","_callee","variable","wrap","_context","prev","next","get","url","queryUrlName","search","headers","Authorization","accessToken","abrupt","sent","stop","apply","onSuccess","res","mutate","throttledSearch","throttle","query","performSearch","closeModal","wait","then","_parentRef$current","Modal","open","onClose","paddingTop","paddingBottom","paddingLeft","paddingRight","marginBottom","currentTarget","datagridview","IconButton","CloseIcon","fontSize","openModal","_inputSearchRef$curre","initialState","Sub_Ref_No","Ref_No","PNo","IDNo","Date","Name","Remarks","PDC_Status","Deposit_Slip","DateDeposit","OR_No","pdcMode","checkMode","sub_account","Acronym","modalPdcCheckInititalState","CheckIdx","BankName","BankCode","Branch","Check_Date","Check_No","Check_Amnt","Check_Remarks","Check_Count","reducer","state","action","_defineProperty","pdcColumn","pdcSearchColumn","flex","pdcBanksColumn","queryKey","quertKeyPDCSearch","PostDateChecks","_queryFn","_mutationFn2","_onSuccess","_amountRef$current$va","_amountRef$current2","_React$useState","React","_React$useState2","anchorEl","setAnchorEl","Boolean","isDragging","setIsDragging","selectedFiles","setSelectedFiles","pdcDataRows","setPdcDataRows","openPdcInputModal","setOpenPdcInputModal","showModal","_useReducer","useReducer","_useReducer2","dispatch","_useReducer3","_useReducer4","stateModalPdcCheck","dispatchModalPdcCheck","_useContext","useContext","AuthContext","searchRef","fileInputRef","savePDCButtonRef","openIdsButtonRef","checkModalSaveButton","checkModalSaveButtonActionRef","_checknoRef","_bankRef","_branchRef","_remarksRef","_chekdateRef","_amountRef","_checkcountRef","_bankCode","_slipCodeRef","_slipDateRef","_checkOR","addRefButton","queryClient","useQueryClient","dateRef","remakrsRef","pnRef","branchRef","clientnameRef","_useQuery","useQuery","queryFn","refetchOnWindowFocus","response","RefNo","pdcID","newRefNumberLoading","refetchNewRefNumber","refetch","_callee2","variables","_context2","mode","post","success","invalidateQueries","setNewStateValue","Swal","message","showConfirmButton","timer","loadingAddNew","_useMutation2","_x2","_callee3","_context3","_x3","_callee5","_formatDataToDocument","_response$data$upload","uploadFiles","newObjContainerBasic","fileSelected","formatDataToDocument","_context6","_x4","_x5","_callee4","dataDocument","newObjContainer","_loop","_context5","basicItem","mainURL","blob","file","reader","_context4","uniqueFilename","fetch","File","fileName","fileType","FileReader","Promise","resolve","reject","onload","onerror","Error","name","readAsDataURL","delegateYield","alert","getSearchPDCCheck","upload","JSON","parse","all","item","mutateSelectedSearch","isLoadingSelectedSearch","_useUpwardTableModal","selectedRow","_selectedRow$0$Name","_selectedRow$0$remark","client_id","remarks","closeModalSearchPdcIDs","_addRefButton$current","click","ModalSearchPdcIDs","openModalSearchPdcIDs","isLoadingModalSearchPdcIDs","_useUpwardTableModal2","Bank_Code","Bank","closeModalSearchBanks","_branchRef$current","ModalSearchBanks","openModalSearchBanks","isLoadingModalSearchbanks","_useUpwardTableModal3","_searchRef$current","ref_no","closeUpwardPDCModal","UpwardPDCModal","openUpwardPDCModal","isLoadingModalSearchPDC","handleInputChange","_e$target","handleOnSave","useCallback","_x6","_callee6","filePromises","fileTransfer","fileToSave","stateSubmited","_context7","files","_loop2","_event$target","datakey","fileContent","_openIdsButtonRef$cur","checks","stringify","codeCondfirmationAlert","isUpdate","cb","userCodeConfirmation","saveCondfirmationAlert","isConfirm","handleDragLeave","handleDragEnter","handleDrop","_fileInputRef$current","fileList","dataTransfer","Array","from","newFiles","checkFile","num","toLocaleString","minimumFractionDigits","maximumFractionDigits","focusOnTable","_tableRef$current","handleKeyDown","window","isDisableField","innerWidth","innerHeight","_Fragment","PageHelmet","padding","backgroundColor","Box","sx","theme","columnGap","breakpoints","down","LoadingButton","loading","TextField","size","code","InputProps","Button","variant","startIcon","AddIcon","color","SaveIcon","text","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","isConfirmed","_checknoRef$current","getLastCheck_No","incrementCheckNo","flushSync","grey","Menu","MenuListProps","MenuItem","localStorage","removeItem","setItem","header","department","elementString","ReactDOMServer","textAlign","marginTop","margin","rowGap","gap","border","borderRadius","FormControl","fullWidth","InputLabel","OutlinedInput","fieldset","borderColor","_dateRef$current","endAdornment","InputAdornment","edge","RestartAltIcon","CustomDatePicker","_remakrsRef$current","textField","InputLabelProps","_pnRef$current","_openIdsButtonRef$cur2","PersonSearchIcon","_clientnameRef$curren","_savePDCButtonRef$cur","DownloadIcon","_checkModalSaveButton","parseFloat","focusVisible","_tableRef$current2","selectedIndex","dt","_tableRef$current3","bgcolor","p","Typography","component","_bankRef$current","refNo","AccountBalanceIcon","_bankRef$current2","_remarksRef$current","_chekdateRef$current","toISOString","_amountRef$current","NumericFormat","getInputRef","allowNegative","thousandSeparator","valueIsNumericString","_amountRef$current3","_checkcountRef$curren","currentValue","numericValue","isNaN","timeout","_checkModalSaveButton2","autoFocus","incrementStringNumbers","str","increment","parseInt","toString","padStart","incrementDate","dateString","currentDate","setMonth","getMonth","format","date","getTime","isValidDate","newData","handleCheckDetailsSave","items","bottom","overflow","boxShadow","onDragEnter","onDragOver","onDragLeave","onDrop","flexWrap","DisplayFile","fileInput","DriveFolderUploadIcon","multiple","inputFile","getElementById","obj","Object","entries","forEach","incrementedNumber"],"sourceRoot":""}