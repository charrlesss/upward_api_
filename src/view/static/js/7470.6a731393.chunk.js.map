{"version":3,"file":"static/js/7470.6a731393.chunk.js","mappings":"4QA2BO,SAASA,EAAiBC,GASL,IAR1BC,EAAKD,EAALC,MACAC,EAAKF,EAALE,MACAC,EAAQH,EAARG,SACAC,EAAIJ,EAAJI,KAAIC,EAAAL,EACJM,aAAAA,OAAY,IAAAD,EAAG,MAAKA,EAAAE,EAAAP,EACpBQ,YAAAA,OAAW,IAAAD,GAAQA,EAAAE,EAAAT,EACnBU,YAAAA,OAAW,IAAAD,EAAG,SAACE,GAAQ,EAACF,EAAAG,EAAAZ,EACxBa,SAAAA,OAAQ,IAAAD,EAAG,SAACD,GAAQ,EAACC,EAGfE,GAAKC,EAAAA,EAAAA,SAILC,EAAe,SAACC,GACpB,IAAKA,EAAO,OAAOA,EAGnB,IAAMC,EAAQD,EAAME,MAAM,KAM1B,OAHAD,EAAM,GAAKA,EAAM,GAAGE,QAAQ,wBAAyB,KAG9CF,EAAMG,KAAK,IACpB,EAGMC,EAAiB,SAACL,GACtB,OAAOA,EAAMG,QAAQ,KAAM,GAC7B,EAyDA,OACEG,EAAAA,EAAAA,MAAA,OACEC,MAAO,CACLC,QAAS,OACTC,WAAY,SACZC,SAAU,YACVC,SAAA,EAEFC,EAAAA,EAAAA,KAAA,SAAAC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAW5B,GAAK,IAAE6B,QAASjB,EAAGc,SAC3B1B,EAAM8B,SAER5B,GAAyB,UAAjBE,IACPuB,EAAAA,EAAAA,KAAA,OAAKL,MAAO,CAAEG,SAAU,WAAYM,KAAM,MAAOC,OAAQ,GAAIN,SAC1DxB,KAGLyB,EAAAA,EAAAA,KAAA,SAAAC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CACEK,IAAKhC,EACLW,GAAIA,GACAb,GAAK,IACTmC,KAAK,OACLZ,OAAKM,EAAAA,EAAAA,GAAA,CACHO,OAAQ,QACLpC,EAAMuB,OAEXX,SAAU,SAACF,IA1DI,SAACA,GACpB,IAAIM,EAAQN,EAAE2B,OAAOrB,MAGrBA,EAAQK,EAAeL,IAST,MAHdA,EAAQK,EAAeL,KAHT,2BAMYsB,KAAKtB,MAI7BN,EAAE2B,OAAOrB,MAAQD,EAAaC,GAGlC,CAuCQuB,CAAa7B,GACbE,EAASF,EACX,EACA8B,OAAQ,SAAC9B,IAxCI,SAACA,GAClB,IAAIM,EAAQK,EAAeX,EAAE2B,OAAOrB,OAGpCA,EA/CwB,SAACA,GAEzB,OAAKA,EAAMyB,SAAS,KAWI,IADVzB,EAAME,MAAM,KAChB,GAAGwB,OACJ1B,EAAQ,IAIVA,EAfQ,KAAVA,EACQ,OAGFA,EAAQ,KAYrB,CA4BU2B,CAAkB3B,GAI1BN,EAAE2B,OAAOrB,MAAQD,EAAaC,EAChC,CAgCQ4B,CAAWlC,EACb,KAGDP,GAAyB,QAAjBE,IACPuB,EAAAA,EAAAA,KAAA,OAAKiB,QAASpC,EACZc,MAAO,CACLG,SAAU,WACVoB,MAAO,MACPC,IAAK,MACLC,UAAW,mBACXf,OAAQ,EACRgB,OAAQ1C,EAAc,OAAS,UAC/BiB,QAAS,OACTC,WAAY,SACZyB,eAAgB,SAChBC,WAAY,QACZC,cAAe7C,EAAc,OAAS,QACtCoB,SACDxB,MAOX,CAGO,SAASkD,EAASC,GAQL,IAPlBtD,EAAKsD,EAALtD,MACAC,EAAKqD,EAALrD,MACAC,EAAQoD,EAARpD,SACAC,EAAImD,EAAJnD,KAAIoD,EAAAD,EACJjD,aAAAA,OAAY,IAAAkD,EAAG,MAAKA,EAAAC,EAAAF,EACpB/C,YAAAA,OAAW,IAAAiD,GAAQA,EAAAC,EAAAH,EACnB7C,YAAAA,OAAW,IAAAgD,EAAG,SAAC/C,GAAQ,EAAC+C,EAElB5C,GAAKC,EAAAA,EAAAA,SAEX,OACEQ,EAAAA,EAAAA,MAAA,OACEC,MAAO,CACLC,QAAS,OACTC,WAAY,SACZC,SAAU,YACVC,SAAA,EAEFC,EAAAA,EAAAA,KAAA,SAAAC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAW5B,GAAK,IAAE6B,QAASjB,EAAGc,SAC3B1B,EAAM8B,SAER5B,GAAyB,UAAjBE,IACPuB,EAAAA,EAAAA,KAAA,OAAKL,MAAO,CAAEG,SAAU,WAAYM,KAAM,MAAOC,OAAQ,GAAIN,SAC1DxB,KAGLyB,EAAAA,EAAAA,KAAA,SAAAC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CACEK,IAAKhC,EACLW,GAAIA,GACAb,GAAK,IACTuB,OAAKM,EAAAA,EAAAA,GAAA,CACHO,OAAQ,QACLpC,EAAMuB,UAGZpB,GAAyB,QAAjBE,IACPuB,EAAAA,EAAAA,KAAA,OAAKiB,QAASpC,EACZc,MAAO,CACLG,SAAU,WACVoB,MAAO,MACPC,IAAK,MACLC,UAAW,mBACXf,OAAQ,EACRgB,OAAQ1C,EAAc,OAAS,UAC/BiB,QAAS,OACTC,WAAY,SACZyB,eAAgB,SAChBC,WAAY,QACZC,cAAe7C,EAAc,OAAS,QACtCoB,SACDxB,MAOX,CAIO,SAASuD,EAAaC,GAQX,IAPhBC,EAAQD,EAARC,SACA3D,EAAK0D,EAAL1D,MACA4D,EAASF,EAATE,UACA1D,EAAIwD,EAAJxD,KAAI2D,EAAAH,EACJtD,aAAAA,OAAY,IAAAyD,EAAG,MAAKA,EAAAC,EAAAJ,EACpBpD,YAAAA,OAAW,IAAAwD,GAAQA,EAAAC,EAAAL,EACnBlD,YAAAA,OAAW,IAAAuD,EAAG,SAACtD,GAAQ,EAACsD,EAElBnD,GAAKC,EAAAA,EAAAA,SAEX,OACEQ,EAAAA,EAAAA,MAAA,OACEC,MAAO,CACLC,QAAS,OACTC,WAAY,SACZC,SAAU,YACVC,SAAA,EAEFC,EAAAA,EAAAA,KAAA,SAAAC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAW5B,GAAK,IAAE6B,QAASjB,EAAGc,SAC3B1B,EAAM8B,SAER5B,GAAyB,UAAjBE,IACPuB,EAAAA,EAAAA,KAAA,OAAKL,MAAO,CAAEG,SAAU,WAAYM,KAAM,MAAOC,OAAQ,GAAIN,SAC1DxB,KAGLyB,EAAAA,EAAAA,KAAA,YAAAC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CACEK,IAAK2B,EACLhD,GAAIA,GACA+C,GAAQ,IACZrC,OAAKM,EAAAA,EAAAA,GAAA,CACHO,OAAQ,QACLwB,EAASrC,UAIfpB,GAAyB,QAAjBE,IACPuB,EAAAA,EAAAA,KAAA,OAAKiB,QAASpC,EACZc,MAAO,CACLG,SAAU,WACVoB,MAAO,MACPC,IAAK,MACLC,UAAW,mBACXf,OAAQ,EACRgB,OAAQ1C,EAAc,OAAS,UAC/BiB,QAAS,OACTC,WAAY,SACZyB,eAAgB,SAChBC,WAAY,QACZC,cAAe7C,EAAc,OAAS,QACtCoB,SACDxB,MAOX,CAGO,SAAS8D,EAAWC,GAevB,IAdFC,EAAMD,EAANC,OACAlE,EAAKiE,EAALjE,MACAmE,EAASF,EAATE,UAASC,EAAAH,EACTI,WAAAA,OAAU,IAAAD,EAAG,GAAEA,EAAAE,EAAAL,EACfM,OAAAA,OAAM,IAAAD,EAAG,GAAEA,EAAAE,EAAAP,EACX1C,QAAAA,OAAO,IAAAiD,EAAG,GAAEA,EAUN5D,GAAKC,EAAAA,EAAAA,SACX,OACEQ,EAAAA,EAAAA,MAAA,OACEC,MAAO,CACLC,QAAS,OACTY,OAAQ,OACRX,WAAY,UACZE,SAAA,EAEFC,EAAAA,EAAAA,KAAA,SAAAC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAW5B,GAAK,IAAE6B,QAASjB,EAAGc,SAC3B1B,EAAM8B,UAETH,EAAAA,EAAAA,KAAA,UAAAC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACMsC,GAAM,IACVjC,IAAKkC,EACLM,UAAS,UAAAC,OAAYR,EAAOO,WAC5BnD,OAAKM,EAAAA,EAAAA,GAAA,CACHO,OAAQ,QACL+B,EAAO5C,OACVI,SAED2C,EAAWM,KAAI,SAACC,EAAKC,GACpB,OACElD,EAAAA,EAAAA,KAAA,UAAkBZ,MAAO6D,EAAIL,GAAQ7C,SAClCkD,EAAIrD,IADMsD,EAIjB,SAIR,CAEO,SAASC,EAAWC,GAYvB,IAXFC,EAAYD,EAAZC,aACAC,EAAMF,EAANE,OAAMC,EAAAH,EACNI,YAAAA,OAAW,IAAAD,EAAG,GAAEA,EAChBxD,EAAQqD,EAARrD,SAAQ0D,EAAAL,EACRM,SAAAA,OAAQ,IAAAD,GAAQA,EAQhB,OACE/D,EAAAA,EAAAA,MAAA,OAAKoD,UAAU,UAAS/C,SAAA,EACtBC,EAAAA,EAAAA,KAAA,UAAAC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CACEyD,SAAUA,GACNJ,GAAM,IACVhD,IAAK+C,EACL1D,OAAKM,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAOqD,EAAO3D,OAAK,IAAE4B,WAAamC,EAA2B,UAAhB,gBAClDZ,UAAU,iBAAgB/C,SAEzBA,MAED2D,IAAY1D,EAAAA,EAAAA,KAAA,QAAM8C,UAAU,eAAc/C,SAAEyD,MAGpD,C,mHCxVMG,GAAcC,EAAAA,EAAAA,aAClB,SAAAzF,EAiBE0F,GACI,IAADC,EAhBDC,EAAI5F,EAAJ4F,KACAC,EAAM7F,EAAN6F,OACAC,EAAK9F,EAAL8F,MACAzD,EAAMrC,EAANqC,OACA0D,EAAY/F,EAAZ+F,aAAYC,EAAAhG,EACZiG,kBAAAA,OAAiB,IAAAD,EAAG,WAAQ,EAACA,EAAAE,EAAAlG,EAC7BmG,iBAAAA,OAAgB,IAAAD,GAAQA,EAAAE,EAAApG,EACxBqG,OAAAA,OAAM,IAAAD,GAAQA,EACdE,EAAStG,EAATsG,UAASC,EAAAvG,EACTwG,oBAAAA,OAAmB,IAAAD,EAAG,+BAA8BA,EAAAE,EAAAzG,EACpD0G,gBAAAA,OAAe,IAAAD,GAAOA,EAAAE,EAAA3G,EACtB4G,aAAAA,OAAY,IAAAD,EAAG,kBAAM,CAAK,EAAAA,EAC1BE,EAAS7G,EAAT6G,UACAC,EAAY9G,EAAZ8G,aAIFC,GAA0BC,EAAAA,EAAAA,UAAqB,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA3CI,EAAKF,EAAA,GAAEG,EAAQH,EAAA,GACtBI,GAAoCL,EAAAA,EAAAA,UAAS,GAAEM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAAxCE,EAAUD,EAAA,GAAEE,EAAaF,EAAA,GAC1BG,GAAuBC,EAAAA,EAAAA,QAAOzB,GAC9B0B,GAAeD,EAAAA,EAAAA,QAAOpB,GAC5BsB,GAA8BZ,EAAAA,EAAAA,UAASnB,EAAOgC,QAAO,SAAC/C,GAAG,OAAMA,EAAIgD,IAAI,KAAEC,GAAAb,EAAAA,EAAAA,GAAAU,EAAA,GAAlEI,EAAOD,EAAA,GAAEE,EAAUF,EAAA,GAC1BG,GAA0ClB,EAAAA,EAAAA,UAAS,MAAKmB,GAAAjB,EAAAA,EAAAA,GAAAgB,EAAA,GAAjDE,EAAaD,EAAA,GAAEE,EAAgBF,EAAA,GACtCG,GAAwCtB,EAAAA,EAAAA,UAAwB,CAAC,IAAGuB,GAAArB,EAAAA,EAAAA,GAAAoB,EAAA,GAA7DE,EAAYD,EAAA,GAAEE,EAAeF,EAAA,GACpCG,GAAwD1B,EAAAA,EAAAA,UAAS,GAAE2B,GAAAzB,EAAAA,EAAAA,GAAAwB,EAAA,GAA5DE,EAAoBD,EAAA,GAAEE,EAAuBF,EAAA,GACpDG,IAA0C9B,EAAAA,EAAAA,UAAwB,IAAG+B,IAAA7B,EAAAA,EAAAA,GAAA4B,GAAA,GAA9DE,GAAaD,GAAA,GAAEE,GAAgBF,GAAA,GAChCG,IAASxB,EAAAA,EAAAA,QAAuB,MACtCyB,IAA0CnC,EAAAA,EAAAA,UAAS,MAAKoC,IAAAlC,EAAAA,EAAAA,GAAAiC,GAAA,GAAjDE,GAAaD,GAAA,GAAEE,GAAgBF,GAAA,IAGtCG,EAAAA,EAAAA,YAAU,WACR,IAAMC,EA8aZ,SAA+BC,GAG7B,IAHgE,IAAlBC,EAASC,UAAAhH,OAAA,QAAAiH,IAAAD,UAAA,GAAAA,UAAA,GAAG,IACtDE,EAAS,GAEJC,EAAI,EAAGA,EAAIL,EAAI9G,OAAQmH,GAAKJ,EAEnCG,EAAOE,KAAKN,EAAIO,MAAMF,EAAGA,EAAIJ,IAE/B,OAAOG,CACT,CAtbqBI,CAAsBrE,EAAM,KAC3CwB,EAASoC,EACX,GAAG,CAAC5D,IAEJ,IAAMsE,GAAc,SAACC,EAAYxJ,GAC/BA,EAAEyJ,iBACFzJ,EAAE0J,kBAEF,IAAMC,EAAS3J,EAAE4J,QACXC,EAAaxC,EAAQmC,GAAOrE,MAE5B2E,EAAS,SAACC,GACd,IAAMC,EAAWH,GAAcE,EAAUH,QAAUD,GAC7CM,GAAcC,EAAAA,EAAAA,GAAO7C,GAC3B4C,EAAeT,GAAOrE,MAAQ6E,EAAW,GAAKA,EAAW,GACzD1C,EAAW2C,EACb,EAOAE,SAASC,iBAAiB,YAAaN,GACvCK,SAASC,iBAAiB,WANT,SAAXC,IACJF,SAASG,oBAAoB,YAAaR,GAC1CK,SAASG,oBAAoB,UAAWD,EAC1C,GAIF,EACME,GAAmB,SAACf,GACxB9B,EAAiB8B,EACnB,EACMgB,GAAmB,WACvB9C,EAAiB,KACnB,GAuMA+C,EAAAA,EAAAA,qBAAoB1F,GAAgB,iBAAO,CACzC2F,mBAAoB,WAIlB,GAHA5C,EAAgB,CAAC,IACjBI,EAAwB,GACxBI,GAAiB,IACbrD,EAAKjD,OAAS,EAAG,CACnB,IAAM2I,EAAMR,SAASS,cAAc,QAAD3G,OAAS,IACxC,OAAH0G,QAAG,IAAHA,GAAAA,EAAKE,eAAe,CAAEC,MAAO,MAAOC,SAAU,UAChD,CACF,EACAC,iBAAkB,WAChB,OAAO3C,GAAc,EACvB,EACA4C,gBAAiB,WACf,OAAOhG,EAAKiC,QAAO,SAACgE,EAAG9G,GAAG,OAAKiE,GAActG,SAASqC,EAAI,GAC5D,EACA+G,eAAgB,WACd,OAAOlG,EAAKiC,QAAO,SAACgE,EAAG9G,GAAG,OAAKiE,GAActG,SAASqC,EAAI,GAC5D,EACAgH,iBAAkB,WAChB,OAAO7C,GAAO8C,OAChB,EACAC,uBAAwB,WACtB,OAAOzD,EAAa,EACtB,EACA0D,cAAe,SAACC,GACd,OAAOlD,GAAiB,CAACkD,GAC3B,EACD,IAYD,OACEtK,EAAAA,EAAAA,KAAA,OACEL,MAAO,CACLC,QAAS,OACT0B,eAAgB,UAElBmD,UArIkB,SAAC3F,GAErB,GAAc,cAAVA,EAAEyL,IACJzL,EAAEyJ,iBACF3B,GAAgB,SAAC4D,GAAoB,IAADC,EAClC,GAAwC,OAApCD,EAAUA,EAAU1J,OAAS,GAAa,MAAO,CAAC,GACtD,GAAI0J,EAAUA,EAAU1J,OAAS,IAAMiD,EAAKjD,OAAS,EACnD,MAAO,CAACiD,EAAKjD,OAAS,GAExB,IAAM4J,EAAeF,EAAUA,EAAU1J,OAAS,GAAK,EACjD2I,EAAMR,SAASS,cAAc,QAAD3G,OAAS2H,IAI3C,OAHG,OAAHjB,QAAG,IAAHA,GAA2B,QAAxBgB,EAAHhB,EAAKC,cAAc,gBAAQ,IAAAe,GAA3BA,EAA6BE,QAE1B,OAAHlB,QAAG,IAAHA,GAAAA,EAAKE,eAAe,CAAEC,MAAO,MAAOC,SAAU,WACvC,CAACa,EACV,SACK,GAAc,YAAV5L,EAAEyL,IAAmB,CAG9B,GAFAzL,EAAEyJ,iBAE4C,IAA1C5B,EAAaA,EAAa7F,OAAS,GAAU,CAC/C,IAAM1C,EAAQ6K,SAASS,cACrB/E,GAEF,GAAIvG,GAA2B,UAAlBA,EAAMwM,QACZ,OAALxM,QAAK,IAALA,GAAAA,EAAOuM,aACF,GAAIvM,GAA2B,QAAlBA,EAAMwM,QAAmB,CAC3C,IAAMC,EAAW5B,SAASS,cAAc,GAAD3G,OAClC4B,EAAmB,WAGhB,OAARkG,QAAQ,IAARA,GAAAA,EAAUF,OACZ,CACF,CAEA/D,GAAgB,SAAC4D,GAAoB,IAADM,EAClC,GAAwC,IAApCN,EAAUA,EAAU1J,OAAS,GAAU,MAAO,CAAC,GACnD,IAAM4J,EAAeF,EAAUA,EAAU1J,OAAS,GAAK,EACjD2I,EAAMR,SAASS,cAAc,QAAD3G,OAAS2H,IAI3C,OAFG,OAAHjB,QAAG,IAAHA,GAAAA,EAAKE,eAAe,CAAEC,MAAO,MAAOC,SAAU,WAC3C,OAAHJ,QAAG,IAAHA,GAA2B,QAAxBqB,EAAHrB,EAAKC,cAAc,gBAAQ,IAAAoB,GAA3BA,EAA6BH,QACtB,CAACD,EACV,GACF,CAEF,EAwF6B3K,UAEzBL,EAAAA,EAAAA,MAAA,OAAAK,SAAA,EACEL,EAAAA,EAAAA,MAAA,OAAKoD,UAAU,oBAAmB/C,SAAA,EAChCC,EAAAA,EAAAA,KAAA,OACEL,MAAO,CACLC,QAAS,OACTmL,cAAe,SACf9G,MAAM,GAADlB,OAAKkB,EAAQ,GAAE,cACpBzD,OAAO,GAADuC,OAAKvC,EAAS,IAAG,MACvBwK,UAAW,SAEblI,UAAU,cAAa/C,UAEvBC,EAAAA,EAAAA,KAAA,OAAK8C,UAAU,cAAa/C,UAC1BL,EAAAA,EAAAA,MAAA,OAAKY,IAAK+G,GAAQvE,UAAS,kBAAqBmI,UAAW,EAAElL,SAAA,EAC3DC,EAAAA,EAAAA,KAAA,OACE8C,UAAU,uBACVnD,MAAO,CACLG,SAAU,SACVO,OAAQ,KACRc,IAAK,OACLI,WAAY,SACZxB,SAEDoG,EAAQnD,KAAI,SAACkI,EAAU5C,GAAa,OACnC5I,EAAAA,EAAAA,MAAA,OAEEoD,UAAS,yBAAAC,OAA2BwD,IAAkB+B,EAAK,mBAAwB,IAEnF3I,MAAO,CAAEsE,MAAOiH,EAAIjH,MAAOzD,OAAQ,QAAUT,SAAA,EAE7CC,EAAAA,EAAAA,KAAA,SACEL,MAAO,CAAEwL,WAAY,QACrBC,aAAcF,EAAIG,WAClBC,UAAQ,EACRtM,SAAU,SAACF,GAAQ,KAErBkB,EAAAA,EAAAA,KAAA,OACE8C,UAAU,gBACVyI,YAAa,SAACzM,GAAC,OAAKuJ,GAAYC,EAAOxJ,EAAE,EACzC0M,aAAc,SAAC1M,GACbA,EAAEyJ,iBACFc,GAAiBf,EACnB,EACAmD,aAAc,SAAC3M,GACbA,EAAEyJ,iBACFe,IACF,MArBGhB,EAuBD,MAGQ,QADZxE,EACLwB,EAAMI,UAAW,IAAA5B,OAAA,EAAjBA,EAAmBd,KAAI,SAACyG,EAAUiC,GAAa,OAC9C1L,EAAAA,EAAAA,KAAA,OACE8C,UAAS,gBAAAC,OAAkB2I,GAE3BzK,QAAS,SAACnC,GAAC,OA7SN,SACrB4M,EACAC,GAiBA,GAAKrH,EAKH,GAAIqH,EAAMC,UAAqC,OAAzB7E,EAA+B,CAKnD,IAHA,IAAM8E,EAAaC,KAAKC,IAAIhF,EAAsB2E,GAC5CM,EAAWF,KAAKG,IAAIlF,EAAsB2E,GAC1CQ,EAAiC,GAC9BjE,EAAI4D,EAAY5D,GAAK+D,EAAU/D,IACjCtB,EAAa9F,SAASoH,IACzBiE,EAAgBhE,KAAKD,GAIzB,IAAIkE,EAAkC,GAAApJ,QAAAiG,EAAAA,EAAAA,GACjC7B,IACA+E,GAGLtF,EAAgB,GAAD7D,QAAAiG,EAAAA,EAAAA,GAAKrC,GAAiBuF,IACrC,IAGQE,EAxCZ,SAAyBC,GACvB,IAMMC,EANsBD,EAAgBrJ,KAAI,SAACgH,EAAG9G,GAClD,OAAK6B,EAAaiF,GAGX,KAFE,CAAE9G,IAAAA,EAAKqJ,KAAMvC,EAGxB,IAC4ChE,QAAO,SAACgE,GAAC,OAAW,OAANA,CAAU,IAC9DuC,EAAOD,EAAgBtJ,KAAI,SAACC,GAAQ,OAAKA,EAAIsJ,IAAI,IAIvD,MAAO,CAAEH,wBAHuBE,EAAgBtJ,KAC9C,SAACC,GAAQ,OAAKA,EAAIC,GAAG,IAEWqJ,KAAAA,EACpC,CA4BMC,CAJsBzI,EAAKiC,QAAO,SAACgE,EAAG9G,GAAG,OACzCiJ,EAAoBtL,SAASqC,EAAI,KAE3BkJ,wBAGRhF,GAAiBgF,EAEnB,MAAO,GAAIT,EAAMc,SAAWd,EAAMe,QAEhC,GAAI/F,EAAa9F,SAAS6K,KAAclH,EAAQ,CAC9CoC,EAAgBD,EAAaX,QAAO,SAACiC,GAAC,OAAKA,IAAMyD,CAAQ,KACzDtE,IAAiB,SAAC4C,GAEhB,OADAA,EAAIA,EAAEhE,QAAO,SAACiC,GAAC,OAAKA,IAAMyD,CAAQ,IAC3B1B,CACT,IACA,IAAImC,EAAqChF,GAAcnB,QACrD,SAACiC,GAAC,OAAKA,IAAMyD,CAAQ,IAGvBtE,GAAiB+E,EAEnB,KAAO,CACLvF,EAAgB,GAAD7D,QAAAiG,EAAAA,EAAAA,GAAKrC,GAAY,CAAE+E,KAClCtE,IAAiB,SAAC4C,GAEhB,OADAA,EAAE9B,KAAKwD,GACA1B,CACT,IACA,IAAImC,EAAkC,GAAApJ,QAAAiG,EAAAA,EAAAA,GACjC7B,IAAa,CAChBuE,IAGFtE,GAAiB+E,EAEnB,MAGAvF,EAAgB,CAAC8E,SA1DnB9E,EAAgB,CAAC8E,IA6DnB1E,EAAwB0E,EAC1B,CA0NkCiB,CAAejB,EAAU5M,EAAE,EAC3C8N,cAAe,SAAC9N,GAGV0I,KACFqF,aAAarF,IACbC,GAAiB,OAGnB,IAAMqF,EAAiBC,YAAW,YAlOzB,SAC3BrB,EACAC,GAEA,IAAMlC,EAAM1F,EAAK2H,GACjB,IAAI3G,EAAa0E,IACZ5E,EAAL,CAGA,IAAIsH,EAAqC,GAQzC,GANEA,EADE7H,EACiB,GAAAvB,QAAAiG,EAAAA,EAAAA,GAAO7B,KAAa6B,EAAAA,EAAAA,GAAKrC,IAEtB,CAAC+E,GAIrBvE,GAActG,SAAS6K,KAAclH,EAIvC,OAHA2H,EAAsBhF,GAAcnB,QAAO,SAACiC,GAAC,OAAKA,IAAMyD,CAAQ,IAChEtE,GAAiB+E,QACjBvG,EAAqBuE,QAAQ,GAAIuB,GAInCtE,GAAiB+E,GACjBvG,EAAqBuE,QAAQ,CAACV,GAAMiC,EAnBR,CAoB9B,CAyMsBsB,CAAqBtB,EACvB,GAAG,KAEHjE,GAAiBqF,EAInB,EACArI,UAAW,SAAC3F,GAIN0I,KACFqF,aAAarF,IACbC,GAAiB,OAGnB,IAAMqF,EAAiBC,YAAW,YA3K7B,SAACjO,GAGxB,GAFAA,EAAE0J,kBAEY,UAAV1J,EAAEyL,KAA6B,gBAAVzL,EAAEyL,IAAuB,CAEhD,GADAzL,EAAEyJ,kBACG1D,EAAiB,OAEtB,IAAIsH,EAAqC,GACnCT,EAAW/E,EAAaA,EAAa7F,OAAS,GAElDqL,EADE7H,EACiB,GAAAvB,QAAAiG,EAAAA,EAAAA,GAAO7B,KAAa6B,EAAAA,EAAAA,GAAKrC,IAEtB,CAAC+E,GAEzB,IAAMjC,EAAM1F,EAAKoI,EAAoBA,EAAoBrL,OAAS,IAClE,GAAIiE,EAAa0E,GACf,OAGF,GAAItC,GAActG,SAAS6K,KAAclH,EAIvC,OAHA2H,EAAsBhF,GAAcnB,QAAO,SAACiC,GAAC,OAAKA,IAAMyD,CAAQ,IAChEtE,GAAiB+E,QACjBvG,EAAqBuE,QAAQ,GAAIuB,GAInCtE,GAAiB+E,GACjBvG,EAAqBuE,QAAQ,CAACV,GAAMiC,EACtC,MAAO,GAAc,WAAV5M,EAAEyL,KAA8B,cAAVzL,EAAEyL,IAAqB,CACtD,IAAK1F,EAAiB,OACtB,IAAM6G,EAAW/E,EAAaA,EAAa7F,OAAS,GAE9CuL,EAAkBtI,EAAKiC,QAAO,SAACgE,EAAG9G,GAAG,OACzCyD,EAAa9F,SAASqC,EAAI,IAGZ,OAAZ4C,QAAY,IAAZA,GAAAA,EAAcqE,UACJ,OAAZrE,QAAY,IAAZA,GAAAA,EAAcqE,QAAQkC,EAAiBvN,EAAEyL,IAAKmB,GAElD,CACF,CAoIsBuB,CAAiBnO,EACnB,GAAG,KAEH2I,GAAiBqF,EAGnB,EACAI,cAAe,SAACpO,GAAC,OA5GV,SAAC6M,EAAYD,GACpCC,EAAMpD,iBACN,IAAM4E,EAAcpJ,EAAK2H,GACrBzG,GACFA,EAAakI,EAAaxB,EAE9B,CAsGwCyB,CAAiBtO,EAAG4M,EAAS,EAAC3L,SAEnDoG,EAAQnD,KAAI,SAACkI,EAAUmC,GAAgB,OACtC3N,EAAAA,EAAAA,MAAA,OAEEC,MAAO,CAAEsE,MAAOiH,EAAIjH,OACpBnB,UAAS,aAAAC,OAAewD,IAAkB8G,EAAQ,mBAAwB,GAAE,SAAAtK,OAAQ2I,EAAQ,SAAA3I,OAAQsK,GAAWtN,SAAA,EAE/GC,EAAAA,EAAAA,KAAA,SACEZ,MAAOqK,EAAIyB,EAAIoC,OACftO,SAAU,SAACF,GAAQ,EACnBwM,SAAUpH,EACVpB,UAAS,GAAAC,OAAK4D,EAAa9F,SAAS6K,GAChC,eACA,GAAE,KAAA3I,OACAoE,GAActG,SAAS6K,GACvB,iBACA,GAAE,gCAAA3I,OAEK,WAAbmI,EAAI3K,KAAoB,SAAW,OAAM,mCAG3CP,EAAAA,EAAAA,KAAA,OACE8C,UAAU,gBACVyI,YAAa,SAACzM,GACZA,EAAEyJ,iBACFF,GAAYgF,EAAUvO,EACxB,EACA0M,aAAc,SAAC1M,GACbA,EAAEyJ,iBACFc,GAAiBgE,EACnB,EACA5B,aAAc,SAAC3M,GACbA,EAAEyJ,iBACFe,IACF,MA/BG+D,EAiCD,KAzEH3B,EA2ED,WAMb1G,IAAahF,EAAAA,EAAAA,KAAA,OAAK8C,UAAU,gBAAe/C,UAC1CC,EAAAA,EAAAA,KAAA,OAAK8C,UAAU,iBAGnBpD,EAAAA,EAAAA,MAAA,OAAKoD,UAAU,qBAAoB/C,SAAA,EACjCL,EAAAA,EAAAA,MAAA,OAAAK,SAAA,CAAK,aAAe,OAAJgE,QAAI,IAAJA,OAAI,EAAJA,EAAMjD,WACtBd,EAAAA,EAAAA,KAAA,OAAAD,UAAKC,EAAAA,EAAAA,KAACuN,EAAAA,EAAU,CAACC,MAAOlI,EAAMxE,OAAQ9B,SAAU,SAACF,EAAGM,GAClDuG,EAAcvG,EAAQ,EACxB,aAMV,G,mSC3dWqO,EAAU,SAACC,EAAYC,GAClC,MACO,iBADCA,EAAOpN,MAEXN,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACKyN,GAAK,IAAAE,EAAAA,EAAAA,GAAA,GACPD,EAAOL,MAAQK,EAAOvO,QAGlBsO,CAEb,EACaG,EAAqB,CAChC,CAAEP,MAAO,YAAajC,WAAY,eAAgBpH,MAAO,KACzD,CAAEqJ,MAAO,aAAcjC,WAAY,6BAA8BpH,MAAO,KACxE,CAAEqJ,MAAO,QAASjC,WAAY,aAAcpH,MAAO,KACnD,CAAEqJ,MAAO,YAAajC,WAAY,eAAgBpH,MAAO,KACzD,CAAEqJ,MAAO,UAAWjC,WAAY,UAAWpH,MAAO,KAClD,CAAEqJ,MAAO,WAAYjC,WAAY,gBAAiBpH,MAAO,KACzD,CAAEqJ,MAAO,OAAQjC,WAAY,SAAUpH,MAAO,KAC9C,CAAEqJ,MAAO,WAAYjC,WAAY,aAAcpH,MAAO,MAElD6J,EAAW,gBAEF,SAASC,IAAgB,IAADC,EAAAC,EAAAC,EAAAC,EAC/BC,GAAWvI,EAAAA,EAAAA,QAAY,MACvBwI,GAAiBxI,EAAAA,EAAAA,QAAyB,MAC1CyI,GAAezI,EAAAA,EAAAA,QAAyB,MACxC0I,GAAgC1I,EAAAA,EAAAA,QAA0B,MAC1D2I,GAAsB3I,EAAAA,EAAAA,QAA0B,MAChD4I,GAAe5I,EAAAA,EAAAA,QAAyB,MACxC6I,GAAoB7I,EAAAA,EAAAA,QAAyB,MAC7C8I,GAA6B9I,EAAAA,EAAAA,QAAyB,MACtD+I,GAAqB/I,EAAAA,EAAAA,QAAyB,MAC9CgJ,GAAuBhJ,EAAAA,EAAAA,QAAyB,MAEtDiJ,GAA0BC,EAAAA,EAAAA,YAAWC,EAAAA,GAA7BC,EAAOH,EAAPG,QAASC,EAAIJ,EAAJI,KACjBhK,GAAwBC,EAAAA,EAAAA,UAAgC,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAApDnB,EAAIqB,EAAA,GAAE+J,EAAO/J,EAAA,GACpBI,GAAwBL,EAAAA,EAAAA,UAAiB,IAAGM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAArC4J,EAAI3J,EAAA,GAAE4J,EAAO5J,EAAA,GAEpB6J,GAA0DC,EAAAA,EAAAA,UAAS,CACjEzB,SAAAA,EACA0B,QAAQ,WAAD,OAAAxB,EAAAA,IAAAyB,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAE,SAAAC,IAAA,IAAAC,EAAAC,EAAA,OAAAJ,EAAAA,EAAAA,KAAAK,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACDjB,EAAQkB,IAAI,oDAADpN,OAEgB,QAFhB8M,EAES,QAFTC,EAEbzB,EAAelE,eAAO,IAAA2F,OAAA,EAAtBA,EAAwB1Q,aAAK,IAAAyQ,EAAAA,EAAI,IAEnC,CACEO,QAAS,CACPC,cAAc,UAADtN,OAAgB,OAAJmM,QAAI,IAAJA,OAAI,EAAJA,EAAMoB,gBAGpC,cAAAN,EAAAO,OAAA,SAAAP,EAAAQ,MAAA,wBAAAR,EAAAS,OAAA,GAAAb,EAAA,MAAAc,MAAA,KAAA5I,UAAA,EACH6I,UAAW,SAACC,GAAS,IAADC,EAClB1B,EAAY,OAAHyB,QAAG,IAAHA,OAAG,EAAHA,EAAarE,KAAKuE,cAC3BC,IACQ,OAAR3C,QAAQ,IAARA,GAAiB,QAATyC,EAARzC,EAAUjE,eAAO,IAAA0G,GAAjBA,EAAmBrH,oBACrB,EACAwH,sBAAsB,IAlBhBhM,EAASsK,EAATtK,UAAoBiM,EAAyB3B,EAAlC4B,QAoBnBC,GAAqDC,EAAAA,EAAAA,aAAY,CAC/DC,YAAavD,EACbwD,WAAW,SAADC,GAAA,OAAAtD,EAAAA,IAAAwB,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAE,SAAA6B,EAAOC,GAAc,OAAA/B,EAAAA,EAAAA,KAAAK,MAAA,SAAA2B,GAAA,cAAAA,EAAAzB,KAAAyB,EAAAxB,MAAA,cAAAwB,EAAAxB,KAAA,EAClBjB,EAAQ0C,KAAK,+BAAgCF,EAAW,CACnErB,QAAS,CACPC,cAAc,UAADtN,OAAgB,OAAJmM,QAAI,IAAJA,OAAI,EAAJA,EAAMoB,gBAEhC,KAAD,SAAAoB,EAAAnB,OAAA,SAAAmB,EAAAlB,MAAA,wBAAAkB,EAAAjB,OAAA,GAAAe,EAAA,MACHd,MAAA,KAAA5I,UAAA,EACD6I,UAAAA,IATciB,EAAST,EAAjBU,OAA8BC,EAAUX,EAArBnM,UAW3B+M,GAAuDX,EAAAA,EAAAA,aAAY,CACjEC,YAAavD,EACbwD,WAAW,SAADU,GAAA,OAAA9D,EAAAA,IAAAuB,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAE,SAAAsC,EAAOR,GAAc,OAAA/B,EAAAA,EAAAA,KAAAK,MAAA,SAAAmC,GAAA,cAAAA,EAAAjC,KAAAiC,EAAAhC,MAAA,cAAAgC,EAAAhC,KAAA,EAClBjB,EAAQ0C,KAAK,kCAAmCF,EAAW,CACtErB,QAAS,CACPC,cAAc,UAADtN,OAAgB,OAAJmM,QAAI,IAAJA,OAAI,EAAJA,EAAMoB,gBAEhC,KAAD,SAAA4B,EAAA3B,OAAA,SAAA2B,EAAA1B,MAAA,wBAAA0B,EAAAzB,OAAA,GAAAwB,EAAA,MACHvB,MAAA,KAAA5I,UAAA,EACD6I,UAAAA,IATcwB,EAAUJ,EAAlBF,OAA+BO,EAAWL,EAAtB/M,UAW5BqN,GAA2DjB,EAAAA,EAAAA,aAAY,CACrEC,YAAavD,EACbwD,WAAW,SAADgB,GAAA,OAAAnE,EAAAA,IAAAsB,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAE,SAAA4C,EAAOd,GAAc,OAAA/B,EAAAA,EAAAA,KAAAK,MAAA,SAAAyC,GAAA,cAAAA,EAAAvC,KAAAuC,EAAAtC,MAAA,cAAAsC,EAAAtC,KAAA,EAClBjB,EAAQ0C,KAAK,kCAAmCF,EAAW,CACtErB,QAAS,CACPC,cAAc,UAADtN,OAAgB,OAAJmM,QAAI,IAAJA,OAAI,EAAJA,EAAMoB,gBAEhC,KAAD,SAAAkC,EAAAjC,OAAA,SAAAiC,EAAAhC,MAAA,wBAAAgC,EAAA/B,OAAA,GAAA8B,EAAA,MACH7B,MAAA,KAAA5I,UAAA,EACD6I,UAAAA,IATc8B,EAAYJ,EAApBR,OAAiCa,EAAaL,EAAxBrN,UAW9B,SAAS2L,EAAUC,GACjB,GAAIA,EAAIrE,KAAKoG,QACX,OAAOC,IAAAA,KAAU,CACf9S,SAAU,SACVvB,KAAM,UACN4B,MAAOyQ,EAAIrE,KAAKsG,QAChBC,mBAAmB,EACnBC,MAAO,OACNC,MAAK,WACNC,GACF,IAGFL,IAAAA,KAAU,CACR9S,SAAU,SACVvB,KAAM,QACN4B,MAAOyQ,EAAIrE,KAAKsG,QAChBC,mBAAmB,EACnBC,MAAO,MAEX,CACA,IAmFME,EAAe,WAAO,IAADC,EACzB7D,EAAQ,IACR0B,IACQ,OAAR3C,QAAQ,IAARA,GAAiB,QAAT8E,EAAR9E,EAAUjE,eAAO,IAAA+I,GAAjBA,EAAmB1J,oBACrB,EAkDA,SAASuH,IACHzC,EAAanE,UACfmE,EAAanE,QAAQ/K,MAAQ,IAE3BmP,EAA8BpE,UAChCoE,EAA8BpE,QAAQgJ,cAAgB,GAEpD3E,EAAoBrE,UACtBqE,EAAoBrE,QAAQgJ,cAAgB,GAE1C1E,EAAatE,UACfsE,EAAatE,QAAQ/K,MAAQ,IAE3BsP,EAAkBvE,UACpBuE,EAAkBvE,QAAQ/K,MAAQ,IAEhCuP,EAA2BxE,UAC7BwE,EAA2BxE,QAAQiJ,SAAU,GAE3CxE,EAAmBzE,UACrByE,EAAmBzE,QAAQiJ,SAAU,GAEnCvE,EAAqB1E,UACvB0E,EAAqB1E,QAAQiJ,SAAU,EAE3C,CAEA,IAAMnP,GAAQoP,OAAOC,WAAa,IAC5B9S,GAAS6S,OAAOE,YAAc,GAC9BC,GAAyB,KAATpE,EAEtB,OAAIpK,GAAa8M,GAAcM,GAAeM,GACrC1S,EAAAA,EAAAA,KAAA,OAAAD,SAAK,gBAIZC,EAAAA,EAAAA,KAAA,OACEL,MAAO,CACL8T,KAAM,EACNC,gBAAiB,WACjB3T,UAEFL,EAAAA,EAAAA,MAAA,OACEC,MAAO,CAAEsE,MAAM,GAADlB,OAAKkB,GAAK,MAAMzD,OAAO,GAADuC,OAAKvC,GAAM,MAAMmT,OAAQ,QAAS5T,SAAA,EAEtEL,EAAAA,EAAAA,MAAA,OACEC,MAAO,CACLa,OAAQ,SACRT,SAAA,EAEFL,EAAAA,EAAAA,MAAA,OACEC,MAAO,CACLC,QAAS,OACTC,WAAY,SACZW,OAAQ,OACRoT,UAAW,QACX7T,SAAA,EAEFC,EAAAA,EAAAA,KAACyB,EAAAA,GAAS,CACRpD,MAAO,CACL8B,MAAO,WACPR,MAAO,CACLkU,SAAU,OACV1I,WAAY,OACZlH,MAAO,SAGX7F,MAAO,CACL0E,UAAU,8BACVvC,KAAM,SACNkE,UAAW,SAAC3F,IACI,UAAVA,EAAEyL,KAA6B,gBAAVzL,EAAEyL,MACzBzL,EAAEyJ,iBACF0I,KAEY,cAAVnS,EAAEyL,OACJzL,EAAEyJ,iBACmBU,SAASS,cAC5B,mBAEWiB,QAEjB,EACAhL,MAAO,CAAEsE,MAAO,UAElB3F,SAAU+P,KAEVmF,KACAxT,EAAAA,EAAAA,KAACmD,EAAAA,GAAW,CACVG,OAAQ,CACN3D,MAAO,CACLgU,OAAQ,EACRG,QAAS,MACTC,aAAc,MACdxS,WAAY,eAEdN,QAASgS,GAEXzP,YAAY,SAAQzD,UAEpBC,EAAAA,EAAAA,KAAA,OACEgU,MAAM,6BACN/P,MAAM,OACNzD,OAAO,OACPyT,QAAQ,YACRC,KAAK,OAAMnU,UAEXC,EAAAA,EAAAA,KAAA,QACEgK,EAAE,8gBACFkK,KAAK,gBAKZV,KACCxT,EAAAA,EAAAA,KAACmD,EAAAA,GAAW,CACVG,OAAQ,CACN3D,MAAO,CACLgU,OAAQ,EACRG,QAAS,MACTC,aAAc,MACdxS,WAAY,eAEdN,QA5KE,WAChBoO,EAAQ,OACRtC,YAAW,WAAK,IAADoH,EACO,QAApBA,EAAA7F,EAAanE,eAAO,IAAAgK,GAApBA,EAAsBxJ,OACxB,GAAE,IACJ,GAyKcnH,YAAY,MAAKzD,UAEjBL,EAAAA,EAAAA,MAAA,OAAKuE,MAAM,OAAOzD,OAAO,OAAOyT,QAAQ,YAAWlU,SAAA,EACjDC,EAAAA,EAAAA,KAAA,aAEAA,EAAAA,EAAAA,KAAA,KAAGf,GAAG,WAAUc,UACdC,EAAAA,EAAAA,KAAA,KAAG,YAAU,MAAMf,GAAG,QAAOc,UAC3BL,EAAAA,EAAAA,MAAA,KAAAK,SAAA,EACEC,EAAAA,EAAAA,KAAA,QACEkU,KAAK,OACLE,OAAO,UACPC,cAAc,QACdC,eAAe,QACfC,YAAY,IACZC,GAAG,KACHC,GAAG,KACHC,GAAG,KACHC,GAAG,OAGL3U,EAAAA,EAAAA,KAAA,QACEkU,KAAK,OACLE,OAAO,UACPC,cAAc,QACdC,eAAe,QACfC,YAAY,IACZC,GAAG,IACHC,GAAG,KACHC,GAAG,KACHC,GAAG,oBAQjB3U,EAAAA,EAAAA,KAACmD,EAAAA,GAAW,CACVO,SAAU8P,GACVlQ,OAAQ,CACN3D,MAAO,CACLgU,OAAQ,EACRG,QAAS,MACTC,aAAc,MACdxS,WAAY,eAEdN,QApTK,SAACnC,GAAY,IAAD8V,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAC7B,GAAoC,MAAZ,QAApBb,EAAAtG,EAAanE,eAAO,IAAAyK,OAAA,EAApBA,EAAsBxV,OACxB,OAAOwT,IAAAA,KAAU,CACf9S,SAAU,SACVvB,KAAM,UACN4B,MAAO,yBACP2S,mBAAmB,EACnBC,MAAO,OAGX,GAAoC,MAAZ,QAApB8B,EAAApG,EAAatE,eAAO,IAAA0K,OAAA,EAApBA,EAAsBzV,OACxB,OAAOwT,IAAAA,KAAU,CACf9S,SAAU,SACVvB,KAAM,UACN4B,MAAO,0BACP2S,mBAAmB,EACnBC,MAAO,OAGX,GAAyC,MAAZ,QAAzB+B,EAAApG,EAAkBvE,eAAO,IAAA2K,OAAA,EAAzBA,EAA2B1V,OAC7B,OAAOwT,IAAAA,KAAU,CACf9S,SAAU,SACVvB,KAAM,UACN4B,MAAO,0BACP2S,mBAAmB,EACnBC,MAAO,OAGX,IAAyB,QAArBgC,EAACzG,EAAanE,eAAO,IAAA4K,OAAA,EAApBA,EAAsB3V,OAAiB0B,QAAU,IACpD,OAAO8R,IAAAA,KAAU,CACf9S,SAAU,SACVvB,KAAM,UACN4B,MAAO,yBACP2S,mBAAmB,EACnBC,MAAO,OAGX,IAAyB,QAArBiC,EAACvG,EAAatE,eAAO,IAAA6K,OAAA,EAApBA,EAAsB5V,OAAiB0B,QAAU,IACpD,OAAO8R,IAAAA,KAAU,CACf9S,SAAU,SACVvB,KAAM,UACN4B,MAAO,0BACP2S,mBAAmB,EACnBC,MAAO,OAGX,IAA8B,QAA1BkC,EAACvG,EAAkBvE,eAAO,IAAA8K,OAAA,EAAzBA,EAA2B7V,OAAiB0B,QAAU,IACzD,OAAO8R,IAAAA,KAAU,CACf9S,SAAU,SACVvB,KAAM,UACN4B,MAAO,0BACP2S,mBAAmB,EACnBC,MAAO,OAGXjU,EAAEyJ,iBACF,IAAMmF,EAAQ,CACZgI,UAA+B,QAAtBR,EAAE5G,EAAanE,eAAO,IAAA+K,OAAA,EAApBA,EAAsB9V,MACjCuW,WAAgC,QAAtBR,EAAE1G,EAAatE,eAAO,IAAAgL,OAAA,EAApBA,EAAsB/V,MAClCwW,MAAgC,QAA3BR,EAAE1G,EAAkBvE,eAAO,IAAAiL,OAAA,EAAzBA,EAA2BhW,MAClCyW,QAA8C,QAAvCR,EAAE9G,EAA8BpE,eAAO,IAAAkL,OAAA,EAArCA,EAAuCjW,MAChD0W,UAAsC,QAA7BR,EAAE9G,EAAoBrE,eAAO,IAAAmL,OAAA,EAA3BA,EAA6BlW,MACxC2W,KAAgC,QAA5BR,EAAE3G,EAAmBzE,eAAO,IAAAoL,OAAA,EAA1BA,EAA4BnC,QAClC4C,SAA4C,QAApCR,EAAE7G,EAA2BxE,eAAO,IAAAqL,OAAA,EAAlCA,EAAoCpC,QAC9C6C,SAAsC,QAA9BR,EAAE5G,EAAqB1E,eAAO,IAAAsL,OAAA,EAA5BA,EAA8BrC,QACxChE,KAAM,GACN8G,OAAQ,IAEG,WAAT9G,GACF+G,EAAAA,EAAAA,GAAuB,CACrBC,UAAU,EACVC,GAAI,SAACC,GACHnE,GAAUlS,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EAAIyN,GAAK,IAAE4I,qBAAAA,IACzB,KAGFC,EAAAA,EAAAA,GAAuB,CACrBC,UAAW,WACT5E,EAAUlE,EACZ,GAGN,GAoOYlK,YAAY,OAAMzD,UAElBC,EAAAA,EAAAA,KAAA,OAAKiE,MAAM,OAAOzD,OAAO,OAAOyT,QAAQ,YAAYC,KAAK,QAAOnU,UAC9DC,EAAAA,EAAAA,KAAA,QACEyW,SAAS,UACTC,SAAS,UACT1M,EAAE,iqBACFkK,KAAK,eAIXlU,EAAAA,EAAAA,KAACmD,EAAAA,GAAW,CACVO,SAAmB,WAAT0L,EACV9L,OAAQ,CACN3D,MAAO,CACLgU,OAAQ,EACRG,QAAS,MACTC,aAAc,MACdxS,WAAY,eAEdN,QA5OO,YACnBkV,EAAAA,EAAAA,GAAuB,CACrBC,UAAU,EACVC,GAAI,SAACC,GAA0B,IAADK,EAC5BlE,EAAa,CACXiD,UAA+B,QAAtBiB,EAAErI,EAAanE,eAAO,IAAAwM,OAAA,EAApBA,EAAsBvX,MACjCkX,qBAAAA,GAEJ,GAEJ,GAoOY9S,YAAY,SAAQzD,UAEpBL,EAAAA,EAAAA,MAAA,OAAKuE,MAAM,OAAOzD,OAAO,OAAOyT,QAAQ,YAAYC,KAAK,OAAMnU,SAAA,EAC7DC,EAAAA,EAAAA,KAAA,QACEgK,EAAE,UACFoK,OAAO,MACPG,YAAY,IACZF,cAAc,QACdC,eAAe,WAEjBtU,EAAAA,EAAAA,KAAA,QACEgK,EAAE,qEACFoK,OAAO,MACPG,YAAY,IACZF,cAAc,QACdC,eAAe,WAEjBtU,EAAAA,EAAAA,KAAA,QACEgK,EAAE,oEACFoK,OAAO,MACPG,YAAY,IACZF,cAAc,QACdC,eAAe,mBAKvB5U,EAAAA,EAAAA,MAAA,OACEC,MAAO,CACLiX,UAAW,OACXhX,QAAS,OACTgU,UAAW,OACXiD,OAAQ,OACRC,SAAU,QACV/W,SAAA,EAEFC,EAAAA,EAAAA,KAACyB,EAAAA,GAAS,CACRpD,MAAO,CACL8B,MAAO,SACPR,MAAO,CACLkU,SAAU,OACV1I,WAAY,OACZlH,MAAO,SAGX7F,MAAO,CACLsF,SAAU8P,GACVjT,KAAM,OACNZ,MAAO,CAAEsE,MAAO,SAElB3F,SAAUgQ,KAEZtO,EAAAA,EAAAA,KAACqC,EAAAA,GAAW,CACVhE,MAAO,CACL8B,MAAO,2BACPR,MAAO,CACLkU,SAAU,OACV1I,WAAY,OACZlH,MAAO,UAGXzB,UAAW+L,EACXhM,OAAQ,CACNmB,SAAU8P,GACV7T,MAAO,CAAEsE,MAAO,UAElBvB,WAAY,CACV,CAAE6H,IAAK,SACP,CAAEA,IAAK,aACP,CAAEA,IAAK,UACP,CAAEA,IAAK,WACP,CAAEA,IAAK,YAET3H,OAAQ,MACRhD,QAAS,SAEXI,EAAAA,EAAAA,KAACqC,EAAAA,GAAW,CACVhE,MAAO,CACL8B,MAAO,iBACPR,MAAO,CACLkU,SAAU,OACV1I,WAAY,OACZlH,MAAO,SAGXzB,UAAWgM,EACXjM,OAAQ,CACNmB,SAAU8P,GACV7T,MAAO,CAAEsE,MAAO,UAElBvB,WAAY,CACV,CAAE6H,IAAK,gBACP,CAAEA,IAAK,UACP,CAAEA,IAAK,WAET3H,OAAQ,MACRhD,QAAS,SAEXI,EAAAA,EAAAA,KAACyB,EAAAA,GAAS,CACRpD,MAAO,CACL8B,MAAO,eACPR,MAAO,CACLkU,SAAU,OACV1I,WAAY,OACZlH,MAAO,SAGX7F,MAAO,CACLsF,SAAU8P,GACVjT,KAAM,OACNZ,MAAO,CAAEsE,MAAO,UAElB3F,SAAUmQ,KAEZzO,EAAAA,EAAAA,KAACyB,EAAAA,GAAS,CACRpD,MAAO,CACL8B,MAAO,cACPR,MAAO,CACLkU,SAAU,OACV1I,WAAY,OACZlH,MAAO,SAGX7F,MAAO,CACLsF,SAAU8P,GACVjT,KAAM,OACNZ,MAAO,CAAEsE,MAAO,UAElB3F,SAAUoQ,KAEZ1O,EAAAA,EAAAA,KAACyB,EAAAA,GAAS,CACRpD,MAAO,CACL8B,MAAO,0BACPR,MAAO,CACLkU,SAAU,OACV1I,WAAY,OACZlH,MAAO,UAGX7F,MAAO,CACLsF,SAAU8P,GAEVjT,KAAM,WACNZ,MAAO,CAAEsE,MAAO,OAAQzD,OAAQ,SAElClC,SAAUqQ,KAEZ3O,EAAAA,EAAAA,KAACyB,EAAAA,GAAS,CACRpD,MAAO,CACL8B,MAAO,mBACPR,MAAO,CACLkU,SAAU,OACV1I,WAAY,OACZlH,MAAO,SAGX7F,MAAO,CACLsF,SAAU8P,GAEVjT,KAAM,WACNZ,MAAO,CAAEsE,MAAO,OAAQzD,OAAQ,SAElClC,SAAUsQ,KAEZ5O,EAAAA,EAAAA,KAACyB,EAAAA,GAAS,CACRpD,MAAO,CACL8B,MAAO,qBACPR,MAAO,CACLkU,SAAU,OACV1I,WAAY,OACZlH,MAAO,UAGX7F,MAAO,CACLsF,SAAU8P,GAEVjT,KAAM,WACNZ,MAAO,CAAEsE,MAAO,OAAQzD,OAAQ,SAElClC,SAAUuQ,WAIhB7O,EAAAA,EAAAA,KAAC2D,EAAAA,EAAW,CACVrD,IAAK8N,EACLrK,KAAMA,EACNC,OAAQ6J,EACR5J,MAAOA,GACPzD,OAAQA,GACR0D,cAAc,EACdE,kBAjakB,SAAC2S,GACzB,GAAIA,EAAYjW,OAAS,EAAG,CAC1B,IAAM2I,EAAMsN,EAAY,GACpBzI,EAAanE,UACfmE,EAAanE,QAAQ/K,MAAQqK,EAAIiM,WAE/BnH,EAA8BpE,UAChCoE,EAA8BpE,QAAQ/K,MAAQqK,EAAIoM,QAAQmB,QAExDxI,EAAoBrE,UACtBqE,EAAoBrE,QAAQ/K,MAAQqK,EAAIqM,UAAUkB,QAEhDvI,EAAatE,UACfsE,EAAatE,QAAQ/K,MAAQqK,EAAIkM,YAE/BjH,EAAkBvE,UACpBuE,EAAkBvE,QAAQ/K,MAAQqK,EAAImM,OAEpCjH,EAA2BxE,UAC7BwE,EAA2BxE,QAAQiJ,QAA2B,QAAjB3J,EAAIuM,UAE/CpH,EAAmBzE,UACrByE,EAAmBzE,QAAQiJ,QAAuB,QAAb3J,EAAIsM,MAEvClH,EAAqB1E,UACvB0E,EAAqB1E,QAAQiJ,QAA2B,QAAjB3J,EAAIwM,UAE7C5G,EAAQ,SACV,MACE0B,GAEJ,EAmYQzM,kBAAkB,QAK5B,C,6HC/oBO,SAAS6R,EAAuBc,GAMnC,IAADC,EACDtE,IAAAA,KAAU,CACRzS,MAAM,gBACNgX,KAAW,OAALF,QAAK,IAALA,GAAAA,EAAOG,KACJ,OAALH,QAAK,IAALA,OAAK,EAALA,EAAOG,KACPH,EAAMb,SAAQ,6CAEd,wCACJ7X,KAAM,UACNH,MAAO,OACPiZ,gBAAiB,CACfC,eAAgB,OAElBC,kBAAkB,EAClBC,kBAAmB,OACnBC,mBAAoB,QACpBC,qBAAqB,EACrBC,WAAW,SAADpG,GAAA,OAAA2F,EAAAA,IAAAzH,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAE,SAAAC,EAAO0G,GAAoB,OAAA5G,EAAAA,EAAAA,KAAAK,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACrC,IACE+G,EAAMZ,GAAGC,EACX,CAAE,MAAOsB,GACPhF,IAAAA,sBAA2B,iCAAD7P,OACJ6U,EAAK,gBAE7B,CAAC,wBAAA5H,EAAAS,OAAA,GAAAb,EAAA,MACFc,MAAA,KAAA5I,UAAA,EACD+P,kBAAmB,kBAAOjF,IAAAA,WAAgB,IACzCI,MAAK,SAAChL,GACP,GAAIA,EAAO8P,aACLb,EAAMT,UACR,OAAOS,EAAMT,YAGbS,EAAMc,YACRd,EAAMc,YAEV,GACF,CAEO,SAASxB,EAAuBU,GAKrCrE,IAAAA,KAAU,CACRzS,MAAO,gBACPiX,KAAW,OAALH,QAAK,IAALA,GAAAA,EAAOG,KAAY,OAALH,QAAK,IAALA,OAAK,EAALA,EAAOG,KAAO,sCAClC7Y,KAAM,UACNgZ,kBAAkB,EAClBE,mBAAoB,UACpBO,kBAAmB,OACnBR,kBAAmB,kBAClBxE,MAAK,SAAChL,GACP,GAAIA,EAAO8P,aACLb,EAAMT,UACR,OAAOS,EAAMT,YAGbS,EAAMc,YACRd,EAAMc,YAEV,GACF,C","sources":["components/UpwardFields.tsx","components/UpwardTable.tsx","feautures/Admin/Reference/ChartAccount.tsx","lib/confirmationAlert.ts"],"sourcesContent":["import { HtmlHTMLAttributes, InputHTMLAttributes, useId, ReactNode, useState, LegacyRef, HTMLInputTypeAttribute, TextareaHTMLAttributes } from \"react\";\nimport \"../style/design.css\";\n\n\ninterface TextInputProps {\n  input: InputHTMLAttributes<HTMLInputElement>;\n  label: HtmlHTMLAttributes<HTMLLabelElement>;\n  inputRef?: React.RefObject<HTMLInputElement>;\n  icon?: ReactNode; // New prop for the icon\n  iconPosition?: 'start' | 'end'; // New prop to choose icon position\n  onIconClick?: React.MouseEventHandler<HTMLDivElement> | undefined,\n  disableIcon?: boolean\n}\n\ninterface TextAreaPrps {\n  textarea:TextareaHTMLAttributes<HTMLTextAreaElement>\n  label: HtmlHTMLAttributes<HTMLLabelElement>;\n  _inputRef:LegacyRef<HTMLTextAreaElement>\n  icon?: ReactNode; // New prop for the icon\n  iconPosition?: 'start' | 'end'; // New prop to choose icon position\n  onIconClick?: React.MouseEventHandler<HTMLDivElement> | undefined,\n  disableIcon?: boolean\n}\n\ninterface TextFormatedInputProps extends TextInputProps {\n  onChange?: React.ChangeEventHandler<HTMLInputElement> | undefined\n}\nexport function TextFormatedInput({\n  input,\n  label,\n  inputRef,\n  icon,\n  iconPosition = 'end', // Default position is 'end'\n  disableIcon = false,\n  onIconClick = (e) => { },\n  onChange = (e) => { }\n}: TextFormatedInputProps) {\n  // const [inputValue, setInputValue] = useState('');\n  const id = useId();\n\n\n  // Helper function to format numbers with commas\n  const formatNumber = (value: string) => {\n    if (!value) return value;\n\n    // Split the value into integer and decimal parts\n    const parts = value.split('.');\n\n    // Add commas to the integer part only\n    parts[0] = parts[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n\n    // Join the integer and decimal parts if decimal exists\n    return parts.join('.');\n  };\n\n  // Helper function to remove commas\n  const unformatNumber = (value: string) => {\n    return value.replace(/,/g, '');\n  };\n\n  // Function to ensure two decimal places\n  const ensureTwoDecimals = (value: string) => {\n    // If the value has no decimal part, append '.00'\n    if (!value.includes('.')) {\n      if(value === ''){\n        return   '0.00';\n      }else{\n\n        return value + '.00';\n      }\n    }\n\n    // If the value has one decimal place, append '0'\n    const parts = value.split('.');\n    if (parts[1].length === 1) {\n      return value + '0';\n    }\n\n    // If it already has two decimal places, return as is\n    return value;\n  };\n\n  const handleChange = (e: any) => {\n    let value = e.target.value;\n\n    // Remove commas for processing\n    value = unformatNumber(value);\n\n    // Allow only numbers, commas, and one decimal point\n    const regex = /^-?\\d+(,\\d{3})*(\\.\\d*)?$/;\n\n    // Remove commas for processing\n    value = unformatNumber(value);\n\n    // Check if the value is valid\n    if (value === '' || regex.test(value)) {\n      // Set the formatted value back in the input field\n\n      //setInputValue(formatNumber(value));\n      e.target.value = formatNumber(value)\n\n    }\n  };\n\n  const handleBlur = (e: any) => {\n    let value = unformatNumber(e.target.value);\n\n    // Ensure the value has two decimal places\n    value = ensureTwoDecimals(value);\n\n    // Set the value with commas and .00 (if needed)\n    // setInputValue(formatNumber(value));\n    e.target.value = formatNumber(value)\n  };\n\n  return (\n    <div\n      style={{\n        display: 'flex',\n        alignItems: 'center',\n        position: 'relative', // Enable absolute positioning for icon\n      }}\n    >\n      <label {...label} htmlFor={id}>\n        {label.title}\n      </label>\n      {icon && iconPosition === 'start' && (\n        <div style={{ position: 'absolute', left: '8px', zIndex: 1 }}>\n          {icon}\n        </div>\n      )}\n      <input\n        ref={inputRef}\n        id={id}\n        {...input}\n        type=\"text\"\n        style={{\n          height: '100%',\n          ...input.style,\n        }}\n        onChange={(e) => {\n          handleChange(e)\n          onChange(e)\n        }}\n        onBlur={(e) => {\n          handleBlur(e)\n        }}  // Add .00 on blur\n\n      />\n      {icon && iconPosition === 'end' && (\n        <div onClick={onIconClick}\n          style={{\n            position: 'absolute',\n            right: '2px',\n            top: \"50%\",\n            transform: \"translateY(-50%)\",\n            zIndex: 1,\n            cursor: disableIcon ? \"none\" : \"pointer\",\n            display: \"flex\",\n            alignItems: \"center\",\n            justifyContent: \"center\",\n            background: \"white\",\n            pointerEvents: disableIcon ? \"none\" : \"auto\"\n          }}>\n          {icon}\n        </div>\n\n      )\n      }\n    </div >\n  );\n}\n\n\nexport function TextInput({\n  input,\n  label,\n  inputRef,\n  icon,\n  iconPosition = 'end', // Default position is 'end'\n  disableIcon = false,\n  onIconClick = (e) => { }\n}: TextInputProps) {\n  const id = useId();\n\n  return (\n    <div\n      style={{\n        display: 'flex',\n        alignItems: 'center',\n        position: 'relative', // Enable absolute positioning for icon\n      }}\n    >\n      <label {...label} htmlFor={id}>\n        {label.title}\n      </label>\n      {icon && iconPosition === 'start' && (\n        <div style={{ position: 'absolute', left: '8px', zIndex: 1 }}>\n          {icon}\n        </div>\n      )}\n      <input\n        ref={inputRef}\n        id={id}\n        {...input}\n        style={{\n          height: '100%',\n          ...input.style,\n        }}\n      />\n      {icon && iconPosition === 'end' && (\n        <div onClick={onIconClick}\n          style={{\n            position: 'absolute',\n            right: '2px',\n            top: \"50%\",\n            transform: \"translateY(-50%)\",\n            zIndex: 1,\n            cursor: disableIcon ? \"none\" : \"pointer\",\n            display: \"flex\",\n            alignItems: \"center\",\n            justifyContent: \"center\",\n            background: \"white\",\n            pointerEvents: disableIcon ? \"none\" : \"auto\"\n          }}>\n          {icon}\n        </div>\n\n      )\n      }\n    </div >\n  );\n}\n\n\n\nexport function TextAreaInput({\n  textarea,\n  label,\n  _inputRef,\n  icon,\n  iconPosition = 'end', // Default position is 'end'\n  disableIcon = false,\n  onIconClick = (e) => { }\n}: TextAreaPrps) {\n  const id = useId();\n\n  return (\n    <div\n      style={{\n        display: 'flex',\n        alignItems: 'center',\n        position: 'relative', // Enable absolute positioning for icon\n      }}\n    >\n      <label {...label} htmlFor={id}>\n        {label.title}\n      </label>\n      {icon && iconPosition === 'start' && (\n        <div style={{ position: 'absolute', left: '8px', zIndex: 1 }}>\n          {icon}\n        </div>\n      )}\n      <textarea\n        ref={_inputRef}\n        id={id}\n        {...textarea}\n        style={{\n          height: '100%',\n          ...textarea.style,\n        }}\n      \n      />\n      {icon && iconPosition === 'end' && (\n        <div onClick={onIconClick}\n          style={{\n            position: 'absolute',\n            right: '2px',\n            top: \"50%\",\n            transform: \"translateY(-50%)\",\n            zIndex: 1,\n            cursor: disableIcon ? \"none\" : \"pointer\",\n            display: \"flex\",\n            alignItems: \"center\",\n            justifyContent: \"center\",\n            background: \"white\",\n            pointerEvents: disableIcon ? \"none\" : \"auto\"\n          }}>\n          {icon}\n        </div>\n\n      )\n      }\n    </div >\n  );\n}\n\n\nexport function SelectInput({\n  select,\n  label,\n  selectRef,\n  datasource = [],\n  values = \"\",\n  display = \"\",\n}: {\n  selectRef?: React.RefObject<HTMLSelectElement>;\n  labelRef?: React.RefObject<HTMLLabelElement>;\n  select: InputHTMLAttributes<HTMLSelectElement>;\n  label: HtmlHTMLAttributes<HTMLLabelElement>;\n  datasource: Array<any>;\n  values: string;\n  display: string;\n}) {\n  const id = useId();\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        height: \"18px\",\n        alignItems: \"center\",\n      }}\n    >\n      <label {...label} htmlFor={id}>\n        {label.title}\n      </label>\n      <select\n        {...select}\n        ref={selectRef}\n        className={`select ${select.className}`}\n        style={{\n          height: \"18px\",\n          ...select.style,\n        }}\n      >\n        {datasource.map((itm, idx) => {\n          return (\n            <option key={idx} value={itm[values]}>\n              {itm[display]}\n            </option>\n          );\n        })}\n      </select>\n    </div>\n  );\n}\n\nexport function ButtonField({\n  buttonRetRef,\n  button,\n  tooltipText = \"\",\n  children,\n  disabled = false,\n}: {\n  buttonRetRef?: React.RefObject<HTMLButtonElement>;\n  button: HtmlHTMLAttributes<HTMLButtonElement>;\n  tooltipText: string;\n  children: React.ReactNode;\n  disabled?: boolean;\n}) {\n  return (\n    <div className=\"tooltip\">\n      <button\n        disabled={disabled}\n        {...button}\n        ref={buttonRetRef}\n        style={{ ...button.style, background: !disabled ? \"transparent\" : \"#f1f1f1\" }}\n        className=\"tooltip-button\"\n      >\n        {children}\n      </button>\n      {!disabled && <span className=\"tooltip-text\">{tooltipText}</span>}\n    </div>\n  );\n}\n","\n\nimport React, {\n  useState,\n  useRef,\n  useEffect,\n  forwardRef,\n  useImperativeHandle,\n} from \"react\";\n\nimport \"../style/datagridview.css\";\nimport { Pagination } from \"@mui/material\";\n\ninterface UpwardTablePropsType {\n  rows: Array<any>;\n  column: Array<any>;\n  width: number;\n  height: number;\n  dataReadOnly: boolean;\n  onSelectionChange?: (row: Array<any>, rowIndex: number) => void;\n  onKeyDown?: (row: Array<any>, key: string, rowIndex: number) => void;\n  isMultipleSelect?: boolean;\n  freeze?: boolean;\n  inputsearchselector?: string;\n  isRowSelectable?: boolean;\n  unSelectable?: (row: any) => boolean;\n  isLoading?: boolean,\n  onRightClick?: (rowSelected: any, event: any) => any\n}\n\nconst UpwardTable = forwardRef(\n  (\n    {\n      rows,\n      column,\n      width,\n      height,\n      dataReadOnly,\n      onSelectionChange = () => { },\n      isMultipleSelect = false,\n      freeze = false,\n      onKeyDown,\n      inputsearchselector = \".search-input-up-on-key-down\",\n      isRowSelectable = true,\n      unSelectable = () => false,\n      isLoading,\n      onRightClick\n    }: UpwardTablePropsType,\n    UpwardTableRef\n  ) => {\n    const [pages, setPages] = useState<Array<any>>([])\n    const [pageNumber, setPageNumber] = useState(0)\n    const onSelectionChangeRef = useRef(onSelectionChange);\n    const onKeyDownRef = useRef(onKeyDown);\n    const [columns, setColumns] = useState(column.filter((itm) => !itm.hide));\n    const [hoveredColumn, setHoveredColumn] = useState(null);\n    const [selectedRows, setSelectedRows] = useState<Array<number>>([0]);\n    const [lastSelectedRowIndex, setLastSelectedRowIndex] = useState(0);\n    const [selectedItems, setSelectedItems] = useState<Array<number>>([]);\n    const divRef = useRef<HTMLDivElement>(null);\n    const [_clickTimeout, _setClickTimeout] = useState(null);\n\n\n    useEffect(() => {\n      const _pages = formatArrayIntoChunks(rows, 100)\n      setPages(_pages)\n    }, [rows])\n\n    const startResize = (index: any, e: any) => {\n      e.preventDefault();\n      e.stopPropagation();\n\n      const startX = e.clientX;\n      const startWidth = columns[index].width;\n\n      const doDrag = (moveEvent: any) => {\n        const newWidth = startWidth + (moveEvent.clientX - startX);\n        const updatedColumns = [...columns];\n        updatedColumns[index].width = newWidth > 50 ? newWidth : 50; // Set minimum column width\n        setColumns(updatedColumns);\n      };\n\n      const stopDrag = () => {\n        document.removeEventListener(\"mousemove\", doDrag);\n        document.removeEventListener(\"mouseup\", stopDrag);\n      };\n\n      document.addEventListener(\"mousemove\", doDrag);\n      document.addEventListener(\"mouseup\", stopDrag);\n    };\n    const handleMouseEnter = (index: any) => {\n      setHoveredColumn(index); // Set the hovered column index\n    };\n    const handleMouseLeave = () => {\n      setHoveredColumn(null); // Reset hovered column index\n    };\n    const handleRowClick = (\n      rowIndex: any,\n      event: React.MouseEvent<HTMLDivElement, MouseEvent>\n    ) => {\n      function getIndexAndData(selectedRowData: Array<any>) {\n        const filterSelectrowData = selectedRowData.map((d, idx) => {\n          if (!unSelectable(d)) {\n            return { idx, data: d };\n          }\n          return null;\n        });\n        const removeNullValue = filterSelectrowData.filter((d) => d !== null);\n        const data = removeNullValue.map((itm: any) => itm.data);\n        const newSelectedRowsFiltered = removeNullValue.map(\n          (itm: any) => itm.idx\n        );\n        return { newSelectedRowsFiltered, data };\n      }\n\n      if (!isMultipleSelect) {\n        // Single selection mode\n        setSelectedRows([rowIndex]);\n      } else {\n        // Multiple selection mode\n        if (event.shiftKey && lastSelectedRowIndex !== null) {\n          // Shift + Click: Select range between last clicked row and current clicked row\n          const rangeStart = Math.min(lastSelectedRowIndex, rowIndex);\n          const rangeEnd = Math.max(lastSelectedRowIndex, rowIndex);\n          const newSelectedRows: Array<number> = [];\n          for (let i = rangeStart; i <= rangeEnd; i++) {\n            if (!selectedRows.includes(i)) {\n              newSelectedRows.push(i);\n            }\n          }\n\n          let selectedItemsParams: Array<number> = [\n            ...selectedItems,\n            ...newSelectedRows,\n          ];\n\n          setSelectedRows([...selectedRows, ...newSelectedRows]);\n          const selectedRowData = rows.filter((d, idx) =>\n            selectedItemsParams.includes(idx)\n          );\n          const { newSelectedRowsFiltered } =\n            getIndexAndData(selectedRowData);\n\n          setSelectedItems(newSelectedRowsFiltered);\n          // onSelectionChangeRef.current(data, rowIndex);\n        } else if (event.ctrlKey || event.metaKey) {\n          // Ctrl (or Cmd on macOS) + Click: Toggle row selection\n          if (selectedRows.includes(rowIndex) && !freeze) {\n            setSelectedRows(selectedRows.filter((i) => i !== rowIndex));\n            setSelectedItems((d) => {\n              d = d.filter((i) => i !== rowIndex);\n              return d;\n            });\n            let selectedItemsParams: Array<number> = selectedItems.filter(\n              (i) => i !== rowIndex\n            );\n\n            setSelectedItems(selectedItemsParams);\n            // onSelectionChangeRef.current(selectedRowData, rowIndex);\n          } else {\n            setSelectedRows([...selectedRows, rowIndex]);\n            setSelectedItems((d) => {\n              d.push(rowIndex);\n              return d;\n            });\n            let selectedItemsParams: Array<number> = [\n              ...selectedItems,\n              rowIndex,\n            ];\n\n            setSelectedItems(selectedItemsParams);\n            // onSelectionChangeRef.current(selectedRowData, rowIndex);\n          }\n        } else {\n          // Regular click in multiple selection mode: Single click to select a row\n          setSelectedRows([rowIndex]);\n        }\n      }\n      setLastSelectedRowIndex(rowIndex); // Update the last selected index\n    };\n    const handleRowDoubleClick = (\n      rowIndex: any,\n      event: React.MouseEvent<HTMLDivElement, MouseEvent>\n    ) => {\n      const row = rows[rowIndex];\n      if (unSelectable(row)) return;\n      if (!isRowSelectable) return;\n\n\n      let selectedItemsParams: Array<number> = [];\n      if (isMultipleSelect) {\n        selectedItemsParams = [...selectedItems, ...selectedRows];\n      } else {\n        selectedItemsParams = [rowIndex];\n      }\n\n\n      if (selectedItems.includes(rowIndex) && !freeze) {\n        selectedItemsParams = selectedItems.filter((i) => i !== rowIndex);\n        setSelectedItems(selectedItemsParams);\n        onSelectionChangeRef.current([], rowIndex);\n        return;\n      }\n\n      setSelectedItems(selectedItemsParams);\n      onSelectionChangeRef.current([row], rowIndex);\n    };\n    const handleKeyDown = (e: any) => {\n\n      if (e.key === \"ArrowDown\") {\n        e.preventDefault();\n        setSelectedRows((prevIndex: any) => {\n          if (prevIndex[prevIndex.length - 1] === null) return [0];\n          if (prevIndex[prevIndex.length - 1] >= rows.length - 1) {\n            return [rows.length - 1];\n          }\n          const newPrevIndex = prevIndex[prevIndex.length - 1] + 1;\n          const row = document.querySelector(`.row-${newPrevIndex}`);\n          row?.querySelector(\"input\")?.focus();\n\n          row?.scrollIntoView({ block: \"end\", behavior: \"smooth\" });\n          return [newPrevIndex];\n        });\n      } else if (e.key === \"ArrowUp\") {\n        e.preventDefault();\n\n        if (selectedRows[selectedRows.length - 1] === 0) {\n          const input = document.querySelector(\n            inputsearchselector\n          ) as HTMLInputElement;\n          if (input && input.tagName === \"INPUT\") {\n            input?.focus();\n          } else if (input && input.tagName === \"DIV\") {\n            const divInput = document.querySelector(\n              `${inputsearchselector} input`\n            ) as HTMLInputElement;\n\n            divInput?.focus();\n          }\n        }\n\n        setSelectedRows((prevIndex: any) => {\n          if (prevIndex[prevIndex.length - 1] === 0) return [0];\n          const newPrevIndex = prevIndex[prevIndex.length - 1] - 1;\n          const row = document.querySelector(`.row-${newPrevIndex}`);\n\n          row?.scrollIntoView({ block: \"end\", behavior: \"smooth\" });\n          row?.querySelector(\"input\")?.focus();\n          return [newPrevIndex];\n        });\n      }\n\n    };\n    const handleRowKeyDown = (e: any) => {\n      e.stopPropagation()\n\n      if (e.key === \"Enter\" || e.key === \"NumpadEnter\") {\n        e.preventDefault();\n        if (!isRowSelectable) return;\n\n        let selectedItemsParams: Array<number> = [];\n        const rowIndex = selectedRows[selectedRows.length - 1];\n        if (isMultipleSelect) {\n          selectedItemsParams = [...selectedItems, ...selectedRows];\n        } else {\n          selectedItemsParams = [rowIndex];\n        }\n        const row = rows[selectedItemsParams[selectedItemsParams.length - 1]];\n        if (unSelectable(row)) {\n          return;\n        }\n\n        if (selectedItems.includes(rowIndex) && !freeze) {\n          selectedItemsParams = selectedItems.filter((i) => i !== rowIndex);\n          setSelectedItems(selectedItemsParams);\n          onSelectionChangeRef.current([], rowIndex);\n          return;\n        }\n\n        setSelectedItems(selectedItemsParams);\n        onSelectionChangeRef.current([row], rowIndex);\n      } else if (e.key === \"Delete\" || e.key === \"Backspace\") {\n        if (!isRowSelectable) return;\n        const rowIndex = selectedRows[selectedRows.length - 1];\n\n        const selectedRowData = rows.filter((d, idx) =>\n          selectedRows.includes(idx)\n        );\n\n        if (onKeyDownRef?.current) {\n          onKeyDownRef?.current(selectedRowData, e.key, rowIndex);\n        }\n      }\n    }\n    useImperativeHandle(UpwardTableRef, () => ({\n      resetTableSelected: () => {\n        setSelectedRows([0]);\n        setLastSelectedRowIndex(0);\n        setSelectedItems([]);\n        if (rows.length > 0) {\n          const row = document.querySelector(`.row-${0}`);\n          row?.scrollIntoView({ block: \"end\", behavior: \"smooth\" });\n        }\n      },\n      getSelectedIndex: () => {\n        return selectedItems[0];\n      },\n      getSelectedRows: () => {\n        return rows.filter((d, idx) => selectedItems.includes(idx));\n      },\n      getFirstColumn: () => {\n        return rows.filter((d, idx) => selectedItems.includes(idx));\n      },\n      getParentElement: () => {\n        return divRef.current\n      },\n      getSelectedRowsOnClick: () => {\n        return selectedRows[0];\n      },\n      setSelectRows: (indx: number) => {\n        return setSelectedItems([indx])\n      },\n    }));\n\n    const handleRightClick = (event: any, rowIndex: number) => {\n      event.preventDefault();\n      const rowSelected = rows[rowIndex]\n      if (onRightClick) {\n        onRightClick(rowSelected, event)\n      }\n    };\n\n\n\n    return (\n      <div\n        style={{\n          display: \"flex\",\n          justifyContent: \"center\",\n        }}\n        onKeyDown={handleKeyDown}\n      >\n        <div>\n          <div className=\"table-frame-color\">\n            <div\n              style={{\n                display: \"flex\",\n                flexDirection: \"column\",\n                width: `${width - 10}px        `,\n                height: `${height - 135}px`,\n                minHeight: \"270px\"\n              }}\n              className=\"table-frame\"\n            >\n              <div className=\"table-panel\">\n                <div ref={divRef} className={`grid-container `} tabIndex={-1}>\n                  <div\n                    className=\"grid-row grid-header\"\n                    style={{\n                      position: \"sticky\",\n                      zIndex: \"10\",\n                      top: \"-1px\",\n                      background: \"white\",\n                    }}\n                  >\n                    {columns.map((col: any, index: number) => (\n                      <div\n                        key={index}\n                        className={`grid-cell header-cell ${hoveredColumn === index ? `highlight-column` : \"\"\n                          }`} // Add the class if hovered\n                        style={{ width: col.width, height: \"20px\", }}\n                      >\n                        <input\n                          style={{ fontWeight: \"bold\" }}\n                          defaultValue={col.headerName}\n                          readOnly\n                          onChange={(e) => { }}\n                        />\n                        <div\n                          className=\"resize-handle\"\n                          onMouseDown={(e) => startResize(index, e)}\n                          onMouseEnter={(e) => {\n                            e.preventDefault();\n                            handleMouseEnter(index);\n                          }} // On hover\n                          onMouseLeave={(e) => {\n                            e.preventDefault();\n                            handleMouseLeave();\n                          }} // On mouse leave\n                        />\n                      </div>\n                    ))}\n                  </div>\n                  {pages[pageNumber]?.map((row: any, rowIndex: any) => (\n                    <div\n                      className={`grid-row row-${rowIndex}`} // Highlight selected row\n                      key={rowIndex}\n                      onClick={(e) => handleRowClick(rowIndex, e)}\n                      onDoubleClick={(e) => {\n                        // e.stopPropagation()\n\n                        if (_clickTimeout) {\n                          clearTimeout(_clickTimeout);\n                          _setClickTimeout(null);\n                        }\n\n                        const timeoutId: any = setTimeout(() => {\n                          handleRowDoubleClick(rowIndex, e)\n                        }, 200);\n\n                        _setClickTimeout(timeoutId);\n\n\n\n                      }}\n                      onKeyDown={(e) => {\n\n                        // e.stopPropagation()\n\n                        if (_clickTimeout) {\n                          clearTimeout(_clickTimeout);\n                          _setClickTimeout(null);\n                        }\n\n                        const timeoutId: any = setTimeout(() => {\n                          handleRowKeyDown(e)\n                        }, 200);\n\n                        _setClickTimeout(timeoutId);\n\n\n                      }}\n                      onContextMenu={(e) => handleRightClick(e, rowIndex)}\n                    >\n                      {columns.map((col: any, colIndex: number) => (\n                        <div\n                          key={colIndex}\n                          style={{ width: col.width }}\n                          className={`grid-cell ${hoveredColumn === colIndex ? `highlight-column` : \"\"} row-${rowIndex} col-${colIndex}`}\n                        >\n                          <input\n                            value={row[col.field]}\n                            onChange={(e) => { }}\n                            readOnly={dataReadOnly}\n                            className={`${selectedRows.includes(rowIndex)\n                              ? \"selected-row\"\n                              : \"\"\n                              } ${selectedItems.includes(rowIndex)\n                                ? \"selected-items\"\n                                : \"\"\n                              }\n                          ${col.type === \"number\" ? \"number\" : \"text\"}\n                          `}\n                          />\n                          <div\n                            className=\"resize-handle\"\n                            onMouseDown={(e) => {\n                              e.preventDefault();\n                              startResize(colIndex, e);\n                            }}\n                            onMouseEnter={(e) => {\n                              e.preventDefault();\n                              handleMouseEnter(colIndex);\n                            }} // On hover\n                            onMouseLeave={(e) => {\n                              e.preventDefault();\n                              handleMouseLeave();\n                            }} // On mouse leave\n                          />\n                        </div>\n                      ))}\n                    </div>\n                  ))}\n                </div>\n              </div>\n            </div>\n\n            {isLoading && <div className=\"table-loading\">\n              <div className=\"loader\"></div>\n            </div>}\n          </div>\n          <div className=\"table-panel-footer\" >\n            <div>Records : {rows?.length}</div>\n            <div><Pagination count={pages.length} onChange={(e, value) => {\n              setPageNumber(value - 1)\n            }} />\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n);\n\nfunction formatArrayIntoChunks(arr: Array<any>, chunkSize = 100) {\n  let result = [];\n\n  for (let i = 0; i < arr.length; i += chunkSize) {\n    // Use slice to create chunks of 'chunkSize'\n    result.push(arr.slice(i, i + chunkSize));\n  }\n  return result;\n}\n\n\n\n\n\nexport { UpwardTable, };\n","import { useContext, useState, useRef } from \"react\";\nimport { GridRowSelectionModel } from \"@mui/x-data-grid\";\nimport { AuthContext } from \"../../../components/AuthContext\";\nimport { useMutation, useQuery, useQueryClient } from \"react-query\";\nimport Swal from \"sweetalert2\";\nimport {\n  codeCondfirmationAlert,\n  saveCondfirmationAlert,\n} from \"../../../lib/confirmationAlert\";\nimport {UpwardTable} from \"../../../components/UpwardTable\";\nimport {\n  ButtonField,\n  SelectInput,\n  TextInput,\n} from \"../../../components/UpwardFields\";\n\nexport const reducer = (state: any, action: any) => {\n  switch (action.type) {\n    case \"UPDATE_FIELD\":\n      return {\n        ...state,\n        [action.field]: action.value,\n      };\n    default:\n      return state;\n  }\n};\nexport const chartAccountColumn = [\n  { field: \"Acct_Code\", headerName: \"Account Code\", width: 150 },\n  { field: \"Acct_Title\", headerName: \"Account Name/Account Title\", width: 300 },\n  { field: \"Short\", headerName: \"Short Name\", width: 300 },\n  { field: \"Acct_Type\", headerName: \"Account Type\", width: 200 },\n  { field: \"Account\", headerName: \"Account\", width: 100 },\n  { field: \"SubAccnt\", headerName: \"Sub Account ?\", width: 100 },\n  { field: \"IDNo\", headerName: \"I.D. ?\", width: 100 },\n  { field: \"Inactive\", headerName: \"Inactive ?\", width: 100 },\n];\nconst queryKey = \"chart-account\";\n\nexport default function ChartAccount() {\n  const tableRef = useRef<any>(null);\n  const inputSearchRef = useRef<HTMLInputElement>(null);\n  const inputCodeRef = useRef<HTMLInputElement>(null);\n  const inputAccountClassificationRef = useRef<HTMLSelectElement>(null);\n  const inputAccountTypeRef = useRef<HTMLSelectElement>(null);\n  const inputNameRef = useRef<HTMLInputElement>(null);\n  const inputShortNameRef = useRef<HTMLInputElement>(null);\n  const inputRequiredSubAccountRef = useRef<HTMLInputElement>(null);\n  const inputRequiredIDRef = useRef<HTMLInputElement>(null);\n  const inputMarkInactiveRef = useRef<HTMLInputElement>(null);\n\n  const { myAxios, user } = useContext(AuthContext);\n  const [rows, setRows] = useState<GridRowSelectionModel>([]);\n  const [mode, setMode] = useState<string>(\"\");\n\n  const { isLoading, refetch: refetchChartAccountSearch } = useQuery({\n    queryKey,\n    queryFn: async () =>\n      await myAxios.get(\n        `/reference/get-chart-accounts?chartAccountSearch=${\n          inputSearchRef.current?.value ?? \"\"\n        }`,\n        {\n          headers: {\n            Authorization: `Bearer ${user?.accessToken}`,\n          },\n        }\n      ),\n    onSuccess: (res) => {\n      setRows((res as any)?.data.chartAccount);\n      resetField();\n      tableRef?.current?.resetTableSelected();\n    },\n    refetchOnWindowFocus: false,\n  });\n  const { mutate: mutateAdd, isLoading: loadingAdd } = useMutation({\n    mutationKey: queryKey,\n    mutationFn: async (variables: any) => {\n      return await myAxios.post(\"/reference/add-chart-account\", variables, {\n        headers: {\n          Authorization: `Bearer ${user?.accessToken}`,\n        },\n      });\n    },\n    onSuccess,\n  });\n  const { mutate: mutateEdit, isLoading: loadingEdit } = useMutation({\n    mutationKey: queryKey,\n    mutationFn: async (variables: any) => {\n      return await myAxios.post(\"/reference/update-chart-account\", variables, {\n        headers: {\n          Authorization: `Bearer ${user?.accessToken}`,\n        },\n      });\n    },\n    onSuccess,\n  });\n  const { mutate: mutateDelete, isLoading: loadingDelete } = useMutation({\n    mutationKey: queryKey,\n    mutationFn: async (variables: any) => {\n      return await myAxios.post(\"/reference/delete-chart-account\", variables, {\n        headers: {\n          Authorization: `Bearer ${user?.accessToken}`,\n        },\n      });\n    },\n    onSuccess,\n  });\n  function onSuccess(res: any) {\n    if (res.data.success) {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"success\",\n        title: res.data.message,\n        showConfirmButton: false,\n        timer: 1500,\n      }).then(() => {\n        handleCancel();\n      });\n    }\n\n    Swal.fire({\n      position: \"center\",\n      icon: \"error\",\n      title: res.data.message,\n      showConfirmButton: false,\n      timer: 1500,\n    });\n  }\n  const handleSave = (e: any) => {\n    if (inputCodeRef.current?.value === \"\") {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: \"Acct Code is required!\",\n        showConfirmButton: false,\n        timer: 1500,\n      });\n    }\n    if (inputNameRef.current?.value === \"\") {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: \"Acct Title is required!\",\n        showConfirmButton: false,\n        timer: 1500,\n      });\n    }\n    if (inputShortNameRef.current?.value === \"\") {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: \"Short Name is required!\",\n        showConfirmButton: false,\n        timer: 1500,\n      });\n    }\n    if ((inputCodeRef.current?.value as string).length >= 200) {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: \"Acct Code is too long!\",\n        showConfirmButton: false,\n        timer: 1500,\n      });\n    }\n    if ((inputNameRef.current?.value as string).length >= 200) {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: \"Acct Title is too long!\",\n        showConfirmButton: false,\n        timer: 1500,\n      });\n    }\n    if ((inputShortNameRef.current?.value as string).length >= 200) {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: \"Short Name is too long!\",\n        showConfirmButton: false,\n        timer: 1500,\n      });\n    }\n    e.preventDefault();\n    const state = {\n      Acct_Code: inputCodeRef.current?.value,\n      Acct_Title: inputNameRef.current?.value,\n      Short: inputShortNameRef.current?.value,\n      Account: inputAccountClassificationRef.current?.value,\n      Acct_Type: inputAccountTypeRef.current?.value,\n      IDNo: inputRequiredIDRef.current?.checked,\n      SubAccnt: inputRequiredSubAccountRef.current?.checked,\n      Inactive: inputMarkInactiveRef.current?.checked,\n      mode: \"\",\n      search: \"\",\n    };\n    if (mode === \"update\") {\n      codeCondfirmationAlert({\n        isUpdate: true,\n        cb: (userCodeConfirmation) => {\n          mutateEdit({ ...state, userCodeConfirmation });\n        },\n      });\n    } else {\n      saveCondfirmationAlert({\n        isConfirm: () => {\n          mutateAdd(state);\n        },\n      });\n    }\n  };\n  const handleCancel = () => {\n    setMode(\"\");\n    resetField();\n    tableRef?.current?.resetTableSelected();\n  };\n  const handleAdd = () => {\n    setMode(\"add\");\n    setTimeout(()=>{\n      inputCodeRef.current?.focus()\n    },100)\n  };\n  const handleDelete = () => {\n    codeCondfirmationAlert({\n      isUpdate: false,\n      cb: (userCodeConfirmation) => {\n        mutateDelete({\n          Acct_Code: inputCodeRef.current?.value,\n          userCodeConfirmation,\n        });\n      },\n    });\n  };\n  const onSelectionChange = (selectedRow: any) => {\n    if (selectedRow.length > 0) {\n      const row = selectedRow[0];\n      if (inputCodeRef.current) {\n        inputCodeRef.current.value = row.Acct_Code;\n      }\n      if (inputAccountClassificationRef.current) {\n        inputAccountClassificationRef.current.value = row.Account.trim();\n      }\n      if (inputAccountTypeRef.current) {\n        inputAccountTypeRef.current.value = row.Acct_Type.trim();\n      }\n      if (inputNameRef.current) {\n        inputNameRef.current.value = row.Acct_Title;\n      }\n      if (inputShortNameRef.current) {\n        inputShortNameRef.current.value = row.Short;\n      }\n      if (inputRequiredSubAccountRef.current) {\n        inputRequiredSubAccountRef.current.checked = row.SubAccnt === \"YES\";\n      }\n      if (inputRequiredIDRef.current) {\n        inputRequiredIDRef.current.checked = row.IDNo === \"YES\";\n      }\n      if (inputMarkInactiveRef.current) {\n        inputMarkInactiveRef.current.checked = row.Inactive === \"YES\";\n      }\n      setMode(\"update\");\n    } else {\n      resetField();\n    }\n  };\n  function resetField() {\n    if (inputCodeRef.current) {\n      inputCodeRef.current.value = \"\";\n    }\n    if (inputAccountClassificationRef.current) {\n      inputAccountClassificationRef.current.selectedIndex = 0;\n    }\n    if (inputAccountTypeRef.current) {\n      inputAccountTypeRef.current.selectedIndex = 0;\n    }\n    if (inputNameRef.current) {\n      inputNameRef.current.value = \"\";\n    }\n    if (inputShortNameRef.current) {\n      inputShortNameRef.current.value = \"\";\n    }\n    if (inputRequiredSubAccountRef.current) {\n      inputRequiredSubAccountRef.current.checked = false;\n    }\n    if (inputRequiredIDRef.current) {\n      inputRequiredIDRef.current.checked = false;\n    }\n    if (inputMarkInactiveRef.current) {\n      inputMarkInactiveRef.current.checked = false;\n    }\n  }\n\n  const width = window.innerWidth - 100;\n  const height = window.innerHeight - 90;\n  const disableFields = mode === \"\";\n\n  if (isLoading || loadingAdd || loadingEdit || loadingDelete) {\n    return <div>Loading...</div>;\n  }\n\n  return (\n    <div\n      style={{\n        flex: 1,\n        backgroundColor: \"#F8F8FF\",\n      }}\n    >\n      <div\n        style={{ width: `${width}px`, height: `${height}px`, margin: \"auto\" }}\n      >\n        <div\n          style={{\n            height: \"120px\",\n          }}\n        >\n          <div\n            style={{\n              display: \"flex\",\n              alignItems: \"center\",\n              height: \"30px\",\n              columnGap: \"10px\",\n            }}\n          >\n            <TextInput\n              label={{\n                title: \"Search: \",\n                style: {\n                  fontSize: \"12px\",\n                  fontWeight: \"bold\",\n                  width: \"50px\",\n                },\n              }}\n              input={{\n                className:\"search-input-up-on-key-down\",\n                type: \"search\",\n                onKeyDown: (e) => {\n                  if (e.key === \"Enter\" || e.key === \"NumpadEnter\") {\n                    e.preventDefault();\n                    refetchChartAccountSearch();\n                  }\n                  if (e.key === \"ArrowDown\") {\n                    e.preventDefault();\n                    const datagridview = document.querySelector(\n                      \".grid-container\"\n                    ) as HTMLDivElement;\n                    datagridview.focus();\n                  }\n                },\n                style: { width: \"500px\" },\n              }}\n              inputRef={inputSearchRef}\n            />\n            {!disableFields && (\n              <ButtonField\n                button={{\n                  style: {\n                    margin: 0,\n                    padding: \"5px\",\n                    borderRadius: \"5px\",\n                    background: \"transparent\",\n                  },\n                  onClick: handleCancel,\n                }}\n                tooltipText=\"CANCEL\"\n              >\n                <svg\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  width=\"17px\"\n                  height=\"17px\"\n                  viewBox=\"0 0 24 24\"\n                  fill=\"none\"\n                >\n                  <path\n                    d=\"M20.7457 3.32851C20.3552 2.93798 19.722 2.93798 19.3315 3.32851L12.0371 10.6229L4.74275 3.32851C4.35223 2.93798 3.71906 2.93798 3.32854 3.32851C2.93801 3.71903 2.93801 4.3522 3.32854 4.74272L10.6229 12.0371L3.32856 19.3314C2.93803 19.722 2.93803 20.3551 3.32856 20.7457C3.71908 21.1362 4.35225 21.1362 4.74277 20.7457L12.0371 13.4513L19.3315 20.7457C19.722 21.1362 20.3552 21.1362 20.7457 20.7457C21.1362 20.3551 21.1362 19.722 20.7457 19.3315L13.4513 12.0371L20.7457 4.74272C21.1362 4.3522 21.1362 3.71903 20.7457 3.32851Z\"\n                    fill=\"#d97706\"\n                  />\n                </svg>\n              </ButtonField>\n            )}\n            {disableFields && (\n              <ButtonField\n                button={{\n                  style: {\n                    margin: 0,\n                    padding: \"5px\",\n                    borderRadius: \"5px\",\n                    background: \"transparent\",\n                  },\n                  onClick: handleAdd,\n                }}\n                tooltipText=\"ADD\"\n              >\n                <svg width=\"20px\" height=\"20px\" viewBox=\"0 0 24 24\">\n                  <title />\n\n                  <g id=\"Complete\">\n                    <g data-name=\"add\" id=\"add-2\">\n                      <g>\n                        <line\n                          fill=\"none\"\n                          stroke=\"#000000\"\n                          strokeLinecap=\"round\"\n                          strokeLinejoin=\"round\"\n                          strokeWidth=\"2\"\n                          x1=\"12\"\n                          x2=\"12\"\n                          y1=\"19\"\n                          y2=\"5\"\n                        />\n\n                        <line\n                          fill=\"none\"\n                          stroke=\"#000000\"\n                          strokeLinecap=\"round\"\n                          strokeLinejoin=\"round\"\n                          strokeWidth=\"2\"\n                          x1=\"5\"\n                          x2=\"19\"\n                          y1=\"12\"\n                          y2=\"12\"\n                        />\n                      </g>\n                    </g>\n                  </g>\n                </svg>\n              </ButtonField>\n            )}\n            <ButtonField\n              disabled={disableFields}\n              button={{\n                style: {\n                  margin: 0,\n                  padding: \"5px\",\n                  borderRadius: \"5px\",\n                  background: \"transparent\",\n                },\n                onClick: handleSave,\n              }}\n              tooltipText=\"SAVE\"\n            >\n              <svg width=\"17px\" height=\"17px\" viewBox=\"0 0 24 24\" fill=\"green\">\n                <path\n                  fillRule=\"evenodd\"\n                  clipRule=\"evenodd\"\n                  d=\"M18.1716 1C18.702 1 19.2107 1.21071 19.5858 1.58579L22.4142 4.41421C22.7893 4.78929 23 5.29799 23 5.82843V20C23 21.6569 21.6569 23 20 23H4C2.34315 23 1 21.6569 1 20V4C1 2.34315 2.34315 1 4 1H18.1716ZM4 3C3.44772 3 3 3.44772 3 4V20C3 20.5523 3.44772 21 4 21L5 21L5 15C5 13.3431 6.34315 12 8 12L16 12C17.6569 12 19 13.3431 19 15V21H20C20.5523 21 21 20.5523 21 20V6.82843C21 6.29799 20.7893 5.78929 20.4142 5.41421L18.5858 3.58579C18.2107 3.21071 17.702 3 17.1716 3H17V5C17 6.65685 15.6569 8 14 8H10C8.34315 8 7 6.65685 7 5V3H4ZM17 21V15C17 14.4477 16.5523 14 16 14L8 14C7.44772 14 7 14.4477 7 15L7 21L17 21ZM9 3H15V5C15 5.55228 14.5523 6 14 6H10C9.44772 6 9 5.55228 9 5V3Z\"\n                  fill=\"green\"\n                />\n              </svg>\n            </ButtonField>\n            <ButtonField\n              disabled={mode !== \"update\"}\n              button={{\n                style: {\n                  margin: 0,\n                  padding: \"5px\",\n                  borderRadius: \"5px\",\n                  background: \"transparent\",\n                },\n                onClick: handleDelete,\n              }}\n              tooltipText=\"DELETE\"\n            >\n              <svg width=\"20px\" height=\"20px\" viewBox=\"0 0 24 24\" fill=\"none\">\n                <path\n                  d=\"M4 7H20\"\n                  stroke=\"red\"\n                  strokeWidth=\"2\"\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                />\n                <path\n                  d=\"M6 7V18C6 19.6569 7.34315 21 9 21H15C16.6569 21 18 19.6569 18 18V7\"\n                  stroke=\"red\"\n                  strokeWidth=\"2\"\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                />\n                <path\n                  d=\"M9 5C9 3.89543 9.89543 3 11 3H13C14.1046 3 15 3.89543 15 5V7H9V5Z\"\n                  stroke=\"red\"\n                  strokeWidth=\"2\"\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                />\n              </svg>\n            </ButtonField>\n          </div>\n          <div\n            style={{\n              marginTop: \"10px\",\n              display: \"flex\",\n              columnGap: \"30px\",\n              rowGap: \"15px\",\n              flexWrap: \"wrap\",\n            }}\n          >\n            <TextInput\n              label={{\n                title: \"Code: \",\n                style: {\n                  fontSize: \"12px\",\n                  fontWeight: \"bold\",\n                  width: \"40px\",\n                },\n              }}\n              input={{\n                disabled: disableFields,\n                type: \"text\",\n                style: { width: \"90px\" },\n              }}\n              inputRef={inputCodeRef}\n            />\n            <SelectInput\n              label={{\n                title: \"Account Classification: \",\n                style: {\n                  fontSize: \"12px\",\n                  fontWeight: \"bold\",\n                  width: \"135px\",\n                },\n              }}\n              selectRef={inputAccountClassificationRef}\n              select={{\n                disabled: disableFields,\n                style: { width: \"120px\" },\n              }}\n              datasource={[\n                { key: \"Asset\" },\n                { key: \"Liability\" },\n                { key: \"Equity\" },\n                { key: \"Revenue\" },\n                { key: \"Expense\" },\n              ]}\n              values={\"key\"}\n              display={\"key\"}\n            />\n            <SelectInput\n              label={{\n                title: \"Account Type: \",\n                style: {\n                  fontSize: \"12px\",\n                  fontWeight: \"bold\",\n                  width: \"90px\",\n                },\n              }}\n              selectRef={inputAccountTypeRef}\n              select={{\n                disabled: disableFields,\n                style: { width: \"120px\" },\n              }}\n              datasource={[\n                { key: \"Group Header\" },\n                { key: \"Header\" },\n                { key: \"Detail\" },\n              ]}\n              values={\"key\"}\n              display={\"key\"}\n            />\n            <TextInput\n              label={{\n                title: \"Name/Title: \",\n                style: {\n                  fontSize: \"12px\",\n                  fontWeight: \"bold\",\n                  width: \"80px\",\n                },\n              }}\n              input={{\n                disabled: disableFields,\n                type: \"text\",\n                style: { width: \"350px\" },\n              }}\n              inputRef={inputNameRef}\n            />\n            <TextInput\n              label={{\n                title: \"ShortName: \",\n                style: {\n                  fontSize: \"12px\",\n                  fontWeight: \"bold\",\n                  width: \"80px\",\n                },\n              }}\n              input={{\n                disabled: disableFields,\n                type: \"text\",\n                style: { width: \"200px\" },\n              }}\n              inputRef={inputShortNameRef}\n            />\n            <TextInput\n              label={{\n                title: \"Required sub-account?: \",\n                style: {\n                  fontSize: \"12px\",\n                  fontWeight: \"bold\",\n                  width: \"140px\",\n                },\n              }}\n              input={{\n                disabled: disableFields,\n\n                type: \"checkbox\",\n                style: { width: \"12px\", height: \"12px\" },\n              }}\n              inputRef={inputRequiredSubAccountRef}\n            />\n            <TextInput\n              label={{\n                title: \"Required I.D.?: \",\n                style: {\n                  fontSize: \"12px\",\n                  fontWeight: \"bold\",\n                  width: \"85px\",\n                },\n              }}\n              input={{\n                disabled: disableFields,\n\n                type: \"checkbox\",\n                style: { width: \"12px\", height: \"12px\" },\n              }}\n              inputRef={inputRequiredIDRef}\n            />\n            <TextInput\n              label={{\n                title: \"Mark As Inactive: \",\n                style: {\n                  fontSize: \"12px\",\n                  fontWeight: \"bold\",\n                  width: \"100px\",\n                },\n              }}\n              input={{\n                disabled: disableFields,\n\n                type: \"checkbox\",\n                style: { width: \"12px\", height: \"12px\" },\n              }}\n              inputRef={inputMarkInactiveRef}\n            />\n          </div>\n        </div>\n        <UpwardTable\n          ref={tableRef}\n          rows={rows}\n          column={chartAccountColumn}\n          width={width}\n          height={height}\n          dataReadOnly={true}\n          onSelectionChange={onSelectionChange}\n          isMultipleSelect={false}\n        />\n      </div>\n    </div>\n  );\n}\n","import Swal from \"sweetalert2\";\n\nexport function codeCondfirmationAlert(props: {\n  cb: (userCodeConfirmation: string) => void;\n  isUpdate: boolean;\n  isConfirm?: () => void;\n  isDeclined?: () => void;\n  text?: string;\n}) {\n  Swal.fire({\n    title: `Are you sure!`,\n    html: props?.text\n      ? props?.text\n      : props.isUpdate\n      ? `Are you sure you want to make this change?`\n      : \"Are you sure you want to delete this?\",\n    icon: \"warning\",\n    input: \"text\",\n    inputAttributes: {\n      autocapitalize: \"off\",\n    },\n    showCancelButton: true,\n    confirmButtonText: \"Save\",\n    confirmButtonColor: \"green\",\n    showLoaderOnConfirm: true,\n    preConfirm: async (userCodeConfirmation) => {\n      try {\n        props.cb(userCodeConfirmation);\n      } catch (error) {\n        Swal.showValidationMessage(`\n            Request failed: ${error}\n          `);\n      }\n    },\n    allowOutsideClick: () => !Swal.isLoading(),\n  }).then((result) => {\n    if (result.isConfirmed) {\n      if (props.isConfirm) {\n        return props.isConfirm();\n      }\n    }\n    if (props.isDeclined) {\n      props.isDeclined();\n    }\n  });\n}\n\nexport function saveCondfirmationAlert(props: {\n  isConfirm?: () => void;\n  isDeclined?: () => void;\n  text?: string;\n}) {\n  Swal.fire({\n    title: \"Are you sure?\",\n    text: props?.text ? props?.text : \"Do you want to proceed with saving?\",\n    icon: \"warning\",\n    showCancelButton: true,\n    confirmButtonColor: \"#3085d6\",\n    cancelButtonColor: \"#d33\",\n    confirmButtonText: \"Yes, save it!\",\n  }).then((result) => {\n    if (result.isConfirmed) {\n      if (props.isConfirm) {\n        return props.isConfirm();\n      }\n    }\n    if (props.isDeclined) {\n      props.isDeclined();\n    }\n  });\n}\n"],"names":["TextFormatedInput","_ref","input","label","inputRef","icon","_ref$iconPosition","iconPosition","_ref$disableIcon","disableIcon","_ref$onIconClick","onIconClick","e","_ref$onChange","onChange","id","useId","formatNumber","value","parts","split","replace","join","unformatNumber","_jsxs","style","display","alignItems","position","children","_jsx","_objectSpread","htmlFor","title","left","zIndex","ref","type","height","target","test","handleChange","onBlur","includes","length","ensureTwoDecimals","handleBlur","onClick","right","top","transform","cursor","justifyContent","background","pointerEvents","TextInput","_ref2","_ref2$iconPosition","_ref2$disableIcon","_ref2$onIconClick","TextAreaInput","_ref3","textarea","_inputRef","_ref3$iconPosition","_ref3$disableIcon","_ref3$onIconClick","SelectInput","_ref4","select","selectRef","_ref4$datasource","datasource","_ref4$values","values","_ref4$display","className","concat","map","itm","idx","ButtonField","_ref5","buttonRetRef","button","_ref5$tooltipText","tooltipText","_ref5$disabled","disabled","UpwardTable","forwardRef","UpwardTableRef","_pages$pageNumber","rows","column","width","dataReadOnly","_ref$onSelectionChang","onSelectionChange","_ref$isMultipleSelect","isMultipleSelect","_ref$freeze","freeze","onKeyDown","_ref$inputsearchselec","inputsearchselector","_ref$isRowSelectable","isRowSelectable","_ref$unSelectable","unSelectable","isLoading","onRightClick","_useState","useState","_useState2","_slicedToArray","pages","setPages","_useState3","_useState4","pageNumber","setPageNumber","onSelectionChangeRef","useRef","onKeyDownRef","_useState5","filter","hide","_useState6","columns","setColumns","_useState7","_useState8","hoveredColumn","setHoveredColumn","_useState9","_useState10","selectedRows","setSelectedRows","_useState11","_useState12","lastSelectedRowIndex","setLastSelectedRowIndex","_useState13","_useState14","selectedItems","setSelectedItems","divRef","_useState15","_useState16","_clickTimeout","_setClickTimeout","useEffect","_pages","arr","chunkSize","arguments","undefined","result","i","push","slice","formatArrayIntoChunks","startResize","index","preventDefault","stopPropagation","startX","clientX","startWidth","doDrag","moveEvent","newWidth","updatedColumns","_toConsumableArray","document","addEventListener","stopDrag","removeEventListener","handleMouseEnter","handleMouseLeave","useImperativeHandle","resetTableSelected","row","querySelector","scrollIntoView","block","behavior","getSelectedIndex","getSelectedRows","d","getFirstColumn","getParentElement","current","getSelectedRowsOnClick","setSelectRows","indx","key","prevIndex","_row$querySelector","newPrevIndex","focus","tagName","divInput","_row$querySelector2","flexDirection","minHeight","tabIndex","col","fontWeight","defaultValue","headerName","readOnly","onMouseDown","onMouseEnter","onMouseLeave","rowIndex","event","shiftKey","rangeStart","Math","min","rangeEnd","max","newSelectedRows","selectedItemsParams","newSelectedRowsFiltered","selectedRowData","removeNullValue","data","getIndexAndData","ctrlKey","metaKey","handleRowClick","onDoubleClick","clearTimeout","timeoutId","setTimeout","handleRowDoubleClick","handleRowKeyDown","onContextMenu","rowSelected","handleRightClick","colIndex","field","Pagination","count","reducer","state","action","_defineProperty","chartAccountColumn","queryKey","ChartAccount","_queryFn","_mutationFn","_mutationFn2","_mutationFn3","tableRef","inputSearchRef","inputCodeRef","inputAccountClassificationRef","inputAccountTypeRef","inputNameRef","inputShortNameRef","inputRequiredSubAccountRef","inputRequiredIDRef","inputMarkInactiveRef","_useContext","useContext","AuthContext","myAxios","user","setRows","mode","setMode","_useQuery","useQuery","queryFn","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_inputSearchRef$curre","_inputSearchRef$curre2","wrap","_context","prev","next","get","headers","Authorization","accessToken","abrupt","sent","stop","apply","onSuccess","res","_tableRef$current","chartAccount","resetField","refetchOnWindowFocus","refetchChartAccountSearch","refetch","_useMutation","useMutation","mutationKey","mutationFn","_x","_callee2","variables","_context2","post","mutateAdd","mutate","loadingAdd","_useMutation2","_x2","_callee3","_context3","mutateEdit","loadingEdit","_useMutation3","_x3","_callee4","_context4","mutateDelete","loadingDelete","success","Swal","message","showConfirmButton","timer","then","handleCancel","_tableRef$current2","selectedIndex","checked","window","innerWidth","innerHeight","disableFields","flex","backgroundColor","margin","columnGap","fontSize","padding","borderRadius","xmlns","viewBox","fill","_inputCodeRef$current4","stroke","strokeLinecap","strokeLinejoin","strokeWidth","x1","x2","y1","y2","_inputCodeRef$current","_inputNameRef$current","_inputShortNameRef$cu","_inputCodeRef$current2","_inputNameRef$current2","_inputShortNameRef$cu2","_inputCodeRef$current3","_inputNameRef$current3","_inputShortNameRef$cu3","_inputAccountClassifi","_inputAccountTypeRef$","_inputRequiredIDRef$c","_inputRequiredSubAcco","_inputMarkInactiveRef","Acct_Code","Acct_Title","Short","Account","Acct_Type","IDNo","SubAccnt","Inactive","search","codeCondfirmationAlert","isUpdate","cb","userCodeConfirmation","saveCondfirmationAlert","isConfirm","fillRule","clipRule","_inputCodeRef$current5","marginTop","rowGap","flexWrap","selectedRow","trim","props","_preConfirm","html","text","inputAttributes","autocapitalize","showCancelButton","confirmButtonText","confirmButtonColor","showLoaderOnConfirm","preConfirm","error","allowOutsideClick","isConfirmed","isDeclined","cancelButtonColor"],"sourceRoot":""}