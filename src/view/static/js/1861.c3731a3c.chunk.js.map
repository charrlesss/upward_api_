{"version":3,"file":"static/js/1861.c3731a3c.chunk.js","mappings":"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","sources":["components/DatePicker.tsx","components/NumberFormat.tsx","feautures/Admin/Task/Accounting/CashDisbursement.tsx","lib/formatDate.ts","../node_modules/@mui/icons-material/RestartAlt.js","../node_modules/@mui/material/colors/deepOrange.js"],"sourcesContent":["import { LocalizationProvider } from \"@mui/x-date-pickers/LocalizationProvider\";\nimport { AdapterDateFns } from \"@mui/x-date-pickers/AdapterDateFns\";\nimport { DatePicker } from \"@mui/x-date-pickers\";\nexport default function CustomDatePicker({\n  label,\n  name,\n  onChange,\n  value,\n  onKeyDown,\n  inputRef,\n  datePickerRef,\n  fullWidth,\n  textField,\n  minWidth = \"200px\",\n  ...rest\n}: any) {\n  return (\n    <LocalizationProvider dateAdapter={AdapterDateFns}>\n      <DatePicker\n      floatingLabelStyle={{color: \"black\" }}\n        value={value}\n        onChange={onChange}\n        ref={datePickerRef}\n        slotProps={{\n          textField: {\n            size: \"small\",\n            label,\n            name,\n            onKeyDown,\n            inputRef: inputRef,\n            fullWidth,\n\n            ...textField,\n          },\n        }}\n        InputLabelProps={{\n          sx: {\n            color: \"black\",\n          },\n        }}\n        sx={{\n          minWidth,\n          fieldset: { borderColor: \"black\" },\n          \".MuiFormLabel-root\": { fontSize: \"14px\" },\n          \".MuiFormLabel-root[data-shrink=false]\": {\n            top: \"-5px\",\n          },\n        }}\n        {...rest}\n      />\n    </LocalizationProvider>\n  );\n}\n","import React from \"react\";\nimport { NumericFormat, NumericFormatProps } from \"react-number-format\";\n\ninterface CustomProps {\n  onChange: (event: { target: { name: string; value: string } }) => void;\n  name: string;\n}\n\nexport const NumericFormatCustom = React.forwardRef<\n  NumericFormatProps,\n  CustomProps\n>(function NumericFormatCustom(props, ref) {\n  const { onChange, ...other } = props;\n\n  return (\n    <NumericFormat\n      {...other}\n      getInputRef={ref}\n      onValueChange={(values) => {\n        onChange({\n          target: {\n            name: props.name,\n            value: values.value,\n          },\n        });\n      }}\n      allowNegative={false}\n      thousandSeparator\n      valueIsNumericString\n      //   prefix=\"$\"\n    />\n  );\n});\n","import { useReducer, useContext, useState, useRef, useEffect } from \"react\";\nimport {\n  TextField,\n  Button,\n  FormControl,\n  InputAdornment,\n  IconButton,\n  InputLabel,\n  OutlinedInput,\n  Select,\n  MenuItem,\n  Modal,\n  Typography,\n  Box,\n  Checkbox,\n  FormControlLabel,\n} from \"@mui/material\";\nimport CustomDatePicker from \"../../../../components/DatePicker\";\nimport LoadingButton from \"@mui/lab/LoadingButton\";\nimport AddIcon from \"@mui/icons-material/Add\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport Swal from \"sweetalert2\";\nimport { AuthContext } from \"../../../../components/AuthContext\";\nimport RestartAltIcon from \"@mui/icons-material/RestartAlt\";\nimport { useMutation, useQuery, useQueryClient } from \"react-query\";\nimport { NumericFormatCustom } from \"../../../../components/NumberFormat\";\nimport useQueryModalTable from \"../../../../hooks/useQueryModalTable\";\nimport { wait } from \"../../../../lib/wait\";\nimport { GridRowSelectionModel } from \"@mui/x-data-grid\";\nimport NotInterestedIcon from \"@mui/icons-material/NotInterested\";\nimport { LocalizationProvider } from \"@mui/x-date-pickers/LocalizationProvider\";\nimport { AdapterDateFns } from \"@mui/x-date-pickers/AdapterDateFns\";\nimport { DatePicker } from \"@mui/x-date-pickers\";\nimport { deepOrange, grey } from \"@mui/material/colors\";\nimport formatDate from \"../../../../lib/formatDate\";\nimport Table from \"../../../../components/Table\";\nimport {\n  codeCondfirmationAlert,\n  saveCondfirmationAlert,\n} from \"../../../../lib/confirmationAlert\";\nimport ReactDOMServer from \"react-dom/server\";\nimport { flushSync } from \"react-dom\";\nimport SaveIcon from \"@mui/icons-material/Save\";\n\nconst initialState = {\n  sub_refNo: \"\",\n  refNo: \"\",\n  dateEntry: new Date(),\n  explanation: \"\",\n  particulars: \"\",\n\n  code: \"\",\n  acctName: \"\",\n  subAcct: \"\",\n  subAcctName: \"\",\n  IDNo: \"\",\n  ClientName: \"\",\n  address: \"\",\n  credit: \"\",\n  debit: \"\",\n  checkNo: \"\",\n  checkDate: new Date(),\n  TC_Code: \"\",\n  TC_Desc: \"\",\n  remarks: \"\",\n  Payto: \"\",\n  vatType: \"NON-VAT\",\n  invoice: \"\",\n  BranchCode: \"HO\",\n  totalDebit: \"\",\n  totalCredit: \"\",\n  totalBalance: \"\",\n\n  jobAutoExp: false,\n  jobTransactionDate: new Date(),\n  jobType: \"\",\n  search: \"\",\n  cashMode: \"\",\n};\n\nexport const reducer = (state: any, action: any) => {\n  switch (action.type) {\n    case \"UPDATE_FIELD\":\n      return {\n        ...state,\n        [action.field]: action.value,\n      };\n    default:\n      return state;\n  }\n};\n\nconst selectedCollectionColumns = [\n  { field: \"code\", headerName: \"Code\", minWidth: 150 },\n  { field: \"acctName\", headerName: \"Account Name\", minWidth: 300 },\n  {\n    field: \"subAcctName\",\n    headerName: \"Sub Account\",\n    flex: 1,\n    minWidth: 170,\n  },\n  { field: \"ClientName\", headerName: \"Name\", flex: 1, minWidth: 300 },\n  { field: \"debit\", headerName: \"Debit\", minWidth: 80 },\n  { field: \"credit\", headerName: \"Credit\", minWidth: 100 },\n  { field: \"checkNo\", headerName: \"Check No\", minWidth: 80 },\n  { field: \"checkDate\", headerName: \"Check Date\", minWidth: 100 },\n  // hide\n  { field: \"TC_Code\", headerName: \"TC\", minWidth: 100 },\n  {\n    field: \"remarks\",\n    headerName: \"Remarks\",\n    flex: 1,\n    minWidth: 300,\n  },\n  { field: \"Payto\", headerName: \"Payto\", minWidth: 300 },\n  { field: \"vatType\", headerName: \"Vat Type\", minWidth: 100 },\n  { field: \"invoice\", headerName: \"Invoice\", flex: 1, minWidth: 200 },\n  { field: \"TempID\", headerName: \"TempId\", hide: true },\n  { field: \"IDNo\", headerName: \"I.D.\", flex: 1, minWidth: 300, hide: true },\n  {\n    field: \"BranchCode\",\n    headerName: \"BranchCode\",\n    flex: 1,\n    minWidth: 300,\n    hide: true,\n  },\n  {\n    field: \"addres\",\n    headerName: \"addres\",\n    hide: true,\n  },\n];\n\nfunction formatDebitCredit(arr: Array<any>) {\n  return arr.map((itm) => {\n    itm.debit = parseFloat(\n      itm.debit.toString().replace(/,/g, \"\")\n    ).toLocaleString(\"en-US\", {\n      minimumFractionDigits: 2,\n      maximumFractionDigits: 2,\n    });\n    itm.credit = parseFloat(\n      itm.credit.toString().replace(/,/g, \"\")\n    ).toLocaleString(\"en-US\", {\n      minimumFractionDigits: 2,\n      maximumFractionDigits: 2,\n    });\n    return itm;\n  });\n}\nexport default function CashDisbursement() {\n  const refParent = useRef<HTMLDivElement>(null);\n  const { myAxios, user } = useContext(AuthContext);\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const [openJobs, setOpenJobs] = useState(false);\n  const [isPayToEnter, setIsPayToEnter] = useState(false);\n  const [hasSelected, setHasSelected] = useState(false);\n  const [editTransaction, setEditTransaction] = useState({\n    edit: false,\n    updateId: \"\",\n  });\n\n  const [PrintPayeeDetails, setPrintPayeeDetails] = useState([])\n  const [PrintTable, setPrintTable] = useState([])\n  const [cashDisbursement, setCashDisbursement] =\n    useState<GridRowSelectionModel>([]);\n\n\n  const queryClient = useQueryClient();\n  const datePickerRef = useRef<HTMLElement>(null);\n  const checkDatePickerRef = useRef<HTMLElement>(null);\n  const reloadIDButtonRef = useRef<HTMLButtonElement>(null);\n  const explanationInputRef = useRef<HTMLInputElement>(null);\n  const particularsInputRef = useRef<HTMLInputElement>(null);\n\n  const idInputRef = useRef<HTMLInputElement>(null);\n  const idInputRefPayTo = useRef<HTMLInputElement>(null);\n  const vatRef = useRef<HTMLInputElement>(null);\n  const debitInputRef = useRef<HTMLInputElement>(null);\n  const tcInputRef = useRef<HTMLInputElement>(null);\n\n  const chartAccountSearchInput = useRef<HTMLInputElement>(null);\n  const IdsSearchInput = useRef<HTMLInputElement>(null);\n  const codeInputRef = useRef<HTMLInputElement>(null);\n  const table = useRef<any>(null);\n\n\n  const dateRef = useRef<HTMLInputElement>(null)\n  const accountNameRef = useRef<HTMLInputElement>(null)\n  const subAccountRef = useRef<HTMLInputElement>(null)\n  const creditRef = useRef<HTMLInputElement>(null)\n  const checkNoRef = useRef<HTMLInputElement>(null)\n  const checkDateRef = useRef<HTMLInputElement>(null)\n  const tcDateRef = useRef<HTMLInputElement>(null)\n  const paytoRef = useRef<HTMLInputElement>(null)\n  const invoiceRef = useRef<HTMLInputElement>(null)\n\n\n  const {\n    mutate: mutateOnPrint,\n    isLoading: isLoadingOnPrint,\n  } = useMutation({\n    mutationKey: \"get-selected-search-general-journal\",\n    mutationFn: async (variable: any) =>\n      await myAxios.post(\n        \"/task/accounting/cash-disbursement/print\",\n        variable,\n        {\n          headers: {\n            Authorization: `Bearer ${user?.accessToken}`,\n          },\n        }\n      ),\n    onSuccess: (res) => {\n      const response = res as any;\n      console.log(response)\n      flushSync(() => {\n        localStorage.removeItem(\"printString\");\n        localStorage.setItem(\"dataString\", JSON.stringify(response.data.print.PrintTable));\n        localStorage.setItem(\"paper-width\", \"8.5in\");\n        localStorage.setItem(\"paper-height\", \"11in\");\n        localStorage.setItem(\"module\", \"cash-disbursement\");\n        localStorage.setItem(\"state\", JSON.stringify(response.data.print.PrintPayeeDetails));\n        localStorage.setItem(\n          \"column\",\n          JSON.stringify([\n            { datakey: \"Account\", header: \"ACCOUNT\", width: \"200px\" },\n            { datakey: \"Identity\", header: \"IDENTITY\", width: \"277px\" },\n            { datakey: \"Debit\", header: \"DEBIT\", width: \"100px\" },\n            { datakey: \"Credit\", header: \"CREDIT\", width: \"100px\" },\n          ])\n        );\n        localStorage.setItem(\n          \"title\",\n          user?.department === \"UMIS\"\n            ? \"UPWARD MANAGEMENT INSURANCE SERVICES\\n\"\n            : \"UPWARD CONSULTANCY SERVICES AND MANAGEMENT INC.\\n\"\n        );\n      });\n      window.open(\"/dashboard/print\", \"_blank\");\n\n\n\n    },\n  });\n\n\n  const {\n    isLoading: loadingGeneralJournalGenerator,\n    refetch: refetchGeneralJournalGenerator,\n  } = useQuery({\n    queryKey: \"general-journal-id-generator\",\n    queryFn: async () =>\n      await myAxios.get(`/task/accounting/cash-disbursement/generate-id`, {\n        headers: {\n          Authorization: `Bearer ${user?.accessToken}`,\n        },\n      }),\n    refetchOnWindowFocus: false,\n    onSuccess: (data) => {\n      const response = data as any;\n      dispatch({\n        type: \"UPDATE_FIELD\",\n        field: \"refNo\",\n        value: response.data.generatedId[0].id,\n      });\n      dispatch({\n        type: \"UPDATE_FIELD\",\n        field: \"sub_refNo\",\n        value: response.data.generatedId[0].id,\n      });\n    },\n  });\n\n  const {\n    mutate: addCashDisbursementMutate,\n    isLoading: loadingCashDisbursementMutate,\n  } = useMutation({\n    mutationKey: \"add-cash-disbursement\",\n    mutationFn: async (variable: any) =>\n      await myAxios.post(\n        \"/task/accounting/cash-disbursement/add-cash-disbursement\",\n        variable,\n        {\n          headers: {\n            Authorization: `Bearer ${user?.accessToken}`,\n          },\n        }\n      ),\n    onSuccess: (res) => {\n      const response = res as any;\n      if (response.data.success) {\n        queryClient.invalidateQueries(\"search-general-journal\");\n        setHasSelected(false);\n        setNewStateValue(dispatch, initialState);\n        refetchGeneralJournalGenerator();\n        setCashDisbursement([]);\n        setEditTransaction({\n          edit: false,\n          updateId: \"\",\n        });\n\n        return Swal.fire({\n          position: \"center\",\n          icon: \"success\",\n          title: response.data.message,\n          timer: 1500,\n        });\n      }\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: response.data.message,\n        timer: 1500,\n      });\n    },\n  });\n\n  const { mutate: mutateJob, isLoading: isLoadingJob } = useMutation({\n    mutationKey: \"jobs\",\n    mutationFn: async (variable: any) =>\n      await myAxios.post(\"/task/accounting/general-journal/jobs\", variable, {\n        headers: {\n          Authorization: `Bearer ${user?.accessToken}`,\n        },\n      }),\n    onSuccess: (res) => {\n      const response = res as any;\n      setCashDisbursement([]);\n      setCashDisbursement(response.data.jobs);\n      setOpenJobs(false);\n    },\n  });\n\n  const {\n    mutate: mutateVoidCashDisbursement,\n    isLoading: loadingVoidCashDisbursement,\n  } = useMutation({\n    mutationKey: \"void-cash-disbursement\",\n    mutationFn: async (variable: any) =>\n      await myAxios.post(\n        \"/task/accounting/cash-disbursement/void-cash-disbursement\",\n        variable,\n        {\n          headers: {\n            Authorization: `Bearer ${user?.accessToken}`,\n          },\n        }\n      ),\n    onSuccess: (res) => {\n      const response = res as any;\n      if (response.data.success) {\n        queryClient.invalidateQueries(\"search-general-journal\");\n        setHasSelected(false);\n        setNewStateValue(dispatch, initialState);\n        refetchGeneralJournalGenerator();\n        setCashDisbursement([]);\n        setEditTransaction({\n          edit: false,\n          updateId: \"\",\n        });\n        return Swal.fire({\n          position: \"center\",\n          icon: \"success\",\n          title: response.data.message,\n          timer: 1500,\n        });\n      }\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: response.data.message,\n        timer: 1500,\n      });\n    },\n  });\n\n  const {\n    mutate: getSearchSelectedCashDisbursement,\n    isLoading: loadingGetSearchSelectedCashDisbursement,\n  } = useMutation({\n    mutationKey: \"get-selected-search-general-journal\",\n    mutationFn: async (variable: any) =>\n      await myAxios.post(\n        \"/task/accounting/cash-disbursement/get-selected-search-cash-disbursement\",\n        variable,\n        {\n          headers: {\n            Authorization: `Bearer ${user?.accessToken}`,\n          },\n        }\n      ),\n    onSuccess: (res) => {\n      const response = res as any;\n      const selected = response.data.selectedCashDisbursement;\n      const { explanation, dateEntry, refNo, particulars } = selected[0];\n      dispatch({\n        type: \"UPDATE_FIELD\",\n        field: \"sub_refNo\",\n        value: refNo,\n      });\n      dispatch({\n        type: \"UPDATE_FIELD\",\n        field: \"refNo\",\n        value: refNo,\n      });\n      dispatch({\n        type: \"UPDATE_FIELD\",\n        field: \"dateEntry\",\n        value: dateEntry,\n      });\n      dispatch({\n        type: \"UPDATE_FIELD\",\n        field: \"explanation\",\n        value: explanation,\n      });\n      dispatch({\n        type: \"UPDATE_FIELD\",\n        field: \"particulars\",\n        value: particulars,\n      });\n      setCashDisbursement(selected);\n\n\n\n      setHasSelected(true);\n    },\n  });\n\n  const {\n    ModalComponent: ModalSearchCashDisbursement,\n    openModal: openSearchCashDisbursement,\n    isLoading: isLoadingSearchCashDisbursement,\n    closeModal: closeSearchCashDisbursement,\n  } = useQueryModalTable({\n    link: {\n      url: \"/task/accounting/cash-disbursement/search-cash-disbursement\",\n      queryUrlName: \"searchCashDisbursement\",\n    },\n    columns: [\n      { field: \"Date_Entry\", headerName: \"Date\", width: 130 },\n      { field: \"Source_No\", headerName: \"Ref No.\", width: 250 },\n      {\n        field: \"Explanation\",\n        headerName: \"Explanation\",\n        flex: 1,\n      },\n    ],\n    queryKey: \"search-cash-disbursement\",\n    uniqueId: \"Source_No\",\n    responseDataKey: \"search\",\n    onSelected: (selectedRowData, data) => {\n      getSearchSelectedCashDisbursement({\n        Source_No: selectedRowData[0].Source_No,\n      });\n      handleInputChange({\n        target: { value: \"edit\", name: \"cashMode\" },\n      });\n      setCashDisbursement([]);\n      setEditTransaction({\n        edit: false,\n        updateId: \"\",\n      });\n\n      closeSearchCashDisbursement();\n    },\n    onCloseFunction: (value: any) => {\n      dispatch({ type: \"UPDATE_FIELD\", field: \"search\", value });\n    },\n    searchRef: chartAccountSearchInput,\n  });\n\n  const {\n    ModalComponent: ModalChartAccountSearch,\n    openModal: openChartAccountSearch,\n    isLoading: isLoadingChartAccountSearch,\n    closeModal: closeChartAccountSearch,\n  } = useQueryModalTable({\n    link: {\n      url: \"/task/accounting/general-journal/get-chart-account\",\n      queryUrlName: \"chartAccountSearch\",\n    },\n    columns: [\n      { field: \"Acct_Code\", headerName: \"Account Code\", width: 130 },\n      { field: \"Acct_Title\", headerName: \"Account Title.\", width: 250 },\n      {\n        field: \"Short\",\n        headerName: \"Short\",\n        flex: 1,\n      },\n    ],\n    queryKey: \"get-chart-account\",\n    uniqueId: \"Acct_Code\",\n    responseDataKey: \"getChartOfAccount\",\n    onSelected: (selectedRowData, data) => {\n      dispatch({\n        type: \"UPDATE_FIELD\",\n        field: \"code\",\n        value: selectedRowData[0].Acct_Code,\n      });\n      dispatch({\n        type: \"UPDATE_FIELD\",\n        field: \"acctName\",\n        value: selectedRowData[0].Acct_Title,\n      });\n      closeChartAccountSearch();\n\n      setTimeout(() => {\n        idInputRef.current?.focus();\n      }, 250);\n    },\n    searchRef: chartAccountSearchInput,\n  });\n\n  const {\n    ModalComponent: ModalPolicyIdClientIdRefId,\n    openModal: openPolicyIdClientIdRefId,\n    isLoading: isLoadingPolicyIdClientIdRefId,\n    closeModal: closePolicyIdClientIdRefId,\n  } = useQueryModalTable({\n    link: {\n      url: \"/task/accounting/search-pdc-policy-id\",\n      queryUrlName: \"searchPdcPolicyIds\",\n    },\n    columns: [\n      { field: \"Type\", headerName: \"Type\", width: 130 },\n      { field: \"IDNo\", headerName: \"ID No.\", width: 200 },\n      {\n        field: \"Name\",\n        headerName: \"Name\",\n        flex: 1,\n      },\n      {\n        field: \"ID\",\n        headerName: \"ID\",\n        hide: true,\n      },\n    ],\n    queryKey: \"get-policyId-ClientId-RefId\",\n    uniqueId: \"IDNo\",\n    responseDataKey: \"clientsId\",\n    onSelected: (selectedRowData) => {\n      if (isPayToEnter) {\n        dispatch({\n          type: \"UPDATE_FIELD\",\n          field: \"Payto\",\n          value: selectedRowData[0].Name,\n        });\n\n        closePolicyIdClientIdRefId();\n        setTimeout(() => {\n          vatRef.current?.focus();\n        }, 200);\n      } else {\n        dispatch({\n          type: \"UPDATE_FIELD\",\n          field: \"ClientName\",\n          value: selectedRowData[0].Name,\n        });\n        dispatch({\n          type: \"UPDATE_FIELD\",\n          field: \"IDNo\",\n          value: selectedRowData[0].IDNo,\n        });\n        dispatch({\n          type: \"UPDATE_FIELD\",\n          field: \"subAcct\",\n          value: selectedRowData[0].sub_account,\n        });\n        dispatch({\n          type: \"UPDATE_FIELD\",\n          field: \"subAcctName\",\n          value: selectedRowData[0].ShortName,\n        });\n        dispatch({\n          type: \"UPDATE_FIELD\",\n          field: \"address\",\n          value: selectedRowData[0].address,\n        });\n        closePolicyIdClientIdRefId();\n        setTimeout(() => {\n          debitInputRef.current?.focus();\n        }, 200);\n      }\n    },\n    searchRef: IdsSearchInput,\n  });\n\n  const {\n    ModalComponent: ModalTransactionAccount,\n    openModal: openTransactionAccount,\n    isLoading: isLoadingTransactionAccount,\n    closeModal: closeTransactionAccount,\n  } = useQueryModalTable({\n    link: {\n      url: \"/task/accounting/general-journal/get-transaction-account\",\n      queryUrlName: \"transactionCodeSearch\",\n    },\n    columns: [\n      { field: \"Code\", headerName: \"Code\", width: 130 },\n      {\n        field: \"Description\",\n        headerName: \"Description\",\n        flex: 1,\n      },\n    ],\n    queryKey: \"get-transaction-account\",\n    uniqueId: \"Code\",\n    responseDataKey: \"getTransactionAccount\",\n    onSelected: (selectedRowData) => {\n      dispatch({\n        type: \"UPDATE_FIELD\",\n        field: \"TC_Code\",\n        value: selectedRowData[0].Code,\n      });\n      dispatch({\n        type: \"UPDATE_FIELD\",\n        field: \"TC_Desc\",\n        value: selectedRowData[0].Description,\n      });\n      closeTransactionAccount();\n      setTimeout(() => {\n        tcInputRef.current?.focus();\n      }, 250);\n    },\n    searchRef: IdsSearchInput,\n  });\n\n  useEffect(() => {\n    const debit = cashDisbursement.reduce((a: number, item: any) => {\n      return a + parseFloat(item.debit.replace(/,/g, \"\"));\n    }, 0);\n    const credit = cashDisbursement.reduce((a: number, item: any) => {\n      return a + parseFloat(item.credit.replace(/,/g, \"\"));\n    }, 0);\n    dispatch({\n      type: \"UPDATE_FIELD\",\n      field: \"totalDebit\",\n      value: debit.toFixed(2),\n    });\n    dispatch({\n      type: \"UPDATE_FIELD\",\n      field: \"totalCredit\",\n      value: credit.toFixed(2),\n    });\n    dispatch({\n      type: \"UPDATE_FIELD\",\n      field: \"totalBalance\",\n      value: (debit - credit).toFixed(2),\n    });\n  }, [cashDisbursement]);\n\n  const handleInputChange = (e: any) => {\n    const { name, value } = e.target;\n    dispatch({ type: \"UPDATE_FIELD\", field: name, value });\n  };\n\n  function handleOnSave() {\n    if (state.refNo === \"\") {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: \"Please provide reference number!\",\n        timer: 1500,\n      });\n    }\n    if (state.explanation === \"\") {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: \"Please provide explanation!\",\n        timer: 1500,\n      }).then(() => {\n        wait(300).then(() => {\n          explanationInputRef.current?.focus();\n        });\n      });\n    }\n    if (\n      (state.totalDebit === \"\" && state.totalCredit === \"\") ||\n      (state.totalDebit === \"0.00\" && state.totalCredit === \"0.00\")\n    ) {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title:\n          \"Total Debit and Credit amount must not be zero(0), please double check the entries\",\n        timer: 1500,\n      }).then(() => {\n        wait(300).then(() => { });\n      });\n    }\n    if (state.totalDebit !== state.totalCredit) {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title:\n          \"Total Debit and Credit amount must be balance, please double check the entries\",\n        timer: 1500,\n      }).then(() => {\n        wait(300).then(() => { });\n      });\n    }\n    if (state.cashMode === \"edit\") {\n      codeCondfirmationAlert({\n        isUpdate: true,\n        cb: (userCodeConfirmation) => {\n          addCashDisbursementMutate({\n            hasSelected,\n            refNo: state.refNo,\n            dateEntry: state.dateEntry,\n            explanation: state.explanation,\n            particulars: state.particulars,\n            cashDisbursement,\n            userCodeConfirmation,\n          });\n        },\n      });\n    } else {\n      saveCondfirmationAlert({\n        isConfirm: () => {\n          addCashDisbursementMutate({\n            hasSelected,\n            refNo: state.refNo,\n            dateEntry: state.dateEntry,\n            explanation: state.explanation,\n            particulars: state.particulars,\n            cashDisbursement,\n          });\n        },\n      });\n    }\n  }\n\n  function handleVoid() {\n    codeCondfirmationAlert({\n      isUpdate: false,\n      text: `Are you sure you want to void ${state.refNo}`,\n      cb: (userCodeConfirmation) => {\n        mutateVoidCashDisbursement({\n          refNo: state.refNo,\n          dateEntry: state.dateEntry,\n          userCodeConfirmation,\n        });\n      },\n    });\n  }\n\n  function handleRowSave() {\n    if (isNaN(parseFloat(state.credit))) {\n      state.credit = \"0.00\";\n    }\n    if (isNaN(parseFloat(state.debit))) {\n      state.debit = \"0.00\";\n    }\n    if (state.code === \"\" || state.acctName === \"\") {\n      return openChartAccountSearch(state.code);\n    }\n\n    if (state.subAcctName === \"\" || state.ClientName === \"\") {\n      return openPolicyIdClientIdRefId(state.ClientName);\n    }\n    if (state.credit === state.debit) {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: \"The values for credit and debit must be different\",\n        timer: 1500,\n      });\n    }\n    if (state.code === \"1.01.10\" && state.checkNo === \"\") {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: \"Check No. is Required!\",\n        timer: 1500,\n      });\n    }\n\n    if (state.TC_Code === \"\") {\n      return openTransactionAccount(state.TC_Code);\n    }\n\n    if (state.Payto === \"\" && state.code === \"1.01.10\") {\n      setIsPayToEnter(true);\n      return openPolicyIdClientIdRefId(state.Payto);\n    }\n\n    if (state.code.length >= 200) {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: \"Code is too long!\",\n        timer: 1500,\n      });\n    }\n    if (state.ClientName.length >= 200) {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: \"Client Name is too long!\",\n        timer: 1500,\n      });\n    }\n    if (state.debit.length >= 200) {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: \"Debit is too long!\",\n        timer: 1500,\n      });\n    }\n    if (state.credit.length >= 200) {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: \"Credit is too long!\",\n        timer: 1500,\n      });\n    }\n    if (state.checkNo.length >= 200) {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: \"Check No is too long!\",\n        timer: 1500,\n      });\n    }\n    if (state.TC_Code.length >= 200) {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: \"TC is too long!\",\n        timer: 1500,\n      });\n    }\n    if (state.Payto.length >= 200) {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: \"Pay to is too long!\",\n        timer: 1500,\n      });\n    }\n    if (state.invoice.length >= 200) {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: \"Invoice is too long!\",\n        timer: 1500,\n      });\n    }\n\n    function generateID(array: Array<any>) {\n      const lastItem = array.length ? array[array.length - 1].TempID : \"000\";\n      const numericPart = (parseInt(lastItem.toString().match(/\\d+/)[0]) + 1)\n        .toString()\n        .padStart(3, \"0\");\n      return numericPart;\n    }\n\n    Swal.fire({\n      title: editTransaction.edit\n        ? `Are you sure you want to update row?`\n        : `Are you sure you want to add new row?`,\n      text: \"You won't be able to revert this!\",\n      icon: \"warning\",\n      showCancelButton: true,\n      confirmButtonColor: \"#3085d6\",\n      cancelButtonColor: \"#d33\",\n      confirmButtonText: editTransaction.edit\n        ? \"Yes, update it!\"\n        : \"Yes Add it\",\n    }).then((result) => {\n      if (result.isConfirmed) {\n        setCashDisbursement((d: any) => {\n          if (state.code === \"1.01.10\") {\n            state.checkDate = formatDate(state.checkDate);\n          } else {\n            state.checkDate = \"\";\n          }\n\n          if (state.vatType === \"VAT\" && state.code !== \"1.06.02\") {\n            let taxableamt;\n\n            if (parseFloat(state.debit.replace(/,/g, \"\")) !== 0) {\n              taxableamt = parseFloat(state.debit.replace(/,/g, \"\")) / 1.12;\n              state.debit = taxableamt.toLocaleString(\"en-US\", {\n                minimumFractionDigits: 2,\n                maximumFractionDigits: 2,\n              });\n            } else {\n              taxableamt = parseFloat(state.credit.replace(/,/g, \"\")) / 1.12;\n              state.credit = taxableamt.toLocaleString(\"en-US\", {\n                minimumFractionDigits: 2,\n                maximumFractionDigits: 2,\n              });\n            }\n\n            if (editTransaction.edit) {\n              d = d.map((item: any) => {\n                if (editTransaction.updateId === item.TempID) {\n                  item = {\n                    ...item,\n                    ...state,\n                  };\n                }\n                return item;\n              });\n            } else {\n              d = [\n                ...d,\n                {\n                  ...state,\n                  TempID: generateID(d),\n                },\n              ];\n            }\n\n            let inputtax = taxableamt * 0.12;\n\n            if (parseFloat(state.debit.replace(/,/g, \"\")) !== 0) {\n              state.debit = inputtax.toLocaleString(\"en-US\", {\n                minimumFractionDigits: 2,\n                maximumFractionDigits: 2,\n              });\n            } else {\n              state.credit = inputtax.toLocaleString(\"en-US\", {\n                minimumFractionDigits: 2,\n                maximumFractionDigits: 2,\n              });\n            }\n            d = [\n              ...d,\n              {\n                ...state,\n                code: \"1.06.02\",\n                acctName: \"Input Tax\",\n                TempID: generateID(d),\n              },\n            ];\n          } else {\n            const credit = parseFloat(\n              state.credit.replace(/,/g, \"\")\n            ).toLocaleString(\"en-US\", {\n              minimumFractionDigits: 2,\n              maximumFractionDigits: 2,\n            });\n            const debit = parseFloat(\n              state.debit.replace(/,/g, \"\")\n            ).toLocaleString(\"en-US\", {\n              minimumFractionDigits: 2,\n              maximumFractionDigits: 2,\n            });\n\n            state.credit = credit;\n            state.debit = debit;\n\n            if (editTransaction.edit) {\n              const newD = d.map((item: any) => {\n                if (editTransaction.updateId === item.TempID) {\n                  item = {\n                    ...item,\n                    ...state,\n                  };\n                }\n                return item;\n              });\n              return newD;\n            }\n            d = [\n              ...d,\n              {\n                ...state,\n                TempID: generateID(d),\n              },\n            ];\n          }\n\n          return d;\n        });\n\n        const resetValue = {\n          code: \"\",\n          acctName: \"\",\n          subAcct: \"\",\n          subAcctName: \"\",\n          IDNo: \"\",\n          ClientName: \"\",\n          credit: \"\",\n          debit: \"\",\n          TC_Code: \"\",\n          TC_Desc: \"\",\n          remarks: \"\",\n          vatType: \"NON-VAT\",\n          invoice: \"\",\n          address: \"\",\n          checkNo: \"\",\n          checkDate: new Date(),\n        };\n        setNewStateValue(dispatch, { ...state, ...resetValue });\n        setEditTransaction({ edit: false, updateId: \"\" });\n        wait(300).then(() => {\n          codeInputRef.current?.focus();\n        });\n      }\n    });\n  }\n\n  function handleClickPrint() {\n    mutateOnPrint({ Source_No: state.refNo })\n  }\n  const isDisableField = state.cashMode === \"\";\n\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        flexDirection: \"column\",\n        width: \"100%\",\n        height: \"100%\",\n        flex: 1,\n      }}\n    >\n      <div\n        style={{\n          display: \"flex\",\n          alignItems: \"center\",\n          columnGap: \"5px\",\n        }}\n      >\n        <div\n          style={{\n            display: \"flex\",\n            alignItems: \"center\",\n            columnGap: \"5px\",\n          }}\n        >\n          {isLoadingSearchCashDisbursement ? (\n            <LoadingButton loading={isLoadingSearchCashDisbursement} />\n          ) : (\n            <TextField\n              label=\"Search\"\n              size=\"small\"\n              name=\"search\"\n              value={state.search}\n              onChange={handleInputChange}\n              onKeyDown={(e) => {\n                if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n                  e.preventDefault();\n                  return openSearchCashDisbursement(\n                    (e.target as HTMLInputElement).value\n                  );\n                }\n              }}\n              InputProps={{\n                style: { height: \"27px\", fontSize: \"14px\" },\n              }}\n              sx={{\n                width: \"300px\",\n                height: \"27px\",\n                \".MuiFormLabel-root\": { fontSize: \"14px\" },\n                \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n              }}\n            />\n          )}\n\n          {state.cashMode === \"\" && (\n            <Button\n              sx={{\n                height: \"30px\",\n                fontSize: \"11px\",\n              }}\n              variant=\"contained\"\n              startIcon={<AddIcon sx={{ width: 15, height: 15 }} />}\n              id=\"entry-header-save-button\"\n              onClick={() => {\n                handleInputChange({\n                  target: { value: \"add\", name: \"cashMode\" },\n                });\n              }}\n              color=\"primary\"\n            >\n              New\n            </Button>\n          )}\n          <LoadingButton\n            sx={{\n              height: \"30px\",\n              fontSize: \"11px\",\n            }}\n            loading={loadingCashDisbursementMutate}\n            disabled={state.cashMode === \"\"}\n            onClick={handleOnSave}\n            color=\"success\"\n            variant=\"contained\"\n          >\n            Save\n          </LoadingButton>\n          {state.cashMode !== \"\" && (\n            <LoadingButton\n              sx={{\n                height: \"30px\",\n                fontSize: \"11px\",\n              }}\n              variant=\"contained\"\n              startIcon={<CloseIcon sx={{ width: 15, height: 15 }} />}\n              color=\"error\"\n              onClick={() => {\n                Swal.fire({\n                  title: \"Are you sure?\",\n                  text: \"You won't be able to revert this!\",\n                  icon: \"warning\",\n                  showCancelButton: true,\n                  confirmButtonColor: \"#3085d6\",\n                  cancelButtonColor: \"#d33\",\n                  confirmButtonText: \"Yes, cancel it!\",\n                }).then((result) => {\n                  if (result.isConfirmed) {\n                    refetchGeneralJournalGenerator();\n                    handleInputChange({\n                      target: { value: \"\", name: \"cashMode\" },\n                    });\n                    setNewStateValue(dispatch, initialState);\n                    setCashDisbursement([]);\n                    // setSearchSelected(false);\n                    setEditTransaction({\n                      edit: false,\n                      updateId: \"\",\n                    });\n                  }\n                });\n              }}\n              disabled={state.cashMode === \"\"}\n            >\n              Cancel\n            </LoadingButton>\n          )}\n          <LoadingButton\n            sx={{\n              height: \"30px\",\n              fontSize: \"11px\",\n              background: deepOrange[500],\n              \":hover\": {\n                background: deepOrange[600],\n              },\n            }}\n            onClick={handleVoid}\n            loading={loadingVoidCashDisbursement}\n            disabled={state.cashMode !== \"edit\"}\n            variant=\"contained\"\n            startIcon={<NotInterestedIcon sx={{ width: 20, height: 20 }} />}\n          >\n            Void\n          </LoadingButton>\n          <LoadingButton\n            loading={isLoadingOnPrint}\n            disabled={state.cashMode !== \"edit\"}\n            id=\"basic-button\"\n            aria-haspopup=\"true\"\n            onClick={handleClickPrint}\n            sx={{\n              height: \"30px\",\n              fontSize: \"11px\",\n              color: \"white\",\n              backgroundColor: grey[600],\n              \"&:hover\": {\n                backgroundColor: grey[700],\n              },\n            }}\n          >\n            Print\n          </LoadingButton>\n        </div>\n        <div\n          style={{\n            fontSize: \"13px\",\n            border: \"1px solid #d4d4d8\",\n            width: \"100%\",\n            display: \"flex\",\n            columnGap: \"50px\",\n            height: \"30px\",\n            alignItems: \"center\",\n            justifyContent: \"center\",\n          }}\n        >\n          <p style={{ margin: 0, padding: 0, color: \"black\" }}>\n            <span style={{ fontSize: \"12px\" }}>Total Rows:</span> <strong>{cashDisbursement.length}</strong>\n          </p>\n          <p style={{ margin: 0, padding: 0, color: \"black\" }}>\n            <span style={{ fontSize: \"12px\" }}>Total Debit:</span> <strong>{state.totalDebit}</strong>\n          </p>\n          <p style={{ margin: 0, padding: 0, color: \"black\" }}>\n            <span style={{ fontSize: \"12px\" }}>Total Credit:</span> <strong>{state.totalCredit}</strong>\n          </p>\n          <p style={{ margin: 0, padding: 0, color: \"black\" }}>\n            <span style={{ fontSize: \"12px\" }}>Balance:</span>{\" \"}\n            <strong\n              style={{\n                color:\n                  parseFloat(state.totalBalance.replace(/,/g, \"\")) > 0\n                    ? \"red\"\n                    : \"black\",\n              }}\n            >\n              {state.totalBalance}\n            </strong>\n          </p>\n        </div>\n      </div>\n      <fieldset\n        style={{\n          border: \"1px solid #cbd5e1\",\n          borderRadius: \"5px\",\n          position: \"relative\",\n          width: \"100%\",\n          height: \"auto\",\n          display: \"flex\",\n          marginTop: \"10px\",\n          gap: \"10px\",\n          padding: \"15px\",\n        }}\n      >\n        {loadingGeneralJournalGenerator ? (\n          <LoadingButton loading={loadingGeneralJournalGenerator} />\n        ) : (\n          <FormControl\n            variant=\"outlined\"\n            size=\"small\"\n            disabled={isDisableField}\n            sx={{\n              width: \"140px\",\n              \".MuiFormLabel-root\": {\n                fontSize: \"14px\",\n                background: \"white\",\n                zIndex: 99,\n                padding: \"0 3px\",\n              },\n              \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n            }}\n          >\n            <InputLabel htmlFor=\"return-check-id-field\">\n              Reference CV-\n            </InputLabel>\n            <OutlinedInput\n              sx={{\n                height: \"27px\",\n                fontSize: \"14px\",\n              }}\n              disabled={isDisableField}\n              fullWidth\n              label=\"Reference CV-\"\n              name=\"refNo\"\n              value={state.refNo}\n              onChange={handleInputChange}\n              onKeyDown={(e) => {\n                if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n                  e.preventDefault();\n                  dateRef.current?.focus()\n                  // return handleOnSave();\n                }\n              }}\n              readOnly={user?.department !== \"UCSMI\"}\n              id=\"return-check-id-field\"\n              endAdornment={\n                <InputAdornment position=\"end\">\n                  <IconButton\n                    ref={reloadIDButtonRef}\n                    disabled={isDisableField}\n                    aria-label=\"search-client\"\n                    color=\"secondary\"\n                    edge=\"end\"\n                    onClick={() => {\n                      refetchGeneralJournalGenerator();\n                    }}\n                  >\n                    <RestartAltIcon />\n                  </IconButton>\n                </InputAdornment>\n              }\n            />\n          </FormControl>\n        )}\n        <CustomDatePicker\n          fullWidth={false}\n          disabled={isDisableField}\n          label=\"Date\"\n          onChange={(value: any) => {\n            dispatch({\n              type: \"UPDATE_FIELD\",\n              field: \"dateEntry\",\n              value: value,\n            });\n          }}\n          value={new Date(state.dateEntry)}\n          inputRef={dateRef}\n          onKeyDown={(e: any) => {\n            if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n              // const timeout = setTimeout(() => {\n              //   datePickerRef.current?.querySelector(\"button\")?.click();\n              //   clearTimeout(timeout);\n              // }, 150);\n              explanationInputRef.current?.focus()\n            }\n          }}\n          datePickerRef={datePickerRef}\n          textField={{\n            InputLabelProps: {\n              style: {\n                fontSize: \"14px\",\n              },\n            },\n            InputProps: {\n              style: { height: \"27px\", fontSize: \"14px\", width: \"150px\" },\n            },\n          }}\n        />\n        <TextField\n          disabled={isDisableField}\n          label=\"Explanation\"\n          size=\"small\"\n          name=\"explanation\"\n          value={state.explanation}\n          onChange={handleInputChange}\n          onKeyDown={(e) => {\n            if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n              e.preventDefault();\n              particularsInputRef.current?.focus()\n            }\n          }}\n          InputProps={{\n            style: { height: \"27px\", fontSize: \"14px\" },\n            inputRef:explanationInputRef\n          }}\n          sx={{\n            flex: 1,\n            height: \"27px\",\n            \".MuiFormLabel-root\": { fontSize: \"14px\" },\n            \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n          }}\n        />\n        <TextField\n          disabled={isDisableField}\n          label=\"Particulars\"\n          size=\"small\"\n          name=\"particulars\"\n          value={state.particulars}\n          onChange={handleInputChange}\n          onKeyDown={(e) => {\n            if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n              e.preventDefault();\n              codeInputRef.current?.focus()\n            }\n          }}\n          InputProps={{\n            inputRef:particularsInputRef,\n            style: { height: \"27px\", fontSize: \"14px\" },\n          }}\n          sx={{\n            flex: 1,\n            height: \"27px\",\n            \".MuiFormLabel-root\": { fontSize: \"14px\" },\n            \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n          }}\n        />\n      </fieldset>\n      <fieldset\n        style={{\n          border: \"1px solid #cbd5e1\",\n          borderRadius: \"5px\",\n          position: \"relative\",\n          width: \"100%\",\n          height: \"auto\",\n          marginTop: \"10px\",\n\n          padding: \"15px\",\n        }}\n      >\n        <div\n          style={{\n            display: \"flex\",\n            gap: \"10px\",\n          }}\n        >\n          {isLoadingChartAccountSearch ? (\n            <LoadingButton loading={isLoadingChartAccountSearch} />\n          ) : (\n            <FormControl\n              variant=\"outlined\"\n              size=\"small\"\n              disabled={isDisableField}\n              sx={{\n                width: \"130px\",\n                \".MuiFormLabel-root\": {\n                  fontSize: \"14px\",\n                  background: \"white\",\n                  zIndex: 99,\n                  padding: \"0 3px\",\n                },\n                \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n              }}\n            >\n              <InputLabel htmlFor=\"chart-account-id\">Code</InputLabel>\n              <OutlinedInput\n                sx={{\n                  height: \"27px\",\n                  fontSize: \"14px\",\n                }}\n                readOnly\n                disabled={isDisableField}\n                fullWidth\n                label=\"Code\"\n                name=\"code\"\n                inputRef={codeInputRef}\n                value={state.code}\n                onChange={handleInputChange}\n                onKeyDown={(e) => {\n                  if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n                    e.preventDefault();\n                    return openChartAccountSearch(state.code);\n                  }\n                }}\n                id=\"chart-account-id\"\n                endAdornment={\n                  <InputAdornment position=\"end\">\n                    <IconButton\n                      ref={reloadIDButtonRef}\n                      disabled={isDisableField}\n                      aria-label=\"search-client\"\n                      color=\"secondary\"\n                      edge=\"end\"\n                      onClick={() => {\n                        openChartAccountSearch(state.code);\n                      }}\n                    >\n                      <RestartAltIcon />\n                    </IconButton>\n                  </InputAdornment>\n                }\n              />\n            </FormControl>\n          )}\n          <TextField\n            disabled={isDisableField}\n            label=\"Account Name\"\n            size=\"small\"\n            name=\"acctName\"\n            value={state.acctName}\n            onChange={handleInputChange}\n            onKeyDown={(e) => {\n              if (\n                e.code === \"Enter\" ||\n                (e.code === \"NumpadEnter\" && state.acctName !== \"\")\n              ) {\n                e.preventDefault();\n                subAccountRef.current?.focus()\n              }\n\n            }}\n            InputProps={{\n              style: { height: \"27px\", fontSize: \"14px\" },\n              inputRef: accountNameRef\n            }}\n            sx={{\n              flex: 1,\n              \".MuiFormLabel-root\": { fontSize: \"14px\" },\n              \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n            }}\n          />\n          <TextField\n            disabled={isDisableField}\n            label=\"Sub Account\"\n            size=\"small\"\n            name=\"subAcctName\"\n            value={state.subAcctName}\n            onChange={handleInputChange}\n            onKeyDown={(e) => {\n              if (\n                e.code === \"Enter\" ||\n                (e.code === \"NumpadEnter\" && state.subAcctName !== \"\")\n              ) {\n                e.preventDefault();\n                idInputRef.current?.focus()\n              }\n\n            }}\n            InputProps={{\n              style: { height: \"27px\", fontSize: \"14px\" },\n              inputRef: subAccountRef\n            }}\n            sx={{\n              width: \"150px\",\n              \".MuiFormLabel-root\": { fontSize: \"14px\" },\n              \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n            }}\n          />\n          {isLoadingPolicyIdClientIdRefId ? (\n            <LoadingButton loading={isLoadingPolicyIdClientIdRefId} />\n          ) : (\n            <FormControl\n              variant=\"outlined\"\n              size=\"small\"\n              disabled={isDisableField}\n              sx={{\n                width: \"300px\",\n                \".MuiFormLabel-root\": {\n                  fontSize: \"14px\",\n                  background: \"white\",\n                  zIndex: 99,\n                  padding: \"0 3px\",\n                },\n                \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n              }}\n            >\n              <InputLabel htmlFor=\"policy-client-ref-id\">I.D</InputLabel>\n              <OutlinedInput\n                readOnly\n                sx={{\n                  height: \"27px\",\n                  fontSize: \"14px\",\n                }}\n                inputRef={idInputRef}\n                disabled={isDisableField}\n                fullWidth\n                label=\"I.D\"\n                name=\"ClientName\"\n                value={state.ClientName}\n                onChange={handleInputChange}\n                onKeyDown={(e) => {\n                  if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n                    e.preventDefault();\n                    setIsPayToEnter(false);\n                    return openPolicyIdClientIdRefId(state.ClientName);\n                  }\n                }}\n                id=\"policy-client-ref-id\"\n                endAdornment={\n                  <InputAdornment position=\"end\">\n                    <IconButton\n                      ref={reloadIDButtonRef}\n                      disabled={isDisableField}\n                      aria-label=\"search-client\"\n                      color=\"secondary\"\n                      edge=\"end\"\n                      onClick={() => {\n                        openPolicyIdClientIdRefId(state.ClientName);\n                      }}\n                    >\n                      <RestartAltIcon />\n                    </IconButton>\n                  </InputAdornment>\n                }\n              />\n            </FormControl>\n          )}\n          <TextField\n            disabled={isDisableField}\n            label=\"Debit\"\n            size=\"small\"\n            name=\"debit\"\n            value={state.debit}\n            onChange={handleInputChange}\n            onKeyDown={(e) => {\n              if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n                e.preventDefault();\n                creditRef.current?.focus()\n              }\n            }}\n            onBlur={(e) => {\n              e.preventDefault();\n              let num = \"0\";\n              if (!isNaN(parseFloat(state.debit))) {\n                num = state.debit;\n              }\n              dispatch({\n                type: \"UPDATE_FIELD\",\n                field: \"debit\",\n                value: parseFloat(num.toString().replace(/,/g, \"\")).toFixed(2),\n              });\n            }}\n            InputProps={{\n              inputComponent: NumericFormatCustom as any,\n              inputRef: debitInputRef,\n              style: { height: \"27px\", fontSize: \"14px\" },\n            }}\n            sx={{\n              width: \"160px\",\n              \".MuiFormLabel-root\": { fontSize: \"14px\" },\n              \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n            }}\n          />\n          <TextField\n            disabled={isDisableField}\n            label=\"Credit\"\n            size=\"small\"\n            name=\"credit\"\n            value={state.credit}\n            onChange={handleInputChange}\n            onKeyDown={(e) => {\n              if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n                e.preventDefault();\n                if (state.code === \"1.01.10\") {\n                  checkNoRef.current?.focus()\n                } else {\n                  tcDateRef.current?.focus()\n                }\n              }\n            }}\n            onFocus={(e) => {\n              e.preventDefault();\n              if (state.code === \"1.01.10\") {\n                dispatch({\n                  type: \"UPDATE_FIELD\",\n                  field: \"credit\",\n                  value: state.totalBalance,\n                });\n              }\n            }}\n            onBlur={(e) => {\n              e.preventDefault();\n              let num = \"0\";\n              if (!isNaN(parseFloat(state.credit))) {\n                num = state.credit;\n              }\n              dispatch({\n                type: \"UPDATE_FIELD\",\n                field: \"credit\",\n                value: parseFloat(num.toString().replace(/,/g, \"\")).toFixed(2),\n              });\n            }}\n            InputProps={{\n              inputComponent: NumericFormatCustom as any,\n              style: { height: \"27px\", fontSize: \"14px\" },\n              inputRef: creditRef\n            }}\n            sx={{\n              width: \"160px\",\n              \".MuiFormLabel-root\": { fontSize: \"14px\" },\n              \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n            }}\n          />\n          <TextField\n            disabled={isDisableField || state.code !== \"1.01.10\"}\n            label=\"Check No\"\n            size=\"small\"\n            name=\"checkNo\"\n            value={state.checkNo}\n            onChange={handleInputChange}\n            onKeyDown={(e) => {\n              if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n                e.preventDefault();\n                checkDateRef.current?.focus()\n              }\n            }}\n            InputProps={{\n              inputRef: checkNoRef,\n              style: { height: \"27px\", fontSize: \"14px\" },\n            }}\n            sx={{\n              width: \"160px\",\n              \".MuiFormLabel-root\": { fontSize: \"14px\" },\n              \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n            }}\n          />\n        </div>\n        <div\n          style={{\n            display: \"flex\",\n            gap: \"10px\",\n            marginTop: \"10px\",\n          }}\n        >\n          {state.code === \"1.01.10\" ? (\n            <CustomDatePicker\n              fullWidth={false}\n              disabled={isDisableField || state.code !== \"1.01.10\"}\n              label=\"Check Date\"\n              onChange={(value: any) => {\n                dispatch({\n                  type: \"UPDATE_FIELD\",\n                  field: \"checkDate\",\n                  value: value,\n                });\n              }}\n              value={state.checkDate}\n              onKeyDown={(e: any) => {\n                if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n                  // const timeout = setTimeout(() => {\n                  //   checkDatePickerRef.current\n                  //     ?.querySelector(\"button\")\n                  //     ?.click();\n                  //   clearTimeout(timeout);\n                  // }, 150);\n                  tcDateRef.current?.focus()\n                }\n              }}\n              datePickerRef={checkDatePickerRef}\n              inputRef={checkDateRef}\n              textField={{\n                InputLabelProps: {\n                  style: {\n                    fontSize: \"14px\",\n                  },\n                },\n                InputProps: {\n                  style: { height: \"27px\", fontSize: \"14px\", width: \"150px\" },\n                },\n              }}\n            />\n          ) : (\n            <TextField\n              disabled={isDisableField || state.code !== \"1.01.10\"}\n              label=\"Check Date\"\n              size=\"small\"\n              name=\"checkDate\"\n              InputProps={{\n                style: { height: \"27px\", fontSize: \"14px\" },\n              }}\n              sx={{\n                width: \"160px\",\n                \".MuiFormLabel-root\": { fontSize: \"14px\" },\n                \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n              }}\n            />\n          )}\n          {isLoadingTransactionAccount ? (\n            <LoadingButton loading={isLoadingTransactionAccount} />\n          ) : (\n            <FormControl\n              variant=\"outlined\"\n              size=\"small\"\n              disabled={isDisableField}\n              sx={{\n                width: \"130px\",\n                \".MuiFormLabel-root\": {\n                  fontSize: \"14px\",\n                  background: \"white\",\n                  zIndex: 99,\n                  padding: \"0 3px\",\n                },\n                \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n              }}\n            >\n              <InputLabel htmlFor=\"tc\">TC</InputLabel>\n              <OutlinedInput\n                inputRef={tcDateRef}\n                sx={{\n                  height: \"27px\",\n                  fontSize: \"14px\",\n                }}\n                readOnly\n                fullWidth\n                label=\"TC\"\n                name=\"TC_Code\"\n                value={state.TC_Code}\n                onChange={handleInputChange}\n                onKeyDown={(e) => {\n                  if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n                    e.preventDefault();\n                    return openTransactionAccount(state.TC_Code);\n                  }\n                }}\n                id=\"tc\"\n                endAdornment={\n                  <InputAdornment position=\"end\">\n                    <IconButton\n                      ref={reloadIDButtonRef}\n                      disabled={isDisableField}\n                      aria-label=\"search-client\"\n                      color=\"secondary\"\n                      edge=\"end\"\n                      onClick={() => {\n                        openTransactionAccount(state.TC_Code);\n                      }}\n                    >\n                      <RestartAltIcon />\n                    </IconButton>\n                  </InputAdornment>\n                }\n              />\n            </FormControl>\n          )}\n          <TextField\n            disabled={isDisableField}\n            label=\"Remarks\"\n            size=\"small\"\n            name=\"remarks\"\n            value={state.remarks}\n            onChange={handleInputChange}\n            onKeyDown={(e) => {\n              if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n                e.preventDefault();\n                if (state.code === \"1.01.10\") {\n                  idInputRefPayTo.current?.focus()\n                } else {\n                  vatRef.current?.focus()\n                }\n              }\n            }}\n            InputProps={{\n              style: { height: \"27px\", fontSize: \"14px\" },\n              inputRef: tcInputRef,\n            }}\n            sx={{\n              flex: 1,\n              \".MuiFormLabel-root\": { fontSize: \"14px\" },\n              \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n            }}\n          />\n          {state.code !== \"1.01.10\" && (\n            <TextField\n              disabled={isDisableField}\n              label=\"Payto\"\n              size=\"small\"\n              name=\"Payto\"\n              value={state.Payto}\n              onChange={handleInputChange}\n              onKeyDown={(e) => {\n                if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n                  e.preventDefault();\n                  return handleRowSave();\n                }\n              }}\n              InputProps={{\n                readOnly: true,\n                inputRef: paytoRef,\n                style: { height: \"27px\", fontSize: \"14px\" },\n              }}\n              sx={{\n                width: \"160px\",\n                \".MuiFormLabel-root\": { fontSize: \"14px\" },\n                \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n              }}\n            />\n          )}\n\n          {state.code === \"1.01.10\" && (\n            <>\n              {isLoadingPolicyIdClientIdRefId ? (\n                <LoadingButton loading={isLoadingPolicyIdClientIdRefId} />\n              ) : (\n                <FormControl\n                  variant=\"outlined\"\n                  size=\"small\"\n                  disabled={isDisableField}\n                  sx={{\n                    width: \"300px\",\n                    \".MuiFormLabel-root\": {\n                      fontSize: \"14px\",\n                      background: \"white\",\n                      zIndex: 99,\n                      padding: \"0 3px\",\n                    },\n                    \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n                  }}\n                >\n                  <InputLabel htmlFor=\"policy-client-Payto\">Payto</InputLabel>\n                  <OutlinedInput\n                    readOnly\n                    sx={{\n                      height: \"27px\",\n                      fontSize: \"14px\",\n                    }}\n                    inputRef={idInputRefPayTo}\n                    disabled={isDisableField}\n                    fullWidth\n                    label=\"Payto\"\n                    name=\"Payto\"\n                    value={state.Payto}\n                    onChange={handleInputChange}\n                    onKeyDown={(e) => {\n                      if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n                        e.preventDefault();\n                        setIsPayToEnter(true);\n                        return openPolicyIdClientIdRefId(state.Payto);\n                      }\n                    }}\n                    id=\"policy-client-Payto\"\n                    endAdornment={\n                      <InputAdornment position=\"end\">\n                        <IconButton\n                          ref={reloadIDButtonRef}\n                          disabled={isDisableField}\n                          color=\"secondary\"\n                          edge=\"end\"\n                          onClick={() => {\n                            openPolicyIdClientIdRefId(state.Payto);\n                          }}\n                        >\n                          <RestartAltIcon />\n                        </IconButton>\n                      </InputAdornment>\n                    }\n                  />\n                </FormControl>\n              )}\n            </>\n          )}\n          <FormControl\n            size=\"small\"\n            variant=\"outlined\"\n            sx={{\n              width: \"120px\",\n              \".MuiFormLabel-root\": {\n                fontSize: \"14px\",\n                background: \"white\",\n                zIndex: 99,\n                padding: \"0 3px\",\n              },\n              \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n            }}\n          >\n            <InputLabel id=\"label-selection-reason\">Vat Type</InputLabel>\n            <Select\n              labelId=\"label-selection-reason\"\n              value={state.vatType}\n              name=\"vatType\"\n              onChange={handleInputChange}\n              autoWidth\n              sx={{\n                height: \"27px\",\n                fontSize: \"14px\",\n              }}\n              inputRef={vatRef}\n              disabled={isDisableField}\n\n            >\n              <MenuItem value=\"VAT\" onKeyDown={(e) => {\n                if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n                  e.preventDefault();\n                  wait(300).then(() => {\n                    invoiceRef.current?.focus()\n                  })\n\n                }\n              }}>VAT</MenuItem>\n              <MenuItem value={\"NON-VAT\"} onKeyDown={(e) => {\n                if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n                  e.preventDefault();\n                  wait(300).then(() => {\n                    invoiceRef.current?.focus()\n                  })\n                }\n              }}>NON-VAT</MenuItem>\n            </Select>\n          </FormControl>\n          <TextField\n            disabled={isDisableField}\n            label=\"OR/Invoice No.\"\n            size=\"small\"\n            name=\"invoice\"\n            value={state.invoice}\n            onChange={handleInputChange}\n            onKeyDown={(e) => {\n              if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n                e.preventDefault();\n                handleRowSave()\n              }\n            }}\n            InputProps={{\n              style: { height: \"27px\", fontSize: \"14px\" },\n              inputRef: invoiceRef\n            }}\n            sx={{\n              width: \"200px\",\n              \".MuiFormLabel-root\": { fontSize: \"14px\" },\n              \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n            }}\n          />\n          <Button\n            disabled={isDisableField}\n            sx={{\n              height: \"27px\",\n              fontSize: \"11px\",\n            }}\n            variant=\"contained\"\n            startIcon={<SaveIcon sx={{ fontSize: \"18px\" }} />}\n            onClick={() => {\n              handleRowSave()\n            }}\n            color=\"primary\"\n          >\n            Save Row\n          </Button>\n        </div>\n      </fieldset>\n      <div\n        ref={refParent}\n        style={{\n          marginTop: \"10px\",\n          width: \"100%\",\n          position: \"relative\",\n          flex: 1,\n        }}\n      >\n        <Box\n          style={{\n            height: `${refParent.current?.getBoundingClientRect().height}px`,\n            width: \"100%\",\n            overflowX: \"scroll\",\n            position: \"absolute\",\n          }}\n        >\n          <Table\n            ref={table}\n            isLoading={\n              loadingCashDisbursementMutate ||\n              loadingGetSearchSelectedCashDisbursement ||\n              isLoadingJob\n            }\n            columns={selectedCollectionColumns}\n            rows={formatDebitCredit(cashDisbursement)}\n            table_id={\"TempID\"}\n            isSingleSelection={true}\n            isRowFreeze={false}\n            dataSelection={(selection, data, code) => {\n              const rowSelected = data.filter(\n                (item: any) => item.TempID === selection[0]\n              )[0];\n              if (rowSelected === undefined || rowSelected.length <= 0) {\n                const resetValue = {\n                  code: \"\",\n                  acctName: \"\",\n                  subAcct: \"\",\n                  subAcctName: \"\",\n                  IDNo: \"\",\n                  ClientName: \"\",\n                  credit: \"\",\n                  debit: \"\",\n                  TC_Code: \"\",\n                  TC_Desc: \"\",\n                  remarks: \"\",\n                  vatType: \"NON-VAT\",\n                  invoice: \"\",\n                  checkNo: \"\",\n                  checkDate: new Date(),\n                };\n                setNewStateValue(dispatch, { ...state, ...resetValue });\n                setEditTransaction({ edit: false, updateId: \"\" });\n                return;\n              }\n\n              if (code === \"Delete\" || code === \"Backspace\") {\n                Swal.fire({\n                  title: `Are you sure you want to delete?`,\n                  text: \"You won't be able to revert this!\",\n                  icon: \"warning\",\n                  showCancelButton: true,\n                  confirmButtonColor: \"#3085d6\",\n                  cancelButtonColor: \"#d33\",\n                  confirmButtonText: \"Yes, delete it!\",\n                }).then((result) => {\n                  if (result.isConfirmed) {\n                    return setCashDisbursement((d) => {\n                      return d.filter(\n                        (items: any) => items.TempID !== selection[0]\n                      );\n                    });\n                  }\n                });\n                return;\n              }\n              setNewStateValue(dispatch, {\n                ...rowSelected,\n                checkDate: new Date(rowSelected.checkDate),\n                sub_refNo: state.sub_refNo,\n                refNo: state.refNo,\n                dateEntry: state.dateEntry,\n                explanation: state.explanation,\n                particulars: state.particulars,\n                totalDebit: state.totalDebit,\n                totalCredit: state.totalCredit,\n                totalBalance: state.totalBalance,\n              });\n              setEditTransaction({\n                edit: true,\n                updateId: rowSelected.TempID,\n              });\n            }}\n          />\n        </Box>\n      </div>\n      <Modal open={openJobs} onClose={() => setOpenJobs(false)}>\n        <Box\n          sx={{\n            position: \"absolute\" as \"absolute\",\n            top: \"50%\",\n            left: \"50%\",\n            transform: \"translate(-50%, -50%)\",\n            width: 470,\n            bgcolor: \"background.paper\",\n            p: 4,\n          }}\n        >\n          <IconButton\n            style={{\n              position: \"absolute\",\n              top: \"10px\",\n              right: \"10px\",\n            }}\n            aria-label=\"search-client\"\n            onClick={() => setOpenJobs(false)}\n          >\n            <CloseIcon />\n          </IconButton>\n          <Typography\n            id=\"modal-modal-title\"\n            variant=\"h6\"\n            component=\"h2\"\n            sx={{ marginBottom: \"20px\" }}\n          >\n            Jobs\n          </Typography>\n          <div\n            style={{\n              width: \"400px\",\n            }}\n          >\n            <div\n              style={{\n                width: \"100%\",\n                display: \"flex\",\n                marginBottom: \"10px\",\n                justifyContent: \"space-between\",\n                alignItems: \"center\",\n              }}\n            >\n              <LocalizationProvider dateAdapter={AdapterDateFns}>\n                <DatePicker\n                  sx={{\n                    width: \"200px\",\n                    \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n                  }}\n                  slotProps={{\n                    textField: {\n                      size: \"small\",\n                      name: \"\",\n                      InputLabelProps: {\n                        style: {\n                          fontSize: \"14px\",\n                        },\n                      },\n                      InputProps: {\n                        style: { height: \"27px\", fontSize: \"14px\" },\n                      },\n                    },\n                  }}\n                  label={\"Transaction Date: \"}\n                  views={[\"month\", \"year\"]}\n                  value={state.jobTransactionDate}\n                  onChange={(value) => {\n                    dispatch({\n                      type: \"UPDATE_FIELD\",\n                      field: \"jobTransactionDate\",\n                      value: value,\n                    });\n                  }}\n                />\n              </LocalizationProvider>\n              <FormControlLabel\n                sx={{\n                  height: \"30px\",\n                  \"& .MuiTypography-root\": {\n                    fontSize: \"14px\",\n                  },\n                }}\n                control={\n                  <Checkbox\n                    size=\"small\"\n                    checked={state.jobAutoExp}\n                    onChange={(e) => {\n                      dispatch({\n                        type: \"UPDATE_FIELD\",\n                        field: \"jobAutoExp\",\n                        value: !state.jobAutoExp,\n                      });\n                    }}\n                  />\n                }\n                label=\"Auto Explanation\"\n              />\n            </div>\n            <FormControl\n              fullWidth\n              size=\"small\"\n              variant=\"outlined\"\n              sx={{\n                \".MuiFormLabel-root\": {\n                  fontSize: \"14px\",\n                  background: \"white\",\n                  zIndex: 99,\n                  padding: \"0 3px\",\n                },\n                \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n              }}\n            >\n              <InputLabel id=\"label-selection-job-type\">Type of Job</InputLabel>\n              <Select\n                labelId=\"label-selection-job-type\"\n                value={state.jobType}\n                name=\"jobType\"\n                onChange={handleInputChange}\n                autoWidth\n                sx={{\n                  height: \"27px\",\n                  fontSize: \"14px\",\n                }}\n              >\n                <MenuItem value={\"\"}> </MenuItem>\n                <MenuItem value={\"0\"}>Reversal of Accrued Interest </MenuItem>\n                <MenuItem value={\"1\"}>\n                  {\" \"}\n                  Income Recognition & Accrual of Interest\n                </MenuItem>\n                <MenuItem value={\"2\"}>Penalty Charges</MenuItem>\n                <MenuItem value={\"3\"}>Penalty Income</MenuItem>\n                <MenuItem value={\"4\"}>RPT Transaction (NIL-HN)</MenuItem>\n                <MenuItem value={\"5\"}>RPT Transaction (AMIFIN)</MenuItem>\n                <MenuItem value={\"6\"}>RPT Income</MenuItem>\n                <MenuItem value={\"7\"}>Monthly Accrual Expenses</MenuItem>\n                <MenuItem value={\"8\"}>Monthly Accrual Income</MenuItem>\n                <MenuItem value={\"9\"}>\n                  Production (Milestone Guarantee)\n                </MenuItem>\n                <MenuItem value={\"10\"}>\n                  Production (Liberty Insurance Co.)\n                </MenuItem>\n                <MenuItem value={\"11\"}>Production (Federal Phoenix)</MenuItem>\n              </Select>\n            </FormControl>\n          </div>\n\n          <div\n            style={{\n              display: \"flex\",\n              columnGap: \"30px\",\n              alignItems: \"flex-end\",\n              marginTop: \"20px\",\n            }}\n          >\n            <LoadingButton\n              loading={isLoadingJob}\n              color=\"success\"\n              variant=\"contained\"\n              onClick={() => mutateJob(state)}\n            >\n              Create Job\n            </LoadingButton>\n            <Button\n              // ref={checkModalSaveButton}\n              color=\"error\"\n              variant=\"contained\"\n              onClick={() => setOpenJobs(false)}\n            >\n              Cancel\n            </Button>\n          </div>\n        </Box>\n      </Modal>\n      {ModalChartAccountSearch}\n      {ModalPolicyIdClientIdRefId}\n      {ModalTransactionAccount}\n      {ModalSearchCashDisbursement}\n    </div>\n  );\n}\n\nfunction setNewStateValue(dispatch: any, obj: any) {\n  Object.entries(obj).forEach(([field, value]) => {\n    dispatch({ type: \"UPDATE_FIELD\", field, value });\n  });\n}\n","export default function formatDate(date: any) {\n  // Extract day, month, and year\n  const currentDate = new Date(date)\n  const day = (\"0\" + currentDate.getDate()).slice(-2); // Ensure two digits\n  const month = (\"0\" + (currentDate.getMonth() + 1)).slice(-2); // Add 1 to month (months are zero-indexed)\n  const year = currentDate.getFullYear();\n\n  // Format the date as MM/DD/YYYY\n  return month + \"/\" + day + \"/\" + year;\n}\n","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 5V2L8 6l4 4V7c3.31 0 6 2.69 6 6 0 2.97-2.17 5.43-5 5.91v2.02c3.95-.49 7-3.85 7-7.93 0-4.42-3.58-8-8-8zm-6 8c0-1.65.67-3.15 1.76-4.24L6.34 7.34C4.9 8.79 4 10.79 4 13c0 4.08 3.05 7.44 7 7.93v-2.02c-2.83-.48-5-2.94-5-5.91z\"\n}), 'RestartAlt');\nexports.default = _default;","const deepOrange = {\n  50: '#fbe9e7',\n  100: '#ffccbc',\n  200: '#ffab91',\n  300: '#ff8a65',\n  400: '#ff7043',\n  500: '#ff5722',\n  600: '#f4511e',\n  700: '#e64a19',\n  800: '#d84315',\n  900: '#bf360c',\n  A100: '#ff9e80',\n  A200: '#ff6e40',\n  A400: '#ff3d00',\n  A700: '#dd2c00'\n};\nexport default deepOrange;"],"names":["CustomDatePicker","_ref","label","name","onChange","value","onKeyDown","inputRef","datePickerRef","fullWidth","textField","_ref$minWidth","minWidth","rest","_objectWithoutProperties","_excluded","_jsx","LocalizationProvider","dateAdapter","AdapterDateFns","children","DatePicker","_objectSpread","floatingLabelStyle","color","ref","slotProps","size","InputLabelProps","sx","fieldset","borderColor","fontSize","top","NumericFormatCustom","React","props","other","NumericFormat","getInputRef","onValueChange","values","target","allowNegative","thousandSeparator","valueIsNumericString","initialState","sub_refNo","refNo","dateEntry","Date","explanation","particulars","code","acctName","subAcct","subAcctName","IDNo","ClientName","address","credit","debit","checkNo","checkDate","TC_Code","TC_Desc","remarks","Payto","vatType","invoice","BranchCode","totalDebit","totalCredit","totalBalance","jobAutoExp","jobTransactionDate","jobType","search","cashMode","reducer","state","action","type","_defineProperty","field","selectedCollectionColumns","headerName","flex","hide","CashDisbursement","_mutationFn","_queryFn","_mutationFn2","_mutationFn3","_mutationFn4","_mutationFn5","_refParent$current","refParent","useRef","_useContext","useContext","AuthContext","myAxios","user","_useReducer","useReducer","_useReducer2","_slicedToArray","dispatch","_useState","useState","_useState2","openJobs","setOpenJobs","_useState3","_useState4","isPayToEnter","setIsPayToEnter","_useState5","_useState6","hasSelected","setHasSelected","_useState7","edit","updateId","_useState8","editTransaction","setEditTransaction","_useState9","_useState10","_useState11","_useState12","_useState13","_useState14","cashDisbursement","setCashDisbursement","queryClient","useQueryClient","checkDatePickerRef","reloadIDButtonRef","explanationInputRef","particularsInputRef","idInputRef","idInputRefPayTo","vatRef","debitInputRef","tcInputRef","chartAccountSearchInput","IdsSearchInput","codeInputRef","table","dateRef","accountNameRef","subAccountRef","creditRef","checkNoRef","checkDateRef","tcDateRef","paytoRef","invoiceRef","_useMutation","useMutation","mutationKey","mutationFn","_x","_asyncToGenerator","_regeneratorRuntime","mark","_callee","variable","wrap","_context","prev","next","post","headers","Authorization","concat","accessToken","abrupt","sent","stop","apply","arguments","onSuccess","res","response","console","log","flushSync","localStorage","removeItem","setItem","JSON","stringify","data","print","PrintTable","PrintPayeeDetails","datakey","header","width","department","window","open","mutateOnPrint","mutate","isLoadingOnPrint","isLoading","_useQuery","useQuery","queryKey","queryFn","_callee2","_context2","get","refetchOnWindowFocus","generatedId","id","loadingGeneralJournalGenerator","refetchGeneralJournalGenerator","refetch","_useMutation2","_x2","_callee3","_context3","success","invalidateQueries","setNewStateValue","Swal","position","icon","title","message","timer","addCashDisbursementMutate","loadingCashDisbursementMutate","_useMutation3","_x3","_callee4","_context4","jobs","mutateJob","isLoadingJob","_useMutation4","_x4","_callee5","_context5","mutateVoidCashDisbursement","loadingVoidCashDisbursement","_useMutation5","_x5","_callee6","_context6","selected","selectedCashDisbursement","_selected$","getSearchSelectedCashDisbursement","loadingGetSearchSelectedCashDisbursement","_useQueryModalTable","useQueryModalTable","link","url","queryUrlName","columns","uniqueId","responseDataKey","onSelected","selectedRowData","Source_No","handleInputChange","closeSearchCashDisbursement","onCloseFunction","searchRef","ModalSearchCashDisbursement","ModalComponent","openSearchCashDisbursement","openModal","isLoadingSearchCashDisbursement","closeModal","_useQueryModalTable2","Acct_Code","Acct_Title","closeChartAccountSearch","setTimeout","_idInputRef$current","current","focus","ModalChartAccountSearch","openChartAccountSearch","isLoadingChartAccountSearch","_useQueryModalTable3","Name","closePolicyIdClientIdRefId","_vatRef$current","sub_account","ShortName","_debitInputRef$curren","ModalPolicyIdClientIdRefId","openPolicyIdClientIdRefId","isLoadingPolicyIdClientIdRefId","_useQueryModalTable4","Code","Description","closeTransactionAccount","_tcInputRef$current","ModalTransactionAccount","openTransactionAccount","isLoadingTransactionAccount","useEffect","reduce","a","item","parseFloat","replace","toFixed","e","_e$target","handleRowSave","isNaN","length","generateID","array","lastItem","TempID","parseInt","toString","match","padStart","text","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","then","result","isConfirmed","d","date","currentDate","day","getDate","slice","getMonth","getFullYear","formatDate","taxableamt","toLocaleString","minimumFractionDigits","maximumFractionDigits","map","_toConsumableArray","inputtax","resetValue","wait","_codeInputRef$current","arr","isDisableField","_jsxs","style","display","flexDirection","height","alignItems","columnGap","LoadingButton","loading","TextField","preventDefault","InputProps","Button","variant","startIcon","AddIcon","onClick","disabled","_explanationInputRef$","codeCondfirmationAlert","isUpdate","cb","userCodeConfirmation","saveCondfirmationAlert","isConfirm","CloseIcon","background","deepOrange","NotInterestedIcon","backgroundColor","grey","border","justifyContent","margin","padding","borderRadius","marginTop","gap","FormControl","zIndex","InputLabel","htmlFor","OutlinedInput","_dateRef$current","readOnly","endAdornment","InputAdornment","IconButton","edge","RestartAltIcon","_explanationInputRef$2","_particularsInputRef$","_codeInputRef$current2","_subAccountRef$curren","_idInputRef$current2","_creditRef$current","onBlur","num","inputComponent","_checkNoRef$current","_tcDateRef$current","onFocus","_checkDateRef$current","_tcDateRef$current2","_idInputRefPayTo$curr","_vatRef$current2","_Fragment","Select","labelId","autoWidth","MenuItem","_invoiceRef$current","_invoiceRef$current2","SaveIcon","Box","getBoundingClientRect","overflowX","Table","rows","itm","table_id","isSingleSelection","isRowFreeze","dataSelection","selection","rowSelected","filter","undefined","items","Modal","onClose","left","transform","bgcolor","p","right","Typography","component","marginBottom","views","FormControlLabel","control","Checkbox","checked","obj","Object","entries","forEach","_ref2","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","A100","A200","A400","A700"],"sourceRoot":""}