{"version":3,"file":"static/js/2208.ebe22840.chunk.js","mappings":"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","sources":["components/DatePicker.tsx","components/ModalWithTable.tsx","components/PrintPreview/dataCore.ts","components/Table.tsx","feautures/Admin/Reports/Accounting/SubsidiaryLedger.tsx","hooks/useQueryModalTable.tsx","../node_modules/@mui/icons-material/PersonSearch.js","../node_modules/@mui/icons-material/Search.js","../node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js"],"sourcesContent":["import { LocalizationProvider } from \"@mui/x-date-pickers/LocalizationProvider\";\nimport { AdapterDateFns } from \"@mui/x-date-pickers/AdapterDateFns\";\nimport { DatePicker } from \"@mui/x-date-pickers\";\nexport default function CustomDatePicker({\n  label,\n  name,\n  onChange,\n  value,\n  onKeyDown,\n  inputRef,\n  datePickerRef,\n  fullWidth,\n  textField,\n  minWidth = \"200px\",\n  ...rest\n}: any) {\n  return (\n    <LocalizationProvider dateAdapter={AdapterDateFns}>\n      <DatePicker\n      floatingLabelStyle={{color: \"black\" }}\n        value={value}\n        onChange={onChange}\n        ref={datePickerRef}\n        slotProps={{\n          textField: {\n            size: \"small\",\n            label,\n            name,\n            onKeyDown,\n            inputRef: inputRef,\n            fullWidth,\n\n            ...textField,\n          },\n        }}\n        InputLabelProps={{\n          sx: {\n            color: \"black\",\n          },\n        }}\n        sx={{\n          minWidth,\n          fieldset: { borderColor: \"black\" },\n          \".MuiFormLabel-root\": { fontSize: \"14px\" },\n          \".MuiFormLabel-root[data-shrink=false]\": {\n            top: \"-5px\",\n          },\n        }}\n        {...rest}\n      />\n    </LocalizationProvider>\n  );\n}\n","import React from \"react\";\nimport {\n  GridRowSelectionModel,\n  GridRowParams,\n  GridCellParams,\n  GridTreeNode,\n} from \"@mui/x-data-grid\";\nimport { Modal, Box, Typography, IconButton, TextField, InputAdornment } from \"@mui/material\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport Table from \"./Table\";\nimport SearchIcon from \"@mui/icons-material/Search\";\n\ninterface ModalWithTableParams {\n  height: number;\n  isLoading: boolean;\n  queryKey: string;\n  columns: Array<any>;\n  onSelectionChange: (rowSelectionModel: Array<any>, data: Array<any>) => void;\n  setRows: React.Dispatch<React.SetStateAction<GridRowSelectionModel>>;\n  rows: GridRowSelectionModel;\n  id: string;\n  onCloseModal: () => void;\n  onClickCloseIcon: () => void;\n  showModal: boolean;\n  searchOnChange:\n    | React.ChangeEventHandler<HTMLInputElement | HTMLTextAreaElement>\n    | undefined;\n  title?: string;\n  searchRef?: React.RefObject<HTMLInputElement>;\n  onCellKeyDown?: any;\n  onSearchKeyEnter?: (search: string) => void;\n  isRowSelectable?: ((params: GridRowParams<any>) => boolean) | undefined;\n  getCellClassName?:\n    | ((params: GridCellParams<any, any, any, GridTreeNode>) => string)\n    | undefined;\n}\n\nconst style = {\n  position: \"absolute\" as \"absolute\",\n  top: \"50%\",\n  left: \"50%\",\n  transform: \"translate(-50%, -50%)\",\n  width: \"70%\",\n  bgcolor: \"background.paper\",\n  boxShadow: 24,\n  p: 4,\n  heigth: \"auto\",\n};\n\nexport default function ModalWithTable({\n  height,\n  isLoading,\n  queryKey,\n  columns,\n  onSelectionChange,\n  setRows,\n  rows,\n  id,\n  onCloseModal,\n  showModal,\n  onClickCloseIcon,\n  searchOnChange,\n  title = \"\",\n  searchRef,\n  onCellKeyDown,\n  onSearchKeyEnter = () => {},\n  isRowSelectable,\n  getCellClassName,\n}: ModalWithTableParams) {\n  const mainId = generateRandomClass();\n\n  return (\n    <Modal\n      open={showModal}\n      onClose={onCloseModal}\n      aria-labelledby=\"modal-modal-title\"\n      aria-describedby=\"modal-modal-description\"\n    >\n      <Box sx={style}>\n        <Typography id=\"modal-modal-title\" variant=\"h6\" component=\"h2\" mb={2}>\n          {title}\n        </Typography>\n        <TextField\n          size=\"small\"\n          label=\"Search\"\n          fullWidth\n          onChange={searchOnChange}\n          InputProps={{\n            inputRef: searchRef,\n            style: { height: \"27px\", fontSize: \"14px\" },\n            endAdornment: (\n              <InputAdornment position=\"end\">\n                <IconButton\n                  onClick={() => {\n                    onSearchKeyEnter(searchRef?.current?.value as string);\n                  }}\n                  edge=\"end\"\n                >\n                  <SearchIcon />\n                </IconButton>\n              </InputAdornment>\n            ),\n          }}\n          type=\"search\"\n          onKeyDown={(e) => {\n            if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n              e.preventDefault();\n              onSearchKeyEnter(searchRef?.current?.value as string);\n            }\n            keyBoardSelectionTable(\n              e,\n              mainId,\n              searchRef?.current as HTMLInputElement\n            );\n          }}\n          sx={{\n            marginBottom: \"10px\",\n            \".MuiFormLabel-root\": { fontSize: \"14px\" },\n            \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n          }}\n        />\n        <div\n          className={`${mainId} main-table-selection-container`}\n          style={{ position: \"relative\", height: `${height + 20}px` }}\n        >\n          <Table\n            isSingleSelection={true}\n            isRowFreeze={false}\n            columns={columns}\n            isLoading={isLoading}\n            dataSelection={(selection, data, code) => {\n              onSelectionChange(selection, data);\n            }}\n            table_id={id}\n            rows={rows}\n            isRowSelectable={isRowSelectable}\n            getCellClassName={getCellClassName}\n          />\n        </div>\n\n        <div style={{ position: \"absolute\", top: \"10px\", right: \"10px\" }}>\n          <IconButton\n            aria-label=\"search-client\"\n            color=\"secondary\"\n            onClick={onClickCloseIcon}\n          >\n            <CloseIcon />\n          </IconButton>\n        </div>\n      </Box>\n    </Modal>\n  );\n}\n\nexport function generateRandomClass() {\n  const randomNumber = Math.floor(Math.random() * 10000);\n  const randomClass = \"main-\" + randomNumber;\n  return randomClass;\n}\n\nfunction keyBoardUpDown(className: string, el: HTMLElement) {\n  const firstRowParent = document.querySelector(\n    `.${className} .MuiDataGrid-row`\n  );\n  const firstInput = firstRowParent?.querySelector(\"input\");\n  firstInput?.focus();\n  const event = new MouseEvent(\"mouseenter\", {\n    bubbles: true,\n    cancelable: true,\n    view: window,\n  });\n  firstRowParent?.dispatchEvent(event);\n  firstInput?.addEventListener(\"keydown\", (es: any) => {\n    if (es.key === \"ArrowUp\") {\n      es.preventDefault();\n      el.focus();\n    }\n    if (es.key === \"ArrowUp\") {\n      firstRowParent?.classList.remove(\"hover-keyboard\");\n    }\n  });\n}\n\nexport function keyBoardSelectionTable(\n  e: React.KeyboardEvent<HTMLDivElement>,\n  className: string,\n  el: HTMLElement\n) {\n  const mainId = className;\n  if (e.code === \"ArrowDown\") {\n    const rows = document.querySelectorAll(`.${mainId} .MuiDataGrid-row`);\n    e.preventDefault();\n    rows[0]?.classList.add(\"hover-keyboard\");\n    keyBoardUpDown(className, el);\n    rows.forEach((el, idx) => {\n      el.addEventListener(\"keydown\", (es: any) => {\n        if (es.key === \"ArrowUp\") {\n          if (idx <= 0) {\n            return;\n          }\n\n          es.preventDefault();\n          rows[idx]?.classList.remove(\"hover-keyboard\");\n          rows[idx - 1]?.classList.add(\"hover-keyboard\");\n          return;\n        }\n        if (es.key === \"ArrowDown\") {\n          es.preventDefault();\n          if (idx >= rows.length - 1) {\n            return;\n          }\n          rows[idx]?.classList.remove(\"hover-keyboard\");\n          rows[idx + 1]?.classList.add(\"hover-keyboard\");\n        }\n      });\n    });\n  }\n}\n","export function getTableCellHeight(\r\n  tempCell: HTMLTableCellElement,\r\n  content: string,\r\n  columnWidth: string,\r\n  contentElment: Element,\r\n  tempTable: HTMLTableElement\r\n) {\r\n  tempCell.style.width = columnWidth;\r\n  tempCell.textContent = content;\r\n  contentElment.appendChild(tempTable);\r\n}\r\n\r\nexport function defaultArrangeDataCore({\r\n  data,\r\n  column,\r\n  beforeArrangeData,\r\n  adjustMaxHeight,\r\n  fontSize = \"11px\",\r\n  summaryHeight = 0,\r\n}: {\r\n  data: any;\r\n  column: Array<any>;\r\n  beforeArrangeData: (itm: any) => any;\r\n  adjustMaxHeight: number;\r\n  fontSize: string;\r\n  summaryHeight?: number;\r\n}) {\r\n  const newData: Array<any> = [];\r\n  let trHeight = 0;\r\n  let temp: Array<any> = [];\r\n  const contentElment = document.querySelector(\".content\") as Element;\r\n  const maxHeight =\r\n    contentElment.getBoundingClientRect().height - adjustMaxHeight;\r\n\r\n  data.forEach((itm: any, idx: number) => {\r\n    itm = beforeArrangeData(itm);\r\n    const contentElment = document.querySelector(\".content\") as Element;\r\n    const tempTable = document.createElement(\"table\");\r\n    const tempRow = tempTable.insertRow();\r\n\r\n    if (itm.summaryReport) {\r\n      if (maxHeight - trHeight <= summaryHeight + 20) {\r\n        trHeight += maxHeight - trHeight;\r\n      }\r\n    }\r\n    column.forEach((col) => {\r\n      const tempCell = tempRow.insertCell();\r\n      tempTable.style.visibility = \"hidden\";\r\n      tempTable.style.width = `100%`;\r\n      tempTable.style.fontSize = fontSize;\r\n\r\n      getTableCellHeight(\r\n        tempCell,\r\n        itm[col.datakey],\r\n        col.width,\r\n        contentElment,\r\n        tempTable\r\n      );\r\n    });\r\n    trHeight += tempRow.getBoundingClientRect().height;\r\n    contentElment.removeChild(tempTable);\r\n    temp.push(itm);\r\n    if (\r\n      trHeight >= maxHeight ||\r\n      (idx === data.length - 1 && trHeight < maxHeight)\r\n    ) {\r\n      newData.push(temp);\r\n      trHeight = 0;\r\n      temp = [];\r\n    }\r\n  });\r\n\r\n  return newData;\r\n}\r\nexport const arrangeData = async ({\r\n  data,\r\n  column,\r\n  beforeArrangeData,\r\n  adjustMaxHeight,\r\n  cb,\r\n  fontSize = \"11px\",\r\n  summaryHeight,\r\n}: {\r\n  data: any;\r\n  column: Array<any>;\r\n  beforeArrangeData: (itm: any) => any;\r\n  adjustMaxHeight: number;\r\n  cb?: ({\r\n    data,\r\n    column,\r\n    beforeArrangeData,\r\n    adjustMaxHeight,\r\n  }: {\r\n    data: any;\r\n    column: Array<any>;\r\n    beforeArrangeData: (itm: any) => any;\r\n    adjustMaxHeight: number;\r\n  }) => any[];\r\n  fontSize?: string;\r\n  summaryHeight?: number;\r\n}) => {\r\n  if (data === undefined) return [];\r\n  if (cb) {\r\n    return cb({\r\n      data,\r\n      column,\r\n      beforeArrangeData,\r\n      adjustMaxHeight,\r\n    });\r\n  }\r\n\r\n  return defaultArrangeDataCore({\r\n    data,\r\n    column,\r\n    beforeArrangeData,\r\n    adjustMaxHeight,\r\n    fontSize,\r\n    summaryHeight,\r\n  });\r\n};\r\n","import {\n  useState,\n  useContext,\n  createContext,\n  ReactElement,\n  forwardRef,\n  useImperativeHandle,\n} from \"react\";\nimport { Box, LinearProgress } from \"@mui/material\";\nimport {\n  DataGrid,\n  GridSlotsComponentsProps,\n  gridPageCountSelector,\n  GridPagination,\n  useGridApiContext,\n  useGridSelector,\n  GridRowSelectionModel,\n  GridColDef,\n  GridRowParams,\n  GridCellParams,\n  GridTreeNode,\n} from \"@mui/x-data-grid\";\nimport { TablePaginationProps } from \"@mui/material/TablePagination\";\nimport MuiPagination from \"@mui/material/Pagination\";\n\ninterface TableProps {\n  isLoading: boolean;\n  columns: Array<any>;\n  rows: Array<any>;\n  table_id: string;\n  isSingleSelection: boolean;\n  isRowFreeze: boolean;\n  dataSelection?: (selection: any, data: any, code: string | null) => void;\n  CustomFooterComponent?: any;\n  isRowSelectable?: ((params: GridRowParams<any>) => boolean) | undefined;\n  getCellClassName?:\n    | ((params: GridCellParams<any, any, any, GridTreeNode>) => string)\n    | undefined;\n  footerChildren?: (\n    rowSelectionModel: GridRowSelectionModel,\n    rows: Array<any>\n  ) => ReactElement;\n  footerPaginationPosition?: string;\n  showFooterSelectedCount?: boolean;\n  checkboxSelection?: boolean | undefined;\n}\n\nconst TableContext = createContext<{\n  rowSelectionModel: GridRowSelectionModel;\n  rows: Array<any>;\n  footerPaginationPosition?: string;\n  showFooterSelectedCount?: boolean;\n  footerChildren: (\n    rowSelectionModel: GridRowSelectionModel,\n    rows: Array<any>\n  ) => ReactElement;\n}>({\n  rows: [],\n  rowSelectionModel: [],\n  footerChildren: () => <div></div>,\n  footerPaginationPosition: \"right-left\",\n  showFooterSelectedCount: true,\n});\nconst Table = forwardRef(\n  (\n    {\n      isLoading,\n      columns,\n      rows,\n      table_id,\n      isSingleSelection,\n      isRowFreeze,\n      dataSelection,\n      CustomFooterComponent = DefaultooterComponent,\n      isRowSelectable,\n      getCellClassName,\n      checkboxSelection = true,\n      footerChildren = (\n        rowSelectionModel: GridRowSelectionModel,\n        rows: Array<any>\n      ) => <div></div>,\n      footerPaginationPosition = \"right-left\",\n      showFooterSelectedCount = true,\n    }: TableProps,\n    ref\n  ) => {\n    const [selectedRows, setSelectedRows] = useState<any>([]);\n\n    useImperativeHandle(ref, () => ({\n      removeSelection: () => {\n        setSelectedRows([]);\n      },\n      getSelectedRows: () => {\n        return rows.filter((item: any) =>\n          selectedRows?.includes(item[table_id])\n        );\n      },\n      setSelectedRows: (data: Array<any>) => {\n        setSelectedRows(data);\n      },\n    }));\n\n    function onSelectionChange(selection: any, data: any, code: string | null) {\n      if (dataSelection) {\n        dataSelection(selection, data, code);\n      }\n    }\n    let freezeArray: Array<any> = [];\n\n    return (\n      <TableContext.Provider\n        value={{\n          showFooterSelectedCount,\n          footerPaginationPosition,\n          rowSelectionModel: selectedRows,\n          rows,\n          footerChildren,\n        }}\n      >\n        <DataGrid\n          slots={{\n            loadingOverlay: LinearProgress,\n            footer: CustomFooterComponent,\n          }}\n          initialState={{\n            pagination: { paginationModel: { pageSize: 35 } },\n          }}\n          loading={isLoading}\n          getRowId={(row) => row[table_id]}\n          columns={columns.filter((col: any) => !col.hide) as GridColDef<any>[]}\n          rows={rows}\n          showCellVerticalBorder={true}\n          showColumnVerticalBorder={true}\n          checkboxSelection={checkboxSelection}\n          rowSelectionModel={selectedRows}\n          rowHeight={25}\n          columnHeaderHeight={35}\n          pageSizeOptions={[10, 20, 35, 50, 75, 100]}\n          sx={{\n            \"& .cash\": {\n              color: \"#ec4899\",\n            },\n            \"& .check\": {\n              color: \"#0891b2\",\n            },\n            \"& .approved\": {\n              color: \"green\",\n            },\n            \"& .pending\": {\n              color: \"orange\",\n            },\n            \"& .disapproved\": {\n              color: \"red\",\n            },\n            \"& .normal\": {\n              color: \"red\",\n            },\n            \"& .MuiDataGrid-row.Mui-selected:hover\": {\n              color: \"black\",\n              \"& .MuiSvgIcon-root \": {\n                fill: \"#3b82f6\",\n              },\n            },\n            \"& .hover-keyboard\": {\n              background: \"#2563eb\",\n              color: \"white\",\n              \"& .MuiSvgIcon-root \": {\n                fill: \"white\",\n              },\n            },\n            \"& .MuiDataGrid-row:hover\": {\n              background: \"#2563eb\",\n              color: \"white\",\n              \"& .MuiSvgIcon-root \": {\n                fill: \"white\",\n              },\n            },\n            \"& .MuiDataGrid-row.hover\": {\n              background: \"#2563eb\",\n              color: \"white\",\n              \"& .MuiSvgIcon-root \": {\n                fill: \"white\",\n              },\n            },\n            \"& .MuiTablePagination-root p \": {\n              padding: \"0 !important\",\n            },\n\n            ...{\n              \"& .MuiDataGrid-columnHeaders\": {\n                background: \"#64748b\",\n                color: \"white\",\n                fontSize: \"14px\",\n                // borderBottomColor: \"#38bdf8\",\n              },\n              \"& .MuiDataGrid-columnHeaderCheckbox .MuiDataGrid-columnHeaderTitleContainer .MuiSvgIcon-root \":\n                {\n                  display: isSingleSelection || isRowFreeze ? \"none\" : \"block\",\n                  fill: \"white\",\n                },\n              \"& .MuiDataGrid-columnHeaderCheckbox .MuiDataGrid-columnHeaderTitleContainer input \":\n                {\n                  display: isSingleSelection || isRowFreeze ? \"none\" : \"block\",\n                },\n            },\n            ...{\n              fontSize: 13,\n              fontWeight: 500,\n              \"& .MuiDataGrid-checkboxInput\": {\n                height: \"27px\",\n                width: \"27px\",\n              },\n              \"& .MuiDataGrid-checkboxInput svg\": {\n                height: \"20px\",\n                width: \"20px\",\n              },\n            },\n          }}\n          // onRowDoubleClick={(e, r) => {\n          //   console.log(e, r);\n          // }}\n\n          onRowSelectionModelChange={(selection) => {\n            if (isRowFreeze) {\n              if (selection.length <= 0) return;\n              freezeArray = selection;\n              if (selectedRows.includes(freezeArray[freezeArray.length - 1]))\n                return;\n\n              setSelectedRows(selection);\n\n              onSelectionChange([selection[selection.length - 1]], rows, null);\n              return;\n            }\n\n            if (!isRowFreeze && isSingleSelection) {\n              if (selectedRows && selectedRows?.length > 0) {\n                const selectionSet = new Set(selectedRows);\n                setSelectedRows(\n                  selection.filter((s: any) => !selectionSet.has(s))\n                );\n              } else {\n                setSelectedRows(selection);\n              }\n            } else {\n              setSelectedRows(selection);\n            }\n\n            onSelectionChange([selection[selection.length - 1]], rows, null);\n          }}\n          onCellKeyDown={(__: any, key: any) => {\n            const keyFinding = [\"NumpadEnter\", \"Enter\", \"Delete\", \"Backspace\"];\n            if (!keyFinding.includes(key.code)) {\n              return;\n            }\n            key.preventDefault();\n            if (key.code === \"Enter\" || key.code === \"NumpadEnter\") {\n              if (isSingleSelection && !isRowFreeze) {\n                return setSelectedRows((data: any) => {\n                  if (data && data.length > 0 && data[0] === __.rowNode.id) {\n                    onSelectionChange([], rows, key.code);\n                    return [];\n                  }\n                  onSelectionChange([__.rowNode.id], rows, key.code);\n                  return [__.rowNode.id];\n                });\n              } else {\n                setSelectedRows((data: any) => {\n                  if (\n                    data &&\n                    !isRowFreeze &&\n                    data.length > 0 &&\n                    data.includes(__.rowNode.id)\n                  ) {\n                    data = data.filter((item: any) => item !== __.rowNode.id);\n                    onSelectionChange([], rows, key.code);\n                    return data;\n                  }\n                  if (\n                    data &&\n                    isRowFreeze &&\n                    data.length > 0 &&\n                    data.includes(__.rowNode.id)\n                  ) {\n                    return data;\n                  }\n                  onSelectionChange([__.rowNode.id], rows, key.code);\n                  return [...data, __.rowNode.id];\n                });\n              }\n              return;\n            }\n            if (key.code === \"Delete\" || key.code === \"Backspace\") {\n              setSelectedRows([__.rowNode.id]);\n              return onSelectionChange([__.rowNode.id], rows, key.code);\n            }\n          }}\n          disableVirtualization\n          isRowSelectable={isRowSelectable}\n          getCellClassName={getCellClassName}\n        />\n      </TableContext.Provider>\n    );\n  }\n);\n\nexport default Table;\nfunction Pagination({\n  page,\n  onPageChange,\n  className,\n}: Pick<TablePaginationProps, \"page\" | \"onPageChange\" | \"className\">) {\n  const apiRef = useGridApiContext();\n  const pageCount = useGridSelector(apiRef, gridPageCountSelector);\n\n  return (\n    <MuiPagination\n      variant=\"outlined\"\n      color=\"primary\"\n      className={className}\n      count={pageCount}\n      page={page + 1}\n      onChange={(event, newPage) => {\n        onPageChange(event as any, newPage - 1);\n      }}\n    />\n  );\n}\n\nfunction CustomPagination(props: any) {\n  return <GridPagination ActionsComponent={Pagination} {...props} />;\n}\nfunction DefaultooterComponent(\n  props: NonNullable<GridSlotsComponentsProps[\"footer\"]>\n) {\n  const {\n    rowSelectionModel,\n    showFooterSelectedCount,\n    footerPaginationPosition,\n    footerChildren,\n    rows,\n  } = useContext(TableContext);\n  return (\n    <Box\n      sx={{\n        columnGap: \"50px\",\n        display: \"flex\",\n        width: \"100%\",\n        justifyContent: \"space-between\",\n        px: 3,\n        alignItems: \"center\",\n        flexDirection:\n          footerPaginationPosition === \"right-left\" ? \"row-reverse\" : \"row\",\n      }}\n    >\n      <CustomPagination {...props} />\n      <Box\n        sx={{\n          display: \"flex\",\n          justifyContent:\n            footerPaginationPosition === \"right-left\"\n              ? \"flex-start\"\n              : \"flex-end\",\n          flex: 1,\n          alignItems: \"center\",\n        }}\n      >\n        {showFooterSelectedCount && (\n          <div>Selected:{rowSelectionModel?.length}</div>\n        )}\n        <div>{footerChildren(rowSelectionModel, rows)}</div>\n      </Box>\n    </Box>\n  );\n}\n","import React, { useContext, useRef, useState, CSSProperties } from \"react\";\nimport {\n  FormControl,\n  MenuItem,\n  Select,\n  TextField,\n  InputLabel,\n  Box,\n  InputAdornment,\n  IconButton,\n  OutlinedInput,\n} from \"@mui/material\";\nimport { useQuery } from \"react-query\";\nimport { AuthContext } from \"../../../../components/AuthContext\";\nimport CustomDatePicker from \"../../../../components/DatePicker\";\nimport { LoadingButton } from \"@mui/lab\";\nimport useQueryModalTable from \"../../../../hooks/useQueryModalTable\";\nimport PersonSearchIcon from \"@mui/icons-material/PersonSearch\";\nimport PrintPreview, {\n  columnSelection,\n  copiedByHeaderOnDoubleClick,\n} from \"../../../../components/PrintPreview/PrintPreview\";\nimport \"./productionreport.css\";\nimport { flushSync } from \"react-dom\";\nimport { arrangeData } from \"../../../../components/PrintPreview/dataCore\";\nimport { format } from \"date-fns\";\n\nconst initialState = {\n  account: \"\",\n  account_title: \"\",\n  dateFormat: \"Custom\",\n  dateFrom: new Date(),\n  dateTo: new Date(),\n  yearCount: new Date().getFullYear().toString().slice(-2),\n  subsi: 0,\n  subsi_options: \"\",\n  format: 0,\n  field: 0,\n  title: \"\",\n  report: \"Custom\",\n};\nconst subsidiaryLedgerColumnWithBalance = [\n  {\n    datakey: \"Date_Entry\",\n    header: \"DATE\",\n    width: \"170px\",\n    excelColumnWidth: 20,\n  },\n  {\n    datakey: \"Source_No\",\n    header: \"REF NO.\",\n    width: \"300px\",\n    excelColumnWidth: 20,\n  },\n  {\n    datakey: \"Sub_Acct\",\n    header: \"SUB ACCT.\",\n    width: \"100px\",\n    excelColumnWidth: 20,\n  },\n  {\n    datakey: \"ID_No\",\n    header: \"ID NO\",\n    width: \"300px\",\n    excelColumnWidth: 20,\n  },\n  // {\n  //   datakey: \"Check_No\",\n  //   header: \"CHECK NO\",\n  //   width: \"120px\",\n  //   excelColumnWidth: 20,\n  // },\n  {\n    datakey: \"Debit\",\n    header: \"DEBIT\",\n    type: \"number\",\n    total: true,\n    width: \"100px\",\n    excelColumnWidth: 20,\n  },\n  {\n    datakey: \"Credit\",\n    header: \"CREDIT\",\n    type: \"number\",\n    total: true,\n    width: \"100px\",\n    excelColumnWidth: 20,\n  },\n  {\n    datakey: \"Bal\",\n    header: \"BALANCE\",\n    total: true,\n    type: \"number\",\n    width: \"100px\",\n    excelColumnWidth: 20,\n  },\n  {\n    datakey: \"Explanation\",\n    header: \"EXPLANATION\",\n    width: \"300px\",\n    excelColumnWidth: 20,\n  },\n];\nconst subsidiaryLedgerColumnNoBalance = [\n  {\n    datakey: \"Date_Entry\",\n    header: \"DATE\",\n    width: \"170px\",\n    excelColumnWidth: 20,\n  },\n  {\n    datakey: \"Source_No\",\n    header: \"REF NO.\",\n    width: \"250px\",\n    excelColumnWidth: 20,\n  },\n  {\n    datakey: \"Sub_Acct\",\n    header: \"SUB ACCT.\",\n    width: \"100px\",\n    excelColumnWidth: 20,\n  },\n  {\n    datakey: \"ID_No\",\n    header: \"ID NO\",\n    width: \"300px\",\n    excelColumnWidth: 20,\n  },\n  {\n    datakey: \"Check_No\",\n    header: \"CHECK NO\",\n    width: \"120px\",\n    excelColumnWidth: 20,\n  },\n  {\n    datakey: \"Debit\",\n    header: \"DEBIT\",\n    total: true,\n    type: \"number\",\n    width: \"120px\",\n    excelColumnWidth: 20,\n  },\n  {\n    datakey: \"Credit\",\n    header: \"CREDIT\",\n    total: true,\n    type: \"number\",\n    width: \"120px\",\n    excelColumnWidth: 20,\n  },\n  {\n    datakey: \"Explanation\",\n    header: \"EXPLANATION\",\n    width: \"200px\",\n    excelColumnWidth: 20,\n  },\n];\nexport const reducer = (state: any, action: any) => {\n  switch (action.type) {\n    case \"UPDATE_FIELD\":\n      return {\n        ...state,\n        [action.field]: action.value,\n      };\n    default:\n      return state;\n  }\n};\nfunction ShowDateSelection({ state, dispatch, handleInputChange, user }: any) {\n  const dateFromRef = useRef<HTMLElement>(null);\n  const dateToRef = useRef<HTMLElement>(null);\n\n  return (\n    <>\n      <CustomDatePicker\n        fullWidth={true}\n        label=\"Date From\"\n        onChange={(value: any) => {\n          dispatch({\n            type: \"UPDATE_FIELD\",\n            field: \"dateFrom\",\n            value: value,\n          });\n          state.dateFrom = value;\n          dispatch({\n            type: \"UPDATE_FIELD\",\n            field: \"title\",\n            value: setupTitle(state, user?.department as string),\n          });\n        }}\n        value={new Date(state.dateFrom)}\n        onKeyDown={(e: any) => {\n          if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n            const timeout = setTimeout(() => {\n              dateFromRef.current?.querySelector(\"button\")?.click();\n              clearTimeout(timeout);\n            }, 150);\n          }\n        }}\n        datePickerRef={dateFromRef}\n        textField={{\n          InputLabelProps: {\n            style: {\n              fontSize: \"14px\",\n            },\n          },\n          InputProps: {\n            style: { height: \"27px\", fontSize: \"14px\" },\n          },\n        }}\n        sx={{}}\n      />\n      <CustomDatePicker\n        fullWidth={true}\n        label=\"Date To\"\n        onChange={(value: any) => {\n          dispatch({\n            type: \"UPDATE_FIELD\",\n            field: \"dateTo\",\n            value: value,\n          });\n          state.dateTo = value;\n          dispatch({\n            type: \"UPDATE_FIELD\",\n            field: \"title\",\n            value: setupTitle(state, user?.department as string),\n          });\n        }}\n        value={new Date(state.dateTo)}\n        onKeyDown={(e: any) => {\n          if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n            const timeout = setTimeout(() => {\n              dateToRef.current?.querySelector(\"button\")?.click();\n              clearTimeout(timeout);\n            }, 150);\n          }\n        }}\n        datePickerRef={dateToRef}\n        textField={{\n          InputLabelProps: {\n            style: {\n              fontSize: \"14px\",\n            },\n          },\n          InputProps: {\n            style: { height: \"27px\", fontSize: \"14px\" },\n          },\n        }}\n      />\n    </>\n  );\n}\nfunction setupTitle(state: any, department: string) {\n  return `${\n    department === \"UMIS\"\n      ? \"UPWARD MANAGEMENT INSURANCE SERVICES\"\n      : \"UPWARD CONSULTANCY SERVICES AND MANAGEMENT INC.\"\n  }\\nSubsidiary Ledger\\n\\n\\nAccount:${\n    state.account === \"\" ? \"\" : `${state.account_title} `\n  }(${state.account === \"\" ? \"ALL\" : state.account})\\n${\n    state.subsi === 0\n      ? `For the Period: ${DateToStringFormat(state)}`\n      : state.subsi === 1\n      ? `ID No.:  (${state.subsi_options})`\n      : `Sub Account: (${state.subsi_options})`\n  }\n`;\n}\nfunction DateToStringFormat(state: any) {\n  let dateString = \"\";\n  if (state.dateFormat === \"Daily\") {\n    dateString = state.dateFrom.toLocaleDateString(\"en-US\", {\n      year: \"numeric\",\n      month: \"long\",\n      day: \"numeric\",\n    });\n  } else if (state.dateFormat === \"Monthly\") {\n    dateString = state.dateFrom.toLocaleDateString(\"en-US\", {\n      year: \"numeric\",\n      month: \"long\",\n    });\n  } else if (state.dateFormat === \"Yearly\") {\n    const year = new Date(state.dateFrom).getFullYear();\n    const { startYearFormatted, endYearFormatted } = formatYearRange(\n      year,\n      parseInt(state.yearCount)\n    );\n    dateString = `${startYearFormatted}-${endYearFormatted}`;\n  } else {\n    const dateFrom = state.dateFrom.toLocaleDateString(\"en-US\", {\n      year: \"numeric\",\n      month: \"long\",\n      day: \"numeric\",\n    });\n    const dateTo = state.dateTo.toLocaleDateString(\"en-US\", {\n      year: \"numeric\",\n      month: \"long\",\n      day: \"numeric\",\n    });\n    dateString = `${dateFrom} to ${dateTo}`;\n  }\n\n  return dateString;\n}\nfunction formatYearRange(startYear: number, yearCount: number) {\n  const startDate = new Date(startYear, 0, 1); // Month is 0-based, so 0 is January\n  const endDate = new Date(startYear + yearCount, 11, 31); // Last day of the last year\n\n  const startYearFormatted = startDate.getFullYear();\n  const endYearFormatted = endDate.getFullYear();\n\n  if (endYearFormatted < startYearFormatted) {\n    return {\n      startYearFormatted: endYearFormatted,\n      endYearFormatted: startYearFormatted,\n    };\n  } else {\n    return {\n      startYearFormatted,\n      endYearFormatted,\n    };\n  }\n}\nfunction Setting({ state, dispatch }: { state: any; dispatch: any }) {\n  const chartAccountSearchInput = useRef<HTMLInputElement>(null);\n  const clientSearchInput = useRef<HTMLInputElement>(null);\n  const { myAxios, user } = useContext(AuthContext);\n  const { data: dataSubAccounts, isLoading: isLoadingSubAccounts } = useQuery({\n    queryKey: \"sub-accounts\",\n    queryFn: async () =>\n      await myAxios.get(\"/reports/accounting/get-sub-account-acronym\", {\n        headers: {\n          Authorization: `Bearer ${user?.accessToken}`,\n        },\n      }),\n  });\n\n  const {\n    ModalComponent: ModalClientIDs,\n    openModal: openCliendIDsModal,\n    isLoading: isLoadingClientIdsModal,\n    closeModal: closeCliendIDsModal,\n  } = useQueryModalTable({\n    link: {\n      url: \"/task/accounting/search-pdc-policy-id\",\n      queryUrlName: \"searchPdcPolicyIds\",\n    },\n    columns: [\n      { field: \"Type\", headerName: \"Type\", width: 130 },\n      { field: \"IDNo\", headerName: \"ID No.\", width: 200 },\n      {\n        field: \"Name\",\n        headerName: \"Name\",\n        flex: 1,\n      },\n      {\n        field: \"ID\",\n        headerName: \"ID\",\n        flex: 1,\n        hide: true,\n      },\n    ],\n    queryKey: \"client-ids\",\n    uniqueId: \"IDNo\",\n    responseDataKey: \"clientsId\",\n    onSelected: (selectedRowData, data) => {\n      dispatch({\n        type: \"UPDATE_FIELD\",\n        field: \"subsi_options\",\n        value: selectedRowData[0].IDNo,\n      });\n      state.subsi_options = selectedRowData[0].IDNo;\n      dispatch({\n        type: \"UPDATE_FIELD\",\n        field: \"title\",\n        value: setupTitle(state, user?.department as string),\n      });\n\n      closeCliendIDsModal();\n    },\n    searchRef: clientSearchInput,\n  });\n\n  const {\n    ModalComponent: modalChartAccount,\n    openModal: openChartAccountModal,\n    isLoading: isLoadingChartAccountModal,\n    closeModal: closeChartAccountModal,\n  } = useQueryModalTable({\n    link: {\n      url: \"/reports/accounting/chart-schedule-account\",\n      queryUrlName: \"account_search\",\n    },\n    columns: [\n      { field: \"Acct_Code\", headerName: \"Code\", width: 130 },\n      { field: \"Acct_Title\", headerName: \"Tittle\", flex: 1 },\n      {\n        field: \"Short\",\n        headerName: \"Short Name\",\n        flex: 1,\n      },\n    ],\n    queryKey: \"chart-account-ids\",\n    uniqueId: \"Acct_Code\",\n    responseDataKey: \"chartAccount\",\n    onSelected: (selectedRowData, data) => {\n      dispatch({\n        type: \"UPDATE_FIELD\",\n        field: \"account\",\n        value: selectedRowData[0].Acct_Code,\n      });\n      dispatch({\n        type: \"UPDATE_FIELD\",\n        field: \"account_title\",\n        value: selectedRowData[0].Acct_Title,\n      });\n\n      state.account = selectedRowData[0].Acct_Code;\n      dispatch({\n        type: \"UPDATE_FIELD\",\n        field: \"title\",\n        value: setupTitle(state, user?.department as string),\n      });\n\n      state.account_title = selectedRowData[0].Acct_Title;\n      dispatch({\n        type: \"UPDATE_FIELD\",\n        field: \"title\",\n        value: setupTitle(state, user?.department as string),\n      });\n\n      closeChartAccountModal();\n    },\n    searchRef: chartAccountSearchInput,\n  });\n\n  const handleInputChange = (e: any) => {\n    const { name, value } = e.target;\n    if (name === \"account\" && value === \"\") {\n      dispatch({ type: \"UPDATE_FIELD\", field: \"account_title\", value: \"\" });\n    }\n    dispatch({\n      type: \"UPDATE_FIELD\",\n      field: \"title\",\n      value: setupTitle(\n        { ...state, [name]: value },\n        user?.department as string\n      ),\n    });\n    dispatch({ type: \"UPDATE_FIELD\", field: name, value });\n  };\n\n  return (\n    <div\n      style={{\n        padding: \"10px\",\n      }}\n    >\n      <TextField\n        label=\"Title\"\n        fullWidth\n        name=\"title\"\n        value={state.title}\n        onChange={handleInputChange}\n        rows={6}\n        multiline\n        InputProps={{\n          style: { height: \"140px\", fontSize: \"12px\" },\n        }}\n        sx={{\n          flex: 1,\n          \".MuiFormLabel-root\": { fontSize: \"14px\" },\n          \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n        }}\n      />\n      <Box\n        sx={(theme) => ({\n          height: \"100%\",\n          display: \"flex\",\n          flexDirection: \"column\",\n          gap: \"10px\",\n          margin: \"10px 0\",\n          width: \"100%\",\n        })}\n      >\n        {isLoadingChartAccountModal ? (\n          <LoadingButton loading={isLoadingChartAccountModal} />\n        ) : (\n          <FormControl\n            sx={{\n              gridColumn: \"1 / span 2\",\n              width: \"100%\",\n              \".MuiFormLabel-root\": {\n                fontSize: \"14px\",\n                background: \"white\",\n                zIndex: 99,\n                padding: \"0 3px\",\n              },\n              \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n            }}\n            variant=\"outlined\"\n            size=\"small\"\n          >\n            <InputLabel htmlFor=\"account_id\">Account</InputLabel>\n            <OutlinedInput\n              sx={{\n                height: \"27px\",\n                fontSize: \"14px\",\n              }}\n              name=\"account\"\n              value={state.account}\n              onChange={handleInputChange}\n              id=\"account_id\"\n              onKeyDown={(e) => {\n                if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n                  return openChartAccountModal(state.account);\n                }\n              }}\n              endAdornment={\n                <InputAdornment position=\"end\">\n                  <IconButton\n                    onClick={() => {\n                      openChartAccountModal(state.account);\n                    }}\n                    edge=\"end\"\n                    color=\"secondary\"\n                  >\n                    <PersonSearchIcon />\n                  </IconButton>\n                </InputAdornment>\n              }\n              label=\"Account\"\n            />\n          </FormControl>\n        )}\n        <TextField\n          fullWidth\n          name=\"account_title\"\n          value={state.account_title}\n          onChange={handleInputChange}\n          InputProps={{\n            readOnly: true,\n            style: { height: \"27px\" },\n          }}\n          sx={{\n            gridColumn: \"1 / span 2\",\n            \".MuiFormLabel-root\": { fontSize: \"14px\" },\n            \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n          }}\n        />\n        <FormControl\n          fullWidth\n          variant=\"outlined\"\n          size=\"small\"\n          sx={{\n            \".MuiFormLabel-root\": {\n              fontSize: \"14px\",\n              background: \"white\",\n              zIndex: 99,\n              padding: \"0 3px\",\n            },\n            \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n          }}\n        >\n          <InputLabel id=\"subsi_id\">Subsidiary</InputLabel>\n          <Select\n            labelId=\"subsi_id\"\n            value={state.subsi}\n            label=\"Subsidiary\"\n            name=\"subsi\"\n            onChange={(e) => {\n              handleInputChange(e);\n              handleInputChange({\n                target: {\n                  value: \"\",\n                  name: \"subsi_options\",\n                },\n              });\n            }}\n            sx={{\n              height: \"27px\",\n              fontSize: \"14px\",\n              width: \"120px\",\n            }}\n          >\n            <MenuItem value={0}>All</MenuItem>\n            <MenuItem value={1}>I.D No.</MenuItem>\n            <MenuItem value={2}>Sub Acct</MenuItem>\n          </Select>\n        </FormControl>\n        {state.subsi === 0 && (\n          <TextField\n            InputProps={{\n              readOnly: true,\n              style: { height: \"27px\" },\n            }}\n            sx={{\n              flex: 1,\n              \".MuiFormLabel-root\": { fontSize: \"14px\" },\n              \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n            }}\n          />\n        )}\n        {state.subsi === 1 && (\n          <React.Fragment>\n            {isLoadingClientIdsModal ? (\n              <LoadingButton loading={isLoadingClientIdsModal} />\n            ) : (\n              <FormControl\n                sx={{\n                  width: \"100%\",\n                  \".MuiFormLabel-root\": {\n                    fontSize: \"14px\",\n                    background: \"white\",\n                    zIndex: 99,\n                    padding: \"0 3px\",\n                  },\n                  \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n                }}\n                variant=\"outlined\"\n                size=\"small\"\n              >\n                <InputLabel htmlFor=\"clients_id\">Clients</InputLabel>\n                <OutlinedInput\n                  sx={{\n                    height: \"27px\",\n                    fontSize: \"14px\",\n                  }}\n                  label=\"Clients\"\n                  name=\"subsi_options\"\n                  value={state.subsi_options}\n                  onChange={handleInputChange}\n                  id=\"clients_id\"\n                  onKeyDown={(e) => {\n                    if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n                      return openCliendIDsModal(state.subsi_options);\n                    }\n                  }}\n                  endAdornment={\n                    <InputAdornment position=\"end\">\n                      <IconButton\n                        onClick={() => {\n                          openCliendIDsModal(state.subsi_options);\n                        }}\n                        edge=\"end\"\n                        color=\"secondary\"\n                      >\n                        <PersonSearchIcon />\n                      </IconButton>\n                    </InputAdornment>\n                  }\n                />\n              </FormControl>\n            )}\n          </React.Fragment>\n        )}\n        {state.subsi === 2 && (\n          <React.Fragment>\n            {isLoadingSubAccounts ? (\n              <LoadingButton loading={isLoadingSubAccounts} />\n            ) : (\n              <FormControl\n                fullWidth\n                variant=\"outlined\"\n                size=\"small\"\n                sx={{\n                  \".MuiFormLabel-root\": {\n                    fontSize: \"14px\",\n                    background: \"white\",\n                    zIndex: 99,\n                    padding: \"0 3px\",\n                  },\n                  \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n                }}\n              >\n                <InputLabel id=\"sub_account_id\">Sub Account</InputLabel>\n                <Select\n                  labelId=\"sub_account_id\"\n                  value={state.subsi_options}\n                  label=\"Sub Account\"\n                  name=\"subsi_options\"\n                  onChange={handleInputChange}\n                  sx={{\n                    height: \"27px\",\n                    fontSize: \"14px\",\n                  }}\n                >\n                  <MenuItem value={\"All\"}>All</MenuItem>\n                  {dataSubAccounts?.data.sub_account.map(\n                    (itm: any, idx: number) => {\n                      return (\n                        <MenuItem key={idx} value={itm.Acronym}>\n                          {itm.Acronym}\n                        </MenuItem>\n                      );\n                    }\n                  )}\n                </Select>\n              </FormControl>\n            )}\n          </React.Fragment>\n        )}\n\n        <ShowDateSelection\n          dispatch={dispatch}\n          state={state}\n          handleInputChange={handleInputChange}\n          user={user}\n        />\n      </Box>\n      <fieldset\n        style={\n          {\n            gridArea: \"content4\",\n            padding: \"15px\",\n            border: \"1px solid #cbd5e1\",\n            borderRadius: \"5px\",\n            position: \"relative\",\n            flex: 1,\n          } as CSSProperties\n        }\n      >\n        <legend style={{ color: \"black\", fontFamily: \"serif\" }}>Report</legend>\n        <Box\n          sx={(theme) => ({\n            width: \"100%\",\n            display: \"flex\",\n            flexDirection: \"column\",\n            rowGap: \"10px\",\n            alignItems: \"center\",\n          })}\n        >\n          <FormControl\n            fullWidth\n            variant=\"outlined\"\n            size=\"small\"\n            sx={{\n              \".MuiFormLabel-root\": {\n                fontSize: \"14px\",\n                background: \"white\",\n                zIndex: 99,\n                padding: \"0 3px\",\n              },\n              \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n            }}\n          >\n            <InputLabel id=\"format\">Format</InputLabel>\n            <Select\n              labelId=\"format\"\n              value={state.format}\n              label=\"Format\"\n              name=\"format\"\n              onChange={handleInputChange}\n              sx={{\n                height: \"27px\",\n                fontSize: \"14px\",\n              }}\n            >\n              <MenuItem value={0}>With Running Balance</MenuItem>\n              <MenuItem value={1}>No Running Balance</MenuItem>\n            </Select>\n          </FormControl>\n          <FormControl\n            fullWidth\n            variant=\"outlined\"\n            size=\"small\"\n            sx={{\n              \".MuiFormLabel-root\": {\n                fontSize: \"14px\",\n                background: \"white\",\n                zIndex: 99,\n                padding: \"0 3px\",\n              },\n              \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n            }}\n          >\n            <InputLabel id=\"field\">Field</InputLabel>\n            <Select\n              labelId=\"field\"\n              value={state.field}\n              label=\"Sort\"\n              name=\"field\"\n              onChange={handleInputChange}\n              sx={{\n                height: \"27px\",\n                fontSize: \"14px\",\n              }}\n            >\n              <MenuItem value={0}>Explanations</MenuItem>\n              <MenuItem value={1}>Payee</MenuItem>\n              <MenuItem value={2}>Remarks</MenuItem>\n            </Select>\n          </FormControl>\n        </Box>\n      </fieldset>\n      {modalChartAccount}\n      {ModalClientIDs}\n    </div>\n  );\n}\nfunction columnRender(format: any) {\n  return [\n    subsidiaryLedgerColumnWithBalance,\n    subsidiaryLedgerColumnWithBalance,\n    subsidiaryLedgerColumnNoBalance,\n  ][format];\n}\n\nexport default function SubsidiaryLedger() {\n  const { myAxios, user } = useContext(AuthContext);\n  const [column, setColumn] = useState(columnRender(initialState.subsi));\n  async function onReportSubmit(setData: any, setLoading: any, state: any) {\n    const updateColumn = columnRender(state.subsi);\n    flushSync(() => {\n      setColumn(updateColumn);\n    });\n\n    const response = await myAxios.post(\n      \"/reports/accounting/subsidiary-ledger-report\",\n      state,\n      {\n        headers: {\n          Authorization: `Bearer ${user?.accessToken}`,\n        },\n      }\n    );\n    const jsonData = await response.data;\n    arrangeData({\n      data: JSON.parse(jsonData.report),\n      column: updateColumn,\n      beforeArrangeData: (itm) => {\n        const columnNumber = updateColumn\n          .filter((itm: any) => itm.type === \"number\")\n          .map((d: any) => d.datakey);\n\n        columnNumber.forEach((datakey: any) => {\n          if (itm.hasOwnProperty(datakey)) {\n            itm[datakey] = formatNumberWithCommas(\n              parseFloat(itm[datakey].toString().replace(/,/g, \"\"))\n            );\n          }\n        });\n\n        return itm;\n      },\n      adjustMaxHeight: 250,\n      // drawHeader: (data: any) => {\n      //   const DrawHeader = ({ state }: any) => (\n      //     <thead>\n      //       {state.title.split(\"\\n\").map((t: string, idx: number) => {\n      //         return (\n      //           <tr key={idx}>\n      //             <th\n      //               style={{\n      //                 fontSize: \"14px\",\n      //                 fontWeight: \"bold\",\n      //                 textAlign: \"left\",\n      //               }}\n      //               colSpan={column.length}\n      //             >\n      //               {t}\n      //             </th>\n      //           </tr>\n      //         );\n      //       })}\n      //       <tr style={{ height: \"40px\" }}></tr>\n      //       <tr>\n      //         {column.map((itm: any, rowIdx: number) => {\n      //           return (\n      //             <th\n      //               onDoubleClick={(e) =>\n      //                 copiedByHeaderOnDoubleClick(e, itm.datakey, data)\n      //               }\n      //               style={{\n      //                 width: itm.width,\n      //                 fontSize: \"12px\",\n      //                 fontWeight: \"bold\",\n      //                 borderBottom: \"1px solid black\",\n      //               }}\n      //               key={rowIdx}\n      //             >\n      //               {itm.header}\n      //             </th>\n      //           );\n      //         })}\n      //       </tr>\n      //     </thead>\n      //   );\n\n      //   return ReactDOMServer.renderToString(<DrawHeader state={state} />);\n      // },\n      // drawTable: (rowItem: any) => {\n      //   const DrawData = () => {\n      //     return (\n      //       <tr>\n      //         {column.map((colItem: any, colIdx: number) => {\n      //           return (\n      //             <td\n      //               onClick={columnSelection}\n      //               className={`editable not-looking `}\n      //               key={colIdx}\n      //               style={{\n      //                 fontSize: \"11px\",\n      //                 fontWeight: \"500\",\n      //                 width: `${colItem.width} !important`,\n      //                 textAlign:\n      //                   colItem.datakey === \"AssuredName\" ||\n      //                   colItem.datakey === \"Mortgagee\"\n      //                     ? \"center\"\n      //                     : colItem.total || colItem.datakey === \"InsuredValue\"\n      //                     ? \"right\"\n      //                     : \"left\",\n      //               }}\n      //             >\n      //               {rowItem[colItem.datakey]}\n      //             </td>\n      //           );\n      //         })}\n      //       </tr>\n      //     );\n      //   };\n\n      //   return ReactDOMServer.renderToString(<DrawData />);\n      // },\n    }).then((newData) => {\n      setData(newData);\n      setLoading(false);\n    });\n  }\n  initialState.title = setupTitle(initialState, user?.department as string);\n\n  return (\n    <PrintPreview\n      column={column}\n      initialState={initialState}\n      Setting={(state, dispatch) => (\n        <Setting state={state} dispatch={dispatch} />\n      )}\n      onReportSubmit={onReportSubmit}\n      scaleDefaultValue={100}\n      drawTable={(data, state) => {\n        return data.map((pages: any, pageNumber: number) => {\n          return (\n            <div className=\"page out-page\" key={pageNumber}>\n              <div className=\"header\" style={{ height: \"50px\" }}></div>\n              <div className=\"content\">\n                <table>\n                  <thead>\n                    {state.title.split(\"\\n\").map((t: string, idx: number) => {\n                      return (\n                        <tr key={idx}>\n                          <th\n                            style={{\n                              fontSize: \"14px\",\n                              fontWeight: \"bold\",\n                              textAlign: \"left\",\n                            }}\n                            colSpan={column.length}\n                          >\n                            {t}\n                          </th>\n                        </tr>\n                      );\n                    })}\n                    <tr style={{ height: \"40px\" }}></tr>\n                    <tr>\n                      {column.map((itm: any, rowIdx: number) => {\n                        return (\n                          <th\n                            onDoubleClick={(e) =>\n                              copiedByHeaderOnDoubleClick(e, itm.datakey, data)\n                            }\n                            style={{\n                              width: itm.width,\n                              fontSize: \"12px\",\n                              fontWeight: \"bold\",\n                              borderBottom: \"1px solid black\",\n                            }}\n                            key={rowIdx}\n                          >\n                            {itm.header}\n                          </th>\n                        );\n                      })}\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {pages.map((rowItem: any, rowIdx: number) => {\n                      return (\n                        <tr key={rowIdx}>\n                          {column.map((colItem: any, colIdx: number) => {\n                            return (\n                              <td\n                                onClick={columnSelection}\n                                className={`editable not-looking page-${pageNumber}  row-${rowIdx}_col-${colIdx}`}\n                                key={colIdx}\n                                style={{\n                                  fontSize: \"11px\",\n                                  fontWeight: \"500\",\n                                  width: `${colItem.width} !important`,\n                                  textAlign:\n                                    colItem.datakey === \"AssuredName\" ||\n                                    colItem.datakey === \"Mortgagee\"\n                                      ? \"center\"\n                                      : colItem.total ||\n                                        colItem.datakey === \"InsuredValue\"\n                                      ? \"right\"\n                                      : \"left\",\n                                }}\n                              >\n                                {rowItem[colItem.datakey]}\n                              </td>\n                            );\n                          })}\n                        </tr>\n                      );\n                    })}\n                  </tbody>\n                  <tfoot>\n                    {pageNumber === data.length - 1 && (\n                      <tr>\n                        <td\n                          style={{\n                            fontWeight: \"bold\",\n                            borderTop: \"1px solid black\",\n                            fontSize: \"11px\",\n                          }}\n                          colSpan={3}\n                        >\n                          No. of Records: {data.flat().length - 1}\n                        </td>\n                        {column.map((itm: any, idx: number) => {\n                          if (!itm.total) {\n                            if (idx < 3) {\n                              return (\n                                <React.Fragment key={idx}></React.Fragment>\n                              );\n                            }\n                            return (\n                              <td\n                                key={idx}\n                                style={{\n                                  borderTop: \"1px solid black\",\n                                }}\n                              ></td>\n                            );\n                          }\n                          let flattenedArray = data.flat();\n                          const total = flattenedArray.reduce(\n                            (d: any, itms: any) => {\n                              return (\n                                d +\n                                parseFloat(itms[itm.datakey]?.replace(/,/g, \"\"))\n                              );\n                            },\n                            0\n                          );\n\n                          return (\n                            <td\n                              key={idx}\n                              style={{\n                                borderTop: \"1px solid black\",\n                                fontWeight: \"bold\",\n                                textAlign: \"right\",\n                                fontSize: \"11px\",\n                              }}\n                            >\n                              {isNaN(total)\n                                ? \"0\"\n                                : formatNumberWithCommas(total)}\n                            </td>\n                          );\n                        })}\n                      </tr>\n                    )}\n                  </tfoot>\n                </table>\n              </div>\n              <div\n                className=\"footer\"\n                style={{\n                  height: \"50px\",\n                  display: \"flex\",\n                  justifyContent: \"space-between\",\n                }}\n              >\n                <p style={{ fontSize: \"10px\", fontWeight: \"bold\" }}>\n                  {format(new Date(), \"dd/MM/yyyy\")}\n                </p>\n                <p style={{ fontSize: \"10px\", fontWeight: \"bold\" }}>\n                  Page {pageNumber + 1} of {data.length}\n                </p>\n              </div>\n            </div>\n          );\n        });\n      }}\n      pageHeight={\"14in\"}\n      pageWidth={\"10.5in\"}\n    />\n  );\n}\n\nfunction formatNumberWithCommas(number: number) {\n  return number.toLocaleString(\"en-US\", {\n    minimumFractionDigits: 2,\n    maximumFractionDigits: 2,\n  });\n}\n","import { useContext, useState } from \"react\";\nimport { useQuery } from \"react-query\";\nimport { AuthContext, User } from \"../components/AuthContext\";\nimport {\n  GridRowSelectionModel,\n  GridCellParams,\n  GridTreeNode,\n} from \"@mui/x-data-grid\";\nimport ModalWithTable from \"../components/ModalWithTable\";\nimport { flushSync } from \"react-dom\";\nimport { AxiosResponse, AxiosInstance } from \"axios\";\nimport { GridRowParams } from \"@mui/x-data-grid\";\ninterface QueryModalTableParamsType {\n  link?: {\n    url: string;\n    queryUrlName: string;\n  };\n  uniqueId: string;\n  queryKey: string;\n  responseDataKey: string;\n  columns: Array<any>;\n  onSelected?: (selectedRowData: Array<any>, data: Array<any>) => void;\n  onRemoveSelected?: (data: Array<any>) => void;\n  onSuccess?: (data: any) => void;\n  searchRef?: React.RefObject<HTMLInputElement>;\n  onCellKeyDown?: any;\n  onCloseFunction?: (search: any) => void;\n  CustomizeAxios?: (\n    myAxios: AxiosInstance,\n    user: User | null,\n    link: QueryModalTableParamsType[\"link\"],\n    search?: string\n  ) => Promise<AxiosResponse<any, any>>;\n  isRowSelectable?: ((params: GridRowParams<any>) => boolean) | undefined;\n  getCellClassName?:\n    | ((params: GridCellParams<any, any, any, GridTreeNode>) => string)\n    | undefined;\n}\n\nasync function CustomizeAxiosFunc(\n  myAxios: AxiosInstance,\n  user: User | null,\n  link: QueryModalTableParamsType[\"link\"],\n  search: string = \"\"\n) {\n  return myAxios.get(`${link?.url}?${link?.queryUrlName}=${search}`, {\n    headers: {\n      Authorization: `Bearer ${user?.accessToken}`,\n    },\n  });\n}\n\nconst useQueryModalTable = ({\n  link,\n  uniqueId,\n  queryKey,\n  responseDataKey,\n  columns,\n  onSelected = () => {},\n  onRemoveSelected = () => {},\n  onSuccess = () => {},\n  searchRef,\n  onCellKeyDown,\n  onCloseFunction = () => {},\n  CustomizeAxios = CustomizeAxiosFunc,\n  isRowSelectable,\n  getCellClassName,\n}: QueryModalTableParamsType) => {\n  const { myAxios, user } = useContext(AuthContext);\n  const [show, setShowModal] = useState(false);\n  const [rows, setRows] = useState<GridRowSelectionModel>([]);\n  async function customizeAxiostool(search: string = \"\") {\n    return await CustomizeAxios(myAxios, user, link, search);\n  }\n  const { isLoading, refetch } = useQuery({\n    queryKey: queryKey,\n    queryFn: async () => await customizeAxiostool(),\n    onSuccess: (res) => {\n      const response = res as any;\n      setRows(response.data[responseDataKey]);\n      onSuccess(response);\n    },\n    refetchOnWindowFocus: false,\n  });\n\n  const openModal = (search: string = \"\") => {\n    flushSync(() => {\n      setShowModal(true);\n    });\n    if (searchRef?.current) {\n      searchRef.current.value = search;\n      customizeAxiostool(search).then((res: any) => {\n        if (!res?.data.success) {\n          return alert(`Error : ${res?.data.message}`);\n        }\n        const response = res as any;\n        setRows(response.data[responseDataKey]);\n        if (searchRef?.current) searchRef.current.focus();\n      });\n    }\n  };\n\n  const closeModal = () => {\n    setShowModal(false);\n    if (onCloseFunction) {\n      onCloseFunction(searchRef?.current?.value);\n    }\n  };\n\n  const ModalComponent = (\n    <ModalWithTable\n      getCellClassName={getCellClassName}\n      searchRef={searchRef}\n      showModal={show}\n      onCloseModal={() => {\n        setShowModal(false);\n        if (onCloseFunction) {\n          onCloseFunction(searchRef?.current?.value);\n        }\n      }}\n      onClickCloseIcon={() => {\n        setShowModal(false);\n        if (onCloseFunction) {\n          onCloseFunction(searchRef?.current?.value);\n        }\n      }}\n      searchOnChange={(e) => {\n        // myAxios\n        //   .get(`${link.url}?${link.queryUrlName}=${e.target.value}`, {\n        //     headers: {\n        //       Authorization: `Bearer ${user?.accessToken}`,\n        //     },\n        //   })\n        //   .then((res: any) => {\n        //     if (!res?.data.success) {\n        //       return alert(`Error : ${res?.data.message}`);\n        //     }\n        //     const response = res as any;\n        //     setRows(response.data[responseDataKey]);\n        //   });\n      }}\n      onSearchKeyEnter={(value) => {\n        customizeAxiostool(value).then((res: any) => {\n          if (!res?.data.success) {\n            return alert(`Error : ${res?.data.message}`);\n          }\n          const response = res as any;\n          setRows(response.data[responseDataKey]);\n        });\n      }}\n      onCellKeyDown={onCellKeyDown}\n      height={300}\n      isLoading={isLoading}\n      queryKey={queryKey}\n      columns={columns}\n      onSelectionChange={(rowSelectionModel, data) => {\n        if (rowSelectionModel.length <= 0) {\n          return onRemoveSelected(data);\n        }\n        const selectedIDs = new Set(rowSelectionModel);\n        const selectedRowData = data.filter((row: any) => {\n          return selectedIDs.has(row[uniqueId].toString());\n        });\n        if (selectedRowData.length <= 0) return;\n        onSelected(selectedRowData, data);\n      }}\n      id={uniqueId}\n      rows={rows}\n      setRows={setRows}\n      isRowSelectable={isRowSelectable}\n    />\n  );\n\n  return {\n    show,\n    rows,\n    isLoading,\n    openModal,\n    closeModal,\n    ModalComponent,\n    refetch,\n  };\n};\n\nexport default useQueryModalTable;\n","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)([/*#__PURE__*/(0, _jsxRuntime.jsx)(\"circle\", {\n  cx: \"10\",\n  cy: \"8\",\n  r: \"4\"\n}, \"0\"), /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M10.35 14.01C7.62 13.91 2 15.27 2 18v2h9.54c-2.47-2.76-1.23-5.89-1.19-5.99zm9.08 4.01c.36-.59.57-1.28.57-2.02 0-2.21-1.79-4-4-4s-4 1.79-4 4 1.79 4 4 4c.74 0 1.43-.22 2.02-.57L20.59 22 22 20.59l-2.57-2.57zM16 18c-1.1 0-2-.9-2-2s.9-2 2-2 2 .9 2 2-.9 2-2 2z\"\n}, \"1\")], 'PersonSearch');\nexports.default = _default;","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z\"\n}), 'Search');\nexports.default = _default;","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}"],"names":["CustomDatePicker","_ref","label","name","onChange","value","onKeyDown","inputRef","datePickerRef","fullWidth","textField","_ref$minWidth","minWidth","rest","_objectWithoutProperties","_excluded","_jsx","LocalizationProvider","dateAdapter","AdapterDateFns","children","DatePicker","_objectSpread","floatingLabelStyle","color","ref","slotProps","size","InputLabelProps","sx","fieldset","borderColor","fontSize","top","style","position","left","transform","width","bgcolor","boxShadow","p","heigth","ModalWithTable","height","isLoading","columns","queryKey","onSelectionChange","rows","setRows","id","onCloseModal","showModal","onClickCloseIcon","searchOnChange","_ref$title","title","searchRef","_ref$onSearchKeyEnter","onCellKeyDown","onSearchKeyEnter","isRowSelectable","getCellClassName","mainId","generateRandomClass","Modal","open","onClose","_jsxs","Box","Typography","variant","component","mb","TextField","InputProps","endAdornment","InputAdornment","IconButton","onClick","_searchRef$current","current","edge","SearchIcon","type","e","_searchRef$current2","code","preventDefault","keyBoardSelectionTable","marginBottom","className","concat","Table","isSingleSelection","isRowFreeze","dataSelection","selection","data","table_id","right","CloseIcon","Math","floor","random","el","_rows$","document","querySelectorAll","classList","add","firstRowParent","querySelector","firstInput","focus","event","MouseEvent","bubbles","cancelable","view","window","dispatchEvent","addEventListener","es","key","remove","keyBoardUpDown","forEach","idx","_rows$idx","_rows","_rows$idx2","_rows2","length","defaultArrangeDataCore","column","beforeArrangeData","adjustMaxHeight","_ref$fontSize","_ref$summaryHeight","summaryHeight","newData","trHeight","temp","maxHeight","getBoundingClientRect","itm","contentElment","tempTable","createElement","tempRow","insertRow","summaryReport","col","tempCell","insertCell","visibility","content","columnWidth","textContent","appendChild","getTableCellHeight","datakey","removeChild","push","arrangeData","_x","_ref3","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_ref2","cb","_ref2$fontSize","wrap","_context","prev","next","undefined","abrupt","stop","apply","arguments","TableContext","createContext","rowSelectionModel","footerChildren","footerPaginationPosition","showFooterSelectedCount","forwardRef","_ref$CustomFooterComp","CustomFooterComponent","DefaultooterComponent","_ref$checkboxSelectio","checkboxSelection","_ref$footerChildren","_ref$footerPagination","_ref$showFooterSelect","_useState","useState","_useState2","_slicedToArray","selectedRows","setSelectedRows","useImperativeHandle","removeSelection","getSelectedRows","filter","item","includes","freezeArray","Provider","DataGrid","slots","loadingOverlay","LinearProgress","footer","initialState","pagination","paginationModel","pageSize","loading","getRowId","row","hide","showCellVerticalBorder","showColumnVerticalBorder","rowHeight","columnHeaderHeight","pageSizeOptions","fill","background","padding","display","fontWeight","onRowSelectionModelChange","selectionSet","Set","s","has","__","rowNode","_toConsumableArray","disableVirtualization","Pagination","page","onPageChange","apiRef","useGridApiContext","pageCount","useGridSelector","gridPageCountSelector","MuiPagination","count","newPage","CustomPagination","props","GridPagination","ActionsComponent","_useContext","useContext","columnGap","justifyContent","px","alignItems","flexDirection","flex","account","account_title","dateFormat","dateFrom","Date","dateTo","yearCount","getFullYear","toString","slice","subsi","subsi_options","format","field","report","subsidiaryLedgerColumnWithBalance","header","excelColumnWidth","total","subsidiaryLedgerColumnNoBalance","reducer","state","action","_defineProperty","ShowDateSelection","dispatch","user","handleInputChange","dateFromRef","useRef","dateToRef","_Fragment","setupTitle","department","timeout","setTimeout","_dateFromRef$current","_dateFromRef$current$","click","clearTimeout","_dateToRef$current","_dateToRef$current$qu","dateString","toLocaleDateString","year","month","day","_formatYearRange","startYear","startDate","endDate","startYearFormatted","endYearFormatted","formatYearRange","parseInt","DateToStringFormat","Setting","_queryFn","chartAccountSearchInput","clientSearchInput","AuthContext","myAxios","_useQuery","useQuery","queryFn","get","headers","Authorization","accessToken","sent","dataSubAccounts","isLoadingSubAccounts","_useQueryModalTable","useQueryModalTable","link","url","queryUrlName","headerName","uniqueId","responseDataKey","onSelected","selectedRowData","IDNo","closeCliendIDsModal","ModalClientIDs","ModalComponent","openCliendIDsModal","openModal","isLoadingClientIdsModal","closeModal","_useQueryModalTable2","Acct_Code","Acct_Title","closeChartAccountModal","modalChartAccount","openChartAccountModal","isLoadingChartAccountModal","_e$target","target","multiline","theme","gap","margin","LoadingButton","FormControl","gridColumn","zIndex","InputLabel","htmlFor","OutlinedInput","PersonSearchIcon","readOnly","Select","labelId","MenuItem","React","sub_account","map","Acronym","gridArea","border","borderRadius","fontFamily","rowGap","columnRender","SubsidiaryLedger","_onReportSubmit","_useContext2","setColumn","PrintPreview","_Setting","onReportSubmit","_x2","_x3","_callee2","setData","setLoading","updateColumn","response","jsonData","_context2","flushSync","post","JSON","parse","columnNumber","d","hasOwnProperty","formatNumberWithCommas","parseFloat","replace","then","scaleDefaultValue","drawTable","pages","pageNumber","split","t","textAlign","colSpan","rowIdx","onDoubleClick","copiedByHeaderOnDoubleClick","borderBottom","rowItem","colItem","colIdx","columnSelection","borderTop","flat","reduce","itms","_itms$itm$datakey","isNaN","pageHeight","pageWidth","number","toLocaleString","minimumFractionDigits","maximumFractionDigits","CustomizeAxiosFunc","_CustomizeAxiosFunc","search","_args","_customizeAxiostool","_ref$onSelected","_ref$onRemoveSelected","onRemoveSelected","_ref$onSuccess","onSuccess","_ref$onCloseFunction","onCloseFunction","_ref$CustomizeAxios","CustomizeAxios","show","setShowModal","_useState3","_useState4","customizeAxiostool","_args2","_callee3","_context3","res","refetchOnWindowFocus","refetch","success","alert","message","_searchRef$current3","selectedIDs","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","cx","cy","r","source","excluded","i","Object","getOwnPropertySymbols","sourceSymbolKeys","indexOf","prototype","propertyIsEnumerable","call"],"sourceRoot":""}