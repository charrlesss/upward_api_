{"version":3,"file":"static/js/1441.41c5ac0a.chunk.js","mappings":"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","sources":["components/Helmet.tsx","components/Loading.tsx","components/ModalWithTable.tsx","components/Table.tsx","feautures/Admin/Task/Accounting/PettyCash.tsx","hooks/useQueryModalTable.tsx","lib/confirmationAlert.ts","../node_modules/@mui/icons-material/Add.js","../node_modules/@mui/icons-material/RestartAlt.js","../node_modules/@mui/icons-material/Save.js","../node_modules/@mui/icons-material/Search.js"],"sourcesContent":["\r\nimport { Helmet } from \"react-helmet\";\r\n\r\nconst PageHelmet = ({ title = '' }: { title: string }) => {\r\n    const imgUrl = process.env.REACT_APP_IMAGE_URL;\r\n    return (\r\n        <Helmet>\r\n            <title>{title}</title>\r\n            <link rel=\"icon\" type=\"image/png\" href={`${imgUrl}/logo.png`} />\r\n        </Helmet>\r\n    );\r\n};\r\n\r\nexport default PageHelmet;","import { CircularProgress } from \"@mui/material\"\r\n\r\nexport const Loading = () => {\r\n\r\n    return (\r\n        <>\r\n            <div style={{\r\n                position: \"fixed\",\r\n                top: 0,\r\n                bottom: 0,\r\n                left: 0,\r\n                right: 0,\r\n                background: \"red\",\r\n                zIndex: \"88\",\r\n                backgroundColor: 'rgba(0, 0, 0, 0.4)'\r\n            }}\r\n            ></div>\r\n            <div style={{\r\n                position: \"absolute\",\r\n                zIndex: \"100\",\r\n                background: \"white\",\r\n                width: \"auto\",\r\n                height: \"auto\",\r\n                top: \"50%\",\r\n                left: \"50%\",\r\n                transform: \"translate(-50%,-50%)\",\r\n                boxShadow: '3px 6px 32px -7px rgba(0,0,0,0.75)',\r\n                display: \"flex\",\r\n                columnGap: \"20px\",\r\n                alignItems: \"center\",\r\n                justifyContent: \"center\",\r\n                padding: \"10px 15px\",\r\n            }}>\r\n                <CircularProgress color=\"primary\" />\r\n                <span>Loading...</span>\r\n            </div>\r\n        </>\r\n    )\r\n}","import React from \"react\";\nimport {\n  GridRowSelectionModel,\n  GridRowParams,\n  GridCellParams,\n  GridTreeNode,\n} from \"@mui/x-data-grid\";\nimport { Modal, Box, Typography, IconButton, TextField } from \"@mui/material\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport Table from \"./Table\";\n\ninterface ModalWithTableParams {\n  height: number;\n  isLoading: boolean;\n  queryKey: string;\n  columns: Array<any>;\n  onSelectionChange: (rowSelectionModel: Array<any>, data: Array<any>) => void;\n  setRows: React.Dispatch<React.SetStateAction<GridRowSelectionModel>>;\n  rows: GridRowSelectionModel;\n  id: string;\n  onCloseModal: () => void;\n  onClickCloseIcon: () => void;\n  showModal: boolean;\n  searchOnChange:\n  | React.ChangeEventHandler<HTMLInputElement | HTMLTextAreaElement>\n  | undefined;\n  title?: string;\n  searchRef?: React.RefObject<HTMLInputElement>;\n  onCellKeyDown?: any;\n  onSearchKeyEnter?: (search: string) => void;\n  isRowSelectable?: ((params: GridRowParams<any>) => boolean) | undefined;\n  getCellClassName?:\n  | ((params: GridCellParams<any, any, any, GridTreeNode>) => string)\n  | undefined;\n}\n\nconst style = {\n  position: \"absolute\" as \"absolute\",\n  top: \"50%\",\n  left: \"50%\",\n  transform: \"translate(-50%, -50%)\",\n  width: \"80%\",\n  bgcolor: \"background.paper\",\n  boxShadow: 24,\n  p: 4,\n  heigth: \"auto\",\n};\n\nexport default function ModalWithTable({\n  height,\n  isLoading,\n  queryKey,\n  columns,\n  onSelectionChange,\n  setRows,\n  rows,\n  id,\n  onCloseModal,\n  showModal,\n  onClickCloseIcon,\n  searchOnChange,\n  title = \"\",\n  searchRef,\n  onCellKeyDown,\n  onSearchKeyEnter = () => { },\n  isRowSelectable,\n  getCellClassName,\n}: ModalWithTableParams) {\n  const mainId = generateRandomClass();\n\n  return (\n    <Modal\n      open={showModal}\n      onClose={onCloseModal}\n      aria-labelledby=\"modal-modal-title\"\n      aria-describedby=\"modal-modal-description\"\n    >\n      <Box sx={style}>\n        <Typography id=\"modal-modal-title\" variant=\"h6\" component=\"h2\" mb={2}>\n          {title}\n        </Typography>\n        <TextField\n          size=\"small\"\n          label=\"Search\"\n          sx={{ marginBottom: \"10px\" }}\n          fullWidth\n          onChange={searchOnChange}\n          InputProps={{\n            inputRef: searchRef,\n          }}\n          onKeyDown={(e) => {\n            if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n              e.preventDefault();\n              onSearchKeyEnter(searchRef?.current?.value as string);\n            }\n            keyBoardSelectionTable(\n              e,\n              mainId,\n              searchRef?.current as HTMLInputElement\n            );\n          }}\n        />\n        <div\n          className={`${mainId} main-table-selection-container`}\n          style={{ position: \"relative\", height: `${height + 20}px` }}\n        >\n          <Table\n            isSingleSelection={true}\n            isRowFreeze={false}\n            columns={columns}\n            isLoading={isLoading}\n            dataSelection={(selection, data, code) => {\n              onSelectionChange(selection, data);\n            }}\n            table_id={id}\n            rows={rows}\n            isRowSelectable={isRowSelectable}\n            getCellClassName={getCellClassName}\n          />\n        </div>\n\n        <div style={{ position: \"absolute\", top: \"10px\", right: \"10px\" }}>\n          <IconButton\n            aria-label=\"search-client\"\n            color=\"secondary\"\n            onClick={onClickCloseIcon}\n          >\n            <CloseIcon />\n          </IconButton>\n        </div>\n      </Box>\n    </Modal>\n  );\n}\n\nexport function generateRandomClass() {\n  const randomNumber = Math.floor(Math.random() * 10000);\n  const randomClass = \"main-\" + randomNumber;\n  return randomClass;\n}\n\nfunction keyBoardUpDown(className: string, el: HTMLElement) {\n  const firstRowParent = document.querySelector(\n    `.${className} .MuiDataGrid-row`\n  );\n  const firstInput = firstRowParent?.querySelector(\"input\");\n  firstInput?.focus();\n  const event = new MouseEvent(\"mouseenter\", {\n    bubbles: true,\n    cancelable: true,\n    view: window,\n  });\n  firstRowParent?.dispatchEvent(event);\n  firstInput?.addEventListener(\"keydown\", (es: any) => {\n    if (es.key === \"ArrowUp\") {\n      es.preventDefault();\n      el.focus();\n    }\n    if (es.key === \"ArrowUp\") {\n      firstRowParent?.classList.remove(\"hover-keyboard\");\n    }\n  });\n}\n\nexport function keyBoardSelectionTable(\n  e: React.KeyboardEvent<HTMLDivElement>,\n  className: string,\n  el: HTMLElement\n) {\n  const mainId = className;\n  if (e.code === \"ArrowDown\") {\n    const rows = document.querySelectorAll(`.${mainId} .MuiDataGrid-row`);\n    e.preventDefault();\n    rows[0]?.classList.add(\"hover-keyboard\");\n    keyBoardUpDown(className, el);\n    rows.forEach((el, idx) => {\n      el.addEventListener(\"keydown\", (es: any) => {\n        if (es.key === \"ArrowUp\") {\n          if (idx <= 0) {\n            return;\n          }\n\n          es.preventDefault();\n          rows[idx]?.classList.remove(\"hover-keyboard\");\n          rows[idx - 1]?.classList.add(\"hover-keyboard\");\n          return;\n        }\n        if (es.key === \"ArrowDown\") {\n          es.preventDefault();\n          if (idx >= rows.length - 1) {\n            return;\n          }\n          rows[idx]?.classList.remove(\"hover-keyboard\");\n          rows[idx + 1]?.classList.add(\"hover-keyboard\");\n        }\n      });\n    });\n  }\n}\n","import {\n  useState,\n  useContext,\n  createContext,\n  ReactElement,\n  forwardRef,\n  useImperativeHandle,\n} from \"react\";\nimport { Box, LinearProgress } from \"@mui/material\";\nimport {\n  DataGrid,\n  GridSlotsComponentsProps,\n  gridPageCountSelector,\n  GridPagination,\n  useGridApiContext,\n  useGridSelector,\n  GridRowSelectionModel,\n  GridColDef,\n  GridRowParams,\n  GridCellParams,\n  GridTreeNode,\n} from \"@mui/x-data-grid\";\nimport { TablePaginationProps } from \"@mui/material/TablePagination\";\nimport MuiPagination from \"@mui/material/Pagination\";\n\ninterface TableProps {\n  isLoading: boolean;\n  columns: Array<any>;\n  rows: Array<any>;\n  table_id: string;\n  isSingleSelection: boolean;\n  isRowFreeze: boolean;\n  dataSelection?: (selection: any, data: any, code: string | null) => void;\n  CustomFooterComponent?: any;\n  isRowSelectable?: ((params: GridRowParams<any>) => boolean) | undefined;\n  getCellClassName?:\n    | ((params: GridCellParams<any, any, any, GridTreeNode>) => string)\n    | undefined;\n  footerChildren?: (\n    rowSelectionModel: GridRowSelectionModel,\n    rows: Array<any>\n  ) => ReactElement;\n  footerPaginationPosition?: string;\n  showFooterSelectedCount?: boolean;\n  checkboxSelection?: boolean | undefined;\n}\n\nconst TableContext = createContext<{\n  rowSelectionModel: GridRowSelectionModel;\n  rows: Array<any>;\n  footerPaginationPosition?: string;\n  showFooterSelectedCount?: boolean;\n  footerChildren: (\n    rowSelectionModel: GridRowSelectionModel,\n    rows: Array<any>\n  ) => ReactElement;\n}>({\n  rows: [],\n  rowSelectionModel: [],\n  footerChildren: () => <div></div>,\n  footerPaginationPosition: \"right-left\",\n  showFooterSelectedCount: true,\n});\nconst Table = forwardRef(\n  (\n    {\n      isLoading,\n      columns,\n      rows,\n      table_id,\n      isSingleSelection,\n      isRowFreeze,\n      dataSelection,\n      CustomFooterComponent = DefaultooterComponent,\n      isRowSelectable,\n      getCellClassName,\n      checkboxSelection = true,\n      footerChildren = (\n        rowSelectionModel: GridRowSelectionModel,\n        rows: Array<any>\n      ) => <div></div>,\n      footerPaginationPosition = \"right-left\",\n      showFooterSelectedCount = true,\n    }: TableProps,\n    ref\n  ) => {\n    const [selectedRows, setSelectedRows] = useState<any>([]);\n\n    useImperativeHandle(ref, () => ({\n      removeSelection: () => {\n        setSelectedRows([]);\n      },\n      getSelectedRows: () => {\n        return rows.filter((item: any) =>\n          selectedRows?.includes(item[table_id])\n        );\n      },\n      setSelectedRows: (data: Array<any>) => {\n        setSelectedRows(data);\n      },\n    }));\n\n    function onSelectionChange(selection: any, data: any, code: string | null) {\n      if (dataSelection) {\n        dataSelection(selection, data, code);\n      }\n    }\n    let freezeArray: Array<any> = [];\n\n    return (\n      <TableContext.Provider\n        value={{\n          showFooterSelectedCount,\n          footerPaginationPosition,\n          rowSelectionModel: selectedRows,\n          rows,\n          footerChildren,\n        }}\n      >\n        <DataGrid\n          slots={{\n            loadingOverlay: LinearProgress,\n            footer: CustomFooterComponent,\n          }}\n          initialState={{\n            pagination: { paginationModel: { pageSize: 100 } },\n          }}\n          loading={isLoading}\n          getRowId={(row) => row[table_id]}\n          columns={columns.filter((col: any) => !col.hide) as GridColDef<any>[]}\n          rows={rows}\n          showCellVerticalBorder={true}\n          showColumnVerticalBorder={true}\n          checkboxSelection={checkboxSelection}\n          rowSelectionModel={selectedRows}\n          rowHeight={25}\n          columnHeaderHeight={35}\n          pageSizeOptions={[10, 20, 35, 50, 75, 100]}\n          sx={{\n            \"& .cash\": {\n              color: \"#ec4899\",\n            },\n            \"& .check\": {\n              color: \"#0891b2\",\n            },\n            \"& .approved\": {\n              color: \"green\",\n            },\n            \"& .pending\": {\n              color: \"orange\",\n            },\n            \"& .disapproved\": {\n              color: \"red\",\n            },\n            \"& .normal\": {\n              color: \"red\",\n            },\n            \"& .MuiDataGrid-row.Mui-selected:hover\": {\n              color: \"black\",\n              \"& .MuiSvgIcon-root \": {\n                fill: \"#3b82f6\",\n              },\n            },\n            \"& .hover-keyboard\": {\n              background: \"#2563eb\",\n              color: \"white\",\n              \"& .MuiSvgIcon-root \": {\n                fill: \"white\",\n              },\n            },\n            \"& .MuiDataGrid-row:hover\": {\n              background: \"#2563eb\",\n              color: \"white\",\n              \"& .MuiSvgIcon-root \": {\n                fill: \"white\",\n              },\n            },\n            \"& .MuiDataGrid-row.hover\": {\n              background: \"#2563eb\",\n              color: \"white\",\n              \"& .MuiSvgIcon-root \": {\n                fill: \"white\",\n              },\n            },\n            \"& .MuiTablePagination-root p \": {\n              padding: \"0 !important\",\n            },\n\n            ...{\n              \"& .MuiDataGrid-columnHeaders\": {\n                background: \"#64748b\",\n                color: \"white\",\n                fontSize: \"14px\",\n                // borderBottomColor: \"#38bdf8\",\n              },\n              \"& .MuiDataGrid-columnHeaderCheckbox .MuiDataGrid-columnHeaderTitleContainer .MuiSvgIcon-root \":\n                {\n                  display: isSingleSelection || isRowFreeze ? \"none\" : \"block\",\n                  fill: \"white\",\n                },\n              \"& .MuiDataGrid-columnHeaderCheckbox .MuiDataGrid-columnHeaderTitleContainer input \":\n                {\n                  display: isSingleSelection || isRowFreeze ? \"none\" : \"block\",\n                },\n            },\n            ...{\n              fontSize: 13,\n              fontWeight: 500,\n              \"& .MuiDataGrid-checkboxInput\": {\n                height: \"27px\",\n                width: \"27px\",\n              },\n              \"& .MuiDataGrid-checkboxInput svg\": {\n                height: \"20px\",\n                width: \"20px\",\n              },\n            },\n          }}\n          // onRowDoubleClick={(e, r) => {\n          //   console.log(e, r);\n          // }}\n\n          onRowSelectionModelChange={(selection) => {\n            if (isRowFreeze) {\n              if (selection.length <= 0) return;\n              freezeArray = selection;\n              if (selectedRows.includes(freezeArray[freezeArray.length - 1]))\n                return;\n\n              setSelectedRows(selection);\n\n              onSelectionChange([selection[selection.length - 1]], rows, null);\n              return;\n            }\n\n            if (!isRowFreeze && isSingleSelection) {\n              if (selectedRows && selectedRows?.length > 0) {\n                const selectionSet = new Set(selectedRows);\n                setSelectedRows(\n                  selection.filter((s: any) => !selectionSet.has(s))\n                );\n              } else {\n                setSelectedRows(selection);\n              }\n            } else {\n              setSelectedRows(selection);\n            }\n\n            onSelectionChange([selection[selection.length - 1]], rows, null);\n          }}\n          onCellKeyDown={(__: any, key: any) => {\n            const keyFinding = [\"NumpadEnter\", \"Enter\", \"Delete\", \"Backspace\"];\n            if (!keyFinding.includes(key.code)) {\n              return;\n            }\n            key.preventDefault();\n            if (key.code === \"Enter\" || key.code === \"NumpadEnter\") {\n              if (isSingleSelection && !isRowFreeze) {\n                return setSelectedRows((data: any) => {\n                  if (data && data.length > 0 && data[0] === __.rowNode.id) {\n                    onSelectionChange([], rows, key.code);\n                    return [];\n                  }\n                  onSelectionChange([__.rowNode.id], rows, key.code);\n                  return [__.rowNode.id];\n                });\n              } else {\n                setSelectedRows((data: any) => {\n                  if (\n                    data &&\n                    !isRowFreeze &&\n                    data.length > 0 &&\n                    data.includes(__.rowNode.id)\n                  ) {\n                    data = data.filter((item: any) => item !== __.rowNode.id);\n                    onSelectionChange([], rows, key.code);\n                    return data;\n                  }\n                  if (\n                    data &&\n                    isRowFreeze &&\n                    data.length > 0 &&\n                    data.includes(__.rowNode.id)\n                  ) {\n                    return data;\n                  }\n                  onSelectionChange([__.rowNode.id], rows, key.code);\n                  return [...data, __.rowNode.id];\n                });\n              }\n              return;\n            }\n            if (key.code === \"Delete\" || key.code === \"Backspace\") {\n              setSelectedRows([__.rowNode.id]);\n              return onSelectionChange([__.rowNode.id], rows, key.code);\n            }\n          }}\n          disableVirtualization\n          isRowSelectable={isRowSelectable}\n          getCellClassName={getCellClassName}\n        />\n      </TableContext.Provider>\n    );\n  }\n);\n\nexport default Table;\nfunction Pagination({\n  page,\n  onPageChange,\n  className,\n}: Pick<TablePaginationProps, \"page\" | \"onPageChange\" | \"className\">) {\n  const apiRef = useGridApiContext();\n  const pageCount = useGridSelector(apiRef, gridPageCountSelector);\n\n  return (\n    <MuiPagination\n      variant=\"outlined\"\n      color=\"primary\"\n      className={className}\n      count={pageCount}\n      page={page + 1}\n      onChange={(event, newPage) => {\n        onPageChange(event as any, newPage - 1);\n      }}\n    />\n  );\n}\n\nfunction CustomPagination(props: any) {\n  return <GridPagination ActionsComponent={Pagination} {...props} />;\n}\nfunction DefaultooterComponent(\n  props: NonNullable<GridSlotsComponentsProps[\"footer\"]>\n) {\n  const {\n    rowSelectionModel,\n    showFooterSelectedCount,\n    footerPaginationPosition,\n    footerChildren,\n    rows,\n  } = useContext(TableContext);\n  return (\n    <Box\n      sx={{\n        columnGap: \"50px\",\n        display: \"flex\",\n        width: \"100%\",\n        justifyContent: \"space-between\",\n        px: 3,\n        alignItems: \"center\",\n        flexDirection:\n          footerPaginationPosition === \"right-left\" ? \"row-reverse\" : \"row\",\n      }}\n    >\n      <CustomPagination {...props} />\n      <Box\n        sx={{\n          display: \"flex\",\n          justifyContent:\n            footerPaginationPosition === \"right-left\"\n              ? \"flex-start\"\n              : \"flex-end\",\n          flex: 1,\n          alignItems: \"center\",\n        }}\n      >\n        {showFooterSelectedCount && (\n          <div>Selected:{rowSelectionModel?.length}</div>\n        )}\n        <div>{footerChildren(rowSelectionModel, rows)}</div>\n      </Box>\n    </Box>\n  );\n}\n","import { useContext, useState, useRef, useEffect } from \"react\";\nimport {\n  Button,\n} from \"@mui/material\";\nimport LoadingButton from \"@mui/lab/LoadingButton\";\nimport AddIcon from \"@mui/icons-material/Add\";\nimport SaveIcon from \"@mui/icons-material/Save\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport Swal from \"sweetalert2\";\nimport { AuthContext } from \"../../../../components/AuthContext\";\nimport RestartAltIcon from \"@mui/icons-material/RestartAlt\";\nimport { useMutation, useQuery } from \"react-query\";\nimport useQueryModalTable from \"../../../../hooks/useQueryModalTable\";\nimport { wait } from \"../../../../lib/wait\";\nimport {\n  codeCondfirmationAlert,\n  saveCondfirmationAlert,\n} from \"../../../../lib/confirmationAlert\";\nimport PageHelmet from \"../../../../components/Helmet\";\nimport { SelectInput, TextInput } from \"../../../../components/UpwardFields\";\nimport { NumericFormat } from \"react-number-format\";\nimport { format } from \"date-fns\";\nimport useExecuteQueryFromClient from \"../../../../lib/executeQueryFromClient\";\nimport { DataGridViewReact } from \"../../../../components/DataGridViewReact\";\nimport SearchIcon from '@mui/icons-material/Search';\nimport { Loading } from \"../../../../components/Loading\";\n\n\nexport const reducer = (state: any, action: any) => {\n  switch (action.type) {\n    case \"UPDATE_FIELD\":\n      return {\n        ...state,\n        [action.field]: action.value,\n      };\n    default:\n      return state;\n  }\n};\nconst columns = [\n  { key: \"purpose\", label: \"Purpose\", width: 400 },\n  { key: \"amount\", label: \"Amount\", width: 140 },\n  {\n    key: \"usage\",\n    label: \"Usage\",\n    width: 450,\n  },\n  { key: \"accountID\", label: \"Account ID\", width: 400 },\n  { key: \"sub_account\", label: \"Sub Account\", width: 120 },\n  { key: \"clientID\", label: \"ID No\", width: 140 },\n  // hide\n  { key: \"clientName\", label: \"Name\", width: 350 },\n  { key: \"accountCode\", label: \"Accoount Code\", width: 130 },\n  {\n    key: \"accountShort\",\n    label: \"Account Short\",\n    width: 300,\n  },\n  { key: \"vatType\", label: \"Vat Type\", width: 100 },\n  { key: \"invoice\", label: \"Invoice\", width: 200 },\n  { key: \"TempID\", label: \"TempId\", hide: true },\n];\nexport const chartColumn = [\n  { field: \"Acct_Code\", headerName: \"Code\", flex: 1 },\n  { field: \"Acct_Title\", headerName: \"Title\", flex: 1 },\n  { field: \"Short\", headerName: \"Short Name\", flex: 1 },\n];\n\nexport default function PettyCash() {\n  const { myAxios, user } = useContext(AuthContext);\n  const [pettyCashMode, setPettyCashMode] = useState('')\n  const { executeQueryToClient } = useExecuteQueryFromClient()\n  const tableRef = useRef<any>(null)\n  const inputSearchRef = useRef<HTMLInputElement>(null)\n\n  const subrefNoRef = useRef('')\n  const refNoRef = useRef<HTMLInputElement>(null)\n  const dateRef = useRef<HTMLInputElement>(null)\n  const payeeRef = useRef<HTMLInputElement>(null)\n  const explanationRef = useRef<HTMLInputElement>(null)\n\n\n  const accountRef = useRef<HTMLInputElement>(null);\n  const usageRef = useRef<HTMLInputElement>(null);\n  const amountRef = useRef<HTMLInputElement>(null);\n  const vatRef = useRef<HTMLSelectElement>(null);\n  const invoiceRef = useRef<HTMLInputElement>(null);\n\n\n  const pdcSearchInput = useRef<HTMLInputElement>(null);\n\n  const transactionCodeRef = useRef('')\n  const transactionShortRef = useRef('')\n  const clientIdRef = useRef('')\n  const subAcctRef = useRef('')\n\n\n  const isDisableField = pettyCashMode === \"\";\n\n\n  const {\n    isLoading: loadingPettyCashIdGenerator,\n    refetch: refetchettyCashIdGenerator,\n  } = useQuery({\n    queryKey: \"petty-cash-id-generator\",\n    queryFn: async () =>\n      await myAxios.get(`/task/accounting/get-petty-cash-id`, {\n        headers: {\n          Authorization: `Bearer ${user?.accessToken}`,\n        },\n      }),\n    refetchOnWindowFocus: false,\n    onSuccess: (data) => {\n      const response = data as any;\n      wait(100).then(() => {\n        subrefNoRef.current = response.data.pettyCashId[0].petty_cash_id\n        if (refNoRef.current) {\n          refNoRef.current.value = response.data.pettyCashId[0].petty_cash_id\n        }\n      })\n    },\n  });\n  const {\n    isLoading: loadingAddUpdatePettyCash,\n    mutate: mutateAddUpdatePettyCash,\n  } = useMutation({\n    mutationKey: \"add-update-petty-cash\",\n    mutationFn: async (variables: any) =>\n      await myAxios.post(`/task/accounting/add-petty-cash`, variables, {\n        headers: {\n          Authorization: `Bearer ${user?.accessToken}`,\n        },\n      }),\n    onSuccess: (data) => {\n      const response = data as any;\n      if (response.data.success) {\n        resetPettyCash()\n        return Swal.fire({\n          position: \"center\",\n          icon: \"success\",\n          title: response.data.message,\n          timer: 1500,\n        });\n      }\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: response.data.message,\n        timer: 1500,\n      });\n    },\n  });\n  const {\n    isLoading: isLoadingLoadSelectedPettyCash,\n    mutate: mutateLoadSelectedPettyCash,\n  } = useMutation({\n    mutationKey: \"load-selected-petty-cash\",\n    mutationFn: async (variables: any) =>\n      await myAxios.post(\n        `/task/accounting/load-selected-petty-cash`,\n        variables,\n        {\n          headers: {\n            Authorization: `Bearer ${user?.accessToken}`,\n          },\n        }\n      ),\n    onSuccess: (data) => {\n      const response = data as any;\n      const loadPettyCash = response.data.loadSelectedPettyCash;\n      subrefNoRef.current = loadPettyCash[0].PC_No\n      if (refNoRef.current) {\n        refNoRef.current.value = loadPettyCash[0].PC_No\n      }\n      if (dateRef.current) {\n        dateRef.current.value = format(new Date(loadPettyCash[0].PC_Date), \"yyyy-MM-dd\")\n      }\n      if (payeeRef.current) {\n        payeeRef.current.value = loadPettyCash[0].Payee\n      }\n      if (explanationRef.current) {\n        explanationRef.current.value = loadPettyCash[0].Explanation\n      }\n\n      tableRef.current.setDataFormated(loadPettyCash)\n    },\n  });\n\n  const {\n    isLoading: laodPettyCashTransaction,\n    data: dataCashTransaction\n  } = useQuery({\n    queryKey: \"load-transcation\",\n    queryFn: async () =>\n      await myAxios.get(`/task/accounting/load-transcation`, {\n        headers: {\n          Authorization: `Bearer ${user?.accessToken}`,\n        },\n      }),\n    refetchOnWindowFocus: false,\n  });\n\n  const {\n    ModalComponent: ModalClientIDs,\n    openModal: openCliendIDsModal,\n    isLoading: isLoadingClientIdsModal,\n    closeModal: closeCliendIDsModal,\n  } = useQueryModalTable({\n    link: {\n      url: \"/task/accounting/search-pdc-policy-id\",\n      queryUrlName: \"searchPdcPolicyIds\",\n    },\n    columns: [\n      { field: \"Type\", headerName: \"Type\", width: 130 },\n      { field: \"IDNo\", headerName: \"ID No.\", width: 200 },\n      {\n        field: \"Name\",\n        headerName: \"Name\",\n        flex: 1,\n      },\n      {\n        field: \"ID\",\n        headerName: \"ID\",\n        flex: 1,\n        hide: true,\n      },\n    ],\n    queryKey: \"collection-polidy-ids\",\n    uniqueId: \"IDNo\",\n    responseDataKey: \"clientsId\",\n    onSelected: (selectedRowData, data) => {\n      closeCliendIDsModal();\n      wait(100).then(() => {\n        clientIdRef.current = selectedRowData[0].IDNo\n        subAcctRef.current = selectedRowData[0].Acronym\n        if (usageRef.current)\n          usageRef.current.value = selectedRowData[0].Name\n      })\n      wait(200).then(() => {\n        if (amountRef.current) {\n          amountRef.current?.focus()\n          amountRef.current.value = ''\n        }\n\n      })\n    },\n    searchRef: pdcSearchInput,\n  });\n  const {\n    ModalComponent: ModalSearchPettyCash,\n    openModal: openModalSearchPettyCash,\n    isLoading: isLoadingModalSearchPettyCash,\n    closeModal: closeModalSearchPettyCash,\n  } = useQueryModalTable({\n    link: {\n      url: \"/task/accounting/search-petty-cash\",\n      queryUrlName: \"searchPettyCash\",\n    },\n    columns: [\n      { field: \"PC_Date\", headerName: \"Type\", width: 130 },\n      { field: \"PC_No\", headerName: \"ID No.\", width: 200 },\n      {\n        field: \"Payee\",\n        headerName: \"Name\",\n        flex: 1,\n      },\n      {\n        field: \"Explanation\",\n        headerName: \"ID\",\n        flex: 1,\n      },\n      {\n        field: \"Explanation\",\n        headerName: \"ID\",\n        flex: 1,\n        hide: true,\n      },\n    ],\n    queryKey: \"petty-cash-search\",\n    uniqueId: \"PC_No\",\n    responseDataKey: \"searchPettyCash\",\n    onSelected: (selectedRowData) => {\n      mutateLoadSelectedPettyCash({ PC_No: selectedRowData[0].PC_No });\n\n      setPettyCashMode(\"edit\")\n\n      closeModalSearchPettyCash();\n    },\n    searchRef: pdcSearchInput,\n\n  });\n\n  function handleOnSave() {\n    if (payeeRef.current && payeeRef.current.value === \"\") {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: \"Please provide payee!\",\n        timer: 1500,\n      }).then((result) => {\n        wait(300).then(() => {\n          payeeRef.current?.focus();\n        });\n      });\n    }\n    if (explanationRef.current && explanationRef.current.value === \"\") {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: \"Please provide explanation!\",\n        timer: 1500,\n      }).then((result) => {\n        wait(300).then(() => {\n          explanationRef.current?.focus();\n        });\n      });\n    }\n\n    const newData = tableRef.current.getData()\n    const newDataFormatted = newData.map((itm: any) => {\n      let newItm = {\n        purpose: itm[0],\n        amount: itm[1],\n        usage: itm[2],\n        accountID: itm[3],\n        sub_account: itm[4],\n        clientID: itm[5],\n        clientName: itm[6],\n        accountCode: itm[7],\n        accountShort: itm[8],\n        vatType: itm[9],\n        invoice: itm[10],\n      }\n      return newItm\n    })\n\n    if (newDataFormatted.length <= 0) {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: \"Please provide transaction entry!\",\n        timer: 1500,\n      });\n    }\n\n\n\n    if (pettyCashMode === \"edit\") {\n      codeCondfirmationAlert({\n        isUpdate: true,\n        cb: (userCodeConfirmation) => {\n          mutateAddUpdatePettyCash({\n            refNo: refNoRef.current?.value,\n            datePetty: dateRef.current?.value,\n            payee: payeeRef.current?.value,\n            explanation: explanationRef.current?.value,\n            hasSelected: pettyCashMode === \"edit\",\n            pettyCash: newDataFormatted,\n            userCodeConfirmation,\n          });\n        },\n      });\n    } else {\n      saveCondfirmationAlert({\n        isConfirm: () => {\n          mutateAddUpdatePettyCash({\n            refNo: refNoRef.current?.value,\n            datePetty: dateRef.current?.value,\n            payee: payeeRef.current?.value,\n            explanation: explanationRef.current?.value,\n            hasSelected: pettyCashMode === \"edit\",\n            pettyCash: newDataFormatted,\n          });\n        },\n      });\n    }\n  }\n\n  async function handleAddTransaction() {\n    if (accountRef.current && accountRef.current.value === \"\") {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: \"Please provide transaction\",\n        timer: 1500,\n      }).then(() => {\n        wait(300).then(() => {\n          accountRef.current?.focus();\n        });\n      });\n    }\n    if (clientIdRef.current === \"\") {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: \"Please provide usage\",\n        timer: 1500,\n      }).then(() => {\n        wait(300).then(() => {\n          openCliendIDsModal();\n        });\n      });\n    }\n    if (amountRef.current && (amountRef.current.value === \"\" || parseFloat(amountRef.current.value.replace(/,/g, \"\")) < 1)) {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: \"Please provide proper amount\",\n        timer: 1500,\n      }).then(() => {\n        wait(300).then(() => {\n          amountRef.current?.focus();\n        });\n      });\n    }\n\n    const TransDetail = await executeQueryToClient(`\n         SELECT DISTINCT\n              Chart_Account.Acct_Code,\n              Chart_Account.Acct_Title,\n              Chart_Account.Short\n          FROM\n              Petty_Log\n                  LEFT JOIN\n              Chart_Account ON Petty_Log.Acct_Code = Chart_Account.Acct_Code\n          WHERE\n              Petty_Log.Acct_Code = '${transactionCodeRef.current}'\n      `)\n\n    const currentData = tableRef.current.getData()\n    let RowIndex = 0\n    if (currentData.length <= 0) {\n      currentData[0] = []\n    } else {\n      const getSelectedRow = tableRef.current.getSelectedRow()\n      if (getSelectedRow) {\n        RowIndex = getSelectedRow\n      } else {\n        RowIndex = currentData.length\n        currentData[currentData.length] = []\n      }\n\n    }\n    currentData[RowIndex][0] = accountRef.current?.value\n    currentData[RowIndex][1] = amountRef.current?.value\n    currentData[RowIndex][2] = `${usageRef.current?.value} > ${clientIdRef.current} > ${subAcctRef.current}`\n    currentData[RowIndex][3] = `${TransDetail.data.data[0].Short} > ${TransDetail.data.data[0].Acct_Code}`\n    currentData[RowIndex][4] = subAcctRef.current\n    currentData[RowIndex][5] = clientIdRef.current\n    currentData[RowIndex][6] = usageRef.current?.value\n    currentData[RowIndex][7] = TransDetail.data.data[0].Acct_Code\n    currentData[RowIndex][8] = TransDetail.data.data[0].Short\n    currentData[RowIndex][9] = vatRef.current?.value\n    currentData[RowIndex][10] = invoiceRef.current?.value\n    tableRef.current.setData(currentData)\n    tableRef.current.setSelectedRow(null)\n\n\n    resetRefs()\n\n    if (accountRef.current) {\n      accountRef.current.focus()\n    }\n  }\n\n  function resetRefs() {\n    setTimeout(() => {\n      if (accountRef.current) {\n        accountRef.current.value = ''\n      }\n      if (amountRef.current) {\n        amountRef.current.value = ''\n      }\n      if (usageRef.current) {\n        usageRef.current.value = ''\n      }\n      if (vatRef.current) {\n        vatRef.current.value = 'NON-VAT'\n      }\n      if (invoiceRef.current) {\n        invoiceRef.current.value = ''\n      }\n      subAcctRef.current = ''\n      clientIdRef.current = ''\n      transactionCodeRef.current = ''\n      transactionShortRef.current = ''\n    }, 100)\n  }\n  function resetRefsEntry() {\n    setTimeout(() => {\n      refetchettyCashIdGenerator()\n      if (dateRef.current) {\n        dateRef.current.value = format(new Date(), \"yyyy-MM-dd\")\n      }\n      if (payeeRef.current) {\n        payeeRef.current.value = ''\n      }\n      if (explanationRef.current) {\n        explanationRef.current.value = ''\n      }\n\n    }, 100)\n  }\n  function resetPettyCash() {\n    setPettyCashMode('');\n    refetchettyCashIdGenerator();\n    resetRefsEntry()\n    resetRefs()\n    tableRef.current.setData([])\n  }\n  function valueIsNaN(input: any) {\n    if (input !== '' && input !== null) {\n      const num = parseFloat(input.replace(/,/g, ''));\n      return isNaN(num) ? '0.00' : input\n    }\n    return '0.00'\n  }\n\n\n\n\n  return (\n    <>\n      {(isLoadingLoadSelectedPettyCash ||\n        loadingAddUpdatePettyCash\n      ) && <Loading />}\n      <PageHelmet title=\"Petty Cash\" />\n      <div\n        style={{\n          display: \"flex\",\n          flexDirection: \"column\",\n          width: \"100%\",\n          height: \"100%\",\n          flex: 1,\n          padding: \"5px\",\n          background: \"#F1F1F1\",\n        }}\n      >\n        <div\n          style={{\n            display: \"flex\",\n            alignItems: \"center\",\n            columnGap: \"5px\",\n            marginBottom: \"10px\"\n          }}\n        >\n          {isLoadingModalSearchPettyCash ? (\n            <LoadingButton loading={isLoadingModalSearchPettyCash} />\n          ) : (\n            <TextInput\n              label={{\n                title: \"Search: \",\n                style: {\n                  fontSize: \"12px\",\n                  fontWeight: \"bold\",\n                  width: \"50px\",\n                },\n              }}\n              input={{\n                className: \"search-input-up-on-key-down\",\n                type: \"search\",\n                onKeyDown: (e) => {\n                  if (e.key === \"Enter\" || e.key === \"NumpadEnter\") {\n                    e.preventDefault();\n                    openModalSearchPettyCash(e.currentTarget.value);\n                  }\n                  if (e.key === \"ArrowDown\") {\n                    e.preventDefault();\n                    const datagridview = document.querySelector(\n                      \".grid-container\"\n                    ) as HTMLDivElement;\n                    datagridview.focus();\n                  }\n                },\n                style: { width: \"500px\" },\n              }}\n              icon={<SearchIcon sx={{ fontSize: \"18px\" }} />}\n              onIconClick={(e) => {\n                e.preventDefault()\n                if (inputSearchRef.current)\n                  openModalSearchPettyCash(inputSearchRef.current.value);\n\n              }}\n              inputRef={inputSearchRef}\n            />\n\n\n          )}\n          {pettyCashMode === \"\" && (\n            <Button\n              sx={{\n                height: \"30px\",\n                fontSize: \"11px\",\n              }}\n              variant=\"contained\"\n              startIcon={<AddIcon sx={{ width: 15, height: 15 }} />}\n              id=\"entry-header-save-button\"\n              onClick={() => {\n                setPettyCashMode('add')\n              }}\n            >\n              New\n            </Button>\n          )}\n          <LoadingButton\n            sx={{\n              height: \"30px\",\n              fontSize: \"11px\",\n            }}\n            id=\"save-entry-header\"\n            color=\"primary\"\n            variant=\"contained\"\n            type=\"submit\"\n            onClick={handleOnSave}\n            disabled={pettyCashMode === \"\"}\n            startIcon={<SaveIcon sx={{ width: 15, height: 15 }} />}\n            loading={loadingAddUpdatePettyCash}\n          >\n            {pettyCashMode === \"edit\" ? \"Update\" : \"Save\"}\n          </LoadingButton>\n          {pettyCashMode !== \"\" && (\n            <Button\n              sx={{\n                height: \"30px\",\n                fontSize: \"11px\",\n              }}\n              variant=\"contained\"\n              startIcon={<CloseIcon sx={{ width: 15, height: 15 }} />}\n              color=\"error\"\n              onClick={() => {\n                Swal.fire({\n                  title: \"Are you sure?\",\n                  text: \"You won't be able to revert this!\",\n                  icon: \"warning\",\n                  showCancelButton: true,\n                  confirmButtonColor: \"#3085d6\",\n                  cancelButtonColor: \"#d33\",\n                  confirmButtonText: \"Yes, cancel it!\",\n                }).then((result) => {\n                  if (result.isConfirmed) {\n                    resetPettyCash()\n                  }\n                });\n              }}\n            >\n              Cancel\n            </Button>\n          )}\n        </div>\n        <div\n          style={{\n            display: \"flex\",\n            flexDirection: \"row\",\n            width: \"100%\",\n            borderBottom: \"1px dashed  #334155\",\n            paddingBottom: \"20px\",\n            gap: \"50px\",\n            marginTop: \"5px\",\n          }}\n        >\n          <div\n            style={{\n              display: \"flex\",\n              flexDirection: \"column\",\n              rowGap: \"10px\",\n            }}\n          >\n            {loadingPettyCashIdGenerator ? (\n              <LoadingButton loading={loadingPettyCashIdGenerator} />\n            ) : (\n              <TextInput\n                label={{\n                  title: \"Ref. No. : \",\n                  style: {\n                    fontSize: \"12px\",\n                    fontWeight: \"bold\",\n                    width: \"80px\",\n                  },\n                }}\n                input={{\n                  disabled: isDisableField,\n                  type: \"text\",\n                  style: { width: \"200px\" },\n                  readOnly: true,\n                  onKeyDown: (e) => {\n                    if (e.code === \"NumpadEnter\" || e.code === 'Enter') {\n                      dateRef.current?.focus()\n                    }\n                  }\n                }}\n                icon={<RestartAltIcon sx={{ fontSize: \"18px\" }} />}\n                onIconClick={(e) => {\n                  e.preventDefault()\n                  refetchettyCashIdGenerator()\n                }}\n                inputRef={refNoRef}\n              />\n            )}\n            <TextInput\n              label={{\n                title: \"Deposit Date: \",\n                style: {\n                  fontSize: \"12px\",\n                  fontWeight: \"bold\",\n                  width: \"80px\",\n                },\n              }}\n              input={{\n                defaultValue: format(new Date(), \"yyyy-MM-dd\"),\n                className: \"search-input-up-on-key-down\",\n                type: \"date\",\n                style: { width: \"200px\" },\n                disabled: isDisableField,\n                onKeyDown: (e) => {\n                  if (e.code === \"NumpadEnter\" || e.code === 'Enter') {\n                    payeeRef.current?.focus()\n                  }\n                }\n              }}\n              inputRef={dateRef}\n            />\n          </div>\n          <div\n            style={{\n              flex: 1,\n              display: \"flex\",\n              flexDirection: \"column\",\n              rowGap: \"10px\",\n            }}>\n            <TextInput\n              label={{\n                title: \"Payee : \",\n                style: {\n                  fontSize: \"12px\",\n                  fontWeight: \"bold\",\n                  width: \"100px\",\n                },\n              }}\n              input={{\n                disabled: isDisableField,\n                type: \"text\",\n                style: { width: '400px' },\n                onKeyDown: (e) => {\n                  if (e.code === \"NumpadEnter\" || e.code === 'Enter') {\n                    explanationRef.current?.focus()\n                  }\n                }\n              }}\n              inputRef={payeeRef}\n            />\n            <TextInput\n              label={{\n                title: \"Explanation : \",\n                style: {\n                  fontSize: \"12px\",\n                  fontWeight: \"bold\",\n                  width: \"100px\",\n                },\n              }}\n              input={{\n                disabled: isDisableField,\n                type: \"text\",\n                style: { flex: 1 },\n                onKeyDown: (e) => {\n                  if (e.code === \"NumpadEnter\" || e.code === 'Enter') {\n                    accountRef.current?.focus()\n                  }\n                }\n              }}\n              inputRef={explanationRef}\n            />\n          </div>\n        </div>\n        <div style={{\n          display: \"flex\",\n          flexDirection: \"row\",\n          width: \"100%\",\n          paddingTop: \"20px\",\n          gap: \"50px\",\n          borderRadius: \"3px\",\n        }}>\n          <div style={{\n            display: \"flex\",\n            flexDirection: \"column\",\n            rowGap: \"10px\",\n\n          }}>\n            {\n              laodPettyCashTransaction ?\n                <LoadingButton loading={laodPettyCashTransaction} /> :\n                <Autocomplete\n                  containerStyle={{\n                    width: \"100%\",\n                  }}\n                  label={{\n                    title: \"Transaction : \",\n                    style: {\n                      fontSize: \"12px\",\n                      fontWeight: \"bold\",\n                      width: \"80px\",\n                    }\n                  }}\n                  DisplayMember={'Purpose'}\n                  DataSource={dataCashTransaction?.data.laodTranscation}\n                  disableInput={isDisableField}\n                  inputRef={accountRef}\n                  input={{\n                    style: {\n                      width: \"100%\",\n                      flex: 1,\n                    }\n                  }}\n                  onChange={(selected: any, e: any) => {\n                    transactionCodeRef.current = selected.Acct_Code\n                    transactionShortRef.current = selected.Short\n                  }}\n                  onKeydown={(e: any) => {\n                    if (e.key === \"Enter\" || e.key === 'NumpadEnter') {\n                      e.preventDefault()\n                      usageRef.current?.focus()\n                    }\n                  }}\n                />\n            }\n            <div\n              style={{\n                display: \"flex\",\n                columnGap: \"20px\"\n              }}\n            >\n              {isLoadingClientIdsModal ? (\n                <LoadingButton loading={isLoadingClientIdsModal} />\n              ) : (\n                <TextInput\n                  label={{\n                    title: \"Usage : \",\n                    style: {\n                      fontSize: \"12px\",\n                      fontWeight: \"bold\",\n                      width: \"80px\",\n                    },\n                  }}\n                  input={{\n                    disabled: isDisableField,\n                    type: \"text\",\n                    style: { width: \"450px\" },\n                    onKeyDown: (e) => {\n                      if (e.code === \"NumpadEnter\" || e.code === 'Enter') {\n                        openCliendIDsModal(e.currentTarget.value)\n                      }\n                    }\n                  }}\n                  icon={<RestartAltIcon sx={{ fontSize: \"18px\" }} />}\n                  onIconClick={(e) => {\n                    e.preventDefault()\n                    if (usageRef.current) {\n                      openCliendIDsModal(usageRef.current.value)\n                    }\n                  }}\n                  inputRef={usageRef}\n                />\n              )}\n              <div style={{\n                display: \"flex\",\n              }}>\n                <label style={{\n                  fontSize: \"12px\",\n                  fontWeight: \"bold\",\n                  width: \"70px\",\n                }}>Amount :</label>\n                <NumericFormat\n                  disabled={isDisableField}\n                  getInputRef={amountRef}\n                  decimalScale={2}\n                  fixedDecimalScale={true}\n                  style={{\n                    width: '200px',\n                  }}\n                  onKeyDown={(e) => {\n                    if (e.code === 'Enter' || e.code === 'NumpadEnter') {\n                      e.currentTarget.value = valueIsNaN(e.currentTarget.value)\n                      vatRef.current?.focus()\n                    }\n\n                  }}\n                  onBlur={(e) => {\n                    if (e.currentTarget.value === '') {\n                      e.currentTarget.value = '0.00'\n                    }\n                  }}\n                  allowNegative={false}\n                  thousandSeparator\n                  valueIsNumericString\n                />\n              </div>\n\n            </div>\n            <div style={{\n              display: \"flex\",\n              columnGap: \"20px\"\n            }}>\n              <SelectInput\n                containerStyle={{\n                  fontSize: \"12px\",\n                  fontWeight: \"bold\",\n                }}\n                label={{\n                  title: \"VAT Type\",\n                  style: {\n                    width: \"80px\",\n                  },\n                }}\n                select={{\n                  defaultValue: \"NON-VAT\",\n                  disabled: isDisableField,\n                  style: {\n                    width: \"100% !important\",\n                    flex: 1,\n                    height: \"100% !important\",\n                    padding: 0,\n                    margin: 0,\n                    cursor: \"pointer\",\n                  },\n                  onKeyDown: (e) => {\n                    if (e.code === 'Enter' || e.code === 'NumpadEnter') {\n                      invoiceRef.current?.focus()\n                    }\n                  },\n                }}\n                datasource={[{ key: 'NON-VAT' }, { key: 'VAT' }]}\n                values={\"key\"}\n                display={\"key\"}\n                selectRef={vatRef}\n              />\n              <TextInput\n                label={{\n                  title: \"Invoice : \",\n                  style: {\n                    fontSize: \"12px\",\n                    fontWeight: \"bold\",\n                    width: \"80px\",\n                  },\n                }}\n                input={{\n                  disabled: isDisableField,\n                  type: \"text\",\n                  style: { width: '270px' },\n                  onKeyDown: (e) => {\n                    if (e.code === \"NumpadEnter\" || e.code === 'Enter') {\n                      e.preventDefault()\n                      handleAddTransaction();\n                    }\n                  }\n                }}\n                inputRef={invoiceRef}\n              />\n              <Button\n                disabled={isDisableField}\n                color=\"success\"\n                variant=\"contained\"\n                style={{ gridArea: \"button\", height: \"22px\", fontSize: \"12px\", width: \"270px\" }}\n                startIcon={<AddIcon />}\n                onClick={() => {\n                  handleAddTransaction();\n                }}\n              >\n                Save Transaction\n              </Button>\n            </div>\n          </div>\n        </div>\n        <br />\n        <DataGridViewReact\n          ref={tableRef}\n          width=\"100%\"\n          height=\"350px\"\n          columns={columns}\n          getSelectedItem={(rowItm: any, colItm: any, rowIdx: any, colIdx: any) => {\n            if (rowItm) {\n              if (accountRef.current) {\n                accountRef.current.value = rowItm[0]\n              }\n              if (amountRef.current) {\n                amountRef.current.value = rowItm[1]\n              }\n              if (usageRef.current) {\n                usageRef.current.value = rowItm[6]\n              }\n              if (vatRef.current) {\n                vatRef.current.value = rowItm[9]\n              }\n              if (invoiceRef.current) {\n                invoiceRef.current.value = rowItm[10]\n              }\n              subAcctRef.current = rowItm[4]\n              clientIdRef.current = rowItm[5]\n              transactionCodeRef.current = rowItm[7]\n              transactionShortRef.current = rowItm[8]\n            } else {\n              resetRefs()\n            }\n\n          }}\n        />\n        {/* <PettyCashTableSelected\n          ref={tableRef}\n          width=\"100%\"\n          height=\"350px\"\n          columns={columns}\n          rows={[]}\n          getSelectedItem={(rowItm: any, colItm: any, rowIdx: any, colIdx: any) => {\n            if (accountRef.current) {\n              accountRef.current.value = rowItm[0]\n            }\n            if (amountRef.current) {\n              amountRef.current.value = rowItm[1]\n            }\n            if (usageRef.current) {\n              usageRef.current.value = rowItm[6]\n            }\n            if (vatRef.current) {\n              vatRef.current.value = rowItm[9]\n            }\n            if (invoiceRef.current) {\n              invoiceRef.current.value = rowItm[10]\n            }\n            subAcctRef.current = rowItm[4]\n            clientIdRef.current = rowItm[5]\n            transactionCodeRef.current = rowItm[7]\n            transactionShortRef.current = rowItm[8]\n          }}\n        /> */}\n        {ModalClientIDs}\n        {ModalSearchPettyCash}\n      </div>\n    </>\n\n  );\n}\n\nexport const Autocomplete = ({\n  DisplayMember,\n  DataSource,\n  inputRef,\n  disableInput = false,\n  onKeydown,\n  onChange,\n  label = {\n    title: \"Transaction : \",\n    style: {\n      fontSize: \"12px\",\n      fontWeight: \"bold\",\n      width: \"100px\",\n    },\n  },\n  input = {\n    width: '740px',\n  },\n  containerStyle\n}: any) => {\n  const [inputValue, setInputValue] = useState(\"\");\n  const [filteredSuggestions, setFilteredSuggestions] = useState([]);\n  const [showSuggestions, setShowSuggestions] = useState(false);\n  const [activeSuggestionIndex, setActiveSuggestionIndex] = useState(0);\n\n  // Ref to store the suggestion container\n  const suggestionListRef = useRef<HTMLUListElement>(null);\n\n  useEffect(() => {\n    // Scroll the active suggestion into view\n    const activeElement = suggestionListRef.current?.children[activeSuggestionIndex];\n    if (activeElement) {\n      activeElement.scrollIntoView({\n        behavior: \"smooth\",\n        block: \"nearest\",\n      });\n    }\n  }, [activeSuggestionIndex]);\n\n  const handleChange = (e: any) => {\n    const value = e.target.value;\n\n    setInputValue(value);\n\n    if (value.trim()) {\n      const filtered = DataSource.filter((item: any) =>\n        item[DisplayMember].toLowerCase().includes(value.toLowerCase())\n      );\n      setFilteredSuggestions(filtered);\n      setShowSuggestions(true);\n    } else {\n      setFilteredSuggestions([]);\n      setShowSuggestions(false);\n    }\n  };\n\n  const handleClick = (suggestion: any) => {\n    setInputValue(suggestion[DisplayMember]);\n    setShowSuggestions(false);\n  };\n\n  const handleKeyDown = (e: any) => {\n    if (e.key === \"ArrowDown\") {\n      e.preventDefault()\n      setActiveSuggestionIndex((prevIndex) =>\n        Math.min(prevIndex + 1, filteredSuggestions.length - 1)\n      );\n    } else if (e.key === \"ArrowUp\") {\n      e.preventDefault()\n\n      setActiveSuggestionIndex((prevIndex) =>\n        Math.max(prevIndex - 1, 0)\n      );\n    } else if (e.key === \"Enter\" || e.key === 'NumpadEnter') {\n      e.preventDefault()\n\n\n      if (filteredSuggestions.length > 0) {\n        const selectedSuggestion = filteredSuggestions[activeSuggestionIndex];\n        onChange(selectedSuggestion, e)\n        setInputValue(selectedSuggestion[DisplayMember]);\n        setShowSuggestions(false);\n      }\n\n    }\n\n    setTimeout(() => {\n      if (onKeydown)\n        onKeydown(e)\n    }, 150)\n  };\n\n  return (\n    <div style={{ flex: 1 }}>\n      <TextInput\n        containerStyle={containerStyle}\n        label={label}\n        input={{\n          ...input,\n          disabled: disableInput,\n          type: \"text\",\n          value: inputValue,\n          onKeyDown: handleKeyDown,\n          onChange: handleChange\n        }}\n        inputRef={inputRef}\n      />\n      {showSuggestions && filteredSuggestions.length > 0 && (\n        <ul className=\"suggestions\" ref={suggestionListRef}>\n          {filteredSuggestions.map((suggestion, index) => (\n            <li\n              key={index}\n              onClick={(e) => {\n                handleClick(suggestion)\n                onChange(suggestion, e)\n              }}\n              className={index === activeSuggestionIndex ? \"active\" : \"\"}\n              onMouseEnter={(e) => {\n                e.preventDefault()\n                setActiveSuggestionIndex(Math.min(index, filteredSuggestions.length - 1));\n              }}\n            >\n              {suggestion[DisplayMember]}\n            </li>\n          ))}\n        </ul>\n      )}\n      <style>\n        {`\n          .suggestions {\n            margin-top: 0;\n            padding: 0;\n            list-style: none;\n            max-height: 150px;\n            overflow-y: auto;\n            position:absolute;\n            z-index:100;\n            background:white;\n            width:350px;\n            border:1px solid #e5e7eb;\n            box-shadow: 0px 23px 32px -17px rgba(0,0,0,0.75);\n          }\n          .suggestions li {\n            padding:3px 10px;\n            cursor: pointer;\n            font-size:14px;\n          }\n          .suggestions li.active {\n            background-color: #e2e8f0;\n          }\n      \n        `}\n      </style>\n    </div>\n  );\n};","import { useContext, useState } from \"react\";\nimport { useQuery } from \"react-query\";\nimport { AuthContext, User } from \"../components/AuthContext\";\nimport {\n  GridRowSelectionModel,\n  GridCellParams,\n  GridTreeNode,\n} from \"@mui/x-data-grid\";\nimport ModalWithTable from \"../components/ModalWithTable\";\nimport { flushSync } from \"react-dom\";\nimport { AxiosResponse, AxiosInstance } from \"axios\";\nimport { GridRowParams } from \"@mui/x-data-grid\";\ninterface QueryModalTableParamsType {\n  link?: {\n    url: string;\n    queryUrlName: string;\n  };\n  uniqueId: string;\n  queryKey: string;\n  responseDataKey: string;\n  columns: Array<any>;\n  onSelected?: (selectedRowData: Array<any>, data: Array<any>) => void;\n  onRemoveSelected?: (data: Array<any>) => void;\n  onSuccess?: (data: any) => void;\n  searchRef?: React.RefObject<HTMLInputElement>;\n  onCellKeyDown?: any;\n  onCloseFunction?: (search: any) => void;\n  CustomizeAxios?: (\n    myAxios: AxiosInstance,\n    user: User | null,\n    link: QueryModalTableParamsType[\"link\"],\n    search?: string\n  ) => Promise<AxiosResponse<any, any>>;\n  isRowSelectable?: ((params: GridRowParams<any>) => boolean) | undefined;\n  getCellClassName?:\n    | ((params: GridCellParams<any, any, any, GridTreeNode>) => string)\n    | undefined;\n}\n\nasync function CustomizeAxiosFunc(\n  myAxios: AxiosInstance,\n  user: User | null,\n  link: QueryModalTableParamsType[\"link\"],\n  search: string = \"\"\n) {\n  return myAxios.get(`${link?.url}?${link?.queryUrlName}=${search}`, {\n    headers: {\n      Authorization: `Bearer ${user?.accessToken}`,\n    },\n  });\n}\n\nconst useQueryModalTable = ({\n  link,\n  uniqueId,\n  queryKey,\n  responseDataKey,\n  columns,\n  onSelected = () => {},\n  onRemoveSelected = () => {},\n  onSuccess = () => {},\n  searchRef,\n  onCellKeyDown,\n  onCloseFunction = () => {},\n  CustomizeAxios = CustomizeAxiosFunc,\n  isRowSelectable,\n  getCellClassName,\n}: QueryModalTableParamsType) => {\n  const { myAxios, user } = useContext(AuthContext);\n  const [show, setShowModal] = useState(false);\n  const [rows, setRows] = useState<GridRowSelectionModel>([]);\n  async function customizeAxiostool(search: string = \"\") {\n    return await CustomizeAxios(myAxios, user, link, search);\n  }\n  const { isLoading, refetch } = useQuery({\n    queryKey: queryKey,\n    queryFn: async () => await customizeAxiostool(),\n    onSuccess: (res) => {\n      const response = res as any;\n      setRows(response.data[responseDataKey]);\n      onSuccess(response);\n    },\n    refetchOnWindowFocus: false,\n  });\n\n  const openModal = (search: string = \"\") => {\n    flushSync(() => {\n      setShowModal(true);\n    });\n    if (searchRef?.current) {\n      searchRef.current.value = search;\n      customizeAxiostool(search).then((res: any) => {\n        if (!res?.data.success) {\n          return alert(`Error : ${res?.data.message}`);\n        }\n        const response = res as any;\n        setRows(response.data[responseDataKey]);\n        if (searchRef?.current) searchRef.current.focus();\n      });\n    }\n  };\n\n  const closeModal = () => {\n    setShowModal(false);\n    if (onCloseFunction) {\n      onCloseFunction(searchRef?.current?.value);\n    }\n  };\n\n  const ModalComponent = (\n    <ModalWithTable\n      getCellClassName={getCellClassName}\n      searchRef={searchRef}\n      showModal={show}\n      onCloseModal={() => {\n        setShowModal(false);\n        if (onCloseFunction) {\n          onCloseFunction(searchRef?.current?.value);\n        }\n      }}\n      onClickCloseIcon={() => {\n        setShowModal(false);\n        if (onCloseFunction) {\n          onCloseFunction(searchRef?.current?.value);\n        }\n      }}\n      searchOnChange={(e) => {\n        // myAxios\n        //   .get(`${link.url}?${link.queryUrlName}=${e.target.value}`, {\n        //     headers: {\n        //       Authorization: `Bearer ${user?.accessToken}`,\n        //     },\n        //   })\n        //   .then((res: any) => {\n        //     if (!res?.data.success) {\n        //       return alert(`Error : ${res?.data.message}`);\n        //     }\n        //     const response = res as any;\n        //     setRows(response.data[responseDataKey]);\n        //   });\n      }}\n      onSearchKeyEnter={(value) => {\n        customizeAxiostool(value).then((res: any) => {\n          if (!res?.data.success) {\n            return alert(`Error : ${res?.data.message}`);\n          }\n          const response = res as any;\n          setRows(response.data[responseDataKey]);\n        });\n      }}\n      onCellKeyDown={onCellKeyDown}\n      height={300}\n      isLoading={isLoading}\n      queryKey={queryKey}\n      columns={columns}\n      onSelectionChange={(rowSelectionModel, data) => {\n        if (rowSelectionModel.length <= 0) {\n          return onRemoveSelected(data);\n        }\n        const selectedIDs = new Set(rowSelectionModel);\n        const selectedRowData = data.filter((row: any) => {\n          return selectedIDs.has(row[uniqueId].toString());\n        });\n        if (selectedRowData.length <= 0) return;\n        onSelected(selectedRowData, data);\n      }}\n      id={uniqueId}\n      rows={rows}\n      setRows={setRows}\n      isRowSelectable={isRowSelectable}\n    />\n  );\n\n  return {\n    show,\n    rows,\n    isLoading,\n    openModal,\n    closeModal,\n    ModalComponent,\n    refetch,\n  };\n};\n\nexport default useQueryModalTable;\n","import Swal from \"sweetalert2\";\n\nexport function codeCondfirmationAlert(props: {\n  cb: (userCodeConfirmation: string) => void;\n  isUpdate: boolean;\n  isConfirm?: () => void;\n  isDeclined?: () => void;\n  text?: string;\n}) {\n  Swal.fire({\n    title: `Are you sure!`,\n    html: props?.text\n      ? props?.text\n      : props.isUpdate\n      ? `Are you sure you want to make this change?`\n      : \"Are you sure you want to delete this?\",\n    icon: \"warning\",\n    input: \"text\",\n    inputAttributes: {\n      autocapitalize: \"off\",\n    },\n    showCancelButton: true,\n    confirmButtonText: \"Save\",\n    confirmButtonColor: \"green\",\n    showLoaderOnConfirm: true,\n    preConfirm: async (userCodeConfirmation) => {\n      try {\n        props.cb(userCodeConfirmation);\n      } catch (error) {\n        Swal.showValidationMessage(`\n            Request failed: ${error}\n          `);\n      }\n    },\n    allowOutsideClick: () => !Swal.isLoading(),\n  }).then((result) => {\n    if (result.isConfirmed) {\n      if (props.isConfirm) {\n        return props.isConfirm();\n      }\n    }\n    if (props.isDeclined) {\n      props.isDeclined();\n    }\n  });\n}\n\nexport function saveCondfirmationAlert(props: {\n  isConfirm?: () => void;\n  isDeclined?: () => void;\n  text?: string;\n}) {\n  Swal.fire({\n    title: \"Are you sure?\",\n    text: props?.text ? props?.text : \"Do you want to proceed with saving?\",\n    icon: \"warning\",\n    showCancelButton: true,\n    confirmButtonColor: \"#3085d6\",\n    cancelButtonColor: \"#d33\",\n    confirmButtonText: \"Yes, save it!\",\n  }).then((result) => {\n    if (result.isConfirmed) {\n      if (props.isConfirm) {\n        return props.isConfirm();\n      }\n    }\n    if (props.isDeclined) {\n      props.isDeclined();\n    }\n  });\n}\n","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\"\n}), 'Add');\nexports.default = _default;","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 5V2L8 6l4 4V7c3.31 0 6 2.69 6 6 0 2.97-2.17 5.43-5 5.91v2.02c3.95-.49 7-3.85 7-7.93 0-4.42-3.58-8-8-8zm-6 8c0-1.65.67-3.15 1.76-4.24L6.34 7.34C4.9 8.79 4 10.79 4 13c0 4.08 3.05 7.44 7 7.93v-2.02c-2.83-.48-5-2.94-5-5.91z\"\n}), 'RestartAlt');\nexports.default = _default;","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M17 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V7l-4-4zm-5 16c-1.66 0-3-1.34-3-3s1.34-3 3-3 3 1.34 3 3-1.34 3-3 3zm3-10H5V5h10v4z\"\n}), 'Save');\nexports.default = _default;","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z\"\n}), 'Search');\nexports.default = _default;"],"names":["_ref","_ref$title","title","_jsxs","Helmet","children","_jsx","rel","type","href","concat","process","Loading","_Fragment","style","position","top","bottom","left","right","background","zIndex","backgroundColor","width","height","transform","boxShadow","display","columnGap","alignItems","justifyContent","padding","CircularProgress","color","bgcolor","p","heigth","ModalWithTable","isLoading","columns","queryKey","onSelectionChange","rows","setRows","id","onCloseModal","showModal","onClickCloseIcon","searchOnChange","searchRef","_ref$onSearchKeyEnter","onCellKeyDown","onSearchKeyEnter","isRowSelectable","getCellClassName","mainId","generateRandomClass","Modal","open","onClose","Box","sx","Typography","variant","component","mb","TextField","size","label","marginBottom","fullWidth","onChange","InputProps","inputRef","onKeyDown","e","_searchRef$current","code","preventDefault","current","value","keyBoardSelectionTable","className","Table","isSingleSelection","isRowFreeze","dataSelection","selection","data","table_id","IconButton","onClick","CloseIcon","Math","floor","random","el","_rows$","document","querySelectorAll","classList","add","firstRowParent","querySelector","firstInput","focus","event","MouseEvent","bubbles","cancelable","view","window","dispatchEvent","addEventListener","es","key","remove","keyBoardUpDown","forEach","idx","_rows$idx","_rows","_rows$idx2","_rows2","length","TableContext","createContext","rowSelectionModel","footerChildren","footerPaginationPosition","showFooterSelectedCount","forwardRef","ref","_ref$CustomFooterComp","CustomFooterComponent","DefaultooterComponent","_ref$checkboxSelectio","checkboxSelection","_ref$footerChildren","_ref$footerPagination","_ref$showFooterSelect","_useState","useState","_useState2","_slicedToArray","selectedRows","setSelectedRows","useImperativeHandle","removeSelection","getSelectedRows","filter","item","includes","freezeArray","Provider","DataGrid","slots","loadingOverlay","LinearProgress","footer","initialState","pagination","paginationModel","pageSize","loading","getRowId","row","col","hide","showCellVerticalBorder","showColumnVerticalBorder","rowHeight","columnHeaderHeight","pageSizeOptions","_objectSpread","fill","fontSize","fontWeight","onRowSelectionModelChange","selectionSet","Set","s","has","__","rowNode","_toConsumableArray","disableVirtualization","Pagination","_ref2","page","onPageChange","apiRef","useGridApiContext","pageCount","useGridSelector","gridPageCountSelector","MuiPagination","count","newPage","CustomPagination","props","GridPagination","ActionsComponent","_useContext","useContext","px","flexDirection","flex","reducer","state","action","_defineProperty","field","chartColumn","headerName","PettyCash","_queryFn","_mutationFn","_mutationFn2","_queryFn2","_handleAddTransaction","AuthContext","myAxios","user","pettyCashMode","setPettyCashMode","executeQueryToClient","useExecuteQueryFromClient","tableRef","useRef","inputSearchRef","subrefNoRef","refNoRef","dateRef","payeeRef","explanationRef","accountRef","usageRef","amountRef","vatRef","invoiceRef","pdcSearchInput","transactionCodeRef","transactionShortRef","clientIdRef","subAcctRef","isDisableField","_useQuery","useQuery","queryFn","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","get","headers","Authorization","accessToken","abrupt","sent","stop","apply","arguments","refetchOnWindowFocus","onSuccess","response","wait","then","pettyCashId","petty_cash_id","loadingPettyCashIdGenerator","refetchettyCashIdGenerator","refetch","_useMutation","useMutation","mutationKey","mutationFn","_x","_callee2","variables","_context2","post","success","resetPettyCash","Swal","icon","message","timer","loadingAddUpdatePettyCash","mutateAddUpdatePettyCash","mutate","_useMutation2","_x2","_callee3","_context3","loadPettyCash","loadSelectedPettyCash","PC_No","format","Date","PC_Date","Payee","Explanation","setDataFormated","isLoadingLoadSelectedPettyCash","mutateLoadSelectedPettyCash","_useQuery2","_callee4","_context4","laodPettyCashTransaction","dataCashTransaction","_useQueryModalTable","useQueryModalTable","link","url","queryUrlName","uniqueId","responseDataKey","onSelected","selectedRowData","closeCliendIDsModal","IDNo","Acronym","Name","_amountRef$current","ModalClientIDs","ModalComponent","openCliendIDsModal","openModal","isLoadingClientIdsModal","closeModal","_useQueryModalTable2","closeModalSearchPettyCash","ModalSearchPettyCash","openModalSearchPettyCash","isLoadingModalSearchPettyCash","handleAddTransaction","_callee5","_accountRef$current2","_amountRef$current3","_usageRef$current","_usageRef$current2","_vatRef$current","_invoiceRef$current","TransDetail","currentData","RowIndex","getSelectedRow","_context5","_accountRef$current","parseFloat","replace","_amountRef$current2","getData","Short","Acct_Code","setData","setSelectedRow","resetRefs","setTimeout","PageHelmet","LoadingButton","TextInput","input","currentTarget","SearchIcon","onIconClick","Button","startIcon","AddIcon","result","_payeeRef$current","_explanationRef$curre","newDataFormatted","map","itm","purpose","amount","usage","accountID","sub_account","clientID","clientName","accountCode","accountShort","vatType","invoice","codeCondfirmationAlert","isUpdate","cb","userCodeConfirmation","_refNoRef$current","_dateRef$current","_payeeRef$current2","_explanationRef$curre2","refNo","datePetty","payee","explanation","hasSelected","pettyCash","saveCondfirmationAlert","isConfirm","_refNoRef$current2","_dateRef$current2","_payeeRef$current3","_explanationRef$curre3","disabled","SaveIcon","text","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","isConfirmed","borderBottom","paddingBottom","gap","marginTop","rowGap","readOnly","_dateRef$current3","RestartAltIcon","defaultValue","_payeeRef$current4","_explanationRef$curre4","_accountRef$current3","paddingTop","borderRadius","Autocomplete","containerStyle","DisplayMember","DataSource","laodTranscation","disableInput","selected","onKeydown","_usageRef$current3","NumericFormat","getInputRef","decimalScale","fixedDecimalScale","_vatRef$current2","num","isNaN","valueIsNaN","onBlur","allowNegative","thousandSeparator","valueIsNumericString","SelectInput","select","margin","cursor","_invoiceRef$current2","datasource","values","selectRef","gridArea","DataGridViewReact","getSelectedItem","rowItm","colItm","rowIdx","colIdx","_ref$disableInput","_ref$label","_ref$input","_useState3","_useState4","inputValue","setInputValue","_useState5","_useState6","filteredSuggestions","setFilteredSuggestions","_useState7","_useState8","showSuggestions","setShowSuggestions","_useState9","_useState10","activeSuggestionIndex","setActiveSuggestionIndex","suggestionListRef","useEffect","_suggestionListRef$cu","activeElement","scrollIntoView","behavior","block","prevIndex","min","max","selectedSuggestion","target","trim","filtered","toLowerCase","suggestion","index","handleClick","onMouseEnter","CustomizeAxiosFunc","_x3","_CustomizeAxiosFunc","search","_args","undefined","_customizeAxiostool","_ref$onSelected","_ref$onRemoveSelected","onRemoveSelected","_ref$onSuccess","_ref$onCloseFunction","onCloseFunction","_ref$CustomizeAxios","CustomizeAxios","show","setShowModal","customizeAxiostool","_args2","res","flushSync","alert","_searchRef$current2","_searchRef$current3","selectedIDs","toString","_preConfirm","html","inputAttributes","autocapitalize","showLoaderOnConfirm","preConfirm","error","allowOutsideClick","isDeclined","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d"],"sourceRoot":""}