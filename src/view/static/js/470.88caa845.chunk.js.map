{"version":3,"file":"static/js/470.88caa845.chunk.js","mappings":"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","sources":["components/DatePicker.tsx","components/ModalWithTable.tsx","components/PrintPreview/dataCore.ts","components/Table.tsx","feautures/Admin/Reports/Accounting/ScheduleAccount.tsx","hooks/useQueryModalTable.tsx","../node_modules/@mui/icons-material/PersonSearch.js","../node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js"],"sourcesContent":["import { LocalizationProvider } from \"@mui/x-date-pickers/LocalizationProvider\";\nimport { AdapterDateFns } from \"@mui/x-date-pickers/AdapterDateFns\";\nimport { DatePicker } from \"@mui/x-date-pickers\";\nexport default function CustomDatePicker({\n  label,\n  name,\n  onChange,\n  value,\n  onKeyDown,\n  inputRef,\n  datePickerRef,\n  fullWidth,\n  textField,\n  minWidth = \"200px\",\n  ...rest\n}: any) {\n  return (\n    <LocalizationProvider dateAdapter={AdapterDateFns}>\n      <DatePicker\n      floatingLabelStyle={{color: \"black\" }}\n        value={value}\n        onChange={onChange}\n        ref={datePickerRef}\n        slotProps={{\n          textField: {\n            size: \"small\",\n            label,\n            name,\n            onKeyDown,\n            inputRef: inputRef,\n            fullWidth,\n\n            ...textField,\n          },\n        }}\n        InputLabelProps={{\n          sx: {\n            color: \"black\",\n          },\n        }}\n        sx={{\n          minWidth,\n          fieldset: { borderColor: \"black\" },\n          \".MuiFormLabel-root\": { fontSize: \"14px\" },\n          \".MuiFormLabel-root[data-shrink=false]\": {\n            top: \"-5px\",\n          },\n        }}\n        {...rest}\n      />\n    </LocalizationProvider>\n  );\n}\n","import React from \"react\";\nimport {\n  GridRowSelectionModel,\n  GridRowParams,\n  GridCellParams,\n  GridTreeNode,\n} from \"@mui/x-data-grid\";\nimport { Modal, Box, Typography, IconButton, TextField } from \"@mui/material\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport Table from \"./Table\";\nimport UpwardTable from \"./UpwardTable\";\ninterface ModalWithTableParams {\n  height: number;\n  isLoading: boolean;\n  queryKey: string;\n  columns: Array<any>;\n  onSelectionChange: (rowSelectionModel: Array<any>, data: Array<any>) => void;\n  setRows: React.Dispatch<React.SetStateAction<GridRowSelectionModel>>;\n  rows: GridRowSelectionModel;\n  id: string;\n  onCloseModal: () => void;\n  onClickCloseIcon: () => void;\n  showModal: boolean;\n  searchOnChange:\n    | React.ChangeEventHandler<HTMLInputElement | HTMLTextAreaElement>\n    | undefined;\n  title?: string;\n  searchRef?: React.RefObject<HTMLInputElement>;\n  onCellKeyDown?: any;\n  onSearchKeyEnter?: (search: string) => void;\n  isRowSelectable?: ((params: GridRowParams<any>) => boolean) | undefined;\n  getCellClassName?:\n    | ((params: GridCellParams<any, any, any, GridTreeNode>) => string)\n    | undefined;\n}\n\nconst style = {\n  position: \"absolute\" as \"absolute\",\n  top: \"50%\",\n  left: \"50%\",\n  transform: \"translate(-50%, -50%)\",\n  width: \"70%\",\n  bgcolor: \"background.paper\",\n  boxShadow: 24,\n  p: 4,\n  heigth: \"auto\",\n};\n\nexport default function ModalWithTable({\n  height,\n  isLoading,\n  queryKey,\n  columns,\n  onSelectionChange,\n  setRows,\n  rows,\n  id,\n  onCloseModal,\n  showModal,\n  onClickCloseIcon,\n  searchOnChange,\n  title = \"\",\n  searchRef,\n  onCellKeyDown,\n  onSearchKeyEnter = () => {},\n  isRowSelectable,\n  getCellClassName,\n}: ModalWithTableParams) {\n  const mainId = generateRandomClass();\n\n  return (\n    <Modal\n      open={showModal}\n      onClose={onCloseModal}\n      aria-labelledby=\"modal-modal-title\"\n      aria-describedby=\"modal-modal-description\"\n    >\n      <Box sx={style}>\n        <Typography id=\"modal-modal-title\" variant=\"h6\" component=\"h2\" mb={2}>\n          {title}\n        </Typography>\n        <TextField\n          size=\"small\"\n          label=\"Search\"\n          sx={{ marginBottom: \"10px\" }}\n          fullWidth\n          onChange={searchOnChange}\n          InputProps={{\n            inputRef: searchRef,\n          }}\n          onKeyDown={(e) => {\n            if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n              e.preventDefault();\n              onSearchKeyEnter(searchRef?.current?.value as string);\n            }\n            keyBoardSelectionTable(\n              e,\n              mainId,\n              searchRef?.current as HTMLInputElement\n            );\n          }}\n        />\n        <div\n          className={`${mainId} main-table-selection-container`}\n          style={{ position: \"relative\", height: `${height + 20}px` }}\n        >\n          <Table\n            isSingleSelection={true}\n            isRowFreeze={false}\n            columns={columns}\n            isLoading={isLoading}\n            dataSelection={(selection, data, code) => {\n              onSelectionChange(selection, data);\n            }}\n            table_id={id}\n            rows={rows}\n            isRowSelectable={isRowSelectable}\n            getCellClassName={getCellClassName}\n          />\n        </div>\n\n        <div style={{ position: \"absolute\", top: \"10px\", right: \"10px\" }}>\n          <IconButton\n            aria-label=\"search-client\"\n            color=\"secondary\"\n            onClick={onClickCloseIcon}\n          >\n            <CloseIcon />\n          </IconButton>\n        </div>\n      </Box>\n    </Modal>\n  );\n}\n\nexport function generateRandomClass() {\n  const randomNumber = Math.floor(Math.random() * 10000);\n  const randomClass = \"main-\" + randomNumber;\n  return randomClass;\n}\n\nfunction keyBoardUpDown(className: string, el: HTMLElement) {\n  const firstRowParent = document.querySelector(\n    `.${className} .MuiDataGrid-row`\n  );\n  const firstInput = firstRowParent?.querySelector(\"input\");\n  firstInput?.focus();\n  const event = new MouseEvent(\"mouseenter\", {\n    bubbles: true,\n    cancelable: true,\n    view: window,\n  });\n  firstRowParent?.dispatchEvent(event);\n  firstInput?.addEventListener(\"keydown\", (es: any) => {\n    if (es.key === \"ArrowUp\") {\n      es.preventDefault();\n      el.focus();\n    }\n    if (es.key === \"ArrowUp\") {\n      firstRowParent?.classList.remove(\"hover-keyboard\");\n    }\n  });\n}\n\nexport function keyBoardSelectionTable(\n  e: React.KeyboardEvent<HTMLDivElement>,\n  className: string,\n  el: HTMLElement\n) {\n  const mainId = className;\n  if (e.code === \"ArrowDown\") {\n    const rows = document.querySelectorAll(`.${mainId} .MuiDataGrid-row`);\n    e.preventDefault();\n    rows[0]?.classList.add(\"hover-keyboard\");\n    keyBoardUpDown(className, el);\n    rows.forEach((el, idx) => {\n      el.addEventListener(\"keydown\", (es: any) => {\n        if (es.key === \"ArrowUp\") {\n          if (idx <= 0) {\n            return;\n          }\n\n          es.preventDefault();\n          rows[idx]?.classList.remove(\"hover-keyboard\");\n          rows[idx - 1]?.classList.add(\"hover-keyboard\");\n          return;\n        }\n        if (es.key === \"ArrowDown\") {\n          es.preventDefault();\n          if (idx >= rows.length - 1) {\n            return;\n          }\n          rows[idx]?.classList.remove(\"hover-keyboard\");\n          rows[idx + 1]?.classList.add(\"hover-keyboard\");\n        }\n      });\n    });\n  }\n}\n","export function getTableCellHeight(\r\n  tempCell: HTMLTableCellElement,\r\n  content: string,\r\n  columnWidth: string,\r\n  contentElment: Element,\r\n  tempTable: HTMLTableElement\r\n) {\r\n  tempCell.style.width = columnWidth;\r\n  tempCell.textContent = content;\r\n  contentElment.appendChild(tempTable);\r\n}\r\n\r\nexport function defaultArrangeDataCore({\r\n  data,\r\n  column,\r\n  beforeArrangeData,\r\n  adjustMaxHeight,\r\n  fontSize = \"11px\",\r\n  summaryHeight = 0,\r\n}: {\r\n  data: any;\r\n  column: Array<any>;\r\n  beforeArrangeData: (itm: any) => any;\r\n  adjustMaxHeight: number;\r\n  fontSize: string;\r\n  summaryHeight?: number;\r\n}) {\r\n  const newData: Array<any> = [];\r\n  let trHeight = 0;\r\n  let temp: Array<any> = [];\r\n  const contentElment = document.querySelector(\".content\") as Element;\r\n  const maxHeight =\r\n    contentElment.getBoundingClientRect().height - adjustMaxHeight;\r\n\r\n  data.forEach((itm: any, idx: number) => {\r\n    itm = beforeArrangeData(itm);\r\n    const contentElment = document.querySelector(\".content\") as Element;\r\n    const tempTable = document.createElement(\"table\");\r\n    const tempRow = tempTable.insertRow();\r\n\r\n    if (itm.summaryReport) {\r\n      if (maxHeight - trHeight <= summaryHeight + 20) {\r\n        trHeight += maxHeight - trHeight;\r\n      }\r\n    }\r\n    column.forEach((col) => {\r\n      const tempCell = tempRow.insertCell();\r\n      tempTable.style.visibility = \"hidden\";\r\n      tempTable.style.width = `100%`;\r\n      tempTable.style.fontSize = fontSize;\r\n\r\n      getTableCellHeight(\r\n        tempCell,\r\n        itm[col.datakey],\r\n        col.width,\r\n        contentElment,\r\n        tempTable\r\n      );\r\n    });\r\n    trHeight += tempRow.getBoundingClientRect().height;\r\n    contentElment.removeChild(tempTable);\r\n    temp.push(itm);\r\n    if (\r\n      trHeight >= maxHeight ||\r\n      (idx === data.length - 1 && trHeight < maxHeight)\r\n    ) {\r\n      newData.push(temp);\r\n      trHeight = 0;\r\n      temp = [];\r\n    }\r\n  });\r\n\r\n  return newData;\r\n}\r\nexport const arrangeData = async ({\r\n  data,\r\n  column,\r\n  beforeArrangeData,\r\n  adjustMaxHeight,\r\n  cb,\r\n  fontSize = \"11px\",\r\n  summaryHeight,\r\n}: {\r\n  data: any;\r\n  column: Array<any>;\r\n  beforeArrangeData: (itm: any) => any;\r\n  adjustMaxHeight: number;\r\n  cb?: ({\r\n    data,\r\n    column,\r\n    beforeArrangeData,\r\n    adjustMaxHeight,\r\n  }: {\r\n    data: any;\r\n    column: Array<any>;\r\n    beforeArrangeData: (itm: any) => any;\r\n    adjustMaxHeight: number;\r\n  }) => any[];\r\n  fontSize?: string;\r\n  summaryHeight?: number;\r\n}) => {\r\n  if (data === undefined) return [];\r\n  if (cb) {\r\n    return cb({\r\n      data,\r\n      column,\r\n      beforeArrangeData,\r\n      adjustMaxHeight,\r\n    });\r\n  }\r\n\r\n  return defaultArrangeDataCore({\r\n    data,\r\n    column,\r\n    beforeArrangeData,\r\n    adjustMaxHeight,\r\n    fontSize,\r\n    summaryHeight,\r\n  });\r\n};\r\n","import {\n  useState,\n  useContext,\n  createContext,\n  ReactElement,\n  forwardRef,\n  useImperativeHandle,\n} from \"react\";\nimport { Box, LinearProgress } from \"@mui/material\";\nimport {\n  DataGrid,\n  GridSlotsComponentsProps,\n  gridPageCountSelector,\n  GridPagination,\n  useGridApiContext,\n  useGridSelector,\n  GridRowSelectionModel,\n  GridColDef,\n  GridRowParams,\n  GridCellParams,\n  GridTreeNode,\n} from \"@mui/x-data-grid\";\nimport { TablePaginationProps } from \"@mui/material/TablePagination\";\nimport MuiPagination from \"@mui/material/Pagination\";\n\ninterface TableProps {\n  isLoading: boolean;\n  columns: Array<any>;\n  rows: Array<any>;\n  table_id: string;\n  isSingleSelection: boolean;\n  isRowFreeze: boolean;\n  dataSelection?: (selection: any, data: any, code: string | null) => void;\n  CustomFooterComponent?: any;\n  isRowSelectable?: ((params: GridRowParams<any>) => boolean) | undefined;\n  getCellClassName?:\n    | ((params: GridCellParams<any, any, any, GridTreeNode>) => string)\n    | undefined;\n  footerChildren?: (\n    rowSelectionModel: GridRowSelectionModel,\n    rows: Array<any>\n  ) => ReactElement;\n  footerPaginationPosition?: string;\n  showFooterSelectedCount?: boolean;\n  checkboxSelection?: boolean | undefined;\n}\n\nconst TableContext = createContext<{\n  rowSelectionModel: GridRowSelectionModel;\n  rows: Array<any>;\n  footerPaginationPosition?: string;\n  showFooterSelectedCount?: boolean;\n  footerChildren: (\n    rowSelectionModel: GridRowSelectionModel,\n    rows: Array<any>\n  ) => ReactElement;\n}>({\n  rows: [],\n  rowSelectionModel: [],\n  footerChildren: () => <div></div>,\n  footerPaginationPosition: \"right-left\",\n  showFooterSelectedCount: true,\n});\nconst Table = forwardRef(\n  (\n    {\n      isLoading,\n      columns,\n      rows,\n      table_id,\n      isSingleSelection,\n      isRowFreeze,\n      dataSelection,\n      CustomFooterComponent = DefaultooterComponent,\n      isRowSelectable,\n      getCellClassName,\n      checkboxSelection = true,\n      footerChildren = (\n        rowSelectionModel: GridRowSelectionModel,\n        rows: Array<any>\n      ) => <div></div>,\n      footerPaginationPosition = \"right-left\",\n      showFooterSelectedCount = true,\n    }: TableProps,\n    ref\n  ) => {\n    const [selectedRows, setSelectedRows] = useState<any>([]);\n\n    useImperativeHandle(ref, () => ({\n      removeSelection: () => {\n        setSelectedRows([]);\n      },\n      getSelectedRows: () => {\n        return rows.filter((item: any) =>\n          selectedRows?.includes(item[table_id])\n        );\n      },\n      setSelectedRows: (data: Array<any>) => {\n        setSelectedRows(data);\n      },\n    }));\n\n    function onSelectionChange(selection: any, data: any, code: string | null) {\n      if (dataSelection) {\n        dataSelection(selection, data, code);\n      }\n    }\n    let freezeArray: Array<any> = [];\n\n    return (\n      <TableContext.Provider\n        value={{\n          showFooterSelectedCount,\n          footerPaginationPosition,\n          rowSelectionModel: selectedRows,\n          rows,\n          footerChildren,\n        }}\n      >\n        <DataGrid\n          slots={{\n            loadingOverlay: LinearProgress,\n            footer: CustomFooterComponent,\n          }}\n          initialState={{\n            pagination: { paginationModel: { pageSize: 35 } },\n          }}\n          loading={isLoading}\n          getRowId={(row) => row[table_id]}\n          columns={columns.filter((col: any) => !col.hide) as GridColDef<any>[]}\n          rows={rows}\n          showCellVerticalBorder={true}\n          showColumnVerticalBorder={true}\n          checkboxSelection={checkboxSelection}\n          rowSelectionModel={selectedRows}\n          rowHeight={25}\n          columnHeaderHeight={35}\n          pageSizeOptions={[10, 20, 35, 50, 75, 100]}\n          sx={{\n            \"& .cash\": {\n              color: \"#ec4899\",\n            },\n            \"& .check\": {\n              color: \"#0891b2\",\n            },\n            \"& .approved\": {\n              color: \"green\",\n            },\n            \"& .pending\": {\n              color: \"orange\",\n            },\n            \"& .disapproved\": {\n              color: \"red\",\n            },\n            \"& .normal\": {\n              color: \"red\",\n            },\n            \"& .MuiDataGrid-row.Mui-selected:hover\": {\n              color: \"black\",\n              \"& .MuiSvgIcon-root \": {\n                fill: \"#3b82f6\",\n              },\n            },\n            \"& .hover-keyboard\": {\n              background: \"#2563eb\",\n              color: \"white\",\n              \"& .MuiSvgIcon-root \": {\n                fill: \"white\",\n              },\n            },\n            \"& .MuiDataGrid-row:hover\": {\n              background: \"#2563eb\",\n              color: \"white\",\n              \"& .MuiSvgIcon-root \": {\n                fill: \"white\",\n              },\n            },\n            \"& .MuiDataGrid-row.hover\": {\n              background: \"#2563eb\",\n              color: \"white\",\n              \"& .MuiSvgIcon-root \": {\n                fill: \"white\",\n              },\n            },\n            \"& .MuiTablePagination-root p \": {\n              padding: \"0 !important\",\n            },\n\n            ...{\n              \"& .MuiDataGrid-columnHeaders\": {\n                background: \"#64748b\",\n                color: \"white\",\n                fontSize: \"14px\",\n                // borderBottomColor: \"#38bdf8\",\n              },\n              \"& .MuiDataGrid-columnHeaderCheckbox .MuiDataGrid-columnHeaderTitleContainer .MuiSvgIcon-root \":\n                {\n                  display: isSingleSelection || isRowFreeze ? \"none\" : \"block\",\n                  fill: \"white\",\n                },\n              \"& .MuiDataGrid-columnHeaderCheckbox .MuiDataGrid-columnHeaderTitleContainer input \":\n                {\n                  display: isSingleSelection || isRowFreeze ? \"none\" : \"block\",\n                },\n            },\n            ...{\n              fontSize: 13,\n              fontWeight: 500,\n              \"& .MuiDataGrid-checkboxInput\": {\n                height: \"27px\",\n                width: \"27px\",\n              },\n              \"& .MuiDataGrid-checkboxInput svg\": {\n                height: \"20px\",\n                width: \"20px\",\n              },\n            },\n          }}\n          // onRowDoubleClick={(e, r) => {\n          //   console.log(e, r);\n          // }}\n\n          onRowSelectionModelChange={(selection) => {\n            if (isRowFreeze) {\n              if (selection.length <= 0) return;\n              freezeArray = selection;\n              if (selectedRows.includes(freezeArray[freezeArray.length - 1]))\n                return;\n\n              setSelectedRows(selection);\n\n              onSelectionChange([selection[selection.length - 1]], rows, null);\n              return;\n            }\n\n            if (!isRowFreeze && isSingleSelection) {\n              if (selectedRows && selectedRows?.length > 0) {\n                const selectionSet = new Set(selectedRows);\n                setSelectedRows(\n                  selection.filter((s: any) => !selectionSet.has(s))\n                );\n              } else {\n                setSelectedRows(selection);\n              }\n            } else {\n              setSelectedRows(selection);\n            }\n\n            onSelectionChange([selection[selection.length - 1]], rows, null);\n          }}\n          onCellKeyDown={(__: any, key: any) => {\n            const keyFinding = [\"NumpadEnter\", \"Enter\", \"Delete\", \"Backspace\"];\n            if (!keyFinding.includes(key.code)) {\n              return;\n            }\n            key.preventDefault();\n            if (key.code === \"Enter\" || key.code === \"NumpadEnter\") {\n              if (isSingleSelection && !isRowFreeze) {\n                return setSelectedRows((data: any) => {\n                  if (data && data.length > 0 && data[0] === __.rowNode.id) {\n                    onSelectionChange([], rows, key.code);\n                    return [];\n                  }\n                  onSelectionChange([__.rowNode.id], rows, key.code);\n                  return [__.rowNode.id];\n                });\n              } else {\n                setSelectedRows((data: any) => {\n                  if (\n                    data &&\n                    !isRowFreeze &&\n                    data.length > 0 &&\n                    data.includes(__.rowNode.id)\n                  ) {\n                    data = data.filter((item: any) => item !== __.rowNode.id);\n                    onSelectionChange([], rows, key.code);\n                    return data;\n                  }\n                  if (\n                    data &&\n                    isRowFreeze &&\n                    data.length > 0 &&\n                    data.includes(__.rowNode.id)\n                  ) {\n                    return data;\n                  }\n                  onSelectionChange([__.rowNode.id], rows, key.code);\n                  return [...data, __.rowNode.id];\n                });\n              }\n              return;\n            }\n            if (key.code === \"Delete\" || key.code === \"Backspace\") {\n              setSelectedRows([__.rowNode.id]);\n              return onSelectionChange([__.rowNode.id], rows, key.code);\n            }\n          }}\n          disableVirtualization\n          isRowSelectable={isRowSelectable}\n          getCellClassName={getCellClassName}\n        />\n      </TableContext.Provider>\n    );\n  }\n);\n\nexport default Table;\nfunction Pagination({\n  page,\n  onPageChange,\n  className,\n}: Pick<TablePaginationProps, \"page\" | \"onPageChange\" | \"className\">) {\n  const apiRef = useGridApiContext();\n  const pageCount = useGridSelector(apiRef, gridPageCountSelector);\n\n  return (\n    <MuiPagination\n      variant=\"outlined\"\n      color=\"primary\"\n      className={className}\n      count={pageCount}\n      page={page + 1}\n      onChange={(event, newPage) => {\n        onPageChange(event as any, newPage - 1);\n      }}\n    />\n  );\n}\n\nfunction CustomPagination(props: any) {\n  return <GridPagination ActionsComponent={Pagination} {...props} />;\n}\nfunction DefaultooterComponent(\n  props: NonNullable<GridSlotsComponentsProps[\"footer\"]>\n) {\n  const {\n    rowSelectionModel,\n    showFooterSelectedCount,\n    footerPaginationPosition,\n    footerChildren,\n    rows,\n  } = useContext(TableContext);\n  return (\n    <Box\n      sx={{\n        columnGap: \"50px\",\n        display: \"flex\",\n        width: \"100%\",\n        justifyContent: \"space-between\",\n        px: 3,\n        alignItems: \"center\",\n        flexDirection:\n          footerPaginationPosition === \"right-left\" ? \"row-reverse\" : \"row\",\n      }}\n    >\n      <CustomPagination {...props} />\n      <Box\n        sx={{\n          display: \"flex\",\n          justifyContent:\n            footerPaginationPosition === \"right-left\"\n              ? \"flex-start\"\n              : \"flex-end\",\n          flex: 1,\n          alignItems: \"center\",\n        }}\n      >\n        {showFooterSelectedCount && (\n          <div>Selected:{rowSelectionModel?.length}</div>\n        )}\n        <div>{footerChildren(rowSelectionModel, rows)}</div>\n      </Box>\n    </Box>\n  );\n}\n","import React, { useContext, useRef, useState } from \"react\";\nimport PrintPreview, {\n  bgSetting,\n  columnSelection,\n  copiedByHeaderOnDoubleClick,\n  formatNumberWithCommas,\n} from \"../../../../components/PrintPreview/PrintPreview\";\nimport { AuthContext } from \"../../../../components/AuthContext\";\nimport { DatePicker, LocalizationProvider } from \"@mui/x-date-pickers\";\nimport {\n  FormControl,\n  MenuItem,\n  Select,\n  TextField,\n  InputLabel,\n  Box,\n  InputAdornment,\n  IconButton,\n  OutlinedInput,\n} from \"@mui/material\";\nimport { AdapterDateFns } from \"@mui/x-date-pickers/AdapterDateFns\";\nimport { useQuery } from \"react-query\";\nimport { LoadingButton } from \"@mui/lab\";\nimport { flushSync } from \"react-dom\";\nimport CustomDatePicker from \"../../../../components/DatePicker\";\nimport useQueryModalTable from \"../../../../hooks/useQueryModalTable\";\nimport PersonSearchIcon from \"@mui/icons-material/PersonSearch\";\nimport { arrangeData } from \"../../../../components/PrintPreview/dataCore\";\nimport { format } from \"date-fns\";\n\nconst initialState = {\n  format: 0,\n  account: \"\",\n  account_title: \"\",\n  dateFormat: \"Yearly\",\n  dateFrom: new Date(),\n  dateTo: new Date(),\n  yearCount: new Date().getFullYear().toString().slice(-2),\n  subsi: 1,\n  subsi_options: \"All\",\n  sort: \"Name\",\n  order: \"asc\",\n  title: \"\",\n};\n\nconst subAcctColumn = [\n  {\n    datakey: \"GL_Acct\",\n    header: \"ID No.\",\n    width: \"220px\",\n  },\n  {\n    datakey: \"mSub_Acct\",\n    header: \"IDENTITY\",\n    width: \"400px\",\n  },\n  {\n    datakey: \"Balance\",\n    header: \"AMOUNT\",\n    total: true,\n    type: \"number\",\n    width: \"160px\",\n  },\n];\nconst idColumn = [\n  {\n    datakey: \"ID_No\",\n    header: \"ID No.\",\n    width: \"220px\",\n  },\n  {\n    datakey: \"mID\",\n    header: \"IDENTITY\",\n    width: \"400px\",\n  },\n  {\n    datakey: \"Balance\",\n    header: \"AMOUNT\",\n    total: true,\n    type: \"number\",\n    width: \"160px\",\n  },\n];\nconst insuranceColumn = [\n  {\n    datakey: \"ID_No\",\n    header: \"ID. No.\",\n    width: \"220px\",\n  },\n  {\n    datakey: \"mID\",\n    header: \"Insurance\",\n    width: \"400px\",\n  },\n  {\n    datakey: \"Balance\",\n    header: \"Balance\",\n    total: true,\n    type: \"number\",\n    width: \"160px\",\n  },\n];\nfunction columnRender(subsi: number) {\n  const columns = [subAcctColumn, idColumn, insuranceColumn];\n  return columns[subsi];\n}\nfunction ShowDateSelection({ state, dispatch, handleInputChange, user }: any) {\n  const dateFromRef = useRef<HTMLElement>(null);\n  const dateToRef = useRef<HTMLElement>(null);\n\n  return (\n    <div\n      style={{\n        width: \"100%\",\n        display: \"flex\",\n        flexDirection: \"column\",\n        rowGap: \"10px\",\n      }}\n    >\n      {state.dateFormat === \"Custom\" && (\n        <React.Fragment>\n          <CustomDatePicker\n            fullWidth={true}\n            label=\"Date From\"\n            onChange={(value: any) => {\n              dispatch({\n                type: \"UPDATE_FIELD\",\n                field: \"dateFrom\",\n                value: value,\n              });\n              state.dateFrom = value;\n              dispatch({\n                type: \"UPDATE_FIELD\",\n                field: \"title\",\n                value: setupTitle(state, user?.department as string),\n              });\n            }}\n            value={new Date(state.dateFrom)}\n            onKeyDown={(e: any) => {\n              if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n                const timeout = setTimeout(() => {\n                  dateFromRef.current?.querySelector(\"button\")?.click();\n                  clearTimeout(timeout);\n                }, 150);\n              }\n            }}\n            datePickerRef={dateFromRef}\n            textField={{\n              InputLabelProps: {\n                style: {\n                  fontSize: \"14px\",\n                },\n              },\n              InputProps: {\n                style: { height: \"27px\", fontSize: \"14px\" },\n              },\n            }}\n          />\n          <CustomDatePicker\n            fullWidth={true}\n            label=\"Date To\"\n            onChange={(value: any) => {\n              dispatch({\n                type: \"UPDATE_FIELD\",\n                field: \"dateTo\",\n                value: value,\n              });\n              state.dateTo = value;\n              dispatch({\n                type: \"UPDATE_FIELD\",\n                field: \"title\",\n                value: setupTitle(state, user?.department as string),\n              });\n            }}\n            value={new Date(state.dateTo)}\n            onKeyDown={(e: any) => {\n              if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n                const timeout = setTimeout(() => {\n                  dateToRef.current?.querySelector(\"button\")?.click();\n                  clearTimeout(timeout);\n                }, 150);\n              }\n            }}\n            datePickerRef={dateToRef}\n            textField={{\n              InputLabelProps: {\n                style: {\n                  fontSize: \"14px\",\n                },\n              },\n              InputProps: {\n                style: { height: \"27px\", fontSize: \"14px\" },\n              },\n            }}\n          />\n        </React.Fragment>\n      )}\n\n      {state.dateFormat === \"Daily\" && (\n        <CustomDatePicker\n          fullWidth={true}\n          label=\"Date\"\n          onChange={(value: any) => {\n            dispatch({\n              type: \"UPDATE_FIELD\",\n              field: \"dateFrom\",\n              value: value,\n            });\n            state.dateFrom = value;\n            dispatch({\n              type: \"UPDATE_FIELD\",\n              field: \"title\",\n              value: setupTitle(state, user?.department as string),\n            });\n          }}\n          value={new Date(state.dateFrom)}\n          onKeyDown={(e: any) => {\n            if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n              const timeout = setTimeout(() => {\n                dateFromRef.current?.querySelector(\"button\")?.click();\n                clearTimeout(timeout);\n              }, 150);\n            }\n          }}\n          datePickerRef={dateFromRef}\n          textField={{\n            InputLabelProps: {\n              style: {\n                fontSize: \"14px\",\n              },\n            },\n            InputProps: {\n              style: { height: \"27px\", fontSize: \"14px\" },\n            },\n          }}\n        />\n      )}\n      <LocalizationProvider dateAdapter={AdapterDateFns}>\n        {state.dateFormat === \"Monthly\" && (\n          <DatePicker\n            sx={{\n              width: \"100%\",\n              \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n            }}\n            slotProps={{\n              textField: {\n                size: \"small\",\n                name: \"\",\n                InputLabelProps: {\n                  style: {\n                    fontSize: \"14px\",\n                  },\n                },\n                InputProps: {\n                  style: { height: \"27px\", fontSize: \"14px\" },\n                },\n              },\n            }}\n            label={\"Date\"}\n            views={[\"month\", \"year\"]}\n            value={state.dateFrom}\n            onChange={(value) => {\n              dispatch({\n                type: \"UPDATE_FIELD\",\n                field: \"dateFrom\",\n                value: value,\n              });\n              state.dateFrom = value;\n              dispatch({\n                type: \"UPDATE_FIELD\",\n                field: \"title\",\n                value: setupTitle(state, user?.department as string),\n              });\n            }}\n          />\n        )}\n        {state.dateFormat === \"Yearly\" && (\n          <React.Fragment>\n            <DatePicker\n              sx={{\n                width: \"100%\",\n                \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n              }}\n              slotProps={{\n                textField: {\n                  size: \"small\",\n                  name: \"\",\n                  inputRef: dateFromRef,\n                  InputLabelProps: {\n                    style: {\n                      fontSize: \"14px\",\n                    },\n                  },\n                  InputProps: {\n                    style: { height: \"27px\", fontSize: \"14px\" },\n                  },\n                },\n              }}\n              label={\"Date\"}\n              views={[\"year\"]}\n              value={state.dateFrom}\n              onChange={(value) => {\n                dispatch({\n                  type: \"UPDATE_FIELD\",\n                  field: \"dateFrom\",\n                  value: value,\n                });\n                state.dateFrom = value;\n                dispatch({\n                  type: \"UPDATE_FIELD\",\n                  field: \"title\",\n                  value: setupTitle(state, user?.department as string),\n                });\n              }}\n            />\n            <TextField\n              type=\"number\"\n              label=\"Year Count\"\n              name=\"yearCount\"\n              value={state.yearCount}\n              onChange={handleInputChange}\n              InputProps={{\n                style: { height: \"27px\", fontSize: \"12px\" },\n              }}\n              sx={{\n                \".MuiFormLabel-root\": { fontSize: \"14px\" },\n                \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n              }}\n            />\n          </React.Fragment>\n        )}\n      </LocalizationProvider>\n    </div>\n  );\n}\nfunction Setting({ state, dispatch }: { state: any; dispatch: any }) {\n  const chartAccountSearchInput = useRef<HTMLInputElement>(null);\n  const clientSearchInput = useRef<HTMLInputElement>(null);\n  const { myAxios, user } = useContext(AuthContext);\n  const { data: dataAccounts, isLoading: isLoadingAccounts } = useQuery({\n    queryKey: \"chart-account\",\n    queryFn: async () =>\n      await myAxios.get(\"/reports/accounting/schedule-accounts\", {\n        headers: {\n          Authorization: `Bearer ${user?.accessToken}`,\n        },\n      }),\n  });\n  const { data: dataSubAccounts, isLoading: isLoadingSubAccounts } = useQuery({\n    queryKey: \"sub-accounts\",\n    queryFn: async () =>\n      await myAxios.get(\"/reports/accounting/get-sub-account-acronym\", {\n        headers: {\n          Authorization: `Bearer ${user?.accessToken}`,\n        },\n      }),\n  });\n  const {\n    ModalComponent: ModalClientIDs,\n    openModal: openCliendIDsModal,\n    isLoading: isLoadingClientIdsModal,\n    closeModal: closeCliendIDsModal,\n  } = useQueryModalTable({\n    link: {\n      url: \"/task/accounting/search-pdc-policy-id\",\n      queryUrlName: \"searchPdcPolicyIds\",\n    },\n\n    columns: [\n      { field: \"Type\", headerName: \"Type\", width: 130 },\n      { field: \"IDNo\", headerName: \"ID No.\", width: 200 },\n      {\n        field: \"Name\",\n        headerName: \"Name\",\n        flex: 1,\n      },\n      {\n        field: \"ID\",\n        headerName: \"ID\",\n        flex: 1,\n        hide: true,\n      },\n    ],\n    queryKey: \"client-ids\",\n    uniqueId: \"IDNo\",\n    responseDataKey: \"clientsId\",\n    onSelected: (selectedRowData, data) => {\n      dispatch({\n        type: \"UPDATE_FIELD\",\n        field: \"subsi_options\",\n        value: selectedRowData[0].IDNo,\n      });\n      closeCliendIDsModal();\n    },\n    searchRef: clientSearchInput,\n  });\n  const {\n    ModalComponent: modalChartAccount,\n    openModal: openChartAccountModal,\n    isLoading: isLoadingChartAccountModal,\n    closeModal: closeChartAccountModal,\n  } = useQueryModalTable({\n    link: {\n      url: \"/reports/accounting/chart-schedule-account\",\n      queryUrlName: \"account_search\",\n    },\n    columns: [\n      { field: \"Acct_Code\", headerName: \"Code\", width: 130 },\n      { field: \"Acct_Title\", headerName: \"Tittle\", flex: 1 },\n      {\n        field: \"Short\",\n        headerName: \"Short Name\",\n        flex: 1,\n      },\n    ],\n    queryKey: \"chart-account-ids\",\n    uniqueId: \"Acct_Code\",\n    responseDataKey: \"chartAccount\",\n    onSelected: (selectedRowData, data) => {\n      dispatch({\n        type: \"UPDATE_FIELD\",\n        field: \"account\",\n        value: selectedRowData[0].Acct_Code,\n      });\n      dispatch({\n        type: \"UPDATE_FIELD\",\n        field: \"account_title\",\n        value: selectedRowData[0].Acct_Title,\n      });\n      state.account = selectedRowData[0].Acct_Code;\n      dispatch({\n        type: \"UPDATE_FIELD\",\n        field: \"title\",\n        value: setupTitle(state, user?.department as string),\n      });\n      state.account_title = selectedRowData[0].Acct_Title;\n      dispatch({\n        type: \"UPDATE_FIELD\",\n        field: \"title\",\n        value: setupTitle(state, user?.department as string),\n      });\n\n      closeChartAccountModal();\n    },\n    searchRef: chartAccountSearchInput,\n  });\n\n  const handleInputChange = (e: any) => {\n    const { name, value } = e.target;\n    if (name === \"policy\" && value !== \"TPL\") {\n      dispatch({ type: \"UPDATE_FIELD\", field: \"mortgagee\", value: \"\" });\n    }\n    if (name === \"mortgagee\" && value !== \"\") {\n      dispatch({ type: \"UPDATE_FIELD\", field: \"account\", value: \"\" });\n    }\n\n    dispatch({\n      type: \"UPDATE_FIELD\",\n      field: \"title\",\n      value: setupTitle(\n        { ...state, [name]: value },\n        user?.department as string\n      ),\n    });\n\n    dispatch({ type: \"UPDATE_FIELD\", field: name, value });\n  };\n\n  return (\n    <div\n      style={{\n        padding: \"10px\",\n        background: \"transparent\",\n      }}\n    >\n      <TextField\n        label=\"Title\"\n        fullWidth\n        name=\"title\"\n        value={state.title}\n        onChange={handleInputChange}\n        rows={6}\n        multiline\n        InputProps={{\n          style: { height: \"140px\", fontSize: \"12px\" },\n        }}\n        sx={{\n          flex: 1,\n          \".MuiFormLabel-root\": { fontSize: \"14px\" },\n          \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n        }}\n      />\n      <Box\n        sx={(theme) => ({\n          height: \"100%\",\n          display: \"flex\",\n          gap: \"10px\",\n          margin: \"10px 0\",\n          flexDirection: \"column\",\n        })}\n      >\n        <FormControl\n          fullWidth\n          variant=\"outlined\"\n          size=\"small\"\n          sx={{\n            \".MuiFormLabel-root\": {\n              fontSize: \"14px\",\n              background: \"white\",\n              zIndex: 99,\n              padding: \"0 3px\",\n            },\n\n            \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n            \".MuiFormLabel-root.MuiInputLabel-root.MuiInputLabel-formControl\": {\n              background: bgSetting,\n            },\n          }}\n        >\n          <InputLabel id=\"report\">Report</InputLabel>\n          <Select\n            labelId=\"report\"\n            value={state.format}\n            label=\"Report\"\n            name=\"format\"\n            onChange={(e) => {\n              handleInputChange(e);\n              dispatch({\n                type: \"UPDATE_FIELD\",\n                field: \"account\",\n                value: \"\",\n              });\n              dispatch({\n                type: \"UPDATE_FIELD\",\n                field: \"account_title\",\n                value: \"\",\n              });\n            }}\n            sx={{\n              height: \"27px\",\n              fontSize: \"14px\",\n            }}\n          >\n            <MenuItem value={0}>All Accounts</MenuItem>\n            <MenuItem value={1}>GL Account (Detailed)</MenuItem>\n          </Select>\n        </FormControl>\n        {isLoadingChartAccountModal ? (\n          <LoadingButton loading={isLoadingChartAccountModal} />\n        ) : (\n          <FormControl\n            sx={{\n              width: \"100%\",\n              \".MuiFormLabel-root\": {\n                fontSize: \"14px\",\n                background: \"white\",\n                zIndex: 99,\n                padding: \"0 3px\",\n              },\n              \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n              \".MuiFormLabel-root.MuiInputLabel-root.MuiInputLabel-formControl\":\n                {\n                  background: bgSetting,\n                },\n            }}\n            variant=\"outlined\"\n            size=\"small\"\n            disabled={state.format === 0}\n          >\n            <InputLabel htmlFor=\"account_id\">Account</InputLabel>\n            <OutlinedInput\n              sx={{\n                height: \"27px\",\n                fontSize: \"14px\",\n              }}\n              name=\"account\"\n              value={state.account}\n              onChange={handleInputChange}\n              id=\"account_id\"\n              onKeyDown={(e) => {\n                if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n                  return openChartAccountModal(state.account);\n                }\n              }}\n              endAdornment={\n                <InputAdornment position=\"end\">\n                  <IconButton\n                    disabled={state.format === 0}\n                    onClick={() => {\n                      openChartAccountModal(state.account);\n                    }}\n                    edge=\"end\"\n                    color=\"secondary\"\n                  >\n                    <PersonSearchIcon />\n                  </IconButton>\n                </InputAdornment>\n              }\n              label=\"Account\"\n            />\n          </FormControl>\n        )}\n        <TextField\n          fullWidth\n          name=\"account_title\"\n          value={state.account_title}\n          onChange={handleInputChange}\n          InputProps={{\n            readOnly: true,\n            style: { height: \"27px\" },\n          }}\n          sx={{\n            gridColumn: \"1 / span 2\",\n            \".MuiFormLabel-root\": { fontSize: \"14px\" },\n            \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n            \".MuiFormLabel-root.MuiInputLabel-root.MuiInputLabel-formControl\": {\n              background: bgSetting,\n            },\n          }}\n        />\n        <FormControl\n          fullWidth\n          variant=\"outlined\"\n          size=\"small\"\n          sx={{\n            \".MuiFormLabel-root\": {\n              fontSize: \"14px\",\n              background: \"white\",\n              zIndex: 99,\n              padding: \"0 3px\",\n            },\n            \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n            \".MuiFormLabel-root.MuiInputLabel-root.MuiInputLabel-formControl\": {\n              background: bgSetting,\n            },\n          }}\n        >\n          <InputLabel id=\"subsi_id\">Subsidiary</InputLabel>\n          <Select\n            labelId=\"subsi_id\"\n            value={state.subsi}\n            label=\"Subsidiary\"\n            name=\"subsi\"\n            onChange={handleInputChange}\n            sx={{\n              height: \"27px\",\n              fontSize: \"14px\",\n            }}\n          >\n            <MenuItem value={0}>Sub Acct</MenuItem>\n            <MenuItem value={1}>I.D No.</MenuItem>\n            <MenuItem value={2}>Insurance</MenuItem>\n          </Select>\n        </FormControl>\n        {state.subsi === 0 && (\n          <React.Fragment>\n            {isLoadingSubAccounts ? (\n              <LoadingButton loading={isLoadingSubAccounts} />\n            ) : (\n              <FormControl\n                fullWidth\n                variant=\"outlined\"\n                size=\"small\"\n                sx={{\n                  \".MuiFormLabel-root\": {\n                    fontSize: \"14px\",\n                    background: \"white\",\n                    zIndex: 99,\n                    padding: \"0 3px\",\n                  },\n                  \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n                  \".MuiFormLabel-root.MuiInputLabel-root.MuiInputLabel-formControl\":\n                    {\n                      background: bgSetting,\n                    },\n                }}\n              >\n                <InputLabel id=\"sub_account_id\">Sub Account</InputLabel>\n                <Select\n                  labelId=\"sub_account_id\"\n                  value={state.subsi_options}\n                  label=\"Sub Account\"\n                  name=\"subsi_options\"\n                  onChange={handleInputChange}\n                  sx={{\n                    height: \"27px\",\n                    fontSize: \"14px\",\n                  }}\n                >\n                  <MenuItem value={\"All\"}>All</MenuItem>\n                  {dataSubAccounts?.data.sub_account.map(\n                    (itm: any, idx: number) => {\n                      return (\n                        <MenuItem key={idx} value={itm.Acronym}>\n                          {itm.Acronym}\n                        </MenuItem>\n                      );\n                    }\n                  )}\n                </Select>\n              </FormControl>\n            )}\n          </React.Fragment>\n        )}\n        {state.subsi === 1 && (\n          <React.Fragment>\n            {isLoadingClientIdsModal ? (\n              <LoadingButton loading={isLoadingClientIdsModal} />\n            ) : (\n              <FormControl\n                sx={{\n                  width: \"100%\",\n                  \".MuiFormLabel-root\": {\n                    fontSize: \"14px\",\n                    background: \"white\",\n                    zIndex: 99,\n                    padding: \"0 3px\",\n                  },\n                  \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n                  \".MuiFormLabel-root.MuiInputLabel-root.MuiInputLabel-formControl\":\n                    {\n                      background: bgSetting,\n                    },\n                }}\n                variant=\"outlined\"\n                size=\"small\"\n              >\n                <InputLabel htmlFor=\"clients_id\">Clients</InputLabel>\n                <OutlinedInput\n                  sx={{\n                    height: \"27px\",\n                    fontSize: \"14px\",\n                  }}\n                  label=\"Clients\"\n                  name=\"subsi_options\"\n                  value={state.subsi_options}\n                  onChange={handleInputChange}\n                  id=\"clients_id\"\n                  onKeyDown={(e) => {\n                    if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n                      return openCliendIDsModal(state.subsi_options);\n                    }\n                  }}\n                  endAdornment={\n                    <InputAdornment position=\"end\">\n                      <IconButton\n                        onClick={() => {\n                          openCliendIDsModal(state.subsi_options);\n                        }}\n                        edge=\"end\"\n                        color=\"secondary\"\n                      >\n                        <PersonSearchIcon />\n                      </IconButton>\n                    </InputAdornment>\n                  }\n                />\n              </FormControl>\n            )}\n          </React.Fragment>\n        )}\n        {state.subsi === 2 && (\n          <React.Fragment>\n            {isLoadingAccounts ? (\n              <LoadingButton loading={isLoadingAccounts} />\n            ) : (\n              <FormControl\n                fullWidth\n                variant=\"outlined\"\n                size=\"small\"\n                sx={{\n                  \".MuiFormLabel-root\": {\n                    fontSize: \"14px\",\n                    background: \"white\",\n                    zIndex: 99,\n                    padding: \"0 3px\",\n                  },\n                  \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n                  \".MuiFormLabel-root.MuiInputLabel-root.MuiInputLabel-formControl\":\n                    {\n                      background: bgSetting,\n                    },\n                }}\n              >\n                <InputLabel id=\"insurance_id\">Insurance</InputLabel>\n                <Select\n                  labelId=\"insurance_id\"\n                  value={state.subsi_options}\n                  label=\"Insurance\"\n                  name=\"subsi_options\"\n                  onChange={handleInputChange}\n                  sx={{\n                    height: \"27px\",\n                    fontSize: \"14px\",\n                  }}\n                >\n                  <MenuItem value={\"All\"}>All</MenuItem>\n                  {dataAccounts?.data.accounts.map((itm: any, idx: number) => {\n                    return (\n                      <MenuItem key={idx} value={itm.AccountCode}>\n                        {itm.AccountCode}\n                      </MenuItem>\n                    );\n                  })}\n                </Select>\n              </FormControl>\n            )}\n          </React.Fragment>\n        )}\n        <FormControl\n          fullWidth\n          variant=\"outlined\"\n          size=\"small\"\n          sx={{\n            \".MuiFormLabel-root\": {\n              fontSize: \"14px\",\n              background: \"white\",\n              zIndex: 99,\n              padding: \"0 3px\",\n            },\n            \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n            \".MuiFormLabel-root.MuiInputLabel-root.MuiInputLabel-formControl\": {\n              background: bgSetting,\n            },\n          }}\n        >\n          <InputLabel id=\"dateFormat_id\">Date Format</InputLabel>\n          <Select\n            id=\"dateFormat_id\"\n            label=\"Date Format\"\n            value={state.dateFormat}\n            name=\"dateFormat\"\n            onChange={handleInputChange}\n            sx={{\n              height: \"27px\",\n              fontSize: \"14px\",\n            }}\n          >\n            <MenuItem value={\"Daily\"}>Daily</MenuItem>\n            <MenuItem value={\"Monthly\"}>Monthly</MenuItem>\n            <MenuItem value={\"Yearly\"}>Yearly</MenuItem>\n            <MenuItem value={\"Custom\"}>Custom</MenuItem>\n          </Select>\n        </FormControl>\n        <ShowDateSelection\n          dispatch={dispatch}\n          state={state}\n          handleInputChange={handleInputChange}\n        />\n      </Box>\n      <Box\n        sx={{\n          height: \"100%\",\n          flex: 1,\n          alignItems: \"center\",\n          padding: \"20px 10px\",\n          border: \"1px solid #94a3b8\",\n        }}\n      >\n        <Box\n          sx={(theme) => ({\n            width: \"100%\",\n            display: \"flex\",\n            flexDirection: \"row\",\n            columnGap: \"10px\",\n            alignItems: \"center\",\n            [theme.breakpoints.down(\"sm\")]: {\n              flexDirection: \"column\",\n              rowGap: \"10px\",\n            },\n          })}\n        >\n          <FormControl\n            fullWidth\n            variant=\"outlined\"\n            size=\"small\"\n            sx={{\n              \".MuiFormLabel-root\": {\n                fontSize: \"14px\",\n                background: \"white\",\n                zIndex: 99,\n                padding: \"0 3px\",\n              },\n              \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n              \".MuiFormLabel-root.MuiInputLabel-root.MuiInputLabel-formControl\":\n                {\n                  background: bgSetting,\n                },\n            }}\n          >\n            <InputLabel id=\"sort\">Sort</InputLabel>\n            <Select\n              labelId=\"sort\"\n              value={state.sort}\n              label=\"Sort\"\n              name=\"sort\"\n              onChange={handleInputChange}\n              sx={{\n                height: \"27px\",\n                fontSize: \"14px\",\n              }}\n            >\n              <MenuItem value={\"Name\"}>Name</MenuItem>\n              <MenuItem value={\"Sub Account/I.D No.\"}>\n                Sub Account/I.D No.\n              </MenuItem>\n            </Select>\n          </FormControl>\n          <FormControl\n            fullWidth\n            variant=\"outlined\"\n            size=\"small\"\n            sx={{\n              \".MuiFormLabel-root\": {\n                fontSize: \"14px\",\n                background: \"white\",\n                zIndex: 99,\n                padding: \"0 3px\",\n              },\n              \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n              \".MuiFormLabel-root.MuiInputLabel-root.MuiInputLabel-formControl\":\n                {\n                  background: bgSetting,\n                },\n            }}\n          >\n            <InputLabel id=\"order\">Order</InputLabel>\n            <Select\n              labelId=\"order\"\n              value={state.order}\n              label=\"Sort\"\n              name=\"order\"\n              onChange={handleInputChange}\n              sx={{\n                height: \"27px\",\n                fontSize: \"14px\",\n              }}\n            >\n              <MenuItem value={\"asc\"}>Ascending</MenuItem>\n              <MenuItem value={\"desc\"}>Descending</MenuItem>\n            </Select>\n          </FormControl>\n        </Box>\n      </Box>\n      {modalChartAccount}\n      {ModalClientIDs}\n    </div>\n  );\n}\nexport default function ScheduleAccount() {\n  const { myAxios, user } = useContext(AuthContext);\n  const [column, setColumn] = useState(columnRender(initialState.subsi));\n  initialState.title = setupTitle(initialState, user?.department as string);\n  async function fetchTable(setData: any, setLoading: any, state: any) {\n    const updateColumn = columnRender(state.subsi);\n    flushSync(() => {\n      setColumn(updateColumn);\n    });\n    const response = await myAxios.post(\n      \"/reports/accounting/schedule-account-report\",\n      state,\n      {\n        headers: {\n          Authorization: `Bearer ${user?.accessToken}`,\n        },\n      }\n    );\n    const jsonData = await response.data;\n    arrangeData({\n      data: jsonData.report,\n      column: updateColumn,\n      beforeArrangeData: (itm) => {\n        const columnNumber = updateColumn\n          .filter((itm: any) => itm.type === \"number\")\n          .map((d: any) => d.datakey);\n\n        columnNumber.forEach((datakey: any) => {\n          if (itm.hasOwnProperty(datakey)) {\n            itm[datakey] = formatNumberWithCommas(\n              Math.abs(parseFloat(itm[datakey].toString().replace(/,/g, \"\")))\n            );\n          }\n        });\n        return itm;\n      },\n      adjustMaxHeight: 520,\n    }).then((newData) => {\n      setData(newData);\n      setLoading(false);\n    });\n  }\n  return (\n    <PrintPreview\n      column={column}\n      initialState={initialState}\n      Setting={(state, dispatch) => (\n        <Setting state={state} dispatch={dispatch} />\n      )}\n      onReportSubmit={fetchTable}\n      scaleDefaultValue={100}\n      drawTable={(data, state) => {\n        return data.map((pages: any, pageNumber: number) => {\n          return (\n            <div className=\"page out-page\" key={pageNumber}>\n              <div className=\"header\" style={{ height: \"50px\" }}></div>\n              <div className=\"content\">\n                <table>\n                  <thead>\n                    {state.title.split(\"\\n\").map((t: string, idx: number) => {\n                      return (\n                        <tr key={idx}>\n                          <th\n                            style={{\n                              fontSize: \"14px\",\n                              fontWeight: \"bold\",\n                              textAlign: \"left\",\n                            }}\n                            colSpan={column.length}\n                          >\n                            {t}\n                          </th>\n                        </tr>\n                      );\n                    })}\n                    <tr style={{ height: \"40px\" }}></tr>\n                    <tr>\n                      {column.map((itm: any, rowIdx: number) => {\n                        return (\n                          <th\n                            onDoubleClick={(e) =>\n                              copiedByHeaderOnDoubleClick(e, itm.datakey, data)\n                            }\n                            style={{\n                              width: itm.width,\n                              fontSize: \"12px\",\n                              fontWeight: \"bold\",\n                              borderBottom: \"1px solid black\",\n                            }}\n                            key={rowIdx}\n                          >\n                            {itm.header}\n                          </th>\n                        );\n                      })}\n                    </tr>\n                  </thead>\n                  <tbody>\n                    <tr style={{ height: \"20px\" }}></tr>\n                    {pages.map((rowItem: any, rowIdx: number) => {\n                      if (rowItem.ArrayHeader) {\n                        return (\n                          <tr key={rowIdx}>\n                            <td\n                              className={`editable not-looking page-${pageNumber}  row-${rowIdx}_col-0`}\n                              colSpan={column.length}\n                              style={{\n                                fontWeight: \"bold\",\n                                fontSize: \"11px\",\n                              }}\n                            >\n                              {rowItem.mShort}\n                            </td>\n                          </tr>\n                        );\n                      }\n\n                      return (\n                        <React.Fragment key={rowIdx}>\n                          <tr key={rowIdx}>\n                            {column.map((colItem: any, colIdx: number) => {\n                              if (rowItem.ArrayFooter) {\n                                if (colIdx === 0) {\n                                  return null;\n                                }\n\n                                if (colIdx === 1) {\n                                  return (\n                                    <td\n                                      className={`editable not-looking  page-${pageNumber} row-${rowIdx}_col-${colIdx}`}\n                                      key={colIdx}\n                                      colSpan={2}\n                                      style={{\n                                        borderTop: \"1px dashed #cbd5e1\",\n                                        width: colItem.width,\n                                        fontSize: \"11px\",\n                                        fontWeight: \"bold\",\n                                        textAlign: \"right\",\n                                      }}\n                                    >\n                                      TOTAL:{\" \"}\n                                    </td>\n                                  );\n                                }\n\n                                return (\n                                  <td\n                                    key={colIdx}\n                                    className={`editable not-looking  page-${pageNumber} row-${rowIdx}_col-${colIdx}`}\n                                    style={{\n                                      textAlign: \"right\",\n                                      borderTop: \"1px dashed #cbd5e1\",\n                                      width: colItem.width,\n                                      fontSize: \"11px\",\n                                      fontWeight: \"500\",\n                                    }}\n                                  >\n                                    {rowItem[colItem.datakey]}\n                                  </td>\n                                );\n                              }\n\n                              return (\n                                <td\n                                  onClick={columnSelection}\n                                  className={`editable not-looking  page-${pageNumber} row-${rowIdx}_col-${colIdx}`}\n                                  key={colIdx}\n                                  style={{\n                                    fontSize: \"11px\",\n                                    fontWeight: \"500\",\n                                    paddingLeft:\n                                      colItem.datakey === \"GL_Acct\" ||\n                                      colItem.datakey === \"ID_No\"\n                                        ? \"50px\"\n                                        : \"10px\",\n                                    width: `${colItem.width} !important`,\n                                    textAlign:\n                                      colItem.datakey === \"Balance\"\n                                        ? \"right\"\n                                        : \"left\",\n                                  }}\n                                >\n                                  {rowItem[colItem.datakey]}\n                                </td>\n                              );\n                            })}\n                          </tr>\n                          <tr style={{ height: \"7px\" }}></tr>\n                        </React.Fragment>\n                      );\n                    })}\n                  </tbody>\n                  <tfoot>\n                    {pageNumber === data.length - 1 && (\n                      <React.Fragment>\n                        <tr style={{ height: \"10px\" }}></tr>\n                        <tr>\n                          <td\n                            style={{\n                              fontWeight: \"bold\",\n                              fontSize: \"11px\",\n                            }}\n                          >\n                            No. of Records:{\" \"}\n                            {(data.flat().length - 1).toLocaleString(\"en-US\")}\n                          </td>\n                          <td\n                            style={{\n                              textAlign: \"right\",\n                              fontWeight: \"bold\",\n                              fontSize: \"11px\",\n                            }}\n                          >\n                            TOTAL:{\" \"}\n                          </td>\n                          {column.map((itm: any, idx: number) => {\n                            if (!itm.total) {\n                              if (idx < 3) {\n                                return (\n                                  <React.Fragment key={idx}></React.Fragment>\n                                );\n                              }\n                              return <td key={idx}></td>;\n                            }\n                            let flattenedArray = data.flat();\n\n                            const filter = flattenedArray.filter((d: any) => {\n                              // if (\n                              //   !isNaN(parseFloat(d.Balance)) &&\n                              //   d.ArrayFooter\n                              // ) {\n                              //   return d.Balance;\n                              // }\n                              return (\n                                !isNaN(parseFloat(d.Balance)) && d.ArrayFooter\n                              );\n                            });\n\n                            const total = filter.reduce((d: any, val: any) => {\n                              return (\n                                d +\n                                parseFloat(\n                                  val.Balance.toString().replace(/,/g, \"\")\n                                )\n                              );\n                            }, 0);\n\n                            return (\n                              <td\n                                key={idx}\n                                style={{\n                                  fontWeight: \"bold\",\n                                  textAlign: \"right\",\n                                  fontSize: \"11px\",\n                                }}\n                              >\n                                {isNaN(total)\n                                  ? \"0\"\n                                  : formatNumberWithCommas(total)}\n                              </td>\n                            );\n                          })}\n                        </tr>\n                      </React.Fragment>\n                    )}\n                  </tfoot>\n                </table>\n              </div>\n              <div\n                className=\"footer\"\n                style={{\n                  height: \"50px\",\n                  display: \"flex\",\n                  justifyContent: \"space-between\",\n                }}\n              >\n                <p style={{ fontSize: \"10px\", fontWeight: \"bold\" }}>\n                  {format(new Date(), \"dd/MM/yyyy\")}\n                </p>\n                <p style={{ fontSize: \"10px\", fontWeight: \"bold\" }}>\n                  Page {pageNumber + 1} of {data.length}\n                </p>\n              </div>\n            </div>\n          );\n        });\n      }}\n      pageHeight={\"14in\"}\n      pageWidth={\"8.5in\"}\n    />\n  );\n}\nfunction setupTitle(state: any, department: string) {\n  return `${\n    department === \"UMIS\"\n      ? \"UPWARD MANAGEMENT INSURANCE SERVICES\"\n      : \"UPWARD CONSULTANCY SERVICES AND MANAGEMENT INC.\"\n  }\\nSchedule of ${\n    state.format === 0\n      ? \"Accounts \"\n      : `${state.account_title} (${state.account}) `\n  }\\nCut off Date: ${DateToStringFormat(state)}\n`;\n}\n\nfunction DateToStringFormat(state: any) {\n  let dateString = \"\";\n  if (state.dateFormat === \"Daily\") {\n    dateString = state.dateFrom.toLocaleDateString(\"en-US\", {\n      year: \"numeric\",\n      month: \"long\",\n      day: \"numeric\",\n    });\n  } else if (state.dateFormat === \"Monthly\") {\n    dateString = state.dateFrom.toLocaleDateString(\"en-US\", {\n      year: \"numeric\",\n      month: \"long\",\n    });\n  } else if (state.dateFormat === \"Yearly\") {\n    const year = new Date(state.dateFrom).getFullYear();\n    const { startYearFormatted, endYearFormatted } = formatYearRange(\n      year,\n      parseInt(state.yearCount)\n    );\n    dateString = `${startYearFormatted}-${endYearFormatted}`;\n  } else {\n    const dateFrom = state.dateFrom.toLocaleDateString(\"en-US\", {\n      year: \"numeric\",\n      month: \"long\",\n      day: \"numeric\",\n    });\n    const dateTo = state.dateTo.toLocaleDateString(\"en-US\", {\n      year: \"numeric\",\n      month: \"long\",\n      day: \"numeric\",\n    });\n    dateString = `${dateFrom} to ${dateTo}`;\n  }\n  return dateString;\n}\n\nfunction formatYearRange(startYear: number, yearCount: number) {\n  const startDate = new Date(startYear, 0, 1); // Month is 0-based, so 0 is January\n  const endDate = new Date(startYear + yearCount, 11, 31); // Last day of the last year\n\n  const startYearFormatted = startDate.getFullYear();\n  const endYearFormatted = endDate.getFullYear();\n\n  if (endYearFormatted < startYearFormatted) {\n    return {\n      startYearFormatted: endYearFormatted,\n      endYearFormatted: startYearFormatted,\n    };\n  } else {\n    return {\n      startYearFormatted,\n      endYearFormatted,\n    };\n  }\n}\n","import { useContext, useState } from \"react\";\nimport { useQuery } from \"react-query\";\nimport { AuthContext, User } from \"../components/AuthContext\";\nimport {\n  GridRowSelectionModel,\n  GridCellParams,\n  GridTreeNode,\n} from \"@mui/x-data-grid\";\nimport ModalWithTable from \"../components/ModalWithTable\";\nimport { flushSync } from \"react-dom\";\nimport { AxiosResponse, AxiosInstance } from \"axios\";\nimport { GridRowParams } from \"@mui/x-data-grid\";\ninterface QueryModalTableParamsType {\n  link?: {\n    url: string;\n    queryUrlName: string;\n  };\n  uniqueId: string;\n  queryKey: string;\n  responseDataKey: string;\n  columns: Array<any>;\n  onSelected?: (selectedRowData: Array<any>, data: Array<any>) => void;\n  onRemoveSelected?: (data: Array<any>) => void;\n  onSuccess?: (data: any) => void;\n  searchRef?: React.RefObject<HTMLInputElement>;\n  onCellKeyDown?: any;\n  onCloseFunction?: (search: any) => void;\n  CustomizeAxios?: (\n    myAxios: AxiosInstance,\n    user: User | null,\n    link: QueryModalTableParamsType[\"link\"],\n    search?: string\n  ) => Promise<AxiosResponse<any, any>>;\n  isRowSelectable?: ((params: GridRowParams<any>) => boolean) | undefined;\n  getCellClassName?:\n    | ((params: GridCellParams<any, any, any, GridTreeNode>) => string)\n    | undefined;\n}\n\nasync function CustomizeAxiosFunc(\n  myAxios: AxiosInstance,\n  user: User | null,\n  link: QueryModalTableParamsType[\"link\"],\n  search: string = \"\"\n) {\n  return myAxios.get(`${link?.url}?${link?.queryUrlName}=${search}`, {\n    headers: {\n      Authorization: `Bearer ${user?.accessToken}`,\n    },\n  });\n}\n\nconst useQueryModalTable = ({\n  link,\n  uniqueId,\n  queryKey,\n  responseDataKey,\n  columns,\n  onSelected = () => {},\n  onRemoveSelected = () => {},\n  onSuccess = () => {},\n  searchRef,\n  onCellKeyDown,\n  onCloseFunction = () => {},\n  CustomizeAxios = CustomizeAxiosFunc,\n  isRowSelectable,\n  getCellClassName,\n}: QueryModalTableParamsType) => {\n  const { myAxios, user } = useContext(AuthContext);\n  const [show, setShowModal] = useState(false);\n  const [rows, setRows] = useState<GridRowSelectionModel>([]);\n  async function customizeAxiostool(search: string = \"\") {\n    return await CustomizeAxios(myAxios, user, link, search);\n  }\n  const { isLoading, refetch } = useQuery({\n    queryKey: queryKey,\n    queryFn: async () => await customizeAxiostool(),\n    onSuccess: (res) => {\n      const response = res as any;\n      setRows(response.data[responseDataKey]);\n      onSuccess(response);\n    },\n    refetchOnWindowFocus: false,\n  });\n\n  const openModal = (search: string = \"\") => {\n    flushSync(() => {\n      setShowModal(true);\n    });\n    if (searchRef?.current) {\n      searchRef.current.value = search;\n      customizeAxiostool(search).then((res: any) => {\n        if (!res?.data.success) {\n          return alert(`Error : ${res?.data.message}`);\n        }\n        const response = res as any;\n        setRows(response.data[responseDataKey]);\n        if (searchRef?.current) searchRef.current.focus();\n      });\n    }\n  };\n\n  const closeModal = () => {\n    setShowModal(false);\n    if (onCloseFunction) {\n      onCloseFunction(searchRef?.current?.value);\n    }\n  };\n\n  const ModalComponent = (\n    <ModalWithTable\n      getCellClassName={getCellClassName}\n      searchRef={searchRef}\n      showModal={show}\n      onCloseModal={() => {\n        setShowModal(false);\n        if (onCloseFunction) {\n          onCloseFunction(searchRef?.current?.value);\n        }\n      }}\n      onClickCloseIcon={() => {\n        setShowModal(false);\n        if (onCloseFunction) {\n          onCloseFunction(searchRef?.current?.value);\n        }\n      }}\n      searchOnChange={(e) => {\n        // myAxios\n        //   .get(`${link.url}?${link.queryUrlName}=${e.target.value}`, {\n        //     headers: {\n        //       Authorization: `Bearer ${user?.accessToken}`,\n        //     },\n        //   })\n        //   .then((res: any) => {\n        //     if (!res?.data.success) {\n        //       return alert(`Error : ${res?.data.message}`);\n        //     }\n        //     const response = res as any;\n        //     setRows(response.data[responseDataKey]);\n        //   });\n      }}\n      onSearchKeyEnter={(value) => {\n        customizeAxiostool(value).then((res: any) => {\n          if (!res?.data.success) {\n            return alert(`Error : ${res?.data.message}`);\n          }\n          const response = res as any;\n          setRows(response.data[responseDataKey]);\n        });\n      }}\n      onCellKeyDown={onCellKeyDown}\n      height={300}\n      isLoading={isLoading}\n      queryKey={queryKey}\n      columns={columns}\n      onSelectionChange={(rowSelectionModel, data) => {\n        if (rowSelectionModel.length <= 0) {\n          return onRemoveSelected(data);\n        }\n        const selectedIDs = new Set(rowSelectionModel);\n        const selectedRowData = data.filter((row: any) => {\n          return selectedIDs.has(row[uniqueId].toString());\n        });\n        if (selectedRowData.length <= 0) return;\n        onSelected(selectedRowData, data);\n      }}\n      id={uniqueId}\n      rows={rows}\n      setRows={setRows}\n      isRowSelectable={isRowSelectable}\n    />\n  );\n\n  return {\n    show,\n    rows,\n    isLoading,\n    openModal,\n    closeModal,\n    ModalComponent,\n    refetch,\n  };\n};\n\nexport default useQueryModalTable;\n","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)([/*#__PURE__*/(0, _jsxRuntime.jsx)(\"circle\", {\n  cx: \"10\",\n  cy: \"8\",\n  r: \"4\"\n}, \"0\"), /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M10.35 14.01C7.62 13.91 2 15.27 2 18v2h9.54c-2.47-2.76-1.23-5.89-1.19-5.99zm9.08 4.01c.36-.59.57-1.28.57-2.02 0-2.21-1.79-4-4-4s-4 1.79-4 4 1.79 4 4 4c.74 0 1.43-.22 2.02-.57L20.59 22 22 20.59l-2.57-2.57zM16 18c-1.1 0-2-.9-2-2s.9-2 2-2 2 .9 2 2-.9 2-2 2z\"\n}, \"1\")], 'PersonSearch');\nexports.default = _default;","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}"],"names":["CustomDatePicker","_ref","label","name","onChange","value","onKeyDown","inputRef","datePickerRef","fullWidth","textField","_ref$minWidth","minWidth","rest","_objectWithoutProperties","_excluded","_jsx","LocalizationProvider","dateAdapter","AdapterDateFns","children","DatePicker","_objectSpread","floatingLabelStyle","color","ref","slotProps","size","InputLabelProps","sx","fieldset","borderColor","fontSize","top","style","position","left","transform","width","bgcolor","boxShadow","p","heigth","ModalWithTable","height","isLoading","columns","queryKey","onSelectionChange","rows","setRows","id","onCloseModal","showModal","onClickCloseIcon","searchOnChange","_ref$title","title","searchRef","_ref$onSearchKeyEnter","onCellKeyDown","onSearchKeyEnter","isRowSelectable","getCellClassName","mainId","generateRandomClass","Modal","open","onClose","_jsxs","Box","Typography","variant","component","mb","TextField","marginBottom","InputProps","e","_searchRef$current","code","preventDefault","current","keyBoardSelectionTable","className","concat","Table","isSingleSelection","isRowFreeze","dataSelection","selection","data","table_id","right","IconButton","onClick","CloseIcon","Math","floor","random","el","_rows$","document","querySelectorAll","classList","add","firstRowParent","querySelector","firstInput","focus","event","MouseEvent","bubbles","cancelable","view","window","dispatchEvent","addEventListener","es","key","remove","keyBoardUpDown","forEach","idx","_rows$idx","_rows","_rows$idx2","_rows2","length","defaultArrangeDataCore","column","beforeArrangeData","adjustMaxHeight","_ref$fontSize","_ref$summaryHeight","summaryHeight","newData","trHeight","temp","maxHeight","getBoundingClientRect","itm","contentElment","tempTable","createElement","tempRow","insertRow","summaryReport","col","tempCell","insertCell","visibility","content","columnWidth","textContent","appendChild","getTableCellHeight","datakey","removeChild","push","arrangeData","_x","_ref3","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_ref2","cb","_ref2$fontSize","wrap","_context","prev","next","undefined","abrupt","stop","apply","arguments","TableContext","createContext","rowSelectionModel","footerChildren","footerPaginationPosition","showFooterSelectedCount","forwardRef","_ref$CustomFooterComp","CustomFooterComponent","DefaultooterComponent","_ref$checkboxSelectio","checkboxSelection","_ref$footerChildren","_ref$footerPagination","_ref$showFooterSelect","_useState","useState","_useState2","_slicedToArray","selectedRows","setSelectedRows","useImperativeHandle","removeSelection","getSelectedRows","filter","item","includes","freezeArray","Provider","DataGrid","slots","loadingOverlay","LinearProgress","footer","initialState","pagination","paginationModel","pageSize","loading","getRowId","row","hide","showCellVerticalBorder","showColumnVerticalBorder","rowHeight","columnHeaderHeight","pageSizeOptions","fill","background","padding","display","fontWeight","onRowSelectionModelChange","selectionSet","Set","s","has","__","rowNode","_toConsumableArray","disableVirtualization","Pagination","page","onPageChange","apiRef","useGridApiContext","pageCount","useGridSelector","gridPageCountSelector","MuiPagination","count","newPage","CustomPagination","props","GridPagination","ActionsComponent","_useContext","useContext","columnGap","justifyContent","px","alignItems","flexDirection","flex","format","account","account_title","dateFormat","dateFrom","Date","dateTo","yearCount","getFullYear","toString","slice","subsi","subsi_options","sort","order","subAcctColumn","header","total","type","idColumn","insuranceColumn","columnRender","ShowDateSelection","state","dispatch","handleInputChange","user","dateFromRef","useRef","dateToRef","rowGap","React","field","setupTitle","department","timeout","setTimeout","_dateFromRef$current","_dateFromRef$current$","click","clearTimeout","_dateToRef$current","_dateToRef$current$qu","_dateFromRef$current2","_dateFromRef$current3","views","Setting","_queryFn","_queryFn2","chartAccountSearchInput","clientSearchInput","AuthContext","myAxios","_useQuery","useQuery","queryFn","get","headers","Authorization","accessToken","sent","dataAccounts","isLoadingAccounts","_useQuery2","_callee2","_context2","dataSubAccounts","isLoadingSubAccounts","_useQueryModalTable","useQueryModalTable","link","url","queryUrlName","headerName","uniqueId","responseDataKey","onSelected","selectedRowData","IDNo","closeCliendIDsModal","ModalClientIDs","ModalComponent","openCliendIDsModal","openModal","isLoadingClientIdsModal","closeModal","_useQueryModalTable2","Acct_Code","Acct_Title","closeChartAccountModal","modalChartAccount","openChartAccountModal","isLoadingChartAccountModal","_e$target","target","_defineProperty","multiline","theme","gap","margin","FormControl","zIndex","bgSetting","InputLabel","Select","labelId","MenuItem","LoadingButton","disabled","htmlFor","OutlinedInput","endAdornment","InputAdornment","edge","PersonSearchIcon","readOnly","gridColumn","sub_account","map","Acronym","accounts","AccountCode","border","breakpoints","down","ScheduleAccount","_fetchTable","_useContext2","setColumn","PrintPreview","_Setting","onReportSubmit","_x2","_x3","_callee3","setData","setLoading","updateColumn","response","jsonData","_context3","flushSync","post","report","columnNumber","d","hasOwnProperty","formatNumberWithCommas","abs","parseFloat","replace","then","scaleDefaultValue","drawTable","pages","pageNumber","split","t","textAlign","colSpan","rowIdx","onDoubleClick","copiedByHeaderOnDoubleClick","borderBottom","rowItem","ArrayHeader","mShort","colItem","colIdx","ArrayFooter","borderTop","columnSelection","paddingLeft","flat","toLocaleString","isNaN","Balance","reduce","val","pageHeight","pageWidth","dateString","toLocaleDateString","year","month","day","_formatYearRange","startYear","startDate","endDate","startYearFormatted","endYearFormatted","formatYearRange","parseInt","DateToStringFormat","CustomizeAxiosFunc","_CustomizeAxiosFunc","search","_args","_customizeAxiostool","_ref$onSelected","_ref$onRemoveSelected","onRemoveSelected","_ref$onSuccess","onSuccess","_ref$onCloseFunction","onCloseFunction","_ref$CustomizeAxios","CustomizeAxios","show","setShowModal","_useState3","_useState4","customizeAxiostool","_args2","res","refetchOnWindowFocus","refetch","success","alert","message","_searchRef$current2","_searchRef$current3","selectedIDs","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","cx","cy","r","source","excluded","i","Object","getOwnPropertySymbols","sourceSymbolKeys","indexOf","prototype","propertyIsEnumerable","call"],"sourceRoot":""}