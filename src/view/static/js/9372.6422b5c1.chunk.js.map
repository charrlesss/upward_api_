{"version":3,"file":"static/js/9372.6422b5c1.chunk.js","mappings":"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","sources":["components/Helmet.tsx","components/ModalWithTable.tsx","components/Table.tsx","feautures/Admin/Reference/BankAccount.tsx","hooks/useQueryModalTable.tsx","lib/confirmationAlert.ts","../node_modules/@mui/icons-material/Add.js","../node_modules/@mui/icons-material/Delete.js","../node_modules/@mui/icons-material/PersonSearch.js","../node_modules/@mui/icons-material/Save.js","../node_modules/@mui/icons-material/SwitchAccount.js","../node_modules/@mui/material/colors/pink.js"],"sourcesContent":["\r\nimport { Helmet } from \"react-helmet\";\r\n\r\nconst PageHelmet = ({ title = '' }: { title: string }) => {\r\n    const imgUrl = process.env.REACT_APP_IMAGE_URL;\r\n    return (\r\n        <Helmet>\r\n            <title>{title}</title>\r\n            <link rel=\"icon\" type=\"image/png\" href={`${imgUrl}/logo.png`} />\r\n        </Helmet>\r\n    );\r\n};\r\n\r\nexport default PageHelmet;","import React from \"react\";\nimport {\n  GridRowSelectionModel,\n  GridRowParams,\n  GridCellParams,\n  GridTreeNode,\n} from \"@mui/x-data-grid\";\nimport { Modal, Box, Typography, IconButton, TextField } from \"@mui/material\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport Table from \"./Table\";\n\ninterface ModalWithTableParams {\n  height: number;\n  isLoading: boolean;\n  queryKey: string;\n  columns: Array<any>;\n  onSelectionChange: (rowSelectionModel: Array<any>, data: Array<any>) => void;\n  setRows: React.Dispatch<React.SetStateAction<GridRowSelectionModel>>;\n  rows: GridRowSelectionModel;\n  id: string;\n  onCloseModal: () => void;\n  onClickCloseIcon: () => void;\n  showModal: boolean;\n  searchOnChange:\n  | React.ChangeEventHandler<HTMLInputElement | HTMLTextAreaElement>\n  | undefined;\n  title?: string;\n  searchRef?: React.RefObject<HTMLInputElement>;\n  onCellKeyDown?: any;\n  onSearchKeyEnter?: (search: string) => void;\n  isRowSelectable?: ((params: GridRowParams<any>) => boolean) | undefined;\n  getCellClassName?:\n  | ((params: GridCellParams<any, any, any, GridTreeNode>) => string)\n  | undefined;\n}\n\nconst style = {\n  position: \"absolute\" as \"absolute\",\n  top: \"50%\",\n  left: \"50%\",\n  transform: \"translate(-50%, -50%)\",\n  width: \"80%\",\n  bgcolor: \"background.paper\",\n  boxShadow: 24,\n  p: 4,\n  heigth: \"auto\",\n};\n\nexport default function ModalWithTable({\n  height,\n  isLoading,\n  queryKey,\n  columns,\n  onSelectionChange,\n  setRows,\n  rows,\n  id,\n  onCloseModal,\n  showModal,\n  onClickCloseIcon,\n  searchOnChange,\n  title = \"\",\n  searchRef,\n  onCellKeyDown,\n  onSearchKeyEnter = () => { },\n  isRowSelectable,\n  getCellClassName,\n}: ModalWithTableParams) {\n  const mainId = generateRandomClass();\n\n  return (\n    <Modal\n      open={showModal}\n      onClose={onCloseModal}\n      aria-labelledby=\"modal-modal-title\"\n      aria-describedby=\"modal-modal-description\"\n    >\n      <Box sx={style}>\n        <Typography id=\"modal-modal-title\" variant=\"h6\" component=\"h2\" mb={2}>\n          {title}\n        </Typography>\n        <TextField\n          size=\"small\"\n          label=\"Search\"\n          sx={{ marginBottom: \"10px\" }}\n          fullWidth\n          onChange={searchOnChange}\n          InputProps={{\n            inputRef: searchRef,\n          }}\n          onKeyDown={(e) => {\n            if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n              e.preventDefault();\n              onSearchKeyEnter(searchRef?.current?.value as string);\n            }\n            keyBoardSelectionTable(\n              e,\n              mainId,\n              searchRef?.current as HTMLInputElement\n            );\n          }}\n        />\n        <div\n          className={`${mainId} main-table-selection-container`}\n          style={{ position: \"relative\", height: `${height + 20}px` }}\n        >\n          <Table\n            isSingleSelection={true}\n            isRowFreeze={false}\n            columns={columns}\n            isLoading={isLoading}\n            dataSelection={(selection, data, code) => {\n              onSelectionChange(selection, data);\n            }}\n            table_id={id}\n            rows={rows}\n            isRowSelectable={isRowSelectable}\n            getCellClassName={getCellClassName}\n          />\n        </div>\n\n        <div style={{ position: \"absolute\", top: \"10px\", right: \"10px\" }}>\n          <IconButton\n            aria-label=\"search-client\"\n            color=\"secondary\"\n            onClick={onClickCloseIcon}\n          >\n            <CloseIcon />\n          </IconButton>\n        </div>\n      </Box>\n    </Modal>\n  );\n}\n\nexport function generateRandomClass() {\n  const randomNumber = Math.floor(Math.random() * 10000);\n  const randomClass = \"main-\" + randomNumber;\n  return randomClass;\n}\n\nfunction keyBoardUpDown(className: string, el: HTMLElement) {\n  const firstRowParent = document.querySelector(\n    `.${className} .MuiDataGrid-row`\n  );\n  const firstInput = firstRowParent?.querySelector(\"input\");\n  firstInput?.focus();\n  const event = new MouseEvent(\"mouseenter\", {\n    bubbles: true,\n    cancelable: true,\n    view: window,\n  });\n  firstRowParent?.dispatchEvent(event);\n  firstInput?.addEventListener(\"keydown\", (es: any) => {\n    if (es.key === \"ArrowUp\") {\n      es.preventDefault();\n      el.focus();\n    }\n    if (es.key === \"ArrowUp\") {\n      firstRowParent?.classList.remove(\"hover-keyboard\");\n    }\n  });\n}\n\nexport function keyBoardSelectionTable(\n  e: React.KeyboardEvent<HTMLDivElement>,\n  className: string,\n  el: HTMLElement\n) {\n  const mainId = className;\n  if (e.code === \"ArrowDown\") {\n    const rows = document.querySelectorAll(`.${mainId} .MuiDataGrid-row`);\n    e.preventDefault();\n    rows[0]?.classList.add(\"hover-keyboard\");\n    keyBoardUpDown(className, el);\n    rows.forEach((el, idx) => {\n      el.addEventListener(\"keydown\", (es: any) => {\n        if (es.key === \"ArrowUp\") {\n          if (idx <= 0) {\n            return;\n          }\n\n          es.preventDefault();\n          rows[idx]?.classList.remove(\"hover-keyboard\");\n          rows[idx - 1]?.classList.add(\"hover-keyboard\");\n          return;\n        }\n        if (es.key === \"ArrowDown\") {\n          es.preventDefault();\n          if (idx >= rows.length - 1) {\n            return;\n          }\n          rows[idx]?.classList.remove(\"hover-keyboard\");\n          rows[idx + 1]?.classList.add(\"hover-keyboard\");\n        }\n      });\n    });\n  }\n}\n","import {\n  useState,\n  useContext,\n  createContext,\n  ReactElement,\n  forwardRef,\n  useImperativeHandle,\n} from \"react\";\nimport { Box, LinearProgress } from \"@mui/material\";\nimport {\n  DataGrid,\n  GridSlotsComponentsProps,\n  gridPageCountSelector,\n  GridPagination,\n  useGridApiContext,\n  useGridSelector,\n  GridRowSelectionModel,\n  GridColDef,\n  GridRowParams,\n  GridCellParams,\n  GridTreeNode,\n} from \"@mui/x-data-grid\";\nimport { TablePaginationProps } from \"@mui/material/TablePagination\";\nimport MuiPagination from \"@mui/material/Pagination\";\n\ninterface TableProps {\n  isLoading: boolean;\n  columns: Array<any>;\n  rows: Array<any>;\n  table_id: string;\n  isSingleSelection: boolean;\n  isRowFreeze: boolean;\n  dataSelection?: (selection: any, data: any, code: string | null) => void;\n  CustomFooterComponent?: any;\n  isRowSelectable?: ((params: GridRowParams<any>) => boolean) | undefined;\n  getCellClassName?:\n    | ((params: GridCellParams<any, any, any, GridTreeNode>) => string)\n    | undefined;\n  footerChildren?: (\n    rowSelectionModel: GridRowSelectionModel,\n    rows: Array<any>\n  ) => ReactElement;\n  footerPaginationPosition?: string;\n  showFooterSelectedCount?: boolean;\n  checkboxSelection?: boolean | undefined;\n}\n\nconst TableContext = createContext<{\n  rowSelectionModel: GridRowSelectionModel;\n  rows: Array<any>;\n  footerPaginationPosition?: string;\n  showFooterSelectedCount?: boolean;\n  footerChildren: (\n    rowSelectionModel: GridRowSelectionModel,\n    rows: Array<any>\n  ) => ReactElement;\n}>({\n  rows: [],\n  rowSelectionModel: [],\n  footerChildren: () => <div></div>,\n  footerPaginationPosition: \"right-left\",\n  showFooterSelectedCount: true,\n});\nconst Table = forwardRef(\n  (\n    {\n      isLoading,\n      columns,\n      rows,\n      table_id,\n      isSingleSelection,\n      isRowFreeze,\n      dataSelection,\n      CustomFooterComponent = DefaultooterComponent,\n      isRowSelectable,\n      getCellClassName,\n      checkboxSelection = true,\n      footerChildren = (\n        rowSelectionModel: GridRowSelectionModel,\n        rows: Array<any>\n      ) => <div></div>,\n      footerPaginationPosition = \"right-left\",\n      showFooterSelectedCount = true,\n    }: TableProps,\n    ref\n  ) => {\n    const [selectedRows, setSelectedRows] = useState<any>([]);\n\n    useImperativeHandle(ref, () => ({\n      removeSelection: () => {\n        setSelectedRows([]);\n      },\n      getSelectedRows: () => {\n        return rows.filter((item: any) =>\n          selectedRows?.includes(item[table_id])\n        );\n      },\n      setSelectedRows: (data: Array<any>) => {\n        setSelectedRows(data);\n      },\n    }));\n\n    function onSelectionChange(selection: any, data: any, code: string | null) {\n      if (dataSelection) {\n        dataSelection(selection, data, code);\n      }\n    }\n    let freezeArray: Array<any> = [];\n\n    return (\n      <TableContext.Provider\n        value={{\n          showFooterSelectedCount,\n          footerPaginationPosition,\n          rowSelectionModel: selectedRows,\n          rows,\n          footerChildren,\n        }}\n      >\n        <DataGrid\n          slots={{\n            loadingOverlay: LinearProgress,\n            footer: CustomFooterComponent,\n          }}\n          initialState={{\n            pagination: { paginationModel: { pageSize: 100 } },\n          }}\n          loading={isLoading}\n          getRowId={(row) => row[table_id]}\n          columns={columns.filter((col: any) => !col.hide) as GridColDef<any>[]}\n          rows={rows}\n          showCellVerticalBorder={true}\n          showColumnVerticalBorder={true}\n          checkboxSelection={checkboxSelection}\n          rowSelectionModel={selectedRows}\n          rowHeight={25}\n          columnHeaderHeight={35}\n          pageSizeOptions={[10, 20, 35, 50, 75, 100]}\n          sx={{\n            \"& .cash\": {\n              color: \"#ec4899\",\n            },\n            \"& .check\": {\n              color: \"#0891b2\",\n            },\n            \"& .approved\": {\n              color: \"green\",\n            },\n            \"& .pending\": {\n              color: \"orange\",\n            },\n            \"& .disapproved\": {\n              color: \"red\",\n            },\n            \"& .normal\": {\n              color: \"red\",\n            },\n            \"& .MuiDataGrid-row.Mui-selected:hover\": {\n              color: \"black\",\n              \"& .MuiSvgIcon-root \": {\n                fill: \"#3b82f6\",\n              },\n            },\n            \"& .hover-keyboard\": {\n              background: \"#2563eb\",\n              color: \"white\",\n              \"& .MuiSvgIcon-root \": {\n                fill: \"white\",\n              },\n            },\n            \"& .MuiDataGrid-row:hover\": {\n              background: \"#2563eb\",\n              color: \"white\",\n              \"& .MuiSvgIcon-root \": {\n                fill: \"white\",\n              },\n            },\n            \"& .MuiDataGrid-row.hover\": {\n              background: \"#2563eb\",\n              color: \"white\",\n              \"& .MuiSvgIcon-root \": {\n                fill: \"white\",\n              },\n            },\n            \"& .MuiTablePagination-root p \": {\n              padding: \"0 !important\",\n            },\n\n            ...{\n              \"& .MuiDataGrid-columnHeaders\": {\n                background: \"#64748b\",\n                color: \"white\",\n                fontSize: \"14px\",\n                // borderBottomColor: \"#38bdf8\",\n              },\n              \"& .MuiDataGrid-columnHeaderCheckbox .MuiDataGrid-columnHeaderTitleContainer .MuiSvgIcon-root \":\n                {\n                  display: isSingleSelection || isRowFreeze ? \"none\" : \"block\",\n                  fill: \"white\",\n                },\n              \"& .MuiDataGrid-columnHeaderCheckbox .MuiDataGrid-columnHeaderTitleContainer input \":\n                {\n                  display: isSingleSelection || isRowFreeze ? \"none\" : \"block\",\n                },\n            },\n            ...{\n              fontSize: 13,\n              fontWeight: 500,\n              \"& .MuiDataGrid-checkboxInput\": {\n                height: \"27px\",\n                width: \"27px\",\n              },\n              \"& .MuiDataGrid-checkboxInput svg\": {\n                height: \"20px\",\n                width: \"20px\",\n              },\n            },\n          }}\n          // onRowDoubleClick={(e, r) => {\n          //   console.log(e, r);\n          // }}\n\n          onRowSelectionModelChange={(selection) => {\n            if (isRowFreeze) {\n              if (selection.length <= 0) return;\n              freezeArray = selection;\n              if (selectedRows.includes(freezeArray[freezeArray.length - 1]))\n                return;\n\n              setSelectedRows(selection);\n\n              onSelectionChange([selection[selection.length - 1]], rows, null);\n              return;\n            }\n\n            if (!isRowFreeze && isSingleSelection) {\n              if (selectedRows && selectedRows?.length > 0) {\n                const selectionSet = new Set(selectedRows);\n                setSelectedRows(\n                  selection.filter((s: any) => !selectionSet.has(s))\n                );\n              } else {\n                setSelectedRows(selection);\n              }\n            } else {\n              setSelectedRows(selection);\n            }\n\n            onSelectionChange([selection[selection.length - 1]], rows, null);\n          }}\n          onCellKeyDown={(__: any, key: any) => {\n            const keyFinding = [\"NumpadEnter\", \"Enter\", \"Delete\", \"Backspace\"];\n            if (!keyFinding.includes(key.code)) {\n              return;\n            }\n            key.preventDefault();\n            if (key.code === \"Enter\" || key.code === \"NumpadEnter\") {\n              if (isSingleSelection && !isRowFreeze) {\n                return setSelectedRows((data: any) => {\n                  if (data && data.length > 0 && data[0] === __.rowNode.id) {\n                    onSelectionChange([], rows, key.code);\n                    return [];\n                  }\n                  onSelectionChange([__.rowNode.id], rows, key.code);\n                  return [__.rowNode.id];\n                });\n              } else {\n                setSelectedRows((data: any) => {\n                  if (\n                    data &&\n                    !isRowFreeze &&\n                    data.length > 0 &&\n                    data.includes(__.rowNode.id)\n                  ) {\n                    data = data.filter((item: any) => item !== __.rowNode.id);\n                    onSelectionChange([], rows, key.code);\n                    return data;\n                  }\n                  if (\n                    data &&\n                    isRowFreeze &&\n                    data.length > 0 &&\n                    data.includes(__.rowNode.id)\n                  ) {\n                    return data;\n                  }\n                  onSelectionChange([__.rowNode.id], rows, key.code);\n                  return [...data, __.rowNode.id];\n                });\n              }\n              return;\n            }\n            if (key.code === \"Delete\" || key.code === \"Backspace\") {\n              setSelectedRows([__.rowNode.id]);\n              return onSelectionChange([__.rowNode.id], rows, key.code);\n            }\n          }}\n          disableVirtualization\n          isRowSelectable={isRowSelectable}\n          getCellClassName={getCellClassName}\n        />\n      </TableContext.Provider>\n    );\n  }\n);\n\nexport default Table;\nfunction Pagination({\n  page,\n  onPageChange,\n  className,\n}: Pick<TablePaginationProps, \"page\" | \"onPageChange\" | \"className\">) {\n  const apiRef = useGridApiContext();\n  const pageCount = useGridSelector(apiRef, gridPageCountSelector);\n\n  return (\n    <MuiPagination\n      variant=\"outlined\"\n      color=\"primary\"\n      className={className}\n      count={pageCount}\n      page={page + 1}\n      onChange={(event, newPage) => {\n        onPageChange(event as any, newPage - 1);\n      }}\n    />\n  );\n}\n\nfunction CustomPagination(props: any) {\n  return <GridPagination ActionsComponent={Pagination} {...props} />;\n}\nfunction DefaultooterComponent(\n  props: NonNullable<GridSlotsComponentsProps[\"footer\"]>\n) {\n  const {\n    rowSelectionModel,\n    showFooterSelectedCount,\n    footerPaginationPosition,\n    footerChildren,\n    rows,\n  } = useContext(TableContext);\n  return (\n    <Box\n      sx={{\n        columnGap: \"50px\",\n        display: \"flex\",\n        width: \"100%\",\n        justifyContent: \"space-between\",\n        px: 3,\n        alignItems: \"center\",\n        flexDirection:\n          footerPaginationPosition === \"right-left\" ? \"row-reverse\" : \"row\",\n      }}\n    >\n      <CustomPagination {...props} />\n      <Box\n        sx={{\n          display: \"flex\",\n          justifyContent:\n            footerPaginationPosition === \"right-left\"\n              ? \"flex-start\"\n              : \"flex-end\",\n          flex: 1,\n          alignItems: \"center\",\n        }}\n      >\n        {showFooterSelectedCount && (\n          <div>Selected:{rowSelectionModel?.length}</div>\n        )}\n        <div>{footerChildren(rowSelectionModel, rows)}</div>\n      </Box>\n    </Box>\n  );\n}\n","import React, { useContext, useState, useRef, useReducer } from \"react\";\n\nimport {\n  Box,\n  TextField,\n  Button,\n  FormControlLabel,\n  Checkbox,\n  IconButton,\n  FormControl,\n  InputLabel,\n  OutlinedInput,\n  InputAdornment,\n} from \"@mui/material\";\nimport AccountBalanceIcon from \"@mui/icons-material/AccountBalance\";\nimport AddIcon from \"@mui/icons-material/Add\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\nimport SwitchAccountIcon from \"@mui/icons-material/SwitchAccount\";\nimport { GridRowSelectionModel } from \"@mui/x-data-grid\";\nimport { pink } from \"@mui/material/colors\";\nimport { AuthContext } from \"../../../components/AuthContext\";\nimport { useMutation, useQuery, useQueryClient } from \"react-query\";\nimport Swal from \"sweetalert2\";\nimport { wait } from \"../../../lib/wait\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport SaveIcon from \"@mui/icons-material/Save\";\nimport PersonSearchIcon from \"@mui/icons-material/PersonSearch\";\nimport { LoadingButton } from \"@mui/lab\";\nimport useQueryModalTable from \"../../../hooks/useQueryModalTable\";\nimport Table from \"../../../components/Table\";\nimport {\n  codeCondfirmationAlert,\n  saveCondfirmationAlert,\n} from \"../../../lib/confirmationAlert\";\nimport PageHelmet from \"../../../components/Helmet\";\n\nconst initialState = {\n  Account_No: \"\",\n  Account_Name: \"\",\n  Account_Type: \"\",\n  Desc: \"\",\n  Option: 0,\n  Account_ID: \"\",\n  Inactive: false,\n  IDNo: \"\",\n  Account_ID_Name: \"\",\n  Identity: \"\",\n  BankName: \"\",\n  Auto: \"\",\n  mode: \"\",\n  search: \"\",\n};\nexport const reducer = (state: any, action: any) => {\n  switch (action.type) {\n    case \"UPDATE_FIELD\":\n      return {\n        ...state,\n        [action.field]: action.value,\n      };\n    default:\n      return state;\n  }\n};\nexport const bankAccountColumn = [\n  { field: \"Auto\", headerName: \"Auto\", hide: true },\n  { field: \"Account_No\", headerName: \"Account No#\", width: 300 },\n  { field: \"Account_Name\", headerName: \"Account Name\", flex: 1 },\n  { field: \"Account_Type\", headerName: \"Account Type\", flex: 1 },\n  { field: \"Desc\", headerName: \"Bank Name\", flex: 1 },\n  { field: \"Account_ID\", headerName: \"Account ID\", flex: 1 },\n  { field: \"Inactive\", headerName: \"Inactive\", flex: 1 },\n  { field: \"IDNo\", headerName: \"ID No\", flex: 1 },\n  { field: \"Identity\", headerName: \"Identity\", flex: 1 },\n];\nexport const chartColumn = [\n  { field: \"Acct_Code\", headerName: \"Code\", flex: 1 },\n  { field: \"Acct_Title\", headerName: \"Title\", flex: 1 },\n  { field: \"Short\", headerName: \"Short Name\", flex: 1 },\n];\nexport const bannkColumn = [\n  { field: \"Bank_Code\", headerName: \"Code\", flex: 1 },\n  { field: \"Bank\", headerName: \"Bank Name\", flex: 1 },\n];\nexport const clientColumn = [\n  { field: \"entry_client_id\", headerName: \"ID\", width: 130 },\n  { field: \"fullname\", headerName: \"First Name\", flex: 1 },\n  {\n    field: \"entry_type\",\n    headerName: \"ID Type\",\n    width: 150,\n  },\n];\n\nexport default function BankAccount() {\n  const refParent = useRef<HTMLDivElement>(null);\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const { myAxios, user } = useContext(AuthContext);\n  const [rows, setRows] = useState<GridRowSelectionModel>([]);\n  const clientSearchInput = useRef<HTMLInputElement>(null);\n  const queryClient = useQueryClient();\n  const table = useRef<any>(null);\n  const { isLoading, refetch: refetchBankAccountSearch } = useQuery({\n    queryKey: \"bank-account-trans\",\n    queryFn: async () =>\n      await myAxios.get(\n        `/reference/get-bank-account?bankAccountSearch=${state.search}`,\n        {\n          headers: {\n            Authorization: `Bearer ${user?.accessToken}`,\n          },\n        }\n      ),\n    onSuccess: (res) => {\n      setRows((res as any)?.data.bankAccount);\n    },\n  });\n  const { mutate: mutateAdd, isLoading: loadingAdd } = useMutation({\n    mutationKey: \"bank-account-actions\",\n    mutationFn: async (variables: any) => {\n      return await myAxios.post(\"/reference/add-bank-account\", variables, {\n        headers: {\n          Authorization: `Bearer ${user?.accessToken}`,\n        },\n      });\n    },\n    onSuccess,\n  });\n  const { mutate: mutateEdit, isLoading: loadingEdit } = useMutation({\n    mutationKey: \"bank-account-actions\",\n    mutationFn: async (variables: any) => {\n      return await myAxios.post(\"/reference/update-bank-account\", variables, {\n        headers: {\n          Authorization: `Bearer ${user?.accessToken}`,\n        },\n      });\n    },\n    onSuccess,\n  });\n  const { mutate: mutateDelete, isLoading: loadingDelete } = useMutation({\n    mutationKey: \"bank-account-actions\",\n    mutationFn: async (variables: any) => {\n      return await myAxios.post(\"/reference/delete-bank-account\", variables, {\n        headers: {\n          Authorization: `Bearer ${user?.accessToken}`,\n        },\n      });\n    },\n    onSuccess,\n  });\n  const {\n    ModalComponent: ModalBank,\n    openModal: openBank,\n    isLoading: isLoadingBank,\n    closeModal: closeBank,\n  } = useQueryModalTable({\n    link: {\n      url: \"/reference/get-banks\",\n      queryUrlName: \"bankSearch\",\n    },\n    columns: bannkColumn,\n    queryKey: \"get-banks\",\n    uniqueId: \"Bank_Code\",\n    responseDataKey: \"bank\",\n    onSelected: (selectedRowData) => {\n      dispatch({\n        type: \"UPDATE_FIELD\",\n        field: \"BankName\",\n        value: selectedRowData[0].Bank,\n      });\n      dispatch({\n        type: \"UPDATE_FIELD\",\n        field: \"Desc\",\n        value: selectedRowData[0].Bank_Code,\n      });\n      closeBank();\n    },\n    searchRef: clientSearchInput,\n  });\n  const {\n    ModalComponent: ModalChartAccount,\n    openModal: openChartAccount,\n    isLoading: isLoadingChartAccount,\n    closeModal: closeChartAccount,\n  } = useQueryModalTable({\n    link: {\n      url: \"/reference/get-chart-accounts\",\n      queryUrlName: \"chartAccountSearch\",\n    },\n    columns: chartColumn,\n    queryKey: \"get-chart-accounts\",\n    uniqueId: \"Acct_Code\",\n    responseDataKey: \"chartAccount\",\n    onSelected: (selectedRowData, data) => {\n      dispatch({\n        type: \"UPDATE_FIELD\",\n        field: \"Account_ID_Name\",\n        value: selectedRowData[0].Acct_Title,\n      });\n      dispatch({\n        type: \"UPDATE_FIELD\",\n        field: \"Account_ID\",\n        value: selectedRowData[0].Acct_Code,\n      });\n      closeChartAccount();\n    },\n    searchRef: clientSearchInput,\n  });\n  const {\n    ModalComponent: ModalSearchClient,\n    openModal: openSearchClient,\n    isLoading: isLoadingSearchClient,\n    closeModal: closeSearchClient,\n  } = useQueryModalTable({\n    link: {\n      url: \"/reference/search-client\",\n      queryUrlName: \"searchClientInput\",\n    },\n    columns: [\n      { field: \"IDNo\", headerName: \"ID No.\", width: 150 },\n      {\n        field: \"Name\",\n        headerName: \"Name\",\n        flex: 1,\n      },\n      {\n        field: \"ID\",\n        headerName: \"ID\",\n        hide: true,\n      },\n    ],\n    queryKey: \"search-client\",\n    uniqueId: \"ID\",\n    responseDataKey: \"client\",\n    onSelected: (selectedRowData, data) => {\n      dispatch({\n        type: \"UPDATE_FIELD\",\n        field: \"IDNo\",\n        value: selectedRowData[0].IDNo,\n      });\n      dispatch({\n        type: \"UPDATE_FIELD\",\n        field: \"Identity\",\n        value: selectedRowData[0].Name,\n      });\n      closeSearchClient();\n    },\n    searchRef: clientSearchInput,\n  });\n  const handleInputChange = (e: any) => {\n    const { name, value } = e.target;\n    dispatch({ type: \"UPDATE_FIELD\", field: name, value });\n  };\n  function handleOnSave(e: any) {\n    e.preventDefault();\n    if (state.Account_No === \"\") {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: \"Account No is Required Field\",\n        showConfirmButton: false,\n        timer: 1500,\n      });\n    }\n    if (state.Account_Name === \"\") {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: \"Account Name is Required Field\",\n        showConfirmButton: false,\n        timer: 1500,\n      });\n    }\n    if (state.Account_Type === \"\") {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: \"Account Type is Required Field\",\n        showConfirmButton: false,\n        timer: 1500,\n      });\n    }\n    if (state.Account_ID === \"\") {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: \"Account ID is Required Field\",\n        showConfirmButton: false,\n        timer: 1500,\n      });\n    }\n    if (state.BankName === \"\") {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: \"Bank is Required Field\",\n        showConfirmButton: false,\n        timer: 1500,\n      });\n    }\n    if (state.Identity === \"\") {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: \"Identity is Required Field\",\n        showConfirmButton: false,\n        timer: 1500,\n      });\n    }\n    if (state.Account_No.length >= 200) {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: \"Account No is too long\",\n        showConfirmButton: false,\n        timer: 1500,\n      });\n    }\n    if (state.Account_Name >= 200) {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: \"Account Name is too long\",\n        showConfirmButton: false,\n        timer: 1500,\n      });\n    }\n    if (state.Account_Type >= 200) {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: \"Account Type is too long\",\n        showConfirmButton: false,\n        timer: 1500,\n      });\n    }\n    if (state.Account_ID >= 200) {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: \"Account ID is too long\",\n        showConfirmButton: false,\n        timer: 1500,\n      });\n    }\n    if (state.BankName >= 200) {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: \"invalid Bank is too long\",\n        showConfirmButton: false,\n        timer: 1500,\n      });\n    }\n    if (state.Identity >= 200) {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: \"invalid identity is too long\",\n        showConfirmButton: false,\n        timer: 1500,\n      });\n    }\n    if (state.mode === \"edit\") {\n      codeCondfirmationAlert({\n        isUpdate: true,\n        cb: (userCodeConfirmation) => {\n          mutateEdit({ ...state, userCodeConfirmation });\n        },\n      });\n    } else {\n      saveCondfirmationAlert({\n        isConfirm: () => {\n          mutateAdd(state);\n        },\n      });\n    }\n  }\n  function resetModule() {\n    setNewStateValue(dispatch, initialState);\n    table.current?.removeSelection();\n    wait(500).then(() => {\n      refetchBankAccountSearch();\n    });\n  }\n  function onSuccess(res: any) {\n    if (res.data.success) {\n      queryClient.invalidateQueries(\"bank-account-trans\");\n      resetModule();\n      return Swal.fire({\n        position: \"center\",\n        icon: \"success\",\n        title: res.data.message,\n        showConfirmButton: false,\n        timer: 1500,\n      });\n    }\n\n    Swal.fire({\n      position: \"center\",\n      icon: \"error\",\n      title: res.data.message,\n      showConfirmButton: false,\n      timer: 1500,\n    });\n  }\n\n  return (\n    <>\n      <PageHelmet title=\"Bank Account\" />\n      <div\n        style={{\n          display: \"flex\",\n          flexDirection: \"column\",\n          width: \"100%\",\n          height: \"100%\",\n          flex: 1,\n          padding: \"5px\"\n\n        }}\n      >\n        <Box\n          sx={(theme) => ({\n            display: \"flex\",\n            alignItems: \"center\",\n            columnGap: \"20px\",\n            [theme.breakpoints.down(\"sm\")]: {\n              flexDirection: \"column\",\n              alignItems: \"flex-start\",\n              marginBottom: \"15px\",\n            },\n          })}\n        >\n          <div\n            style={{\n              marginTop: \"10px\",\n              marginBottom: \"12px\",\n              width: \"100%\",\n            }}\n          >\n            <TextField\n              label=\"Search\"\n              fullWidth\n              size=\"small\"\n              type=\"text\"\n              name=\"search\"\n              value={state.search}\n              onChange={handleInputChange}\n              InputProps={{\n                style: { height: \"27px\", fontSize: \"14px\" },\n              }}\n              sx={{\n                height: \"27px\",\n                \".MuiFormLabel-root\": { fontSize: \"14px\" },\n                \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n              }}\n              onKeyDown={(e) => {\n                if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n                  e.preventDefault();\n                  return refetchBankAccountSearch();\n                }\n              }}\n            />\n          </div>\n          <div\n            style={{\n              display: \"flex\",\n              alignItems: \"center\",\n              columnGap: \"20px\",\n            }}\n          >\n            <div\n              style={{\n                display: \"flex\",\n                alignItems: \"center\",\n                columnGap: \"5px\",\n              }}\n            >\n              {state.mode === \"\" && (\n                <Button\n                  sx={{\n                    height: \"30px\",\n                    fontSize: \"11px\",\n                  }}\n                  variant=\"contained\"\n                  startIcon={<AddIcon />}\n                  id=\"entry-header-save-button\"\n                  onClick={() => {\n                    handleInputChange({ target: { value: \"add\", name: \"mode\" } });\n                  }}\n                >\n                  New\n                </Button>\n              )}\n              <LoadingButton\n                sx={{\n                  height: \"30px\",\n                  fontSize: \"11px\",\n                }}\n                id=\"save-entry-header\"\n                color=\"primary\"\n                variant=\"contained\"\n                type=\"submit\"\n                onClick={handleOnSave}\n                startIcon={<SaveIcon />}\n                loading={loadingAdd || loadingEdit}\n                disabled={state.mode === \"\"}\n              >\n                Save\n              </LoadingButton>\n              {state.mode !== \"\" && (\n                <Button\n                  sx={{\n                    height: \"30px\",\n                    fontSize: \"11px\",\n                  }}\n                  variant=\"contained\"\n                  startIcon={<CloseIcon />}\n                  color=\"error\"\n                  onClick={() => {\n                    Swal.fire({\n                      title: \"Are you sure?\",\n                      text: \"You won't be able to revert this!\",\n                      icon: \"warning\",\n                      showCancelButton: true,\n                      confirmButtonColor: \"#3085d6\",\n                      cancelButtonColor: \"#d33\",\n                      confirmButtonText: \"Yes, cancel it!\",\n                    }).then((result) => {\n                      if (result.isConfirmed) {\n                        resetModule();\n                      }\n                    });\n                  }}\n                >\n                  Cancel\n                </Button>\n              )}\n\n              <LoadingButton\n                id=\"save-entry-header\"\n                variant=\"contained\"\n                loading={loadingDelete}\n                sx={{\n                  height: \"30px\",\n                  fontSize: \"11px\",\n                  backgroundColor: pink[500],\n                  \"&:hover\": {\n                    backgroundColor: pink[600],\n                  },\n                }}\n                startIcon={<DeleteIcon />}\n                disabled={state.mode !== \"edit\"}\n                onClick={() => {\n                  codeCondfirmationAlert({\n                    isUpdate: false,\n                    cb: (userCodeConfirmation) => {\n                      mutateDelete({\n                        Auto: state.Auto,\n                        userCodeConfirmation,\n                      });\n                    },\n                  });\n                }}\n              >\n                Delete\n              </LoadingButton>\n            </div>\n          </div>\n        </Box>\n        <form\n          onKeyDown={(e) => {\n            if (\n              [\"Account_ID_Name\", \"BankName\", \"IDNo\"].includes(\n                (e.target as any).name\n              )\n            ) {\n              if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n                e.preventDefault();\n              }\n              return;\n            }\n            if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n              e.preventDefault();\n              handleOnSave(e);\n              return;\n            }\n          }}\n        >\n          <Box\n            sx={(theme) => ({\n              width: \"100%\",\n              display: \"flex\",\n              columnGap: \"15px\",\n              [theme.breakpoints.down(\"sm\")]: {\n                flexDirection: \"column\",\n                rowGap: \"10px\",\n              },\n            })}\n          >\n            {!isLoading && (\n              <React.Fragment>\n                <TextField\n                  required\n                  variant=\"outlined\"\n                  size=\"small\"\n                  label=\"Account No\"\n                  name=\"Account_No\"\n                  value={state.Account_No}\n                  onChange={handleInputChange}\n                  InputProps={{\n                    style: { height: \"27px\", fontSize: \"14px\" },\n                  }}\n                  sx={{\n                    flex: 1,\n                    height: \"27px\",\n                    \".MuiFormLabel-root\": { fontSize: \"14px\" },\n                    \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n                  }}\n                  disabled={state.mode === \"\" || state.mode === \"edit\"}\n                />\n                <TextField\n                  required\n                  variant=\"outlined\"\n                  size=\"small\"\n                  label=\"Account Name\"\n                  name=\"Account_Name\"\n                  value={state.Account_Name}\n                  onChange={handleInputChange}\n                  InputProps={{\n                    style: { height: \"27px\", fontSize: \"14px\" },\n                  }}\n                  sx={{\n                    flex: 1,\n                    height: \"27px\",\n                    \".MuiFormLabel-root\": { fontSize: \"14px\" },\n                    \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n                  }}\n                  disabled={state.mode === \"\"}\n                />\n                <TextField\n                  required\n                  variant=\"outlined\"\n                  size=\"small\"\n                  label=\"Account Type\"\n                  name=\"Account_Type\"\n                  value={state.Account_Type}\n                  onChange={handleInputChange}\n                  InputProps={{\n                    style: { height: \"27px\", fontSize: \"14px\" },\n                  }}\n                  sx={{\n                    flex: 1,\n                    height: \"27px\",\n                    \".MuiFormLabel-root\": { fontSize: \"14px\" },\n                    \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n                  }}\n                  disabled={state.mode === \"\"}\n                />\n                <FormControlLabel\n                  sx={{\n                    \".MuiTypography-root\": {\n                      fontSize: \"14px\",\n                    },\n                    minWidth: \"200px\",\n                  }}\n                  disabled={state.mode === \"\"}\n                  control={\n                    <Checkbox\n                      size=\"small\"\n                      name=\"Inactive\"\n                      checked={state.Inactive}\n                      onChange={(e) => {\n                        dispatch({\n                          type: \"UPDATE_FIELD\",\n                          field: \"Inactive\",\n                          value: e.target.checked,\n                        });\n                      }}\n                    />\n                  }\n                  label=\"Mark as Inactive\"\n                />\n              </React.Fragment>\n            )}\n          </Box>\n          <br />\n          <Box\n            sx={(theme) => ({\n              width: \"100%\",\n              display: \"flex\",\n              columnGap: \"15px\",\n              gap: \"20px\",\n              padding: \"15px\",\n              border: \"1px solid #cbd5e1\",\n              borderRadius: \"5px\",\n              position: \"relative\",\n              [theme.breakpoints.down(\"sm\")]: {\n                flexDirection: \"column\",\n                rowGap: \"10px\",\n              },\n            })}\n          >\n            <span\n              style={{\n                position: \"absolute\",\n                top: \"-12px\",\n                left: \"20px\",\n                background: \"white\",\n                padding: \"0 5px\",\n              }}\n            >\n              Deposit Slip\n            </span>\n            {isLoadingBank ? (\n              <LoadingButton loading={isLoadingBank} />\n            ) : (\n              <FormControl\n                disabled={state.mode === \"\"}\n                variant=\"outlined\"\n                size=\"small\"\n                sx={{\n                  flex: 1,\n                  \".MuiFormLabel-root\": {\n                    fontSize: \"14px\",\n                    background: \"white\",\n                    zIndex: 99,\n                    padding: \"0 3px\",\n                  },\n                  \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n                }}\n              >\n                <InputLabel htmlFor=\"Bank\">Bank</InputLabel>\n                <OutlinedInput\n                  disabled={state.mode === \"\"}\n                  sx={{\n                    height: \"27px\",\n                    fontSize: \"14px\",\n                  }}\n                  fullWidth\n                  label=\"Bank\"\n                  name=\"BankName\"\n                  value={state.BankName}\n                  onChange={handleInputChange}\n                  onKeyDown={(e) => {\n                    if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n                      e.preventDefault();\n                      return openBank(state.BankName);\n                    }\n                  }}\n                  id=\"Bank\"\n                  endAdornment={\n                    <InputAdornment position=\"end\">\n                      <IconButton\n                        disabled={state.mode === \"\"}\n                        color=\"secondary\"\n                        edge=\"end\"\n                        onClick={() => {\n                          openBank(state.BankName);\n                        }}\n                      >\n                        <AccountBalanceIcon />\n                      </IconButton>\n                    </InputAdornment>\n                  }\n                />\n              </FormControl>\n            )}\n            {isLoadingChartAccount ? (\n              <LoadingButton loading={isLoadingChartAccount} />\n            ) : (\n              <FormControl\n                disabled={state.mode === \"\"}\n                variant=\"outlined\"\n                size=\"small\"\n                sx={{\n                  flex: 1,\n                  \".MuiFormLabel-root\": {\n                    fontSize: \"14px\",\n                    background: \"white\",\n                    zIndex: 99,\n                    padding: \"0 3px\",\n                  },\n                  \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n                }}\n              >\n                <InputLabel htmlFor=\"account\">Account</InputLabel>\n                <OutlinedInput\n                  disabled={state.mode === \"\"}\n                  sx={{\n                    height: \"27px\",\n                    fontSize: \"14px\",\n                  }}\n                  fullWidth\n                  label=\"Account\"\n                  name=\"Account_ID_Name\"\n                  value={state.Account_ID_Name}\n                  onChange={handleInputChange}\n                  onKeyDown={(e) => {\n                    if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n                      e.preventDefault();\n                      return openChartAccount(state.Account_ID_Name);\n                    }\n                  }}\n                  id=\"account\"\n                  endAdornment={\n                    <InputAdornment position=\"end\">\n                      <IconButton\n                        disabled={state.mode === \"\"}\n                        color=\"secondary\"\n                        edge=\"end\"\n                        onClick={() => {\n                          openChartAccount(state.Account_ID_Name);\n                        }}\n                      >\n                        <SwitchAccountIcon />\n                      </IconButton>\n                    </InputAdornment>\n                  }\n                />\n              </FormControl>\n            )}\n            {isLoadingSearchClient ? (\n              <LoadingButton loading={isLoadingSearchClient} />\n            ) : (\n              <FormControl\n                disabled={state.mode === \"\"}\n                variant=\"outlined\"\n                size=\"small\"\n                sx={{\n                  flex: 1,\n                  \".MuiFormLabel-root\": {\n                    fontSize: \"14px\",\n                    background: \"white\",\n                    zIndex: 99,\n                    padding: \"0 3px\",\n                  },\n                  \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n                }}\n              >\n                <InputLabel htmlFor=\"ID-No\">ID No</InputLabel>\n                <OutlinedInput\n                  disabled={state.mode === \"\"}\n                  sx={{\n                    height: \"27px\",\n                    fontSize: \"14px\",\n                  }}\n                  fullWidth\n                  label=\"ID No\"\n                  name=\"IDNo\"\n                  value={state.IDNo}\n                  onChange={handleInputChange}\n                  onKeyDown={(e) => {\n                    if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n                      e.preventDefault();\n                      return openSearchClient(state.IDNo);\n                    }\n                  }}\n                  id=\"ID-No\"\n                  endAdornment={\n                    <InputAdornment position=\"end\">\n                      <IconButton\n                        disabled={state.mode === \"\"}\n                        aria-label=\"search-client\"\n                        color=\"secondary\"\n                        edge=\"end\"\n                        onClick={() => {\n                          openSearchClient(state.IDNo);\n                        }}\n                      >\n                        <PersonSearchIcon />\n                      </IconButton>\n                    </InputAdornment>\n                  }\n                />\n              </FormControl>\n            )}\n            <TextField\n              disabled={state.mode === \"\"}\n              required\n              variant=\"outlined\"\n              size=\"small\"\n              label=\"Identity\"\n              name=\"Identity\"\n              value={state.Identity}\n              onChange={handleInputChange}\n              InputProps={{\n                readOnly: true,\n                style: { height: \"27px\", fontSize: \"14px\" },\n              }}\n              sx={{\n                flex: 1,\n                height: \"27px\",\n                \".MuiFormLabel-root\": { fontSize: \"14px\" },\n                \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n              }}\n            />\n          </Box>\n        </form>\n        <div\n          ref={refParent}\n          style={{\n            marginTop: \"10px\",\n            width: \"100%\",\n            position: \"relative\",\n            flex: 1,\n          }}\n        >\n          <Box\n            style={{\n              height: `${refParent.current?.getBoundingClientRect().height as number\n                }px`,\n              width: \"100%\",\n              overflowX: \"scroll\",\n              position: \"absolute\",\n            }}\n          >\n            <Table\n              ref={table}\n              isLoading={isLoading || loadingAdd || loadingEdit || loadingDelete}\n              columns={bankAccountColumn}\n              rows={rows}\n              table_id={\"Auto\"}\n              isSingleSelection={true}\n              isRowFreeze={false}\n              dataSelection={(selection, data, code) => {\n                const rowSelected = data.filter(\n                  (item: any) => item.Auto === selection[0]\n                )[0];\n                if (rowSelected === undefined || rowSelected.length <= 0) {\n                  setNewStateValue(dispatch, initialState);\n                  handleInputChange({ target: { value: \"\", name: \"mode\" } });\n                  return;\n                }\n                handleInputChange({ target: { value: \"edit\", name: \"mode\" } });\n\n                if (code === \"Delete\" || code === \"Backspace\") {\n                  codeCondfirmationAlert({\n                    isUpdate: false,\n                    cb: (userCodeConfirmation) => {\n                      mutateDelete({\n                        Auto: rowSelected.Auto,\n                        userCodeConfirmation,\n                      });\n                    },\n                  });\n\n                  return;\n                }\n\n                const newState = {\n                  ...rowSelected,\n                  Inactive: rowSelected.Inactive !== \"NO\",\n                };\n                console.log(newState);\n                setNewStateValue(dispatch, newState);\n              }}\n            />\n          </Box>\n        </div>\n        {ModalSearchClient}\n        {ModalChartAccount}\n        {ModalBank}\n      </div></>\n  );\n}\nexport function setNewStateValue(dispatch: any, obj: any) {\n  Object.entries(obj).forEach(([field, value]) => {\n    dispatch({ type: \"UPDATE_FIELD\", field, value });\n  });\n}\n","import { useContext, useState } from \"react\";\nimport { useQuery } from \"react-query\";\nimport { AuthContext, User } from \"../components/AuthContext\";\nimport {\n  GridRowSelectionModel,\n  GridCellParams,\n  GridTreeNode,\n} from \"@mui/x-data-grid\";\nimport ModalWithTable from \"../components/ModalWithTable\";\nimport { flushSync } from \"react-dom\";\nimport { AxiosResponse, AxiosInstance } from \"axios\";\nimport { GridRowParams } from \"@mui/x-data-grid\";\ninterface QueryModalTableParamsType {\n  link?: {\n    url: string;\n    queryUrlName: string;\n  };\n  uniqueId: string;\n  queryKey: string;\n  responseDataKey: string;\n  columns: Array<any>;\n  onSelected?: (selectedRowData: Array<any>, data: Array<any>) => void;\n  onRemoveSelected?: (data: Array<any>) => void;\n  onSuccess?: (data: any) => void;\n  searchRef?: React.RefObject<HTMLInputElement>;\n  onCellKeyDown?: any;\n  onCloseFunction?: (search: any) => void;\n  CustomizeAxios?: (\n    myAxios: AxiosInstance,\n    user: User | null,\n    link: QueryModalTableParamsType[\"link\"],\n    search?: string\n  ) => Promise<AxiosResponse<any, any>>;\n  isRowSelectable?: ((params: GridRowParams<any>) => boolean) | undefined;\n  getCellClassName?:\n    | ((params: GridCellParams<any, any, any, GridTreeNode>) => string)\n    | undefined;\n}\n\nasync function CustomizeAxiosFunc(\n  myAxios: AxiosInstance,\n  user: User | null,\n  link: QueryModalTableParamsType[\"link\"],\n  search: string = \"\"\n) {\n  return myAxios.get(`${link?.url}?${link?.queryUrlName}=${search}`, {\n    headers: {\n      Authorization: `Bearer ${user?.accessToken}`,\n    },\n  });\n}\n\nconst useQueryModalTable = ({\n  link,\n  uniqueId,\n  queryKey,\n  responseDataKey,\n  columns,\n  onSelected = () => {},\n  onRemoveSelected = () => {},\n  onSuccess = () => {},\n  searchRef,\n  onCellKeyDown,\n  onCloseFunction = () => {},\n  CustomizeAxios = CustomizeAxiosFunc,\n  isRowSelectable,\n  getCellClassName,\n}: QueryModalTableParamsType) => {\n  const { myAxios, user } = useContext(AuthContext);\n  const [show, setShowModal] = useState(false);\n  const [rows, setRows] = useState<GridRowSelectionModel>([]);\n  async function customizeAxiostool(search: string = \"\") {\n    return await CustomizeAxios(myAxios, user, link, search);\n  }\n  const { isLoading, refetch } = useQuery({\n    queryKey: queryKey,\n    queryFn: async () => await customizeAxiostool(),\n    onSuccess: (res) => {\n      const response = res as any;\n      setRows(response.data[responseDataKey]);\n      onSuccess(response);\n    },\n    refetchOnWindowFocus: false,\n  });\n\n  const openModal = (search: string = \"\") => {\n    flushSync(() => {\n      setShowModal(true);\n    });\n    if (searchRef?.current) {\n      searchRef.current.value = search;\n      customizeAxiostool(search).then((res: any) => {\n        if (!res?.data.success) {\n          return alert(`Error : ${res?.data.message}`);\n        }\n        const response = res as any;\n        setRows(response.data[responseDataKey]);\n        if (searchRef?.current) searchRef.current.focus();\n      });\n    }\n  };\n\n  const closeModal = () => {\n    setShowModal(false);\n    if (onCloseFunction) {\n      onCloseFunction(searchRef?.current?.value);\n    }\n  };\n\n  const ModalComponent = (\n    <ModalWithTable\n      getCellClassName={getCellClassName}\n      searchRef={searchRef}\n      showModal={show}\n      onCloseModal={() => {\n        setShowModal(false);\n        if (onCloseFunction) {\n          onCloseFunction(searchRef?.current?.value);\n        }\n      }}\n      onClickCloseIcon={() => {\n        setShowModal(false);\n        if (onCloseFunction) {\n          onCloseFunction(searchRef?.current?.value);\n        }\n      }}\n      searchOnChange={(e) => {\n        // myAxios\n        //   .get(`${link.url}?${link.queryUrlName}=${e.target.value}`, {\n        //     headers: {\n        //       Authorization: `Bearer ${user?.accessToken}`,\n        //     },\n        //   })\n        //   .then((res: any) => {\n        //     if (!res?.data.success) {\n        //       return alert(`Error : ${res?.data.message}`);\n        //     }\n        //     const response = res as any;\n        //     setRows(response.data[responseDataKey]);\n        //   });\n      }}\n      onSearchKeyEnter={(value) => {\n        customizeAxiostool(value).then((res: any) => {\n          if (!res?.data.success) {\n            return alert(`Error : ${res?.data.message}`);\n          }\n          const response = res as any;\n          setRows(response.data[responseDataKey]);\n        });\n      }}\n      onCellKeyDown={onCellKeyDown}\n      height={300}\n      isLoading={isLoading}\n      queryKey={queryKey}\n      columns={columns}\n      onSelectionChange={(rowSelectionModel, data) => {\n        if (rowSelectionModel.length <= 0) {\n          return onRemoveSelected(data);\n        }\n        const selectedIDs = new Set(rowSelectionModel);\n        const selectedRowData = data.filter((row: any) => {\n          return selectedIDs.has(row[uniqueId].toString());\n        });\n        if (selectedRowData.length <= 0) return;\n        onSelected(selectedRowData, data);\n      }}\n      id={uniqueId}\n      rows={rows}\n      setRows={setRows}\n      isRowSelectable={isRowSelectable}\n    />\n  );\n\n  return {\n    show,\n    rows,\n    isLoading,\n    openModal,\n    closeModal,\n    ModalComponent,\n    refetch,\n  };\n};\n\nexport default useQueryModalTable;\n","import Swal from \"sweetalert2\";\n\nexport function codeCondfirmationAlert(props: {\n  cb: (userCodeConfirmation: string) => void;\n  isUpdate: boolean;\n  isConfirm?: () => void;\n  isDeclined?: () => void;\n  text?: string;\n}) {\n  Swal.fire({\n    title: `Are you sure!`,\n    html: props?.text\n      ? props?.text\n      : props.isUpdate\n      ? `Are you sure you want to make this change?`\n      : \"Are you sure you want to delete this?\",\n    icon: \"warning\",\n    input: \"text\",\n    inputAttributes: {\n      autocapitalize: \"off\",\n    },\n    showCancelButton: true,\n    confirmButtonText: \"Save\",\n    confirmButtonColor: \"green\",\n    showLoaderOnConfirm: true,\n    preConfirm: async (userCodeConfirmation) => {\n      try {\n        props.cb(userCodeConfirmation);\n      } catch (error) {\n        Swal.showValidationMessage(`\n            Request failed: ${error}\n          `);\n      }\n    },\n    allowOutsideClick: () => !Swal.isLoading(),\n  }).then((result) => {\n    if (result.isConfirmed) {\n      if (props.isConfirm) {\n        return props.isConfirm();\n      }\n    }\n    if (props.isDeclined) {\n      props.isDeclined();\n    }\n  });\n}\n\nexport function saveCondfirmationAlert(props: {\n  isConfirm?: () => void;\n  isDeclined?: () => void;\n  text?: string;\n}) {\n  Swal.fire({\n    title: \"Are you sure?\",\n    text: props?.text ? props?.text : \"Do you want to proceed with saving?\",\n    icon: \"warning\",\n    showCancelButton: true,\n    confirmButtonColor: \"#3085d6\",\n    cancelButtonColor: \"#d33\",\n    confirmButtonText: \"Yes, save it!\",\n  }).then((result) => {\n    if (result.isConfirmed) {\n      if (props.isConfirm) {\n        return props.isConfirm();\n      }\n    }\n    if (props.isDeclined) {\n      props.isDeclined();\n    }\n  });\n}\n","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\"\n}), 'Add');\nexports.default = _default;","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\"\n}), 'Delete');\nexports.default = _default;","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)([/*#__PURE__*/(0, _jsxRuntime.jsx)(\"circle\", {\n  cx: \"10\",\n  cy: \"8\",\n  r: \"4\"\n}, \"0\"), /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M10.35 14.01C7.62 13.91 2 15.27 2 18v2h9.54c-2.47-2.76-1.23-5.89-1.19-5.99zm9.08 4.01c.36-.59.57-1.28.57-2.02 0-2.21-1.79-4-4-4s-4 1.79-4 4 1.79 4 4 4c.74 0 1.43-.22 2.02-.57L20.59 22 22 20.59l-2.57-2.57zM16 18c-1.1 0-2-.9-2-2s.9-2 2-2 2 .9 2 2-.9 2-2 2z\"\n}, \"1\")], 'PersonSearch');\nexports.default = _default;","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M17 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V7l-4-4zm-5 16c-1.66 0-3-1.34-3-3s1.34-3 3-3 3 1.34 3 3-1.34 3-3 3zm3-10H5V5h10v4z\"\n}), 'Save');\nexports.default = _default;","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M4 6H2v14c0 1.1.9 2 2 2h14v-2H4V6zm16-4H8c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2zm-6 2c1.66 0 3 1.34 3 3s-1.34 3-3 3-3-1.34-3-3 1.34-3 3-3zm6 12H8v-1.5c0-1.99 4-3 6-3s6 1.01 6 3V16z\"\n}), 'SwitchAccount');\nexports.default = _default;","const pink = {\n  50: '#fce4ec',\n  100: '#f8bbd0',\n  200: '#f48fb1',\n  300: '#f06292',\n  400: '#ec407a',\n  500: '#e91e63',\n  600: '#d81b60',\n  700: '#c2185b',\n  800: '#ad1457',\n  900: '#880e4f',\n  A100: '#ff80ab',\n  A200: '#ff4081',\n  A400: '#f50057',\n  A700: '#c51162'\n};\nexport default pink;"],"names":["_ref","_ref$title","title","_jsxs","Helmet","children","_jsx","rel","type","href","concat","process","style","position","top","left","transform","width","bgcolor","boxShadow","p","heigth","ModalWithTable","height","isLoading","columns","queryKey","onSelectionChange","rows","setRows","id","onCloseModal","showModal","onClickCloseIcon","searchOnChange","searchRef","_ref$onSearchKeyEnter","onCellKeyDown","onSearchKeyEnter","isRowSelectable","getCellClassName","mainId","generateRandomClass","Modal","open","onClose","Box","sx","Typography","variant","component","mb","TextField","size","label","marginBottom","fullWidth","onChange","InputProps","inputRef","onKeyDown","e","_searchRef$current","code","preventDefault","current","value","keyBoardSelectionTable","className","Table","isSingleSelection","isRowFreeze","dataSelection","selection","data","table_id","right","IconButton","color","onClick","CloseIcon","Math","floor","random","el","_rows$","document","querySelectorAll","classList","add","firstRowParent","querySelector","firstInput","focus","event","MouseEvent","bubbles","cancelable","view","window","dispatchEvent","addEventListener","es","key","remove","keyBoardUpDown","forEach","idx","_rows$idx","_rows","_rows$idx2","_rows2","length","TableContext","createContext","rowSelectionModel","footerChildren","footerPaginationPosition","showFooterSelectedCount","forwardRef","ref","_ref$CustomFooterComp","CustomFooterComponent","DefaultooterComponent","_ref$checkboxSelectio","checkboxSelection","_ref$footerChildren","_ref$footerPagination","_ref$showFooterSelect","_useState","useState","_useState2","_slicedToArray","selectedRows","setSelectedRows","useImperativeHandle","removeSelection","getSelectedRows","filter","item","includes","freezeArray","Provider","DataGrid","slots","loadingOverlay","LinearProgress","footer","initialState","pagination","paginationModel","pageSize","loading","getRowId","row","col","hide","showCellVerticalBorder","showColumnVerticalBorder","rowHeight","columnHeaderHeight","pageSizeOptions","_objectSpread","fill","background","padding","fontSize","display","fontWeight","onRowSelectionModelChange","selectionSet","Set","s","has","__","rowNode","_toConsumableArray","disableVirtualization","Pagination","_ref2","page","onPageChange","apiRef","useGridApiContext","pageCount","useGridSelector","gridPageCountSelector","MuiPagination","count","newPage","CustomPagination","props","GridPagination","ActionsComponent","_useContext","useContext","columnGap","justifyContent","px","alignItems","flexDirection","flex","Account_No","Account_Name","Account_Type","Desc","Option","Account_ID","Inactive","IDNo","Account_ID_Name","Identity","BankName","Auto","mode","search","reducer","state","action","_defineProperty","field","bankAccountColumn","headerName","chartColumn","bannkColumn","clientColumn","BankAccount","_queryFn","_mutationFn","_mutationFn2","_mutationFn3","_refParent$current","refParent","useRef","_useReducer","useReducer","_useReducer2","dispatch","AuthContext","myAxios","user","clientSearchInput","queryClient","useQueryClient","table","_useQuery","useQuery","queryFn","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","get","headers","Authorization","accessToken","abrupt","sent","stop","apply","arguments","onSuccess","res","bankAccount","refetchBankAccountSearch","refetch","_useMutation","useMutation","mutationKey","mutationFn","_x","_callee2","variables","_context2","post","mutateAdd","mutate","loadingAdd","_useMutation2","_x2","_callee3","_context3","mutateEdit","loadingEdit","_useMutation3","_x3","_callee4","_context4","mutateDelete","loadingDelete","_useQueryModalTable","useQueryModalTable","link","url","queryUrlName","uniqueId","responseDataKey","onSelected","selectedRowData","Bank","Bank_Code","closeBank","ModalBank","ModalComponent","openBank","openModal","isLoadingBank","closeModal","_useQueryModalTable2","Acct_Title","Acct_Code","closeChartAccount","ModalChartAccount","openChartAccount","isLoadingChartAccount","_useQueryModalTable3","Name","closeSearchClient","ModalSearchClient","openSearchClient","isLoadingSearchClient","handleInputChange","_e$target","target","name","handleOnSave","Swal","icon","showConfirmButton","timer","codeCondfirmationAlert","isUpdate","cb","userCodeConfirmation","saveCondfirmationAlert","isConfirm","resetModule","_table$current","setNewStateValue","wait","then","success","invalidateQueries","message","_Fragment","PageHelmet","theme","breakpoints","down","marginTop","Button","startIcon","AddIcon","LoadingButton","SaveIcon","disabled","text","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","result","isConfirmed","backgroundColor","pink","DeleteIcon","rowGap","React","required","FormControlLabel","minWidth","control","Checkbox","checked","gap","border","borderRadius","FormControl","zIndex","InputLabel","htmlFor","OutlinedInput","endAdornment","InputAdornment","edge","AccountBalanceIcon","SwitchAccountIcon","PersonSearchIcon","readOnly","getBoundingClientRect","overflowX","rowSelected","undefined","newState","console","log","obj","Object","entries","_ref4","_ref5","CustomizeAxiosFunc","_CustomizeAxiosFunc","_args","_customizeAxiostool","_ref$onSelected","_ref$onRemoveSelected","onRemoveSelected","_ref$onSuccess","_ref$onCloseFunction","onCloseFunction","_ref$CustomizeAxios","CustomizeAxios","show","setShowModal","_useState3","_useState4","customizeAxiostool","_args2","response","refetchOnWindowFocus","flushSync","alert","_searchRef$current2","_searchRef$current3","selectedIDs","toString","_preConfirm","html","input","inputAttributes","autocapitalize","showLoaderOnConfirm","preConfirm","error","allowOutsideClick","isDeclined","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d","cx","cy","r","A100","A200","A400","A700"],"sourceRoot":""}