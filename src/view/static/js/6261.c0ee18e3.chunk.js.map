{"version":3,"file":"static/js/6261.c0ee18e3.chunk.js","mappings":"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","sources":["components/DatePicker.tsx","feautures/Admin/Task/Accounting/ReturnCheck.tsx","hooks/useMultipleComponent.tsx","../node_modules/@mui/icons-material/CheckCircleOutline.js","../node_modules/@mui/icons-material/RestartAlt.js","../node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js"],"sourcesContent":["import { LocalizationProvider } from \"@mui/x-date-pickers/LocalizationProvider\";\nimport { AdapterDateFns } from \"@mui/x-date-pickers/AdapterDateFns\";\nimport { DatePicker } from \"@mui/x-date-pickers\";\nexport default function CustomDatePicker({\n  label,\n  name,\n  onChange,\n  value,\n  onKeyDown,\n  inputRef,\n  datePickerRef,\n  fullWidth,\n  textField,\n  minWidth = \"200px\",\n  ...rest\n}: any) {\n  return (\n    <LocalizationProvider dateAdapter={AdapterDateFns}>\n      <DatePicker\n      floatingLabelStyle={{color: \"black\" }}\n        value={value}\n        onChange={onChange}\n        ref={datePickerRef}\n        slotProps={{\n          textField: {\n            size: \"small\",\n            label,\n            name,\n            onKeyDown,\n            inputRef: inputRef,\n            fullWidth,\n\n            ...textField,\n          },\n        }}\n        InputLabelProps={{\n          sx: {\n            color: \"black\",\n          },\n        }}\n        sx={{\n          minWidth,\n          fieldset: { borderColor: \"black\" },\n          \".MuiFormLabel-root\": { fontSize: \"14px\" },\n          \".MuiFormLabel-root[data-shrink=false]\": {\n            top: \"-5px\",\n          },\n        }}\n        {...rest}\n      />\n    </LocalizationProvider>\n  );\n}\n","import React, {\n  useReducer,\n  useState,\n  useRef,\n  createContext,\n  useContext,\n  useEffect,\n} from \"react\";\nimport {\n  TextField,\n  Button,\n  FormControl,\n  InputAdornment,\n  IconButton,\n  InputLabel,\n  OutlinedInput,\n  Modal,\n  Box,\n  Typography,\n  Select,\n  MenuItem,\n} from \"@mui/material\";\nimport { GridRowSelectionModel } from \"@mui/x-data-grid\";\nimport CustomDatePicker from \"../../../../components/DatePicker\";\nimport LoadingButton from \"@mui/lab/LoadingButton\";\nimport AddIcon from \"@mui/icons-material/Add\";\nimport SaveIcon from \"@mui/icons-material/Save\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport Swal from \"sweetalert2\";\nimport RestartAltIcon from \"@mui/icons-material/RestartAlt\";\nimport { useMutation, useQuery, UseMutateFunction } from \"react-query\";\nimport { AuthContext } from \"../../../../components/AuthContext\";\nimport NotInterestedIcon from \"@mui/icons-material/NotInterested\";\nimport CheckCircleOutlineIcon from \"@mui/icons-material/CheckCircleOutline\";\nimport { AxiosResponse } from \"axios\";\nimport { wait } from \"@testing-library/user-event/dist/utils\";\nimport useQueryModalTable from \"../../../../hooks/useQueryModalTable\";\nimport { flushSync } from \"react-dom\";\nimport Table from \"../../../../components/Table\";\nimport useMultipleComponent from \"../../../../hooks/useMultipleComponent\";\nimport {\n  codeCondfirmationAlert,\n  saveCondfirmationAlert,\n} from \"../../../../lib/confirmationAlert\";\nimport {\n  generateRandomClass,\n  keyBoardSelectionTable,\n} from \"../../../../components/ModalWithTable\";\n\ninterface ReturnCheckContextType {\n  checkCollection: Array<any>;\n  checkSelectedCollection: Array<any>;\n  accountingEntry: Array<any>;\n  LoadingCheckList: boolean;\n  addReturnCheckLoading: boolean;\n  tableSelectedCheck: React.MutableRefObject<any>;\n  tableAccountingEntryCheck: React.MutableRefObject<any>;\n  tableSelectedCheckReturn: React.MutableRefObject<any>;\n  dispatchModal: React.Dispatch<any>;\n  modalSelectedMutate: UseMutateFunction<\n    AxiosResponse<any, any>,\n    unknown,\n    any,\n    unknown\n  >;\n  getSearchReturnCheckInfoLoading: boolean;\n  modalSelectedCheckLoading: boolean;\n  debitModalCollection: Array<any>;\n  myAxios: any;\n  user: any;\n  setCheckCollection: React.Dispatch<\n    React.SetStateAction<GridRowSelectionModel>\n  >;\n  openSelectedCheckModal: boolean;\n  setOpenSelectedCheckModal: React.Dispatch<React.SetStateAction<boolean>>;\n  currentStepIndex: number;\n  fireModal: (onConfirmCallback: any) => void;\n  stateModal: any;\n  datePickerModalRef: React.RefObject<HTMLElement>;\n  setAccountingEntry: React.Dispatch<\n    React.SetStateAction<GridRowSelectionModel>\n  >;\n  handleModalInputChange: (e: any) => void;\n  LoadSelectedCheckInSelectedTable: (selectedRowValue: any) => void;\n  setCheckSelectedCollection: React.Dispatch<\n    React.SetStateAction<GridRowSelectionModel>\n  >;\n}\nconst initialState = {\n  RefNo: \"\",\n  Sub_RefNo: \"\",\n  DateReturn: new Date(),\n  Explanation: \"Returned Checks\",\n  search: \"\",\n  returnMode: \"\",\n  searchCheckList: \"\",\n};\nconst initialModalState = {\n  ModalDateReturn: new Date().toLocaleDateString(),\n  ReturnReason: \"\",\n  AccountName: \"\",\n  AccountID: \"\",\n  Amount: \"\",\n  SubAccount: \"\",\n  BranchCode: \"\",\n  IDNo: \"\",\n  Short: \"\",\n  Check_No: \"\",\n  TempID: \"\",\n  updateAmount: \"\",\n  updateAmountID: \"\",\n  depoBankName: \"\",\n  depoBankIdentity: \"\",\n  subSelectedChecks: {},\n};\n\nconst ReturnCheckContext = createContext<ReturnCheckContextType>({\n  checkCollection: [],\n  checkSelectedCollection: [],\n  accountingEntry: [],\n  LoadingCheckList: false,\n  addReturnCheckLoading: false,\n  tableSelectedCheck: { current: {} },\n  tableAccountingEntryCheck: { current: {} },\n  tableSelectedCheckReturn: { current: {} },\n  dispatchModal: () => {},\n  modalSelectedMutate: () => {},\n  getSearchReturnCheckInfoLoading: false,\n  modalSelectedCheckLoading: false,\n  debitModalCollection: [],\n  myAxios: {},\n  user: {},\n  setCheckCollection: () => {},\n  openSelectedCheckModal: false,\n  setOpenSelectedCheckModal: () => {},\n  currentStepIndex: 0,\n  fireModal: () => {},\n  stateModal: {},\n  datePickerModalRef: { current: null },\n  setAccountingEntry: () => {},\n  handleModalInputChange: () => {},\n  LoadSelectedCheckInSelectedTable: () => {},\n  setCheckSelectedCollection: () => {},\n});\nconst buttons = [\n  {\n    title: \"Selected Check\",\n    index: 0,\n  },\n  {\n    title: \"Selected Check to be Returned\",\n    index: 1,\n  },\n  {\n    title: \"Accounting Entry\",\n    index: 2,\n  },\n];\nconst modalDebitEntryColumn = [\n  {\n    field: \"CRCode\",\n    headerName: \"Code\",\n    minWidth: 140,\n  },\n  {\n    field: \"CRTitle\",\n    headerName: \"Account Name\",\n    minWidth: 300,\n    flex: 1,\n  },\n  {\n    field: \"Credit\",\n    headerName: \"Amount\",\n    minWidth: 140,\n    align: \"right\",\n  },\n  {\n    field: \"CRLoanID\",\n    headerName: \"ID No.\",\n    minWidth: 140,\n  },\n  {\n    field: \"CRLoanName\",\n    headerName: \"Identity\",\n    minWidth: 300,\n    flex: 1,\n  },\n  {\n    field: \"SubAcctCode\",\n    headerName: \"Sub Account\",\n    minWidth: 160,\n    flex: 1,\n  },\n  {\n    field: \"SubAcctName\",\n    headerName: \"Sub Account Name\",\n    minWidth: 300,\n    flex: 1,\n  },\n  {\n    field: \"TempID\",\n    headerName: \"Sub Account Name\",\n    hide: true,\n  },\n];\n\nexport const reducer = (state: any, action: any) => {\n  switch (action.type) {\n    case \"UPDATE_FIELD\":\n      return {\n        ...state,\n        [action.field]: action.value,\n      };\n    default:\n      return state;\n  }\n};\nexport default function ReturnCheck() {\n  const { ConfirmationModal, fireModal } = useConfirmation();\n  const { myAxios, user } = useContext(AuthContext);\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const [stateModal, dispatchModal] = useReducer(reducer, initialModalState);\n  const { currentStepIndex, step, goTo } = useMultipleComponent([\n    <SelectedCheck />,\n    <SelectedCheckToBeReturn />,\n    <AccountingEntry />,\n  ]);\n  const [checkCollection, setCheckCollection] = useState<GridRowSelectionModel>(\n    []\n  );\n  const [checkSelectedCollection, setCheckSelectedCollection] =\n    useState<GridRowSelectionModel>([]);\n  const [accountingEntry, setAccountingEntry] = useState<GridRowSelectionModel>(\n    []\n  );\n  const [debitModalCollection, setDebitModalCollection] =\n    useState<GridRowSelectionModel>([]);\n  const [openSelectedCheckModal, setOpenSelectedCheckModal] = useState(false);\n  const datePickerRef = useRef<HTMLElement>(null);\n  const reloadIDButtonRef = useRef<HTMLButtonElement>(null);\n  const datePickerModalRef = useRef<HTMLElement>(null);\n  const explanationInputRef = useRef<HTMLInputElement>(null);\n  const submitButton = useRef<HTMLButtonElement>(null);\n  const searchReturnChecks = useRef<HTMLInputElement>(null);\n  const tableSelectedCheck = useRef<any>(null);\n  const tableAccountingEntryCheck = useRef<any>(null);\n  const tableSelectedCheckReturn = useRef<any>(null);\n\n  const { isLoading: LoadingReturnCheckLoading, refetch: RefetchReturnCheck } =\n    useQuery({\n      queryKey: \"return-check-id\",\n      queryFn: async () =>\n        await myAxios.get(`/task/accounting/get-new-return-check-id`, {\n          headers: {\n            Authorization: `Bearer ${user?.accessToken}`,\n          },\n        }),\n      refetchOnWindowFocus: false,\n      onSuccess: (data) => {\n        const response = data as any;\n    \n        dispatch({\n          type: \"UPDATE_FIELD\",\n          field: \"RefNo\",\n          value: response.data.returnCheckID[0].return_check_id,\n        });\n        dispatch({\n          type: \"UPDATE_FIELD\",\n          field: \"Sub_RefNo\",\n          value: response.data.returnCheckID[0].return_check_id,\n        });\n      },\n    });\n  const { isLoading: LoadingCheckList, refetch: refetchCheckList } = useQuery({\n    queryKey: \"check-list\",\n    queryFn: async () =>\n      await myAxios.get(\n        `/task/accounting/get-check-list?checkListSearch=${state.searchCheckList}`,\n        {\n          headers: {\n            Authorization: `Bearer ${user?.accessToken}`,\n          },\n        }\n      ),\n    onSuccess: (res) => {\n      const response = res as any;\n      setCheckCollection(response.data.checkList);\n    },\n  });\n  const { isLoading: modalSelectedCheckLoading, mutate: modalSelectedMutate } =\n    useMutation({\n      mutationKey: \"selected-check-modal\",\n      mutationFn: async (variables: any) =>\n        myAxios.post(\n          \"/task/accounting/get-modal-return-check-data\",\n          variables,\n          {\n            headers: {\n              Authorization: `Bearer ${user?.accessToken}`,\n            },\n          }\n        ),\n      onSuccess: (res) => {\n        const response = res as any;\n        const credit = response.data.credit[0];\n        const debit = response.data.debit[0];\n        console.log(response)\n        setDebitModalCollection(response.data.debit);\n\n        dispatchModal({\n          type: \"UPDATE_FIELD\",\n          field: \"AccountName\",\n          value: credit.Acct_Title,\n        });\n        dispatchModal({\n          type: \"UPDATE_FIELD\",\n          field: \"AccountID\",\n          value: credit.Account_ID,\n        });\n        dispatchModal({\n          type: \"UPDATE_FIELD\",\n          field: \"IDNo\",\n          value: debit.ID_No,\n        });\n        dispatchModal({\n          type: \"UPDATE_FIELD\",\n          field: \"Short\",\n          value: debit.CRLoanName,\n        });\n\n        dispatchModal({\n          type: \"UPDATE_FIELD\",\n          field: \"depoBankName\",\n          value: credit.IDNo,\n        });\n        dispatchModal({\n          type: \"UPDATE_FIELD\",\n          field: \"depoBankIdentity\",\n          value:credit.Identity  ,\n        });\n\n        dispatchModal({\n          type: \"UPDATE_FIELD\",\n          field: \"Short\",\n          value: debit.CRLoanName,\n        });\n        dispatchModal({\n          type: \"UPDATE_FIELD\",\n          field: \"Short\",\n          value: debit.CRLoanName,\n        });\n\n        dispatchModal({\n          type: \"UPDATE_FIELD\",\n          field: \"SubAccount\",\n          value: debit.SubAcctName,\n        });\n        dispatchModal({\n          type: \"UPDATE_FIELD\",\n          field: \"BranchCode\",\n          value: debit.SubAcctCode,\n        });\n        dispatchModal({\n          type: \"UPDATE_FIELD\",\n          field: \"Amount\",\n          value: response.data.debit\n            .reduce(\n              (sum: any, obj: any) =>\n                sum + parseFloat(obj.Credit.replace(/,/g, \"\")),\n              0\n            )\n            .toLocaleString(\"en-US\", {\n              style: \"decimal\",\n              minimumFractionDigits: 2,\n              maximumFractionDigits: 2,\n            }),\n        });\n        setOpenSelectedCheckModal(true);\n      },\n    });\n  const {\n    isLoading: getSearchReturnCheckInfoLoading,\n    mutate: getSearchReturnCheckInfoMutate,\n  } = useMutation({\n    mutationKey: \"selected-search-return-check\",\n    mutationFn: async (variables: any) =>\n      myAxios.post(\n        \"/task/accounting/get-search-selected-checks-information\",\n        variables,\n        {\n          headers: {\n            Authorization: `Bearer ${user?.accessToken}`,\n          },\n        }\n      ),\n    onSuccess: (res) => {\n      const response = res as any;\n      const selectedRow = response.data.selected[0];\n\n      const selectedChecks = response.data.selected.map((itm: any) => {\n        itm.Amount = parseFloat(\n          itm.Amount.toString().replace(/,/g, \"\")\n        ).toLocaleString(\"en-US\", {\n          style: \"decimal\",\n          minimumFractionDigits: 2,\n          maximumFractionDigits: 2,\n        });\n        return itm;\n      });\n      setAccountingEntry(response.data.accountingEntry);\n      setCheckSelectedCollection(selectedChecks);\n      setNewStateValue(dispatch, {\n        ...state,\n        ...{\n          RefNo: selectedRow.RC_No,\n          Sub_RefNo: selectedRow.RC_No,\n          DateReturn: selectedRow.RC_Date,\n          Explanation: selectedRow.Explanation,\n          returnMode: \"edit\",\n        },\n      });\n    },\n  });\n  const { isLoading: addReturnCheckLoading, mutate: addReturnCheckMutate } =\n    useMutation({\n      mutationKey: \"selected-check-modal\",\n      mutationFn: async (variables: any) =>\n        myAxios.post(\"/task/accounting/add-return-check\", variables, {\n          headers: {\n            Authorization: `Bearer ${user?.accessToken}`,\n          },\n        }),\n      onSuccess: (res) => {\n        const response = res as any;\n\n        if (response.data.isClearableError) {\n          RefetchReturnCheck();\n          refetchCheckList();\n          setCheckSelectedCollection([]);\n          setAccountingEntry([]);\n          dispatch({\n            type: \"UPDATE_FIELD\",\n            field: \"returnMode\",\n            value: \"\",\n          });\n          return Swal.fire({\n            position: \"center\",\n            icon: \"success\",\n            title: response.data.message,\n            timer: 1500,\n          });\n        }\n\n        return Swal.fire({\n          position: \"center\",\n          icon: \"warning\",\n          title: response.data.message,\n          timer: 1500,\n        });\n      },\n    });\n  const {\n    ModalComponent: ReturnChecksModal,\n    openModal: openReturnChecksModal,\n    isLoading: isLoadingReturnChecksModal,\n    closeModal: closeReturnChecksModal,\n  } = useQueryModalTable({\n    link: {\n      url: \"/task/accounting/search-return-checks\",\n      queryUrlName: \"searchReturnChecks\",\n    },\n    columns: [\n      { field: \"RC_Date\", headerName: \"Date\", width: 150 },\n      { field: \"RC_No\", headerName: \"Slip Code\", width: 170 },\n      {\n        field: \"Explanation\",\n        headerName: \"Bank Account\",\n        flex: 1,\n      },\n    ],\n    queryKey: \"return-checks-search\",\n    uniqueId: \"RC_No\",\n    responseDataKey: \"returnCheckSearch\",\n    onSelected: (selectedRowData) => {\n      dispatch({\n        type: \"UPDATE_FIELD\",\n        field: \"returnMode\",\n        value: \"edit\",\n      });\n      getSearchReturnCheckInfoMutate({\n        RC_No: selectedRowData[0].RC_No,\n      });\n      closeReturnChecksModal();\n    },\n    onCloseFunction: (value: any) => {\n      dispatch({ type: \"UPDATE_FIELD\", field: \"search\", value });\n    },\n    searchRef: searchReturnChecks,\n  });\n\n  const handleInputChange = (e: any) => {\n    const { name, value } = e.target;\n    dispatch({ type: \"UPDATE_FIELD\", field: name, value });\n  };\n  const handleModalInputChange = (e: any) => {\n    const { name, value } = e.target;\n    dispatchModal({ type: \"UPDATE_FIELD\", field: name, value });\n  };\n  function handleOnSave(e: any) {\n    e.preventDefault();\n\n    if (state.Explanation === \"\") {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: \"Please provide an explanation\",\n        timer: 1500,\n      }).then((result) => {\n        wait(350).then(() => {\n          explanationInputRef.current?.focus();\n        });\n      });\n    }\n    if (checkSelectedCollection.length <= 0) {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: \"Please provide return entry!\",\n        timer: 1500,\n      });\n    }\n    const credit = accountingEntry\n      .reduce(\n        (sum: any, obj: any) => sum + parseFloat(obj.Credit.replace(/,/g, \"\")),\n        0\n      )\n      .toLocaleString(\"en-US\", {\n        style: \"decimal\",\n        minimumFractionDigits: 2,\n        maximumFractionDigits: 2,\n      });\n    const debit = accountingEntry\n      .reduce(\n        (sum: any, obj: any) => sum + parseFloat(obj.Debit.replace(/,/g, \"\")),\n        0\n      )\n      .toLocaleString(\"en-US\", {\n        style: \"decimal\",\n        minimumFractionDigits: 2,\n        maximumFractionDigits: 2,\n      });\n\n    if (credit !== debit) {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: \"Accounting entry must be equal in Debit and Credit amount!\",\n        timer: 1500,\n      }).then(() => {\n        wait(300).then(() => {\n          goTo(3);\n        });\n      });\n    }\n   \n    if (state.returnMode === \"edit\") {\n      codeCondfirmationAlert({\n        isUpdate: true,\n        cb: (userCodeConfirmation) => {\n          addReturnCheckMutate({\n            selected: checkSelectedCollection,\n            accountingEntry,\n            RefNo: state.RefNo,\n            Sub_RefNo: state.Sub_RefNo,\n            DateReturn: state.DateReturn,\n            Explanation: state.Explanation,\n            ModalDateReturn: stateModal.ModalDateReturn,\n            ReturnReason: stateModal.ReturnReason,\n            AccountName: stateModal.AccountName,\n            AccountID: stateModal.AccountID,\n            Amount: stateModal.Amount,\n            SubAccount: stateModal.SubAccount,\n            BranchCode: stateModal.BranchCode,\n            IDNo: stateModal.IDNo,\n            Short: stateModal.Short,\n            Check_No: stateModal.Check_No,\n            isUpdated: state.returnMode === \"edit\",\n            userCodeConfirmation,\n          });\n        },\n      });\n    } else {\n      saveCondfirmationAlert({\n        isConfirm: () => {\n          addReturnCheckMutate({\n            selected: checkSelectedCollection,\n            accountingEntry,\n            RefNo: state.RefNo,\n            Sub_RefNo: state.Sub_RefNo,\n            DateReturn: state.DateReturn,\n            Explanation: state.Explanation,\n            ModalDateReturn: stateModal.ModalDateReturn,\n            ReturnReason: stateModal.ReturnReason,\n            AccountName: stateModal.AccountName,\n            AccountID: stateModal.AccountID,\n            Amount: stateModal.Amount,\n            SubAccount: stateModal.SubAccount,\n            BranchCode: stateModal.BranchCode,\n            IDNo: stateModal.IDNo,\n            Short: stateModal.Short,\n            Check_No: stateModal.Check_No,\n            isUpdated: state.returnMode === \"edit\",\n          });\n        },\n      });\n    }\n  }\n  function LoadSelectedCheckInSelectedTable(selectedRowValue: any) {\n    const selectedCheck = {\n      Temp_OR: `${selectedRowValue.Official_Receipt}${(\n        checkCollection.length + 1\n      )\n        .toString()\n        .padStart(2, \"0\")}`,\n      OR_NO: selectedRowValue.Official_Receipt,\n      OR_Date: selectedRowValue.Date_OR,\n      DepoSlip: selectedRowValue.DepoSlip,\n      DepoDate: selectedRowValue.DepoDate,\n      Check_No: selectedRowValue.Check_No,\n      Check_Date: selectedRowValue.Check_Date,\n      Amount: selectedRowValue.Amount,\n      Bank: selectedRowValue.Bank,\n      Bank_Account: selectedRowValue.BankAccount,\n      Reason: stateModal.ReturnReason,\n      Return_Date: new Date(stateModal.ModalDateReturn).toLocaleDateString(\n        \"en-US\",\n        {\n          month: \"2-digit\",\n          day: \"2-digit\",\n          year: \"numeric\",\n        }\n      ),\n      TempID: selectedRowValue.TempID,\n    };\n    setCheckSelectedCollection((d: any) => {\n      return [...d, selectedCheck];\n    });\n  }\n\n  const handleAccept = () => {\n    const totalDebit = debitModalCollection\n      .reduce(\n        (sum: any, obj: any) => sum + parseFloat(obj.Credit.replace(/,/g, \"\")),\n        0\n      )\n      .toLocaleString(\"en-US\", {\n        style: \"decimal\",\n        minimumFractionDigits: 2,\n        maximumFractionDigits: 2,\n      });\n\n    if (stateModal.Amount !== totalDebit) {\n      flushSync(() => {\n        setOpenSelectedCheckModal(false);\n      });\n      return Swal.fire({\n        text: \"Debit must eequal to Credit!\",\n        icon: \"warning\",\n        showCancelButton: false,\n        timer: 1500,\n        position: \"center\",\n      });\n    }\n    if (tableSelectedCheckReturn.current?.getSelectedRows()) {\n      const selectRow = tableSelectedCheckReturn.current?.getSelectedRows();\n      const selected = selectRow[selectRow.length - 1];\n      setCheckSelectedCollection((d) => {\n        d = d.filter((item: any) => item.TempID !== selected.TempID);\n        return d;\n      });\n      setAccountingEntry((d) => {\n        d = d.filter((item: any) => item.Check_No !== selected.Check_No);\n        return d;\n      });\n\n      LoadSelectedCheckInSelectedTable({\n        ...selected,\n        Official_Receipt: selected.OR_NO,\n        Date_OR: selected.OR_Date,\n        BankAccount: selected.Bank_Account,\n      });\n    } else {\n      const selectRow = tableSelectedCheck.current?.getSelectedRows();\n      const selected = selectRow[selectRow.length - 1];\n\n      LoadSelectedCheckInSelectedTable(selected);\n    }\n\n    function generateTempId(array: Array<any>) {\n      const lastItem =\n        array.length > 0 ? array[array.length - 1].TempID : \"000\";\n      const numericPart = (parseInt(lastItem.match(/\\d+/)[0]) + 1)\n        .toString()\n        .padStart(3, \"0\");\n      return numericPart;\n    }\n    //debit\n    debitModalCollection.forEach((item: any) => {\n      setAccountingEntry((d: any) => {\n        return [\n          ...d,\n          {\n            Code: item.CRCode,\n            AccountName: item.CRTitle,\n            Debit: item.Credit,\n            Credit: \"0.00\",\n            IDNo: item.ID_No,\n            Identity: item.Short,\n            SubAcct: item.SubAcctCode,\n            SubAcctName: item.SubAcctName,\n            Check_No: stateModal.subSelectedChecks.Check_No,\n            Bank: stateModal.subSelectedChecks.Bank,\n            Check_Date: stateModal.subSelectedChecks.Check_Date,\n            Check_Return: stateModal.ModalDateReturn,\n            Check_Reason: stateModal.ReturnReason,\n            PK: stateModal.subSelectedChecks.Check_No,\n            DepoDate: stateModal.subSelectedChecks.DepoDate,\n            Date_Collection: stateModal.subSelectedChecks.Date_Collection,\n            TempID: generateTempId(d),\n          },\n        ];\n      });\n    });\n\n    //cash\n    console.log(stateModal)\n    setAccountingEntry((d: any) => {\n      d = [\n        ...d,\n        {\n          Code: stateModal.AccountID,\n          AccountName: stateModal.AccountName,\n          Debit: \"0.00\",\n          Credit: stateModal.Amount,\n          IDNo: stateModal.depoBankName,\n          Identity: stateModal.depoBankIdentity,\n          SubAcct: stateModal.BranchCode,\n          SubAcctName: stateModal.SubAccount,\n          Check_No: stateModal.subSelectedChecks.Check_No,\n          Bank: stateModal.subSelectedChecks.Bank,\n          Check_Date: stateModal.subSelectedChecks.Check_Date,\n          Check_Return: stateModal.ModalDateReturn,\n          Check_Reason: stateModal.ReturnReason,\n          PK: stateModal.subSelectedChecks.Check_No,\n          DepoDate: stateModal.subSelectedChecks.DepoDate,\n          Date_Collection: stateModal.subSelectedChecks.Date_Collection,\n          TempID: generateTempId(d),\n        },\n      ];\n      return d;\n    });\n\n    setOpenSelectedCheckModal(false);\n    tableSelectedCheck.current?.removeSelection();\n    tableSelectedCheckReturn.current?.removeSelection();\n  };\n\n  const isFieldDisable = state.returnMode === \"\";\n\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        flexDirection: \"column\",\n        width: \"100%\",\n        height: \"100%\",\n        flex: 1,\n      }}\n    >\n      <div\n        style={{\n          display: \"flex\",\n          alignItems: \"center\",\n          columnGap: \"5px\",\n        }}\n      >\n        {isLoadingReturnChecksModal ? (\n          <LoadingButton loading={isLoadingReturnChecksModal} />\n        ) : (\n          <TextField\n            label=\"Search\"\n            size=\"small\"\n            name=\"search\"\n            value={state.search}\n            onChange={handleInputChange}\n            onKeyDown={(e) => {\n              if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n                e.preventDefault();\n                return openReturnChecksModal(\n                  (e.target as HTMLInputElement).value\n                );\n              }\n            }}\n            InputProps={{\n              style: { height: \"27px\", fontSize: \"14px\" },\n            }}\n            sx={{\n              width: \"300px\",\n              height: \"27px\",\n              \".MuiFormLabel-root\": { fontSize: \"14px\" },\n              \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n            }}\n          />\n        )}\n\n        {state.returnMode === \"\" && (\n          <Button\n            sx={{\n              height: \"30px\",\n              fontSize: \"11px\",\n            }}\n            variant=\"contained\"\n            startIcon={<AddIcon sx={{ width: 15, height: 15 }} />}\n            id=\"entry-header-save-button\"\n            onClick={() => {\n              dispatch({\n                type: \"UPDATE_FIELD\",\n                field: \"returnMode\",\n                value: \"add\",\n              });\n            }}\n          >\n            New\n          </Button>\n        )}\n        <LoadingButton\n          sx={{\n            height: \"30px\",\n            fontSize: \"11px\",\n          }}\n          id=\"save-entry-header\"\n          color=\"primary\"\n          variant=\"contained\"\n          type=\"submit\"\n          onClick={handleOnSave}\n          disabled={state.returnMode === \"\"}\n          startIcon={<SaveIcon sx={{ width: 15, height: 15 }} />}\n          loading={addReturnCheckLoading}\n        >\n          {state.returnMode === \"edit\" ? \"Update\" : \"Save\"}\n        </LoadingButton>\n        {state.returnMode !== \"\" && (\n          <Button\n            sx={{\n              height: \"30px\",\n              fontSize: \"11px\",\n            }}\n            variant=\"contained\"\n            startIcon={<CloseIcon sx={{ width: 15, height: 15 }} />}\n            color=\"error\"\n            onClick={() => {\n              Swal.fire({\n                title: \"Are you sure?\",\n                text: \"You won't be able to revert this!\",\n                icon: \"warning\",\n                showCancelButton: true,\n                confirmButtonColor: \"#3085d6\",\n                cancelButtonColor: \"#d33\",\n                confirmButtonText: \"Yes, cancel it!\",\n              }).then((result) => {\n                if (result.isConfirmed) {\n                  refetchCheckList();\n                  setCheckSelectedCollection([]);\n                  setAccountingEntry([]);\n                  dispatch({\n                    type: \"UPDATE_FIELD\",\n                    field: \"returnMode\",\n                    value: \"\",\n                  });\n                  setNewStateValue(dispatch, initialState);\n                  RefetchReturnCheck();\n                }\n              });\n            }}\n          >\n            Cancel\n          </Button>\n        )}\n      </div>\n      <br />\n      <form\n        onKeyDown={(e) => {\n          if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n            e.preventDefault();\n            return;\n          }\n        }}\n        style={{\n          display: \"flex\",\n          gap: \"10px\",\n        }}\n      >\n        {LoadingReturnCheckLoading ? (\n          <LoadingButton loading={LoadingReturnCheckLoading} />\n        ) : (\n          <FormControl\n            sx={{\n              width: \"200px\",\n              \".MuiFormLabel-root\": {\n                fontSize: \"14px\",\n                background: \"white\",\n                zIndex: 99,\n                padding: \"0 3px\",\n              },\n              \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n            }}\n            variant=\"outlined\"\n            size=\"small\"\n            disabled={isFieldDisable}\n          >\n            <InputLabel htmlFor=\"return-check-id-field\">Ref. No.</InputLabel>\n            <OutlinedInput\n              sx={{\n                height: \"27px\",\n                fontSize: \"14px\",\n              }}\n              // inputRef={checkBankRef}\n              disabled={isFieldDisable}\n              fullWidth\n              label=\"Ref. No.\"\n              name=\"RefNo\"\n              value={state.RefNo}\n              onChange={handleInputChange}\n              onKeyDown={(e) => {\n                if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n                  return handleOnSave(e);\n                }\n              }}\n              readOnly={user?.department !== \"UCSMI\"}\n              id=\"return-check-id-field\"\n              endAdornment={\n                <InputAdornment position=\"end\">\n                  <IconButton\n                    ref={reloadIDButtonRef}\n                    disabled={isFieldDisable}\n                    aria-label=\"search-client\"\n                    color=\"secondary\"\n                    edge=\"end\"\n                    onClick={() => {\n                      RefetchReturnCheck();\n                    }}\n                  >\n                    <RestartAltIcon />\n                  </IconButton>\n                </InputAdornment>\n              }\n            />\n          </FormControl>\n        )}\n        <CustomDatePicker\n          disabled={isFieldDisable}\n          label=\"Date Returned\"\n          onChange={(value: any) => {\n            dispatch({\n              type: \"UPDATE_FIELD\",\n              field: \"DateReturn\",\n              value: value,\n            });\n          }}\n          value={new Date(state.DateReturn)}\n          onKeyDown={(e: any) => {\n            if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n              const timeout = setTimeout(() => {\n                datePickerRef.current?.querySelector(\"button\")?.click();\n                clearTimeout(timeout);\n              }, 150);\n            }\n          }}\n          textField={{\n            InputLabelProps: {\n              style: {\n                fontSize: \"14px\",\n              },\n            },\n            InputProps: {\n              style: { height: \"27px\", fontSize: \"14px\" },\n            },\n          }}\n          datePickerRef={datePickerRef}\n        />\n        <TextField\n          disabled={isFieldDisable}\n          fullWidth\n          label=\"Explanation\"\n          size=\"small\"\n          name=\"Explanation\"\n          value={state.Explanation}\n          onChange={handleInputChange}\n          onKeyDown={(e: any) => {\n            if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n              return;\n            }\n          }}\n          InputProps={{\n            style: { height: \"27px\", fontSize: \"14px\" },\n            readOnly: true,\n          }}\n          sx={{\n            flex: 1,\n            \".MuiFormLabel-root\": { fontSize: \"14px\" },\n            \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n          }}\n          inputRef={explanationInputRef}\n        />\n        <button\n          ref={submitButton}\n          style={{ display: \"none\" }}\n          type=\"submit\"\n        ></button>\n      </form>\n      <br />\n      <div\n        style={{\n          display: \"flex\",\n          justifyContent: \"space-between\",\n          alignItems: \"center\",\n        }}\n      >\n        <div>\n          {buttons.map((item, idx) => {\n            return (\n              <button\n                key={idx}\n                style={{\n                  border: \"none\",\n                  outline: \"none\",\n                  backgroundColor: \"rgba(51, 51, 51, 0.05)\",\n                  borderWidth: \"0\",\n                  color: currentStepIndex === idx ? \"#7e22ce\" : \"#333333\",\n                  cursor: \"pointer\",\n                  display: \"inline-block\",\n                  fontFamily: `\"Haas Grot Text R Web\", \"Helvetica Neue\", Helvetica, Arial, sans-serif`,\n                  fontSize: \"14px\",\n                  fontWeight: \"500\",\n                  lineHeight: \"20px\",\n                  listStyle: \"none\",\n                  margin: \"0\",\n                  padding: \"10px 12px\",\n                  textAlign: \"center\",\n                  transition: \"all 200ms\",\n                  verticalAlign: \"baseline\",\n                  whiteSpace: \"nowrap\",\n                  userSelect: \"none\",\n                  touchAction: \"manipulation\",\n                  position: \"relative\",\n                  overflow: \"hidden\",\n                }}\n                onClick={() => goTo(idx)}\n              >\n                <span\n                  style={{\n                    position: \"absolute\",\n                    top: 0,\n                    bottom: 0,\n                    left: 0,\n                    right: 0,\n                    background: \"rgba(206, 214, 211, 0.18)\",\n                    transition: \"all 200ms\",\n                    transform: slideAnimation(currentStepIndex, idx),\n                  }}\n                ></span>\n                {item.title}\n              </button>\n            );\n          })}\n        </div>\n        <div>\n          Total Amount:{\" \"}\n          <strong>\n            {accountingEntry\n              .reduce(\n                (sum: any, obj: any) =>\n                  sum + parseFloat(obj.Credit.replace(/,/g, \"\")),\n                0\n              )\n              .toLocaleString(\"en-US\", {\n                style: \"decimal\",\n                minimumFractionDigits: 2,\n                maximumFractionDigits: 2,\n              })}\n          </strong>\n        </div>\n      </div>\n      <br />\n      <ReturnCheckContext.Provider\n        value={{\n          checkCollection,\n          checkSelectedCollection,\n          accountingEntry,\n          LoadingCheckList,\n          addReturnCheckLoading,\n          tableSelectedCheck,\n          dispatchModal,\n          modalSelectedMutate,\n          getSearchReturnCheckInfoLoading,\n          debitModalCollection,\n          tableAccountingEntryCheck,\n          tableSelectedCheckReturn,\n          modalSelectedCheckLoading,\n          myAxios,\n          user,\n          setCheckCollection,\n          openSelectedCheckModal,\n          setOpenSelectedCheckModal,\n          currentStepIndex,\n          fireModal,\n          stateModal,\n          datePickerModalRef,\n          setAccountingEntry,\n          handleModalInputChange,\n          LoadSelectedCheckInSelectedTable,\n          setCheckSelectedCollection,\n        }}\n      >\n        <div\n          style={{\n            display: \"flex\",\n            flexDirection: \"column\",\n            flex: 1,\n          }}\n          id=\"container\"\n        >\n          {step}\n          {ReturnChecksModal}\n          <Modal\n            open={openSelectedCheckModal}\n            onClose={() => {\n              setOpenSelectedCheckModal(false);\n              tableSelectedCheck.current?.removeSelection();\n              tableSelectedCheckReturn.current?.removeSelection();\n            }}\n            aria-labelledby=\"modal-modal-title\"\n            aria-describedby=\"modal-modal-description\"\n            onKeyDown={(e) => {\n              if (\n                currentStepIndex === 1 &&\n                (e.code === \"Backspace\" || e.code === \"Delete\")\n              ) {\n                setOpenSelectedCheckModal(false);\n\n                fireModal({\n                  onConfirmCallback: () => {\n                    setCheckSelectedCollection((d) =>\n                      d.filter((itm: any) => {\n                        return (\n                          itm.TempID.toString() !== stateModal.TempID.toString()\n                        );\n                      })\n                    );\n                    setAccountingEntry((d) => {\n                      return d.filter((itm: any) => {\n                        return (\n                          itm.Check_No.split(\"-\")[0] !==\n                          stateModal.Check_No.toString()\n                        );\n                      });\n                    });\n                  },\n\n                  onCancelCallback: () => {\n                    setOpenSelectedCheckModal(false);\n                    tableSelectedCheck.current?.removeSelection();\n                    tableSelectedCheckReturn.current?.removeSelection();\n                  },\n                });\n              }\n              if (\n                currentStepIndex === 0 &&\n                (e.code === \"Enter\" || e.code === \"NumpadEnter\")\n              ) {\n                handleAccept();\n              }\n            }}\n          >\n            <Box\n              sx={{\n                position: \"absolute\" as \"absolute\",\n                top: \"50%\",\n                left: \"50%\",\n                transform: \"translate(-50%, -50%)\",\n                width: \"80%\",\n                bgcolor: \"background.paper\",\n                p: 3,\n                boxSizing: \"border-box\",\n              }}\n            >\n              <IconButton\n                style={{\n                  position: \"absolute\",\n                  top: \"10px\",\n                  right: \"10px\",\n                }}\n                // disabled={!addNew}\n                aria-label=\"search-client\"\n                onClick={() => {\n                  setOpenSelectedCheckModal(false);\n                  tableSelectedCheck.current?.removeSelection();\n                  tableSelectedCheckReturn.current?.removeSelection();\n                  dispatchModal({\n                    type: \"UPDATE_FIELD\",\n                    field: \"TempID\",\n                    value: \"\",\n                  });\n                  dispatchModal({\n                    type: \"UPDATE_FIELD\",\n                    field: \"subSelectedChecks\",\n                    value: {},\n                  });\n                }}\n              >\n                <CloseIcon />\n              </IconButton>\n              <Typography id=\"modal-modal-title\" variant=\"body1\" component=\"h2\">\n                Return Detail and Accounting Entry (Check No.:\n                <strong>{stateModal.Check_No}</strong>)\n              </Typography>\n              <fieldset\n                style={{\n                  display: \"flex\",\n                  columnGap: \"10px\",\n                  padding: \"10px\",\n                  border: \"1px solid #cbd5e1\",\n                  borderRadius: \"5px\",\n                  marginTop: \"20px\",\n                }}\n              >\n                <legend style={{ fontSize: \"14px\" }}>Return Detail</legend>\n                <FormControl\n                  size=\"small\"\n                  variant=\"outlined\"\n                  fullWidth\n                  sx={{\n                    \".MuiFormLabel-root\": {\n                      fontSize: \"14px\",\n                      background: \"white\",\n                      zIndex: 99,\n                      padding: \"0 3px\",\n                    },\n                    \".MuiFormLabel-root[data-shrink=false]\": { top: \"-1px\" },\n                  }}\n                >\n                  <InputLabel id=\"label-selection-reason\">\n                    Return Reason\n                  </InputLabel>\n                  <Select\n                    labelId=\"label-selection-reason\"\n                    value={stateModal.ReturnReason}\n                    name=\"ReturnReason\"\n                    onChange={handleModalInputChange}\n                    autoWidth\n                    sx={{\n                      height: \"27px\",\n                      fontSize: \"14px\",\n                    }}\n                  >\n                    <MenuItem value=\"DAIF\">DAIF</MenuItem>\n                    <MenuItem value={\"DAUD\"}>DAUD</MenuItem>\n                    <MenuItem value={\"AC\"}>ACCOUNT CLOSED</MenuItem>\n                    <MenuItem value={\"SPO\"}>SPO</MenuItem>\n                    <MenuItem value={\"SD\"}>SIGNATURE DIFFERS</MenuItem>\n                  </Select>\n                </FormControl>\n                <CustomDatePicker\n                  fullWidth={true}\n                  label=\"Date Returned\"\n                  onChange={(value: any) => {\n                    dispatchModal({\n                      type: \"UPDATE_FIELD\",\n                      field: \"ModalDateReturn\",\n                      value: value.toLocaleDateString(),\n                    });\n                  }}\n                  value={new Date(stateModal.ModalDateReturn)}\n                  onKeyDown={(e: any) => {\n                    if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n                      const timeout = setTimeout(() => {\n                        datePickerModalRef.current\n                          ?.querySelector(\"button\")\n                          ?.click();\n                        clearTimeout(timeout);\n                      }, 150);\n                    }\n                  }}\n                  datePickerRef={datePickerModalRef}\n                  textField={{\n                    InputLabelProps: {\n                      style: {\n                        fontSize: \"14px\",\n                      },\n                    },\n                    InputProps: {\n                      style: { height: \"27px\", fontSize: \"14px\" },\n                    },\n                  }}\n                />\n              </fieldset>\n              <fieldset\n                style={{\n                  display: \"flex\",\n                  columnGap: \"10px\",\n                  padding: \"10px\",\n                  border: \"1px solid #cbd5e1\",\n                  borderRadius: \"5px\",\n                  marginTop: \"5px\",\n                }}\n              >\n                <legend style={{ fontSize: \"14px\" }}>Credit Entry</legend>\n                <div\n                  style={{\n                    display: \"flex\",\n                    gap: \"10px\",\n                    width: \"100%\",\n                  }}\n                >\n                  <TextField\n                    size=\"small\"\n                    label=\"Account Name\"\n                    name=\"AccountName\"\n                    value={stateModal.Short}\n                    onChange={handleModalInputChange}\n                    InputProps={{\n                      readOnly: true,\n                      style: { height: \"27px\", fontSize: \"14px\" },\n                    }}\n                    sx={{\n                      flex: 1,\n                      \".MuiFormLabel-root\": { fontSize: \"14px\" },\n                      \".MuiFormLabel-root[data-shrink=false]\": { top: \"-1px\" },\n                    }}\n                  />\n                  <TextField\n                    size=\"small\"\n                    label=\"Account ID\"\n                    name=\"AccountID\"\n                    value={stateModal.AccountID}\n                    onChange={handleModalInputChange}\n                    InputProps={{\n                      readOnly: true,\n                      style: {\n                        height: \"27px\",\n                        fontSize: \"14px\",\n                        width: \"200px\",\n                      },\n                    }}\n                    sx={{\n                      \".MuiFormLabel-root\": { fontSize: \"14px\" },\n                      \".MuiFormLabel-root[data-shrink=false]\": { top: \"-1px\" },\n                    }}\n                  />\n                  <TextField\n                    size=\"small\"\n                    label=\"Amount\"\n                    name=\"Amount\"\n                    value={stateModal.Amount}\n                    onChange={handleModalInputChange}\n                    InputProps={{\n                      readOnly: true,\n                      style: {\n                        height: \"27px\",\n                        fontSize: \"14px\",\n                        width: \"200px\",\n                      },\n                    }}\n                    sx={{\n                      \".MuiFormLabel-root\": { fontSize: \"14px\" },\n                      \".MuiFormLabel-root[data-shrink=false]\": { top: \"-1px\" },\n                    }}\n                  />\n                  <TextField\n                    size=\"small\"\n                    label=\"Sub Account\"\n                    name=\"SubAccount\"\n                    value={stateModal.SubAccount}\n                    onChange={handleModalInputChange}\n                    InputProps={{\n                      readOnly: true,\n                      style: {\n                        height: \"27px\",\n                        fontSize: \"14px\",\n                        width: \"200px\",\n                      },\n                    }}\n                    sx={{\n                      \".MuiFormLabel-root\": { fontSize: \"14px\" },\n                      \".MuiFormLabel-root[data-shrink=false]\": { top: \"-1px\" },\n                    }}\n                  />\n                </div>\n              </fieldset>\n              <fieldset\n                style={{\n                  display: \"flex\",\n                  columnGap: \"10px\",\n                  border: \"1px solid #cbd5e1\",\n                  borderRadius: \"5px\",\n                  marginTop: \"5px\",\n                }}\n              >\n                <legend style={{ fontSize: \"14px\" }}>Debit Entry</legend>\n                <div\n                  style={{\n                    marginTop: \"10px\",\n                    width: \"100%\",\n                    position: \"relative\",\n                    height: \"300px\",\n                  }}\n                >\n                  <div\n                    style={{\n                      marginTop: \"10px\",\n                      width: \"100%\",\n                      position: \"relative\",\n                    }}\n                  >\n                    <Box\n                      style={{\n                        height: \"300px\",\n                        width: \"100%\",\n                        overflowX: \"scroll\",\n                        position: \"absolute\",\n                      }}\n                    >\n                      <Table\n                        isLoading={modalSelectedCheckLoading}\n                        columns={modalDebitEntryColumn}\n                        rows={debitModalCollection}\n                        table_id={\"TempID\"}\n                        isSingleSelection={true}\n                        isRowFreeze={true}\n                        checkboxSelection={false}\n                        footerChildren={() => <DebitFooterComponent />}\n                        footerPaginationPosition=\"left-right\"\n                        showFooterSelectedCount={false}\n                      />\n                    </Box>\n                  </div>\n                </div>\n              </fieldset>\n              <div\n                style={{\n                  display: \"flex\",\n                  justifyContent: \"flex-end\",\n                  gap: \"20px\",\n                  marginTop: \"15px\",\n                }}\n              >\n                <div>\n                  <Button\n                    color=\"success\"\n                    variant=\"contained\"\n                    onClick={handleAccept}\n                    style={{ marginRight: \"10px\" }}\n                    startIcon={<CheckCircleOutlineIcon />}\n                    sx={{\n                      height: \"30px\",\n                      fontSize: \"14px\",\n                      textTransform: \"none\",\n                    }}\n                  >\n                    Accept\n                  </Button>\n                  <Button\n                    color=\"error\"\n                    variant=\"contained\"\n                    onClick={() => {\n                      setOpenSelectedCheckModal(false);\n                      tableSelectedCheck.current?.removeSelection();\n                      tableSelectedCheckReturn.current?.removeSelection();\n\n                      dispatchModal({\n                        type: \"UPDATE_FIELD\",\n                        field: \"TempID\",\n                        value: \"\",\n                      });\n                      dispatchModal({\n                        type: \"UPDATE_FIELD\",\n                        field: \"subSelectedChecks\",\n                        value: {},\n                      });\n                      // setIsSelectedFromTobeReturnTable(false);\n                    }}\n                    startIcon={<NotInterestedIcon />}\n                    sx={{\n                      height: \"30px\",\n                      fontSize: \"14px\",\n                      textTransform: \"none\",\n                    }}\n                  >\n                    Cancel\n                  </Button>\n                </div>\n              </div>\n            </Box>\n          </Modal>\n          <ConfirmationModal />\n        </div>\n      </ReturnCheckContext.Provider>\n    </div>\n  );\n}\n\nconst styles: any = {\n  overlay: {\n    position: \"fixed\",\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    backgroundColor: \"rgba(0, 0, 0, 0.5)\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n  modal: {\n    backgroundColor: \"#fff\",\n    padding: \"20px\",\n    borderRadius: \"5px\",\n    textAlign: \"center\",\n    width: \"300px\",\n  },\n  button: {\n    margin: \"0 10px\",\n    background: \"white\",\n    fontFamily: '\"Roboto\", sans-serif',\n    color: \"#475569\",\n    padding: \"5px 10px\",\n  },\n};\n\nconst useConfirmation = () => {\n  const [isOpen, setIsOpen] = useState(false);\n  const [onConfirm, setOnConfirm] = useState(() => () => {});\n  const [onCancel, setOnCancel] = useState(() => () => {});\n\n  const fireModal = (p: any) => {\n    setIsOpen(true);\n    setOnConfirm(() => p.onConfirmCallback);\n    setOnCancel(() => p.onCancelCallback);\n  };\n\n  const closeModal = () => {\n    onCancel();\n    setIsOpen(false);\n  };\n\n  const confirm = () => {\n    onConfirm();\n    setIsOpen(false);\n  };\n\n  const ConfirmationModal = () => {\n    const okRef = useRef<HTMLButtonElement>(null);\n    useEffect(() => {\n      if (isOpen) {\n        okRef.current?.focus();\n      }\n    }, []);\n    if (!isOpen) return null;\n\n    return (\n      <div style={styles.overlay}>\n        <div style={styles.modal}>\n          <p style={{ color: \"black\" }}>Do you want to proceed?</p>\n          <button ref={okRef} onClick={confirm} style={styles.button}>\n            Yes\n          </button>\n          <button onClick={closeModal} style={styles.button}>\n            No\n          </button>\n        </div>\n      </div>\n    );\n  };\n\n  return {\n    ConfirmationModal,\n    fireModal,\n  };\n};\nfunction SelectedCheck() {\n  const {\n    checkCollection,\n    LoadingCheckList,\n    dispatchModal,\n    modalSelectedMutate,\n    checkSelectedCollection,\n    getSearchReturnCheckInfoLoading,\n    tableSelectedCheck,\n    myAxios,\n    setCheckCollection,\n    user,\n  } = useContext(ReturnCheckContext);\n  const inputRef = useRef<HTMLInputElement>(null);\n  const checkColumns = [\n    {\n      field: \"DepoSlip\",\n      headerName: \"Deposit Slip\",\n      minWidth: 140,\n    },\n    {\n      field: \"DepoDate\",\n      headerName: \"Deposit Date\",\n      minWidth: 140,\n    },\n    {\n      field: \"Check_No\",\n      headerName: \"Check No\",\n      minWidth: 140,\n    },\n    {\n      field: \"Check_Date\",\n      headerName: \"Check Date\",\n      minWidth: 140,\n    },\n    {\n      field: \"Amount\",\n      headerName: \"Amount\",\n      minWidth: 160,\n      align: \"right\",\n    },\n    {\n      field: \"Bank\",\n      headerName: \"Bank\",\n      minWidth: 300,\n    },\n  ];\n\n  const { isLoading: LoadingCheckListOnSearch, mutate } = useMutation({\n    mutationKey: \"check-list\",\n    mutationFn: async (variable: any) =>\n      await myAxios.get(\n        `/task/accounting/get-check-list?checkListSearch=${variable.searchCheckList}`,\n        {\n          headers: {\n            Authorization: `Bearer ${user?.accessToken}`,\n          },\n        }\n      ),\n    onSuccess: (res) => {\n      const response = res as any;\n      setCheckCollection(response.data.checkList);\n    },\n  });\n  const mainId = generateRandomClass();\n\n  return (\n    <React.Fragment>\n      <TextField\n        inputRef={inputRef}\n        label=\"Search by check no.\"\n        name=\"searchCheckList\"\n        onKeyDown={(e) => {\n          if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n            mutate({\n              searchCheckList: inputRef.current?.value,\n            });\n          }\n          // if(e.code === 'ArrowDown'){\n          //   alert('qweqwe')\n          // }\n\n          keyBoardSelectionTable(\n            e,\n            mainId,\n            inputRef?.current as HTMLInputElement\n          );\n        }}\n        InputProps={{\n          style: { height: \"27px\", fontSize: \"14px\" },\n\n          inputRef: inputRef,\n        }}\n        sx={{\n          \".MuiFormLabel-root\": { fontSize: \"14px\" },\n          \".MuiFormLabel-root[data-shrink=false]\": { top: \"-13px\" },\n        }}\n      />\n      <div style={{ marginTop: \"10px\", width: \"100%\", position: \"relative\" }}>\n        <div\n          className={mainId}\n          style={{\n            height: `${\n              (document.getElementById(\"container\")?.getBoundingClientRect()\n                .height as number) - 30\n            }px`,\n            width: \"100%\",\n            overflowX: \"scroll\",\n            position: \"absolute\",\n          }}\n        >\n          <Table\n            ref={tableSelectedCheck}\n            isLoading={\n              LoadingCheckList ||\n              getSearchReturnCheckInfoLoading ||\n              LoadingCheckListOnSearch\n            }\n            columns={checkColumns}\n            rows={checkCollection}\n            table_id={\"TempID\"}\n            isSingleSelection={true}\n            isRowFreeze={true}\n            dataSelection={(selection, data, code) => {\n              const rowSelected = data.filter(\n                (item: any) => item.TempID === selection[0]\n              )[0];\n              if (rowSelected === undefined || rowSelected.length <= 0) {\n                return;\n              }\n              dispatchModal({\n                type: \"UPDATE_FIELD\",\n                field: \"subSelectedChecks\",\n                value: {\n                  Check_No: rowSelected.Check_No,\n                  Bank: rowSelected.Bank,\n                  Check_Date: rowSelected.Check_Date,\n                  PK: rowSelected.Check_No,\n                  DepoDate: rowSelected.DepoDate,\n                  Date_Collection: rowSelected.Date_OR,\n                  TempID: rowSelected.TempID,\n                },\n              });\n              dispatchModal({\n                type: \"UPDATE_FIELD\",\n                field: \"ReturnReason\",\n                value: \"DAIF\",\n              });\n              dispatchModal({\n                type: \"UPDATE_FIELD\",\n                field: \"TempID\",\n                value: rowSelected.TempID,\n              });\n              dispatchModal({\n                type: \"UPDATE_FIELD\",\n                field: \"Check_No\",\n                value: rowSelected.Check_No,\n              });\n\n              modalSelectedMutate({\n                BankAccount: rowSelected.BankAccount,\n                Official_Receipt: rowSelected.Official_Receipt,\n              });\n            }}\n            isRowSelectable={(params) =>\n              !checkSelectedCollection\n                .map((item: any) => item.Check_No)\n                .includes(params.row.Check_No)\n            }\n          />\n        </div>\n      </div>\n    </React.Fragment>\n  );\n}\nfunction SelectedCheckToBeReturn() {\n  const {\n    dispatchModal,\n    modalSelectedMutate,\n    checkSelectedCollection,\n    tableSelectedCheckReturn,\n  } = useContext(ReturnCheckContext);\n\n  const selectedCheckToBeReturnColumns = [\n    {\n      field: \"OR_NO\",\n      headerName: \"OR No.\",\n      minWidth: 170,\n    },\n    {\n      field: \"OR_Date\",\n      headerName: \"OR Date\",\n      minWidth: 160,\n    },\n    {\n      field: \"DepoSlip\",\n      headerName: \"Deposit Slip\",\n      minWidth: 160,\n    },\n    {\n      field: \"DepoDate\",\n      headerName: \"Deposit Date\",\n      minWidth: 160,\n    },\n    {\n      field: \"Check_No\",\n      headerName: \"Check No\",\n      minWidth: 160,\n    },\n    {\n      field: \"Check_Date\",\n      headerName: \"Check Date\",\n      minWidth: 160,\n    },\n    {\n      field: \"Amount\",\n      headerName: \"Amount\",\n      minWidth: 160,\n      align: \"right\",\n    },\n    {\n      field: \"Bank\",\n      headerName: \"Bank/Branch\",\n      minWidth: 160,\n    },\n    {\n      field: \"Bank_Account\",\n      headerName: \"Bank Account\",\n      minWidth: 160,\n    },\n    {\n      field: \"Reason\",\n      headerName: \"Reason\",\n      minWidth: 160,\n    },\n    {\n      field: \"Return_Date\",\n      headerName: \"Return Date\",\n      minWidth: 160,\n    },\n  ];\n\n  return (\n    <div style={{ marginTop: \"10px\", width: \"100%\", position: \"relative\" }}>\n      <Box\n        style={{\n          height: `${\n            (document.getElementById(\"container\")?.getBoundingClientRect()\n              .height as number) - 30\n          }px`,\n          width: \"100%\",\n          overflowX: \"scroll\",\n          position: \"absolute\",\n        }}\n      >\n        <Table\n          ref={tableSelectedCheckReturn}\n          isLoading={false}\n          columns={selectedCheckToBeReturnColumns}\n          rows={checkSelectedCollection}\n          table_id={\"TempID\"}\n          isSingleSelection={true}\n          isRowFreeze={true}\n          dataSelection={(selection, data, code) => {\n            const rowSelected = data.filter(\n              (item: any) => item.TempID === selection[0]\n            )[0];\n            if (rowSelected === undefined || rowSelected.length <= 0) {\n              return;\n            }\n            dispatchModal({\n              type: \"UPDATE_FIELD\",\n              field: \"subSelectedChecks\",\n              value: {\n                Check_No: rowSelected.Check_No,\n                Bank: rowSelected.Bank,\n                Check_Date: rowSelected.Check_Date,\n                PK: rowSelected.Check_No,\n                DepoDate: rowSelected.DepoDate,\n                Date_Collection: rowSelected.OR_Date,\n                TempID: rowSelected.TempID,\n              },\n            });\n            dispatchModal({\n              type: \"UPDATE_FIELD\",\n              field: \"ReturnReason\",\n              value: rowSelected.Reason,\n            });\n            dispatchModal({\n              type: \"UPDATE_FIELD\",\n              field: \"ModalDateReturn\",\n              value: rowSelected.Return_Date,\n            });\n            dispatchModal({\n              type: \"UPDATE_FIELD\",\n              field: \"TempID\",\n              value: rowSelected.TempID,\n            });\n            dispatchModal({\n              type: \"UPDATE_FIELD\",\n              field: \"Check_No\",\n              value: rowSelected.Check_No,\n            });\n\n            modalSelectedMutate({\n              BankAccount: rowSelected.Bank_Account,\n              Official_Receipt: rowSelected.OR_NO,\n            });\n          }}\n        />\n      </Box>\n    </div>\n  );\n}\nfunction AccountingEntry() {\n  const { accountingEntry, tableAccountingEntryCheck } =\n    useContext(ReturnCheckContext);\n  const accountingentryColumns = [\n    {\n      field: \"Code\",\n      headerName: \"Code\",\n      minWidth: 170,\n    },\n    {\n      field: \"AccountName\",\n      headerName: \"Account Name\",\n      minWidth: 160,\n    },\n    {\n      field: \"Debit\",\n      headerName: \"Debit\",\n      minWidth: 160,\n      align: \"right\",\n    },\n    {\n      field: \"Credit\",\n      headerName: \"Credit\",\n      minWidth: 160,\n      align: \"right\",\n    },\n    {\n      field: \"IDNo\",\n      headerName: \"ID No.\",\n      minWidth: 160,\n    },\n    {\n      field: \"Identity\",\n      headerName: \"Identity\",\n      minWidth: 160,\n    },\n    {\n      field: \"SubAcct\",\n      headerName: \"Sub Acct\",\n      minWidth: 160,\n    },\n    {\n      field: \"SubAcctName\",\n      headerName: \"Sub Acct Name\",\n      minWidth: 300,\n    },\n    {\n      field: \"Check_No\",\n      headerName: \"Check No\",\n      minWidth: 160,\n    },\n    {\n      field: \"Bank\",\n      headerName: \"Bank/Branch\",\n      minWidth: 160,\n    },\n    {\n      field: \"Check_Date\",\n      headerName: \"Check Date\",\n      minWidth: 160,\n    },\n    {\n      field: \"Check_Return\",\n      headerName: \"Check Return\",\n      minWidth: 160,\n    },\n    {\n      field: \"Check_Reason\",\n      headerName: \"Check Reason\",\n      minWidth: 160,\n    },\n    {\n      field: \"PK\",\n      headerName: \"PK\",\n      minWidth: 160,\n    },\n    {\n      field: \"DepoDate\",\n      headerName: \"Date Deposit\",\n      minWidth: 160,\n    },\n    {\n      field: \"Date_Collection\",\n      headerName: \"Date Collection\",\n      minWidth: 160,\n    },\n  ];\n  return (\n    <div style={{ marginTop: \"10px\", width: \"100%\", position: \"relative\" }}>\n      <Box\n        style={{\n          height: `${\n            (document.getElementById(\"container\")?.getBoundingClientRect()\n              .height as number) - 30\n          }px`,\n          width: \"100%\",\n          overflowX: \"scroll\",\n          position: \"absolute\",\n        }}\n      >\n        <Table\n          ref={tableAccountingEntryCheck}\n          isLoading={false}\n          columns={accountingentryColumns}\n          rows={accountingEntry}\n          table_id={\"TempID\"}\n          isSingleSelection={true}\n          isRowFreeze={true}\n          checkboxSelection={false}\n          footerPaginationPosition=\"left-right\"\n          footerChildren={() => <AccountingEntryFooterComponent />}\n          showFooterSelectedCount={false}\n        />\n      </Box>\n    </div>\n  );\n}\nfunction setNewStateValue(dispatch: any, obj: any) {\n  Object.entries(obj).forEach(([field, value]) => {\n    dispatch({ type: \"UPDATE_FIELD\", field, value });\n  });\n}\nfunction slideAnimation(activeButton: number, idx: number) {\n  if (activeButton === idx) {\n    return \"translateX(100%)\";\n  } else {\n    return \"translateX(0%)\";\n  }\n}\nfunction DebitFooterComponent() {\n  const { debitModalCollection } = useContext(ReturnCheckContext);\n  return (\n    <Box\n      sx={{\n        px: 2,\n        py: 1,\n        display: \"flex\",\n        justifyContent: \"flex-end\",\n        borderTop: \"2px solid #e2e8f0\",\n      }}\n    >\n      <strong>\n        Total:{\" \"}\n        {debitModalCollection\n          .reduce(\n            (sum: any, obj: any) =>\n              sum + parseFloat(obj.Credit.replace(/,/g, \"\")),\n            0\n          )\n          .toLocaleString(\"en-US\", {\n            style: \"decimal\",\n            minimumFractionDigits: 2,\n            maximumFractionDigits: 2,\n          })}\n      </strong>\n    </Box>\n  );\n}\nfunction AccountingEntryFooterComponent() {\n  const { accountingEntry } = useContext(ReturnCheckContext);\n  return (\n    <Box\n      sx={{\n        px: 2,\n        py: 1,\n        display: \"flex\",\n        justifyContent: \"flex-end\",\n        borderTop: \"2px solid #e2e8f0\",\n      }}\n    >\n      <span style={{ marginRight: \"10px\" }}>Total:</span>\n      <input\n        style={{\n          fontWeight: \"bold\",\n        }}\n        type=\"text\"\n        readOnly={true}\n        value={accountingEntry\n          .reduce(\n            (sum: any, obj: any) =>\n              sum + parseFloat(obj.Credit.replace(/,/g, \"\")),\n            0\n          )\n          .toLocaleString(\"en-US\", {\n            style: \"decimal\",\n            minimumFractionDigits: 2,\n            maximumFractionDigits: 2,\n          })}\n      />\n      <input\n        style={{\n          fontWeight: \"bold\",\n        }}\n        type=\"text\"\n        readOnly={true}\n        value={accountingEntry\n          .reduce(\n            (sum: any, obj: any) =>\n              sum + parseFloat(obj.Debit.replace(/,/g, \"\")),\n            0\n          )\n          .toLocaleString(\"en-US\", {\n            style: \"decimal\",\n            minimumFractionDigits: 2,\n            maximumFractionDigits: 2,\n          })}\n      />\n    </Box>\n  );\n}\n","import { useState, ReactElement } from \"react\";\n\nexport default function useMultipleComponent(steps: ReactElement[]) {\n  const [currentStepIndex, setCurrentStepIndex] = useState(0);\n\n  function next() {\n    setCurrentStepIndex((i) => {\n      if (i >= steps.length - 1) {\n        return i;\n      }\n      return i + 1;\n    });\n  }\n  function back() {\n    setCurrentStepIndex((i) => {\n      if (i <= 0) {\n        return i;\n      }\n      return i + 1;\n    });\n  }\n  function goTo(index: number) {\n    setCurrentStepIndex(index);\n  }\n  return {\n    step: steps[currentStepIndex],\n    goTo,\n    back,\n    next,\n    isFirstStep: currentStepIndex !== 0,\n    isLastStep: currentStepIndex === steps.length - 1,\n    currentStepIndex,\n  };\n}\n","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M16.59 7.58 10 14.17l-3.59-3.58L5 12l5 5 8-8zM12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z\"\n}), 'CheckCircleOutline');\nexports.default = _default;","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 5V2L8 6l4 4V7c3.31 0 6 2.69 6 6 0 2.97-2.17 5.43-5 5.91v2.02c3.95-.49 7-3.85 7-7.93 0-4.42-3.58-8-8-8zm-6 8c0-1.65.67-3.15 1.76-4.24L6.34 7.34C4.9 8.79 4 10.79 4 13c0 4.08 3.05 7.44 7 7.93v-2.02c-2.83-.48-5-2.94-5-5.91z\"\n}), 'RestartAlt');\nexports.default = _default;","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}"],"names":["CustomDatePicker","_ref","label","name","onChange","value","onKeyDown","inputRef","datePickerRef","fullWidth","textField","_ref$minWidth","minWidth","rest","_objectWithoutProperties","_excluded","_jsx","LocalizationProvider","dateAdapter","AdapterDateFns","children","DatePicker","_objectSpread","floatingLabelStyle","color","ref","slotProps","size","InputLabelProps","sx","fieldset","borderColor","fontSize","top","initialState","RefNo","Sub_RefNo","DateReturn","Date","Explanation","search","returnMode","searchCheckList","initialModalState","ModalDateReturn","toLocaleDateString","ReturnReason","AccountName","AccountID","Amount","SubAccount","BranchCode","IDNo","Short","Check_No","TempID","updateAmount","updateAmountID","depoBankName","depoBankIdentity","subSelectedChecks","ReturnCheckContext","createContext","checkCollection","checkSelectedCollection","accountingEntry","LoadingCheckList","addReturnCheckLoading","tableSelectedCheck","current","tableAccountingEntryCheck","tableSelectedCheckReturn","dispatchModal","modalSelectedMutate","getSearchReturnCheckInfoLoading","modalSelectedCheckLoading","debitModalCollection","myAxios","user","setCheckCollection","openSelectedCheckModal","setOpenSelectedCheckModal","currentStepIndex","fireModal","stateModal","datePickerModalRef","setAccountingEntry","handleModalInputChange","LoadSelectedCheckInSelectedTable","setCheckSelectedCollection","buttons","title","index","modalDebitEntryColumn","field","headerName","flex","align","hide","reducer","state","action","type","_defineProperty","ReturnCheck","_queryFn","_queryFn2","_mutationFn","_mutationFn2","_mutationFn3","_useConfirmation","useConfirmation","ConfirmationModal","_useContext","useContext","AuthContext","_useReducer","useReducer","_useReducer2","_slicedToArray","dispatch","_useReducer3","_useReducer4","_useMultipleComponent","useMultipleComponent","SelectedCheck","SelectedCheckToBeReturn","AccountingEntry","step","goTo","_useState","useState","_useState2","_useState3","_useState4","_useState5","_useState6","_useState7","_useState8","setDebitModalCollection","_useState9","_useState10","useRef","reloadIDButtonRef","explanationInputRef","submitButton","searchReturnChecks","_useQuery","useQuery","queryKey","queryFn","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","get","headers","Authorization","concat","accessToken","abrupt","sent","stop","apply","arguments","refetchOnWindowFocus","onSuccess","data","response","returnCheckID","return_check_id","LoadingReturnCheckLoading","isLoading","RefetchReturnCheck","refetch","_useQuery2","_callee2","_context2","res","checkList","refetchCheckList","_useMutation","useMutation","mutationKey","mutationFn","_x","_callee3","variables","_context3","post","credit","debit","console","log","Acct_Title","Account_ID","ID_No","CRLoanName","Identity","SubAcctName","SubAcctCode","reduce","sum","obj","parseFloat","Credit","replace","toLocaleString","style","minimumFractionDigits","maximumFractionDigits","mutate","_useMutation2","_x2","_callee4","_context4","selectedRow","selected","selectedChecks","map","itm","toString","setNewStateValue","RC_No","RC_Date","getSearchReturnCheckInfoMutate","_useMutation3","_x3","_callee5","_context5","isClearableError","Swal","position","icon","message","timer","addReturnCheckMutate","_useQueryModalTable","useQueryModalTable","link","url","queryUrlName","columns","width","uniqueId","responseDataKey","onSelected","selectedRowData","closeReturnChecksModal","onCloseFunction","searchRef","ReturnChecksModal","ModalComponent","openReturnChecksModal","openModal","isLoadingReturnChecksModal","closeModal","handleInputChange","e","_e$target","target","_e$target2","handleOnSave","preventDefault","then","result","wait","_explanationInputRef$","focus","length","Debit","codeCondfirmationAlert","isUpdate","cb","userCodeConfirmation","isUpdated","saveCondfirmationAlert","isConfirm","selectedRowValue","selectedCheck","Temp_OR","Official_Receipt","padStart","OR_NO","OR_Date","Date_OR","DepoSlip","DepoDate","Check_Date","Bank","Bank_Account","BankAccount","Reason","Return_Date","month","day","year","d","_toConsumableArray","handleAccept","_tableSelectedCheckRe","_tableSelectedCheck$c2","_tableSelectedCheckRe3","totalDebit","flushSync","text","showCancelButton","getSelectedRows","_tableSelectedCheckRe2","selectRow","filter","item","_tableSelectedCheck$c","generateTempId","array","lastItem","parseInt","match","forEach","Code","CRCode","CRTitle","SubAcct","Check_Return","Check_Reason","PK","Date_Collection","removeSelection","isFieldDisable","_jsxs","display","flexDirection","height","alignItems","columnGap","LoadingButton","loading","TextField","code","InputProps","Button","variant","startIcon","AddIcon","id","onClick","disabled","SaveIcon","CloseIcon","confirmButtonColor","cancelButtonColor","confirmButtonText","isConfirmed","gap","FormControl","background","zIndex","padding","InputLabel","htmlFor","OutlinedInput","readOnly","department","endAdornment","InputAdornment","IconButton","edge","RestartAltIcon","timeout","setTimeout","_datePickerRef$curren","_datePickerRef$curren2","querySelector","click","clearTimeout","justifyContent","idx","border","outline","backgroundColor","borderWidth","cursor","fontFamily","fontWeight","lineHeight","listStyle","margin","textAlign","transition","verticalAlign","whiteSpace","userSelect","touchAction","overflow","bottom","left","right","transform","slideAnimation","Provider","Modal","open","onClose","_tableSelectedCheck$c3","_tableSelectedCheckRe4","onConfirmCallback","split","onCancelCallback","_tableSelectedCheck$c4","_tableSelectedCheckRe5","Box","bgcolor","p","boxSizing","_tableSelectedCheck$c5","_tableSelectedCheckRe6","Typography","component","borderRadius","marginTop","Select","labelId","autoWidth","MenuItem","_datePickerModalRef$c","_datePickerModalRef$c2","overflowX","Table","rows","table_id","isSingleSelection","isRowFreeze","checkboxSelection","footerChildren","DebitFooterComponent","footerPaginationPosition","showFooterSelectedCount","marginRight","CheckCircleOutlineIcon","textTransform","_tableSelectedCheck$c6","_tableSelectedCheckRe7","NotInterestedIcon","styles","overlay","modal","button","_useState11","_useState12","isOpen","setIsOpen","_useState13","_useState14","onConfirm","setOnConfirm","_useState15","_useState16","onCancel","setOnCancel","confirm","okRef","useEffect","_okRef$current","_mutationFn4","_document$getElementB","_useContext2","_useMutation4","_x4","_callee6","variable","_context6","LoadingCheckListOnSearch","mainId","generateRandomClass","React","_inputRef$current","keyBoardSelectionTable","className","document","getElementById","getBoundingClientRect","dataSelection","selection","rowSelected","undefined","isRowSelectable","params","includes","row","_document$getElementB2","_useContext3","_document$getElementB3","_useContext4","AccountingEntryFooterComponent","Object","entries","_ref2","activeButton","px","py","borderTop","steps","setCurrentStepIndex","back","i","isFirstStep","isLastStep","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","source","excluded","key","getOwnPropertySymbols","sourceSymbolKeys","indexOf","prototype","propertyIsEnumerable","call"],"sourceRoot":""}