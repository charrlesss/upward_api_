{"version":3,"file":"static/js/6929.34445bdf.chunk.js","mappings":"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","sources":["components/Helmet.tsx","components/ModalWithTable.tsx","components/Table.tsx","components/UpwardFields.tsx","feautures/Admin/Task/Accounting/Deposit.tsx","hooks/useQueryModalTable.tsx","lib/confirmationAlert.ts","../node_modules/@mui/icons-material/Autorenew.js"],"sourcesContent":["\r\nimport { Helmet } from \"react-helmet\";\r\n\r\nconst PageHelmet = ({ title = '' }: { title: string }) => {\r\n    const imgUrl = process.env.REACT_APP_IMAGE_URL;\r\n    return (\r\n        <Helmet>\r\n            <title>{title}</title>\r\n            <link rel=\"icon\" type=\"image/png\" href={`${imgUrl}/logo.png`} />\r\n        </Helmet>\r\n    );\r\n};\r\n\r\nexport default PageHelmet;","import React from \"react\";\nimport {\n  GridRowSelectionModel,\n  GridRowParams,\n  GridCellParams,\n  GridTreeNode,\n} from \"@mui/x-data-grid\";\nimport { Modal, Box, Typography, IconButton, TextField } from \"@mui/material\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport Table from \"./Table\";\n\ninterface ModalWithTableParams {\n  height: number;\n  isLoading: boolean;\n  queryKey: string;\n  columns: Array<any>;\n  onSelectionChange: (rowSelectionModel: Array<any>, data: Array<any>) => void;\n  setRows: React.Dispatch<React.SetStateAction<GridRowSelectionModel>>;\n  rows: GridRowSelectionModel;\n  id: string;\n  onCloseModal: () => void;\n  onClickCloseIcon: () => void;\n  showModal: boolean;\n  searchOnChange:\n  | React.ChangeEventHandler<HTMLInputElement | HTMLTextAreaElement>\n  | undefined;\n  title?: string;\n  searchRef?: React.RefObject<HTMLInputElement>;\n  onCellKeyDown?: any;\n  onSearchKeyEnter?: (search: string) => void;\n  isRowSelectable?: ((params: GridRowParams<any>) => boolean) | undefined;\n  getCellClassName?:\n  | ((params: GridCellParams<any, any, any, GridTreeNode>) => string)\n  | undefined;\n}\n\nconst style = {\n  position: \"absolute\" as \"absolute\",\n  top: \"50%\",\n  left: \"50%\",\n  transform: \"translate(-50%, -50%)\",\n  width: \"80%\",\n  bgcolor: \"background.paper\",\n  boxShadow: 24,\n  p: 4,\n  heigth: \"auto\",\n};\n\nexport default function ModalWithTable({\n  height,\n  isLoading,\n  queryKey,\n  columns,\n  onSelectionChange,\n  setRows,\n  rows,\n  id,\n  onCloseModal,\n  showModal,\n  onClickCloseIcon,\n  searchOnChange,\n  title = \"\",\n  searchRef,\n  onCellKeyDown,\n  onSearchKeyEnter = () => { },\n  isRowSelectable,\n  getCellClassName,\n}: ModalWithTableParams) {\n  const mainId = generateRandomClass();\n\n  return (\n    <Modal\n      open={showModal}\n      onClose={onCloseModal}\n      aria-labelledby=\"modal-modal-title\"\n      aria-describedby=\"modal-modal-description\"\n    >\n      <Box sx={style}>\n        <Typography id=\"modal-modal-title\" variant=\"h6\" component=\"h2\" mb={2}>\n          {title}\n        </Typography>\n        <TextField\n          size=\"small\"\n          label=\"Search\"\n          sx={{ marginBottom: \"10px\" }}\n          fullWidth\n          onChange={searchOnChange}\n          InputProps={{\n            inputRef: searchRef,\n          }}\n          onKeyDown={(e) => {\n            if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n              e.preventDefault();\n              onSearchKeyEnter(searchRef?.current?.value as string);\n            }\n            keyBoardSelectionTable(\n              e,\n              mainId,\n              searchRef?.current as HTMLInputElement\n            );\n          }}\n        />\n        <div\n          className={`${mainId} main-table-selection-container`}\n          style={{ position: \"relative\", height: `${height + 20}px` }}\n        >\n          <Table\n            isSingleSelection={true}\n            isRowFreeze={false}\n            columns={columns}\n            isLoading={isLoading}\n            dataSelection={(selection, data, code) => {\n              onSelectionChange(selection, data);\n            }}\n            table_id={id}\n            rows={rows}\n            isRowSelectable={isRowSelectable}\n            getCellClassName={getCellClassName}\n          />\n        </div>\n\n        <div style={{ position: \"absolute\", top: \"10px\", right: \"10px\" }}>\n          <IconButton\n            aria-label=\"search-client\"\n            color=\"secondary\"\n            onClick={onClickCloseIcon}\n          >\n            <CloseIcon />\n          </IconButton>\n        </div>\n      </Box>\n    </Modal>\n  );\n}\n\nexport function generateRandomClass() {\n  const randomNumber = Math.floor(Math.random() * 10000);\n  const randomClass = \"main-\" + randomNumber;\n  return randomClass;\n}\n\nfunction keyBoardUpDown(className: string, el: HTMLElement) {\n  const firstRowParent = document.querySelector(\n    `.${className} .MuiDataGrid-row`\n  );\n  const firstInput = firstRowParent?.querySelector(\"input\");\n  firstInput?.focus();\n  const event = new MouseEvent(\"mouseenter\", {\n    bubbles: true,\n    cancelable: true,\n    view: window,\n  });\n  firstRowParent?.dispatchEvent(event);\n  firstInput?.addEventListener(\"keydown\", (es: any) => {\n    if (es.key === \"ArrowUp\") {\n      es.preventDefault();\n      el.focus();\n    }\n    if (es.key === \"ArrowUp\") {\n      firstRowParent?.classList.remove(\"hover-keyboard\");\n    }\n  });\n}\n\nexport function keyBoardSelectionTable(\n  e: React.KeyboardEvent<HTMLDivElement>,\n  className: string,\n  el: HTMLElement\n) {\n  const mainId = className;\n  if (e.code === \"ArrowDown\") {\n    const rows = document.querySelectorAll(`.${mainId} .MuiDataGrid-row`);\n    e.preventDefault();\n    rows[0]?.classList.add(\"hover-keyboard\");\n    keyBoardUpDown(className, el);\n    rows.forEach((el, idx) => {\n      el.addEventListener(\"keydown\", (es: any) => {\n        if (es.key === \"ArrowUp\") {\n          if (idx <= 0) {\n            return;\n          }\n\n          es.preventDefault();\n          rows[idx]?.classList.remove(\"hover-keyboard\");\n          rows[idx - 1]?.classList.add(\"hover-keyboard\");\n          return;\n        }\n        if (es.key === \"ArrowDown\") {\n          es.preventDefault();\n          if (idx >= rows.length - 1) {\n            return;\n          }\n          rows[idx]?.classList.remove(\"hover-keyboard\");\n          rows[idx + 1]?.classList.add(\"hover-keyboard\");\n        }\n      });\n    });\n  }\n}\n","import {\n  useState,\n  useContext,\n  createContext,\n  ReactElement,\n  forwardRef,\n  useImperativeHandle,\n} from \"react\";\nimport { Box, LinearProgress } from \"@mui/material\";\nimport {\n  DataGrid,\n  GridSlotsComponentsProps,\n  gridPageCountSelector,\n  GridPagination,\n  useGridApiContext,\n  useGridSelector,\n  GridRowSelectionModel,\n  GridColDef,\n  GridRowParams,\n  GridCellParams,\n  GridTreeNode,\n} from \"@mui/x-data-grid\";\nimport { TablePaginationProps } from \"@mui/material/TablePagination\";\nimport MuiPagination from \"@mui/material/Pagination\";\n\ninterface TableProps {\n  isLoading: boolean;\n  columns: Array<any>;\n  rows: Array<any>;\n  table_id: string;\n  isSingleSelection: boolean;\n  isRowFreeze: boolean;\n  dataSelection?: (selection: any, data: any, code: string | null) => void;\n  CustomFooterComponent?: any;\n  isRowSelectable?: ((params: GridRowParams<any>) => boolean) | undefined;\n  getCellClassName?:\n    | ((params: GridCellParams<any, any, any, GridTreeNode>) => string)\n    | undefined;\n  footerChildren?: (\n    rowSelectionModel: GridRowSelectionModel,\n    rows: Array<any>\n  ) => ReactElement;\n  footerPaginationPosition?: string;\n  showFooterSelectedCount?: boolean;\n  checkboxSelection?: boolean | undefined;\n}\n\nconst TableContext = createContext<{\n  rowSelectionModel: GridRowSelectionModel;\n  rows: Array<any>;\n  footerPaginationPosition?: string;\n  showFooterSelectedCount?: boolean;\n  footerChildren: (\n    rowSelectionModel: GridRowSelectionModel,\n    rows: Array<any>\n  ) => ReactElement;\n}>({\n  rows: [],\n  rowSelectionModel: [],\n  footerChildren: () => <div></div>,\n  footerPaginationPosition: \"right-left\",\n  showFooterSelectedCount: true,\n});\nconst Table = forwardRef(\n  (\n    {\n      isLoading,\n      columns,\n      rows,\n      table_id,\n      isSingleSelection,\n      isRowFreeze,\n      dataSelection,\n      CustomFooterComponent = DefaultooterComponent,\n      isRowSelectable,\n      getCellClassName,\n      checkboxSelection = true,\n      footerChildren = (\n        rowSelectionModel: GridRowSelectionModel,\n        rows: Array<any>\n      ) => <div></div>,\n      footerPaginationPosition = \"right-left\",\n      showFooterSelectedCount = true,\n    }: TableProps,\n    ref\n  ) => {\n    const [selectedRows, setSelectedRows] = useState<any>([]);\n\n    useImperativeHandle(ref, () => ({\n      removeSelection: () => {\n        setSelectedRows([]);\n      },\n      getSelectedRows: () => {\n        return rows.filter((item: any) =>\n          selectedRows?.includes(item[table_id])\n        );\n      },\n      setSelectedRows: (data: Array<any>) => {\n        setSelectedRows(data);\n      },\n    }));\n\n    function onSelectionChange(selection: any, data: any, code: string | null) {\n      if (dataSelection) {\n        dataSelection(selection, data, code);\n      }\n    }\n    let freezeArray: Array<any> = [];\n\n    return (\n      <TableContext.Provider\n        value={{\n          showFooterSelectedCount,\n          footerPaginationPosition,\n          rowSelectionModel: selectedRows,\n          rows,\n          footerChildren,\n        }}\n      >\n        <DataGrid\n          slots={{\n            loadingOverlay: LinearProgress,\n            footer: CustomFooterComponent,\n          }}\n          initialState={{\n            pagination: { paginationModel: { pageSize: 100 } },\n          }}\n          loading={isLoading}\n          getRowId={(row) => row[table_id]}\n          columns={columns.filter((col: any) => !col.hide) as GridColDef<any>[]}\n          rows={rows}\n          showCellVerticalBorder={true}\n          showColumnVerticalBorder={true}\n          checkboxSelection={checkboxSelection}\n          rowSelectionModel={selectedRows}\n          rowHeight={25}\n          columnHeaderHeight={35}\n          pageSizeOptions={[10, 20, 35, 50, 75, 100]}\n          sx={{\n            \"& .cash\": {\n              color: \"#ec4899\",\n            },\n            \"& .check\": {\n              color: \"#0891b2\",\n            },\n            \"& .approved\": {\n              color: \"green\",\n            },\n            \"& .pending\": {\n              color: \"orange\",\n            },\n            \"& .disapproved\": {\n              color: \"red\",\n            },\n            \"& .normal\": {\n              color: \"red\",\n            },\n            \"& .MuiDataGrid-row.Mui-selected:hover\": {\n              color: \"black\",\n              \"& .MuiSvgIcon-root \": {\n                fill: \"#3b82f6\",\n              },\n            },\n            \"& .hover-keyboard\": {\n              background: \"#2563eb\",\n              color: \"white\",\n              \"& .MuiSvgIcon-root \": {\n                fill: \"white\",\n              },\n            },\n            \"& .MuiDataGrid-row:hover\": {\n              background: \"#2563eb\",\n              color: \"white\",\n              \"& .MuiSvgIcon-root \": {\n                fill: \"white\",\n              },\n            },\n            \"& .MuiDataGrid-row.hover\": {\n              background: \"#2563eb\",\n              color: \"white\",\n              \"& .MuiSvgIcon-root \": {\n                fill: \"white\",\n              },\n            },\n            \"& .MuiTablePagination-root p \": {\n              padding: \"0 !important\",\n            },\n\n            ...{\n              \"& .MuiDataGrid-columnHeaders\": {\n                background: \"#64748b\",\n                color: \"white\",\n                fontSize: \"14px\",\n                // borderBottomColor: \"#38bdf8\",\n              },\n              \"& .MuiDataGrid-columnHeaderCheckbox .MuiDataGrid-columnHeaderTitleContainer .MuiSvgIcon-root \":\n                {\n                  display: isSingleSelection || isRowFreeze ? \"none\" : \"block\",\n                  fill: \"white\",\n                },\n              \"& .MuiDataGrid-columnHeaderCheckbox .MuiDataGrid-columnHeaderTitleContainer input \":\n                {\n                  display: isSingleSelection || isRowFreeze ? \"none\" : \"block\",\n                },\n            },\n            ...{\n              fontSize: 13,\n              fontWeight: 500,\n              \"& .MuiDataGrid-checkboxInput\": {\n                height: \"27px\",\n                width: \"27px\",\n              },\n              \"& .MuiDataGrid-checkboxInput svg\": {\n                height: \"20px\",\n                width: \"20px\",\n              },\n            },\n          }}\n          // onRowDoubleClick={(e, r) => {\n          //   console.log(e, r);\n          // }}\n\n          onRowSelectionModelChange={(selection) => {\n            if (isRowFreeze) {\n              if (selection.length <= 0) return;\n              freezeArray = selection;\n              if (selectedRows.includes(freezeArray[freezeArray.length - 1]))\n                return;\n\n              setSelectedRows(selection);\n\n              onSelectionChange([selection[selection.length - 1]], rows, null);\n              return;\n            }\n\n            if (!isRowFreeze && isSingleSelection) {\n              if (selectedRows && selectedRows?.length > 0) {\n                const selectionSet = new Set(selectedRows);\n                setSelectedRows(\n                  selection.filter((s: any) => !selectionSet.has(s))\n                );\n              } else {\n                setSelectedRows(selection);\n              }\n            } else {\n              setSelectedRows(selection);\n            }\n\n            onSelectionChange([selection[selection.length - 1]], rows, null);\n          }}\n          onCellKeyDown={(__: any, key: any) => {\n            const keyFinding = [\"NumpadEnter\", \"Enter\", \"Delete\", \"Backspace\"];\n            if (!keyFinding.includes(key.code)) {\n              return;\n            }\n            key.preventDefault();\n            if (key.code === \"Enter\" || key.code === \"NumpadEnter\") {\n              if (isSingleSelection && !isRowFreeze) {\n                return setSelectedRows((data: any) => {\n                  if (data && data.length > 0 && data[0] === __.rowNode.id) {\n                    onSelectionChange([], rows, key.code);\n                    return [];\n                  }\n                  onSelectionChange([__.rowNode.id], rows, key.code);\n                  return [__.rowNode.id];\n                });\n              } else {\n                setSelectedRows((data: any) => {\n                  if (\n                    data &&\n                    !isRowFreeze &&\n                    data.length > 0 &&\n                    data.includes(__.rowNode.id)\n                  ) {\n                    data = data.filter((item: any) => item !== __.rowNode.id);\n                    onSelectionChange([], rows, key.code);\n                    return data;\n                  }\n                  if (\n                    data &&\n                    isRowFreeze &&\n                    data.length > 0 &&\n                    data.includes(__.rowNode.id)\n                  ) {\n                    return data;\n                  }\n                  onSelectionChange([__.rowNode.id], rows, key.code);\n                  return [...data, __.rowNode.id];\n                });\n              }\n              return;\n            }\n            if (key.code === \"Delete\" || key.code === \"Backspace\") {\n              setSelectedRows([__.rowNode.id]);\n              return onSelectionChange([__.rowNode.id], rows, key.code);\n            }\n          }}\n          disableVirtualization\n          isRowSelectable={isRowSelectable}\n          getCellClassName={getCellClassName}\n        />\n      </TableContext.Provider>\n    );\n  }\n);\n\nexport default Table;\nfunction Pagination({\n  page,\n  onPageChange,\n  className,\n}: Pick<TablePaginationProps, \"page\" | \"onPageChange\" | \"className\">) {\n  const apiRef = useGridApiContext();\n  const pageCount = useGridSelector(apiRef, gridPageCountSelector);\n\n  return (\n    <MuiPagination\n      variant=\"outlined\"\n      color=\"primary\"\n      className={className}\n      count={pageCount}\n      page={page + 1}\n      onChange={(event, newPage) => {\n        onPageChange(event as any, newPage - 1);\n      }}\n    />\n  );\n}\n\nfunction CustomPagination(props: any) {\n  return <GridPagination ActionsComponent={Pagination} {...props} />;\n}\nfunction DefaultooterComponent(\n  props: NonNullable<GridSlotsComponentsProps[\"footer\"]>\n) {\n  const {\n    rowSelectionModel,\n    showFooterSelectedCount,\n    footerPaginationPosition,\n    footerChildren,\n    rows,\n  } = useContext(TableContext);\n  return (\n    <Box\n      sx={{\n        columnGap: \"50px\",\n        display: \"flex\",\n        width: \"100%\",\n        justifyContent: \"space-between\",\n        px: 3,\n        alignItems: \"center\",\n        flexDirection:\n          footerPaginationPosition === \"right-left\" ? \"row-reverse\" : \"row\",\n      }}\n    >\n      <CustomPagination {...props} />\n      <Box\n        sx={{\n          display: \"flex\",\n          justifyContent:\n            footerPaginationPosition === \"right-left\"\n              ? \"flex-start\"\n              : \"flex-end\",\n          flex: 1,\n          alignItems: \"center\",\n        }}\n      >\n        {showFooterSelectedCount && (\n          <div>Selected:{rowSelectionModel?.length}</div>\n        )}\n        <div>{footerChildren(rowSelectionModel, rows)}</div>\n      </Box>\n    </Box>\n  );\n}\n","import { HtmlHTMLAttributes, InputHTMLAttributes, useId, ReactNode, useState, LegacyRef, HTMLInputTypeAttribute, TextareaHTMLAttributes, CSSProperties } from \"react\";\nimport \"../style/design.css\";\n\n\ninterface TextInputProps {\n  input: InputHTMLAttributes<HTMLInputElement>;\n  label: HtmlHTMLAttributes<HTMLLabelElement>;\n  inputRef?: React.RefObject<HTMLInputElement>;\n  icon?: ReactNode; // New prop for the icon\n  iconPosition?: 'start' | 'end'; // New prop to choose icon position\n  onIconClick?: React.MouseEventHandler<HTMLDivElement> | undefined,\n  disableIcon?: boolean\n  containerStyle?: CSSProperties\n}\n\ninterface TextAreaPrps {\n  textarea: TextareaHTMLAttributes<HTMLTextAreaElement>\n  label: HtmlHTMLAttributes<HTMLLabelElement>;\n  _inputRef: LegacyRef<HTMLTextAreaElement>\n  icon?: ReactNode; // New prop for the icon\n  iconPosition?: 'start' | 'end'; // New prop to choose icon position\n  onIconClick?: React.MouseEventHandler<HTMLDivElement> | undefined,\n  disableIcon?: boolean\n}\n\ninterface TextFormatedInputProps extends TextInputProps {\n  onChange?: React.ChangeEventHandler<HTMLInputElement> | undefined\n}\nexport function TextFormatedInput({\n  input,\n  label,\n  inputRef,\n  icon,\n  iconPosition = 'end', // Default position is 'end'\n  disableIcon = false,\n  onIconClick = (e) => { },\n  onChange = (e) => { },\n  containerStyle\n}: TextFormatedInputProps) {\n  // const [inputValue, setInputValue] = useState('');\n  const id = useId();\n\n\n  // Helper function to format numbers with commas\n  const formatNumber = (value: string) => {\n    if (!value) return value;\n\n    // Split the value into integer and decimal parts\n    const parts = value.split('.');\n\n    // Add commas to the integer part only\n    parts[0] = parts[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n\n    // Join the integer and decimal parts if decimal exists\n    return parts.join('.');\n  };\n\n  // Helper function to remove commas\n  const unformatNumber = (value: string) => {\n    return value.replace(/,/g, '');\n  };\n\n  // Function to ensure two decimal places\n  const ensureTwoDecimals = (value: string) => {\n    // If the value has no decimal part, append '.00'\n    if (!value.includes('.')) {\n      if (value === '') {\n        return '0.00';\n      } else {\n\n        return value + '.00';\n      }\n    }\n\n    // If the value has one decimal place, append '0'\n    const parts = value.split('.');\n    if (parts[1].length === 1) {\n      return value + '0';\n    }\n\n    // If it already has two decimal places, return as is\n    return value;\n  };\n\n  const handleChange = (e: any) => {\n    let value = e.target.value;\n\n    // Remove commas for processing\n    value = unformatNumber(value);\n\n    // Allow only numbers, commas, and one decimal point\n    const regex = /^-?\\d+(,\\d{3})*(\\.\\d*)?$/;\n\n    // Remove commas for processing\n    value = unformatNumber(value);\n\n    // Check if the value is valid\n    if (value === '' || regex.test(value)) {\n      // Set the formatted value back in the input field\n\n      //setInputValue(formatNumber(value));\n      e.target.value = formatNumber(value)\n\n    }\n  };\n\n  const handleBlur = (e: any) => {\n    let value = unformatNumber(e.target.value);\n\n    // Ensure the value has two decimal places\n    value = ensureTwoDecimals(value);\n\n    // Set the value with commas and .00 (if needed)\n    // setInputValue(formatNumber(value));\n    e.target.value = formatNumber(value)\n  };\n\n  return (\n    <div\n      style={{\n        display: 'flex',\n        alignItems: 'center',\n        position: 'relative',\n        ...containerStyle // Enable absolute positioning for icon\n      }}\n    >\n      <label {...label} htmlFor={id}>\n        {label.title}\n      </label>\n      {icon && iconPosition === 'start' && (\n        <div style={{ position: 'absolute', left: '8px', zIndex: 1 }}>\n          {icon}\n        </div>\n      )}\n      <input\n        ref={inputRef}\n        id={id}\n        {...input}\n        type=\"text\"\n        style={{\n          height: '100%',\n          ...input.style,\n        }}\n        onChange={(e) => {\n          handleChange(e)\n          onChange(e)\n        }}\n        onBlur={(e) => {\n          handleBlur(e)\n        }}  // Add .00 on blur\n\n      />\n      {icon && iconPosition === 'end' && (\n        <div onClick={onIconClick}\n          style={{\n            position: 'absolute',\n            right: '2px',\n            top: \"50%\",\n            transform: \"translateY(-50%)\",\n            zIndex: 1,\n            cursor: disableIcon ? \"none\" : \"pointer\",\n            display: \"flex\",\n            alignItems: \"center\",\n            justifyContent: \"center\",\n            background: \"white\",\n            pointerEvents: disableIcon ? \"none\" : \"auto\"\n          }}>\n          {icon}\n        </div>\n\n      )\n      }\n    </div >\n  );\n}\n\n\nexport function TextInput({\n  input,\n  label,\n  inputRef,\n  icon,\n  iconPosition = 'end', // Default position is 'end'\n  disableIcon = false,\n  containerStyle,\n  onIconClick = (e) => { }\n}: TextInputProps) {\n  const id = useId();\n\n\n  return (\n    <div\n      style={{\n        display: 'flex',\n        alignItems: 'center',\n        position: 'relative',\n        ...containerStyle\n      }}\n    >\n      <label {...label} htmlFor={id}>\n        {label.title}\n      </label>\n      {icon && iconPosition === 'start' && (\n        <div style={{ position: 'absolute', left: '8px', zIndex: 1 }}>\n          {icon}\n        </div>\n      )}\n      <input\n        ref={inputRef}\n        id={id}\n        {...input}\n        style={{\n          height: '100%',\n          ...input.style,\n        }}\n      />\n      {icon && iconPosition === 'end' && (\n        <div onClick={onIconClick}\n          style={{\n            position: 'absolute',\n            right: '2px',\n            top: \"50%\",\n            transform: \"translateY(-50%)\",\n            zIndex: 1,\n            cursor: disableIcon ? \"none\" : \"pointer\",\n            display: \"flex\",\n            alignItems: \"center\",\n            justifyContent: \"center\",\n            background: \"white\",\n            pointerEvents: disableIcon ? \"none\" : \"auto\",\n          }}>\n          {icon}\n        </div>\n\n      )\n      }\n    </div >\n  );\n}\n\n\n\nexport function TextAreaInput({\n  textarea,\n  label,\n  _inputRef,\n  icon,\n  iconPosition = 'end', // Default position is 'end'\n  disableIcon = false,\n  onIconClick = (e) => { }\n}: TextAreaPrps) {\n  const id = useId();\n\n  return (\n    <div\n      style={{\n        display: 'flex',\n        alignItems: 'center',\n        position: 'relative', // Enable absolute positioning for icon\n      }}\n    >\n      <label {...label} htmlFor={id}>\n        {label.title}\n      </label>\n      {icon && iconPosition === 'start' && (\n        <div style={{ position: 'absolute', left: '8px', zIndex: 1 }}>\n          {icon}\n        </div>\n      )}\n      <textarea\n        ref={_inputRef}\n        id={id}\n        {...textarea}\n        style={{\n          height: '100%',\n          ...textarea.style,\n        }}\n\n      />\n      {icon && iconPosition === 'end' && (\n        <div onClick={onIconClick}\n          style={{\n            position: 'absolute',\n            right: '2px',\n            top: \"50%\",\n            transform: \"translateY(-50%)\",\n            zIndex: 1,\n            cursor: disableIcon ? \"none\" : \"pointer\",\n            display: \"flex\",\n            alignItems: \"center\",\n            justifyContent: \"center\",\n            background: \"white\",\n            pointerEvents: disableIcon ? \"none\" : \"auto\"\n          }}>\n          {icon}\n        </div>\n\n      )\n      }\n    </div >\n  );\n}\n\n\nexport function SelectInput({\n  select,\n  label,\n  selectRef,\n  datasource = [],\n  values = \"\",\n  display = \"\",\n  containerStyle\n}: {\n  selectRef?: React.RefObject<HTMLSelectElement>;\n  labelRef?: React.RefObject<HTMLLabelElement>;\n  select: InputHTMLAttributes<HTMLSelectElement>;\n  label: HtmlHTMLAttributes<HTMLLabelElement>;\n  datasource: Array<any>;\n  values: string;\n  display: string;\n  containerStyle?: React.CSSProperties | undefined\n}) {\n  const id = useId();\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        height: \"18px\",\n        alignItems: \"center\",\n        ...containerStyle\n      }}\n    >\n      <label {...label} htmlFor={id}>\n        {label.title}\n      </label>\n      <select\n        {...select}\n        ref={selectRef}\n        className={`select ${select.className}`}\n        style={{\n          height: \"18px\",\n          ...select.style,\n        }}\n      >\n        {datasource.map((itm, idx) => {\n          return (\n            <option key={idx} value={itm[values]}>\n              {itm[display]}\n            </option>\n          );\n        })}\n      </select>\n    </div>\n  );\n}\n\nexport function ButtonField({\n  buttonRetRef,\n  button,\n  tooltipText = \"\",\n  children,\n  disabled = false,\n}: {\n  buttonRetRef?: React.RefObject<HTMLButtonElement>;\n  button: HtmlHTMLAttributes<HTMLButtonElement>;\n  tooltipText: string;\n  children: React.ReactNode;\n  disabled?: boolean;\n}) {\n  return (\n    <div className=\"tooltip\">\n      <button\n        disabled={disabled}\n        {...button}\n        ref={buttonRetRef}\n        style={{ ...button.style, background: !disabled ? \"transparent\" : \"#f1f1f1\" }}\n        className=\"tooltip-button\"\n      >\n        {children}\n      </button>\n      {!disabled && <span className=\"tooltip-text\">{tooltipText}</span>}\n    </div>\n  );\n}\n","import {\n  useState,\n  createContext,\n  useContext,\n  CSSProperties,\n  useEffect,\n  useRef,\n  forwardRef,\n  Fragment,\n  useImperativeHandle,\n} from \"react\";\nimport { useMutation, useQuery } from \"react-query\";\nimport { AuthContext } from \"../../../../components/AuthContext\";\nimport {\n  Button,\n} from \"@mui/material\";\nimport useQueryModalTable from \"../../../../hooks/useQueryModalTable\";\nimport LoadingButton from \"@mui/lab/LoadingButton\";\nimport AddIcon from \"@mui/icons-material/Add\";\nimport SaveIcon from \"@mui/icons-material/Save\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport Swal from \"sweetalert2\";\nimport { wait } from \"@testing-library/user-event/dist/utils\";\nimport {\n  codeCondfirmationAlert,\n  saveCondfirmationAlert,\n} from \"../../../../lib/confirmationAlert\";\nimport { TextInput } from \"../../../../components/UpwardFields\";\nimport { format } from 'date-fns'\nimport AutorenewIcon from '@mui/icons-material/Autorenew';\nimport AccountBalanceIcon from '@mui/icons-material/AccountBalance';\nimport '../../../../style/laoding.css'\nimport PageHelmet from \"../../../../components/Helmet\";\n\nconst defaultCashBreakDown = [\n  { value1: \"1,000.00\", value2: \"\", value3: \"0.00\" },\n  { value1: \"500.00\", value2: \"\", value3: \"0.00\" },\n  { value1: \"200.00\", value2: \"\", value3: \"0.00\" },\n  { value1: \"100.00\", value2: \"\", value3: \"0.00\" },\n  { value1: \"50.00\", value2: \"\", value3: \"0.00\" },\n  { value1: \"20.00\", value2: \"\", value3: \"0.00\" },\n  { value1: \"10.00\", value2: \"\", value3: \"0.00\" },\n  { value1: \"5.00\", value2: \"\", value3: \"0.00\" },\n  { value1: \"2.00\", value2: \"\", value3: \"0.00\" },\n  { value1: \"1.00\", value2: \"\", value3: \"0.00\" },\n  { value1: \".50\", value2: \"\", value3: \"0.00\" },\n  { value1: \".25\", value2: \"\", value3: \"0.00\" },\n  { value1: \".10\", value2: \"\", value3: \"0.00\" },\n  { value1: \".05\", value2: \"\", value3: \"0.00\" },\n  { value1: \".01\", value2: \"\", value3: \"0.00\" },\n];\nconst buttons = [\n  {\n    title: \"Cash Collection\",\n    index: 0,\n  },\n  {\n    title: \"Check Collection\",\n    index: 1,\n  },\n  {\n    title: \"Selected Collection\",\n    index: 2,\n  },\n  {\n    title: \"Collection for Deposit\",\n    index: 3,\n  },\n];\n\nconst cashColumns = [\n  {\n    key: \"OR_No\",\n    label: \"OR No.\",\n    width: 270,\n  },\n  {\n    key: \"OR_Date\",\n    label: \"OR Date\",\n    width: 270,\n  },\n  {\n    key: \"Amount\",\n    label: \"Amount\",\n    width: 200,\n    type: \"number\",\n    cellClassName: \"super-app-theme--cell\",\n  },\n  {\n    key: \"Client_Name\",\n    label: \"Client Name\",\n    flex: 1,\n    width: 540,\n  },\n  {\n    key: \"DRCode\",\n    label: \"DRCode\",\n    hide: true,\n  },\n  {\n    key: \"ID_No\",\n    label: \"ID_No\",\n    hide: true,\n  },\n  {\n    key: \"Short\",\n    label: \"Short\",\n    hide: true,\n  },\n  {\n    key: \"Temp_OR\",\n    label: \"Temp_OR\",\n    hide: true,\n  },\n];\n\nexport const reducer = (state: any, action: any) => {\n  switch (action.type) {\n    case \"UPDATE_FIELD\":\n      return {\n        ...state,\n        [action.field]: action.value,\n      };\n    default:\n      return state;\n  }\n};\n\nconst DepositContext = createContext<any>({\n  cashCollection: [],\n  setCashCollection: () => { },\n  checkCollection: [],\n  setCheckCollection: () => { },\n  selectedCollection: [],\n  setSelectedCollection: () => { },\n  collectionForDeposit: [],\n  setCollectionForDeposit: () => { },\n  tableRows: [],\n  updateTableRowsInput: () => { },\n  LoadingCashTable: false,\n  LoadingCheckTable: false,\n  setTotal: () => { },\n  total: \"0.00\",\n  TotalCashForDeposit: \"0.00\",\n  loadingSearchByDepositSlip: false,\n});\n\nexport default function Deposit() {\n  const cashTable = useRef<any>(null)\n  const checkTable = useRef<any>(null)\n  const selectedTable = useRef<any>(null)\n  const collectionCheckTable = useRef<any>(null)\n\n  const depositSearch = useRef<HTMLInputElement>(null)\n  const inputSearchRef = useRef<HTMLInputElement>(null)\n  const refSlipCode = useRef<HTMLInputElement>(null)\n  const refDateDepo = useRef<HTMLInputElement>(null)\n  const refBankAcctCode = useRef<HTMLInputElement>(null)\n  const refBankAcctName = useRef<HTMLInputElement>(null)\n\n  const bankDepositSearch = useRef<HTMLInputElement>(null)\n  const _refTempSlipCode = useRef<string>(\"\")\n\n  const refBankAcctCodeTag = useRef('')\n  const refBankAcctNameTag = useRef('')\n  const refAcctID = useRef('')\n  const refAcctName = useRef('')\n  const refClassification = useRef('')\n  const refSubAccount = useRef('')\n  const refShortName = useRef('')\n\n  const { myAxios, user } = useContext(AuthContext);\n  const { currentStepIndex, goTo } = useMultipleComponent([0, 1, 2, 3,]);\n  const [cashCollection, setCashCollection] = useState<any>([])\n  const [checkCollection, setCheckCollection] = useState<any>([])\n  const [selectedRows, setSelectedRows] = useState<any>([])\n  const [collectionForDeposit, setCollectionForDeposit] = useState<any>([]);\n  const [tableRowsInputValue, setTableRowsInputValue] =\n    useState<Array<{ value1: string; value2: string; value3: string }>>(\n      defaultCashBreakDown\n    );\n\n\n  const [selectedRowsCashIndex, setSelectedRowsCashIndex] = useState<any>([])\n  const [selectedRowsCheckedIndex, setSelectedRowsCheckedIndex] = useState<any>([])\n\n  const [depositMode, setDepositMode] = useState('')\n  const [total, setTotal] = useState(\"0.00\");\n\n  const disabledFields = depositMode === \"\";\n\n  const TotalCashForDeposit = selectedRows\n    .reduce((accumulator: number, currentValue: any) => {\n      const dd =\n        currentValue.Check_No || currentValue.Check_No !== \"\"\n          ? 0\n          : parseFloat(currentValue.Amount.replace(/,/g, \"\"));\n      return accumulator + dd;\n    }, 0.0)\n    .toLocaleString(\"en-US\", {\n      minimumFractionDigits: 2,\n      maximumFractionDigits: 2,\n    });\n\n  const updateTableRowsInput = (\n    fields: { value1: string; value2: string; value3: string },\n    idx: number\n  ) => {\n    setTableRowsInputValue((d) => {\n      return d.map((item, index) => {\n        if (idx === index) {\n          item = { ...item, ...fields };\n        }\n        return item;\n      });\n    });\n  };\n\n  const { isLoading: LoadingDepositSlipCode, refetch: RefetchDepositSlipCode } =\n    useQuery({\n      queryKey: \"deposit-slipcode\",\n      queryFn: async () =>\n        await myAxios.get(`/task/accounting/get-deposit-slipcode`, {\n          headers: {\n            Authorization: `Bearer ${user?.accessToken}`,\n          },\n        }),\n      refetchOnWindowFocus: false,\n      onSuccess: (data) => {\n        const response = data as any;\n        wait(100).then(() => {\n          if (refSlipCode.current) {\n            refSlipCode.current.value = response.data.slipcode[0].collectionID\n            _refTempSlipCode.current = response.data.slipcode[0].collectionID\n          }\n\n        })\n      },\n    });\n\n  const {\n    ModalComponent: ModalDepostitBanks,\n    openModal: openDepositBanks,\n    isLoading: isLoadingDepostitBanks,\n    closeModal: closeDepositBanks,\n  } = useQueryModalTable({\n    link: {\n      url: \"/task/accounting/getBanks\",\n      queryUrlName: \"bankDepositSearch\",\n    },\n    columns: [\n      { field: \"Account_Type\", headerName: \"Account_Type\", width: 200 },\n      { field: \"Account_No\", headerName: \"Account_No\", width: 170 },\n      {\n        field: \"Account_Name\",\n        headerName: \"Account_Name\",\n        flex: 1,\n      },\n    ],\n    queryKey: \"bank-deposit\",\n    uniqueId: \"Account_No\",\n    responseDataKey: \"banks\",\n    onSelected: (selectedRowData) => {\n      if (selectedRowData.length > 0) {\n        if (refBankAcctCode.current)\n          refBankAcctCode.current.value = selectedRowData[0].Account_No\n        if (refBankAcctName.current)\n          refBankAcctName.current.value = selectedRowData[0].Account_Name\n\n        refBankAcctCodeTag.current = selectedRowData[0]?.IDNo\n        refBankAcctNameTag.current = selectedRowData[0]?.Desc\n        refAcctID.current = selectedRowData[0]?.Account_ID\n        refAcctName.current = selectedRowData[0]?.Short\n        refShortName.current = selectedRowData[0]?.client_name\n        refClassification.current = selectedRowData[0]?.Sub_Acct\n        refSubAccount.current = selectedRowData[0]?.ShortName\n\n        closeDepositBanks();\n      }\n    },\n    searchRef: bankDepositSearch,\n  });\n\n  const { mutate: addDepositMutation, isLoading: addDepositMutationLoading } =\n    useMutation({\n      mutationKey: \"add-deposit\",\n      mutationFn: async (variables: any) => {\n        return await myAxios.post(\"/task/accounting/add-deposit\", variables, {\n          headers: {\n            Authorization: `Bearer ${user?.accessToken}`,\n          },\n        });\n      },\n      onSuccess: (res) => {\n        const resposnse = res as any;\n        if (resposnse.data.success) {\n          wait(100).then(() => {\n            resetTables()\n            resetRefs()\n            setTableRowsInputValue(defaultCashBreakDown);\n            setSelectedRows([]);\n            setCollectionForDeposit([]);\n            setSelectedRowsCashIndex([])\n            setSelectedRowsCheckedIndex([])\n\n            refetchCashCollection()\n            refetchCheckCollection()\n            RefetchDepositSlipCode();\n            setDepositMode('')\n            goTo(0)\n\n          })\n\n\n          return Swal.fire({\n            position: \"center\",\n            icon: \"success\",\n            title: resposnse.data.message,\n            timer: 1500,\n          })\n        }\n        return Swal.fire({\n          position: \"center\",\n          icon: \"warning\",\n          title: resposnse.data.message,\n          timer: 1500,\n        });\n      },\n    });\n\n  const {\n    mutate: updateDepositMutation,\n    isLoading: updateDepositMutationLoading,\n  } = useMutation({\n    mutationKey: \"update-deposit\",\n    mutationFn: async (variables: any) => {\n      return await myAxios.post(\"/task/accounting/update-deposit\", variables, {\n        headers: {\n          Authorization: `Bearer ${user?.accessToken}`,\n        },\n      });\n    },\n    onSuccess: (res) => {\n      const resposnse = res as any;\n      if (resposnse.data.success) {\n        wait(100).then(() => {\n          resetTables()\n          resetRefs()\n          setTableRowsInputValue(defaultCashBreakDown);\n          setSelectedRows([]);\n          setCollectionForDeposit([]);\n          setSelectedRowsCashIndex([])\n          setSelectedRowsCheckedIndex([])\n\n          refetchCashCollection()\n          refetchCheckCollection()\n          RefetchDepositSlipCode();\n          setDepositMode('')\n          goTo(0)\n\n\n        })\n        return Swal.fire({\n          position: \"center\",\n          icon: \"success\",\n          title: resposnse.data.message,\n          timer: 1500,\n        });\n      }\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: resposnse.data.message,\n        timer: 1500,\n      });\n    },\n  });\n\n  const { mutate: searchByDepositSlip, isLoading: loadingSearchByDepositSlip } =\n    useMutation({\n      mutationKey: \"search-deposit-cash-check\",\n      mutationFn: async (variables: any) => {\n        return await myAxios.post(\n          \"/task/accounting/search-cash-check\",\n          variables,\n          {\n            headers: {\n              Authorization: `Bearer ${user?.accessToken}`,\n            },\n          }\n        );\n      },\n      onSuccess: (res) => {\n        const obj = res.data.data.obj\n        const cash = res.data.data.cash\n        const check = res.data.data.checks\n        const cash_breakdown = res.data.data.cash_breakdown\n\n        setCashCollection([])\n        setCheckCollection([])\n        setSelectedRows([])\n        setCollectionForDeposit([])\n        setTableRowsInputValue([])\n        wait(100).then(() => {\n          collectionCheckTable.current.resetTable()\n          selectedTable.current.resetTable()\n          cashTable.current.resetTable()\n          checkTable.current.resetTable()\n\n          if (refBankAcctCode.current)\n            refBankAcctCode.current.value = obj.refBankAcctCode\n          if (refBankAcctName.current)\n            refBankAcctName.current.value = obj.refBankAcctName\n          if (refDateDepo.current)\n            refDateDepo.current.value = format(new Date(obj.refDate), \"yyyy-MM-dd\")\n\n          refBankAcctCodeTag.current = obj?.refBankAcctCodeTag\n          refBankAcctNameTag.current = obj?.refBankAcctNameTag\n          refAcctID.current = obj?.refAcctID\n          refAcctName.current = obj?.refAcctName\n          refShortName.current = obj?.client_name\n          refClassification.current = obj?.refClassification\n          refSubAccount.current = obj?.refSubAccount\n\n          cashTable.current.setDataFormated(cash)\n          checkTable.current.setDataFormated(check)\n          setCashCollection(cash)\n          setCheckCollection(check)\n          setTableRowsInputValue(cash_breakdown)\n\n\n\n          setTimeout(() => {\n            cash.forEach((d: any, idx: number) => {\n              if (refSlipCode.current && d.SlipCode === refSlipCode.current.value) {\n                const row = cashTable.current.parentElement().querySelector(`.tr-row-${idx}`);\n                const col = row.querySelectorAll('td')[0]\n                const checkbox = col.querySelector('input') as HTMLInputElement\n                if (checkbox) {\n                  checkbox.click()\n                }\n              }\n            });\n\n            check.forEach((d: any, idx: number) => {\n              if (refSlipCode.current && d.SlipCode === refSlipCode.current.value) {\n                const row = checkTable.current.parentElement().querySelector(`.tr-row-${idx}`);\n                const col = row.querySelectorAll('td')[0]\n                const checkbox = col.querySelector('input') as HTMLInputElement\n                if (checkbox) {\n                  checkbox.click()\n                }\n              }\n            });\n\n          }, 200)\n\n        })\n        setDepositMode('edit')\n\n      },\n    });\n\n  const {\n    ModalComponent: ModalDeposit,\n    openModal: openDeposit,\n    isLoading: isLoadingDeposit,\n    closeModal: closeDeposit,\n  } = useQueryModalTable({\n    link: {\n      url: \"/task/accounting/search-deposit\",\n      queryUrlName: \"searchDeposit\",\n    },\n    columns: [\n      { field: \"Date\", headerName: \"Date\", width: 150 },\n      { field: \"SlipCode\", headerName: \"Slip Code\", width: 170 },\n      {\n        field: \"BankAccount\",\n        headerName: \"Bank Account\",\n        width: 170,\n      },\n      {\n        field: \"AccountName\",\n        headerName: \"Account Name\",\n        flex: 1,\n      },\n    ],\n    queryKey: \"deposit-search\",\n    uniqueId: \"SlipCode\",\n    responseDataKey: \"deposit\",\n    onSelected: (selectedRowData) => {\n      const SlipCode = selectedRowData[0].SlipCode;\n      searchByDepositSlip({ SlipCode });\n\n      wait(100).then(() => {\n        if (refSlipCode.current) {\n          refSlipCode.current.value = SlipCode\n        }\n      })\n\n      closeDeposit();\n    },\n    onCloseFunction: (value: any) => {\n      if (inputSearchRef.current) {\n        inputSearchRef.current.value = \"\"\n      }\n    },\n    searchRef: depositSearch,\n  });\n\n  const { isLoading: loadingCashCollection, refetch: refetchCashCollection } =\n    useQuery({\n      queryKey: \"get-cash-collection\",\n      queryFn: async () =>\n        await myAxios.get(`/task/accounting/get-cash-collection`, {\n          headers: {\n            Authorization: `Bearer ${user?.accessToken}`,\n          },\n        }),\n      onSuccess: (data) => {\n        const response = data as any;\n        if (depositMode === 'edit') {\n          setCashCollection((d: any) => {\n            const filteredData = d.filter((itm: any) => {\n              return refSlipCode.current && itm.SlipCode === refSlipCode.current.value\n            })\n            return [...response.data.cash, ...filteredData]\n          })\n        } else {\n          setCashCollection(response.data.cash)\n          wait(100).then(() => {\n            cashTable.current.setDataFormated(response.data.cash)\n          })\n        }\n      },\n    });\n\n  const { isLoading: loadingCheckCollection, refetch: refetchCheckCollection } =\n    useQuery({\n      queryKey: \"get-check-collection\",\n      queryFn: async () =>\n        await myAxios.get(`/task/accounting/get-check-collection`, {\n          headers: {\n            Authorization: `Bearer ${user?.accessToken}`,\n          },\n        }),\n      onSuccess: (data) => {\n        const response = data as any;\n        if (depositMode === 'edit') {\n          setCashCollection((d: any) => {\n            const filteredData = d.filter((itm: any) => {\n              return refSlipCode.current && itm.SlipCode === refSlipCode.current.value\n            })\n            return [...response.data.check, ...filteredData]\n          })\n        } else {\n          setCheckCollection(response.data.check)\n          wait(100).then(() => {\n            checkTable.current.setDataFormated(response.data.check)\n          })\n        }\n\n      },\n    });\n\n  const handleOnSave = (e: any) => {\n    e.preventDefault();\n    if (refBankAcctCode.current && refBankAcctCode.current?.value.length >= 200) {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: \"Bank Account is too long!\",\n        timer: 1500,\n      });\n    }\n    if (refBankAcctCode.current && refBankAcctCode.current?.value === \"\") {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: \"Please provide bank account\",\n        timer: 1500,\n      }).then((result) => {\n        wait(350).then(() => {\n          openDepositBanks();\n        });\n      });\n    }\n    if (selectedRows.length <= 0) {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: \"No selected collection to be deposit\",\n        timer: 1500,\n      });\n    }\n    if (TotalCashForDeposit.trim() !== total.trim()) {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: \"Cash breakdown is not balance\",\n        timer: 1500,\n      });\n    }\n    const state = {\n      depositSlip: refSlipCode.current?.value,\n      depositdate: refDateDepo.current?.value,\n      BankAcctCode: refBankAcctCode.current?.value,\n      BankAcctName: refBankAcctName.current?.value,\n      BankAcctCodeTag: refBankAcctCodeTag.current,\n      BankAcctNameTag: refBankAcctNameTag.current,\n      AcctID: refAcctID.current,\n      AcctName: refAcctName.current,\n      Classification: refClassification.current,\n      SubAccount: refSubAccount.current,\n      ShortName: refShortName.current,\n    }\n    if (depositMode === \"edit\") {\n      codeCondfirmationAlert({\n        isUpdate: true,\n        cb: (userCodeConfirmation) => {\n\n          updateDepositMutation({\n            ...state,\n            userCodeConfirmation,\n            selectedCollection: JSON.stringify(selectedRows),\n            tableRowsInputValue: JSON.stringify(tableRowsInputValue),\n          });\n        },\n      });\n    } else {\n      saveCondfirmationAlert({\n        isConfirm: () => {\n          addDepositMutation({\n            ...state,\n            selectedCollection: JSON.stringify(selectedRows),\n            tableRowsInputValue: JSON.stringify(tableRowsInputValue),\n          });\n        },\n      });\n    }\n  };\n\n  function resetRefs() {\n\n    if (refBankAcctCode.current) {\n      refBankAcctCode.current.value = ''\n    }\n    if (refBankAcctName.current) {\n      refBankAcctName.current.value = ''\n    }\n    if (bankDepositSearch.current)\n      bankDepositSearch.current.value = ''\n    refBankAcctCodeTag.current = ''\n    refBankAcctNameTag.current = ''\n    refAcctID.current = ''\n    refAcctName.current = ''\n    refClassification.current = ''\n    refSubAccount.current = ''\n    refShortName.current = ''\n  }\n\n  function resetTables() {\n    cashTable.current.resetTable()\n    checkTable.current.resetTable()\n    selectedTable.current.resetTable()\n    collectionCheckTable.current.resetTable()\n  }\n  return (\n    <>\n      <PageHelmet title=\"Deposit\" />\n      <div\n        style={{\n          display: \"flex\",\n          flexDirection: \"column\",\n          width: \"100%\",\n          height: \"100%\",\n          flex: 1,\n          padding: \"5px\",\n          background: \"#F1F1F1\"\n        }}\n      >\n        <div\n          style={{\n            display: \"flex\",\n            alignItems: \"center\",\n            columnGap: \"5px\",\n          }}\n        >\n          {isLoadingDeposit ? (\n            <LoadingButton loading={isLoadingDeposit} />\n          ) : (\n            <TextInput\n              label={{\n                title: \"Search: \",\n                style: {\n                  fontSize: \"12px\",\n                  fontWeight: \"bold\",\n                  width: \"50px\",\n                },\n              }}\n              input={{\n                className: \"search-input-up-on-key-down\",\n                type: \"search\",\n                onKeyDown: (e) => {\n                  if (e.key === \"Enter\" || e.key === \"NumpadEnter\") {\n                    e.preventDefault();\n                    openDeposit(inputSearchRef.current?.value);\n                  }\n                  if (e.key === \"ArrowDown\") {\n                    e.preventDefault();\n                    const datagridview = document.querySelector(\n                      \".grid-container\"\n                    ) as HTMLDivElement;\n                    datagridview.focus();\n                  }\n                },\n                style: { width: \"500px\" },\n              }}\n              inputRef={inputSearchRef}\n            />\n          )}\n          {disabledFields && (\n            <Button\n              sx={{\n                height: \"30px\",\n                fontSize: \"11px\",\n              }}\n              variant=\"contained\"\n              startIcon={<AddIcon sx={{ width: 15, height: 15 }} />}\n              id=\"entry-header-save-button\"\n              onClick={() => {\n                setDepositMode(\"add\")\n\n              }}\n            >\n              New\n            </Button>\n          )}\n          <LoadingButton\n            sx={{\n              height: \"30px\",\n              fontSize: \"11px\",\n            }}\n            id=\"save-entry-header\"\n            color=\"primary\"\n            variant=\"contained\"\n            type=\"submit\"\n            onClick={handleOnSave}\n            disabled={disabledFields}\n            startIcon={<SaveIcon sx={{ width: 15, height: 15 }} />}\n            loading={updateDepositMutationLoading || addDepositMutationLoading}\n          >\n            Save\n          </LoadingButton>\n          {!disabledFields && (\n            <Button\n              sx={{\n                height: \"30px\",\n                fontSize: \"11px\",\n              }}\n              variant=\"contained\"\n              startIcon={<CloseIcon sx={{ width: 15, height: 15 }} />}\n              color=\"error\"\n              onClick={() => {\n                Swal.fire({\n                  title: \"Are you sure?\",\n                  text: \"You won't be able to revert this!\",\n                  icon: \"warning\",\n                  showCancelButton: true,\n                  confirmButtonColor: \"#3085d6\",\n                  cancelButtonColor: \"#d33\",\n                  confirmButtonText: \"Yes, cancel it!\",\n                }).then((result) => {\n                  if (result.isConfirmed) {\n                    wait(100).then(() => {\n                      resetTables()\n                      resetRefs()\n                      setTableRowsInputValue(defaultCashBreakDown);\n                      setSelectedRows([]);\n                      setCollectionForDeposit([]);\n                      setSelectedRowsCashIndex([])\n                      setSelectedRowsCheckedIndex([])\n\n                      refetchCashCollection()\n                      refetchCheckCollection()\n                      RefetchDepositSlipCode();\n                      setDepositMode('')\n                      goTo(0)\n                    })\n                  }\n                });\n              }}\n            >\n              Cancel\n            </Button>\n          )}\n        </div>\n        <br />\n        <form\n          onKeyDown={(e) => {\n            if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n              e.preventDefault();\n              return;\n            }\n          }}\n          style={{\n            display: \"flex\",\n            gap: \"10px\",\n          }}\n        >\n          {LoadingDepositSlipCode ? \"Loading...\" : <TextInput\n            label={{\n              title: \"Slip Code: \",\n              style: {\n                fontSize: \"12px\",\n                fontWeight: \"bold\",\n                width: \"70px\",\n              },\n            }}\n            input={{\n              disabled: disabledFields,\n              className: \"search-input-up-on-key-down\",\n              type: \"text\",\n              style: { width: \"200px\" },\n            }}\n            inputRef={refSlipCode}\n            icon={<AutorenewIcon sx={{ fontSize: \"18px\" }} />}\n            onIconClick={(e) => {\n              e.preventDefault()\n              RefetchDepositSlipCode()\n            }}\n          />}\n          <TextInput\n            label={{\n              title: \"Deposit Date: \",\n              style: {\n                fontSize: \"12px\",\n                fontWeight: \"bold\",\n                width: \"80px\",\n              },\n            }}\n            input={{\n              defaultValue: format(new Date(), \"yyyy-MM-dd\"),\n              className: \"search-input-up-on-key-down\",\n              type: \"date\",\n              style: { width: \"200px\" },\n              disabled: disabledFields\n            }}\n            inputRef={refDateDepo}\n          />\n\n          {isLoadingDepostitBanks ? (\n            \"Loading...\"\n          ) : (\n            <TextInput\n              label={{\n                title: \"Bank Account: \",\n                style: {\n                  fontSize: \"12px\",\n                  fontWeight: \"bold\",\n                  width: \"100px\",\n                },\n              }}\n              input={{\n                className: \"search-input-up-on-key-down\",\n                type: \"text\",\n                style: { width: \"200px\" },\n                onKeyDown: (e) => {\n                  if (e.key === \"Enter\" || e.key === \"NumpadEnter\") {\n                    e.preventDefault();\n                    openDepositBanks(refBankAcctCode.current?.value)\n                  }\n\n                },\n                disabled: disabledFields\n              }}\n              inputRef={refBankAcctCode}\n              icon={<AccountBalanceIcon sx={{ fontSize: \"18px\", color: disabledFields ? \"gray\" : \"black\" }} />}\n              onIconClick={(e) => {\n                e.preventDefault()\n                openDepositBanks(refBankAcctCode.current?.value)\n              }}\n              disableIcon={disabledFields}\n            />)}\n\n          <TextInput\n            label={{\n              title: \"Account Name: \",\n              style: {\n                fontSize: \"12px\",\n                fontWeight: \"bold\",\n                width: \"100px\",\n              },\n            }}\n            input={{\n              className: \"search-input-up-on-key-down\",\n              type: \"text\",\n              style: { width: \"200px\" },\n              readOnly: true,\n              disabled: disabledFields\n\n            }}\n            inputRef={refBankAcctName}\n          />\n          <button\n            // ref={submitButton}\n            style={{ display: \"none\" }}\n            type=\"submit\"\n          ></button>\n        </form>\n        <br />\n        <div>\n          <div style={{ display: \"flex\" }}>\n            {buttons.map((item, idx) => {\n              return (\n                <button\n                  key={idx}\n                  disabled={disabledFields}\n                  style={{\n                    border: \"1px solid #c0c0c0\",\n                    outline: \"none\",\n                    backgroundColor: currentStepIndex === idx ? \"#c0c0c0\" : \"rgba(51, 51, 51, 0.05)\",\n                    borderWidth: \"0\",\n                    color: \"black\",\n                    cursor: \"pointer\",\n                    display: \"inline-block\",\n                    fontFamily: `\"Haas Grot Text R Web\", \"Helvetica Neue\", Helvetica, Arial, sans-serif`,\n                    fontSize: \"14px\",\n                    fontWeight: \"500\",\n                    lineHeight: \"20px\",\n                    listStyle: \"none\",\n                    margin: \"0\",\n                    padding: \"10px 12px\",\n                    textAlign: \"center\",\n                    verticalAlign: \"baseline\",\n                    whiteSpace: \"nowrap\",\n                    userSelect: \"none\",\n                    touchAction: \"manipulation\",\n                    position: \"relative\",\n                    overflow: \"hidden\",\n                    borderRadius: \"0px\",\n                  }}\n                  onClick={() => {\n                    if (idx === 0) {\n                      refetchCashCollection()\n                    } else if (idx === 1) {\n                      refetchCheckCollection()\n                    }\n                    goTo(idx)\n                  }}\n                >\n                  <span\n                    style={{\n                      position: \"absolute\",\n                      top: 0,\n                      bottom: 0,\n                      left: 0,\n                      right: 0,\n                      background: \"rgba(206, 214, 211, 0.18)\",\n                      transition: \"all 200ms\",\n                      transform: slideAnimation(currentStepIndex, idx),\n                    }}\n                  ></span>\n                  {item.title}\n                </button>\n              );\n            })}\n          </div>\n        </div>\n        <DepositContext.Provider\n          value={{\n            cashCollection,\n            setCashCollection,\n            checkCollection,\n            setCheckCollection,\n            selectedRows,\n            setSelectedRows,\n            collectionForDeposit,\n            setCollectionForDeposit,\n            total,\n            setTotal,\n            TotalCashForDeposit,\n            tableRows: tableRowsInputValue,\n            setTableRowsInputValue,\n            updateTableRowsInput,\n            loadingCheckCollection,\n            loadingCashCollection,\n            selectedRowsCashIndex,\n            setSelectedRowsCashIndex,\n            selectedRowsCheckedIndex,\n            setSelectedRowsCheckedIndex,\n            cashTable,\n            checkTable,\n            selectedTable,\n            collectionCheckTable,\n            refetchCheckCollection,\n            refetchCashCollection,\n            disabledFields\n          }}\n        >\n          <div\n            style={{\n              display: \"flex\",\n              flexDirection: \"column\",\n              flex: 1,\n            }}\n            id=\"concatiner\"\n          >\n            <div style={{ display: currentStepIndex === 0 ? \"block\" : \"none\" }}>\n              <CashCollection />\n            </div>\n            <div style={{ display: currentStepIndex === 1 ? \"block\" : \"none\" }}>\n              <CheckCollection />\n            </div>\n            <div style={{ display: currentStepIndex === 2 ? \"block\" : \"none\" }}>\n              <SelectedCollection />\n            </div>\n            <div style={{ display: currentStepIndex === 3 ? \"block\" : \"none\" }}>\n              <CollectionForDeposit />\n            </div>\n          </div>\n        </DepositContext.Provider>\n        {ModalDepostitBanks}\n        {ModalDeposit}\n        {(loadingSearchByDepositSlip || updateDepositMutationLoading || addDepositMutationLoading) && <div className=\"loading-component\"><div className=\"loader\"></div></div>}\n      </div>\n    </>\n\n  );\n}\nfunction slideAnimation(activeButton: number, idx: number) {\n  if (activeButton === idx) {\n    return \"translateX(100%)\";\n  } else {\n    return \"translateX(0%)\";\n  }\n}\nfunction CashCollection() {\n  const {\n    cashCollection,\n    setSelectedRows,\n    cashTable,\n    disabledFields\n  } = useContext(DepositContext);\n\n\n\n  return (\n    <div\n      style={{\n        flex: 1,\n        marginTop: \"10px\",\n        width: \"100%\",\n        position: \"relative\",\n      }}\n    >\n      <DepositTable\n        disbaleTable={disabledFields}\n        ref={cashTable}\n        columns={cashColumns}\n        rows={cashCollection}\n        getSelectedItem={(rowItm: any, colItm: any, rowIdx: any, colIdx: any) => {\n          const rowSelected = rowItm;\n          setSelectedRows((d: any) => {\n            const newSelected: any = {\n              Deposit: \"Cash\",\n              Check_No: \"\",\n              Check_Date: \"\",\n              Bank: \"\",\n              Amount: rowSelected[2],\n              Name: rowSelected[3],\n              RowIndex: d.length + 1,\n              DRCode: rowSelected[4],\n              ORNo: rowSelected[0],\n              DRRemarks: \"\",\n              IDNo: rowSelected[5],\n              TempOR: rowSelected[7],\n              Short: rowSelected[6],\n            };\n\n            d = [...d, newSelected];\n            return d;\n          });\n\n\n        }}\n      />\n    </div>\n  );\n}\nfunction CheckCollection() {\n  const {\n    checkCollection,\n    setSelectedRows,\n    checkTable,\n    setCollectionForDeposit,\n    disabledFields\n  } = useContext(DepositContext)\n  const checkColumns = [\n    {\n      key: \"OR_No\",\n      label: \"OR No.\",\n      width: 170,\n    },\n    {\n      key: \"OR_Date\",\n      label: \"OR Date\",\n      width: 170,\n    },\n    {\n      key: \"Check_No\",\n      label: \"Check No\",\n      width: 170,\n    },\n    {\n      key: \"Check_Date\",\n      label: \"Check Date\",\n      width: 170,\n    },\n    {\n      key: \"Amount\",\n      label: \"Amount\",\n      width: 160,\n      align: \"right\",\n    },\n    {\n      key: \"Bank_Branch\",\n      label: \"Bank/Branch\",\n      width: 300,\n    },\n    {\n      key: \"Client_Name\",\n      label: \"Client Name\",\n      width: 300,\n    },\n    {\n      key: \"Temp_OR\",\n      hide: true,\n    },\n    {\n      key: \"DRCode\",\n      hide: true,\n    },\n    {\n      key: \"DRRemarks\",\n      hide: true,\n    },\n    {\n      key: \"ID_No\",\n      hide: true,\n    },\n    {\n      key: \"Short\",\n      hide: true,\n    },\n    {\n      key: \"SlipCode\",\n      hide: true,\n    },\n  ];\n\n\n  return (\n    <div\n      style={{\n        marginTop: \"10px\",\n        width: \"100%\",\n        position: \"relative\",\n        flex: 1,\n      }}\n    >\n\n      <DepositTable\n        disbaleTable={disabledFields}\n        ref={checkTable}\n        columns={checkColumns}\n        rows={checkCollection}\n        getSelectedItem={(rowItm: any, colItm: any, rowIdx: any, colIdx: any) => {\n          const rowSelected = rowItm;\n          setSelectedRows((d: any) => {\n            const newSelected: any = {\n              Deposit: \"Check\",//0\n              Check_No: rowSelected[2],//1\n              Check_Date: rowSelected[3],//2\n              Bank: rowSelected[5],//3\n              Amount: rowSelected[4],//4\n              Name: rowSelected[6],//5\n              DRCode: rowSelected[8],//7\n              ORNo: rowSelected[0],//8\n              DRRemarks: rowSelected[9],//9\n              IDNo: rowSelected[10],//10\n              TempOR: rowSelected[7],//11\n              Short: rowSelected[11],//12\n            };\n            d = [...d, newSelected];\n            return d;\n          });\n\n          setCollectionForDeposit((d: any) => {\n            const newSelectedCheckForDeposit: any = {\n              Bank: rowSelected[5],\n              Check_No: rowSelected[2],\n              Amount: rowSelected[4],\n              TempOR: rowSelected[7],\n            };\n            d = [...d, newSelectedCheckForDeposit];\n            return d;\n          });\n\n        }}\n      />\n    </div>\n  );\n\n\n\n}\nfunction SelectedCollection() {\n  const {\n    setSelectedRows,\n    selectedRows,\n    selectedTable,\n    cashTable,\n    checkTable,\n    setCollectionForDeposit,\n    collectionForDeposit,\n    collectionCheckTable\n  } = useContext(DepositContext);\n\n  const selectedCollectionColumns = [\n    { key: \"Deposit\", label: \"Deposit\", width: 170 },\n    { key: \"Check_No\", label: \"Check No\", width: 170 },\n    {\n      key: \"Check_Date\",\n      label: \"Check Date\",\n      width: 170,\n    },\n    { key: \"Bank\", label: \"Bank/Branch\", width: 200 },\n    { key: \"Amount\", label: \"Amount\", width: 170 },\n    { key: \"Name\", label: \"Client Name\", width: 400 },\n    // hide\n    { key: \"DRCode\", label: \"DRCode\", hide: true },\n    { key: \"ORNo\", label: \"ORNo\", hide: true },\n    { key: \"DRRemarks\", label: \"DRRemarks\", hide: true },\n    { key: \"IDNo\", label: \"IDNo\", hide: true },\n    { key: \"TempOR\", label: \"TempOR\", hide: true },\n    { key: \"Short\", label: \"Short\", hide: true },\n  ];\n\n  return (\n    <div\n      style={{\n        marginTop: \"10px\",\n        width: \"100%\",\n        position: \"relative\",\n        flex: 1,\n      }}\n    >\n      <DepositTableSelected\n        ref={selectedTable}\n        columns={selectedCollectionColumns}\n        rows={selectedRows}\n        getSelectedItem={(rowItm: any, colItm: any, rowIdx: any, colIdx: any) => {\n          const rowSelected = rowItm;\n          const selectedData = selectedTable.current.getData()\n\n          if (rowSelected[0] === 'Cash') {\n            const cashData = cashTable.current.getData()\n            const getSelectedRow = cashTable.current.getSelectedRow()\n            const rowIdx = cashData.findIndex((itm: any) => itm[7] === rowSelected[10])\n            const index = getSelectedRow.indexOf(rowIdx);\n            if (index !== -1) {\n              getSelectedRow.splice(index, 1);\n            }\n            cashTable.current.setSelectedRow(getSelectedRow)\n          } else {\n            const cashData = checkTable.current.getData()\n            const getSelectedRow = checkTable.current.getSelectedRow()\n            const rowIdx = cashData.findIndex((itm: any) => itm[7] === rowSelected[10])\n            const index = getSelectedRow.indexOf(rowIdx);\n            if (index !== -1) {\n              getSelectedRow.splice(index, 1);\n            }\n            checkTable.current.setSelectedRow(getSelectedRow)\n          }\n\n          setSelectedRows((d: any) => {\n            if (d.length === 1 && d[0].TempOR === rowSelected[10]) {\n              return []\n            }\n            return d.filter((itm: any) => itm.TempOR !== rowSelected[10])\n          })\n\n\n\n          const newData = (d: any) => {\n            if (d.length === 1 && d[0].TempOR === rowSelected[10]) {\n              return []\n            }\n            return d.filter((item: any) => item.TempOR !== rowSelected[10]);\n          }\n          const dd = newData(collectionForDeposit)\n          setCollectionForDeposit(dd);\n\n          const columns = collectionCheckTable.current?.getColumns()\n          collectionCheckTable.current?.setData(dd.map((itm: any) => {\n            return columns.map((col: any) => itm[col.key])\n          }))\n\n\n          if (selectedData.length === 1 && selectedData[0][10] === rowSelected[10]) {\n            return selectedTable.current.setData([])\n          } else {\n            const newSelectedData = selectedData.filter((itm: any) => {\n              return itm[10] !== rowSelected[10]\n            })\n            selectedTable.current.setData(newSelectedData)\n          }\n\n\n\n        }}\n      />\n    </div>\n  );\n\n\n}\nfunction CollectionForDeposit() {\n  const {\n    collectionForDeposit,\n    tableRows,\n    total,\n    setTotal,\n    TotalCashForDeposit,\n    collectionCheckTable\n  } = useContext(DepositContext);\n\n  useEffect(() => {\n    setTotal(\n      tableRows\n        ?.reduce((accumulator: any, currentValue: any) => {\n          return (\n            accumulator + parseFloat(currentValue.value3.replace(/,/g, \"\"))\n          );\n        }, 0.0)\n        .toLocaleString(\"en-US\", {\n          minimumFractionDigits: 2,\n          maximumFractionDigits: 2,\n        })\n    );\n  }, [tableRows, setTotal]);\n\n\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        gap: \"10px\",\n        height: \"auto \",\n      }}\n    >\n      <fieldset\n        style={{\n          flexDirection: \"column\",\n          gap: \"10px\",\n          border: \"1px solid #cbd5e1\",\n          borderRadius: \"5px\",\n          width: \"70%\",\n          position: \"relative\",\n        }}\n      >\n        <legend>Checks</legend>\n        <DepositTableSelected\n          isTableSelectable={false}\n          ref={collectionCheckTable}\n          width=\"100%\"\n          columns={[\n            {\n              key: \"Bank\",\n              label: \"Bank/Branch\",\n              width: 170,\n            },\n            {\n              key: \"Check_No\",\n              label: \"Check No\",\n              width: 170,\n            },\n            {\n              key: \"Amount\",\n              label: \"Amount\",\n              width: 300,\n            },\n          ]}\n          rows={collectionForDeposit}\n          getSelectedItem={(rowItm: any, colItm: any, rowIdx: any, colIdx: any) => {\n          }}\n        />\n      </fieldset>\n      <fieldset\n        style={{\n          flexDirection: \"column\",\n          gap: \"10px\",\n          border: \"1px solid #cbd5e1\",\n          borderRadius: \"5px\",\n          alignSelf: \"flex-end\",\n          display: \"flex\",\n          width: \"30%\",\n        }}\n      >\n        <legend\n          style={{\n            color: total === TotalCashForDeposit ? \"green\" : \"#ec4899\",\n          }}\n        >\n          Cash ( {TotalCashForDeposit} )\n        </legend>\n        <table\n          id=\"cash-breakdown-table\"\n          style={{\n            border: \"2px solid black\",\n            borderCollapse: \"collapse\",\n            width: \"100%\",\n            background: \"white\"\n          }}\n        >\n\n          <thead>\n            <tr\n              style={{\n                borderBottom: \"2px solid black\",\n                fontSize: \"14px\",\n              }}\n            >\n              <th\n                style={{\n                  borderRight: \"2px solid black\",\n                }}\n              >\n                Denominations\n              </th>\n              <th\n                style={{\n                  borderRight: \"2px solid black\",\n                }}\n              >\n                QTY\n              </th>\n              <th\n                style={{\n                  borderRight: \"2px solid black\",\n                }}\n              >\n                Amount\n              </th>\n            </tr>\n          </thead>\n          <tbody>\n            {tableRows?.map((items: any, idx: number) => {\n              return <TrComponent\n                key={idx}\n                value1={items.value1}\n                value2={items.value2}\n                value3={items.value3}\n                idx={idx}\n              />\n            })}\n          </tbody>\n          <tfoot>\n            <tr\n              style={{\n                borderTop: \"2px solid black\",\n                height: \"50px\",\n              }}\n            >\n              <td colSpan={3}>\n                <div\n                  style={{\n                    display: \"flex\",\n                    justifyContent: \"flex-end\",\n                    padding: \"0 10px  \",\n\n                  }}\n                >\n                  <div\n                    style={{\n                      display: \"flex\",\n                      alignItems: \"center\",\n                      width: \"250px\",\n                      textAlign: \"right\"\n                    }}\n                  >\n                    <span style={{ fontSize: \"12px\", marginRight: \"5px\", fontWeight: \"bold\" }}>\n                      Total Cash Deposit:\n                    </span>\n                    <input\n                      style={{\n                        fontWeight: \"bold\",\n                        border: \"1px solid black\",\n                        textAlign: \"right\",\n                        fontSize: \"13px\",\n                        width: \"117px\",\n                      }}\n                      value={total}\n                      onChange={(e) => {\n                        setTotal(e.target.value);\n                      }}\n                      readOnly={true}\n                    />\n                  </div>\n                </div>\n              </td>\n            </tr>\n          </tfoot>\n        </table>\n      </fieldset>\n\n\n    </div>\n  );\n}\nfunction TrComponent({ value1, value2, value3, idx }: any) {\n  const { updateTableRowsInput } = useContext(DepositContext);\n\n  const [input1, setInput1] = useState(value1);\n  const [input2, setInput2] = useState(value2);\n  const [input3, setInput3] = useState(value3);\n  const InputStyle: CSSProperties = {\n    textAlign: \"right\",\n    height: \"18px\",\n    borderRight: \"none\",\n    borderLeft: \"none\",\n    borderTop: \"none\",\n    outline: \"none\",\n    borderBottom: \"1px solid #cbd5e1\",\n    padding: \"0 8px\",\n    width: \"100%\",\n    fontSize: \"11px\",\n    margin: \"0 !important\",\n\n  };\n\n  return (\n    <tr  >\n      <td\n        style={{\n          borderRight: \"2px solid black\",\n          margin: \"0\",\n          padding: \"0\",\n          height: \"15px\"\n\n        }}\n      >\n        <input\n          className={`row-${idx} col-0`}\n          type=\"text\"\n          style={InputStyle}\n          value={input1}\n          onChange={(e) => setInput1(e.target.value)}\n          readOnly={true}\n\n        />\n      </td>\n      <td\n        style={{\n          borderRight: \"2px solid black\",\n          overflow: \"hidden\",\n          margin: 0,\n          padding: \"0 !important\",\n          height: \"15px\"\n\n        }}\n      >\n        <input\n          className={`row-${idx} col-1`}\n          style={InputStyle}\n          value={input2}\n          onChange={(e) => {\n            let input1Value = input1;\n            setInput2(e.target.value);\n            if (input1.includes(\",\")) {\n              input1Value = input1.replace(/,/g, \"\").toString();\n            }\n            const valueFor3 = (\n              parseFloat(input1Value) *\n              (isNaN(parseInt(e.target.value)) ? 0 : parseInt(e.target.value))\n            ).toLocaleString(\"en-US\", {\n              minimumFractionDigits: 2,\n              maximumFractionDigits: 2,\n            });\n            setInput3(valueFor3);\n\n            updateTableRowsInput(\n              {\n                value1,\n                value2: e.target.value,\n                value3: valueFor3,\n              },\n              idx\n            );\n          }}\n          onKeyDown={(e) => {\n            if (e.code === 'Enter' || e.code === 'NumpadEnter') {\n              e.preventDefault()\n              const nextInput = document.querySelector(`#cash-breakdown-table td .row-${idx + 1}.col-1`) as HTMLInputElement\n              if (nextInput) {\n                nextInput.focus()\n              }\n            }\n          }}\n        />\n      </td>\n      <td\n        style={{\n          borderRight: \"2px solid black\",\n          margin: \"0\",\n          padding: \"0 !important\",\n          height: \"15px\"\n        }}\n      >\n        <input\n          className={`row-${idx} col-2`}\n          type=\"text\"\n          style={InputStyle}\n          value={input3}\n          onChange={(e) => setInput3(e.target.value)}\n          readOnly={true}\n        />\n      </td>\n    </tr>\n  );\n}\nconst DepositTable = forwardRef(({\n  columns,\n  rows,\n  height = \"400px\",\n  width = \"calc(100vw - 40px)\",\n  getSelectedItem,\n  disbaleTable = false\n\n}: any, ref) => {\n  const parentElementRef = useRef<any>(null)\n  const [data, setData] = useState([])\n  const [column, setColumn] = useState([])\n  const [selectedRow, setSelectedRow] = useState<Array<any>>([])\n  const totalRowWidth = column.reduce((a: any, b: any) => a + b.width, 0)\n\n\n  useEffect(() => {\n    if (columns.length > 0) {\n      setColumn(columns.filter((itm: any) => !itm.hide))\n    }\n  }, [columns])\n\n  useEffect(() => {\n    if (rows.length > 0) {\n      setData(rows.map((itm: any) => {\n        return columns.map((col: any) => itm[col.key])\n      }))\n    }\n  }, [rows, columns])\n\n  useImperativeHandle(ref, () => ({\n    getData: () => {\n      return data\n    },\n    setData: (newData: any) => {\n      setData(newData)\n    },\n    setSelectedRow: (rowIdx: any) => {\n      setSelectedRow(rowIdx)\n    },\n    getSelectedRow: (rowIdx: any) => {\n      return selectedRow\n    },\n    getColumns: () => {\n      return columns\n    },\n    resetTable: () => {\n      setData([])\n      setSelectedRow([])\n    },\n    setDataFormated: (newData: any) => {\n      setData(newData.map((itm: any) => {\n        return columns.map((col: any) => itm[col.key])\n      }))\n    },\n    parentElement: () => {\n      return parentElementRef.current\n    },\n  }))\n\n\n  return (\n    <Fragment>\n      <div ref={parentElementRef}\n        style={{\n          width,\n          height,\n          overflow: \"auto\",\n          position: \"relative\",\n          pointerEvents: disbaleTable ? \"none\" : \"auto\",\n          border: disbaleTable ? \"2px solid #8c8f8e\" : '2px solid #c0c0c0',\n          boxShadow: `inset -2px -2px 0 #ffffff, \n                        inset 2px 2px 0 #808080`\n        }}>\n        <div style={{ position: \"absolute\", width: `${totalRowWidth}px`, height: \"auto\" }}>\n          <table style={{ borderCollapse: \"collapse\", width: \"100%\", position: \"relative\" }}>\n            <thead >\n              <tr>\n                <th style={{ width: '30px', border: \"1px solid black\", position: \"sticky\", top: 0, zIndex: 1, background: \"#f0f0f0\" }}\n                ></th>\n                {\n                  column.map((colItm: any, idx: number) => {\n                    return (\n                      <th\n                        key={idx}\n                        style={{\n                          width: colItm.width,\n                          border: \"1px solid black\",\n                          position: \"sticky\",\n                          top: 0,\n                          zIndex: 1,\n                          background: \"#f0f0f0\",\n                          fontSize: \"12px\",\n                          textAlign: \"left\",\n                          padding: \"0px 5px\"\n                        }}\n                      >{colItm.label}</th>\n                    )\n                  })\n                }\n              </tr>\n            </thead>\n            <tbody>\n              {\n                data?.map((rowItm: any, rowIdx: number) => {\n                  return (\n                    <tr key={rowIdx} className={`tr-row-${rowIdx} `}>\n                      <td style={{\n                        position: \"relative\", borderBottom: \"1px solid black\",\n                        borderLeft: \"1px solid black\",\n                        borderTop: \"none\",\n                        borderRight: \"1px solid black\",\n                        cursor: \"pointer\",\n                        background: selectedRow.includes(rowIdx) ? \"#bae6fd\" : \"\",\n                      }}\n                      >\n                        <input\n                          className=\"check-input\"\n                          style={{\n                            cursor: \"pointer\",\n                            height: \"10px\",\n                            background: \"transparent\"\n                          }}\n                          readOnly={true}\n                          type=\"checkbox\"\n                          checked={selectedRow.includes(rowIdx)}\n                          onClick={() => {\n                            if (selectedRow.includes(rowIdx)) {\n                              return\n                            }\n\n                            setSelectedRow((d: any) => {\n                              return [...d, rowIdx]\n                            })\n\n                            if (getSelectedItem) {\n                              getSelectedItem(rowItm, null, rowIdx, null)\n                            }\n                          }}\n\n                        />\n                      </td>\n\n                      {\n                        column.map((colItm: any, colIdx: number) => {\n                          return (\n                            <td\n                              onDoubleClick={() => {\n                                if (selectedRow.includes(rowIdx)) {\n                                  return\n                                }\n\n                                setSelectedRow((d: any) => {\n                                  return [...d, rowIdx]\n                                })\n                                if (getSelectedItem) {\n                                  getSelectedItem(rowItm, colItm, rowIdx, colIdx)\n                                }\n                              }}\n                              key={colIdx}\n                              style={{\n                                border: \"1px solid black\",\n                                background: selectedRow.includes(rowIdx) ? \"#cbd5e1\" : \"transparent\",\n                                fontSize: \"12px\",\n                                padding: \"0px 5px\",\n                                cursor: \"pointer\",\n                              }}\n                            >{\n                                <input\n                                  readOnly={true}\n                                  value={rowItm[colIdx]}\n                                  style={{\n                                    width: colItm.width,\n                                    pointerEvents: \"none\",\n                                    border: \"none\",\n                                    background: \"transparent\",\n                                    userSelect: \"none\"\n                                  }} />\n                              }</td>\n                          )\n                        })\n                      }\n                    </tr>\n                  )\n                })\n              }\n            </tbody>\n          </table>\n        </div>\n      </div>\n    </Fragment>\n  )\n})\nconst DepositTableSelected = forwardRef(({\n  columns,\n  rows,\n  height = \"400px\",\n  getSelectedItem,\n  disbaleTable = false,\n  isTableSelectable = true\n}: any, ref) => {\n  const parentElementRef = useRef<any>(null)\n  const [data, setData] = useState([])\n  const [column, setColumn] = useState([])\n  const [selectedRow, setSelectedRow] = useState<any>(0)\n  const totalRowWidth = column.reduce((a: any, b: any) => a + b.width, 0)\n\n\n  useEffect(() => {\n    if (columns.length > 0) {\n      setColumn(columns.filter((itm: any) => !itm.hide))\n    }\n  }, [columns])\n\n  useEffect(() => {\n    if (rows.length > 0) {\n      setData(rows.map((itm: any) => {\n        return columns.map((col: any) => itm[col.key])\n      }))\n    }\n  }, [rows, columns])\n\n  useImperativeHandle(ref, () => ({\n    getData: () => {\n      return data\n    },\n    setData: (newData: any) => {\n      setData(newData)\n    },\n    getColumns: () => {\n      return columns\n    },\n    resetTable: () => {\n      setData([])\n      setSelectedRow(0)\n    },\n    setDataFormated: (newData: any) => {\n      setData(newData.map((itm: any) => {\n        return columns.map((col: any) => itm[col.key])\n      }))\n    }\n  }))\n\n\n\n\n\n  return (\n    <Fragment>\n      <div\n        ref={parentElementRef}\n        style={{\n          width: \"100%\",\n          height,\n          overflow: \"auto\",\n          position: \"relative\",\n          pointerEvents: disbaleTable ? \"none\" : \"auto\",\n          border: disbaleTable ? \"2px solid #8c8f8e\" : '2px solid #c0c0c0',\n          boxShadow: `inset -2px -2px 0 #ffffff, \n                      inset 2px 2px 0 #808080`\n\n        }}>\n        <div style={{ position: \"absolute\", width: `${totalRowWidth}px`, height: \"auto\" }}>\n          <table style={{ borderCollapse: \"collapse\", width: \"100%\", position: \"relative\" }}>\n            <thead >\n              <tr>\n                <th style={{\n                  width: '30px', border: \"1px solid black\",\n                  position: \"sticky\",\n                  top: 0,\n                  zIndex: 1,\n                  background: \"#f0f0f0\"\n                }}\n                ></th>\n                {\n                  column.map((colItm: any, idx: number) => {\n                    return (\n                      <th\n                        key={idx}\n                        style={{\n                          width: colItm.width,\n                          border: \"1px solid black\",\n                          position: \"sticky\",\n                          top: 0,\n                          zIndex: 1,\n                          background: \"#f0f0f0\",\n                          fontSize: \"12px\",\n                          textAlign: \"left\",\n                          padding: \"0px 5px\"\n                        }}\n                      >{colItm.label}</th>\n                    )\n                  })\n                }\n              </tr>\n            </thead>\n            <tbody>\n              {\n                data?.map((rowItm: any, rowIdx: number) => {\n                  return (\n                    <tr key={rowIdx}>\n                      <td style={{\n                        position: \"relative\", borderBottom: \"1px solid black\",\n                        borderLeft: \"1px solid black\",\n                        borderTop: \"none\",\n                        borderRight: \"1px solid black\",\n                        cursor: \"pointer\",\n                        background: selectedRow === rowIdx ? \"#bae6fd\" : \"#f0f0f0\",\n                      }}>\n                        <input\n                          style={{\n                            cursor: \"pointer\",\n                            height: \"10px\"\n                          }}\n                          readOnly={true}\n                          checked={false}\n                          type=\"checkbox\"\n                          onClick={() => {\n                            if (!isTableSelectable) {\n                              return\n                            }\n\n                            if (getSelectedItem) {\n                              getSelectedItem(rowItm, null, rowIdx, null)\n                            }\n                            setSelectedRow(null)\n\n                          }}\n\n                        />\n                      </td>\n\n                      {\n                        column.map((colItm: any, colIdx: number) => {\n                          return (\n                            <td\n                              onDoubleClick={() => {\n                                if (!isTableSelectable) {\n                                  return\n                                }\n                                if (getSelectedItem) {\n                                  getSelectedItem(rowItm, null, rowIdx, null)\n                                }\n                                setSelectedRow(null)\n\n                              }}\n                              onClick={() => {\n                                setSelectedRow(rowIdx)\n                              }}\n                              key={colIdx}\n                              style={{\n                                border: \"1px solid black\",\n                                background: selectedRow === rowIdx ? \"#cbd5e1\" : \"transparent\",\n                                fontSize: \"12px\",\n                                padding: \"0px 5px\",\n                                cursor: \"pointer\",\n                              }}\n                            >{\n                                <input\n                                  readOnly={true}\n                                  value={rowItm[colIdx]}\n                                  style={{\n                                    width: colItm.width,\n                                    pointerEvents: \"none\",\n                                    border: \"none\",\n                                    background: \"transparent\",\n                                    userSelect: \"none\"\n                                  }} />\n                              }</td>\n                          )\n                        })\n                      }\n                    </tr>\n                  )\n                })\n              }\n            </tbody>\n          </table>\n        </div>\n      </div>\n    </Fragment>\n  )\n})\nfunction useMultipleComponent(steps: any) {\n  const [currentStepIndex, setCurrentStepIndex] = useState(0);\n\n\n  function goTo(index: number) {\n    // Ensure the index is within bounds\n    if (index >= 0 && index < steps.length) {\n      setCurrentStepIndex(index);\n    }\n  }\n\n  return {\n    goTo,\n    currentStepIndex,\n  };\n}\n\n\n\n","import { useContext, useState } from \"react\";\nimport { useQuery } from \"react-query\";\nimport { AuthContext, User } from \"../components/AuthContext\";\nimport {\n  GridRowSelectionModel,\n  GridCellParams,\n  GridTreeNode,\n} from \"@mui/x-data-grid\";\nimport ModalWithTable from \"../components/ModalWithTable\";\nimport { flushSync } from \"react-dom\";\nimport { AxiosResponse, AxiosInstance } from \"axios\";\nimport { GridRowParams } from \"@mui/x-data-grid\";\ninterface QueryModalTableParamsType {\n  link?: {\n    url: string;\n    queryUrlName: string;\n  };\n  uniqueId: string;\n  queryKey: string;\n  responseDataKey: string;\n  columns: Array<any>;\n  onSelected?: (selectedRowData: Array<any>, data: Array<any>) => void;\n  onRemoveSelected?: (data: Array<any>) => void;\n  onSuccess?: (data: any) => void;\n  searchRef?: React.RefObject<HTMLInputElement>;\n  onCellKeyDown?: any;\n  onCloseFunction?: (search: any) => void;\n  CustomizeAxios?: (\n    myAxios: AxiosInstance,\n    user: User | null,\n    link: QueryModalTableParamsType[\"link\"],\n    search?: string\n  ) => Promise<AxiosResponse<any, any>>;\n  isRowSelectable?: ((params: GridRowParams<any>) => boolean) | undefined;\n  getCellClassName?:\n    | ((params: GridCellParams<any, any, any, GridTreeNode>) => string)\n    | undefined;\n}\n\nasync function CustomizeAxiosFunc(\n  myAxios: AxiosInstance,\n  user: User | null,\n  link: QueryModalTableParamsType[\"link\"],\n  search: string = \"\"\n) {\n  return myAxios.get(`${link?.url}?${link?.queryUrlName}=${search}`, {\n    headers: {\n      Authorization: `Bearer ${user?.accessToken}`,\n    },\n  });\n}\n\nconst useQueryModalTable = ({\n  link,\n  uniqueId,\n  queryKey,\n  responseDataKey,\n  columns,\n  onSelected = () => {},\n  onRemoveSelected = () => {},\n  onSuccess = () => {},\n  searchRef,\n  onCellKeyDown,\n  onCloseFunction = () => {},\n  CustomizeAxios = CustomizeAxiosFunc,\n  isRowSelectable,\n  getCellClassName,\n}: QueryModalTableParamsType) => {\n  const { myAxios, user } = useContext(AuthContext);\n  const [show, setShowModal] = useState(false);\n  const [rows, setRows] = useState<GridRowSelectionModel>([]);\n  async function customizeAxiostool(search: string = \"\") {\n    return await CustomizeAxios(myAxios, user, link, search);\n  }\n  const { isLoading, refetch } = useQuery({\n    queryKey: queryKey,\n    queryFn: async () => await customizeAxiostool(),\n    onSuccess: (res) => {\n      const response = res as any;\n      setRows(response.data[responseDataKey]);\n      onSuccess(response);\n    },\n    refetchOnWindowFocus: false,\n  });\n\n  const openModal = (search: string = \"\") => {\n    flushSync(() => {\n      setShowModal(true);\n    });\n    if (searchRef?.current) {\n      searchRef.current.value = search;\n      customizeAxiostool(search).then((res: any) => {\n        if (!res?.data.success) {\n          return alert(`Error : ${res?.data.message}`);\n        }\n        const response = res as any;\n        setRows(response.data[responseDataKey]);\n        if (searchRef?.current) searchRef.current.focus();\n      });\n    }\n  };\n\n  const closeModal = () => {\n    setShowModal(false);\n    if (onCloseFunction) {\n      onCloseFunction(searchRef?.current?.value);\n    }\n  };\n\n  const ModalComponent = (\n    <ModalWithTable\n      getCellClassName={getCellClassName}\n      searchRef={searchRef}\n      showModal={show}\n      onCloseModal={() => {\n        setShowModal(false);\n        if (onCloseFunction) {\n          onCloseFunction(searchRef?.current?.value);\n        }\n      }}\n      onClickCloseIcon={() => {\n        setShowModal(false);\n        if (onCloseFunction) {\n          onCloseFunction(searchRef?.current?.value);\n        }\n      }}\n      searchOnChange={(e) => {\n        // myAxios\n        //   .get(`${link.url}?${link.queryUrlName}=${e.target.value}`, {\n        //     headers: {\n        //       Authorization: `Bearer ${user?.accessToken}`,\n        //     },\n        //   })\n        //   .then((res: any) => {\n        //     if (!res?.data.success) {\n        //       return alert(`Error : ${res?.data.message}`);\n        //     }\n        //     const response = res as any;\n        //     setRows(response.data[responseDataKey]);\n        //   });\n      }}\n      onSearchKeyEnter={(value) => {\n        customizeAxiostool(value).then((res: any) => {\n          if (!res?.data.success) {\n            return alert(`Error : ${res?.data.message}`);\n          }\n          const response = res as any;\n          setRows(response.data[responseDataKey]);\n        });\n      }}\n      onCellKeyDown={onCellKeyDown}\n      height={300}\n      isLoading={isLoading}\n      queryKey={queryKey}\n      columns={columns}\n      onSelectionChange={(rowSelectionModel, data) => {\n        if (rowSelectionModel.length <= 0) {\n          return onRemoveSelected(data);\n        }\n        const selectedIDs = new Set(rowSelectionModel);\n        const selectedRowData = data.filter((row: any) => {\n          return selectedIDs.has(row[uniqueId].toString());\n        });\n        if (selectedRowData.length <= 0) return;\n        onSelected(selectedRowData, data);\n      }}\n      id={uniqueId}\n      rows={rows}\n      setRows={setRows}\n      isRowSelectable={isRowSelectable}\n    />\n  );\n\n  return {\n    show,\n    rows,\n    isLoading,\n    openModal,\n    closeModal,\n    ModalComponent,\n    refetch,\n  };\n};\n\nexport default useQueryModalTable;\n","import Swal from \"sweetalert2\";\n\nexport function codeCondfirmationAlert(props: {\n  cb: (userCodeConfirmation: string) => void;\n  isUpdate: boolean;\n  isConfirm?: () => void;\n  isDeclined?: () => void;\n  text?: string;\n}) {\n  Swal.fire({\n    title: `Are you sure!`,\n    html: props?.text\n      ? props?.text\n      : props.isUpdate\n      ? `Are you sure you want to make this change?`\n      : \"Are you sure you want to delete this?\",\n    icon: \"warning\",\n    input: \"text\",\n    inputAttributes: {\n      autocapitalize: \"off\",\n    },\n    showCancelButton: true,\n    confirmButtonText: \"Save\",\n    confirmButtonColor: \"green\",\n    showLoaderOnConfirm: true,\n    preConfirm: async (userCodeConfirmation) => {\n      try {\n        props.cb(userCodeConfirmation);\n      } catch (error) {\n        Swal.showValidationMessage(`\n            Request failed: ${error}\n          `);\n      }\n    },\n    allowOutsideClick: () => !Swal.isLoading(),\n  }).then((result) => {\n    if (result.isConfirmed) {\n      if (props.isConfirm) {\n        return props.isConfirm();\n      }\n    }\n    if (props.isDeclined) {\n      props.isDeclined();\n    }\n  });\n}\n\nexport function saveCondfirmationAlert(props: {\n  isConfirm?: () => void;\n  isDeclined?: () => void;\n  text?: string;\n}) {\n  Swal.fire({\n    title: \"Are you sure?\",\n    text: props?.text ? props?.text : \"Do you want to proceed with saving?\",\n    icon: \"warning\",\n    showCancelButton: true,\n    confirmButtonColor: \"#3085d6\",\n    cancelButtonColor: \"#d33\",\n    confirmButtonText: \"Yes, save it!\",\n  }).then((result) => {\n    if (result.isConfirmed) {\n      if (props.isConfirm) {\n        return props.isConfirm();\n      }\n    }\n    if (props.isDeclined) {\n      props.isDeclined();\n    }\n  });\n}\n","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 6v3l4-4-4-4v3c-4.42 0-8 3.58-8 8 0 1.57.46 3.03 1.24 4.26L6.7 14.8c-.45-.83-.7-1.79-.7-2.8 0-3.31 2.69-6 6-6zm6.76 1.74L17.3 9.2c.44.84.7 1.79.7 2.8 0 3.31-2.69 6-6 6v-3l-4 4 4 4v-3c4.42 0 8-3.58 8-8 0-1.57-.46-3.03-1.24-4.26z\"\n}), 'Autorenew');\nexports.default = _default;"],"names":["_ref","_ref$title","title","_jsxs","Helmet","children","_jsx","rel","type","href","concat","process","style","position","top","left","transform","width","bgcolor","boxShadow","p","heigth","ModalWithTable","height","isLoading","columns","queryKey","onSelectionChange","rows","setRows","id","onCloseModal","showModal","onClickCloseIcon","searchOnChange","searchRef","_ref$onSearchKeyEnter","onCellKeyDown","onSearchKeyEnter","isRowSelectable","getCellClassName","mainId","generateRandomClass","Modal","open","onClose","Box","sx","Typography","variant","component","mb","TextField","size","label","marginBottom","fullWidth","onChange","InputProps","inputRef","onKeyDown","e","_searchRef$current","code","preventDefault","current","value","keyBoardSelectionTable","className","Table","isSingleSelection","isRowFreeze","dataSelection","selection","data","table_id","right","IconButton","color","onClick","CloseIcon","Math","floor","random","el","_rows$","document","querySelectorAll","classList","add","firstRowParent","querySelector","firstInput","focus","event","MouseEvent","bubbles","cancelable","view","window","dispatchEvent","addEventListener","es","key","remove","keyBoardUpDown","forEach","idx","_rows$idx","_rows","_rows$idx2","_rows2","length","TableContext","createContext","rowSelectionModel","footerChildren","footerPaginationPosition","showFooterSelectedCount","forwardRef","ref","_ref$CustomFooterComp","CustomFooterComponent","DefaultooterComponent","_ref$checkboxSelectio","checkboxSelection","_ref$footerChildren","_ref$footerPagination","_ref$showFooterSelect","_useState","useState","_useState2","_slicedToArray","selectedRows","setSelectedRows","useImperativeHandle","removeSelection","getSelectedRows","filter","item","includes","freezeArray","Provider","DataGrid","slots","loadingOverlay","LinearProgress","footer","initialState","pagination","paginationModel","pageSize","loading","getRowId","row","col","hide","showCellVerticalBorder","showColumnVerticalBorder","rowHeight","columnHeaderHeight","pageSizeOptions","_objectSpread","fill","background","padding","fontSize","display","fontWeight","onRowSelectionModelChange","selectionSet","Set","s","has","__","rowNode","_toConsumableArray","disableVirtualization","Pagination","_ref2","page","onPageChange","apiRef","useGridApiContext","pageCount","useGridSelector","gridPageCountSelector","MuiPagination","count","newPage","CustomPagination","props","GridPagination","ActionsComponent","_useContext","useContext","columnGap","justifyContent","px","alignItems","flexDirection","flex","TextFormatedInput","input","icon","_ref$iconPosition","iconPosition","_ref$disableIcon","disableIcon","_ref$onIconClick","onIconClick","_ref$onChange","containerStyle","useId","formatNumber","parts","split","replace","join","unformatNumber","htmlFor","zIndex","target","test","handleChange","onBlur","ensureTwoDecimals","handleBlur","cursor","pointerEvents","TextInput","_ref2$iconPosition","_ref2$disableIcon","_ref2$onIconClick","TextAreaInput","_ref3","textarea","_inputRef","_ref3$iconPosition","_ref3$disableIcon","_ref3$onIconClick","SelectInput","_ref4","select","selectRef","_ref4$datasource","datasource","_ref4$values","values","_ref4$display","map","itm","ButtonField","_ref5","buttonRetRef","button","_ref5$tooltipText","tooltipText","_ref5$disabled","disabled","defaultCashBreakDown","value1","value2","value3","buttons","index","cashColumns","cellClassName","reducer","state","action","_defineProperty","field","DepositContext","cashCollection","setCashCollection","checkCollection","setCheckCollection","selectedCollection","setSelectedCollection","collectionForDeposit","setCollectionForDeposit","tableRows","updateTableRowsInput","LoadingCashTable","LoadingCheckTable","setTotal","total","TotalCashForDeposit","loadingSearchByDepositSlip","Deposit","_queryFn","_mutationFn","_mutationFn2","_mutationFn3","_queryFn2","_queryFn3","cashTable","useRef","checkTable","selectedTable","collectionCheckTable","depositSearch","inputSearchRef","refSlipCode","refDateDepo","refBankAcctCode","refBankAcctName","bankDepositSearch","_refTempSlipCode","refBankAcctCodeTag","refBankAcctNameTag","refAcctID","refAcctName","refClassification","refSubAccount","refShortName","AuthContext","myAxios","user","_useMultipleComponent","steps","_useState37","_useState38","currentStepIndex","setCurrentStepIndex","goTo","useMultipleComponent","_useState3","_useState4","_useState5","_useState6","_useState7","_useState8","_useState9","_useState10","tableRowsInputValue","setTableRowsInputValue","_useState11","_useState12","selectedRowsCashIndex","setSelectedRowsCashIndex","_useState13","_useState14","selectedRowsCheckedIndex","setSelectedRowsCheckedIndex","_useState15","_useState16","depositMode","setDepositMode","_useState17","_useState18","disabledFields","reduce","accumulator","currentValue","Check_No","parseFloat","Amount","toLocaleString","minimumFractionDigits","maximumFractionDigits","_useQuery","useQuery","queryFn","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","get","headers","Authorization","accessToken","abrupt","sent","stop","apply","arguments","refetchOnWindowFocus","onSuccess","response","wait","then","slipcode","collectionID","LoadingDepositSlipCode","RefetchDepositSlipCode","refetch","_useQueryModalTable","useQueryModalTable","link","url","queryUrlName","headerName","uniqueId","responseDataKey","onSelected","selectedRowData","_selectedRowData$","_selectedRowData$2","_selectedRowData$3","_selectedRowData$4","_selectedRowData$5","_selectedRowData$6","_selectedRowData$7","Account_No","Account_Name","IDNo","Desc","Account_ID","Short","client_name","Sub_Acct","ShortName","closeDepositBanks","ModalDepostitBanks","ModalComponent","openDepositBanks","openModal","isLoadingDepostitBanks","closeModal","_useMutation","useMutation","mutationKey","mutationFn","_x","_callee2","variables","_context2","post","res","resposnse","success","resetTables","resetRefs","refetchCashCollection","refetchCheckCollection","Swal","message","timer","addDepositMutation","mutate","addDepositMutationLoading","_useMutation2","_x2","_callee3","_context3","updateDepositMutation","updateDepositMutationLoading","_useMutation3","_x3","_callee4","_context4","obj","cash","check","checks","cash_breakdown","resetTable","format","Date","refDate","setDataFormated","setTimeout","d","SlipCode","checkbox","parentElement","click","searchByDepositSlip","_useQueryModalTable2","closeDeposit","onCloseFunction","ModalDeposit","openDeposit","isLoadingDeposit","_useQuery2","_callee5","_context5","filteredData","loadingCashCollection","_useQuery3","_callee6","_context6","loadingCheckCollection","_Fragment","PageHelmet","LoadingButton","_inputSearchRef$curre","Button","startIcon","AddIcon","_refBankAcctCode$curr","_refBankAcctCode$curr2","_refSlipCode$current","_refDateDepo$current","_refBankAcctCode$curr3","_refBankAcctName$curr","result","trim","depositSlip","depositdate","BankAcctCode","BankAcctName","BankAcctCodeTag","BankAcctNameTag","AcctID","AcctName","Classification","SubAccount","codeCondfirmationAlert","isUpdate","cb","userCodeConfirmation","JSON","stringify","saveCondfirmationAlert","isConfirm","SaveIcon","text","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","isConfirmed","gap","AutorenewIcon","defaultValue","_refBankAcctCode$curr4","AccountBalanceIcon","_refBankAcctCode$curr5","readOnly","border","outline","backgroundColor","borderWidth","fontFamily","lineHeight","listStyle","margin","textAlign","verticalAlign","whiteSpace","userSelect","touchAction","overflow","borderRadius","bottom","transition","slideAnimation","fields","CashCollection","CheckCollection","SelectedCollection","CollectionForDeposit","activeButton","_useContext2","marginTop","DepositTable","disbaleTable","getSelectedItem","rowItm","colItm","rowIdx","colIdx","rowSelected","newSelected","Check_Date","Bank","Name","RowIndex","DRCode","ORNo","DRRemarks","TempOR","_useContext3","align","newSelectedCheckForDeposit","_useContext4","DepositTableSelected","_collectionCheckTable","_collectionCheckTable2","selectedData","getData","cashData","getSelectedRow","findIndex","indexOf","splice","setSelectedRow","dd","getColumns","setData","newSelectedData","_useContext5","useEffect","isTableSelectable","alignSelf","borderCollapse","borderBottom","borderRight","items","TrComponent","borderTop","colSpan","marginRight","_useState19","_useState20","input1","setInput1","_useState21","_useState22","input2","setInput2","_useState23","_useState24","input3","setInput3","InputStyle","borderLeft","input1Value","toString","valueFor3","isNaN","parseInt","nextInput","_ref2$height","_ref2$width","_ref2$disbaleTable","parentElementRef","_useState25","_useState26","_useState27","_useState28","column","setColumn","_useState29","_useState30","selectedRow","totalRowWidth","a","b","newData","Fragment","checked","onDoubleClick","_ref3$height","_ref3$disbaleTable","_ref3$isTableSelectab","_useState31","_useState32","_useState33","_useState34","_useState35","_useState36","CustomizeAxiosFunc","_CustomizeAxiosFunc","search","_args","undefined","_customizeAxiostool","_ref$onSelected","_ref$onRemoveSelected","onRemoveSelected","_ref$onSuccess","_ref$onCloseFunction","_ref$CustomizeAxios","CustomizeAxios","show","setShowModal","customizeAxiostool","_args2","flushSync","alert","_searchRef$current2","_searchRef$current3","selectedIDs","_preConfirm","html","inputAttributes","autocapitalize","showLoaderOnConfirm","preConfirm","error","allowOutsideClick","isDeclined","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx"],"sourceRoot":""}