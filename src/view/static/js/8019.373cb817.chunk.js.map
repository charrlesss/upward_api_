{"version":3,"file":"static/js/8019.373cb817.chunk.js","mappings":"iIAaA,IAVmB,SAAHA,GAA2C,IAADC,EAAAD,EAApCE,MAAAA,OAAK,IAAAD,EAAG,GAAEA,EAE5B,OACIE,EAAAA,EAAAA,MAACC,EAAAA,EAAM,CAAAC,SAAA,EACHC,EAAAA,EAAAA,KAAA,SAAAD,SAAQH,KACRI,EAAAA,EAAAA,KAAA,QAAMC,IAAI,OAAOC,KAAK,YAAYC,KAAI,GAAAC,OAJ/BC,IAI0C,iBAG7D,C,+pBCgCaC,EAAU,SAACC,EAAYC,GAClC,MACO,iBADCA,EAAON,MAEXO,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACKF,GAAK,IAAAG,EAAAA,EAAAA,GAAA,GACPF,EAAOG,MAAQH,EAAOI,QAGlBL,CAEb,EACaM,EAAY,CACvB,CAAEC,IAAK,WAAYC,MAAO,YAAaC,MAAO,KAC9C,CAAEF,IAAK,aAAcC,MAAO,aAAcC,MAAO,KACjD,CAAEF,IAAK,aAAcC,MAAO,SAAUC,MAAO,IAAKd,KAAM,UACxD,CAAEY,IAAK,WAAYC,MAAO,OAAQC,MAAO,KACzC,CAAEF,IAAK,SAAUC,MAAO,SAAUC,MAAO,KACzC,CACEF,IAAK,gBACLC,MAAO,kBACPC,MAAO,KAET,CAAEF,IAAK,eAAgBC,MAAO,eAAgBC,MAAO,KACrD,CAAEF,IAAK,cAAeC,MAAO,eAAgBC,MAAO,KACpD,CAAEF,IAAK,QAASC,MAAO,SAAUC,MAAO,KACxC,CAAEF,IAAK,WAAYC,MAAO,YAAaC,MAAO,IAAKC,MAAM,IAE9CC,EAAkB,CAC7B,CAAEP,MAAO,OAAQQ,WAAY,gBAAiBH,MAAO,KACrD,CAAEL,MAAO,SAAUQ,WAAY,UAAWH,MAAO,KACjD,CACEL,MAAO,OACPQ,WAAY,OACZC,KAAM,IAGGC,EAAiB,CAC5B,CAAEV,MAAO,YAAaQ,WAAY,OAAQH,MAAO,KACjD,CAAEL,MAAO,OAAQQ,WAAY,YAAaC,KAAM,IAGnC,SAASE,IAAkB,IAADC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAlC,EAAAmC,EACjCC,GAAgBC,EAAAA,EAAAA,QAAY,MAC5BC,GAAWD,EAAAA,EAAAA,QAAY,MAC7BE,EAAgCC,EAAAA,SAAmC,MAAKC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAjEI,EAAQF,EAAA,GAAEG,EAAWH,EAAA,GACtBI,EAAOC,QAAQH,GAOrBI,GAAoCC,EAAAA,EAAAA,WAAS,GAAMC,IAAAP,EAAAA,EAAAA,GAAAK,EAAA,GAA5CG,GAAUD,GAAA,GAAEE,GAAaF,GAAA,GAChCG,IAA0CJ,EAAAA,EAAAA,UAAsB,IAAGK,IAAAX,EAAAA,EAAAA,GAAAU,GAAA,GAA5DE,GAAaD,GAAA,GAAEE,GAAgBF,GAAA,GACtCG,IAAkCR,EAAAA,EAAAA,WAAS,GAAMS,IAAAf,EAAAA,EAAAA,GAAAc,GAAA,GAA1CE,GAASD,GAAA,GAAEE,GAAYF,GAAA,GAExBG,IAAiBvB,EAAAA,EAAAA,QAAyB,MAEhDwB,IAA4Cb,EAAAA,EAAAA,UAAS,MAAKc,IAAApB,EAAAA,EAAAA,GAAAmB,GAAA,GAAnDE,GAAcD,GAAA,GAAEE,GAAiBF,GAAA,GACxCG,IAA8BjB,EAAAA,EAAAA,UAAS,IAAGkB,IAAAxB,EAAAA,EAAAA,GAAAuB,GAAA,GAAnCE,GAAOD,GAAA,GAAEE,GAAUF,GAAA,GAE1BG,IAA0BC,EAAAA,EAAAA,YAAWC,EAAAA,GAA7BC,GAAOH,GAAPG,QAASC,GAAIJ,GAAJI,KAGXC,IAAerC,EAAAA,EAAAA,QAAyB,MACxCsC,IAAmBtC,EAAAA,EAAAA,QAA0B,MAE7CuC,IAAevC,EAAAA,EAAAA,QAA0B,MAEzCwC,IAAcxC,EAAAA,EAAAA,QAAO,IACrByC,IAASzC,EAAAA,EAAAA,QAAO,IAChB0C,IAAgB1C,EAAAA,EAAAA,QAAO,IAEvB2C,IAAW3C,EAAAA,EAAAA,QAAyB,MACpC4C,IAAU5C,EAAAA,EAAAA,QAAyB,MACnC6C,IAAa7C,EAAAA,EAAAA,QAA4B,MACzC8C,IAAQ9C,EAAAA,EAAAA,QAAyB,MACjC+C,IAAY/C,EAAAA,EAAAA,QAAyB,MACrCgD,IAAgBhD,EAAAA,EAAAA,QAA4B,MAElDiD,IACEC,EAAAA,EAAAA,UAAS,CACPC,SAAU,iBACVC,QAAQ,WAAD,OAAA5D,EAAAA,IAAA6D,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAE,SAAAC,IAAA,OAAAF,EAAAA,EAAAA,KAAAG,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACMzB,GAAQ0B,IAAI,sCAAuC,CAC9DC,QAAS,CACPC,cAAc,UAAD1F,OAAgB,OAAJ+D,SAAI,IAAJA,QAAI,EAAJA,GAAM4B,gBAEhC,KAAD,SAAAN,EAAAO,OAAA,SAAAP,EAAAQ,MAAA,wBAAAR,EAAAS,OAAA,GAAAX,EAAA,MACHY,MAAA,KAAAC,UAAA,EACDC,sBAAsB,EACtBC,UAAW,SAACC,GACV,IAAMC,EAAWD,GACjBE,EAAAA,EAAAA,MAAK,KAAKC,MAAK,WACbnC,GAAYoC,QAAUH,EAASI,KAAKC,MAAM,GAAGC,MACzCpC,GAASiC,UACXjC,GAASiC,QAAQ/F,MAAQ4F,EAASI,KAAKC,MAAM,GAAGC,MAEpD,GACF,IAnBeC,GAAmB/B,GAA9BgC,UAAyCC,GAAmBjC,GAA5BkC,QAsBxCC,IAA6CC,EAAAA,EAAAA,aAAY,CACvDC,YAAa,aACbC,WAAW,SAADC,GAAA,OAAA/F,EAAAA,IAAA4D,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAE,SAAAkC,EAAOC,GAAc,OAAApC,EAAAA,EAAAA,KAAAG,MAAA,SAAAkC,GAAA,cAAAA,EAAAhC,KAAAgC,EAAA/B,MAAA,UACf,WAAZ9B,GAAoB,CAAA6D,EAAA/B,KAAA,QACA,cAAf8B,EAAUE,KAAKD,EAAA/B,KAAA,EACTzB,GAAQ0D,KAAK,8BAA+BH,EAAW,CAClE5B,QAAS,CACPC,cAAc,UAAD1F,OAAgB,OAAJ+D,SAAI,IAAJA,QAAI,EAAJA,GAAM4B,gBAEhC,KAAD,EAOD,KAAD,SAAA2B,EAAA1B,OAAA,SAAA0B,EAAAzB,MAPE,OAEkB,cAAfwB,EAAUE,KAAKD,EAAA/B,KAAA,EACTzB,GAAQ0D,KAAK,2BAA4BH,EAAW,CAC/D5B,QAAS,CACPC,cAAc,UAAD1F,OAAgB,OAAJ+D,SAAI,IAAJA,QAAI,EAAJA,GAAM4B,gBAEjC,wBAAA2B,EAAAxB,OAAA,GAAAsB,EAAA,MACHrB,MAAA,KAAAC,UAAA,EACDE,UAAW,SAACC,GACV,GAAIA,EAAIK,KAAKiB,QAEX,OADAC,KACOC,IAAAA,KAAU,CACfC,SAAU,SACVC,KAAM,UACNrI,MAAO2G,EAAIK,KAAKsB,QAChBC,mBAAmB,EACnBC,MAAO,OAIXL,IAAAA,KAAU,CACRC,SAAU,SACVC,KAAM,QACNrI,MAAO2G,EAAIK,KAAKsB,QAChBC,mBAAmB,EACnBC,MAAO,MAEX,IArCMC,GAAMlB,GAANkB,OAAmBC,GAAanB,GAAxBH,UAyChBuB,IACEnB,EAAAA,EAAAA,aAAY,CACVC,YAAa,uBACbC,WAAW,SAADkB,GAAA,OAAA/G,EAAAA,IAAA2D,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAE,SAAAmD,EAAOhB,GAAc,OAAApC,EAAAA,EAAAA,KAAAG,MAAA,SAAAkD,GAAA,cAAAA,EAAAhD,KAAAgD,EAAA/C,MAAA,cAAA+C,EAAA/C,KAAA,EACzBzB,GAAQ0D,KAAK,wCAAyCH,EAAW,CACrE5B,QAAS,CACPC,cAAc,UAAD1F,OAAgB,OAAJ+D,SAAI,IAAJA,QAAI,EAAJA,GAAM4B,gBAEjC,cAAA2C,EAAA1C,OAAA,SAAA0C,EAAAzC,MAAA,wBAAAyC,EAAAxC,OAAA,GAAAuC,EAAA,MAAAtC,MAAA,KAAAC,UAAA,EACJE,UAAU,SAADqC,GAAA,OAAAjH,EAAAA,IAAA0D,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAE,SAAAsD,EAAOrC,GAAG,IAAAsC,EAAArC,EAAAsC,EAAAC,EAAAC,EAAAC,EAAAC,EAgBJC,EAAoBvC,EAAA,OAAAvB,EAAAA,EAAAA,KAAAG,MAAC,SAAD4D,GAAA,cAAAA,EAAA1D,KAAA0D,EAAAzD,MAAA,OA2BlC,GA3BcwD,EAAoB,SAAAE,EAAAC,GAAA,OAAAT,EAAAA,IAAAzD,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAnC,SAAAiE,EACEC,EACAC,GAAW,IAAAC,EAAAC,EAAAC,EAAA,OAAAvE,EAAAA,EAAAA,KAAAG,MAAA,SAAAqE,GAAA,cAAAA,EAAAnE,KAAAmE,EAAAlE,MAAA,OAEL+D,EAA8B,GAAEC,GAAAtE,EAAAA,EAAAA,KAAAC,MAAA,SAAAqE,IAAA,IAAAG,EAAAC,EAAAvD,EAAAwD,EAAAC,EAAAC,EAAC,OAAD7E,EAAAA,EAAAA,KAAAG,MAAA,SAAA2E,GAAA,cAAAA,EAAAzE,KAAAyE,EAAAxE,MAAA,OAGc,OAD5CmE,EAAYN,EAAaI,GACzBG,EAAO,GAAA3J,OAAMqJ,EAAG,KAAArJ,OAAI0J,EAAUM,gBAAcD,EAAAxE,KAAA,EAC3B0E,MAAMN,GAAS,KAAD,EAAvB,OAARvD,EAAQ2D,EAAAlE,KAAAkE,EAAAxE,KAAA,EACKa,EAASwD,OAAO,KAAD,EAA5BA,EAAIG,EAAAlE,KACJgE,EAAO,IAAIK,KAAK,CAACN,GAAOF,EAAUS,SAAU,CAChDrK,KAAM4J,EAAUU,WAEZN,EAAS,IAAIO,WACnBf,EAAgBgB,KACd,IAAIC,SAAQ,SAACC,EAASC,GACpBX,EAAOY,OAAS,SAAUC,GACxBH,EAAQX,EACV,EACAC,EAAOc,QAAU,SAAUD,GACzBF,EAAO,IAAII,MAAM,uBAAyBhB,EAAKiB,MACjD,EACAhB,EAAOiB,cAAclB,EACvB,KACA,yBAAAE,EAAAjE,OAAA,GAAAyD,EAAA,IAnBKC,EAAQ,EAAE,KAAD,OAAEA,EAAQJ,EAAa4B,QAAM,CAAAvB,EAAAlE,KAAA,eAAAkE,EAAAwB,cAAA1B,IAAA,eAAEC,IAAOC,EAAAlE,KAAA,sBAAAkE,EAAA7D,OAAA,SAqBjD0D,GAAe,wBAAAG,EAAA3D,OAAA,GAAAqD,EAAA,MACvBpD,MAAA,KAAAC,UAAA,EA1CO,OAAHG,QAAG,IAAHA,GAAAA,EAAKK,KAAKiB,QAAQ,CAADuB,EAAAzD,KAAA,eAAAyD,EAAApD,OAAA,SACbsF,MAAM,WAADlL,OAAe,OAAHmG,QAAG,IAAHA,OAAG,EAAHA,EAAKK,KAAKsB,WAAU,OAIW,GAAnDY,GADAtC,EAAWD,GACOK,KAAK2E,kBAAkB,GAAGzC,QAC9CtC,EAASI,KAAK4E,OAAO,GAAG,CAADpC,EAAAzD,KAAA,SACsC,OAAzDqD,EAAcyC,KAAKC,MAA6B,QAAxB3C,EAACvC,EAASI,KAAK4E,OAAO,UAAE,IAAAzC,OAAA,EAAvBA,EAAyByC,QAAOpC,EAAAzD,KAAA,EAC5BwD,EACjCH,EAAY,GAAD5I,OACRC,IAA+B,QAAAD,OAAO0I,IACzC,KAAD,EAHyB,OAApBG,EAAoBG,EAAAnD,KAAAmD,EAAAzD,KAAA,GAICgF,QAAQgB,IAAI1C,GAAsB,KAAD,GAAtDC,EAAYE,EAAAnD,KAClBhD,GAAiBiG,GAAc,QA8B3BtC,EAAOJ,EAASI,KAAK2E,kBAAkBK,KAAI,SAACC,GAIhD,OAHAA,EAAIC,WAAaC,GACfC,WAAWH,EAAIC,WAAWG,WAAWC,QAAQ,KAAM,MAE9CL,CACT,IACA7J,EAAS2E,QAAQwF,gBAAgBvF,GAE7BlC,GAASiC,UACXjC,GAASiC,QAAQ/F,MAAQ4F,EAASI,KAAK2E,kBAAkB,GAAGzC,QAE1D/D,GAAc4B,UAChB5B,GAAc4B,QAAQ/F,MAAQ4F,EAASI,KAAK2E,kBAAkB,GAAGa,MAE/DzH,GAAQgC,UACVhC,GAAQgC,QAAQ/F,MAAQ4F,EAASI,KAAK2E,kBAAkB,GAAGc,MAEzDxH,GAAM8B,UACR9B,GAAM8B,QAAQ/F,MAAQ4F,EAASI,KAAK2E,kBAAkB,GAAGe,KAEvDxH,GAAU6B,UACZ7B,GAAU6B,QAAQ/F,MAAQ4F,EAASI,KAAK2E,kBAAkB,GAAGgB,SAE3D3H,GAAW+B,UACb/B,GAAW+B,QAAQ/F,MAAQ4F,EAASI,KAAK2E,kBAAkB,GAAGiB,SAEhEhI,GAAOmC,QAAUH,EAASI,KAAK2E,kBAAkB,GAAGkB,KACpDhI,GAAckC,QAAUH,EAASI,KAAK2E,kBAAkB,GAAGmB,YAAY,yBAAAtD,EAAAlD,OAAA,GAAA0C,EAAA,MACxEzC,MAAA,KAAAC,UAAA,IAjFWuG,GAAoBpE,GAA5BF,OAAyCuE,GAAuBrE,GAAlCvB,UAqFtC6F,IAIIC,EAAAA,EAAAA,IAAkC,CACpCC,KAAM,QACNC,KAAM,wCACNC,OAAQ,CACN,CAAEnM,IAAK,OAAQC,MAAO,OAAQC,MAAO,KACrC,CAAEF,IAAK,OAAQC,MAAO,SAAUC,MAAO,KACvC,CACEF,IAAK,OACLC,MAAO,OACPC,MAAO,KAET,CAAEF,IAAK,UAAWC,MAAO,cAAeC,MAAO,KAC/C,CACEF,IAAK,UACLC,MAAO,UACPC,MAAO,EACPC,MAAM,GAER,CACEH,IAAK,YACLC,MAAO,YACPC,MAAO,EACPC,MAAM,GAER,CACEH,IAAK,UACLC,MAAO,UACPC,MAAO,EACPC,MAAM,GAER,CACEH,IAAK,cACLC,MAAO,cACPC,MAAO,EACPC,MAAM,IAGViM,gBAAgB,SAADC,EAAAC,EAAAC,EAAAC,GAAA,OAAA3L,EAAAA,IAAAyD,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAE,SAAAiI,EAAOC,EAAaC,EAAQC,EAAaC,GAAO,OAAAtI,EAAAA,EAAAA,KAAAG,MAAA,SAAAoI,GAAA,cAAAA,EAAAlI,KAAAkI,EAAAjI,MAAA,OAC3D6H,KACF/G,EAAAA,EAAAA,MAAK,KAAKC,MAAK,WACblC,GAAOmC,QAAU6G,EAAO,GACxB/I,GAAckC,QAAU6G,EAAO,GAC3B3I,GAAM8B,UACR9B,GAAM8B,QAAQ/F,MAAQ4M,EAAO,IAE3BzI,GAAc4B,UAChB5B,GAAc4B,QAAQ/F,MAAQ4M,EAAO,IAEnC1I,GAAU6B,UACZ7B,GAAU6B,QAAQ/F,MAAQ4M,EAAO,IAE/BA,EAAO,IAAoB,KAAdA,EAAO,IAClB5I,GAAW+B,UACb/B,GAAW+B,QAAQ/F,MAAQ4M,EAAO,GAGxC,IACAK,MACD,wBAAAD,EAAA1H,OAAA,GAAAqH,EAAA,MACFpH,MAAA,KAAAC,UAAA,IA9DuB0H,GAA4BjB,GAApDkB,uBACWC,GAAenB,GAA1BoB,UACYJ,GAAgBhB,GAA5BqB,WAgEFC,IAIIrB,EAAAA,EAAAA,IAAkC,CACpCE,KAAM,8BACNC,OAAQ,CACN,CAAEnM,IAAK,OAAQC,MAAO,gBAAiBC,MAAO,IAC9C,CAAEF,IAAK,SAAUC,MAAO,UAAWC,MAAO,IAC1C,CACEF,IAAK,OACLC,MAAO,OACPC,MAAO,MAGXkM,gBAAgB,SAADkB,EAAAC,EAAAC,EAAAC,GAAA,OAAA3M,EAAAA,IAAAwD,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAE,SAAAkJ,EAAOhB,EAAaC,EAAQC,EAAaC,GAAO,OAAAtI,EAAAA,EAAAA,KAAAG,MAAA,SAAAiJ,GAAA,cAAAA,EAAA/I,KAAA+I,EAAA9I,MAAA,OAC3D6H,KACF/G,EAAAA,EAAAA,MAAK,KAAKC,MAAK,WACbgI,QAAQC,IAAInB,EAAO,IACnBb,GAAqB,CAAEiC,OAAQpB,EAAO,KACtC1J,GAAW,SACb,IACA+K,MACD,wBAAAJ,EAAAvI,OAAA,GAAAsI,EAAA,MACFrI,MAAA,KAAAC,UAAA,IAvBuB0I,GAAyBX,GAAjDJ,uBACWgB,GAAYZ,GAAvBF,UACYY,GAAaV,GAAzBD,WAwBIc,IAAeC,EAAAA,EAAAA,cAAY,SAADC,GAAA,OAAAxP,EAAAA,IAAA0F,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAC9B,SAAA6J,EAAOC,GAAM,IAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAyBFC,EAAYC,EAAAC,EAAA,OAAA1K,EAAAA,EAAAA,KAAAG,MAAC,SAADwK,GAAA,cAAAA,EAAAtK,KAAAsK,EAAArK,MAAA,OAxBoC,GAwBhDkK,EAAY,SAACD,GACpB,IAAMK,EAAQjN,GACd,GAAIiN,EAAM7E,OAAS,EACjB,IADqB,IAAD8E,EAAA,WAElB,IAAMjG,EAAOgG,EAAME,GACbjG,EAAS,IAAIO,WACnBmF,EAAalF,KACX,IAAIC,SAAQ,SAACC,EAASC,GACpBX,EAAOY,OAAS,SAAUC,GAAQ,IAADqF,EAC/BxF,EAAQ,CACNyF,QAAS,WACT9F,SAAUN,EAAKiB,KACfoF,YAAyB,QAAdF,EAAErF,EAAMwF,cAAM,IAAAH,OAAA,EAAZA,EAAcI,OAC3BhG,SAAUP,EAAK/J,KACf+J,KAAAA,GAEJ,EACAC,EAAOc,QAAU,SAAUD,GACzBF,EAAO,IAAII,MAAM,uBAAyBhB,EAAKiB,MACjD,EACAhB,EAAOiB,cAAclB,EACvB,IAEJ,EApBSkG,EAAI,EAAGA,EAAIF,EAAM7E,OAAQ+E,IAAGD,GAsBzC,EAjDMP,EAAe3N,EAAS2E,QAAQ8J,oBAElC5L,GAAM8B,SAAmC,KAAxB9B,GAAM8B,QAAQ/F,MAAY,CAAAoP,EAAArK,KAAA,eAAAqK,EAAAhK,OAAA,SACtC+B,IAAAA,KAAU,CACfC,SAAU,SACVC,KAAM,UACNrI,MAAO,mCACPwI,MAAO,OACN1B,MAAK,WACNgK,YAAW,WAAO,IAADC,EACF,QAAbA,EAAA9L,GAAM8B,eAAO,IAAAgK,GAAbA,EAAeC,OACjB,GAAG,IACL,KAAE,YAEAjB,EAAavE,QAAU,GAAC,CAAA4E,EAAArK,KAAA,eAAAqK,EAAAhK,OAAA,SACnB+B,IAAAA,KAAU,CACfC,SAAU,SACVC,KAAM,UACNrI,MAAO,wBACPwI,MAAO,QACP,OA8BuB,OAA3ByH,EA3BMD,EAA2B,IA2BNI,EAAArK,KAAA,GACFgF,QAAQgB,IAAIiE,GAAc,KAAD,GAA5CE,EAAUE,EAAA/J,KACV8J,EAAgB,CACpBjH,OAAwB,QAAlBuG,EAAE3K,GAASiC,eAAO,IAAA0I,OAAA,EAAhBA,EAAkBzO,MAC1B0L,IAAkB,QAAfgD,EAAEzK,GAAM8B,eAAO,IAAA2I,OAAA,EAAbA,EAAe1O,MACpB6L,KAAMjI,GAAOmC,QACb0F,KAAqB,QAAjBkD,EAAE5K,GAAQgC,eAAO,IAAA4I,OAAA,EAAfA,EAAiB3O,MACvBwL,KAA2B,QAAvBoD,EAAEzK,GAAc4B,eAAO,IAAA6I,OAAA,EAArBA,EAAuB5O,MAC7B4L,QAA2B,QAApBiD,EAAE7K,GAAW+B,eAAO,IAAA8I,OAAA,EAAlBA,EAAoB7O,MAC7BiQ,OAAyB,QAAnBnB,EAAE5K,GAAU6B,eAAO,IAAA+I,OAAA,EAAjBA,EAAmB9O,MAC3BkQ,OAAQrF,KAAKsF,UAAUpB,IAET,WAAZ9L,IACFmN,EAAAA,EAAAA,GAAuB,CACrBC,UAAU,EACVC,GAAI,SAACC,GACH9I,IAAM5H,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EAAIsP,GAAa,IAAEoB,qBAAAA,EAAsBrB,WAAAA,IACnD,KAGFsB,EAAAA,EAAAA,GAAuB,CACrBC,UAAW,WACThJ,IAAM5H,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EAAIsP,GAAa,IAAED,WAAAA,IAC7B,IAEH,yBAAAE,EAAA9J,OAAA,GAAAiJ,EAAA,MACFhJ,MAAA,KAAAC,UAAA,GACD,CAACiC,GAAQrF,GAAea,KAGpByN,GAAkB,SAAClC,GACvBA,EAAEmC,iBACF1O,IAAc,EAChB,EACM2O,GAAkB,SAACpC,GACvBA,EAAEmC,iBACF1O,IAAc,EAChB,EACM4O,GAAa,SAACrC,GAClBA,EAAEmC,iBACF,IAIyBG,EAJnBC,EAAWvC,EAAEwC,aAAa3B,MAC1BA,EAAQ4B,MAAMC,KAAKH,GACnBI,EAAQ,GAAA3R,QAAA4R,EAAAA,EAAAA,GAAOhP,IAAkBiN,GAEvC,GADApN,IAAc,IACVoP,EAAAA,EAAAA,WAAUF,GAEZ,OADoB,QAApBL,EAAAtN,GAAauC,eAAO,IAAA+K,GAApBA,EAAsBd,QACftF,MAAM,gCAEbrI,GAAiB8O,EAErB,EAEAG,IAA2D9K,EAAAA,EAAAA,aAAY,CACrEC,YAAa,QACbC,WAAW,SAAD6K,GAAA,OAAAtQ,EAAAA,IAAAuD,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAE,SAAA8M,EAAO3K,GAAc,OAAApC,EAAAA,EAAAA,KAAAG,MAAA,SAAA6M,GAAA,cAAAA,EAAA3M,KAAA2M,EAAA1M,MAAA,cAAA0M,EAAA1M,KAAA,EAClBzB,GAAQ0D,KAAK,yBAA0BH,EAAW,CAC7D6K,aAAc,cACdzM,QAAS,CACPC,cAAc,UAAD1F,OAAgB,OAAJ+D,SAAI,IAAJA,QAAI,EAAJA,GAAM4B,gBAEhC,KAAD,SAAAsM,EAAArM,OAAA,SAAAqM,EAAApM,MAAA,wBAAAoM,EAAAnM,OAAA,GAAAkM,EAAA,MACHjM,MAAA,KAAAC,UAAA,EACDE,UAAW,SAACE,GACV,IAAM+L,EAAU,IAAIC,KAAK,CAAChM,EAASI,MAAO,CAAE1G,KAAM,oBAC5CuS,EAASC,IAAIC,gBAAgBJ,GAE/BK,EAASC,OAAOtQ,OAChBqQ,IACFA,EAAOE,SAASC,MAAM,mBACtBH,EAAOE,SAASC,MACd,yDAEFH,EAAOE,SAASC,MACd,qFAEFH,EAAOE,SAASC,MAAM,oEAAD3S,OACiDqS,EAAM,yCAG5EG,EAAOE,SAASC,MAAM,kBAEtBH,EAAOE,SAASE,QAEpB,IA/BcC,GAAWf,GAAnB7J,OAAgC6K,GAAchB,GAAzBlL,UA4H7B,SAASc,KACPhE,GAAW,IACX9B,EAAS2E,QAAQwM,eAAe,MAChCnR,EAAS2E,QAAQyM,gBACjBpR,EAAS2E,QAAQ0M,QAAQ,IACzBpM,KAEItC,GAAQgC,UACVhC,GAAQgC,QAAQ/F,OAAQ0S,EAAAA,EAAAA,GAAO,IAAIjH,KAAQ,eAEzCzH,GAAW+B,UACb/B,GAAW+B,QAAQ/F,MAAQ,IAEzBiE,GAAM8B,UACR9B,GAAM8B,QAAQ/F,MAAQ,IAEpBkE,GAAU6B,UACZ7B,GAAU6B,QAAQ/F,MAAQ,IAExBmE,GAAc4B,UAChB5B,GAAc4B,QAAQ/F,MAAQ,GAElC,CACA,SAASmL,GAAawH,GACpB,OAAQA,GAAO,GAAGC,eAAe,QAAS,CACxCC,sBAAuB,EACvBC,sBAAuB,GAE3B,EAmKAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAgB,SAAC7I,IAChBA,EAAM8I,SAAW9I,EAAM+I,UAA0B,MAAd/I,EAAMjK,MAC5CiK,EAAMwG,iBACNvC,GAAajE,GAEjB,EAGA,OADA8H,OAAOkB,iBAAiB,UAAWH,GAC5B,WACLf,OAAOmB,oBAAoB,UAAWJ,EACxC,CACF,GAAG,CAAC5E,KAEJ,IAAMiF,GAA6B,KAAZpQ,GAEvB,OACEhE,EAAAA,EAAAA,MAAAqU,EAAAA,SAAA,CAAAnU,SAAA,EACEC,EAAAA,EAAAA,KAACmU,EAAU,CACTC,IAAKtS,EACLkN,aAAc,YAtLpB,WACE,SAASqF,EAAuBC,EAAaC,GAC3C,IAAIhB,EAAMiB,SAASF,GAEnB,OADAf,GAAYgB,GACDtI,WAAWwI,SAASH,EAAIlJ,OAAQ,IAC7C,CACA,SAASsJ,EAAcC,EAAiBxE,GACtC,IAAMyE,EAAc,IAAIvI,KAAKsI,GAG7B,OAFAC,EAAYC,SAASD,EAAYE,WAAa3E,IAEvCmD,EAAAA,EAAAA,GAAOsB,EAAa,aAC7B,CAMA,GACE9S,EAAc6E,QAAQoO,UAAUC,WAAWrO,SAC3C7E,EAAc6E,QAAQoO,UAAUE,QAAQtO,SACxC7E,EAAc6E,QAAQoO,UAAUjQ,UAAU6B,SAC1C7E,EAAc6E,QAAQoO,UAAUG,WAAWvO,SAC3C7E,EAAc6E,QAAQoO,UAAUI,aAAaxO,SAC7C7E,EAAc6E,QAAQoO,UAAUK,UAAUzO,QAC1C,CAAC,IAAD0O,EACMC,EAAYtT,EAAS2E,QAAQ8J,mBAC7B8E,EAAgBvT,EAAS2E,QAAQ6O,iBAUvC,GARuBF,EAAUG,QAAO,SAAC5J,GACvC,OACE/J,EAAc6E,QAAQoO,UAAUC,WAAWrO,SAC3C7E,EAAc6E,QAAQoO,UAAUC,WAAWrO,QAAQ/F,QACjDiL,EAAI6J,QAEV,IAEmBtK,OAAS,GAAuB,OAAlBmK,EAG/B,OAFAjK,MAAM,oCACNxJ,EAAc6E,QAAQoO,UAAUC,WAAWrO,QAAQgP,QAGrD,GAAiE,KAA7D7T,EAAc6E,QAAQoO,UAAUC,WAAWrO,QAAQ/F,MAGrD,OAFA0K,MAAM,+BACNxJ,EAAc6E,QAAQoO,UAAUC,WAAWrO,QAAQgP,QAE9C,GAA8D,KAA1D7T,EAAc6E,QAAQoO,UAAUE,QAAQtO,QAAQ/F,MAGzD,OAFA0K,MAAM,0BACNxJ,EAAc6E,QAAQoO,UAAUE,QAAQtO,QAAQgP,QAE3C,GACuD,KAA5D7T,EAAc6E,QAAQoO,UAAUjQ,UAAU6B,QAAQ/F,MAIlD,OAFA0K,MAAM,4BACNxJ,EAAc6E,QAAQoO,UAAUE,QAAQtO,QAAQgP,QAE3C,IA3CT,SAAqBhB,GACnB,IAAMiB,EAAO,IAAIvJ,KAAKsI,GACtB,OAAOiB,aAAgBvJ,OAASwJ,MAAMD,EAAKE,UAC7C,CAyCKC,CAAYjU,EAAc6E,QAAQoO,UAAUI,aAAaxO,QAAQ/F,OAIlE,OAFA0K,MAAM,sBACNxJ,EAAc6E,QAAQoO,UAAUI,aAAaxO,QAAQgP,QAEhD,GACLE,MACE7J,WAGsB,QAHZqJ,EACRvT,EAAc6E,QACXoO,UACAK,UAAUzO,eAAO,IAAA0O,OAAA,EAFpBA,EAEsBzU,MAAMqL,WACzBC,QAAQ,KAAM,MAMrB,OAFAZ,MAAM,uCACNxJ,EAAc6E,QAAQoO,UAAUK,UAAUzO,QAAQgP,QAIpD,GACE7T,EAAc6E,QAAQoO,UAAUC,WAAWrO,SAC3C7E,EAAc6E,QAAQoO,UAAUE,QAAQtO,SACxC7E,EAAc6E,QAAQoO,UAAUjQ,UAAU6B,SAC1C7E,EAAc6E,QAAQoO,UAAUG,WAAWvO,SAC3C7E,EAAc6E,QAAQoO,UAAUI,aAAaxO,SAC7C7E,EAAc6E,QAAQoO,UAAUK,UAAUzO,QAC1C,CACA,GAAsB,OAAlB4O,EAAwB,CAAC,IAADS,EACpBC,EAAcjU,EAAS2E,QAAQuP,UAiCrC,OA/BAD,EAAYV,GAAe,GACzBzT,EAAc6E,QAAQoO,UAAUC,WAAWrO,QAAQ/F,MACrDqV,EAAYV,GAAe,GACzBzT,EAAc6E,QAAQoO,UAAUI,aAAaxO,QAAQ/F,MACvDqV,EAAYV,GAAe,GAAKxJ,GAC9BoK,EAGsB,QAHXH,EACTlU,EAAc6E,QACXoO,UACAK,UAAUzO,eAAO,IAAAqP,OAAA,EAFpBA,EAEsBpV,MAAMqL,WACzBC,QAAQ,KAAM,MAGrB+J,EAAYV,GAAe,GACzBzT,EAAc6E,QAAQoO,UAAUE,QAAQtO,QAAQ/F,MAClDqV,EAAYV,GAAe,GACzBzT,EAAc6E,QAAQoO,UAAUjQ,UAAU6B,QAAQ/F,MACpDqV,EAAYV,GAAe,GACzBzT,EAAc6E,QAAQoO,UAAUG,WAAWvO,QAAQ/F,MACrDqV,EAAYV,GAAe,GACzBzT,EAAc6E,QAAQoO,UAAUqB,aAAazP,QAC/CsP,EAAYV,GAAe,GACzBzT,EAAc6E,QAAQoO,UAAUsB,aAAa1P,QAC/CsP,EAAYV,GAAe,GACzBzT,EAAc6E,QAAQoO,UAAUuB,SAAS3P,QAC3CsP,EAAYV,GAAe,GACzBzT,EAAc6E,QAAQoO,UAAUwB,SAAS5P,QAE3C3E,EAAS2E,QAAQ0M,QAAQ4C,GACzBjU,EAAS2E,QAAQwM,eAAe,MAChCnR,EAAS2E,QAAQyM,qBACjB1P,GAAkB,KAEpB,CAUE,IATA,IAAM8S,EACJhC,SACE1S,EAAc6E,QAAQoO,UAAU0B,eAAe9P,QAAQ/F,QACpD,EACD,EACA4T,SACE1S,EAAc6E,QAAQoO,UAAU0B,eAAe9P,QAAQ/F,OAEzD8V,EAAe,GACZvG,EAAI,EAAGA,EAAIqG,EAAYrG,IAAK,CAAC,IAADwG,EACnCD,EAAQhM,KAAK,CACX2J,EACEvS,EAAc6E,QAAQoO,UAAUC,WAAWrO,QAAQ/F,MACnDuP,GAEFuE,EACE5S,EAAc6E,QAAQoO,UAAUI,aAAaxO,QAAQ/F,MACrDuP,GAEFpE,GACEoK,EAGsB,QAHXQ,EACT7U,EAAc6E,QACXoO,UACAK,UAAUzO,eAAO,IAAAgQ,OAAA,EAFpBA,EAEsB/V,MAAMqL,WACzBC,QAAQ,KAAM,MAGrBpK,EAAc6E,QAAQoO,UAAUE,QAAQtO,QAAQ/F,MAChDkB,EAAc6E,QAAQoO,UAAUjQ,UAAU6B,QAAQ/F,MAClDkB,EAAc6E,QAAQoO,UAAUG,WAAWvO,QAAQ/F,MACnDkB,EAAc6E,QAAQoO,UAAUqB,aAAazP,QAC7C7E,EAAc6E,QAAQoO,UAAUsB,aAAa1P,QAC7C7E,EAAc6E,QAAQoO,UAAUuB,SAAS3P,QACzC7E,EAAc6E,QAAQoO,UAAUwB,SAAS5P,SAE7C,CAEA3E,EAAS2E,QAAQ0M,QAAQ,GAADjT,QAAA4R,EAAAA,EAAAA,GAAKhQ,EAAS2E,QAAQuP,WAAcQ,GAEhE,CACF,CACF,CAsBQE,GACA9U,EAAc6E,QAAQkQ,YACxB,EACAC,cAAe,WACb9U,EAAS2E,QAAQwM,eAAe,MAChCnR,EAAS2E,QAAQyM,eAGnB,EACA3P,eAAgBA,MAElBzD,EAAAA,EAAAA,KAAC8N,GAA4B,KAC7B9N,EAAAA,EAAAA,KAAC8O,GAAyB,KAC1B9O,EAAAA,EAAAA,KAAC+W,EAAAA,EAAU,CAACnX,MAAM,SAChB0I,IAAiBsE,IAA2BsG,MAC5ClT,EAAAA,EAAAA,KAACgX,EAAAA,EAAO,KAEVnX,EAAAA,EAAAA,MAAA,OACEoX,MAAO,CACLjW,MAAO,OACPkW,OAAQ,OACR9V,KAAM,EACN+V,WAAY,MACZC,QAAS,OACTC,gBAAiB,WACjBtX,SAAA,EAEFC,EAAAA,EAAAA,KAACsX,EAAAA,EAAG,CACFC,GAAI,SAACC,GAAK,OAAA9W,EAAAA,EAAAA,GAAA,CACR+W,QAAS,OACTC,WAAY,SACZC,UAAW,QACVH,EAAMI,YAAYC,KAAK,MAAQ,CAC9BC,cAAe,SACfJ,WAAY,aACZtW,KAAM,EACN2W,aAAc,QACf,EACAhY,UAEHF,EAAAA,EAAAA,MAAA,OACEoX,MAAO,CACLQ,QAAS,OACTC,WAAY,SACZC,UAAW,MACXI,aAAc,QACdhY,SAAA,EAEFC,EAAAA,EAAAA,KAACgY,EAAAA,GAAS,CACRjX,MAAO,CACLnB,MAAO,WACPqX,MAAO,CACLgB,SAAU,OACVC,WAAY,OACZlX,MAAO,SAGXmX,MAAO,CACLC,UAAW,8BACXlY,KAAM,SACNmY,UAAW,SAACjJ,GACI,UAAVA,EAAEtO,KAA6B,gBAAVsO,EAAEtO,MACzBsO,EAAEmC,iBACFxC,GAAaK,EAAEkJ,cAAc1X,OAEjC,EACAqW,MAAO,CAAEjW,MAAO,UAElBiH,MAAMjI,EAAAA,EAAAA,KAACuY,EAAAA,EAAU,CAAChB,GAAI,CAAEU,SAAU,UAClCO,YAAa,SAACpJ,GACZA,EAAEmC,iBACEjO,GAAeqD,SACjBoI,GAAazL,GAAeqD,QAAQ/F,MACxC,EACA6X,SAAUnV,KAEC,KAAZO,KACC7D,EAAAA,EAAAA,KAAC0Y,EAAAA,EAAM,CACLnB,GAAI,CACFL,OAAQ,OACRe,SAAU,QAEZU,QAAQ,YACRC,WAAW5Y,EAAAA,EAAAA,KAAC6Y,EAAAA,EAAO,CAACtB,GAAI,CAAEvW,MAAO,GAAIkW,OAAQ,MAC7C4B,GAAG,2BACHC,MAAM,UACNC,QAAS,WACPlV,GAAW,MACb,EAAE/D,SACH,SAIHC,EAAAA,EAAAA,KAACiZ,EAAAA,EAAa,CACZ1B,GAAI,CACFL,OAAQ,OACRe,SAAU,QAEZ7D,IAAK/P,GACLyU,GAAG,oBACHC,MAAM,UACNJ,QAAQ,YACRzY,KAAK,SACL8Y,QAAShK,GACTkK,SAAsB,KAAZrV,GACVsV,QAAS7Q,GACTsQ,WAAW5Y,EAAAA,EAAAA,KAACoZ,EAAAA,EAAQ,CAAC7B,GAAI,CAAEvW,MAAO,GAAIkW,OAAQ,MAASnX,SACxD,UAGa,QAAZ8D,IAAiC,WAAZA,MACrB7D,EAAAA,EAAAA,KAAC0Y,EAAAA,EAAM,CACLnB,GAAI,CACFL,OAAQ,OACRe,SAAU,QAEZU,QAAQ,YACRC,WAAW5Y,EAAAA,EAAAA,KAACqZ,EAAAA,EAAS,CAAC9B,GAAI,CAAEvW,MAAO,GAAIkW,OAAQ,MAC/C8B,QAAS,WACPjR,IAAAA,KAAU,CACRnI,MAAO,gBACP0Z,KAAM,oCACNrR,KAAM,UACNsR,kBAAkB,EAClBC,mBAAoB,UACpBC,kBAAmB,OACnBC,kBAAmB,oBAClBhT,MAAK,SAAC8J,GACHA,EAAOmJ,aACT7R,IAEJ,GACF,EACAiR,MAAM,QAAOhZ,SACd,YAIHC,EAAAA,EAAAA,KAAC0Y,EAAAA,EAAM,CACLnB,GAAI,CACFL,OAAQ,OACRe,SAAU,QAEZiB,SAAsB,KAAZrV,GACV8U,QAAQ,YACRC,WAAW5Y,EAAAA,EAAAA,KAAC6Y,EAAAA,EAAO,CAACtB,GAAI,CAAEvW,MAAO,GAAIkW,OAAQ,MAC7C8B,QAAS,WAAO,IAADY,GACbnT,EAAAA,EAAAA,MAAK,KAAKC,MAAK,WAAO,IAADmT,EACbvE,EAAYtT,EAAS2E,QAAQ8J,mBAC7BqJ,EAAuBxE,EAAUA,EAAUlK,OAAS,GACtDtJ,EAAc6E,QAAQoO,UAAUC,WAAWrO,UAC7C7E,EAAc6E,QAAQoO,UAAUC,WAAWrO,QAAQ/F,MACjDmZ,EAAgC,OAAfD,QAAe,IAAfA,OAAe,EAAfA,EAAiBpE,WAEtC1T,EAAS2E,QAAQwM,eAAe,MAChCnR,EAAS2E,QAAQyM,gBAEjB1P,GAAkB,MACgC,QAAlDmW,EAAA/X,EAAc6E,QAAQoO,UAAUC,WAAWrO,eAAO,IAAAkT,GAAlDA,EAAoDlE,OACtD,IACqB,QAArBiE,EAAA9X,EAAc6E,eAAO,IAAAiT,GAArBA,EAAuBxW,WACzB,EACAgR,IAAK9P,GAAavE,SACnB,eAGDF,EAAAA,EAAAA,MAAA,OAAAE,SAAA,EACEC,EAAAA,EAAAA,KAAC0Y,EAAAA,EAAM,CACLQ,SAAsB,WAAZrV,GACViV,GAAG,eACH,gBAAevW,EAAO,kBAAeyX,EACrC,gBAAc,OACd,gBAAezX,EAAO,YAASyX,EAC/BhB,QAz3BM,SAACjO,GACnBzI,EAAYyI,EAAMuN,cACpB,EAw3Bcf,GAAI,CACFL,OAAQ,OACRe,SAAU,OACVc,MAAO,QACP1B,gBAAiB4C,EAAAA,EAAK,KACtB,UAAW,CACT5C,gBAAiB4C,EAAAA,EAAK,OAExBla,SACH,WAGDF,EAAAA,EAAAA,MAACqa,EAAAA,EAAI,CACHpB,GAAG,aACHzW,SAAUA,EACVE,KAAMA,EACN4X,QAv4BM,WAClB7X,EAAY,KACd,EAs4Bc8X,cAAe,CACb,kBAAmB,gBACnBra,SAAA,EAEFC,EAAAA,EAAAA,KAACqa,EAAAA,EAAQ,CAACrB,QAjfA,WAAO,IAADsB,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EACtBhL,EAAe3N,EAAS2E,QAAQ8J,mBAChClQ,EAAQ,CACZuI,OAAwB,QAAlBwR,EAAE5V,GAASiC,eAAO,IAAA2T,OAAA,EAAhBA,EAAkB1Z,MAC1B0L,IAAkB,QAAfiO,EAAE1V,GAAM8B,eAAO,IAAA4T,OAAA,EAAbA,EAAe3Z,MACpB6L,KAAMjI,GAAOmC,QACb0F,KAAqB,QAAjBmO,EAAE7V,GAAQgC,eAAO,IAAA6T,OAAA,EAAfA,EAAiB5Z,MACvBwL,KAA2B,QAAvBqO,EAAE1V,GAAc4B,eAAO,IAAA8T,OAAA,EAArBA,EAAuB7Z,MAC7B4L,QAA2B,QAApBkO,EAAE9V,GAAW+B,eAAO,IAAA+T,OAAA,EAAlBA,EAAoB9Z,MAC7BiQ,OAAyB,QAAnB8J,EAAE7V,GAAU6B,eAAO,IAAAgU,OAAA,EAAjBA,EAAmB/Z,OAE7BqS,GAAY,CACV2H,YAAa,UACbjL,aAAAA,EACApP,MAAAA,GAEJ,EAieiDR,SAAC,iBACpCC,EAAAA,EAAAA,KAACqa,EAAAA,EAAQ,CAACrB,QAjeC,WAAO,IAAD6B,EAAAC,EACvBva,EAAQ,CACZ2K,KAA2B,QAAvB2P,EAAE9V,GAAc4B,eAAO,IAAAkU,OAAA,EAArBA,EAAuBja,MAC7Bma,IAAKvW,GAAOmC,QACZyN,IAAqB,QAAlB0G,EAAEpW,GAASiC,eAAO,IAAAmU,OAAA,EAAhBA,EAAkBla,OAEzBqS,GAAY,CACV2H,YAAa,WACbjL,aAAc,GACdpP,MAAAA,GA8DJ,EA0ZkDR,SAAC,6BAK7CC,EAAAA,EAAAA,KAAA,QACEqY,UAAW,SAACjJ,GACK,UAAXA,EAAE4L,MAA+B,gBAAX5L,EAAE4L,MAC1B5L,EAAEmC,gBAGN,EACA0F,MAAO,CACLc,aAAc,QACdhY,UAEFC,EAAAA,EAAAA,KAACsX,EAAAA,EAAG,CACFC,GAAI,SAACC,GAAK,OAAA9W,EAAAA,EAAAA,GAAA,CACR+W,QAAS,OACTE,UAAW,OACXG,cAAe,OACdN,EAAMI,YAAYC,KAAK,MAAQ,CAC9BC,cAAe,SACfmD,OAAQ,QACT,EACAlb,UAEHF,EAAAA,EAAAA,MAACyX,EAAAA,EAAG,CACFC,GAAI,CACFE,QAAS,OACTyD,IAAK,OACLla,MAAO,QACPjB,SAAA,EAEFF,EAAAA,EAAAA,MAAA,YACEoX,MACE,CACE7V,KAAM,EACNqW,QAAS,OACTK,cAAe,SACfoD,IAAK,OACL9D,QAAS,OACT+D,OAAQ,oBACRC,aAAc,OAEjBrb,SAAA,EAEDF,EAAAA,EAAAA,MAAA,OACEoX,MAAO,CACLQ,QAAS,OACTyD,IAAK,QACLnb,SAAA,CAEDgH,IACC/G,EAAAA,EAAAA,KAACiZ,EAAAA,EAAa,CAACE,QAASpS,MAExB/G,EAAAA,EAAAA,KAACgY,EAAAA,GAAS,CACRjX,MAAO,CACLnB,MAAO,gBACPqX,MAAO,CACLgB,SAAU,OACVC,WAAY,OACZlX,MAAO,UAGXmX,MAAO,CACLe,SAAUjF,GACV/T,KAAM,OACN+W,MAAO,CAAEjW,MAAO,SAChBqX,UAAW,SAACjJ,GACyC,IAADiM,EAApC,UAAVjM,EAAEtO,KAA6B,gBAAVsO,EAAEtO,MACzBsO,EAAEmC,iBACa,QAAf8J,EAAA1W,GAAQgC,eAAO,IAAA0U,GAAfA,EAAiB1F,QAErB,GAEF8C,SAAU/T,GACVuD,MACEjI,EAAAA,EAAAA,KAACsb,EAAAA,EAAc,CACb/D,GAAI,CACFU,SAAU,OACVc,MAAO9E,GAAiB,OAAS,WAIvCsH,YAAatH,MAIjBjU,EAAAA,EAAAA,KAACgY,EAAAA,GAAS,CACRjX,MAAO,CACLnB,MAAO,UACPqX,MAAO,CACLgB,SAAU,OACVC,WAAY,OACZlX,MAAO,SAGXmX,MAAO,CACLe,SAAUjF,GACV/T,KAAM,OACNsb,cAAclI,EAAAA,EAAAA,GAAO,IAAIjH,KAAQ,cACjC4K,MAAO,CAAEjW,MAAO,SAChBqX,UAAW,SAACjJ,GAC2C,IAADqM,EAArC,gBAAXrM,EAAE4L,MAAqC,UAAX5L,EAAE4L,OACd,QAAlBS,EAAA7W,GAAW+B,eAAO,IAAA8U,GAAlBA,EAAoB9F,QAExB,GAEF8C,SAAU9T,SAId3E,EAAAA,EAAAA,KAAC0b,EAAAA,GAAa,CACZ3a,MAAO,CACLnB,MAAO,aACPqX,MAAO,CACLgB,SAAU,OACVC,WAAY,OACZlX,MAAO,UAGX2a,SAAU,CACRC,KAAM,EACN1C,SAAUjF,GACVgD,MAAO,CAAE7V,KAAM,GACfiX,UAAW,SAACjJ,GAKP,IAADyM,GAJFzM,EAAE0M,kBAEY,gBAAX1M,EAAE4L,OAA2B5L,EAAE2M,UACpB,UAAX3M,EAAE4L,OAAqB5L,EAAE2M,YAEb,QAAbF,EAAAhX,GAAM8B,eAAO,IAAAkV,GAAbA,EAAelG,QAEnB,GAEFqG,UAAWpX,SAGf/E,EAAAA,EAAAA,MAAA,YACEoX,MACE,CACE7V,KAAM,EACNqW,QAAS,OACTyD,IAAK,OACL9D,QAAS,QACT+D,OAAQ,oBACRC,aAAc,MACdtD,cAAe,UAElB/X,SAAA,EAEDF,EAAAA,EAAAA,MAAA,OACEoX,MAAO,CACLjW,MAAO,OACPI,KAAM,EACNqW,QAAS,OACTyD,IAAK,QACLnb,SAAA,EAEFC,EAAAA,EAAAA,KAACgY,EAAAA,GAAS,CACRjX,MAAO,CACLnB,MAAO,kBACPqX,MAAO,CACLgB,SAAU,OACVC,WAAY,OACZlX,MAAO,UAGXmX,MAAO,CACLe,SAAUjF,GACV/T,KAAM,OACN+W,MAAO,CAAEjW,MAAO,QAASkW,OAAQ,QACjCmB,UAAW,SAACjJ,GACI,UAAVA,EAAEtO,KAA6B,gBAAVsO,EAAEtO,MACzBsO,EAAEmC,iBACE1M,GAAM8B,SACRqH,GAAgBnJ,GAAM8B,QAAQ/F,OAGpC,GAEF6X,SAAU5T,GACVoD,MACEjI,EAAAA,EAAAA,KAACic,EAAAA,EAAgB,CACf1E,GAAI,CACFU,SAAU,OACVc,MAAO9E,GAAiB,OAAS,WAIvCuE,YAAa,SAACpJ,GACZA,EAAEmC,iBACE1M,GAAM8B,SACRqH,GAAgBnJ,GAAM8B,QAAQ/F,MAElC,EACA2a,YAAatH,MAGfjU,EAAAA,EAAAA,KAACgY,EAAAA,GAAS,CACRjX,MAAO,CACLnB,MAAO,YACPqX,MAAO,CACLgB,SAAU,OACVC,WAAY,OACZlX,MAAO,SAGXmX,MAAO,CACLe,SAAUjF,GACV/T,KAAM,OACN+W,MAAO,CAAEjW,MAAO,OAAQkW,OAAQ,QAChCmB,UAAW,SAACjJ,GAC2C,IAAD8M,EAArC,gBAAX9M,EAAE4L,MAAqC,UAAX5L,EAAE4L,OACX,QAArBkB,EAAAnX,GAAc4B,eAAO,IAAAuV,GAArBA,EAAuBvG,QAE3B,GAEF8C,SAAU3T,SAIdjF,EAAAA,EAAAA,MAAA,OACEoX,MAAO,CAAEjW,MAAO,OAAQyW,QAAS,OAAQE,UAAW,QAAS5X,SAAA,EAE7DC,EAAAA,EAAAA,KAAC0b,EAAAA,GAAa,CACZ3a,MAAO,CACLnB,MAAO,kBACPqX,MAAO,CACLgB,SAAU,OACVC,WAAY,OACZlX,MAAO,UAGX2a,SAAU,CACRC,KAAM,EACN1C,SAAUjF,GACVgD,MAAO,CAAEjW,MAAO,SAChBqX,UAAW,SAACjJ,GAKP,IAAD+M,GAJF/M,EAAE0M,kBAEY,gBAAX1M,EAAE4L,OAA2B5L,EAAE2M,UACpB,UAAX3M,EAAE4L,OAAqB5L,EAAE2M,YAEF,QAAxBI,EAAA9X,GAAiBsC,eAAO,IAAAwV,GAAxBA,EAA0BvL,QAE9B,GAEFoL,UAAWjX,MAEb/E,EAAAA,EAAAA,KAAC0Y,EAAAA,EAAM,CACLnB,GAAI,CACFL,OAAQ,OACRe,SAAU,QAEZiB,SAAsB,KAAZrV,GACV8U,QAAQ,YACRC,WAAW5Y,EAAAA,EAAAA,KAACoc,EAAAA,EAAY,CAAC7E,GAAI,CAAEvW,MAAO,GAAIkW,OAAQ,MAClD8B,QAAS,WACP3V,IAAa,EACf,EAAEtD,SACH,+BAQXC,EAAAA,EAAAA,KAACqc,EAAAA,GAAiB,CAChBC,aAAcrI,GACdG,IAAKpS,EACL4Z,KAAM,GACNW,QAAS1b,EACT2b,cAAc,EACdtP,gBAAiB,SAACuP,EAAkBhP,EAAQiP,GAC1C,GAAID,EAAa,CAAC,IAADE,EACf,GACGF,EAAY,IAAyB,KAAnBA,EAAY,IAC9BA,EAAY,IAAyB,KAAnBA,EAAY,IAC9BA,EAAY,IAAyB,KAAnBA,EAAY,GAM/B,OAJA/Y,GAAkB,MAClB1B,EAAS2E,QAAQwM,eAAe,MAChCnR,EAAS2E,QAAQyM,gBAEVrL,IAAAA,KAAU,CACfC,SAAU,SACVC,KAAM,UACNrI,MAAM,8BAADQ,OAAgCqc,EAAY,GAAE,gBAAArc,OAAeqc,EAAY,GAAE,kBAChFtU,mBAAmB,EACnBC,MAAO,OAGX1E,GAAkBgZ,GACG,QAArBC,EAAA7a,EAAc6E,eAAO,IAAAgW,GAArBA,EAAuBvZ,aACvBqD,EAAAA,EAAAA,MAAK,KAAKC,MAAK,WAEX5E,EAAc6E,QAAQoO,UAAUC,WAAWrO,SAC3C7E,EAAc6E,QAAQoO,UAAUE,QAAQtO,SACxC7E,EAAc6E,QAAQoO,UAAUjQ,UAAU6B,SAC1C7E,EAAc6E,QAAQoO,UAAUG,WAAWvO,SAC3C7E,EAAc6E,QAAQoO,UAAUI,aAAaxO,SAC7C7E,EAAc6E,QAAQoO,UAAUK,UAAUzO,UAE1C7E,EAAc6E,QAAQoO,UAAUC,WAAWrO,QAAQ/F,MACjD6b,EAAY,GACd3a,EAAc6E,QAAQoO,UAAUI,aAAaxO,QAAQ/F,MACnD6b,EAAY,GACd3a,EAAc6E,QAAQoO,UAAUK,UAAUzO,QAAQ/F,MAChDmL,GAAaC,WAAWyQ,EAAY,GAAGvQ,QAAQ,KAAM,MACvDpK,EAAc6E,QAAQoO,UAAUE,QAAQtO,QAAQ/F,MAC9C6b,EAAY,GACd3a,EAAc6E,QAAQoO,UAAUjQ,UAAU6B,QAAQ/F,MAChD6b,EAAY,GACd3a,EAAc6E,QAAQoO,UAAUG,WAAWvO,QAAQ/F,MACjD6b,EAAY,GACd3a,EAAc6E,QAAQoO,UAAUqB,aAAazP,QAC3C8V,EAAY,IAAM,GACpB3a,EAAc6E,QAAQoO,UAAUsB,aAAa1P,QAC3C8V,EAAY,IAAM,GACpB3a,EAAc6E,QAAQoO,UAAUuB,SAAS3P,QACvC8V,EAAY,IAAM,GACpB3a,EAAc6E,QAAQoO,UAAUwB,SAAS5P,QACvC8V,EAAY,GAEd3a,EAAc6E,QAAQoO,UAAUE,QAAQtO,QAAQgP,QAEpD,GACF,MACEjS,GAAkB,KAEtB,EACA2U,UAAW,SAACoE,EAAkBC,EAAetN,GAC3C,GAAe,WAAXA,EAAE4L,MAAgC,cAAX5L,EAAE4L,KAAsB,CACjD,GACGyB,EAAY,IAAyB,KAAnBA,EAAY,IAC9BA,EAAY,IAAyB,KAAnBA,EAAY,IAC9BA,EAAY,IAAyB,KAAnBA,EAAY,GAM/B,OAJA/Y,GAAkB,MAClB1B,EAAS2E,QAAQwM,eAAe,MAChCnR,EAAS2E,QAAQyM,gBAEVrL,IAAAA,KAAU,CACfC,SAAU,SACVC,KAAM,UACNrI,MAAM,8BAADQ,OAAgCqc,EAAY,GAAE,gBAAArc,OAAeqc,EAAY,GAAE,kBAChFtU,mBAAmB,EACnBC,MAAO,OAIXL,IAAAA,KAAU,CACRnI,MAAO,gBACP0Z,KAAK,sCAADlZ,OAAwCqc,EAAY,IACxDxU,KAAM,UACNsR,kBAAkB,EAClBC,mBAAoB,UACpBC,kBAAmB,OACnBC,kBAAmB,oBAClBhT,MAAK,SAAC8J,GACHA,EAAOmJ,aACTjJ,YAAW,WACT,IAAMgG,EAAU1U,EAAS2E,QAAQuP,UACjCQ,EAAQkG,OAAOF,EAAU,GACzB1a,EAAS2E,QAAQ0M,QAAQqD,GAEzBhT,GAAkB,MAClB1B,EAAS2E,QAAQwM,eAAe,MAChCnR,EAAS2E,QAAQyM,eACnB,GAAG,IAEP,GACF,CACF,KAGFpT,EAAAA,EAAAA,KAAA,OACEiX,MAAO,CACLQ,QAASrU,GAAY,OAAS,OAC9B4E,SAAU,WACV6U,IAAK,EACLC,OAAQ,EACRC,KAAM,EACNC,MAAO,EACP7F,WAAY,4BACZ8F,OAAQ,MACRC,eAAgB,SAChBxF,WAAY,UACZ3X,UAEFC,EAAAA,EAAAA,KAAA,OACEiX,MAAO,CACLjW,MAAO,MACPkW,OAAQ,OACRnX,UAEFC,EAAAA,EAAAA,KAAA,OACEiX,MAAO,CACLjW,MAAO,MACPkW,OAAQ,MACRiG,SAAU,OACVhG,WAAY,QACZC,QAAS,OACTgG,OAAQ,OACRH,OAAQ,OACRI,UAAW,sCACXrV,SAAU,YACVjI,UAEFF,EAAAA,EAAAA,MAAA,OACEoX,MAAO,CACLC,OAAQ,OACRlW,MAAO,OACPgH,SAAU,WACVyP,QAAS,OACTyF,eAAgB,SAChBxF,WAAY,SACZI,cAAe,UACf/X,SAAA,EAEFC,EAAAA,EAAAA,KAACsd,EAAAA,EAAU,CACT/F,GAAI,CACFvP,SAAU,WACVgV,MAAO,MACPH,IAAK,OAEP7D,QAAS,WACP3V,IAAa,EACf,EAAEtD,UAEFC,EAAAA,EAAAA,KAACqZ,EAAAA,EAAS,OAEZxZ,EAAAA,EAAAA,MAAA,OACEoX,MAAO,CACLjW,MAAO,OACPkW,OAAQ,QACRiE,OAAQvY,GAAa,mBAAqB,kBAC1Cua,SAAU,OACV/F,QAAS,QAEXmG,YAAa/L,GACbgM,WAAY,SAACpO,GAAC,OAAKA,EAAEmC,gBAAgB,EACrCkM,YAAanM,GACboM,OAAQjM,GAAW1R,SAAA,EAEnBC,EAAAA,EAAAA,KAAA,OACE8Y,GAAG,mBACH7B,MAAO,CACLjW,MAAO,OACPkW,OAAQ,OACRO,QAAS,OACTyD,IAAK,OACLyC,SAAU,QAEZJ,YAAa/L,GACbgM,WAAY,SAACpO,GAAC,OAAKA,EAAEmC,gBAAgB,EACrCkM,YAAanM,GACboM,OAAQjM,GAAW1R,SAElBiD,GAAc4I,KAAI,SAACC,EAAK+R,GACvB,OACE5d,EAAAA,EAAAA,KAAC6d,EAAAA,YAAW,CAEVhS,IAAKA,EACL7I,cAAeA,GACfC,iBAAkBA,GAClB6a,UAAW1Z,IAJNwZ,EAOX,MAED5a,GAAcoI,QAAU,IACvBpL,EAAAA,EAAAA,KAAA,OACEiX,MAAO,CACLjP,SAAU,WACV6U,IAAK,MACLE,KAAM,MACNgB,UAAW,uBACXC,UAAW,UACXje,UAEFC,EAAAA,EAAAA,KAACie,EAAAA,EAAqB,CACpB1G,GAAI,CAAEU,SAAU,OAAQc,MAAO,gBAIrC/Y,EAAAA,EAAAA,KAAA,SACEoU,IAAKhQ,GACLlE,KAAK,OACLge,UAAQ,EACRjH,MAAO,CAAEQ,QAAS,OAAQN,WAAY,SACtC2B,GAAG,aACHqF,SAAU,SAAC/O,GACT,IAAMuC,EAAWvC,EAAEmB,OAAON,MACpBA,EAAQ4B,MAAMC,KAAKH,GACnBI,EAAQ,GAAA3R,QAAA4R,EAAAA,EAAAA,GAAOhP,IAAkBiN,GACvC,IAAIgC,EAAAA,EAAAA,WAAUF,GACZ,OAAOzG,MAAM,gCAEfrI,GAAiB8O,EACnB,QAGJ/R,EAAAA,EAAAA,KAAA,OACEiX,MAAO,CACLjW,MAAO,QACPjB,UAEFC,EAAAA,EAAAA,KAAC0Y,EAAAA,EAAM,CACL0F,WAAS,EACTpF,QAAS,WACP,IAAMqF,EAAYvL,SAASwL,eAAe,cACjC,OAATD,QAAS,IAATA,GAAAA,EAAWzN,OACb,EAAE7Q,SACH,uCAWnB,CAEA,IAAMoU,GAAaoK,EAAAA,EAAAA,aACjB,SAAAC,EAAuDpK,GAAS,IAADqK,EAA5DzP,EAAYwP,EAAZxP,aAAc8H,EAAa0H,EAAb1H,cAAerT,EAAc+a,EAAd/a,eAC9Bib,GAAkChc,EAAAA,EAAAA,WAAS,GAAMic,GAAAvc,EAAAA,EAAAA,GAAAsc,EAAA,GAA1Ctb,EAASub,EAAA,GAAEtb,EAAYsb,EAAA,GAC9BC,GAAgDlc,EAAAA,EAAAA,WAAS,GAAMmc,GAAAzc,EAAAA,EAAAA,GAAAwc,EAAA,GAAxDE,EAAgBD,EAAA,GAAEE,EAAmBF,EAAA,GAC5CG,GAA0Btc,EAAAA,EAAAA,WAAS,GAAMuc,GAAA7c,EAAAA,EAAAA,GAAA4c,EAAA,GAAlCE,EAAKD,EAAA,GAAEE,EAAQF,EAAA,GAEhBjK,GAAajT,EAAAA,EAAAA,QAAyB,MACtCkT,GAAUlT,EAAAA,EAAAA,QAAyB,MACnC+C,GAAY/C,EAAAA,EAAAA,QAAyB,MACrCmT,GAAanT,EAAAA,EAAAA,QAA4B,MACzCoT,GAAepT,EAAAA,EAAAA,QAAyB,MACxCqT,GAAYrT,EAAAA,EAAAA,QAAyB,MACrCwU,GAAWxU,EAAAA,EAAAA,QAAO,IAClB0U,GAAiB1U,EAAAA,EAAAA,QAAyB,MAC1Cqd,GAAsBrd,EAAAA,EAAAA,QAAyB,MAE/CqU,GAAerU,EAAAA,EAAAA,QAAO,IACtBsU,GAAetU,EAAAA,EAAAA,QAAO,IACtBuU,GAAWvU,EAAAA,EAAAA,QAAO,IAElBsd,EAAa,WACjBN,GAAoB,GACpBrO,YAAW,WACTrN,GAAa,GACb0b,GAAoB,GACpBjI,GACF,GAAG,IACL,EACMwI,GAAgBvd,EAAAA,EAAAA,QAAYsd,IAElCE,EAAAA,EAAAA,qBAAoBnL,GAAK,iBAAO,CAC9BhR,UAAW,WACTC,GAAa,EACf,EACAwT,WAAY,WACVxT,GAAa,EACf,EACA0R,QAAS,WAcP,MAba,CACXC,WAAAA,EACAC,QAAAA,EACAnQ,UAAAA,EACAoQ,WAAAA,EACAC,aAAAA,EACAC,UAAAA,EACAmB,SAAAA,EACAE,eAAAA,EACAL,aAAAA,EACAC,aAAAA,EACAC,SAAAA,EAGJ,EACAtB,WAAAA,EACAC,QAAAA,EACAnQ,UAAAA,EACAoQ,WAAAA,EACAC,aAAAA,EACAC,UAAAA,EACAmB,SAAAA,EACA6I,oBAAAA,EACAC,WAAAA,EACD,IAED,IAAAG,GAII1S,EAAAA,EAAAA,IAAkC,CACpCE,KAAM,oCACNC,OAAQ,CACN,CAAEnM,IAAK,YAAaC,MAAO,OAAQC,MAAO,KAC1C,CAAEF,IAAK,OAAQC,MAAO,YAAaC,MAAO,MAE5CkM,gBAAgB,SAADuS,EAAAC,EAAAC,EAAAC,GAAA,OAAAnB,EAAAA,IAAArZ,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAE,SAAAua,EAAOrS,EAAaC,EAAQC,EAAaC,GAAO,OAAAtI,EAAAA,EAAAA,KAAAG,MAAA,SAAAsa,GAAA,cAAAA,EAAApa,KAAAoa,EAAAna,MAAA,OAC3D6H,KACF/G,EAAAA,EAAAA,MAAK,KAAKC,MAAK,WAAO,IAADqZ,EACnBxJ,EAAS5P,QAAU6G,EAAO,GACtByH,EAAQtO,UACVsO,EAAQtO,QAAQ/F,MAAQ4M,EAAO,IAEhB,QAAjBuS,EAAAjb,EAAU6B,eAAO,IAAAoZ,GAAjBA,EAAmBpK,OACrB,IACAqK,KACD,wBAAAF,EAAA5Z,OAAA,GAAA2Z,EAAA,MACF1Z,MAAA,KAAAC,UAAA,IApBuB6Z,EAA0BT,EAAlDzR,uBACWmS,EAAaV,EAAxBvR,UACY+R,EAAcR,EAA1BtR,WA6BF,OARAyF,EAAAA,EAAAA,YAAU,WACRd,OAAOkB,iBAAiB,WAAW,SAAC3E,GACpB,WAAVA,EAAEtO,KACJwe,EAAc3Y,SAElB,GACF,GAAG,IAEIvD,GACLvD,EAAAA,EAAAA,MAAAqU,EAAAA,SAAA,CAAAnU,SAAA,EACEC,EAAAA,EAAAA,KAACigB,EAA0B,KAC3BjgB,EAAAA,EAAAA,KAAA,OACEiX,MAAO,CACLjP,SAAU,QACV6U,IAAK,EACLC,OAAQ,EACRC,KAAM,EACNC,MAAO,EACP7F,WAAY,cACZ8F,OAAQ,MAEVjE,QAAS,WACPmG,GAAS,GACTzO,YAAW,WACTyO,GAAS,EACX,GAAG,IACL,KAEFtf,EAAAA,EAAAA,MAAA,OACEoX,MAAO,CACLC,OAAQgI,EAAQ,QAAU,QAC1Ble,MAAOke,EAAQ,QAAU,MACzB/D,OAAQ,oBACRnT,SAAU,WACV+U,KAAM,MACNF,IAAK,MACLkB,UAAW,wBACXtG,QAAS,OACTK,cAAe,SACfmF,OAAQ6B,GAAoB,IAAM,IAClCqB,QAASrB,EAAmB,EAAI,EAChCsB,WAAY,YACZ/C,UAAW,sCACXtd,SAAA,EAEFF,EAAAA,EAAAA,MAAA,OACEoX,MAAO,CACLC,OAAQ,OACRC,WAAY,QACZM,QAAS,OACTyF,eAAgB,gBAChB9F,QAAS,MACTpP,SAAU,WACV0P,WAAY,UACZ3X,SAAA,EAEFC,EAAAA,EAAAA,KAAA,QAAMiX,MAAO,CAAEgB,SAAU,OAAQC,WAAY,QAASnY,SAAC,mBAGvDC,EAAAA,EAAAA,KAAA,UACEoY,UAAU,uBACVnB,MAAO,CACLG,QAAS,QACTgE,aAAc,MACdjE,WAAY,QACZ4B,MAAO,QACP7B,OAAQ,OACRlP,SAAU,WACV6U,IAAK,EACLG,MAAO,GAEThE,QAAS,WACPqG,GACF,EAAEtf,UAEFC,EAAAA,EAAAA,KAACqZ,EAAAA,EAAS,CAAC9B,GAAI,CAAEU,SAAU,gBAG/BpY,EAAAA,EAAAA,MAAA,OACEoX,MAAO,CACL7V,KAAM,EACN+V,WAAY,UACZC,QAAS,MACTK,QAAS,QACT1X,SAAA,EAEFF,EAAAA,EAAAA,MAAA,OACEoX,MAAO,CACLjW,MAAO,MACPyW,QAAS,OACTK,cAAe,SACfmD,OAAQ,MACR7D,QAAS,QACTrX,SAAA,EAEFC,EAAAA,EAAAA,KAACgY,EAAAA,GAAS,CACRjX,MAAO,CACLnB,MAAO,eACPqX,MAAO,CACLgB,SAAU,OACVC,WAAY,OACZlX,MAAO,SAGXmX,MAAO,CACLe,SAA6B,OAAnBzV,EACVvD,KAAM,OACN+W,MAAO,CAAEjW,MAAO,SAChBqX,UAAW,SAACjJ,GAC2C,IAADiR,EAArC,gBAAXjR,EAAE4L,MAAqC,UAAX5L,EAAE4L,OACjB,QAAfqF,EAAApL,EAAQtO,eAAO,IAAA0Z,GAAfA,EAAiB1K,QAErB,GAEF8C,SAAUzD,KAGZhV,EAAAA,EAAAA,KAACgY,EAAAA,GAAS,CACRsI,eAAgB,CACdtf,MAAO,SAETD,MAAO,CACLnB,MAAO,UACPqX,MAAO,CACLgB,SAAU,OACVC,WAAY,OACZlX,MAAO,SAGXmX,MAAO,CACLe,UAAU,EACVhZ,KAAM,OACN+W,MAAO,CAAEjW,MAAO,SAChBqX,UAAW,SAACjJ,GACK,gBAAXA,EAAE4L,MAAqC,UAAX5L,EAAE4L,MAChCkF,EAAc9Q,EAAEkJ,cAAc1X,MAElC,GAEFqH,MAAMjI,EAAAA,EAAAA,KAACugB,EAAAA,EAAc,CAAChJ,GAAI,CAAEU,SAAU,UACtCO,YAAa,SAACpJ,GACZA,EAAEmC,iBACE0D,EAAQtO,SACVuZ,EAAcjL,EAAQtO,QAAQ/F,MAElC,EACA6X,SAAUxD,KAGZjV,EAAAA,EAAAA,KAACgY,EAAAA,GAAS,CACRjX,MAAO,CACLnB,MAAO,YACPqX,MAAO,CACLgB,SAAU,OACVC,WAAY,OACZlX,MAAO,SAGXmX,MAAO,CACLjY,KAAM,OACN+W,MAAO,CAAEjW,MAAO,SAChBqX,UAAW,SAACjJ,GAC2C,IAADoR,EAArC,gBAAXpR,EAAE4L,MAAqC,UAAX5L,EAAE4L,OACd,QAAlBwF,EAAAtL,EAAWvO,eAAO,IAAA6Z,GAAlBA,EAAoB7K,QAExB,GAEF8C,SAAU3T,KAEZ9E,EAAAA,EAAAA,KAAC0b,EAAAA,GAAa,CACZ3a,MAAO,CACLnB,MAAO,aACPqX,MAAO,CACLgB,SAAU,OACVC,WAAY,OACZlX,MAAO,SAGX2a,SAAU,CACRC,KAAM,EACN3E,MAAO,CAAEjW,MAAO,SAChBqX,UAAW,SAACjJ,GAKP,IAADqR,GAJFrR,EAAE0M,kBAEY,gBAAX1M,EAAE4L,OAA2B5L,EAAE2M,UACpB,UAAX3M,EAAE4L,OAAqB5L,EAAE2M,YAEN,QAApB0E,EAAAtL,EAAaxO,eAAO,IAAA8Z,GAApBA,EAAsB9K,QAE1B,GAEFqG,UAAW9G,QAGfrV,EAAAA,EAAAA,MAAA,OACEoX,MAAO,CACLjW,MAAO,MACPyW,QAAS,OACTK,cAAe,SACfmD,OAAQ,MACRjT,SAAU,WACVoP,QAAS,OACTM,WAAY,YACZ3X,SAAA,EAEFC,EAAAA,EAAAA,KAACgY,EAAAA,GAAS,CACRjX,MAAO,CACLnB,MAAO,UACPqX,MAAO,CACLgB,SAAU,OACVC,WAAY,OACZlX,MAAO,SAGXmX,MAAO,CACLjY,KAAM,OACN+W,MAAO,CAAEjW,MAAO,SAChBwa,cAAclI,EAAAA,EAAAA,GAAO,IAAIjH,KAAQ,cACjCgM,UAAW,SAACjJ,GAC2C,IAADsR,EAArC,gBAAXtR,EAAE4L,MAAqC,UAAX5L,EAAE4L,OACf,QAAjB0F,EAAAtL,EAAUzO,eAAO,IAAA+Z,GAAjBA,EAAmB/K,QAEvB,GAEF8C,SAAUtD,KAEZnV,EAAAA,EAAAA,KAAC2gB,EAAAA,GAAiB,CAChB5f,MAAO,CACLnB,MAAO,YACPqX,MAAO,CACLgB,SAAU,OACVC,WAAY,OACZlX,MAAO,SAGXmX,MAAO,CACLyI,YAAa,OACbpF,aAAc,GACdtb,KAAM,OACN+W,MAAO,CAAEjW,MAAO,SAChBqX,UAAW,SAACjJ,GAEW,IAADyR,EADL,gBAAXzR,EAAE4L,MAAqC,UAAX5L,EAAE4L,MAC5BhM,IACoB,QAAtB6R,EAAApK,EAAe9P,eAAO,IAAAka,GAAtBA,EAAwBlL,QAG9B,GAEF8C,SAAUrD,IAEQ,OAAnB3R,IACCzD,EAAAA,EAAAA,KAACgY,EAAAA,GAAS,CACRjX,MAAO,CACLnB,MAAO,iBACPqX,MAAO,CACLgB,SAAU,OACVC,WAAY,OACZlX,MAAO,SAGXmX,MAAO,CACL2I,IAAK,EACLtF,aAAc,IACdtb,KAAM,SACN+W,MAAO,CAAEjW,MAAO,QAASgd,UAAW,SACpC3F,UAAW,SAACjJ,GACK,gBAAXA,EAAE4L,MAAqC,UAAX5L,EAAE4L,MAChChM,GAEJ,GAEFyJ,SAAUhC,KAGd5W,EAAAA,EAAAA,MAAA,OACEoX,MAAO,CACLQ,QAAS,OACTE,UAAW,OACXvW,KAAM,EACN8b,eAAgB,WAChBxF,WAAY,YACZ3X,SAAA,EAEFC,EAAAA,EAAAA,KAAC0Y,EAAAA,EAAM,CACLC,QAAQ,YACRI,MAAM,UACN9B,MAAO,CACLC,OAAQ,OACRe,SAAU,QAEZe,QAAS,SAAC5J,GACJJ,GACFA,GAEJ,EAAEjP,SACH,QAGDC,EAAAA,EAAAA,KAAC0Y,EAAAA,EAAM,CACLC,QAAQ,YACRI,MAAM,QACN9B,MAAO,CACLC,OAAQ,OACRe,SAAU,QAEZe,QAAS,SAAC5J,GACRiQ,GACF,EAAEtf,SACH,qBAMPC,EAAAA,EAAAA,KAAA,SAAAD,SAAA,2KAUF,IACN,IAGK,SAASghB,EAAiBC,EAAeC,GAC9CC,OAAOC,QAAQF,GAAKG,SAAQ,SAAAC,GAAqB,IAADC,GAAAlf,EAAAA,EAAAA,GAAAif,EAAA,GAAlB1gB,EAAK2gB,EAAA,GAAE1gB,EAAK0gB,EAAA,GACxCN,EAAS,CAAE9gB,KAAM,eAAgBS,MAAAA,EAAOC,MAAAA,GAC1C,GACF,CACO,SAASmZ,EAAiBrE,GAC/B,GAAIA,EAAU,CAEZ,IADA,IAAI6L,GAAqB/M,SAASkB,GAAY,GAAGzJ,WAC1CsV,EAAkBnW,OAASsK,EAAStK,QACzCmW,EAAoB,IAAMA,EAE5B,OAAOA,CACT,CAEA,MAAO,KACT,CAEA,SAASpL,EAAYvV,GACnB,OAAOiV,MAAMjV,IAAoB,KAAVA,EAAe,EAAI4gB,OAAO5gB,EACnD,C","sources":["components/Helmet.tsx","feautures/Admin/Task/Accounting/PostDateChecks.tsx"],"sourcesContent":["\r\nimport { Helmet } from \"react-helmet\";\r\n\r\nconst PageHelmet = ({ title = '' }: { title: string }) => {\r\n    const imgUrl = process.env.REACT_APP_IMAGE_URL;\r\n    return (\r\n        <Helmet>\r\n            <title>{title}</title>\r\n            <link rel=\"icon\" type=\"image/png\" href={`${imgUrl}/logo.png`} />\r\n        </Helmet>\r\n    );\r\n};\r\n\r\nexport default PageHelmet;","import React, {\n  useContext,\n  useState,\n  useRef,\n  useEffect,\n  useCallback,\n  useImperativeHandle,\n  forwardRef,\n} from \"react\";\nimport { Box, Button, IconButton, MenuItem, Menu } from \"@mui/material\";\nimport AddIcon from \"@mui/icons-material/Add\";\nimport { useMutation, useQuery } from \"react-query\";\nimport Swal from \"sweetalert2\";\nimport SaveIcon from \"@mui/icons-material/Save\";\nimport { AuthContext } from \"../../../../components/AuthContext\";\nimport PersonSearchIcon from \"@mui/icons-material/PersonSearch\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport { LoadingButton } from \"@mui/lab\";\nimport RestartAltIcon from \"@mui/icons-material/RestartAlt\";\nimport DownloadIcon from \"@mui/icons-material/Download\";\nimport {\n  codeCondfirmationAlert,\n  saveCondfirmationAlert,\n} from \"../../../../lib/confirmationAlert\";\nimport DriveFolderUploadIcon from \"@mui/icons-material/DriveFolderUpload\";\nimport { DisplayFile, checkFile } from \"../Claims/Claims\";\nimport { grey } from \"@mui/material/colors\";\nimport {\n  TextAreaInput,\n  TextFormatedInput,\n  TextInput,\n} from \"../../../../components/UpwardFields\";\nimport { format } from \"date-fns\";\nimport PageHelmet from \"../../../../components/Helmet\";\nimport { wait } from \"@testing-library/user-event/dist/utils\";\nimport SearchIcon from \"@mui/icons-material/Search\";\nimport {\n  DataGridViewReact,\n  useUpwardTableModalSearchSafeMode,\n} from \"../../../../components/DataGridViewReact\";\nimport { Loading } from \"../../../../components/Loading\";\nimport AccountBoxIcon from \"@mui/icons-material/AccountBox\";\n\nexport const reducer = (state: any, action: any) => {\n  switch (action.type) {\n    case \"UPDATE_FIELD\":\n      return {\n        ...state,\n        [action.field]: action.value,\n      };\n    default:\n      return state;\n  }\n};\nexport const pdcColumn = [\n  { key: \"Check_No\", label: \"Check No.\", width: 150 },\n  { key: \"Check_Date\", label: \"Check Date\", width: 150 },\n  { key: \"Check_Amnt\", label: \"Amount\", width: 150, type: \"number\" },\n  { key: \"BankName\", label: \"Bank\", width: 200 },\n  { key: \"Branch\", label: \"Branch\", width: 200 },\n  {\n    key: \"Check_Remarks\",\n    label: \"Checked Remarks\",\n    width: 350,\n  },\n  { key: \"Deposit_Slip\", label: \"Deposit Slip\", width: 150 },\n  { key: \"DateDeposit\", label: \"Date Deposit\", width: 150 },\n  { key: \"OR_No\", label: \"OR Num\", width: 150 },\n  { key: \"BankCode\", label: \"Bank Code\", width: 150, hide: true },\n];\nexport const pdcSearchColumn = [\n  { field: \"Date\", headerName: \"Date Received\", width: 160 },\n  { field: \"Ref_No\", headerName: \"Ref No.\", width: 160 },\n  {\n    field: \"Name\",\n    headerName: \"Name\",\n    flex: 1,\n  },\n];\nexport const pdcBanksColumn = [\n  { field: \"Bank_Code\", headerName: \"Code\", width: 130 },\n  { field: \"Bank\", headerName: \"Bank Name\", flex: 1 },\n];\n\nexport default function PostDateChecks() {\n  const modalCheckRef = useRef<any>(null);\n  const tableRef = useRef<any>(null);\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\n  const open = Boolean(anchorEl);\n  const handleClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n    setAnchorEl(event.currentTarget);\n  };\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n  const [isDragging, setIsDragging] = useState(false);\n  const [selectedFiles, setSelectedFiles] = useState<Array<File>>([]);\n  const [showModal, setShowModal] = useState(false);\n\n  const searchInputRef = useRef<HTMLInputElement>(null);\n\n  const [hasSelectedRow, setHasSelectedRow] = useState(null);\n  const [pdcMode, setPdcMode] = useState(\"\");\n\n  const { myAxios, user } = useContext(AuthContext);\n\n  // pdc form save button\n  const fileInputRef = useRef<HTMLInputElement>(null);\n  const savePDCButtonRef = useRef<HTMLButtonElement>(null);\n\n  const addRefButton = useRef<HTMLButtonElement>(null);\n\n  const subRefNoRef = useRef(\"\");\n  const PNoRef = useRef(\"\");\n  const subAccountRef = useRef(\"\");\n\n  const refNoRef = useRef<HTMLInputElement>(null);\n  const dateRef = useRef<HTMLInputElement>(null);\n  const remakrsRef = useRef<HTMLTextAreaElement>(null);\n  const pnRef = useRef<HTMLInputElement>(null);\n  const branchRef = useRef<HTMLInputElement>(null);\n  const clientnameRef = useRef<HTMLTextAreaElement>(null);\n\n  const { isLoading: newRefNumberLoading, refetch: refetchNewRefNumber } =\n    useQuery({\n      queryKey: \"new-ref-number\",\n      queryFn: async () => {\n        return await myAxios.get(\"/task/accounting/pdc-new-ref-number\", {\n          headers: {\n            Authorization: `Bearer ${user?.accessToken}`,\n          },\n        });\n      },\n      refetchOnWindowFocus: false,\n      onSuccess: (res) => {\n        const response = res as any;\n        wait(100).then(() => {\n          subRefNoRef.current = response.data.RefNo[0].pdcID;\n          if (refNoRef.current) {\n            refNoRef.current.value = response.data.RefNo[0].pdcID;\n          }\n        });\n      },\n    });\n\n  const { mutate, isLoading: loadingAddNew } = useMutation({\n    mutationKey: \"update-pdc\",\n    mutationFn: async (variables: any) => {\n      if (pdcMode === \"update\") {\n        delete variables.mode;\n        return await myAxios.post(\"/task/accounting/update-pdc\", variables, {\n          headers: {\n            Authorization: `Bearer ${user?.accessToken}`,\n          },\n        });\n      }\n      delete variables.mode;\n      return await myAxios.post(\"/task/accounting/add-pdc\", variables, {\n        headers: {\n          Authorization: `Bearer ${user?.accessToken}`,\n        },\n      });\n    },\n    onSuccess: (res) => {\n      if (res.data.success) {\n        resetPDC();\n        return Swal.fire({\n          position: \"center\",\n          icon: \"success\",\n          title: res.data.message,\n          showConfirmButton: false,\n          timer: 1500,\n        });\n      }\n\n      Swal.fire({\n        position: \"center\",\n        icon: \"error\",\n        title: res.data.message,\n        showConfirmButton: false,\n        timer: 1500,\n      });\n    },\n  });\n  //selecte search\n\n  const { mutate: mutateSelectedSearch, isLoading: isLoadingSelectedSearch } =\n    useMutation({\n      mutationKey: \"get-search-pdc-check\",\n      mutationFn: async (variables: any) =>\n        await myAxios.post(\"/task/accounting/get-search-pdc-check\", variables, {\n          headers: {\n            Authorization: `Bearer ${user?.accessToken}`,\n          },\n        }),\n      onSuccess: async (res) => {\n        if (!res?.data.success) {\n          return alert(`Error : ${res?.data.message}`);\n        }\n\n        const response = res as any;\n        const Ref_No = response.data.getSearchPDCCheck[0].Ref_No;\n        if (response.data.upload[0]) {\n          const uploadFiles = JSON.parse(response.data.upload[0]?.upload);\n          const newObjContainerBasic = await formatDataToDocument(\n            uploadFiles,\n            `${process.env.REACT_APP_IMAGE_URL}pdc/${Ref_No}`\n          );\n          const fileSelected = await Promise.all(newObjContainerBasic);\n          setSelectedFiles(fileSelected);\n        }\n        async function formatDataToDocument(\n          dataDocument: Array<any>,\n          url: string\n        ) {\n          const newObjContainer: Array<any> = [];\n          for (let index = 0; index < dataDocument.length; index++) {\n            const basicItem = dataDocument[index];\n            const mainURL = `${url}/${basicItem.uniqueFilename}`;\n            const response = await fetch(mainURL);\n            const blob = await response.blob();\n            const file = new File([blob], basicItem.fileName, {\n              type: basicItem.fileType,\n            });\n            const reader = new FileReader();\n            newObjContainer.push(\n              new Promise((resolve, reject) => {\n                reader.onload = function (event) {\n                  resolve(file);\n                };\n                reader.onerror = function (event) {\n                  reject(new Error(\"Error reading file: \" + file.name));\n                };\n                reader.readAsDataURL(file);\n              })\n            );\n          }\n          return newObjContainer;\n        }\n        const data = response.data.getSearchPDCCheck.map((itm: any) => {\n          itm.Check_Amnt = formatNumber(\n            parseFloat(itm.Check_Amnt.toString().replace(/,/g, \"\"))\n          );\n          return itm;\n        });\n        tableRef.current.setDataFormated(data);\n\n        if (refNoRef.current) {\n          refNoRef.current.value = response.data.getSearchPDCCheck[0].Ref_No;\n        }\n        if (clientnameRef.current) {\n          clientnameRef.current.value = response.data.getSearchPDCCheck[0].Name;\n        }\n        if (dateRef.current) {\n          dateRef.current.value = response.data.getSearchPDCCheck[0].Date;\n        }\n        if (pnRef.current) {\n          pnRef.current.value = response.data.getSearchPDCCheck[0].PNo;\n        }\n        if (branchRef.current) {\n          branchRef.current.value = response.data.getSearchPDCCheck[0].Acronym;\n        }\n        if (remakrsRef.current) {\n          remakrsRef.current.value = response.data.getSearchPDCCheck[0].Remarks;\n        }\n        PNoRef.current = response.data.getSearchPDCCheck[0].IDNo;\n        subAccountRef.current = response.data.getSearchPDCCheck[0].sub_account;\n      },\n    });\n\n  // policy ids search table modal\n  const {\n    UpwardTableModalSearch: ClientUpwardTableModalSearch,\n    openModal: clientOpenModal,\n    closeModal: clientCloseModal,\n  } = useUpwardTableModalSearchSafeMode({\n    size: \"large\",\n    link: \"/task/accounting/search-pdc-policy-id\",\n    column: [\n      { key: \"Type\", label: \"Type\", width: 100 },\n      { key: \"IDNo\", label: \"ID No.\", width: 120 },\n      {\n        key: \"Name\",\n        label: \"Name\",\n        width: 350,\n      },\n      { key: \"chassis\", label: \"Chassis No.\", width: 200 },\n      {\n        key: \"remarks\",\n        label: \"remarks\",\n        width: 0,\n        hide: true,\n      },\n      {\n        key: \"client_id\",\n        label: \"client_id\",\n        width: 0,\n        hide: true,\n      },\n      {\n        key: \"Acronym\",\n        label: \"Acronym\",\n        width: 0,\n        hide: true,\n      },\n      {\n        key: \"sub_account\",\n        label: \"sub_account\",\n        width: 0,\n        hide: true,\n      },\n    ],\n    getSelectedItem: async (rowItm: any, _: any, rowIdx: any, __: any) => {\n      if (rowItm) {\n        wait(100).then(() => {\n          PNoRef.current = rowItm[5];\n          subAccountRef.current = rowItm[7];\n          if (pnRef.current) {\n            pnRef.current.value = rowItm[1];\n          }\n          if (clientnameRef.current) {\n            clientnameRef.current.value = rowItm[2];\n          }\n          if (branchRef.current) {\n            branchRef.current.value = rowItm[6];\n          }\n          if (rowItm[4] && rowItm[4] !== \"\") {\n            if (remakrsRef.current) {\n              remakrsRef.current.value = rowItm[4];\n            }\n          }\n        });\n        clientCloseModal();\n      }\n    },\n  });\n\n  // pdc search table modal\n  const {\n    UpwardTableModalSearch: PDCUpwardTableModalSearch,\n    openModal: pdcOpenModal,\n    closeModal: pdcCloseModal,\n  } = useUpwardTableModalSearchSafeMode({\n    link: \"/task/accounting/search-pdc\",\n    column: [\n      { key: \"Date\", label: \"Date Received\", width: 90 },\n      { key: \"Ref_No\", label: \"Ref No.\", width: 70 },\n      {\n        key: \"Name\",\n        label: \"Name\",\n        width: 320,\n      },\n    ],\n    getSelectedItem: async (rowItm: any, _: any, rowIdx: any, __: any) => {\n      if (rowItm) {\n        wait(100).then(() => {\n          console.log(rowItm[2]);\n          mutateSelectedSearch({ ref_no: rowItm[1] });\n          setPdcMode(\"update\");\n        });\n        pdcCloseModal();\n      }\n    },\n  });\n\n  const handleOnSave = useCallback(\n    async (e: any) => {\n      const pdcTableData = tableRef.current.getDataFormatted();\n\n      if (pnRef.current && pnRef.current.value === \"\") {\n        return Swal.fire({\n          position: \"center\",\n          icon: \"warning\",\n          title: \"Please provide loan information!\",\n          timer: 1500,\n        }).then(() => {\n          setTimeout(() => {\n            pnRef.current?.click();\n          }, 350);\n        });\n      }\n      if (pdcTableData.length <= 0) {\n        return Swal.fire({\n          position: \"center\",\n          icon: \"warning\",\n          title: \"Please provide entry!\",\n          timer: 1500,\n        });\n      }\n\n      const filePromises: Array<any> = [];\n      function fileTransfer(filePromises: Array<any>) {\n        const files = selectedFiles;\n        if (files.length > 0) {\n          for (let i = 0; i < files.length; i++) {\n            const file = files[i];\n            const reader = new FileReader();\n            filePromises.push(\n              new Promise((resolve, reject) => {\n                reader.onload = function (event) {\n                  resolve({\n                    datakey: \"pdc_file\",\n                    fileName: file.name,\n                    fileContent: event.target?.result,\n                    fileType: file.type,\n                    file,\n                  });\n                };\n                reader.onerror = function (event) {\n                  reject(new Error(\"Error reading file: \" + file.name));\n                };\n                reader.readAsDataURL(file);\n              })\n            );\n          }\n        }\n      }\n      fileTransfer(filePromises);\n      const fileToSave = await Promise.all(filePromises);\n      const stateSubmited = {\n        Ref_No: refNoRef.current?.value,\n        PNo: pnRef.current?.value,\n        IDNo: PNoRef.current,\n        Date: dateRef.current?.value,\n        Name: clientnameRef.current?.value,\n        Remarks: remakrsRef.current?.value,\n        Branch: branchRef.current?.value,\n        checks: JSON.stringify(pdcTableData),\n      };\n      if (pdcMode === \"update\") {\n        codeCondfirmationAlert({\n          isUpdate: true,\n          cb: (userCodeConfirmation) => {\n            mutate({ ...stateSubmited, userCodeConfirmation, fileToSave });\n          },\n        });\n      } else {\n        saveCondfirmationAlert({\n          isConfirm: () => {\n            mutate({ ...stateSubmited, fileToSave });\n          },\n        });\n      }\n    },\n    [mutate, selectedFiles, pdcMode]\n  );\n\n  const handleDragLeave = (e: React.DragEvent<HTMLDivElement>) => {\n    e.preventDefault();\n    setIsDragging(false);\n  };\n  const handleDragEnter = (e: React.DragEvent<HTMLDivElement>) => {\n    e.preventDefault();\n    setIsDragging(true);\n  };\n  const handleDrop = (e: React.DragEvent<HTMLDivElement>) => {\n    e.preventDefault();\n    const fileList = e.dataTransfer.files;\n    const files = Array.from(fileList);\n    const newFiles = [...selectedFiles, ...files];\n    setIsDragging(false);\n    if (checkFile(newFiles)) {\n      fileInputRef.current?.click();\n      return alert(\"file is not valid Extention!\");\n    } else {\n      setSelectedFiles(newFiles);\n    }\n  };\n\n  const { mutate: mutatePrint, isLoading: isLoadingPrint } = useMutation({\n    mutationKey: \"print\",\n    mutationFn: async (variables: any) => {\n      return await myAxios.post(\"/task/accounting/print\", variables, {\n        responseType: \"arraybuffer\",\n        headers: {\n          Authorization: `Bearer ${user?.accessToken}`,\n        },\n      });\n    },\n    onSuccess: (response) => {\n      const pdfBlob = new Blob([response.data], { type: \"application/pdf\" });\n      const pdfUrl = URL.createObjectURL(pdfBlob);\n      // window.open(pdfUrl);\n      var newTab = window.open();\n      if (newTab) {\n        newTab.document.write(\"<!DOCTYPE html>\");\n        newTab.document.write(\n          \"<html><head><title>New Tab with iframe</title></head>\"\n        );\n        newTab.document.write(\n          '<body style=\"width:100vw;height:100vh;padding:0;margin:0;box-sizing:border-box;\">'\n        );\n        newTab.document.write(\n          `<iframe style=\"border:none;outline:none;padding:0;margin:0\" src=\"${pdfUrl}\" width=\"99%\" height=\"99%\"></iframe>`\n        );\n\n        newTab.document.write(\"</body></html>\");\n        // Optional: Close the document stream after writing\n        newTab.document.close();\n      }\n    },\n  });\n\n  const clickPDCReceipt = () => {\n    const pdcTableData = tableRef.current.getDataFormatted();\n    const state = {\n      Ref_No: refNoRef.current?.value,\n      PNo: pnRef.current?.value,\n      IDNo: PNoRef.current,\n      Date: dateRef.current?.value,\n      Name: clientnameRef.current?.value,\n      Remarks: remakrsRef.current?.value,\n      Branch: branchRef.current?.value,\n    };\n    mutatePrint({\n      printOption: \"receipt\",\n      pdcTableData,\n      state,\n    });\n  };\n  const clickPDCLabeling = () => {\n    const state = {\n      name: clientnameRef.current?.value,\n      pno: PNoRef.current,\n      ref: refNoRef.current?.value,\n    };\n    mutatePrint({\n      printOption: \"labeling\",\n      pdcTableData: [],\n      state,\n    });\n    // let printString = () => {\n    //   return (\n    //     <div>\n    //       <p\n    //         style={{\n    //           color: \"#d1d5db\",\n    //           fontSize: \"11px\",\n    //           textAlign: \"center\",\n    //           padding: 0,\n    //           marginTop: \"8px\",\n    //           marginBottom: 0,\n    //         }}\n    //       >\n    //         UCSMI\n    //       </p>\n    //       <p\n    //         style={{\n    //           color: \"#d1d5db\",\n    //           fontSize: \"11px\",\n    //           textAlign: \"center\",\n    //           padding: 0,\n    //           margin: 0,\n    //         }}\n    //       >\n    //         {clientnameRef.current?.value}\n    //       </p>\n    //       <p\n    //         style={{\n    //           color: \"#d1d5db\",\n    //           fontSize: \"11px\",\n    //           textAlign: \"center\",\n    //           padding: 0,\n    //           margin: 0,\n    //         }}\n    //       >\n    //         {PNoRef.current}\n    //       </p>\n    //       <p\n    //         style={{\n    //           color: \"#d1d5db\",\n    //           fontSize: \"11px\",\n    //           textAlign: \"center\",\n    //           padding: 0,\n    //           margin: \"20px\",\n    //         }}\n    //       >\n    //         {refNoRef.current?.value}\n    //       </p>\n    //     </div>\n    //   );\n    // };\n\n    // flushSync(() => {\n    //   const elementString = ReactDOMServer.renderToString(printString());\n    //   localStorage.setItem(\"printString\", elementString);\n    //   localStorage.removeItem(\"dataString\");\n    //   localStorage.setItem(\"paper-width\", \"8.5in\");\n    //   localStorage.setItem(\"paper-height\", \"11in\");\n    // });\n    // window.open(\"/dashboard/print\", \"_blank\");\n  };\n\n  function resetPDC() {\n    setPdcMode(\"\");\n    tableRef.current.setSelectedRow(null);\n    tableRef.current.resetCheckBox();\n    tableRef.current.setData([]);\n    refetchNewRefNumber();\n\n    if (dateRef.current) {\n      dateRef.current.value = format(new Date(), \"yyyy-MM-dd\");\n    }\n    if (remakrsRef.current) {\n      remakrsRef.current.value = \"\";\n    }\n    if (pnRef.current) {\n      pnRef.current.value = \"\";\n    }\n    if (branchRef.current) {\n      branchRef.current.value = \"\";\n    }\n    if (clientnameRef.current) {\n      clientnameRef.current.value = \"\";\n    }\n  }\n  function formatNumber(num: number) {\n    return (num || 0).toLocaleString(\"en-US\", {\n      minimumFractionDigits: 2,\n      maximumFractionDigits: 2,\n    });\n  }\n  function handleCheckDetailsSave() {\n    function incrementStringNumbers(str: string, increment: number) {\n      let num = parseInt(str);\n      num = num + increment;\n      return num.toString().padStart(str.length, \"0\");\n    }\n    function incrementDate(dateString: any, i: number) {\n      const currentDate = new Date(dateString);\n      currentDate.setMonth(currentDate.getMonth() + i);\n\n      return format(currentDate, \"yyyy-MM-dd\");\n    }\n    function isValidDate(dateString: string): boolean {\n      const date = new Date(dateString);\n      return date instanceof Date && !isNaN(date.getTime());\n    }\n\n    if (\n      modalCheckRef.current.getRefs().checknoRef.current &&\n      modalCheckRef.current.getRefs().bankRef.current &&\n      modalCheckRef.current.getRefs().branchRef.current &&\n      modalCheckRef.current.getRefs().remarksRef.current &&\n      modalCheckRef.current.getRefs().checkdateRef.current &&\n      modalCheckRef.current.getRefs().amountRef.current\n    ) {\n      const tableRows = tableRef.current.getDataFormatted();\n      const selectedIndex = tableRef.current.getSelectedRow();\n\n      const filteredChecks = tableRows.filter((itm: any) => {\n        return (\n          modalCheckRef.current.getRefs().checknoRef.current &&\n          modalCheckRef.current.getRefs().checknoRef.current.value ===\n            itm.Check_No\n        );\n      });\n\n      if (filteredChecks.length > 0 && selectedIndex === null) {\n        alert(\"check no. is already exist!\");\n        modalCheckRef.current.getRefs().checknoRef.current.focus();\n        return;\n      }\n      if (modalCheckRef.current.getRefs().checknoRef.current.value === \"\") {\n        alert(\"check no. is required!\");\n        modalCheckRef.current.getRefs().checknoRef.current.focus();\n        return;\n      } else if (modalCheckRef.current.getRefs().bankRef.current.value === \"\") {\n        alert(\"bank is required!\");\n        modalCheckRef.current.getRefs().bankRef.current.focus();\n        return;\n      } else if (\n        modalCheckRef.current.getRefs().branchRef.current.value === \"\"\n      ) {\n        alert(\"branch is required!\");\n        modalCheckRef.current.getRefs().bankRef.current.focus();\n        return;\n      } else if (\n        !isValidDate(modalCheckRef.current.getRefs().checkdateRef.current.value)\n      ) {\n        alert(\"invalid date!\");\n        modalCheckRef.current.getRefs().checkdateRef.current.focus();\n        return;\n      } else if (\n        isNaN(\n          parseFloat(\n            modalCheckRef.current\n              .getRefs()\n              .amountRef.current?.value.toString()\n              .replace(/,/g, \"\")\n          )\n        )\n      ) {\n        alert(\"amount must be greater than 0!\");\n        modalCheckRef.current.getRefs().amountRef.current.focus();\n        return;\n      }\n\n      if (\n        modalCheckRef.current.getRefs().checknoRef.current &&\n        modalCheckRef.current.getRefs().bankRef.current &&\n        modalCheckRef.current.getRefs().branchRef.current &&\n        modalCheckRef.current.getRefs().remarksRef.current &&\n        modalCheckRef.current.getRefs().checkdateRef.current &&\n        modalCheckRef.current.getRefs().amountRef.current\n      ) {\n        if (selectedIndex !== null) {\n          const selectedRow = tableRef.current.getData();\n\n          selectedRow[selectedIndex][0] =\n            modalCheckRef.current.getRefs().checknoRef.current.value;\n          selectedRow[selectedIndex][1] =\n            modalCheckRef.current.getRefs().checkdateRef.current.value;\n          selectedRow[selectedIndex][2] = formatNumber(\n            parseNumber(\n              modalCheckRef.current\n                .getRefs()\n                .amountRef.current?.value.toString()\n                .replace(/,/g, \"\")\n            )\n          );\n          selectedRow[selectedIndex][3] =\n            modalCheckRef.current.getRefs().bankRef.current.value;\n          selectedRow[selectedIndex][4] =\n            modalCheckRef.current.getRefs().branchRef.current.value;\n          selectedRow[selectedIndex][5] =\n            modalCheckRef.current.getRefs().remarksRef.current.value;\n          selectedRow[selectedIndex][6] =\n            modalCheckRef.current.getRefs()._slipCodeRef.current;\n          selectedRow[selectedIndex][7] =\n            modalCheckRef.current.getRefs()._slipDateRef.current;\n          selectedRow[selectedIndex][8] =\n            modalCheckRef.current.getRefs()._checkOR.current;\n          selectedRow[selectedIndex][9] =\n            modalCheckRef.current.getRefs().bankCode.current;\n\n          tableRef.current.setData(selectedRow);\n          tableRef.current.setSelectedRow(null);\n          tableRef.current.resetCheckBox();\n          setHasSelectedRow(null);\n          return;\n        } else {\n          const checkCount =\n            parseInt(\n              modalCheckRef.current.getRefs()._checkcountRef.current.value\n            ) <= 0\n              ? 1\n              : parseInt(\n                  modalCheckRef.current.getRefs()._checkcountRef.current.value\n                );\n          const newData: any = [];\n          for (let i = 0; i < checkCount; i++) {\n            newData.push([\n              incrementStringNumbers(\n                modalCheckRef.current.getRefs().checknoRef.current.value,\n                i\n              ),\n              incrementDate(\n                modalCheckRef.current.getRefs().checkdateRef.current.value,\n                i\n              ),\n              formatNumber(\n                parseNumber(\n                  modalCheckRef.current\n                    .getRefs()\n                    .amountRef.current?.value.toString()\n                    .replace(/,/g, \"\")\n                )\n              ),\n              modalCheckRef.current.getRefs().bankRef.current.value,\n              modalCheckRef.current.getRefs().branchRef.current.value,\n              modalCheckRef.current.getRefs().remarksRef.current.value,\n              modalCheckRef.current.getRefs()._slipCodeRef.current,\n              modalCheckRef.current.getRefs()._slipDateRef.current,\n              modalCheckRef.current.getRefs()._checkOR.current,\n              modalCheckRef.current.getRefs().bankCode.current,\n            ]);\n          }\n\n          tableRef.current.setData([...tableRef.current.getData(), ...newData]);\n        }\n      }\n    }\n  }\n  useEffect(() => {\n    const handleKeyDown = (event: any) => {\n      if ((event.ctrlKey || event.metaKey) && event.key === \"s\") {\n        event.preventDefault();\n        handleOnSave(event);\n      }\n    };\n\n    window.addEventListener(\"keydown\", handleKeyDown);\n    return () => {\n      window.removeEventListener(\"keydown\", handleKeyDown);\n    };\n  }, [handleOnSave]);\n\n  const isDisableField = pdcMode === \"\";\n\n  return (\n    <>\n      <ModalCheck\n        ref={modalCheckRef}\n        handleOnSave={() => {\n          handleCheckDetailsSave();\n          modalCheckRef.current.clsoeModal();\n        }}\n        handleOnClose={() => {\n          tableRef.current.setSelectedRow(null);\n          tableRef.current.resetCheckBox();\n\n          // buttonCheckSave.current?.focus();\n        }}\n        hasSelectedRow={hasSelectedRow}\n      />\n      <ClientUpwardTableModalSearch />\n      <PDCUpwardTableModalSearch />\n      <PageHelmet title=\"PDC\" />\n      {(loadingAddNew || isLoadingSelectedSearch || isLoadingPrint) && (\n        <Loading />\n      )}\n      <div\n        style={{\n          width: \"100%\",\n          height: \"100%\",\n          flex: 1,\n          background: \"red\",\n          padding: \"10px\",\n          backgroundColor: \"#F1F1F1\",\n        }}\n      >\n        <Box\n          sx={(theme) => ({\n            display: \"flex\",\n            alignItems: \"center\",\n            columnGap: \"20px\",\n            [theme.breakpoints.down(\"sm\")]: {\n              flexDirection: \"column\",\n              alignItems: \"flex-start\",\n              flex: 1,\n              marginBottom: \"15px\",\n            },\n          })}\n        >\n          <div\n            style={{\n              display: \"flex\",\n              alignItems: \"center\",\n              columnGap: \"5px\",\n              marginBottom: \"15px\",\n            }}\n          >\n            <TextInput\n              label={{\n                title: \"Search: \",\n                style: {\n                  fontSize: \"12px\",\n                  fontWeight: \"bold\",\n                  width: \"50px\",\n                },\n              }}\n              input={{\n                className: \"search-input-up-on-key-down\",\n                type: \"search\",\n                onKeyDown: (e) => {\n                  if (e.key === \"Enter\" || e.key === \"NumpadEnter\") {\n                    e.preventDefault();\n                    pdcOpenModal(e.currentTarget.value);\n                  }\n                },\n                style: { width: \"500px\" },\n              }}\n              icon={<SearchIcon sx={{ fontSize: \"18px\" }} />}\n              onIconClick={(e) => {\n                e.preventDefault();\n                if (searchInputRef.current)\n                  pdcOpenModal(searchInputRef.current.value);\n              }}\n              inputRef={searchInputRef}\n            />\n            {pdcMode === \"\" && (\n              <Button\n                sx={{\n                  height: \"30px\",\n                  fontSize: \"11px\",\n                }}\n                variant=\"contained\"\n                startIcon={<AddIcon sx={{ width: 15, height: 15 }} />}\n                id=\"entry-header-save-button\"\n                color=\"primary\"\n                onClick={() => {\n                  setPdcMode(\"add\");\n                }}\n              >\n                New\n              </Button>\n            )}\n            <LoadingButton\n              sx={{\n                height: \"30px\",\n                fontSize: \"11px\",\n              }}\n              ref={savePDCButtonRef}\n              id=\"save-entry-header\"\n              color=\"success\"\n              variant=\"contained\"\n              type=\"submit\"\n              onClick={handleOnSave}\n              disabled={pdcMode === \"\"}\n              loading={loadingAddNew}\n              startIcon={<SaveIcon sx={{ width: 15, height: 15 }} />}\n            >\n              Save\n            </LoadingButton>\n            {(pdcMode === \"add\" || pdcMode === \"update\") && (\n              <Button\n                sx={{\n                  height: \"30px\",\n                  fontSize: \"11px\",\n                }}\n                variant=\"contained\"\n                startIcon={<CloseIcon sx={{ width: 15, height: 15 }} />}\n                onClick={() => {\n                  Swal.fire({\n                    title: \"Are you sure?\",\n                    text: \"You won't be able to revert this!\",\n                    icon: \"warning\",\n                    showCancelButton: true,\n                    confirmButtonColor: \"#3085d6\",\n                    cancelButtonColor: \"#d33\",\n                    confirmButtonText: \"Yes, cancel it!\",\n                  }).then((result) => {\n                    if (result.isConfirmed) {\n                      resetPDC();\n                    }\n                  });\n                }}\n                color=\"error\"\n              >\n                Cancel\n              </Button>\n            )}\n            <Button\n              sx={{\n                height: \"30px\",\n                fontSize: \"11px\",\n              }}\n              disabled={pdcMode === \"\"}\n              variant=\"contained\"\n              startIcon={<AddIcon sx={{ width: 15, height: 15 }} />}\n              onClick={() => {\n                wait(100).then(() => {\n                  const tableRows = tableRef.current.getDataFormatted();\n                  const getLastCheck_No: any = tableRows[tableRows.length - 1];\n                  if (modalCheckRef.current.getRefs().checknoRef.current) {\n                    modalCheckRef.current.getRefs().checknoRef.current.value =\n                      incrementCheckNo(getLastCheck_No?.Check_No);\n                  }\n                  tableRef.current.setSelectedRow(null);\n                  tableRef.current.resetCheckBox();\n\n                  setHasSelectedRow(null);\n                  modalCheckRef.current.getRefs().checknoRef.current?.focus();\n                });\n                modalCheckRef.current?.showModal();\n              }}\n              ref={addRefButton}\n            >\n              Add Check\n            </Button>\n            <div>\n              <Button\n                disabled={pdcMode !== \"update\"}\n                id=\"basic-button\"\n                aria-controls={open ? \"basic-menu\" : undefined}\n                aria-haspopup=\"true\"\n                aria-expanded={open ? \"true\" : undefined}\n                onClick={handleClick}\n                sx={{\n                  height: \"30px\",\n                  fontSize: \"11px\",\n                  color: \"white\",\n                  backgroundColor: grey[600],\n                  \"&:hover\": {\n                    backgroundColor: grey[700],\n                  },\n                }}\n              >\n                Print\n              </Button>\n              <Menu\n                id=\"basic-menu\"\n                anchorEl={anchorEl}\n                open={open}\n                onClose={handleClose}\n                MenuListProps={{\n                  \"aria-labelledby\": \"basic-button\",\n                }}\n              >\n                <MenuItem onClick={clickPDCReceipt}>PDC Receipt</MenuItem>\n                <MenuItem onClick={clickPDCLabeling}>PDC Labeling</MenuItem>\n              </Menu>\n            </div>\n          </div>\n        </Box>\n        <form\n          onKeyDown={(e) => {\n            if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n              e.preventDefault();\n              return;\n            }\n          }}\n          style={{\n            marginBottom: \"20px\",\n          }}\n        >\n          <Box\n            sx={(theme) => ({\n              display: \"flex\",\n              columnGap: \"15px\",\n              flexDirection: \"row\",\n              [theme.breakpoints.down(\"md\")]: {\n                flexDirection: \"column\",\n                rowGap: \"10px\",\n              },\n            })}\n          >\n            <Box\n              sx={{\n                display: \"flex\",\n                gap: \"10px\",\n                width: \"100%\",\n              }}\n            >\n              <fieldset\n                style={\n                  {\n                    flex: 1,\n                    display: \"flex\",\n                    flexDirection: \"column\",\n                    gap: \"10px\",\n                    padding: \"15px\",\n                    border: \"1px solid #cbd5e1\",\n                    borderRadius: \"5px\",\n                  } as any\n                }\n              >\n                <div\n                  style={{\n                    display: \"flex\",\n                    gap: \"15px\",\n                  }}\n                >\n                  {newRefNumberLoading ? (\n                    <LoadingButton loading={newRefNumberLoading} />\n                  ) : (\n                    <TextInput\n                      label={{\n                        title: \"Reference No.\",\n                        style: {\n                          fontSize: \"12px\",\n                          fontWeight: \"bold\",\n                          width: \"100px\",\n                        },\n                      }}\n                      input={{\n                        disabled: isDisableField,\n                        type: \"text\",\n                        style: { width: \"300px\" },\n                        onKeyDown: (e) => {\n                          if (e.key === \"Enter\" || e.key === \"NumpadEnter\") {\n                            e.preventDefault();\n                            dateRef.current?.focus();\n                          }\n                        },\n                      }}\n                      inputRef={refNoRef}\n                      icon={\n                        <RestartAltIcon\n                          sx={{\n                            fontSize: \"18px\",\n                            color: isDisableField ? \"gray\" : \"black\",\n                          }}\n                        />\n                      }\n                      disableIcon={isDisableField}\n                    />\n                  )}\n\n                  <TextInput\n                    label={{\n                      title: \"Date : \",\n                      style: {\n                        fontSize: \"12px\",\n                        fontWeight: \"bold\",\n                        width: \"50px\",\n                      },\n                    }}\n                    input={{\n                      disabled: isDisableField,\n                      type: \"date\",\n                      defaultValue: format(new Date(), \"yyyy-MM-dd\"),\n                      style: { width: \"190px\" },\n                      onKeyDown: (e) => {\n                        if (e.code === \"NumpadEnter\" || e.code === \"Enter\") {\n                          remakrsRef.current?.focus();\n                        }\n                      },\n                    }}\n                    inputRef={dateRef}\n                  />\n                </div>\n\n                <TextAreaInput\n                  label={{\n                    title: \"Remarks : \",\n                    style: {\n                      fontSize: \"12px\",\n                      fontWeight: \"bold\",\n                      width: \"100px\",\n                    },\n                  }}\n                  textarea={{\n                    rows: 2,\n                    disabled: isDisableField,\n                    style: { flex: 1 },\n                    onKeyDown: (e) => {\n                      e.stopPropagation();\n                      if (\n                        (e.code === \"NumpadEnter\" && !e.shiftKey) ||\n                        (e.code === \"Enter\" && !e.shiftKey)\n                      ) {\n                        pnRef.current?.focus();\n                      }\n                    },\n                  }}\n                  _inputRef={remakrsRef}\n                />\n              </fieldset>\n              <fieldset\n                style={\n                  {\n                    flex: 1,\n                    display: \"flex\",\n                    gap: \"10px\",\n                    padding: \" 15px\",\n                    border: \"1px solid #cbd5e1\",\n                    borderRadius: \"5px\",\n                    flexDirection: \"column\",\n                  } as any\n                }\n              >\n                <div\n                  style={{\n                    width: \"100%\",\n                    flex: 1,\n                    display: \"flex\",\n                    gap: \"15px\",\n                  }}\n                >\n                  <TextInput\n                    label={{\n                      title: \"PN/Client ID : \",\n                      style: {\n                        fontSize: \"12px\",\n                        fontWeight: \"bold\",\n                        width: \"100px\",\n                      },\n                    }}\n                    input={{\n                      disabled: isDisableField,\n                      type: \"text\",\n                      style: { width: \"250px\", height: \"22px\" },\n                      onKeyDown: (e) => {\n                        if (e.key === \"Enter\" || e.key === \"NumpadEnter\") {\n                          e.preventDefault();\n                          if (pnRef.current) {\n                            clientOpenModal(pnRef.current.value);\n                          }\n                        }\n                      },\n                    }}\n                    inputRef={pnRef}\n                    icon={\n                      <PersonSearchIcon\n                        sx={{\n                          fontSize: \"18px\",\n                          color: isDisableField ? \"gray\" : \"black\",\n                        }}\n                      />\n                    }\n                    onIconClick={(e) => {\n                      e.preventDefault();\n                      if (pnRef.current) {\n                        clientOpenModal(pnRef.current.value);\n                      }\n                    }}\n                    disableIcon={isDisableField}\n                  />\n\n                  <TextInput\n                    label={{\n                      title: \"Branch : \",\n                      style: {\n                        fontSize: \"12px\",\n                        fontWeight: \"bold\",\n                        width: \"70px\",\n                      },\n                    }}\n                    input={{\n                      disabled: isDisableField,\n                      type: \"text\",\n                      style: { width: \"auto\", height: \"22px\" },\n                      onKeyDown: (e) => {\n                        if (e.code === \"NumpadEnter\" || e.code === \"Enter\") {\n                          clientnameRef.current?.focus();\n                        }\n                      },\n                    }}\n                    inputRef={branchRef}\n                  />\n                </div>\n\n                <div\n                  style={{ width: \"100%\", display: \"flex\", columnGap: \"10px\" }}\n                >\n                  <TextAreaInput\n                    label={{\n                      title: \"Clients Name : \",\n                      style: {\n                        fontSize: \"12px\",\n                        fontWeight: \"bold\",\n                        width: \"100px\",\n                      },\n                    }}\n                    textarea={{\n                      rows: 2,\n                      disabled: isDisableField,\n                      style: { width: \"325px\" },\n                      onKeyDown: (e) => {\n                        e.stopPropagation();\n                        if (\n                          (e.code === \"NumpadEnter\" && !e.shiftKey) ||\n                          (e.code === \"Enter\" && !e.shiftKey)\n                        ) {\n                          savePDCButtonRef.current?.click();\n                        }\n                      },\n                    }}\n                    _inputRef={clientnameRef}\n                  />\n                  <Button\n                    sx={{\n                      height: \"27px\",\n                      fontSize: \"11px\",\n                    }}\n                    disabled={pdcMode === \"\"}\n                    variant=\"contained\"\n                    startIcon={<DownloadIcon sx={{ width: 15, height: 15 }} />}\n                    onClick={() => {\n                      setShowModal(true);\n                    }}\n                  >\n                    Upload Check\n                  </Button>\n                </div>\n              </fieldset>\n            </Box>\n          </Box>\n        </form>\n        <DataGridViewReact\n          disbaleTable={isDisableField}\n          ref={tableRef}\n          rows={[]}\n          columns={pdcColumn}\n          showSequence={true}\n          getSelectedItem={(rowSelected: any, _: any, RowIndex: any) => {\n            if (rowSelected) {\n              if (\n                (rowSelected[6] && rowSelected[6] !== \"\") ||\n                (rowSelected[7] && rowSelected[7] !== \"\") ||\n                (rowSelected[8] && rowSelected[8] !== \"\")\n              ) {\n                setHasSelectedRow(null);\n                tableRef.current.setSelectedRow(null);\n                tableRef.current.resetCheckBox();\n\n                return Swal.fire({\n                  position: \"center\",\n                  icon: \"warning\",\n                  title: `Unable to delete. Check No ${rowSelected[0]} is already ${rowSelected[8]} issued of OR!`,\n                  showConfirmButton: false,\n                  timer: 1500,\n                });\n              }\n              setHasSelectedRow(RowIndex);\n              modalCheckRef.current?.showModal();\n              wait(100).then(() => {\n                if (\n                  modalCheckRef.current.getRefs().checknoRef.current &&\n                  modalCheckRef.current.getRefs().bankRef.current &&\n                  modalCheckRef.current.getRefs().branchRef.current &&\n                  modalCheckRef.current.getRefs().remarksRef.current &&\n                  modalCheckRef.current.getRefs().checkdateRef.current &&\n                  modalCheckRef.current.getRefs().amountRef.current\n                ) {\n                  modalCheckRef.current.getRefs().checknoRef.current.value =\n                    rowSelected[0];\n                  modalCheckRef.current.getRefs().checkdateRef.current.value =\n                    rowSelected[1];\n                  modalCheckRef.current.getRefs().amountRef.current.value =\n                    formatNumber(parseFloat(rowSelected[2].replace(/,/g, \"\")));\n                  modalCheckRef.current.getRefs().bankRef.current.value =\n                    rowSelected[3];\n                  modalCheckRef.current.getRefs().branchRef.current.value =\n                    rowSelected[4];\n                  modalCheckRef.current.getRefs().remarksRef.current.value =\n                    rowSelected[5];\n                  modalCheckRef.current.getRefs()._slipCodeRef.current =\n                    rowSelected[6] || \"\";\n                  modalCheckRef.current.getRefs()._slipDateRef.current =\n                    rowSelected[7] || \"\";\n                  modalCheckRef.current.getRefs()._checkOR.current =\n                    rowSelected[8] || \"\";\n                  modalCheckRef.current.getRefs().bankCode.current =\n                    rowSelected[9];\n\n                  modalCheckRef.current.getRefs().bankRef.current.focus();\n                }\n              });\n            } else {\n              setHasSelectedRow(null);\n            }\n          }}\n          onKeyDown={(rowSelected: any, RowIndex: any, e: any) => {\n            if (e.code === \"Delete\" || e.code === \"Backspace\") {\n              if (\n                (rowSelected[6] && rowSelected[6] !== \"\") ||\n                (rowSelected[7] && rowSelected[7] !== \"\") ||\n                (rowSelected[8] && rowSelected[8] !== \"\")\n              ) {\n                setHasSelectedRow(null);\n                tableRef.current.setSelectedRow(null);\n                tableRef.current.resetCheckBox();\n\n                return Swal.fire({\n                  position: \"center\",\n                  icon: \"warning\",\n                  title: `Unable to delete. Check No ${rowSelected[0]} is already ${rowSelected[8]} issued of OR!`,\n                  showConfirmButton: false,\n                  timer: 1500,\n                });\n              }\n\n              Swal.fire({\n                title: \"Are you sure?\",\n                text: `You won't to delete this Check No. ${rowSelected[0]}`,\n                icon: \"warning\",\n                showCancelButton: true,\n                confirmButtonColor: \"#3085d6\",\n                cancelButtonColor: \"#d33\",\n                confirmButtonText: \"Yes, delete it!\",\n              }).then((result) => {\n                if (result.isConfirmed) {\n                  setTimeout(() => {\n                    const newData = tableRef.current.getData();\n                    newData.splice(RowIndex, 1);\n                    tableRef.current.setData(newData);\n\n                    setHasSelectedRow(null);\n                    tableRef.current.setSelectedRow(null);\n                    tableRef.current.resetCheckBox();\n                  }, 100);\n                }\n              });\n            }\n          }}\n        />\n\n        <div\n          style={{\n            display: showModal ? \"flex\" : \"none\",\n            position: \"absolute\",\n            top: 0,\n            bottom: 0,\n            left: 0,\n            right: 0,\n            background: \"rgba(158, 155, 157, 0.31)\",\n            zIndex: \"999\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n          }}\n        >\n          <div\n            style={{\n              width: \"90%\",\n              height: \"90%\",\n            }}\n          >\n            <div\n              style={{\n                width: \"90%\",\n                height: \"90%\",\n                overflow: \"auto\",\n                background: \"white\",\n                padding: \"20px\",\n                margin: \"auto\",\n                zIndex: \"9929\",\n                boxShadow: \" -1px 1px 13px 6px rgba(0,0,0,0.54)\",\n                position: \"relative\",\n              }}\n            >\n              <div\n                style={{\n                  height: \"100%\",\n                  width: \"100%\",\n                  position: \"relative\",\n                  display: \"flex\",\n                  justifyContent: \"center\",\n                  alignItems: \"center\",\n                  flexDirection: \"column\",\n                }}\n              >\n                <IconButton\n                  sx={{\n                    position: \"absolute\",\n                    right: \"5px\",\n                    top: \"5px\",\n                  }}\n                  onClick={() => {\n                    setShowModal(false);\n                  }}\n                >\n                  <CloseIcon />\n                </IconButton>\n                <div\n                  style={{\n                    width: \"100%\",\n                    height: \"500px\",\n                    border: isDragging ? \"5px dashed green\" : \"5px dashed grey\",\n                    overflow: \"auto\",\n                    padding: \"10px\",\n                  }}\n                  onDragEnter={handleDragEnter}\n                  onDragOver={(e) => e.preventDefault()}\n                  onDragLeave={handleDragLeave}\n                  onDrop={handleDrop}\n                >\n                  <div\n                    id=\"upload-container\"\n                    style={{\n                      width: \"100%\",\n                      height: \"100%\",\n                      display: \"flex\",\n                      gap: \"10px\",\n                      flexWrap: \"wrap\",\n                    }}\n                    onDragEnter={handleDragEnter}\n                    onDragOver={(e) => e.preventDefault()}\n                    onDragLeave={handleDragLeave}\n                    onDrop={handleDrop}\n                  >\n                    {selectedFiles.map((itm, idx) => {\n                      return (\n                        <DisplayFile\n                          key={idx}\n                          itm={itm}\n                          selectedFiles={selectedFiles}\n                          setSelectedFiles={setSelectedFiles}\n                          fileInput={fileInputRef}\n                        />\n                      );\n                    })}\n                  </div>\n                  {selectedFiles.length <= 0 && (\n                    <div\n                      style={{\n                        position: \"absolute\",\n                        top: \"50%\",\n                        left: \"50%\",\n                        transform: \"translate(-50%,-50%)\",\n                        textAlign: \"center\",\n                      }}\n                    >\n                      <DriveFolderUploadIcon\n                        sx={{ fontSize: \"20em\", color: \"#64748b\" }}\n                      />\n                    </div>\n                  )}\n                  <input\n                    ref={fileInputRef}\n                    type=\"file\"\n                    multiple\n                    style={{ display: \"none\", background: \"white\" }}\n                    id=\"input-file\"\n                    onChange={(e) => {\n                      const fileList = e.target.files as FileList;\n                      const files = Array.from(fileList);\n                      const newFiles = [...selectedFiles, ...files];\n                      if (checkFile(newFiles)) {\n                        return alert(\"file is not valid Extention!\");\n                      }\n                      setSelectedFiles(newFiles);\n                    }}\n                  />\n                </div>\n                <div\n                  style={{\n                    width: \"100%\",\n                  }}\n                >\n                  <Button\n                    fullWidth\n                    onClick={() => {\n                      const inputFile = document.getElementById(\"input-file\");\n                      inputFile?.click();\n                    }}\n                  >\n                    CLick it to upload\n                  </Button>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n\nconst ModalCheck = forwardRef(\n  ({ handleOnSave, handleOnClose, hasSelectedRow }: any, ref) => {\n    const [showModal, setShowModal] = useState(false);\n    const [handleDelayClose, setHandleDelayClose] = useState(false);\n    const [blick, setBlick] = useState(false);\n\n    const checknoRef = useRef<HTMLInputElement>(null);\n    const bankRef = useRef<HTMLInputElement>(null);\n    const branchRef = useRef<HTMLInputElement>(null);\n    const remarksRef = useRef<HTMLTextAreaElement>(null);\n    const checkdateRef = useRef<HTMLInputElement>(null);\n    const amountRef = useRef<HTMLInputElement>(null);\n    const bankCode = useRef(\"\");\n    const _checkcountRef = useRef<HTMLInputElement>(null);\n    const searchModalInputRef = useRef<HTMLInputElement>(null);\n\n    const _slipCodeRef = useRef(\"\");\n    const _slipDateRef = useRef(\"\");\n    const _checkOR = useRef(\"\");\n\n    const closeDelay = () => {\n      setHandleDelayClose(true);\n      setTimeout(() => {\n        setShowModal(false);\n        setHandleDelayClose(false);\n        handleOnClose();\n      }, 100);\n    };\n    const closeDelayRef = useRef<any>(closeDelay);\n\n    useImperativeHandle(ref, () => ({\n      showModal: () => {\n        setShowModal(true);\n      },\n      clsoeModal: () => {\n        setShowModal(false);\n      },\n      getRefs: () => {\n        const refs = {\n          checknoRef,\n          bankRef,\n          branchRef,\n          remarksRef,\n          checkdateRef,\n          amountRef,\n          bankCode,\n          _checkcountRef,\n          _slipCodeRef,\n          _slipDateRef,\n          _checkOR,\n        };\n        return refs;\n      },\n      checknoRef,\n      bankRef,\n      branchRef,\n      remarksRef,\n      checkdateRef,\n      amountRef,\n      bankCode,\n      searchModalInputRef,\n      closeDelay,\n    }));\n\n    const {\n      UpwardTableModalSearch: BankUpwardTableModalSearch,\n      openModal: BankOpenModal,\n      closeModal: BankCloseModal,\n    } = useUpwardTableModalSearchSafeMode({\n      link: \"/task/accounting/search-pdc-banks\",\n      column: [\n        { key: \"Bank_Code\", label: \"Code\", width: 100 },\n        { key: \"Bank\", label: \"Bank Name\", width: 350 },\n      ],\n      getSelectedItem: async (rowItm: any, _: any, rowIdx: any, __: any) => {\n        if (rowItm) {\n          wait(100).then(() => {\n            bankCode.current = rowItm[0];\n            if (bankRef.current) {\n              bankRef.current.value = rowItm[1];\n            }\n            branchRef.current?.focus();\n          });\n          BankCloseModal();\n        }\n      },\n    });\n\n    useEffect(() => {\n      window.addEventListener(\"keydown\", (e: any) => {\n        if (e.key === \"Escape\") {\n          closeDelayRef.current();\n        }\n      });\n    }, []);\n\n    return showModal ? (\n      <>\n        <BankUpwardTableModalSearch />\n        <div\n          style={{\n            position: \"fixed\",\n            top: 0,\n            bottom: 0,\n            left: 0,\n            right: 0,\n            background: \"transparent\",\n            zIndex: \"88\",\n          }}\n          onClick={() => {\n            setBlick(true);\n            setTimeout(() => {\n              setBlick(false);\n            }, 250);\n          }}\n        ></div>\n        <div\n          style={{\n            height: blick ? \"202px\" : \"200px\",\n            width: blick ? \"60.3%\" : \"60%\",\n            border: \"1px solid #64748b\",\n            position: \"absolute\",\n            left: \"50%\",\n            top: \"50%\",\n            transform: \"translate(-50%, -75%)\",\n            display: \"flex\",\n            flexDirection: \"column\",\n            zIndex: handleDelayClose ? -100 : 100,\n            opacity: handleDelayClose ? 0 : 1,\n            transition: \"all 150ms\",\n            boxShadow: \"3px 6px 32px -7px rgba(0,0,0,0.75)\",\n          }}\n        >\n          <div\n            style={{\n              height: \"22px\",\n              background: \"white\",\n              display: \"flex\",\n              justifyContent: \"space-between\",\n              padding: \"5px\",\n              position: \"relative\",\n              alignItems: \"center\",\n            }}\n          >\n            <span style={{ fontSize: \"13px\", fontWeight: \"bold\" }}>\n              Check Details\n            </span>\n            <button\n              className=\"btn-check-exit-modal\"\n              style={{\n                padding: \"0 5px\",\n                borderRadius: \"0px\",\n                background: \"white\",\n                color: \"black\",\n                height: \"22px\",\n                position: \"absolute\",\n                top: 0,\n                right: 0,\n              }}\n              onClick={() => {\n                closeDelay();\n              }}\n            >\n              <CloseIcon sx={{ fontSize: \"22px\" }} />\n            </button>\n          </div>\n          <div\n            style={{\n              flex: 1,\n              background: \"#F1F1F1\",\n              padding: \"5px\",\n              display: \"flex\",\n            }}\n          >\n            <div\n              style={{\n                width: \"55%\",\n                display: \"flex\",\n                flexDirection: \"column\",\n                rowGap: \"5px\",\n                padding: \"10px\",\n              }}\n            >\n              <TextInput\n                label={{\n                  title: \"Check No. : \",\n                  style: {\n                    fontSize: \"12px\",\n                    fontWeight: \"bold\",\n                    width: \"70px\",\n                  },\n                }}\n                input={{\n                  disabled: hasSelectedRow !== null,\n                  type: \"text\",\n                  style: { width: \"160px\" },\n                  onKeyDown: (e) => {\n                    if (e.code === \"NumpadEnter\" || e.code === \"Enter\") {\n                      bankRef.current?.focus();\n                    }\n                  },\n                }}\n                inputRef={checknoRef}\n              />\n\n              <TextInput\n                containerStyle={{\n                  width: \"370px\",\n                }}\n                label={{\n                  title: \"Bank : \",\n                  style: {\n                    fontSize: \"12px\",\n                    fontWeight: \"bold\",\n                    width: \"70px\",\n                  },\n                }}\n                input={{\n                  disabled: false,\n                  type: \"text\",\n                  style: { width: \"300px\" },\n                  onKeyDown: (e) => {\n                    if (e.code === \"NumpadEnter\" || e.code === \"Enter\") {\n                      BankOpenModal(e.currentTarget.value);\n                    }\n                  },\n                }}\n                icon={<AccountBoxIcon sx={{ fontSize: \"18px\" }} />}\n                onIconClick={(e) => {\n                  e.preventDefault();\n                  if (bankRef.current) {\n                    BankOpenModal(bankRef.current.value);\n                  }\n                }}\n                inputRef={bankRef}\n              />\n\n              <TextInput\n                label={{\n                  title: \"Branch : \",\n                  style: {\n                    fontSize: \"12px\",\n                    fontWeight: \"bold\",\n                    width: \"70px\",\n                  },\n                }}\n                input={{\n                  type: \"text\",\n                  style: { width: \"300px\" },\n                  onKeyDown: (e) => {\n                    if (e.code === \"NumpadEnter\" || e.code === \"Enter\") {\n                      remarksRef.current?.focus();\n                    }\n                  },\n                }}\n                inputRef={branchRef}\n              />\n              <TextAreaInput\n                label={{\n                  title: \"Remarks : \",\n                  style: {\n                    fontSize: \"12px\",\n                    fontWeight: \"bold\",\n                    width: \"70px\",\n                  },\n                }}\n                textarea={{\n                  rows: 4,\n                  style: { width: \"300px\" },\n                  onKeyDown: (e) => {\n                    e.stopPropagation();\n                    if (\n                      (e.code === \"NumpadEnter\" && !e.shiftKey) ||\n                      (e.code === \"Enter\" && !e.shiftKey)\n                    ) {\n                      checkdateRef.current?.focus();\n                    }\n                  },\n                }}\n                _inputRef={remarksRef}\n              />\n            </div>\n            <div\n              style={{\n                width: \"45%\",\n                display: \"flex\",\n                flexDirection: \"column\",\n                rowGap: \"5px\",\n                position: \"relative\",\n                padding: \"10px\",\n                alignItems: \"flex-end\",\n              }}\n            >\n              <TextInput\n                label={{\n                  title: \"Date : \",\n                  style: {\n                    fontSize: \"12px\",\n                    fontWeight: \"bold\",\n                    width: \"90px\",\n                  },\n                }}\n                input={{\n                  type: \"date\",\n                  style: { width: \"200px\" },\n                  defaultValue: format(new Date(), \"yyyy-MM-dd\"),\n                  onKeyDown: (e) => {\n                    if (e.code === \"NumpadEnter\" || e.code === \"Enter\") {\n                      amountRef.current?.focus();\n                    }\n                  },\n                }}\n                inputRef={checkdateRef}\n              />\n              <TextFormatedInput\n                label={{\n                  title: \"Amount : \",\n                  style: {\n                    fontSize: \"12px\",\n                    fontWeight: \"bold\",\n                    width: \"90px\",\n                  },\n                }}\n                input={{\n                  placeholder: \"0.00\",\n                  defaultValue: \"\",\n                  type: \"text\",\n                  style: { width: \"200px\" },\n                  onKeyDown: (e) => {\n                    if (e.code === \"NumpadEnter\" || e.code === \"Enter\") {\n                      if (handleOnSave) {\n                        _checkcountRef.current?.focus();\n                      }\n                    }\n                  },\n                }}\n                inputRef={amountRef}\n              />\n              {hasSelectedRow === null && (\n                <TextInput\n                  label={{\n                    title: \"Check Count : \",\n                    style: {\n                      fontSize: \"12px\",\n                      fontWeight: \"bold\",\n                      width: \"90px\",\n                    },\n                  }}\n                  input={{\n                    min: 1,\n                    defaultValue: \"1\",\n                    type: \"number\",\n                    style: { width: \"200px\", textAlign: \"right\" },\n                    onKeyDown: (e) => {\n                      if (e.code === \"NumpadEnter\" || e.code === \"Enter\") {\n                        handleOnSave();\n                      }\n                    },\n                  }}\n                  inputRef={_checkcountRef}\n                />\n              )}\n              <div\n                style={{\n                  display: \"flex\",\n                  columnGap: \"10px\",\n                  flex: 1,\n                  justifyContent: \"flex-end\",\n                  alignItems: \"flex-end\",\n                }}\n              >\n                <Button\n                  variant=\"contained\"\n                  color=\"success\"\n                  style={{\n                    height: \"22px\",\n                    fontSize: \"12px\",\n                  }}\n                  onClick={(e) => {\n                    if (handleOnSave) {\n                      handleOnSave();\n                    }\n                  }}\n                >\n                  OK\n                </Button>\n                <Button\n                  variant=\"contained\"\n                  color=\"error\"\n                  style={{\n                    height: \"22px\",\n                    fontSize: \"12px\",\n                  }}\n                  onClick={(e) => {\n                    closeDelay();\n                  }}\n                >\n                  Cancel\n                </Button>\n              </div>\n            </div>\n          </div>\n          <style>\n            {`\n              .btn-check-exit-modal:hover{\n                background:red !important;\n                color:white !important;\n              }\n            `}\n          </style>\n        </div>\n      </>\n    ) : null;\n  }\n);\n\nexport function setNewStateValue(dispatch: any, obj: any) {\n  Object.entries(obj).forEach(([field, value]) => {\n    dispatch({ type: \"UPDATE_FIELD\", field, value });\n  });\n}\nexport function incrementCheckNo(Check_No: string) {\n  if (Check_No) {\n    let incrementedNumber = (parseInt(Check_No) + 1).toString();\n    while (incrementedNumber.length < Check_No.length) {\n      incrementedNumber = \"0\" + incrementedNumber;\n    }\n    return incrementedNumber;\n  }\n\n  return \"001\";\n}\n\nfunction parseNumber(value: any) {\n  return isNaN(value) || value === \"\" ? 0 : Number(value);\n}\n"],"names":["_ref","_ref$title","title","_jsxs","Helmet","children","_jsx","rel","type","href","concat","process","reducer","state","action","_objectSpread","_defineProperty","field","value","pdcColumn","key","label","width","hide","pdcSearchColumn","headerName","flex","pdcBanksColumn","PostDateChecks","_queryFn","_mutationFn","_mutationFn2","_onSuccess","_getSelectedItem","_getSelectedItem2","_mutationFn3","modalCheckRef","useRef","tableRef","_React$useState","React","_React$useState2","_slicedToArray","anchorEl","setAnchorEl","open","Boolean","_useState","useState","_useState2","isDragging","setIsDragging","_useState3","_useState4","selectedFiles","setSelectedFiles","_useState5","_useState6","showModal","setShowModal","searchInputRef","_useState7","_useState8","hasSelectedRow","setHasSelectedRow","_useState9","_useState10","pdcMode","setPdcMode","_useContext","useContext","AuthContext","myAxios","user","fileInputRef","savePDCButtonRef","addRefButton","subRefNoRef","PNoRef","subAccountRef","refNoRef","dateRef","remakrsRef","pnRef","branchRef","clientnameRef","_useQuery","useQuery","queryKey","queryFn","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","get","headers","Authorization","accessToken","abrupt","sent","stop","apply","arguments","refetchOnWindowFocus","onSuccess","res","response","wait","then","current","data","RefNo","pdcID","newRefNumberLoading","isLoading","refetchNewRefNumber","refetch","_useMutation","useMutation","mutationKey","mutationFn","_x","_callee2","variables","_context2","mode","post","success","resetPDC","Swal","position","icon","message","showConfirmButton","timer","mutate","loadingAddNew","_useMutation2","_x2","_callee3","_context3","_x3","_callee5","_formatDataToDocument","Ref_No","_response$data$upload","uploadFiles","newObjContainerBasic","fileSelected","formatDataToDocument","_context6","_x4","_x5","_callee4","dataDocument","url","newObjContainer","_loop","index","_context5","basicItem","mainURL","blob","file","reader","_context4","uniqueFilename","fetch","File","fileName","fileType","FileReader","push","Promise","resolve","reject","onload","event","onerror","Error","name","readAsDataURL","length","delegateYield","alert","getSearchPDCCheck","upload","JSON","parse","all","map","itm","Check_Amnt","formatNumber","parseFloat","toString","replace","setDataFormated","Name","Date","PNo","Acronym","Remarks","IDNo","sub_account","mutateSelectedSearch","isLoadingSelectedSearch","_useUpwardTableModalS","useUpwardTableModalSearchSafeMode","size","link","column","getSelectedItem","_x6","_x7","_x8","_x9","_callee6","rowItm","_","rowIdx","__","_context7","clientCloseModal","ClientUpwardTableModalSearch","UpwardTableModalSearch","clientOpenModal","openModal","closeModal","_useUpwardTableModalS2","_x10","_x11","_x12","_x13","_callee7","_context8","console","log","ref_no","pdcCloseModal","PDCUpwardTableModalSearch","pdcOpenModal","handleOnSave","useCallback","_x14","_callee8","e","_refNoRef$current","_pnRef$current2","_dateRef$current","_clientnameRef$curren","_remakrsRef$current","_branchRef$current","pdcTableData","filePromises","fileTransfer","fileToSave","stateSubmited","_context9","files","_loop2","i","_event$target","datakey","fileContent","target","result","getDataFormatted","setTimeout","_pnRef$current","click","Branch","checks","stringify","codeCondfirmationAlert","isUpdate","cb","userCodeConfirmation","saveCondfirmationAlert","isConfirm","handleDragLeave","preventDefault","handleDragEnter","handleDrop","_fileInputRef$current","fileList","dataTransfer","Array","from","newFiles","_toConsumableArray","checkFile","_useMutation3","_x15","_callee9","_context10","responseType","pdfBlob","Blob","pdfUrl","URL","createObjectURL","newTab","window","document","write","close","mutatePrint","isLoadingPrint","setSelectedRow","resetCheckBox","setData","format","num","toLocaleString","minimumFractionDigits","maximumFractionDigits","useEffect","handleKeyDown","ctrlKey","metaKey","addEventListener","removeEventListener","isDisableField","_Fragment","ModalCheck","ref","incrementStringNumbers","str","increment","parseInt","padStart","incrementDate","dateString","currentDate","setMonth","getMonth","getRefs","checknoRef","bankRef","remarksRef","checkdateRef","amountRef","_modalCheckRef$curren","tableRows","selectedIndex","getSelectedRow","filter","Check_No","focus","date","isNaN","getTime","isValidDate","_modalCheckRef$curren2","selectedRow","getData","parseNumber","_slipCodeRef","_slipDateRef","_checkOR","bankCode","checkCount","_checkcountRef","newData","_modalCheckRef$curren3","handleCheckDetailsSave","clsoeModal","handleOnClose","PageHelmet","Loading","style","height","background","padding","backgroundColor","Box","sx","theme","display","alignItems","columnGap","breakpoints","down","flexDirection","marginBottom","TextInput","fontSize","fontWeight","input","className","onKeyDown","currentTarget","SearchIcon","onIconClick","inputRef","Button","variant","startIcon","AddIcon","id","color","onClick","LoadingButton","disabled","loading","SaveIcon","CloseIcon","text","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","isConfirmed","_modalCheckRef$curren5","_modalCheckRef$curren4","getLastCheck_No","incrementCheckNo","undefined","grey","Menu","onClose","MenuListProps","MenuItem","_refNoRef$current2","_pnRef$current3","_dateRef$current2","_clientnameRef$curren2","_remakrsRef$current2","_branchRef$current2","printOption","_clientnameRef$curren3","_refNoRef$current3","pno","code","rowGap","gap","border","borderRadius","_dateRef$current3","RestartAltIcon","disableIcon","defaultValue","_remakrsRef$current3","TextAreaInput","textarea","rows","_pnRef$current4","stopPropagation","shiftKey","_inputRef","PersonSearchIcon","_clientnameRef$curren4","_savePDCButtonRef$cur","DownloadIcon","DataGridViewReact","disbaleTable","columns","showSequence","rowSelected","RowIndex","_modalCheckRef$curren6","splice","top","bottom","left","right","zIndex","justifyContent","overflow","margin","boxShadow","IconButton","onDragEnter","onDragOver","onDragLeave","onDrop","flexWrap","idx","DisplayFile","fileInput","transform","textAlign","DriveFolderUploadIcon","multiple","onChange","fullWidth","inputFile","getElementById","forwardRef","_ref4","_getSelectedItem3","_useState11","_useState12","_useState13","_useState14","handleDelayClose","setHandleDelayClose","_useState15","_useState16","blick","setBlick","searchModalInputRef","closeDelay","closeDelayRef","useImperativeHandle","_useUpwardTableModalS3","_x16","_x17","_x18","_x19","_callee10","_context11","_branchRef$current3","BankCloseModal","BankUpwardTableModalSearch","BankOpenModal","opacity","transition","_bankRef$current","containerStyle","AccountBoxIcon","_remarksRef$current","_checkdateRef$current","_amountRef$current","TextFormatedInput","placeholder","_checkcountRef$curren","min","setNewStateValue","dispatch","obj","Object","entries","forEach","_ref5","_ref6","incrementedNumber","Number"],"sourceRoot":""}