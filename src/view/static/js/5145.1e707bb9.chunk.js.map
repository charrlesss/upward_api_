{"version":3,"file":"static/js/5145.1e707bb9.chunk.js","mappings":"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","sources":["components/ModalWithTable.tsx","components/Table.tsx","components/UpwardFields.tsx","feautures/Admin/Task/Accounting/Deposit.tsx","hooks/useMultipleComponent.tsx","hooks/useQueryModalTable.tsx","lib/confirmationAlert.ts","../node_modules/@mui/icons-material/Add.js","../node_modules/@mui/icons-material/Autorenew.js","../node_modules/@mui/icons-material/Save.js","../node_modules/prop-types/factoryWithThrowingShims.js","../node_modules/prop-types/index.js","../node_modules/prop-types/lib/ReactPropTypesSecret.js","../node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js"],"sourcesContent":["import React from \"react\";\nimport {\n  GridRowSelectionModel,\n  GridRowParams,\n  GridCellParams,\n  GridTreeNode,\n} from \"@mui/x-data-grid\";\nimport { Modal, Box, Typography, IconButton, TextField } from \"@mui/material\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport Table from \"./Table\";\nimport UpwardTable from \"./UpwardTable\";\ninterface ModalWithTableParams {\n  height: number;\n  isLoading: boolean;\n  queryKey: string;\n  columns: Array<any>;\n  onSelectionChange: (rowSelectionModel: Array<any>, data: Array<any>) => void;\n  setRows: React.Dispatch<React.SetStateAction<GridRowSelectionModel>>;\n  rows: GridRowSelectionModel;\n  id: string;\n  onCloseModal: () => void;\n  onClickCloseIcon: () => void;\n  showModal: boolean;\n  searchOnChange:\n    | React.ChangeEventHandler<HTMLInputElement | HTMLTextAreaElement>\n    | undefined;\n  title?: string;\n  searchRef?: React.RefObject<HTMLInputElement>;\n  onCellKeyDown?: any;\n  onSearchKeyEnter?: (search: string) => void;\n  isRowSelectable?: ((params: GridRowParams<any>) => boolean) | undefined;\n  getCellClassName?:\n    | ((params: GridCellParams<any, any, any, GridTreeNode>) => string)\n    | undefined;\n}\n\nconst style = {\n  position: \"absolute\" as \"absolute\",\n  top: \"50%\",\n  left: \"50%\",\n  transform: \"translate(-50%, -50%)\",\n  width: \"70%\",\n  bgcolor: \"background.paper\",\n  boxShadow: 24,\n  p: 4,\n  heigth: \"auto\",\n};\n\nexport default function ModalWithTable({\n  height,\n  isLoading,\n  queryKey,\n  columns,\n  onSelectionChange,\n  setRows,\n  rows,\n  id,\n  onCloseModal,\n  showModal,\n  onClickCloseIcon,\n  searchOnChange,\n  title = \"\",\n  searchRef,\n  onCellKeyDown,\n  onSearchKeyEnter = () => {},\n  isRowSelectable,\n  getCellClassName,\n}: ModalWithTableParams) {\n  const mainId = generateRandomClass();\n\n  return (\n    <Modal\n      open={showModal}\n      onClose={onCloseModal}\n      aria-labelledby=\"modal-modal-title\"\n      aria-describedby=\"modal-modal-description\"\n    >\n      <Box sx={style}>\n        <Typography id=\"modal-modal-title\" variant=\"h6\" component=\"h2\" mb={2}>\n          {title}\n        </Typography>\n        <TextField\n          size=\"small\"\n          label=\"Search\"\n          sx={{ marginBottom: \"10px\" }}\n          fullWidth\n          onChange={searchOnChange}\n          InputProps={{\n            inputRef: searchRef,\n          }}\n          onKeyDown={(e) => {\n            if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n              e.preventDefault();\n              onSearchKeyEnter(searchRef?.current?.value as string);\n            }\n            keyBoardSelectionTable(\n              e,\n              mainId,\n              searchRef?.current as HTMLInputElement\n            );\n          }}\n        />\n        <div\n          className={`${mainId} main-table-selection-container`}\n          style={{ position: \"relative\", height: `${height + 20}px` }}\n        >\n          <Table\n            isSingleSelection={true}\n            isRowFreeze={false}\n            columns={columns}\n            isLoading={isLoading}\n            dataSelection={(selection, data, code) => {\n              onSelectionChange(selection, data);\n            }}\n            table_id={id}\n            rows={rows}\n            isRowSelectable={isRowSelectable}\n            getCellClassName={getCellClassName}\n          />\n        </div>\n\n        <div style={{ position: \"absolute\", top: \"10px\", right: \"10px\" }}>\n          <IconButton\n            aria-label=\"search-client\"\n            color=\"secondary\"\n            onClick={onClickCloseIcon}\n          >\n            <CloseIcon />\n          </IconButton>\n        </div>\n      </Box>\n    </Modal>\n  );\n}\n\nexport function generateRandomClass() {\n  const randomNumber = Math.floor(Math.random() * 10000);\n  const randomClass = \"main-\" + randomNumber;\n  return randomClass;\n}\n\nfunction keyBoardUpDown(className: string, el: HTMLElement) {\n  const firstRowParent = document.querySelector(\n    `.${className} .MuiDataGrid-row`\n  );\n  const firstInput = firstRowParent?.querySelector(\"input\");\n  firstInput?.focus();\n  const event = new MouseEvent(\"mouseenter\", {\n    bubbles: true,\n    cancelable: true,\n    view: window,\n  });\n  firstRowParent?.dispatchEvent(event);\n  firstInput?.addEventListener(\"keydown\", (es: any) => {\n    if (es.key === \"ArrowUp\") {\n      es.preventDefault();\n      el.focus();\n    }\n    if (es.key === \"ArrowUp\") {\n      firstRowParent?.classList.remove(\"hover-keyboard\");\n    }\n  });\n}\n\nexport function keyBoardSelectionTable(\n  e: React.KeyboardEvent<HTMLDivElement>,\n  className: string,\n  el: HTMLElement\n) {\n  const mainId = className;\n  if (e.code === \"ArrowDown\") {\n    const rows = document.querySelectorAll(`.${mainId} .MuiDataGrid-row`);\n    e.preventDefault();\n    rows[0]?.classList.add(\"hover-keyboard\");\n    keyBoardUpDown(className, el);\n    rows.forEach((el, idx) => {\n      el.addEventListener(\"keydown\", (es: any) => {\n        if (es.key === \"ArrowUp\") {\n          if (idx <= 0) {\n            return;\n          }\n\n          es.preventDefault();\n          rows[idx]?.classList.remove(\"hover-keyboard\");\n          rows[idx - 1]?.classList.add(\"hover-keyboard\");\n          return;\n        }\n        if (es.key === \"ArrowDown\") {\n          es.preventDefault();\n          if (idx >= rows.length - 1) {\n            return;\n          }\n          rows[idx]?.classList.remove(\"hover-keyboard\");\n          rows[idx + 1]?.classList.add(\"hover-keyboard\");\n        }\n      });\n    });\n  }\n}\n","import {\n  useState,\n  useContext,\n  createContext,\n  ReactElement,\n  forwardRef,\n  useImperativeHandle,\n} from \"react\";\nimport { Box, LinearProgress } from \"@mui/material\";\nimport {\n  DataGrid,\n  GridSlotsComponentsProps,\n  gridPageCountSelector,\n  GridPagination,\n  useGridApiContext,\n  useGridSelector,\n  GridRowSelectionModel,\n  GridColDef,\n  GridRowParams,\n  GridCellParams,\n  GridTreeNode,\n} from \"@mui/x-data-grid\";\nimport { TablePaginationProps } from \"@mui/material/TablePagination\";\nimport MuiPagination from \"@mui/material/Pagination\";\n\ninterface TableProps {\n  isLoading: boolean;\n  columns: Array<any>;\n  rows: Array<any>;\n  table_id: string;\n  isSingleSelection: boolean;\n  isRowFreeze: boolean;\n  dataSelection?: (selection: any, data: any, code: string | null) => void;\n  CustomFooterComponent?: any;\n  isRowSelectable?: ((params: GridRowParams<any>) => boolean) | undefined;\n  getCellClassName?:\n    | ((params: GridCellParams<any, any, any, GridTreeNode>) => string)\n    | undefined;\n  footerChildren?: (\n    rowSelectionModel: GridRowSelectionModel,\n    rows: Array<any>\n  ) => ReactElement;\n  footerPaginationPosition?: string;\n  showFooterSelectedCount?: boolean;\n  checkboxSelection?: boolean | undefined;\n}\n\nconst TableContext = createContext<{\n  rowSelectionModel: GridRowSelectionModel;\n  rows: Array<any>;\n  footerPaginationPosition?: string;\n  showFooterSelectedCount?: boolean;\n  footerChildren: (\n    rowSelectionModel: GridRowSelectionModel,\n    rows: Array<any>\n  ) => ReactElement;\n}>({\n  rows: [],\n  rowSelectionModel: [],\n  footerChildren: () => <div></div>,\n  footerPaginationPosition: \"right-left\",\n  showFooterSelectedCount: true,\n});\nconst Table = forwardRef(\n  (\n    {\n      isLoading,\n      columns,\n      rows,\n      table_id,\n      isSingleSelection,\n      isRowFreeze,\n      dataSelection,\n      CustomFooterComponent = DefaultooterComponent,\n      isRowSelectable,\n      getCellClassName,\n      checkboxSelection = true,\n      footerChildren = (\n        rowSelectionModel: GridRowSelectionModel,\n        rows: Array<any>\n      ) => <div></div>,\n      footerPaginationPosition = \"right-left\",\n      showFooterSelectedCount = true,\n    }: TableProps,\n    ref\n  ) => {\n    const [selectedRows, setSelectedRows] = useState<any>([]);\n\n    useImperativeHandle(ref, () => ({\n      removeSelection: () => {\n        setSelectedRows([]);\n      },\n      getSelectedRows: () => {\n        return rows.filter((item: any) =>\n          selectedRows?.includes(item[table_id])\n        );\n      },\n      setSelectedRows: (data: Array<any>) => {\n        setSelectedRows(data);\n      },\n    }));\n\n    function onSelectionChange(selection: any, data: any, code: string | null) {\n      if (dataSelection) {\n        dataSelection(selection, data, code);\n      }\n    }\n    let freezeArray: Array<any> = [];\n\n    return (\n      <TableContext.Provider\n        value={{\n          showFooterSelectedCount,\n          footerPaginationPosition,\n          rowSelectionModel: selectedRows,\n          rows,\n          footerChildren,\n        }}\n      >\n        <DataGrid\n          slots={{\n            loadingOverlay: LinearProgress,\n            footer: CustomFooterComponent,\n          }}\n          initialState={{\n            pagination: { paginationModel: { pageSize: 35 } },\n          }}\n          loading={isLoading}\n          getRowId={(row) => row[table_id]}\n          columns={columns.filter((col: any) => !col.hide) as GridColDef<any>[]}\n          rows={rows}\n          showCellVerticalBorder={true}\n          showColumnVerticalBorder={true}\n          checkboxSelection={checkboxSelection}\n          rowSelectionModel={selectedRows}\n          rowHeight={25}\n          columnHeaderHeight={35}\n          pageSizeOptions={[10, 20, 35, 50, 75, 100]}\n          sx={{\n            \"& .cash\": {\n              color: \"#ec4899\",\n            },\n            \"& .check\": {\n              color: \"#0891b2\",\n            },\n            \"& .approved\": {\n              color: \"green\",\n            },\n            \"& .pending\": {\n              color: \"orange\",\n            },\n            \"& .disapproved\": {\n              color: \"red\",\n            },\n            \"& .normal\": {\n              color: \"red\",\n            },\n            \"& .MuiDataGrid-row.Mui-selected:hover\": {\n              color: \"black\",\n              \"& .MuiSvgIcon-root \": {\n                fill: \"#3b82f6\",\n              },\n            },\n            \"& .hover-keyboard\": {\n              background: \"#2563eb\",\n              color: \"white\",\n              \"& .MuiSvgIcon-root \": {\n                fill: \"white\",\n              },\n            },\n            \"& .MuiDataGrid-row:hover\": {\n              background: \"#2563eb\",\n              color: \"white\",\n              \"& .MuiSvgIcon-root \": {\n                fill: \"white\",\n              },\n            },\n            \"& .MuiDataGrid-row.hover\": {\n              background: \"#2563eb\",\n              color: \"white\",\n              \"& .MuiSvgIcon-root \": {\n                fill: \"white\",\n              },\n            },\n            \"& .MuiTablePagination-root p \": {\n              padding: \"0 !important\",\n            },\n\n            ...{\n              \"& .MuiDataGrid-columnHeaders\": {\n                background: \"#64748b\",\n                color: \"white\",\n                fontSize: \"14px\",\n                // borderBottomColor: \"#38bdf8\",\n              },\n              \"& .MuiDataGrid-columnHeaderCheckbox .MuiDataGrid-columnHeaderTitleContainer .MuiSvgIcon-root \":\n                {\n                  display: isSingleSelection || isRowFreeze ? \"none\" : \"block\",\n                  fill: \"white\",\n                },\n              \"& .MuiDataGrid-columnHeaderCheckbox .MuiDataGrid-columnHeaderTitleContainer input \":\n                {\n                  display: isSingleSelection || isRowFreeze ? \"none\" : \"block\",\n                },\n            },\n            ...{\n              fontSize: 13,\n              fontWeight: 500,\n              \"& .MuiDataGrid-checkboxInput\": {\n                height: \"27px\",\n                width: \"27px\",\n              },\n              \"& .MuiDataGrid-checkboxInput svg\": {\n                height: \"20px\",\n                width: \"20px\",\n              },\n            },\n          }}\n          // onRowDoubleClick={(e, r) => {\n          //   console.log(e, r);\n          // }}\n\n          onRowSelectionModelChange={(selection) => {\n            if (isRowFreeze) {\n              if (selection.length <= 0) return;\n              freezeArray = selection;\n              if (selectedRows.includes(freezeArray[freezeArray.length - 1]))\n                return;\n\n              setSelectedRows(selection);\n\n              onSelectionChange([selection[selection.length - 1]], rows, null);\n              return;\n            }\n\n            if (!isRowFreeze && isSingleSelection) {\n              if (selectedRows && selectedRows?.length > 0) {\n                const selectionSet = new Set(selectedRows);\n                setSelectedRows(\n                  selection.filter((s: any) => !selectionSet.has(s))\n                );\n              } else {\n                setSelectedRows(selection);\n              }\n            } else {\n              setSelectedRows(selection);\n            }\n\n            onSelectionChange([selection[selection.length - 1]], rows, null);\n          }}\n          onCellKeyDown={(__: any, key: any) => {\n            const keyFinding = [\"NumpadEnter\", \"Enter\", \"Delete\", \"Backspace\"];\n            if (!keyFinding.includes(key.code)) {\n              return;\n            }\n            key.preventDefault();\n            if (key.code === \"Enter\" || key.code === \"NumpadEnter\") {\n              if (isSingleSelection && !isRowFreeze) {\n                return setSelectedRows((data: any) => {\n                  if (data && data.length > 0 && data[0] === __.rowNode.id) {\n                    onSelectionChange([], rows, key.code);\n                    return [];\n                  }\n                  onSelectionChange([__.rowNode.id], rows, key.code);\n                  return [__.rowNode.id];\n                });\n              } else {\n                setSelectedRows((data: any) => {\n                  if (\n                    data &&\n                    !isRowFreeze &&\n                    data.length > 0 &&\n                    data.includes(__.rowNode.id)\n                  ) {\n                    data = data.filter((item: any) => item !== __.rowNode.id);\n                    onSelectionChange([], rows, key.code);\n                    return data;\n                  }\n                  if (\n                    data &&\n                    isRowFreeze &&\n                    data.length > 0 &&\n                    data.includes(__.rowNode.id)\n                  ) {\n                    return data;\n                  }\n                  onSelectionChange([__.rowNode.id], rows, key.code);\n                  return [...data, __.rowNode.id];\n                });\n              }\n              return;\n            }\n            if (key.code === \"Delete\" || key.code === \"Backspace\") {\n              setSelectedRows([__.rowNode.id]);\n              return onSelectionChange([__.rowNode.id], rows, key.code);\n            }\n          }}\n          disableVirtualization\n          isRowSelectable={isRowSelectable}\n          getCellClassName={getCellClassName}\n        />\n      </TableContext.Provider>\n    );\n  }\n);\n\nexport default Table;\nfunction Pagination({\n  page,\n  onPageChange,\n  className,\n}: Pick<TablePaginationProps, \"page\" | \"onPageChange\" | \"className\">) {\n  const apiRef = useGridApiContext();\n  const pageCount = useGridSelector(apiRef, gridPageCountSelector);\n\n  return (\n    <MuiPagination\n      variant=\"outlined\"\n      color=\"primary\"\n      className={className}\n      count={pageCount}\n      page={page + 1}\n      onChange={(event, newPage) => {\n        onPageChange(event as any, newPage - 1);\n      }}\n    />\n  );\n}\n\nfunction CustomPagination(props: any) {\n  return <GridPagination ActionsComponent={Pagination} {...props} />;\n}\nfunction DefaultooterComponent(\n  props: NonNullable<GridSlotsComponentsProps[\"footer\"]>\n) {\n  const {\n    rowSelectionModel,\n    showFooterSelectedCount,\n    footerPaginationPosition,\n    footerChildren,\n    rows,\n  } = useContext(TableContext);\n  return (\n    <Box\n      sx={{\n        columnGap: \"50px\",\n        display: \"flex\",\n        width: \"100%\",\n        justifyContent: \"space-between\",\n        px: 3,\n        alignItems: \"center\",\n        flexDirection:\n          footerPaginationPosition === \"right-left\" ? \"row-reverse\" : \"row\",\n      }}\n    >\n      <CustomPagination {...props} />\n      <Box\n        sx={{\n          display: \"flex\",\n          justifyContent:\n            footerPaginationPosition === \"right-left\"\n              ? \"flex-start\"\n              : \"flex-end\",\n          flex: 1,\n          alignItems: \"center\",\n        }}\n      >\n        {showFooterSelectedCount && (\n          <div>Selected:{rowSelectionModel?.length}</div>\n        )}\n        <div>{footerChildren(rowSelectionModel, rows)}</div>\n      </Box>\n    </Box>\n  );\n}\n","import { HtmlHTMLAttributes, InputHTMLAttributes, useId, ReactNode } from \"react\";\nimport \"../style/design.css\";\n\n\ninterface TextInputProps {\n  input: InputHTMLAttributes<HTMLInputElement>;\n  label: HtmlHTMLAttributes<HTMLLabelElement>;\n  inputRef?: React.RefObject<HTMLInputElement>;\n  icon?: ReactNode; // New prop for the icon\n  iconPosition?: 'start' | 'end'; // New prop to choose icon position\n  onIconClick?: React.MouseEventHandler<HTMLDivElement> | undefined\n}\n\nexport function TextInput({\n  input,\n  label,\n  inputRef,\n  icon,\n  iconPosition = 'end', // Default position is 'end'\n  onIconClick = (e) => { }\n}: TextInputProps) {\n  const id = useId();\n\n  return (\n    <div\n      style={{\n        display: 'flex',\n        alignItems: 'center',\n        position: 'relative', // Enable absolute positioning for icon\n      }}\n    >\n      <label {...label} htmlFor={id}>\n        {label.title}\n      </label>\n      {icon && iconPosition === 'start' && (\n        <div style={{ position: 'absolute', left: '8px', zIndex: 1 }}>\n          {icon}\n        </div>\n      )}\n      <input\n        ref={inputRef}\n        id={id}\n        {...input}\n        style={{\n          height: '100%',\n          ...input.style,\n        }}\n      />\n      {icon && iconPosition === 'end' && (\n        <div onClick={onIconClick}\n          style={{\n            position: 'absolute',\n            right: '2px',\n            top: \"50%\",\n            transform: \"translateY(-50%)\",\n            zIndex: 1,\n            cursor: \"pointer\",\n            display: \"flex\",\n            alignItems: \"center\",\n            justifyContent: \"center\",\n            background:\"white\"\n          }}>\n          {icon}\n        </div>\n\n      )\n      }\n    </div >\n  );\n}\n\n\nexport function SelectInput({\n  select,\n  label,\n  selectRef,\n  datasource = [],\n  values = \"\",\n  display = \"\",\n}: {\n  selectRef?: React.RefObject<HTMLSelectElement>;\n  labelRef?: React.RefObject<HTMLLabelElement>;\n  select: InputHTMLAttributes<HTMLSelectElement>;\n  label: HtmlHTMLAttributes<HTMLLabelElement>;\n  datasource: Array<any>;\n  values: string;\n  display: string;\n}) {\n  const id = useId();\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        height: \"18px\",\n        alignItems: \"center\",\n      }}\n    >\n      <label {...label} htmlFor={id}>\n        {label.title}\n      </label>\n      <select\n        {...select}\n        ref={selectRef}\n        className=\"select\"\n        style={{\n          height: \"18px\",\n          ...select.style,\n        }}\n      >\n        {datasource.map((itm, idx) => {\n          return (\n            <option key={idx} value={itm[values]}>\n              {itm[display]}\n            </option>\n          );\n        })}\n      </select>\n    </div>\n  );\n}\n\nexport function ButtonField({\n  buttonRetRef,\n  button,\n  tooltipText = \"\",\n  children,\n  disabled = false,\n}: {\n  buttonRetRef?: React.RefObject<HTMLButtonElement>;\n  button: HtmlHTMLAttributes<HTMLButtonElement>;\n  tooltipText: string;\n  children: React.ReactNode;\n  disabled?: boolean;\n}) {\n  return (\n    <div className=\"tooltip\">\n      <button\n        disabled={disabled}\n        {...button}\n        ref={buttonRetRef}\n        style={{ ...button.style, background: !disabled ? \"transparent\" : \"#f1f1f1\" }}\n        className=\"tooltip-button\"\n      >\n        {children}\n      </button>\n      {!disabled && <span className=\"tooltip-text\">{tooltipText}</span>}\n    </div>\n  );\n}\n","import {\n  useState,\n  createContext,\n  useContext,\n  CSSProperties,\n  useEffect,\n  useRef,\n  useReducer,\n} from \"react\";\nimport { GridRowSelectionModel } from \"@mui/x-data-grid\";\nimport { useMutation, useQuery, useQueryClient } from \"react-query\";\nimport { AuthContext } from \"../../../../components/AuthContext\";\nimport {\n  Box,\n  Button,\n} from \"@mui/material\";\nimport useQueryModalTable from \"../../../../hooks/useQueryModalTable\";\nimport LoadingButton from \"@mui/lab/LoadingButton\";\nimport AddIcon from \"@mui/icons-material/Add\";\nimport SaveIcon from \"@mui/icons-material/Save\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport Swal from \"sweetalert2\";\nimport { wait } from \"@testing-library/user-event/dist/utils\";\nimport useMultipleComponent from \"../../../../hooks/useMultipleComponent\";\nimport Table from \"../../../../components/Table\";\nimport {\n  codeCondfirmationAlert,\n  saveCondfirmationAlert,\n} from \"../../../../lib/confirmationAlert\";\nimport { TextInput } from \"../../../../components/UpwardFields\";\nimport { format } from 'date-fns'\nimport AutorenewIcon from '@mui/icons-material/Autorenew';\nimport AccountBalanceIcon from '@mui/icons-material/AccountBalance';\n\nconst defaultCashBreakDown = [\n  { value1: \"1,000.00\", value2: \"\", value3: \"0.00\" },\n  { value1: \"500.00\", value2: \"\", value3: \"0.00\" },\n  { value1: \"200.00\", value2: \"\", value3: \"0.00\" },\n  { value1: \"100.00\", value2: \"\", value3: \"0.00\" },\n  { value1: \"50.00\", value2: \"\", value3: \"0.00\" },\n  { value1: \"20.00\", value2: \"\", value3: \"0.00\" },\n  { value1: \"10.00\", value2: \"\", value3: \"0.00\" },\n  { value1: \"5.00\", value2: \"\", value3: \"0.00\" },\n  { value1: \"2.00\", value2: \"\", value3: \"0.00\" },\n  { value1: \"1.00\", value2: \"\", value3: \"0.00\" },\n  { value1: \".50\", value2: \"\", value3: \"0.00\" },\n  { value1: \".25\", value2: \"\", value3: \"0.00\" },\n  { value1: \".10\", value2: \"\", value3: \"0.00\" },\n  { value1: \".05\", value2: \"\", value3: \"0.00\" },\n  { value1: \".01\", value2: \"\", value3: \"0.00\" },\n];\nconst buttons = [\n  {\n    title: \"Cash Collection\",\n    index: 0,\n  },\n  {\n    title: \"Check Collection\",\n    index: 1,\n  },\n  {\n    title: \"Selected Collection\",\n    index: 2,\n  },\n  {\n    title: \"Collection for Deposit\",\n    index: 3,\n  },\n];\ninterface DepositContextType {\n  cashCollection: GridRowSelectionModel;\n  setCashCollection: React.Dispatch<\n    React.SetStateAction<GridRowSelectionModel>\n  >;\n  checkCollection: GridRowSelectionModel;\n  setCheckCollection: React.Dispatch<\n    React.SetStateAction<GridRowSelectionModel>\n  >;\n  selectedCollection: GridRowSelectionModel;\n  setSelectedCollection: React.Dispatch<\n    React.SetStateAction<GridRowSelectionModel>\n  >;\n  collectionForDeposit: GridRowSelectionModel;\n  setCollectionForDeposit: React.Dispatch<\n    React.SetStateAction<GridRowSelectionModel>\n  >;\n  tableRows: Array<{ value1: string; value2: string; value3: string }>;\n  updateTableRowsInput: (\n    fields: {\n      value1: string;\n      value2: string;\n      value3: string;\n    },\n    idx: number\n  ) => void;\n  LoadingCashTable: boolean;\n  LoadingCheckTable: boolean;\n  total: string;\n  setTotal: React.Dispatch<React.SetStateAction<string>>;\n  TotalCashForDeposit: string;\n  loadingSearchByDepositSlip: boolean;\n}\nconst initialState = {\n  depositSlip: \"\",\n  temp_depositSlip: \"\",\n  depositdate: new Date(),\n  Account_ID: \"\",\n  Account_Name: \"\",\n  Account_No: \"\",\n  Account_Type: \"\",\n  Desc: \"\",\n  IDNo: \"\",\n  Short: \"\",\n  ShortName: \"\",\n  Sub_ShortName: \"\",\n  Sub_Acct: \"\",\n  search: \"\",\n  depositMode: \"\",\n  Identity: \"\",\n};\nexport const reducer = (state: any, action: any) => {\n  switch (action.type) {\n    case \"UPDATE_FIELD\":\n      return {\n        ...state,\n        [action.field]: action.value,\n      };\n    default:\n      return state;\n  }\n};\nconst DepositContext = createContext<any>({\n  cashCollection: [],\n  setCashCollection: () => { },\n  checkCollection: [],\n  setCheckCollection: () => { },\n  selectedCollection: [],\n  setSelectedCollection: () => { },\n  collectionForDeposit: [],\n  setCollectionForDeposit: () => { },\n  tableRows: [],\n  updateTableRowsInput: () => { },\n  LoadingCashTable: false,\n  LoadingCheckTable: false,\n  setTotal: () => { },\n  total: \"0.00\",\n  TotalCashForDeposit: \"0.00\",\n  loadingSearchByDepositSlip: false,\n});\n\n\n\nexport default function Deposit() {\n  const depositSearch = useRef<HTMLInputElement>(null)\n\n  const inputSearchRef = useRef<HTMLInputElement>(null)\n  const refSlipCode = useRef<HTMLInputElement>(null)\n  const refDateDepo = useRef<HTMLInputElement>(null)\n  const refBankAcctCode = useRef<HTMLInputElement>(null)\n  const refBankAcctName = useRef<HTMLInputElement>(null)\n\n  const bankDepositSearch = useRef<HTMLInputElement>(null)\n  const _refTempSlipCode = useRef<string>(\"\")\n\n  const refBankAcctCodeTag = useRef('')\n  const refBankAcctNameTag = useRef('')\n  const refAcctID = useRef('')\n  const refAcctName = useRef('')\n  const refClassification = useRef('')\n  const refSubAccount = useRef('')\n  const refShortName = useRef('')\n\n  const { myAxios, user } = useContext(AuthContext);\n  const { currentStepIndex, step, goTo } = useMultipleComponent([\n    <CashCollection />,\n    <CheckCollection />,\n    <SelectedCollection />,\n    <CollectionForDeposit />,\n  ]);\n\n  const [cashCollection, setCashCollection] = useState<any>([])\n  const [checkCollection, setCheckCollection] = useState<any>([])\n  const [selectedRows, setSelectedRows] = useState<any>([])\n  const [collectionForDeposit, setCollectionForDeposit] = useState<any>([]);\n  const [tableRowsInputValue, setTableRowsInputValue] =\n    useState<Array<{ value1: string; value2: string; value3: string }>>(\n      defaultCashBreakDown\n    );\n  const [depositMode, setDepositMode] = useState('')\n  const [total, setTotal] = useState(\"0.00\");\n  const TotalCashForDeposit = selectedRows\n    .reduce((accumulator: number, currentValue: any) => {\n      const dd =\n        currentValue.Check_No || currentValue.Check_No !== \"\"\n          ? 0\n          : parseFloat(currentValue.Amount.replace(/,/g, \"\"));\n      return accumulator + dd;\n    }, 0.0)\n    .toLocaleString(\"en-US\", {\n      minimumFractionDigits: 2,\n      maximumFractionDigits: 2,\n    });\n\n  const updateTableRowsInput = (\n    fields: { value1: string; value2: string; value3: string },\n    idx: number\n  ) => {\n    setTableRowsInputValue((d) => {\n      return d.map((item, index) => {\n        if (idx === index) {\n          item = { ...item, ...fields };\n        }\n        return item;\n      });\n    });\n  };\n\n  const { isLoading: LoadingDepositSlipCode, refetch: RefetchDepositSlipCode } =\n    useQuery({\n      queryKey: \"deposit-slipcode\",\n      queryFn: async () =>\n        await myAxios.get(`/task/accounting/get-deposit-slipcode`, {\n          headers: {\n            Authorization: `Bearer ${user?.accessToken}`,\n          },\n        }),\n      refetchOnWindowFocus: false,\n      onSuccess: (data) => {\n        const response = data as any;\n        wait(100).then(() => {\n          if (refSlipCode.current) {\n            refSlipCode.current.value = response.data.slipcode[0].collectionID\n            _refTempSlipCode.current = response.data.slipcode[0].collectionID\n          }\n          if (refDateDepo.current) {\n            refDateDepo.current.value = format(new Date(), \"yyyy-MM-dd\")\n          }\n        })\n      },\n    });\n\n  const {\n    ModalComponent: ModalDepostitBanks,\n    openModal: openDepositBanks,\n    isLoading: isLoadingDepostitBanks,\n    closeModal: closeDepositBanks,\n  } = useQueryModalTable({\n    link: {\n      url: \"/task/accounting/getBanks\",\n      queryUrlName: \"bankDepositSearch\",\n    },\n    columns: [\n      { field: \"Account_Type\", headerName: \"Account_Type\", width: 200 },\n      { field: \"Account_No\", headerName: \"Account_No\", width: 170 },\n      {\n        field: \"Account_Name\",\n        headerName: \"Account_Name\",\n        flex: 1,\n      },\n    ],\n    queryKey: \"bank-deposit\",\n    uniqueId: \"Account_No\",\n    responseDataKey: \"banks\",\n    onSelected: (selectedRowData) => {\n      if (selectedRowData.length > 0) {\n        console.log(selectedRowData[0])\n        if (refBankAcctCode.current)\n          refBankAcctCode.current.value = selectedRowData[0].Account_No\n        if (refBankAcctName.current)\n          refBankAcctName.current.value = selectedRowData[0].Account_Name\n\n        refBankAcctCodeTag.current = selectedRowData[0]?.IDNo\n        refBankAcctNameTag.current = selectedRowData[0]?.Desc\n        refAcctID.current = selectedRowData[0]?.Account_ID\n        refAcctName.current = selectedRowData[0]?.Short\n        refShortName.current = selectedRowData[0]?.client_name\n        refClassification.current = selectedRowData[0]?.Sub_Acct\n        refSubAccount.current = selectedRowData[0]?.ShortName\n\n        closeDepositBanks();\n      }\n    },\n    searchRef: bankDepositSearch,\n  });\n\n  const { mutate: addDepositMutation, isLoading: addDepositMutationLoading } =\n    useMutation({\n      mutationKey: \"add-deposit\",\n      mutationFn: async (variables: any) => {\n        return await myAxios.post(\"/task/accounting/add-deposit\", variables, {\n          headers: {\n            Authorization: `Bearer ${user?.accessToken}`,\n          },\n        });\n      },\n      onSuccess: (res) => {\n        const resposnse = res as any;\n        if (resposnse.data.success) {\n          setSelectedRows([]);\n          setCollectionForDeposit([]);\n          RefetchDepositSlipCode();\n          setTableRowsInputValue(defaultCashBreakDown);\n          resetRefs()\n          return Swal.fire({\n            position: \"center\",\n            icon: \"success\",\n            title: resposnse.data.message,\n            timer: 1500,\n          });\n        }\n        return Swal.fire({\n          position: \"center\",\n          icon: \"warning\",\n          title: resposnse.data.message,\n          timer: 1500,\n        });\n      },\n    });\n\n  const {\n    mutate: updateDepositMutation,\n    isLoading: updateDepositMutationLoading,\n  } = useMutation({\n    mutationKey: \"update-deposit\",\n    mutationFn: async (variables: any) => {\n      return await myAxios.post(\"/task/accounting/update-deposit\", variables, {\n        headers: {\n          Authorization: `Bearer ${user?.accessToken}`,\n        },\n      });\n    },\n    onSuccess: (res) => {\n      const resposnse = res as any;\n      if (resposnse.data.success) {\n        resetRefs()\n        setSelectedRows([]);\n        setCollectionForDeposit([]);\n        RefetchDepositSlipCode();\n        setTableRowsInputValue(defaultCashBreakDown);\n        return Swal.fire({\n          position: \"center\",\n          icon: \"success\",\n          title: resposnse.data.message,\n          timer: 1500,\n        });\n      }\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: resposnse.data.message,\n        timer: 1500,\n      });\n    },\n  });\n\n  const { mutate: searchByDepositSlip, isLoading: loadingSearchByDepositSlip } =\n    useMutation({\n      mutationKey: \"search-deposit-cash-check\",\n      mutationFn: async (variables: any) => {\n        return await myAxios.post(\n          \"/task/accounting/search-cash-check\",\n          variables,\n          {\n            headers: {\n              Authorization: `Bearer ${user?.accessToken}`,\n            },\n          }\n        );\n      },\n      onSuccess: (res) => {\n        const obj = res.data.data.obj\n        const cash = res.data.data.cash\n        const check = res.data.data.checks\n        const cash_breakdown = res.data.data.cash_breakdown\n\n        wait(100).then(() => {\n          if (refBankAcctCode.current)\n            refBankAcctCode.current.value = obj.refBankAcctCode\n          if (refBankAcctName.current)\n            refBankAcctName.current.value = obj.refBankAcctName\n          if (refDateDepo.current)\n            refDateDepo.current.value = format(new Date(obj.refDate), \"yyyy-MM-dd\")\n\n\n\n          refBankAcctCodeTag.current = obj?.refBankAcctCodeTag\n          refBankAcctNameTag.current = obj?.refBankAcctNameTag\n          refAcctID.current = obj?.refAcctID\n          refAcctName.current = obj?.refAcctName\n          refShortName.current = obj?.client_name\n          refClassification.current = obj?.refClassification\n          refSubAccount.current = obj?.refSubAccount\n\n          setCashCollection(cash);\n          setCheckCollection(check);\n\n          const filteredCash = cash.filter((itm: any) => itm.SlipCode !== '' && itm.SlipCode === refSlipCode.current?.value)\n          const filteredCheck = check.filter((itm: any) => itm.SlipCode !== '' && itm.SlipCode === refSlipCode.current?.value)\n          if (filteredCash.length > 0) {\n            filteredCash.forEach((rowSelected: any) => {\n              setSelectedRows((d: any) => {\n\n                const newSelected: any = {\n                  Deposit: \"Cash\",\n                  Check_No: \"\",\n                  Check_Date: \"\",\n                  Bank: \"\",\n                  Amount: rowSelected.Amount,\n                  Name: rowSelected.Client_Name,\n                  RowIndex: d.length + 1,\n                  DRCode: rowSelected.DRCode,\n                  ORNo: rowSelected.OR_No,\n                  DRRemarks: \"\",\n                  IDNo: rowSelected.ID_No,\n                  TempOR: rowSelected.Temp_OR,\n                  Short: rowSelected.Short,\n                };\n\n                d = [...d, newSelected];\n                return d;\n              });\n            });\n          }\n          if (filteredCheck.length > 0) {\n            filteredCheck.forEach((rowSelected: any) => {\n              setSelectedRows((d: any) => {\n                const newSelected: any = {\n                  Deposit: \"Check\",//0\n                  Check_No: rowSelected.Check_No,//1\n                  Check_Date: rowSelected.Check_Date,//2\n                  Bank: rowSelected.Bank_Branch,//3\n                  Amount: rowSelected.Amount,//4\n                  Name: rowSelected.Client_Name,//5\n                  RowIndex: d.length + 1,//6\n                  DRCode: rowSelected.DRCode,//7\n                  ORNo: rowSelected.OR_No,//8\n                  DRRemarks: rowSelected.DRRemarks,//9\n                  IDNo: rowSelected.ID_No,//10\n                  TempOR: rowSelected.Temp_OR,//11\n                  Short: rowSelected.Short,//12\n                };\n                d = [...d, newSelected];\n                return d;\n              });\n\n\n              setCollectionForDeposit((d: any) => {\n                const newSelectedCheckForDeposit: any = {\n                  Bank: rowSelected.Bank_Branch,\n                  Check_No: rowSelected.Check_No,\n                  Amount: rowSelected.Amount,\n                  TempOR: rowSelected.Temp_OR,\n                };\n                d = [...d, newSelectedCheckForDeposit];\n                return d;\n              });\n            });\n          }\n          setTableRowsInputValue(cash_breakdown)\n        })\n\n        setDepositMode('edit')\n\n      },\n    });\n\n  const {\n    ModalComponent: ModalDeposit,\n    openModal: openDeposit,\n    isLoading: isLoadingDeposit,\n    closeModal: closeDeposit,\n  } = useQueryModalTable({\n    link: {\n      url: \"/task/accounting/search-deposit\",\n      queryUrlName: \"searchDeposit\",\n    },\n    columns: [\n      { field: \"Date\", headerName: \"Date\", width: 150 },\n      { field: \"SlipCode\", headerName: \"Slip Code\", width: 170 },\n      {\n        field: \"BankAccount\",\n        headerName: \"Bank Account\",\n        width: 170,\n      },\n      {\n        field: \"AccountName\",\n        headerName: \"Account Name\",\n        flex: 1,\n      },\n    ],\n    queryKey: \"deposit-search\",\n    uniqueId: \"SlipCode\",\n    responseDataKey: \"deposit\",\n    onSelected: (selectedRowData) => {\n      const SlipCode = selectedRowData[0].SlipCode;\n      searchByDepositSlip({ SlipCode });\n\n      wait(100).then(() => {\n        if (refSlipCode.current) {\n          refSlipCode.current.value = SlipCode\n        }\n      })\n\n      closeDeposit();\n    },\n    onCloseFunction: (value: any) => {\n      if (inputSearchRef.current) {\n        inputSearchRef.current.value = \"\"\n      }\n    },\n    searchRef: depositSearch,\n  });\n\n  const { isLoading: loadingCashCollection , refetch:refetchCashCollection} =\n    useQuery({\n      queryKey: \"get-cash-collection\",\n      queryFn: async () =>\n        await myAxios.get(`/task/accounting/get-cash-collection`, {\n          headers: {\n            Authorization: `Bearer ${user?.accessToken}`,\n          },\n        }),\n      refetchOnWindowFocus: false,\n      onSuccess: (data) => {\n        const response = data as any;\n        setCashCollection(response.data.cash)\n      },\n    });\n\n  const { isLoading: loadingCheckCollection,refetch:refetchCheckCollection } =\n    useQuery({\n      queryKey: \"get-check-collection\",\n      queryFn: async () =>\n        await myAxios.get(`/task/accounting/get-check-collection`, {\n          headers: {\n            Authorization: `Bearer ${user?.accessToken}`,\n          },\n        }),\n      refetchOnWindowFocus: false,\n      onSuccess: (data) => {\n        const response = data as any;\n        setCheckCollection(response.data.check)\n      },\n    });\n\n  const handleOnSave = (e: any) => {\n    e.preventDefault();\n    if (refBankAcctCode.current && refBankAcctCode.current?.value.length >= 200) {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: \"Bank Account is too long!\",\n        timer: 1500,\n      });\n    }\n    if (refBankAcctCode.current && refBankAcctCode.current?.value === \"\") {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: \"Please provide bank account\",\n        timer: 1500,\n      }).then((result) => {\n        wait(350).then(() => {\n          openDepositBanks();\n        });\n      });\n    }\n    if (selectedRows.length <= 0) {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: \"No selected collection to be deposit\",\n        timer: 1500,\n      });\n    }\n    if (TotalCashForDeposit.trim() !== total.trim()) {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: \"Cash breakdown is not balance\",\n        timer: 1500,\n      });\n    }\n    const state = {\n      depositSlip: refSlipCode.current?.value,\n      depositdate: refDateDepo.current?.value,\n      BankAcctCode: refBankAcctCode.current?.value,\n      BankAcctName: refBankAcctName.current?.value,\n      BankAcctCodeTag: refBankAcctCodeTag.current,\n      BankAcctNameTag: refBankAcctNameTag.current,\n      AcctID: refAcctID.current,\n      AcctName: refAcctName.current,\n      Classification: refClassification.current,\n      SubAccount: refSubAccount.current,\n      ShortName: refShortName.current,\n    }\n    if (depositMode === \"edit\") {\n      codeCondfirmationAlert({\n        isUpdate: true,\n        cb: (userCodeConfirmation) => {\n\n          updateDepositMutation({\n\n            userCodeConfirmation,\n            selectedCollection: JSON.stringify(selectedRows),\n            tableRowsInputValue: JSON.stringify(tableRowsInputValue),\n          });\n        },\n      });\n    } else {\n      saveCondfirmationAlert({\n        isConfirm: () => {\n          addDepositMutation({\n            ...state,\n            selectedCollection: JSON.stringify(selectedRows),\n            tableRowsInputValue: JSON.stringify(tableRowsInputValue),\n          });\n        },\n      });\n    }\n  };\n\n  function resetRefs() {\n\n    if (refBankAcctCode.current) {\n      refBankAcctCode.current.value = ''\n    }\n    if (refBankAcctName.current) {\n      refBankAcctName.current.value = ''\n    }\n    if (bankDepositSearch.current)\n      bankDepositSearch.current.value = ''\n    refBankAcctCodeTag.current = ''\n    refBankAcctNameTag.current = ''\n    refAcctID.current = ''\n    refAcctName.current = ''\n    refClassification.current = ''\n    refSubAccount.current = ''\n    refShortName.current = ''\n  }\n \n  const disabledFields = depositMode === \"\";\n  if (loadingSearchByDepositSlip) {\n    return <div>Laoding ....</div>\n  }\n\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        flexDirection: \"column\",\n        width: \"100%\",\n        height: \"100%\",\n        flex: 1,\n      }}\n    >\n      <div\n        style={{\n          display: \"flex\",\n          alignItems: \"center\",\n          columnGap: \"5px\",\n        }}\n      >\n        {isLoadingDeposit ? (\n          <LoadingButton loading={isLoadingDeposit} />\n        ) : (\n          <TextInput\n            label={{\n              title: \"Search: \",\n              style: {\n                fontSize: \"12px\",\n                fontWeight: \"bold\",\n                width: \"50px\",\n              },\n            }}\n            input={{\n              className: \"search-input-up-on-key-down\",\n              type: \"search\",\n              onKeyDown: (e) => {\n                if (e.key === \"Enter\" || e.key === \"NumpadEnter\") {\n                  e.preventDefault();\n                  openDeposit(inputSearchRef.current?.value);\n                }\n                if (e.key === \"ArrowDown\") {\n                  e.preventDefault();\n                  const datagridview = document.querySelector(\n                    \".grid-container\"\n                  ) as HTMLDivElement;\n                  datagridview.focus();\n                }\n              },\n              style: { width: \"500px\" },\n            }}\n            inputRef={inputSearchRef}\n          />\n        )}\n        {disabledFields && (\n          <Button\n            sx={{\n              height: \"30px\",\n              fontSize: \"11px\",\n            }}\n            variant=\"contained\"\n            startIcon={<AddIcon sx={{ width: 15, height: 15 }} />}\n            id=\"entry-header-save-button\"\n            onClick={() => {\n              setDepositMode(\"add\")\n\n            }}\n          >\n            New\n          </Button>\n        )}\n        <LoadingButton\n          sx={{\n            height: \"30px\",\n            fontSize: \"11px\",\n          }}\n          id=\"save-entry-header\"\n          color=\"primary\"\n          variant=\"contained\"\n          type=\"submit\"\n          onClick={handleOnSave}\n          disabled={disabledFields}\n          startIcon={<SaveIcon sx={{ width: 15, height: 15 }} />}\n          loading={updateDepositMutationLoading || addDepositMutationLoading}\n        >\n          Save\n        </LoadingButton>\n        {!disabledFields && (\n          <Button\n            sx={{\n              height: \"30px\",\n              fontSize: \"11px\",\n            }}\n            variant=\"contained\"\n            startIcon={<CloseIcon sx={{ width: 15, height: 15 }} />}\n            color=\"error\"\n            onClick={() => {\n              Swal.fire({\n                title: \"Are you sure?\",\n                text: \"You won't be able to revert this!\",\n                icon: \"warning\",\n                showCancelButton: true,\n                confirmButtonColor: \"#3085d6\",\n                cancelButtonColor: \"#d33\",\n                confirmButtonText: \"Yes, cancel it!\",\n              }).then((result) => {\n                if (result.isConfirmed) {\n                  setDepositMode(\"\")\n                  setSelectedRows([]);\n                  setCollectionForDeposit([]);\n                  RefetchDepositSlipCode();\n                  setTableRowsInputValue(defaultCashBreakDown);\n                  resetRefs()\n                  refetchCheckCollection()\n                  refetchCashCollection()\n\n                }\n              });\n            }}\n          >\n            Cancel\n          </Button>\n        )}\n      </div>\n      <br />\n      <form\n        onKeyDown={(e) => {\n          if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n            e.preventDefault();\n            return;\n          }\n        }}\n        style={{\n          display: \"flex\",\n          gap: \"10px\",\n        }}\n      >\n        {LoadingDepositSlipCode ? \"Loading...\" : <TextInput\n          label={{\n            title: \"Slip Code: \",\n            style: {\n              fontSize: \"12px\",\n              fontWeight: \"bold\",\n              width: \"70px\",\n            },\n          }}\n          input={{\n            disabled: disabledFields,\n            className: \"search-input-up-on-key-down\",\n            type: \"text\",\n            style: { width: \"200px\" },\n            readOnly: true\n          }}\n          inputRef={refSlipCode}\n          icon={<AutorenewIcon sx={{ fontSize: \"18px\" }} />}\n          onIconClick={(e) => {\n            e.preventDefault()\n            RefetchDepositSlipCode()\n          }}\n        />}\n        <TextInput\n          label={{\n            title: \"Deposit Date: \",\n            style: {\n              fontSize: \"12px\",\n              fontWeight: \"bold\",\n              width: \"80px\",\n            },\n          }}\n          input={{\n            className: \"search-input-up-on-key-down\",\n            type: \"date\",\n            style: { width: \"200px\" },\n            disabled: disabledFields\n          }}\n          inputRef={refDateDepo}\n        />\n\n        {isLoadingDepostitBanks ? (\n          \"Loading...\"\n        ) : (\n          <TextInput\n            label={{\n              title: \"Bank Account: \",\n              style: {\n                fontSize: \"12px\",\n                fontWeight: \"bold\",\n                width: \"100px\",\n              },\n            }}\n            input={{\n              className: \"search-input-up-on-key-down\",\n              type: \"text\",\n              style: { width: \"200px\" },\n              onKeyDown: (e) => {\n                if (e.key === \"Enter\" || e.key === \"NumpadEnter\") {\n                  e.preventDefault();\n                  openDepositBanks(refBankAcctCode.current?.value)\n                }\n\n              },\n              disabled: disabledFields\n            }}\n            inputRef={refBankAcctCode}\n            icon={<AccountBalanceIcon sx={{ fontSize: \"18px\" }} />}\n            onIconClick={(e) => {\n              e.preventDefault()\n              openDepositBanks(refBankAcctCode.current?.value)\n            }}\n          />)}\n\n        <TextInput\n          label={{\n            title: \"Account Name: \",\n            style: {\n              fontSize: \"12px\",\n              fontWeight: \"bold\",\n              width: \"100px\",\n            },\n          }}\n          input={{\n            className: \"search-input-up-on-key-down\",\n            type: \"text\",\n            style: { width: \"200px\" },\n            readOnly: true,\n            disabled: disabledFields\n\n          }}\n          inputRef={refBankAcctName}\n        />\n        <button\n          // ref={submitButton}\n          style={{ display: \"none\" }}\n          type=\"submit\"\n        ></button>\n      </form>\n      <br />\n      <div>\n        <div style={{ display: \"flex\" }}>\n          {buttons.map((item, idx) => {\n            return (\n              <button\n                key={idx}\n                style={{\n                  border: \"none\",\n                  outline: \"none\",\n                  backgroundColor: \"rgba(51, 51, 51, 0.05)\",\n                  borderWidth: \"0\",\n                  color: currentStepIndex === idx ? \"#7e22ce\" : \"#333333\",\n                  cursor: \"pointer\",\n                  display: \"inline-block\",\n                  fontFamily: `\"Haas Grot Text R Web\", \"Helvetica Neue\", Helvetica, Arial, sans-serif`,\n                  fontSize: \"14px\",\n                  fontWeight: \"500\",\n                  lineHeight: \"20px\",\n                  listStyle: \"none\",\n                  margin: \"0\",\n                  padding: \"10px 12px\",\n                  textAlign: \"center\",\n                  transition: \"all 200ms\",\n                  verticalAlign: \"baseline\",\n                  whiteSpace: \"nowrap\",\n                  userSelect: \"none\",\n                  touchAction: \"manipulation\",\n                  position: \"relative\",\n                  overflow: \"hidden\",\n                }}\n                onClick={() => goTo(idx)}\n              >\n                <span\n                  style={{\n                    position: \"absolute\",\n                    top: 0,\n                    bottom: 0,\n                    left: 0,\n                    right: 0,\n                    background: \"rgba(206, 214, 211, 0.18)\",\n                    transition: \"all 200ms\",\n                    transform: slideAnimation(currentStepIndex, idx),\n                  }}\n                ></span>\n                {item.title}\n              </button>\n            );\n          })}\n        </div>\n      </div>\n      <br />\n      <DepositContext.Provider\n        value={{\n          myAxios,\n          user,\n          cashCollection,\n          setCashCollection,\n          checkCollection,\n          setCheckCollection,\n          selectedRows,\n          setSelectedRows,\n          collectionForDeposit,\n          setCollectionForDeposit,\n          total,\n          setTotal,\n          TotalCashForDeposit,\n          tableRows: tableRowsInputValue,\n          setTableRowsInputValue,\n          updateTableRowsInput,\n          loadingCheckCollection,\n          loadingCashCollection\n        }}\n      >\n        <div\n          style={{\n            display: \"flex\",\n            flexDirection: \"column\",\n            flex: 1,\n          }}\n          id=\"concatiner\"\n        >\n          {step}\n        </div>\n      </DepositContext.Provider>\n      {ModalDepostitBanks}\n      {ModalDeposit}\n    </div>\n  );\n}\nfunction slideAnimation(activeButton: number, idx: number) {\n  if (activeButton === idx) {\n    return \"translateX(100%)\";\n  } else {\n    return \"translateX(0%)\";\n  }\n}\n\nfunction CashCollection() {\n  const {\n    cashCollection,\n    selectedRows,\n    setSelectedRows,\n    loadingCashCollection\n  } = useContext(DepositContext);\n\n  const table = useRef<any>(null);\n  const cashColumns = [\n    {\n      field: \"OR_No\",\n      headerName: \"OR No.\",\n      minWidth: 170,\n    },\n    {\n      field: \"OR_Date\",\n      headerName: \"OR Date\",\n      minWidth: 170,\n    },\n    {\n      field: \"Amount\",\n      headerName: \"Amount\",\n      minWidth: 150,\n      align: \"right\",\n      cellClassName: \"super-app-theme--cell\",\n    },\n    {\n      field: \"Client_Name\",\n      headerName: \"Client Name\",\n      flex: 1,\n      minWidth: 400,\n    },\n    {\n      field: \"Temp_OR\",\n      headerName: \"Temp_OR\",\n      hide: true,\n    },\n  ];\n\n  useEffect(() => {\n    table.current?.setSelectedRows(\n      selectedRows\n        .filter((item: any) => item.Check_No === \"\")\n        .map((item: any) => item.TempOR)\n    );\n  }, [selectedRows, table]);\n\n  //[checkSelected, table, loadingSearchByDepositSlip]\n  return (\n    <div\n      style={{\n        flex: 1,\n        marginTop: \"10px\",\n        width: \"100%\",\n        position: \"relative\",\n      }}\n    >\n      <Box\n        style={{\n          height: `${document.getElementById(\"concatiner\")?.getBoundingClientRect()\n            .height\n            }px`,\n          width: \"100%\",\n          overflowX: \"scroll\",\n          position: \"absolute\",\n        }}\n      >\n        <Table\n          ref={table}\n          isLoading={loadingCashCollection}\n          columns={cashColumns}\n          rows={cashCollection}\n          table_id={\"Temp_OR\"}\n          isSingleSelection={true}\n          isRowFreeze={true}\n          dataSelection={(selection, data, code) => {\n            const rowSelected = data.filter(\n              (item: any) => item.Temp_OR === selection[0]\n            )[0];\n            if (rowSelected === undefined || rowSelected.length <= 0) {\n              return;\n            }\n\n\n            setSelectedRows((d: any) => {\n\n              const newSelected: any = {\n                Deposit: \"Cash\",\n                Check_No: \"\",\n                Check_Date: \"\",\n                Bank: \"\",\n                Amount: rowSelected.Amount,\n                Name: rowSelected.Client_Name,\n                RowIndex: d.length + 1,\n                DRCode: rowSelected.DRCode,\n                ORNo: rowSelected.OR_No,\n                DRRemarks: \"\",\n                IDNo: rowSelected.ID_No,\n                TempOR: rowSelected.Temp_OR,\n                Short: rowSelected.Short,\n              };\n\n              d = [...d, newSelected];\n              return d;\n            });\n          }}\n        />\n      </Box>\n    </div>\n  );\n}\nfunction CheckCollection() {\n  const {\n    checkCollection,\n    selectedRows,\n    setSelectedRows,\n    setCollectionForDeposit,\n    loadingCheckCollection\n  } = useContext(DepositContext)\n\n\n  const checkColumns = [\n    {\n      field: \"OR_No\",\n      headerName: \"OR No.\",\n      minWidth: 170,\n    },\n    {\n      field: \"OR_Date\",\n      headerName: \"OR Date\",\n      minWidth: 170,\n    },\n    {\n      field: \"Check_No\",\n      headerName: \"Check No\",\n      minWidth: 170,\n    },\n    {\n      field: \"Check_Date\",\n      headerName: \"Check Date\",\n      minWidth: 170,\n    },\n    {\n      field: \"Amount\",\n      headerName: \"Amount\",\n      minWidth: 160,\n      align: \"right\",\n    },\n    {\n      field: \"Bank_Branch\",\n      headerName: \"Bank/Branch\",\n      minWidth: 300,\n    },\n    {\n      field: \"Client_Name\",\n      headerName: \"Client Name\",\n      minWidth: 300,\n      flex: 1,\n    },\n    {\n      field: \"Temp_OR\",\n      headerName: \"Temp_OR\",\n      hide: true,\n    },\n  ];\n  const table = useRef<any>(null);\n  useEffect(() => {\n    table.current?.setSelectedRows(\n      selectedRows\n        .filter((item: any) => item.Check_No !== \"\")\n        .map((item: any) => item.TempOR)\n    );\n  }, [selectedRows, table]);\n\n  // / [selectedRows, table, loadingSearchByDepositSlip]\n\n  return (\n    <div\n      style={{\n        marginTop: \"10px\",\n        width: \"100%\",\n        position: \"relative\",\n        flex: 1,\n      }}\n    >\n      <Box\n        style={{\n          height: `${document.getElementById(\"concatiner\")?.getBoundingClientRect()\n            .height\n            }px`,\n          width: \"100%\",\n          overflowX: \"scroll\",\n          position: \"absolute\",\n        }}\n      >\n        <Table\n          ref={table}\n          isLoading={loadingCheckCollection}\n          columns={checkColumns}\n          rows={checkCollection}\n          table_id={\"Temp_OR\"}\n          isSingleSelection={true}\n          isRowFreeze={true}\n          dataSelection={(selection, data, code) => {\n            const rowSelected = data.filter(\n              (item: any) => item.Temp_OR === selection[0]\n            )[0];\n            if (rowSelected === undefined || rowSelected.length <= 0) {\n              return;\n            }\n\n            setSelectedRows((d: any) => {\n              const newSelected: any = {\n                Deposit: \"Check\",//0\n                Check_No: rowSelected.Check_No,//1\n                Check_Date: rowSelected.Check_Date,//2\n                Bank: rowSelected.Bank_Branch,//3\n                Amount: rowSelected.Amount,//4\n                Name: rowSelected.Client_Name,//5\n                RowIndex: d.length + 1,//6\n                DRCode: rowSelected.DRCode,//7\n                ORNo: rowSelected.OR_No,//8\n                DRRemarks: rowSelected.DRRemarks,//9\n                IDNo: rowSelected.ID_No,//10\n                TempOR: rowSelected.Temp_OR,//11\n                Short: rowSelected.Short,//12\n              };\n              d = [...d, newSelected];\n              return d;\n            });\n\n\n            setCollectionForDeposit((d: any) => {\n              const newSelectedCheckForDeposit: any = {\n                Bank: rowSelected.Bank_Branch,\n                Check_No: rowSelected.Check_No,\n                Amount: rowSelected.Amount,\n                TempOR: rowSelected.Temp_OR,\n              };\n              d = [...d, newSelectedCheckForDeposit];\n              return d;\n            });\n          }}\n        />\n      </Box>\n    </div>\n  );\n\n\n\n}\nfunction SelectedCollection() {\n\n  const {\n    selectedRows,\n    setSelectedRows,\n    setCollectionForDeposit\n  } = useContext(DepositContext);\n\n  const table = useRef<any>(null);\n  const selectedCollectionColumns = [\n    { field: \"Deposit\", headerName: \"Deposit\", flex: 1, minWidth: 170 },\n    { field: \"Check_No\", headerName: \"Check No\", flex: 1, minWidth: 170 },\n    {\n      field: \"Check_Date\",\n      headerName: \"Check Date\",\n      flex: 1,\n      minWidth: 170,\n    },\n    { field: \"Bank\", headerName: \"Bank/Branch\", flex: 1, minWidth: 200 },\n    { field: \"Amount\", headerName: \"Amount\", flex: 1, minWidth: 170 },\n    { field: \"Name\", headerName: \"Client Name\", flex: 1, minWidth: 400 },\n    // hide\n    { field: \"RowIndex\", headerName: \"RowIndex\", hide: true },\n    { field: \"DRCode\", headerName: \"DRCode\", hide: true },\n    { field: \"ORNo\", headerName: \"ORNo\", hide: true },\n    { field: \"DRRemarks\", headerName: \"DRRemarks\", hide: true },\n    { field: \"IDNo\", headerName: \"IDNo\", hide: true },\n    { field: \"TempOR\", headerName: \"TempOR\", hide: true },\n    { field: \"Short\", headerName: \"Short\", hide: true },\n  ];\n\n\n  useEffect(() => {\n\n  }, [selectedRows])\n\n  return (\n    <div\n      style={{\n        marginTop: \"10px\",\n        width: \"100%\",\n        position: \"relative\",\n        flex: 1,\n      }}\n    >\n      <Box\n        style={{\n          height: `${document.getElementById(\"concatiner\")?.getBoundingClientRect()\n            .height\n            }px`,\n          width: \"100%\",\n          overflowX: \"scroll\",\n          position: \"absolute\",\n        }}\n      >\n        <Table\n          ref={table}\n          isLoading={false}\n          columns={selectedCollectionColumns}\n          rows={selectedRows}\n          table_id={\"TempOR\"}\n          isSingleSelection={true}\n          isRowFreeze={false}\n          dataSelection={(selection, data, code) => {\n            const rowSelected = data.filter(\n              (item: any) => item.TempOR === selection[0]\n            )[0];\n            if (rowSelected === undefined || rowSelected.length <= 0) {\n              return;\n            }\n\n            setSelectedRows((d: any) => {\n              return d.filter((item: any) => item.TempOR !== selection[0]);\n            });\n            setCollectionForDeposit((d: any) => {\n              return d.filter((item: any) => item.TempOR !== selection[0]);\n            });\n          }}\n          getCellClassName={(params) => {\n            if (params.field === \"Deposit\" && params.value === \"Cash\") {\n              return \"cash\";\n            } else if (params.field === \"Deposit\" && params.value === \"Check\") {\n              return \"check\";\n            } else {\n              return \"\";\n            }\n          }}\n        />\n      </Box>\n    </div>\n  );\n\n\n}\nfunction CollectionForDeposit() {\n  const {\n    collectionForDeposit,\n    tableRows,\n    total,\n    setTotal,\n    TotalCashForDeposit,\n  } = useContext(DepositContext);\n  const table = useRef<any>(null);\n  useEffect(() => {\n    setTotal(\n      tableRows\n        ?.reduce((accumulator: any, currentValue: any) => {\n          return (\n            accumulator + parseFloat(currentValue.value3.replace(/,/g, \"\"))\n          );\n        }, 0.0)\n        .toLocaleString(\"en-US\", {\n          minimumFractionDigits: 2,\n          maximumFractionDigits: 2,\n        })\n    );\n  }, [tableRows, setTotal]);\n\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        gap: \"10px\",\n        height: \"auto \",\n      }}\n    >\n      <fieldset\n        style={{\n          flexDirection: \"column\",\n          gap: \"10px\",\n          padding: \"15px\",\n          border: \"1px solid #cbd5e1\",\n          borderRadius: \"5px\",\n          width: \"60%\",\n          position: \"relative\",\n        }}\n      >\n        <legend>Checks</legend>\n        <div style={{ marginTop: \"10px\", width: \"100%\", position: \"relative\" }}>\n          <Box\n            style={{\n              height: \"530px\",\n              width: \"100%\",\n              overflowX: \"scroll\",\n              position: \"absolute\",\n            }}\n          >\n            <Table\n              ref={table}\n              isLoading={false}\n              checkboxSelection={false}\n              columns={[\n                {\n                  field: \"Bank\",\n                  headerName: \"Bank/Branch\",\n                  flex: 1,\n                  minWidth: 170,\n                },\n                {\n                  field: \"Check_No\",\n                  headerName: \"Check No\",\n                  flex: 1,\n                  minWidth: 170,\n                },\n                {\n                  field: \"Amount\",\n                  headerName: \"Amount\",\n                  flex: 1,\n                  minWidth: 170,\n                },\n              ]}\n              rows={collectionForDeposit}\n              table_id={\"TempOR\"}\n              isSingleSelection={true}\n              isRowFreeze={false}\n              isRowSelectable={() => false}\n              footerChildren={() => {\n                return <FooterCollectionForDepositCheck />;\n              }}\n              footerPaginationPosition={\"left-right\"}\n              showFooterSelectedCount={false}\n            />\n          </Box>\n        </div>\n      </fieldset>\n      <fieldset\n        style={{\n          flexDirection: \"column\",\n          gap: \"10px\",\n          padding: \"15px\",\n          border: \"1px solid #cbd5e1\",\n          borderRadius: \"5px\",\n          alignSelf: \"flex-end\",\n          display: \"flex\",\n          width: \"40%\",\n        }}\n      >\n        <legend\n          style={{\n            color: total === TotalCashForDeposit ? \"green\" : \"#ec4899\",\n          }}\n        >\n          Cash ( {TotalCashForDeposit} )\n        </legend>\n        <table\n          style={{\n            border: \"2px solid black\",\n            borderCollapse: \"collapse\",\n            marginTop: \"10px\",\n            width: \"100%\",\n          }}\n        >\n          <colgroup>\n            <col style={{ width: \"140px\" }} />\n            <col style={{ width: \"100px\" }} />\n            <col style={{ width: \"140px\" }} />\n          </colgroup>\n          <thead>\n            <tr\n              style={{\n                borderBottom: \"2px solid black\",\n                fontSize: \"14px\",\n              }}\n            >\n              <th\n                style={{\n                  borderRight: \"2px solid black\",\n                }}\n              >\n                Denominations\n              </th>\n              <th\n                style={{\n                  borderRight: \"2px solid black\",\n                }}\n              >\n                QTY\n              </th>\n              <th\n                style={{\n                  borderRight: \"2px solid black\",\n                }}\n              >\n                Amount\n              </th>\n            </tr>\n          </thead>\n          <tbody>\n            {tableRows?.map((items: any, idx: number) => {\n              return (\n                <TrComponent\n                  key={idx}\n                  value1={items.value1}\n                  value2={items.value2}\n                  value3={items.value3}\n                  idx={idx}\n                />\n              );\n            })}\n          </tbody>\n          <tfoot>\n            <tr\n              style={{\n                borderTop: \"2px solid black\",\n                height: \"50px\",\n              }}\n            >\n              <td colSpan={3}>\n                <div\n                  style={{\n                    display: \"flex\",\n                    justifyContent: \"flex-end\",\n                    padding: \"0 10px  \",\n                  }}\n                >\n                  <div\n                    style={{\n                      display: \"flex\",\n                      alignItems: \"center\",\n                      width: \"250px\",\n                    }}\n                  >\n                    <span style={{ fontSize: \"14px\", marginRight: \"5px\" }}>\n                      Total Cash Deposit:\n                    </span>\n                    <input\n                      style={{\n                        fontWeight: \"bold\",\n                        border: \"1px solid black\",\n                        textAlign: \"right\",\n                        fontSize: \"15px\",\n                        width: \"117px\",\n                      }}\n                      value={total}\n                      onChange={(e) => {\n                        setTotal(e.target.value);\n                      }}\n                      readOnly={true}\n                    />\n                  </div>\n                </div>\n              </td>\n            </tr>\n          </tfoot>\n        </table>\n      </fieldset>\n    </div>\n  );\n}\n\n// function _Deposit() {\n//   const [state, dispatch] = useReducer(reducer, initialState);\n//   const { myAxios, user } = useContext(AuthContext);\n//   const { currentStepIndex, step, goTo } = useMultipleComponent([\n//     <CashCollection />,\n//     <CheckCollection />,\n//     <SelectedCollection />,\n//     <CollectionForDeposit />,\n//   ]);\n//   const [tableRowsInputValue, setTableRowsInputValue] =\n//     useState<Array<{ value1: string; value2: string; value3: string }>>(\n//       defaultCashBreakDown\n//     );\n//   const [cashCollection, setCashCollection] = useState<GridRowSelectionModel>(\n//     []\n//   );\n//   const [checkCollection, setCheckCollection] = useState<GridRowSelectionModel>(\n//     []\n//   );\n//   const [selectedCollection, setSelectedCollection] =\n//     useState<GridRowSelectionModel>([]);\n//   const [collectionForDeposit, setCollectionForDeposit] =\n//     useState<GridRowSelectionModel>([]);\n//   const updateTableRowsInput = (\n//     fields: { value1: string; value2: string; value3: string },\n//     idx: number\n//   ) => {\n//     setTableRowsInputValue((d) => {\n//       return d.map((item, index) => {\n//         if (idx === index) {\n//           item = { ...item, ...fields };\n//         }\n//         return item;\n//       });\n//     });\n//   };\n//   const queryClient = useQueryClient();\n//   const { isLoading: LoadingCashTable, refetch: refetchCash } = useQuery({\n//     queryKey: \"cash\",\n//     queryFn: async () =>\n//       await myAxios.get(`/task/accounting/getCashCollection`, {\n//         headers: {\n//           Authorization: `Bearer ${user?.accessToken}`,\n//         },\n//       }),\n//     refetchOnWindowFocus: false,\n//     onSuccess: (data) => {\n//       const response = data as any;\n//       setCashCollection(response.data.cash);\n//     },\n//   });\n//   const { isLoading: LoadingDepositSlipCode, refetch: RefetchDepositSlipCode } =\n//     useQuery({\n//       queryKey: \"deposit-slipcode\",\n//       queryFn: async () =>\n//         await myAxios.get(`/task/accounting/get-deposit-slipcode`, {\n//           headers: {\n//             Authorization: `Bearer ${user?.accessToken}`,\n//           },\n//         }),\n//       refetchOnWindowFocus: false,\n//       onSuccess: (data) => {\n//         const response = data as any;\n\n//         dispatch({\n//           type: \"UPDATE_FIELD\",\n//           field: \"depositSlip\",\n//           value: response.data.slipcode[0].collectionID,\n//         });\n//         dispatch({\n//           type: \"UPDATE_FIELD\",\n//           field: \"temp_depositSlip\",\n//           value: response.data.slipcode[0].collectionID,\n//         });\n//       },\n//     });\n//   const { isLoading: LoadingCheckTable, refetch: refetchCheck } = useQuery({\n//     queryKey: \"check\",\n//     queryFn: async () =>\n//       await myAxios.get(`/task/accounting/getCheckCollection`, {\n//         headers: {\n//           Authorization: `Bearer ${user?.accessToken}`,\n//         },\n//       }),\n//     refetchOnWindowFocus: false,\n//     onSuccess: (data) => {\n//       const response = data as any;\n//       setCheckCollection(response.data.check);\n//     },\n//   });\n//   const [total, setTotal] = useState(\"0.00\");\n//   const datePickerRef = useRef<HTMLElement>(null);\n//   const bankDepositSearch = useRef<HTMLInputElement>(null);\n//   const depositSearch = useRef<HTMLInputElement>(null);\n//   const submitButton = useRef<HTMLButtonElement>(null);\n//   const goToRef = useRef<(index: number) => void>(goTo);\n\n//   const TotalCashForDeposit = selectedCollection\n//     .reduce((accumulator: number, currentValue: any) => {\n//       const dd =\n//         currentValue.Check_No || currentValue.Check_No !== \"\"\n//           ? 0\n//           : parseFloat(currentValue.Amount.replace(/,/g, \"\"));\n//       return accumulator + dd;\n//     }, 0.0)\n//     .toLocaleString(\"en-US\", {\n//       minimumFractionDigits: 2,\n//       maximumFractionDigits: 2,\n//     });\n//   const {\n//     ModalComponent: ModalDepostitBanks,\n//     openModal: openDepositBanks,\n//     isLoading: isLoadingDepostitBanks,\n//     closeModal: closeDepositBanks,\n//   } = useQueryModalTable({\n//     link: {\n//       url: \"/task/accounting/getBanks\",\n//       queryUrlName: \"bankDepositSearch\",\n//     },\n//     columns: [\n//       { field: \"Account_Type\", headerName: \"Account_Type\", width: 200 },\n//       { field: \"Account_No\", headerName: \"Account_No\", width: 170 },\n//       {\n//         field: \"Account_Name\",\n//         headerName: \"Account_Name\",\n//         flex: 1,\n//       },\n//     ],\n//     queryKey: \"bank-deposit\",\n//     uniqueId: \"Account_No\",\n//     responseDataKey: \"banks\",\n//     onSelected: (selectedRowData) => {\n//       console.log(selectedRowData[0]);\n//       const newState = {\n//         ...state,\n//         ...selectedRowData[0],\n//       };\n//       setNewStateValue(dispatch, newState);\n//       closeDepositBanks();\n//     },\n\n//     searchRef: bankDepositSearch,\n//   });\n\n\n\n//   const disabledFields = state.depositMode === \"\";\n\n//   return (\n//     <div>\n\n\n//     </div>\n//   )\n// }\n// function _CashCollection() {\n//   const {\n//     cashCollection,\n//     LoadingCashTable,\n//     setSelectedCollection,\n//     selectedCollection,\n//     loadingSearchByDepositSlip,\n//   } = useContext(DepositContext);\n\n//   const table = useRef<any>(null);\n//   const cashColumns = [\n//     {\n//       field: \"OR_No\",\n//       headerName: \"OR No.\",\n//       minWidth: 170,\n//     },\n//     {\n//       field: \"OR_Date\",\n//       headerName: \"OR Date\",\n//       minWidth: 170,\n//     },\n//     {\n//       field: \"Amount\",\n//       headerName: \"Amount\",\n//       minWidth: 150,\n//       align: \"right\",\n//       cellClassName: \"super-app-theme--cell\",\n//     },\n//     {\n//       field: \"Client_Name\",\n//       headerName: \"Client Name\",\n//       flex: 1,\n//       minWidth: 400,\n//     },\n//     {\n//       field: \"Temp_OR\",\n//       headerName: \"Temp_OR\",\n//       hide: true,\n//     },\n//   ];\n\n//   useEffect(() => {\n//     table.current?.setSelectedRows(\n//       selectedCollection\n//         .filter((item: any) => item.Check_No === \"\")\n//         .map((item: any) => item.TempOR)\n//     );\n//   }, [selectedCollection, table, loadingSearchByDepositSlip]);\n//   return (\n//     <div\n//       style={{\n//         flex: 1,\n//         marginTop: \"10px\",\n//         width: \"100%\",\n//         position: \"relative\",\n//       }}\n//     >\n//       <Box\n//         style={{\n//           height: `${document.getElementById(\"concatiner\")?.getBoundingClientRect()\n//             .height\n//             }px`,\n//           width: \"100%\",\n//           overflowX: \"scroll\",\n//           position: \"absolute\",\n//         }}\n//       >\n//         <Table\n//           ref={table}\n//           isLoading={LoadingCashTable || loadingSearchByDepositSlip}\n//           columns={cashColumns}\n//           rows={cashCollection}\n//           table_id={\"Temp_OR\"}\n//           isSingleSelection={true}\n//           isRowFreeze={true}\n//           dataSelection={(selection, data, code) => {\n//             const rowSelected = data.filter(\n//               (item: any) => item.Temp_OR === selection[0]\n//             )[0];\n//             if (rowSelected === undefined || rowSelected.length <= 0) {\n//               return;\n//             }\n\n//             const newSelected: any = {\n//               Deposit: \"Cash\",\n//               Check_No: \"\",\n//               Check_Date: \"\",\n//               Bank: \"\",\n//               Amount: rowSelected.Amount,\n//               Name: rowSelected.Client_Name,\n//               RowIndex: rowSelected.Temp_OR,\n//               DRCode: rowSelected.DRCode,\n//               ORNo: rowSelected.OR_No,\n//               DRRemarks: rowSelected.ORNo,\n//               IDNo: rowSelected.ID_No,\n//               TempOR: rowSelected.Temp_OR,\n//               Short: rowSelected.Short,\n//             };\n//             setSelectedCollection((d) => {\n//               d = [...d, newSelected];\n//               return d;\n//             });\n//           }}\n//         />\n//       </Box>\n//     </div>\n//   );\n// }\n// function _CheckCollection() {\n//   const {\n//     checkCollection,\n//     LoadingCheckTable,\n//     setSelectedCollection,\n//     selectedCollection,\n//     setCollectionForDeposit,\n//     loadingSearchByDepositSlip,\n//   } = useContext(DepositContext);\n//   const checkColumns = [\n//     {\n//       field: \"OR_No\",\n//       headerName: \"OR No.\",\n//       minWidth: 170,\n//     },\n//     {\n//       field: \"OR_Date\",\n//       headerName: \"OR Date\",\n//       minWidth: 170,\n//     },\n//     {\n//       field: \"Check_No\",\n//       headerName: \"Check No\",\n//       minWidth: 170,\n//     },\n//     {\n//       field: \"Check_Date\",\n//       headerName: \"Check Date\",\n//       minWidth: 170,\n//     },\n//     {\n//       field: \"Amount\",\n//       headerName: \"Amount\",\n//       minWidth: 160,\n//       align: \"right\",\n//     },\n//     {\n//       field: \"Bank_Branch\",\n//       headerName: \"Bank/Branch\",\n//       minWidth: 300,\n//     },\n//     {\n//       field: \"Client_Name\",\n//       headerName: \"Client Name\",\n//       minWidth: 300,\n//       flex: 1,\n//     },\n//     {\n//       field: \"Temp_OR\",\n//       headerName: \"Temp_OR\",\n//       hide: true,\n//     },\n//   ];\n//   const table = useRef<any>(null);\n//   useEffect(() => {\n//     table.current?.setSelectedRows(\n//       selectedCollection\n//         .filter((item: any) => item.Check_No !== \"\")\n//         .map((item: any) => item.TempOR)\n//     );\n//   }, [selectedCollection, table, loadingSearchByDepositSlip]);\n//   return (\n//     <div\n//       style={{\n//         marginTop: \"10px\",\n//         width: \"100%\",\n//         position: \"relative\",\n//         flex: 1,\n//       }}\n//     >\n//       <Box\n//         style={{\n//           height: `${document.getElementById(\"concatiner\")?.getBoundingClientRect()\n//             .height\n//             }px`,\n//           width: \"100%\",\n//           overflowX: \"scroll\",\n//           position: \"absolute\",\n//         }}\n//       >\n//         <Table\n//           ref={table}\n//           isLoading={LoadingCheckTable || loadingSearchByDepositSlip}\n//           columns={checkColumns}\n//           rows={checkCollection}\n//           table_id={\"Temp_OR\"}\n//           isSingleSelection={true}\n//           isRowFreeze={true}\n//           dataSelection={(selection, data, code) => {\n//             const rowSelected = data.filter(\n//               (item: any) => item.Temp_OR === selection[0]\n//             )[0];\n//             if (rowSelected === undefined || rowSelected.length <= 0) {\n//               return;\n//             }\n//             const newSelected: any = {\n//               Deposit: \"Check\",\n//               Check_No: rowSelected.Check_No,\n//               Check_Date: rowSelected.Check_Date,\n//               Bank: rowSelected.Bank_Branch,\n//               Amount: rowSelected.Amount,\n//               Name: rowSelected.Client_Name,\n//               RowIndex: rowSelected.Temp_OR,\n//               DRCode: rowSelected.DRCode,\n//               ORNo: rowSelected.OR_No,\n//               DRRemarks: rowSelected.DRRemarks,\n//               IDNo: rowSelected.ID_No,\n//               TempOR: rowSelected.Temp_OR,\n//               Short: rowSelected.Short,\n//             };\n//             setSelectedCollection((d) => {\n//               d = [...d, newSelected];\n//               return d;\n//             });\n\n//             const newSelectedCheckForDeposit: any = {\n//               Bank: rowSelected.Bank_Branch,\n//               Check_No: rowSelected.Check_No,\n//               Amount: rowSelected.Amount,\n//               TempOR: rowSelected.Temp_OR,\n//             };\n//             setCollectionForDeposit((d) => {\n//               d = [...d, newSelectedCheckForDeposit];\n//               return d;\n//             });\n//           }}\n//         />\n//       </Box>\n//     </div>\n//   );\n// }\n// function _SelectedCollection() {\n//   const {\n//     selectedCollection,\n//     setSelectedCollection,\n//     setCollectionForDeposit,\n//     loadingSearchByDepositSlip,\n//   } = useContext(DepositContext);\n\n//   const table = useRef<any>(null);\n\n//   const selectedCollectionColumns = [\n//     { field: \"Deposit\", headerName: \"Deposit\", flex: 1, minWidth: 170 },\n//     { field: \"Check_No\", headerName: \"Check No\", flex: 1, minWidth: 170 },\n//     {\n//       field: \"Check_Date\",\n//       headerName: \"Check Date\",\n//       flex: 1,\n//       minWidth: 170,\n//     },\n//     { field: \"Bank\", headerName: \"Bank/Branch\", flex: 1, minWidth: 200 },\n//     { field: \"Amount\", headerName: \"Amount\", flex: 1, minWidth: 170 },\n//     { field: \"Name\", headerName: \"Client Name\", flex: 1, minWidth: 400 },\n//     // hide\n//     { field: \"RowIndex\", headerName: \"RowIndex\", hide: true },\n//     { field: \"DRCode\", headerName: \"DRCode\", hide: true },\n//     { field: \"ORNo\", headerName: \"ORNo\", hide: true },\n//     { field: \"DRRemarks\", headerName: \"DRRemarks\", hide: true },\n//     { field: \"IDNo\", headerName: \"IDNo\", hide: true },\n//     { field: \"TempOR\", headerName: \"TempOR\", hide: true },\n//     { field: \"Short\", headerName: \"Short\", hide: true },\n//   ];\n\n//   return (\n//     <div\n//       style={{\n//         marginTop: \"10px\",\n//         width: \"100%\",\n//         position: \"relative\",\n//         flex: 1,\n//       }}\n//     >\n//       <Box\n//         style={{\n//           height: `${document.getElementById(\"concatiner\")?.getBoundingClientRect()\n//             .height\n//             }px`,\n//           width: \"100%\",\n//           overflowX: \"scroll\",\n//           position: \"absolute\",\n//         }}\n//       >\n//         <Table\n//           ref={table}\n//           isLoading={loadingSearchByDepositSlip}\n//           columns={selectedCollectionColumns}\n//           rows={selectedCollection}\n//           table_id={\"TempOR\"}\n//           isSingleSelection={true}\n//           isRowFreeze={false}\n//           dataSelection={(selection, data, code) => {\n//             const rowSelected = data.filter(\n//               (item: any) => item.TempOR === selection[0]\n//             )[0];\n//             if (rowSelected === undefined || rowSelected.length <= 0) {\n//               return;\n//             }\n\n//             setSelectedCollection((d) => {\n//               return d.filter((item: any) => item.TempOR !== selection[0]);\n//             });\n//             setCollectionForDeposit((d) => {\n//               return d.filter((item: any) => item.TempOR !== selection[0]);\n//             });\n//           }}\n//           getCellClassName={(params) => {\n//             if (params.field === \"Deposit\" && params.value === \"Cash\") {\n//               return \"cash\";\n//             } else if (params.field === \"Deposit\" && params.value === \"Check\") {\n//               return \"check\";\n//             } else {\n//               return \"\";\n//             }\n//           }}\n//         />\n//       </Box>\n//     </div>\n//   );\n// }\n// function _CollectionForDeposit() {\n//   const {\n//     collectionForDeposit,\n//     tableRows,\n//     total,\n//     setTotal,\n//     TotalCashForDeposit,\n//   } = useContext(DepositContext);\n//   const table = useRef<any>(null);\n//   useEffect(() => {\n//     setTotal(\n//       tableRows\n//         .reduce((accumulator, currentValue) => {\n//           return (\n//             accumulator + parseFloat(currentValue.value3.replace(/,/g, \"\"))\n//           );\n//         }, 0.0)\n//         .toLocaleString(\"en-US\", {\n//           minimumFractionDigits: 2,\n//           maximumFractionDigits: 2,\n//         })\n//     );\n//   }, [tableRows, setTotal]);\n\n//   return (\n//     <div\n//       style={{\n//         display: \"flex\",\n//         gap: \"10px\",\n//         height: \"auto \",\n//       }}\n//     >\n//       <fieldset\n//         style={{\n//           flexDirection: \"column\",\n//           gap: \"10px\",\n//           padding: \"15px\",\n//           border: \"1px solid #cbd5e1\",\n//           borderRadius: \"5px\",\n//           width: \"60%\",\n//           position: \"relative\",\n//         }}\n//       >\n//         <legend>Checks</legend>\n//         <div style={{ marginTop: \"10px\", width: \"100%\", position: \"relative\" }}>\n//           <Box\n//             style={{\n//               height: \"530px\",\n//               width: \"100%\",\n//               overflowX: \"scroll\",\n//               position: \"absolute\",\n//             }}\n//           >\n//             <Table\n//               ref={table}\n//               isLoading={false}\n//               checkboxSelection={false}\n//               columns={[\n//                 {\n//                   field: \"Bank\",\n//                   headerName: \"Bank/Branch\",\n//                   flex: 1,\n//                   minWidth: 170,\n//                 },\n//                 {\n//                   field: \"Check_No\",\n//                   headerName: \"Check No\",\n//                   flex: 1,\n//                   minWidth: 170,\n//                 },\n//                 {\n//                   field: \"Amount\",\n//                   headerName: \"Amount\",\n//                   flex: 1,\n//                   minWidth: 170,\n//                 },\n//               ]}\n//               rows={collectionForDeposit}\n//               table_id={\"TempOR\"}\n//               isSingleSelection={true}\n//               isRowFreeze={false}\n//               isRowSelectable={() => false}\n//               footerChildren={() => {\n//                 return <FooterCollectionForDepositCheck />;\n//               }}\n//               footerPaginationPosition={\"left-right\"}\n//               showFooterSelectedCount={false}\n//             />\n//           </Box>\n//         </div>\n//       </fieldset>\n//       <fieldset\n//         style={{\n//           flexDirection: \"column\",\n//           gap: \"10px\",\n//           padding: \"15px\",\n//           border: \"1px solid #cbd5e1\",\n//           borderRadius: \"5px\",\n//           alignSelf: \"flex-end\",\n//           display: \"flex\",\n//           width: \"40%\",\n//         }}\n//       >\n//         <legend\n//           style={{\n//             color: total === TotalCashForDeposit ? \"green\" : \"#ec4899\",\n//           }}\n//         >\n//           Cash ( {TotalCashForDeposit} )\n//         </legend>\n//         <table\n//           style={{\n//             border: \"2px solid black\",\n//             borderCollapse: \"collapse\",\n//             marginTop: \"10px\",\n//             width: \"100%\",\n//           }}\n//         >\n//           <colgroup>\n//             <col style={{ width: \"140px\" }} />\n//             <col style={{ width: \"100px\" }} />\n//             <col style={{ width: \"140px\" }} />\n//           </colgroup>\n//           <thead>\n//             <tr\n//               style={{\n//                 borderBottom: \"2px solid black\",\n//                 fontSize: \"14px\",\n//               }}\n//             >\n//               <th\n//                 style={{\n//                   borderRight: \"2px solid black\",\n//                 }}\n//               >\n//                 Denominations\n//               </th>\n//               <th\n//                 style={{\n//                   borderRight: \"2px solid black\",\n//                 }}\n//               >\n//                 QTY\n//               </th>\n//               <th\n//                 style={{\n//                   borderRight: \"2px solid black\",\n//                 }}\n//               >\n//                 Amount\n//               </th>\n//             </tr>\n//           </thead>\n//           <tbody>\n//             {tableRows.map((items, idx) => {\n//               return (\n//                 <TrComponent\n//                   key={idx}\n//                   value1={items.value1}\n//                   value2={items.value2}\n//                   value3={items.value3}\n//                   idx={idx}\n//                 />\n//               );\n//             })}\n//           </tbody>\n//           <tfoot>\n//             <tr\n//               style={{\n//                 borderTop: \"2px solid black\",\n//                 height: \"50px\",\n//               }}\n//             >\n//               <td colSpan={3}>\n//                 <div\n//                   style={{\n//                     display: \"flex\",\n//                     justifyContent: \"flex-end\",\n//                     padding: \"0 10px  \",\n//                   }}\n//                 >\n//                   <div\n//                     style={{\n//                       display: \"flex\",\n//                       alignItems: \"center\",\n//                       width: \"250px\",\n//                     }}\n//                   >\n//                     <span style={{ fontSize: \"14px\", marginRight: \"5px\" }}>\n//                       Total Cash Deposit:\n//                     </span>\n//                     <input\n//                       style={{\n//                         fontWeight: \"bold\",\n//                         border: \"1px solid black\",\n//                         textAlign: \"right\",\n//                         fontSize: \"15px\",\n//                         width: \"117px\",\n//                       }}\n//                       value={total}\n//                       onChange={(e) => {\n//                         setTotal(e.target.value);\n//                       }}\n//                       readOnly={true}\n//                     />\n//                   </div>\n//                 </div>\n//               </td>\n//             </tr>\n//           </tfoot>\n//         </table>\n//       </fieldset>\n//     </div>\n//   );\n// }\nfunction TrComponent({ value1, value2, value3, idx }: any) {\n  const { updateTableRowsInput } = useContext(DepositContext);\n\n  const [input1, setInput1] = useState(value1);\n  const [input2, setInput2] = useState(value2);\n  const [input3, setInput3] = useState(value3);\n  const InputStyle: CSSProperties = {\n    textAlign: \"right\",\n    height: \"28px\",\n    borderRight: \"none\",\n    borderLeft: \"none\",\n    borderTop: \"none\",\n    outline: \"none\",\n    borderBottom: \"1px solid #cbd5e1\",\n    padding: \"0 8px\",\n    width: \"100%\",\n  };\n\n  return (\n    <tr>\n      <td\n        style={{\n          borderRight: \"2px solid black\",\n        }}\n      >\n        <input\n          type=\"text\"\n          style={InputStyle}\n          value={input1}\n          onChange={(e) => setInput1(e.target.value)}\n          readOnly={true}\n        />\n      </td>\n      <td\n        style={{\n          borderRight: \"2px solid black\",\n          overflow: \"hidden\",\n        }}\n      >\n        <input\n          style={InputStyle}\n          value={input2}\n          onChange={(e) => {\n            let input1Value = input1;\n            setInput2(e.target.value);\n            if (input1.includes(\",\")) {\n              input1Value = input1.replace(/,/g, \"\").toString();\n            }\n            const valueFor3 = (\n              parseFloat(input1Value) *\n              (isNaN(parseInt(e.target.value)) ? 0 : parseInt(e.target.value))\n            ).toLocaleString(\"en-US\", {\n              minimumFractionDigits: 2,\n              maximumFractionDigits: 2,\n            });\n            setInput3(valueFor3);\n\n            updateTableRowsInput(\n              {\n                value1,\n                value2: e.target.value,\n                value3: valueFor3,\n              },\n              idx\n            );\n          }}\n        />\n      </td>\n      <td\n        style={{\n          borderRight: \"2px solid black\",\n        }}\n      >\n        <input\n          type=\"text\"\n          style={InputStyle}\n          value={input3}\n          onChange={(e) => setInput3(e.target.value)}\n          readOnly={true}\n        />\n      </td>\n    </tr>\n  );\n}\nfunction FooterCollectionForDepositCheck() {\n  const { collectionForDeposit } = useContext(DepositContext);\n  return (\n    <Box\n      sx={{\n        px: 2,\n        py: 1,\n        display: \"flex\",\n        justifyContent: \"flex-end\",\n        borderTop: \"2px solid #e2e8f0\",\n      }}\n    >\n      <strong>\n        Total:{\" \"}\n        {collectionForDeposit\n          .reduce((sum: number, obj: any) => {\n            return sum + parseFloat(obj.Amount.replace(/,/g, \"\"));\n          }, 0)\n          .toLocaleString(\"en-US\", {\n            minimumFractionDigits: 2,\n            maximumFractionDigits: 2,\n          })}\n      </strong>\n    </Box>\n  );\n}\nfunction setNewStateValue(dispatch: any, obj: any) {\n  Object.entries(obj).forEach(([field, value]) => {\n    dispatch({ type: \"UPDATE_FIELD\", field, value });\n  });\n}\n","import { useState, ReactElement } from \"react\";\n\nexport default function useMultipleComponent(steps: ReactElement[]) {\n  const [currentStepIndex, setCurrentStepIndex] = useState(0);\n\n  function next() {\n    setCurrentStepIndex((i) => {\n      if (i >= steps.length - 1) {\n        return i;\n      }\n      return i + 1;\n    });\n  }\n  function back() {\n    setCurrentStepIndex((i) => {\n      if (i <= 0) {\n        return i;\n      }\n      return i + 1;\n    });\n  }\n  function goTo(index: number) {\n    setCurrentStepIndex(index);\n  }\n  return {\n    step: steps[currentStepIndex],\n    goTo,\n    back,\n    next,\n    isFirstStep: currentStepIndex !== 0,\n    isLastStep: currentStepIndex === steps.length - 1,\n    currentStepIndex,\n  };\n}\n","import { useContext, useState } from \"react\";\nimport { useQuery } from \"react-query\";\nimport { AuthContext, User } from \"../components/AuthContext\";\nimport {\n  GridRowSelectionModel,\n  GridCellParams,\n  GridTreeNode,\n} from \"@mui/x-data-grid\";\nimport ModalWithTable from \"../components/ModalWithTable\";\nimport { flushSync } from \"react-dom\";\nimport { AxiosResponse, AxiosInstance } from \"axios\";\nimport { GridRowParams } from \"@mui/x-data-grid\";\ninterface QueryModalTableParamsType {\n  link?: {\n    url: string;\n    queryUrlName: string;\n  };\n  uniqueId: string;\n  queryKey: string;\n  responseDataKey: string;\n  columns: Array<any>;\n  onSelected?: (selectedRowData: Array<any>, data: Array<any>) => void;\n  onRemoveSelected?: (data: Array<any>) => void;\n  onSuccess?: (data: any) => void;\n  searchRef?: React.RefObject<HTMLInputElement>;\n  onCellKeyDown?: any;\n  onCloseFunction?: (search: any) => void;\n  CustomizeAxios?: (\n    myAxios: AxiosInstance,\n    user: User | null,\n    link: QueryModalTableParamsType[\"link\"],\n    search?: string\n  ) => Promise<AxiosResponse<any, any>>;\n  isRowSelectable?: ((params: GridRowParams<any>) => boolean) | undefined;\n  getCellClassName?:\n    | ((params: GridCellParams<any, any, any, GridTreeNode>) => string)\n    | undefined;\n}\n\nasync function CustomizeAxiosFunc(\n  myAxios: AxiosInstance,\n  user: User | null,\n  link: QueryModalTableParamsType[\"link\"],\n  search: string = \"\"\n) {\n  return myAxios.get(`${link?.url}?${link?.queryUrlName}=${search}`, {\n    headers: {\n      Authorization: `Bearer ${user?.accessToken}`,\n    },\n  });\n}\n\nconst useQueryModalTable = ({\n  link,\n  uniqueId,\n  queryKey,\n  responseDataKey,\n  columns,\n  onSelected = () => {},\n  onRemoveSelected = () => {},\n  onSuccess = () => {},\n  searchRef,\n  onCellKeyDown,\n  onCloseFunction = () => {},\n  CustomizeAxios = CustomizeAxiosFunc,\n  isRowSelectable,\n  getCellClassName,\n}: QueryModalTableParamsType) => {\n  const { myAxios, user } = useContext(AuthContext);\n  const [show, setShowModal] = useState(false);\n  const [rows, setRows] = useState<GridRowSelectionModel>([]);\n  async function customizeAxiostool(search: string = \"\") {\n    return await CustomizeAxios(myAxios, user, link, search);\n  }\n  const { isLoading, refetch } = useQuery({\n    queryKey: queryKey,\n    queryFn: async () => await customizeAxiostool(),\n    onSuccess: (res) => {\n      const response = res as any;\n      setRows(response.data[responseDataKey]);\n      onSuccess(response);\n    },\n    refetchOnWindowFocus: false,\n  });\n\n  const openModal = (search: string = \"\") => {\n    flushSync(() => {\n      setShowModal(true);\n    });\n    if (searchRef?.current) {\n      searchRef.current.value = search;\n      customizeAxiostool(search).then((res: any) => {\n        if (!res?.data.success) {\n          return alert(`Error : ${res?.data.message}`);\n        }\n        const response = res as any;\n        setRows(response.data[responseDataKey]);\n        if (searchRef?.current) searchRef.current.focus();\n      });\n    }\n  };\n\n  const closeModal = () => {\n    setShowModal(false);\n    if (onCloseFunction) {\n      onCloseFunction(searchRef?.current?.value);\n    }\n  };\n\n  const ModalComponent = (\n    <ModalWithTable\n      getCellClassName={getCellClassName}\n      searchRef={searchRef}\n      showModal={show}\n      onCloseModal={() => {\n        setShowModal(false);\n        if (onCloseFunction) {\n          onCloseFunction(searchRef?.current?.value);\n        }\n      }}\n      onClickCloseIcon={() => {\n        setShowModal(false);\n        if (onCloseFunction) {\n          onCloseFunction(searchRef?.current?.value);\n        }\n      }}\n      searchOnChange={(e) => {\n        // myAxios\n        //   .get(`${link.url}?${link.queryUrlName}=${e.target.value}`, {\n        //     headers: {\n        //       Authorization: `Bearer ${user?.accessToken}`,\n        //     },\n        //   })\n        //   .then((res: any) => {\n        //     if (!res?.data.success) {\n        //       return alert(`Error : ${res?.data.message}`);\n        //     }\n        //     const response = res as any;\n        //     setRows(response.data[responseDataKey]);\n        //   });\n      }}\n      onSearchKeyEnter={(value) => {\n        customizeAxiostool(value).then((res: any) => {\n          if (!res?.data.success) {\n            return alert(`Error : ${res?.data.message}`);\n          }\n          const response = res as any;\n          setRows(response.data[responseDataKey]);\n        });\n      }}\n      onCellKeyDown={onCellKeyDown}\n      height={300}\n      isLoading={isLoading}\n      queryKey={queryKey}\n      columns={columns}\n      onSelectionChange={(rowSelectionModel, data) => {\n        if (rowSelectionModel.length <= 0) {\n          return onRemoveSelected(data);\n        }\n        const selectedIDs = new Set(rowSelectionModel);\n        const selectedRowData = data.filter((row: any) => {\n          return selectedIDs.has(row[uniqueId].toString());\n        });\n        if (selectedRowData.length <= 0) return;\n        onSelected(selectedRowData, data);\n      }}\n      id={uniqueId}\n      rows={rows}\n      setRows={setRows}\n      isRowSelectable={isRowSelectable}\n    />\n  );\n\n  return {\n    show,\n    rows,\n    isLoading,\n    openModal,\n    closeModal,\n    ModalComponent,\n    refetch,\n  };\n};\n\nexport default useQueryModalTable;\n","import Swal from \"sweetalert2\";\n\nexport function codeCondfirmationAlert(props: {\n  cb: (userCodeConfirmation: string) => void;\n  isUpdate: boolean;\n  isConfirm?: () => void;\n  isDeclined?: () => void;\n  text?: string;\n}) {\n  Swal.fire({\n    title: `Are you sure!`,\n    html: props?.text\n      ? props?.text\n      : props.isUpdate\n      ? `Are you sure you want to make this change?`\n      : \"Are you sure you want to delete this?\",\n    icon: \"warning\",\n    input: \"text\",\n    inputAttributes: {\n      autocapitalize: \"off\",\n    },\n    showCancelButton: true,\n    confirmButtonText: \"Save\",\n    confirmButtonColor: \"green\",\n    showLoaderOnConfirm: true,\n    preConfirm: async (userCodeConfirmation) => {\n      try {\n        props.cb(userCodeConfirmation);\n      } catch (error) {\n        Swal.showValidationMessage(`\n            Request failed: ${error}\n          `);\n      }\n    },\n    allowOutsideClick: () => !Swal.isLoading(),\n  }).then((result) => {\n    if (result.isConfirmed) {\n      if (props.isConfirm) {\n        return props.isConfirm();\n      }\n    }\n    if (props.isDeclined) {\n      props.isDeclined();\n    }\n  });\n}\n\nexport function saveCondfirmationAlert(props: {\n  isConfirm?: () => void;\n  isDeclined?: () => void;\n  text?: string;\n}) {\n  Swal.fire({\n    title: \"Are you sure?\",\n    text: props?.text ? props?.text : \"Do you want to proceed with saving?\",\n    icon: \"warning\",\n    showCancelButton: true,\n    confirmButtonColor: \"#3085d6\",\n    cancelButtonColor: \"#d33\",\n    confirmButtonText: \"Yes, save it!\",\n  }).then((result) => {\n    if (result.isConfirmed) {\n      if (props.isConfirm) {\n        return props.isConfirm();\n      }\n    }\n    if (props.isDeclined) {\n      props.isDeclined();\n    }\n  });\n}\n","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\"\n}), 'Add');\nexports.default = _default;","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 6v3l4-4-4-4v3c-4.42 0-8 3.58-8 8 0 1.57.46 3.03 1.24 4.26L6.7 14.8c-.45-.83-.7-1.79-.7-2.8 0-3.31 2.69-6 6-6zm6.76 1.74L17.3 9.2c.44.84.7 1.79.7 2.8 0 3.31-2.69 6-6 6v-3l-4 4 4 4v-3c4.42 0 8-3.58 8-8 0-1.57-.46-3.03-1.24-4.26z\"\n}), 'Autorenew');\nexports.default = _default;","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M17 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V7l-4-4zm-5 16c-1.66 0-3-1.34-3-3s1.34-3 3-3 3 1.34 3 3-1.34 3-3 3zm3-10H5V5h10v4z\"\n}), 'Save');\nexports.default = _default;","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bigint: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is');\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}"],"names":["style","position","top","left","transform","width","bgcolor","boxShadow","p","heigth","ModalWithTable","_ref","height","isLoading","columns","queryKey","onSelectionChange","rows","setRows","id","onCloseModal","showModal","onClickCloseIcon","searchOnChange","_ref$title","title","searchRef","_ref$onSearchKeyEnter","onCellKeyDown","onSearchKeyEnter","isRowSelectable","getCellClassName","mainId","generateRandomClass","_jsx","Modal","open","onClose","children","_jsxs","Box","sx","Typography","variant","component","mb","TextField","size","label","marginBottom","fullWidth","onChange","InputProps","inputRef","onKeyDown","e","_searchRef$current","code","preventDefault","current","value","keyBoardSelectionTable","className","concat","Table","isSingleSelection","isRowFreeze","dataSelection","selection","data","table_id","right","IconButton","color","onClick","CloseIcon","Math","floor","random","el","_rows$","document","querySelectorAll","classList","add","firstRowParent","querySelector","firstInput","focus","event","MouseEvent","bubbles","cancelable","view","window","dispatchEvent","addEventListener","es","key","remove","keyBoardUpDown","forEach","idx","_rows$idx","_rows","_rows$idx2","_rows2","length","TableContext","createContext","rowSelectionModel","footerChildren","footerPaginationPosition","showFooterSelectedCount","forwardRef","ref","_ref$CustomFooterComp","CustomFooterComponent","DefaultooterComponent","_ref$checkboxSelectio","checkboxSelection","_ref$footerChildren","_ref$footerPagination","_ref$showFooterSelect","_useState","useState","_useState2","_slicedToArray","selectedRows","setSelectedRows","useImperativeHandle","removeSelection","getSelectedRows","filter","item","includes","freezeArray","Provider","DataGrid","slots","loadingOverlay","LinearProgress","footer","initialState","pagination","paginationModel","pageSize","loading","getRowId","row","col","hide","showCellVerticalBorder","showColumnVerticalBorder","rowHeight","columnHeaderHeight","pageSizeOptions","_objectSpread","fill","background","padding","fontSize","display","fontWeight","onRowSelectionModelChange","selectionSet","Set","s","has","__","rowNode","_toConsumableArray","disableVirtualization","Pagination","_ref2","page","onPageChange","apiRef","useGridApiContext","pageCount","useGridSelector","gridPageCountSelector","MuiPagination","count","newPage","CustomPagination","props","GridPagination","ActionsComponent","_useContext","useContext","columnGap","justifyContent","px","alignItems","flexDirection","flex","TextInput","input","icon","_ref$iconPosition","iconPosition","_ref$onIconClick","onIconClick","useId","htmlFor","zIndex","cursor","SelectInput","select","selectRef","_ref2$datasource","datasource","_ref2$values","values","_ref2$display","map","itm","ButtonField","_ref3","buttonRetRef","button","_ref3$tooltipText","tooltipText","_ref3$disabled","disabled","defaultCashBreakDown","value1","value2","value3","buttons","index","reducer","Date","state","action","type","_defineProperty","field","DepositContext","cashCollection","setCashCollection","checkCollection","setCheckCollection","selectedCollection","setSelectedCollection","collectionForDeposit","setCollectionForDeposit","tableRows","updateTableRowsInput","LoadingCashTable","LoadingCheckTable","setTotal","total","TotalCashForDeposit","loadingSearchByDepositSlip","Deposit","_queryFn","_mutationFn","_mutationFn2","_mutationFn3","_queryFn2","_queryFn3","depositSearch","useRef","inputSearchRef","refSlipCode","refDateDepo","refBankAcctCode","refBankAcctName","bankDepositSearch","_refTempSlipCode","refBankAcctCodeTag","refBankAcctNameTag","refAcctID","refAcctName","refClassification","refSubAccount","refShortName","AuthContext","myAxios","user","_useMultipleComponent","useMultipleComponent","CashCollection","CheckCollection","SelectedCollection","CollectionForDeposit","currentStepIndex","step","goTo","_useState3","_useState4","_useState5","_useState6","_useState7","_useState8","_useState9","_useState10","tableRowsInputValue","setTableRowsInputValue","_useState11","_useState12","depositMode","setDepositMode","_useState13","_useState14","reduce","accumulator","currentValue","Check_No","parseFloat","Amount","replace","toLocaleString","minimumFractionDigits","maximumFractionDigits","_useQuery","useQuery","queryFn","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","get","headers","Authorization","accessToken","abrupt","sent","stop","apply","arguments","refetchOnWindowFocus","onSuccess","response","wait","then","slipcode","collectionID","format","LoadingDepositSlipCode","RefetchDepositSlipCode","refetch","_useQueryModalTable","useQueryModalTable","link","url","queryUrlName","headerName","uniqueId","responseDataKey","onSelected","selectedRowData","_selectedRowData$","_selectedRowData$2","_selectedRowData$3","_selectedRowData$4","_selectedRowData$5","_selectedRowData$6","_selectedRowData$7","console","log","Account_No","Account_Name","IDNo","Desc","Account_ID","Short","client_name","Sub_Acct","ShortName","closeDepositBanks","ModalDepostitBanks","ModalComponent","openDepositBanks","openModal","isLoadingDepostitBanks","closeModal","_useMutation","useMutation","mutationKey","mutationFn","_x","_callee2","variables","_context2","post","res","resposnse","success","resetRefs","Swal","message","timer","addDepositMutation","mutate","addDepositMutationLoading","_useMutation2","_x2","_callee3","_context3","updateDepositMutation","updateDepositMutationLoading","_useMutation3","_x3","_callee4","_context4","obj","cash","check","checks","cash_breakdown","refDate","filteredCash","_refSlipCode$current","SlipCode","filteredCheck","_refSlipCode$current2","rowSelected","d","newSelected","Check_Date","Bank","Name","Client_Name","RowIndex","DRCode","ORNo","OR_No","DRRemarks","ID_No","TempOR","Temp_OR","Bank_Branch","newSelectedCheckForDeposit","searchByDepositSlip","_useQueryModalTable2","closeDeposit","onCloseFunction","ModalDeposit","openDeposit","isLoadingDeposit","_useQuery2","_callee5","_context5","loadingCashCollection","refetchCashCollection","_useQuery3","_callee6","_context6","loadingCheckCollection","refetchCheckCollection","disabledFields","LoadingButton","_inputSearchRef$curre","Button","startIcon","AddIcon","_refBankAcctCode$curr","_refBankAcctCode$curr2","_refSlipCode$current3","_refDateDepo$current","_refBankAcctCode$curr3","_refBankAcctName$curr","result","trim","depositSlip","depositdate","BankAcctCode","BankAcctName","BankAcctCodeTag","BankAcctNameTag","AcctID","AcctName","Classification","SubAccount","codeCondfirmationAlert","isUpdate","cb","userCodeConfirmation","JSON","stringify","saveCondfirmationAlert","isConfirm","SaveIcon","text","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","isConfirmed","gap","readOnly","AutorenewIcon","_refBankAcctCode$curr4","AccountBalanceIcon","_refBankAcctCode$curr5","border","outline","backgroundColor","borderWidth","fontFamily","lineHeight","listStyle","margin","textAlign","transition","verticalAlign","whiteSpace","userSelect","touchAction","overflow","bottom","slideAnimation","fields","activeButton","_document$getElementB","_useContext2","table","useEffect","_table$current","marginTop","getElementById","getBoundingClientRect","overflowX","minWidth","align","cellClassName","undefined","_document$getElementB2","_useContext3","_table$current2","_document$getElementB3","_useContext4","params","_useContext5","borderRadius","FooterCollectionForDepositCheck","alignSelf","borderCollapse","borderBottom","borderRight","items","TrComponent","borderTop","colSpan","marginRight","target","_useState15","_useState16","input1","setInput1","_useState17","_useState18","input2","setInput2","_useState19","_useState20","input3","setInput3","InputStyle","borderLeft","input1Value","toString","valueFor3","isNaN","parseInt","py","sum","steps","setCurrentStepIndex","back","i","isFirstStep","isLastStep","CustomizeAxiosFunc","_CustomizeAxiosFunc","search","_args","_customizeAxiostool","_ref$onSelected","_ref$onRemoveSelected","onRemoveSelected","_ref$onSuccess","_ref$onCloseFunction","_ref$CustomizeAxios","CustomizeAxios","show","setShowModal","customizeAxiostool","_args2","flushSync","alert","_searchRef$current2","_searchRef$current3","selectedIDs","_preConfirm","html","inputAttributes","autocapitalize","showLoaderOnConfirm","preConfirm","error","allowOutsideClick","isDeclined","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","ReactPropTypesSecret","emptyFunction","emptyFunctionWithReset","resetWarningCache","module","shim","propName","componentName","location","propFullName","secret","err","Error","name","getShim","isRequired","ReactPropTypes","array","bigint","bool","func","number","object","string","symbol","any","arrayOf","element","elementType","instanceOf","node","objectOf","oneOf","oneOfType","shape","exact","checkPropTypes","PropTypes","_objectWithoutProperties","source","excluded","Object","getOwnPropertySymbols","sourceSymbolKeys","indexOf","prototype","propertyIsEnumerable","call"],"sourceRoot":""}