{"version":3,"file":"static/js/1760.f0566426.chunk.js","mappings":"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","sources":["feautures/Admin/Task/Production/Policies/PolicyComponent/Vehicle/VehicleComponent/PolicyInformation.tsx","feautures/Admin/Task/Production/Policies/PolicyComponent/Vehicle/VehicleComponent/PolicyPremium.tsx","feautures/Admin/Task/Production/Policies/PolicyComponent/Vehicle/VehicleComponent/PolicyTypeDetails.tsx","feautures/Admin/Task/Production/Policies/PolicyComponent/Vehicle/VehiclePolicy.tsx","hooks/useMultipleComponent.tsx"],"sourcesContent":["import React, {\n  CSSProperties,\n  useContext,\n  useEffect,\n  useReducer,\n  useRef,\n  useState,\n} from \"react\";\nimport { VehicleContext } from \"../VehiclePolicy\";\nimport {\n  IconButton,\n  TextField,\n  FormControl,\n  InputLabel,\n  Select,\n  MenuItem,\n  InputAdornment,\n  OutlinedInput,\n  Button,\n  CircularProgress,\n} from \"@mui/material\";\nimport PersonSearchIcon from \"@mui/icons-material/PersonSearch\";\nimport CustomDatePicker from \"../../../../../../../../components/DatePicker\";\nimport PolicyIcon from \"@mui/icons-material/Policy\";\nimport { LoadingButton } from \"@mui/lab\";\nimport useQueryModalTable from \"../../../../../../../../hooks/useQueryModalTable\";\nimport { useMutation, useQuery } from \"react-query\";\nimport PersonOutlineIcon from \"@mui/icons-material/PersonOutline\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport { addYears } from \"date-fns\";\nconst initialClientDetailsState = {\n  ShortName: \"\",\n  IDNo: \"\",\n  firstname: \"\",\n  middlename: \"\",\n  company: \"\",\n  address: \"\",\n  options: \"\",\n  sub_account: \"\",\n  createdAt: \"\",\n  updatedAt: \"\",\n  contact_details_id: \"\",\n  description: \"\",\n  remarks: \"\",\n  VAT_Type: \"\",\n  tin_no: \"\",\n  Sub_Acct: \"\",\n  Description: \"\",\n  Acronym: \"\",\n  update: \"\",\n  email: \"\",\n  mobile: \"\",\n  telephone: \"\",\n};\nconst reducer = (state: any, action: any) => {\n  switch (action.type) {\n    case \"UPDATE_FIELD\":\n      const newState = {\n        ...state,\n        [action.field]: action.value,\n      };\n      return newState;\n    default:\n      return state;\n  }\n};\n\nexport default function PolicyInformation() {\n  const {\n    state,\n    handleInputChange,\n    handleDateChange,\n    myAxios,\n    user,\n    isAddOrEditMode,\n    isLoadingTempId,\n    mutateRates,\n  } = useContext(VehicleContext);\n  const [clientDetailsState, dispatch] = useReducer(\n    reducer,\n    initialClientDetailsState\n  );\n\n  const [showClientDetails, setShowCLientDetails] = useState(false);\n  const periodInsuranceDateRef = useRef<HTMLElement>(null);\n  const dateToDateRef = useRef<HTMLElement>(null);\n  const dateIssuedDateRef = useRef<HTMLElement>(null);\n\n  const searchClientInputRef = useRef<HTMLInputElement>(null);\n  const searchAgentInputRef = useRef<HTMLInputElement>(null);\n  const searchTPLInputRef = useRef<HTMLInputElement>(null);\n\n  const handleChangeRef = useRef<any>(handleInputChange);\n\n  const { data: dataPolicyAccount, isLoading: isLoadingPolicyAccount } =\n    useQuery({\n      queryKey: \"get-policy-account\",\n      queryFn: async () =>\n        await myAxios.get(`/task/production/get-policy-account`, {\n          headers: {\n            Authorization: `Bearer ${user?.accessToken}`,\n          },\n        }),\n    });\n  const { isLoading: isLoadingClientDetails, mutate: mutateDetails } =\n    useMutation({\n      mutationKey: \"get-client-details\",\n      mutationFn: async (variable: any) =>\n        await myAxios.post(`/task/production/get-client-details`, variable, {\n          headers: {\n            Authorization: `Bearer ${user?.accessToken}`,\n          },\n        }),\n      onSuccess(res) {\n        const response = res.data as any;\n        setNewStateValue(dispatch, response?.clients[0]);\n        setShowCLientDetails(true);\n      },\n    });\n\n  const {\n    ModalComponent: ModalClientIDs,\n    openModal: openCliendIDsModal,\n    isLoading: isLoadingClientIdsModal,\n    closeModal: closeCliendIDsModal,\n  } = useQueryModalTable({\n    link: {\n      url: \"/task/production/get-clients\",\n      queryUrlName: \"clientSearch\",\n    },\n    columns: [\n      { field: \"entry_client_id\", headerName: \"ID\", width: 130 },\n      { field: \"fullname\", headerName: \"Full Name\", flex: 1 },\n      {\n        field: \"entry_type\",\n        headerName: \"ID Type\",\n        width: 150,\n      },\n    ],\n    queryKey: \"get-clients\",\n    uniqueId: \"entry_client_id\",\n    responseDataKey: \"clients\",\n    onSelected: (selectedRowData) => {\n      handleDateChange(selectedRowData[0].entry_client_id, \"client_id\");\n      handleDateChange(selectedRowData[0].fullname, \"client_name\");\n      handleDateChange(selectedRowData[0].address, \"client_address\");\n      handleDateChange(selectedRowData[0].sale_officer, \"sale_officer\");\n      closeCliendIDsModal();\n    },\n    onCellKeyDown: (__: any, key: any) => {\n      if (key.code === \"Enter\" || key.code === \"NumpadEnter\") {\n        handleDateChange(__.row.entry_client_id, \"client_id\");\n        handleDateChange(__.row.fullname, \"client_name\");\n        handleDateChange(__.row.address, \"client_address\");\n        handleDateChange(__.row.sale_officer, \"sale_officer\");\n        closeCliendIDsModal();\n      }\n    },\n    searchRef: searchClientInputRef,\n  });\n  const {\n    ModalComponent: ModalAgentId,\n    openModal: openModalAgentId,\n    isLoading: isLoadingModalAgentId,\n    closeModal: closeModalAgentId,\n  } = useQueryModalTable({\n    link: {\n      url: \"/task/production/get-agents\",\n      queryUrlName: \"agentSearch\",\n    },\n    columns: [\n      { field: \"entry_agent_id\", headerName: \"ID\", width: 130 },\n      { field: \"fullname\", headerName: \"First Name\", flex: 1 },\n      {\n        field: \"entry_type\",\n        headerName: \"ID Type\",\n        width: 150,\n      },\n    ],\n    queryKey: \"get-agents\",\n    uniqueId: \"entry_agent_id\",\n    responseDataKey: \"agents\",\n    onSelected: (selectedRowData) => {\n      handleDateChange(selectedRowData[0].entry_agent_id, \"agent_id\");\n      handleDateChange(selectedRowData[0].fullname, \"agent_name\");\n      closeModalAgentId();\n    },\n    onCellKeyDown: (__: any, key: any) => {\n      if (key.code === \"Enter\" || key.code === \"NumpadEnter\") {\n        handleDateChange(__.row.entry_agent_id, \"agent_id\");\n        handleDateChange(__.row.fullname, \"agent_name\");\n        closeModalAgentId();\n      }\n    },\n    searchRef: searchAgentInputRef,\n  });\n\n  const {\n    ModalComponent: ModalTPLId,\n    openModal: openModalTPLId,\n    isLoading: isLoadingModalTPLId,\n    closeModal: closeModalTPLId,\n  } = useQueryModalTable({\n    link: {\n      url: \"/task/production/tpl-ids-vehicle-policy\",\n      queryUrlName: \"tplIDSearch\",\n    },\n    columns: [\n      { field: \"Source_No\", headerName: \"ID\", width: 130 },\n      { field: \"Cost\", headerName: \"Cost\", flex: 1 },\n    ],\n    queryKey: \"get-tpl-ids\",\n    uniqueId: \"Source_No\",\n    responseDataKey: \"tpl_ids\",\n    onSelected: (selectedRowData) => {\n      handleDateChange(selectedRowData[0].Source_No, \"PolicyNo\");\n      handleDateChange(selectedRowData[0].Cost, \"rateCost\");\n      handleDateChange(selectedRowData[0].Source_No_Ref_ID, \"Source_No_Ref_ID\");\n      closeModalTPLId();\n    },\n    onCellKeyDown: (__: any, key: any) => {\n      if (key.code === \"Enter\" || key.code === \"NumpadEnter\") {\n        handleDateChange(__.row.Source_No, \"PolicyNo\");\n        handleDateChange(__.row.Cost, \"rateCost\");\n        handleDateChange(__.row.Source_No_Ref_ID, \"Source_No_Ref_ID\");\n        closeModalTPLId();\n      }\n    },\n    searchRef: searchTPLInputRef,\n  });\n\n  useEffect(() => {\n    if (state.form_action === \"TEMP\" && user?.department === \"UCSMI\") {\n      mutateRates({\n        Account: \"TEMPORARY\",\n        Type: state.form_type.toUpperCase(),\n      } as any);\n      handleChangeRef.current({\n        target: {\n          name: \"PolicyAccount\",\n          value: \"TEMPORARY\",\n        },\n      });\n      handleChangeRef.current({\n        target: {\n          name: \"Denomination\",\n          value: \"COM-ALL TYPE\",\n        },\n      });\n    }\n  }, [state.form_action, state.form_type, mutateRates, user]);\n\n  const DisplayDetails = ({ datakey, label, value }: any) => {\n    return (\n      <div style={{ width: \"100%\", display: \"flex\" }}>\n        <label style={{ width: \"200px\" }} htmlFor={datakey}>\n          {label}\n        </label>\n        :\n        <input\n          style={{ flex: 1, border: \"none\", padding: \"0 20px\" }}\n          defaultValue={value ?? \"\"}\n          id={datakey}\n          readOnly={true}\n        />\n      </div>\n    );\n  };\n\n  return (\n    <div>\n      <div\n        style={{\n          display: \"flex\",\n          gap: \"10px\",\n          flexDirection: \"column\",\n        }}\n      >\n        <div\n          style={\n            {\n              flex: 1,\n              display: \"flex\",\n              gap: \"10px\",\n            } as CSSProperties\n          }\n        >\n          <fieldset\n            style={\n              {\n                flex: 1,\n                display: \"flex\",\n                flexDirection: \"column\",\n                gap: \"10px\",\n                padding: \"15px\",\n                border: \"1px solid #cbd5e1\",\n                borderRadius: \"5px\",\n              } as CSSProperties\n            }\n          >\n            <legend style={{ color: \"#065f46\" }}>Insurer Information</legend>\n            <div\n              style={{ display: \"flex\", gap: \"10px\", flexDirection: \"column\" }}\n            >\n              <div style={{ display: \"flex\", columnGap: \"10px\" }}>\n                {isLoadingClientIdsModal ? (\n                  <LoadingButton loading={isLoadingClientIdsModal} />\n                ) : (\n                  <FormControl\n                    variant=\"outlined\"\n                    size=\"small\"\n                    disabled={isAddOrEditMode}\n                    sx={{\n                      width: \"200px\",\n                      \".MuiFormLabel-root\": {\n                        fontSize: \"14px\",\n                        background: \"white\",\n                        zIndex: 99,\n                        padding: \"0 3px\",\n                      },\n                      \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n                    }}\n                  >\n                    <InputLabel htmlFor=\"client-id-field\">Client ID</InputLabel>\n                    <OutlinedInput\n                      sx={{\n                        height: \"27px\",\n                        fontSize: \"14px\",\n                      }}\n                      disabled={isAddOrEditMode}\n                      fullWidth\n                      label=\"Client ID\"\n                      name=\"client_id\"\n                      value={state.client_id}\n                      onChange={handleInputChange}\n                      onKeyDown={(e) => {\n                        if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n                          e.preventDefault();\n                          openCliendIDsModal(state.client_id);\n                          return;\n                        }\n                      }}\n                      id=\"client-id-field\"\n                      endAdornment={\n                        <InputAdornment position=\"end\">\n                          <IconButton\n                            // ref={reloadIDButtonRef}\n                            disabled={isAddOrEditMode}\n                            aria-label=\"search-client\"\n                            color=\"secondary\"\n                            edge=\"end\"\n                            onClick={() => {\n                              openCliendIDsModal(state.client_id);\n                            }}\n                          >\n                            <PersonSearchIcon />\n                          </IconButton>\n                        </InputAdornment>\n                      }\n                    />\n                  </FormControl>\n                )}\n                {isLoadingClientDetails ? (\n                  <div>\n                    <CircularProgress size=\"20px\" />\n                  </div>\n                ) : (\n                  <Button\n                    // disabled={state.client_id === \"\"}\n                    variant=\"outlined\"\n                    startIcon={<PersonOutlineIcon />}\n                    sx={{\n                      height: \"27px\",\n                      fontSize: \"11px\",\n                    }}\n                    onClick={() => {\n                      mutateDetails({\n                        userId: state.client_id,\n                      });\n                    }}\n                  >\n                    Client\n                  </Button>\n                )}\n              </div>\n\n              <TextField\n                disabled={isAddOrEditMode}\n                fullWidth\n                variant=\"outlined\"\n                size=\"small\"\n                label=\"Client Name\"\n                name=\"client_name\"\n                value={state.client_name}\n                onChange={handleInputChange}\n                InputProps={{\n                  style: { height: \"27px\", fontSize: \"14px\" },\n                  readOnly: true,\n                }}\n                sx={{\n                  flex: 1,\n                  height: \"27px\",\n                  \".MuiFormLabel-root\": { fontSize: \"14px\" },\n                  \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n                }}\n              />\n            </div>\n            <TextField\n              rows={5}\n              disabled={isAddOrEditMode}\n              fullWidth\n              variant=\"outlined\"\n              size=\"small\"\n              label=\"Client Address\"\n              multiline\n              name=\"client_address\"\n              value={state.client_address}\n              onChange={handleInputChange}\n              InputProps={{\n                style: { height: \"100px\", fontSize: \"14px\", padding: \"10px\" },\n                readOnly: true,\n              }}\n              sx={{\n                flex: 1,\n                height: \"100px\",\n                \".MuiFormLabel-root\": { fontSize: \"14px\" },\n                \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n              }}\n            />\n          </fieldset>\n          <fieldset\n            style={\n              {\n                gap: \"10px\",\n                padding: \"15px\",\n                border: \"1px solid #cbd5e1\",\n                borderRadius: \"5px\",\n                flexWrap: \"wrap\",\n                flex: 1,\n              } as CSSProperties\n            }\n          >\n            <legend style={{ color: \"#065f46\" }}>Agent Information</legend>\n            {isLoadingModalAgentId ? (\n              <LoadingButton loading={isLoadingModalAgentId} />\n            ) : (\n              <FormControl\n                variant=\"outlined\"\n                size=\"small\"\n                disabled={isAddOrEditMode}\n                sx={{\n                  width: \"170px\",\n                  \".MuiFormLabel-root\": {\n                    fontSize: \"14px\",\n                    background: \"white\",\n                    zIndex: 99,\n                    padding: \"0 3px\",\n                  },\n                  \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n                }}\n              >\n                <InputLabel htmlFor=\"AGENT-id-field\">Agent ID</InputLabel>\n                <OutlinedInput\n                  sx={{\n                    height: \"27px\",\n                    fontSize: \"14px\",\n                  }}\n                  disabled={isAddOrEditMode}\n                  label=\"Agent ID\"\n                  name=\"agent_id\"\n                  value={state.agent_id}\n                  onChange={handleInputChange}\n                  onKeyDown={(e) => {\n                    if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n                      e.preventDefault();\n                      return openModalAgentId(state.agent_id);\n                    }\n                  }}\n                  id=\"AGENT-id-field\"\n                  endAdornment={\n                    <InputAdornment position=\"end\">\n                      <IconButton\n                        // ref={reloadIDButtonRef}\n                        disabled={isAddOrEditMode}\n                        aria-label=\"search-client\"\n                        color=\"secondary\"\n                        edge=\"end\"\n                        onClick={() => {\n                          openModalAgentId(state.agent_id);\n                        }}\n                      >\n                        <PersonSearchIcon />\n                      </IconButton>\n                    </InputAdornment>\n                  }\n                />\n              </FormControl>\n            )}\n            <TextField\n              fullWidth\n              disabled={isAddOrEditMode}\n              variant=\"outlined\"\n              size=\"small\"\n              label=\"Agent Name\"\n              name=\"agent_name\"\n              value={state.agent_name}\n              onChange={handleInputChange}\n              InputProps={{\n                style: { height: \"27px\", fontSize: \"14px\" },\n                readOnly: true,\n              }}\n              sx={{\n                flex: 1,\n                height: \"27px\",\n                \".MuiFormLabel-root\": { fontSize: \"14px\" },\n                \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n                marginTop: \"10px\",\n              }}\n            />\n            <TextField\n              disabled={isAddOrEditMode}\n              fullWidth\n              variant=\"outlined\"\n              size=\"small\"\n              label=\"Sale Officer\"\n              multiline\n              name=\"sale_officer\"\n              value={state.sale_officer}\n              onChange={handleInputChange}\n              InputProps={{\n                style: { height: \"27px\", fontSize: \"14px\" },\n                readOnly: true,\n              }}\n              sx={{\n                width: \"100%\",\n                height: \"27px\",\n                \".MuiFormLabel-root\": { fontSize: \"14px\" },\n                \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n                marginTop: \"10px\",\n              }}\n            />\n          </fieldset>\n        </div>\n        <div\n          style={\n            {\n              display: \"flex\",\n              gap: \"10px\",\n              flex: 1,\n            } as CSSProperties\n          }\n        >\n          <fieldset\n            style={\n              {\n                display: \"grid\",\n                gridTemplateColumns: \"repeat(2,1fr)\",\n                gap: \"10px\",\n                gridArea: \"content3\",\n                padding: \"15px\",\n                border: \"1px solid #cbd5e1\",\n                borderRadius: \"5px\",\n                flex: 1,\n              } as CSSProperties\n            }\n          >\n            <legend style={{ color: \"#065f46\" }}>Vehicle Policy</legend>\n            {isLoadingPolicyAccount ? (\n              <LoadingButton loading={isLoadingPolicyAccount} />\n            ) : (\n              <FormControl\n                size=\"small\"\n                disabled={isAddOrEditMode}\n                sx={{\n                  flex: 1,\n                  \".MuiFormLabel-root\": {\n                    fontSize: \"14px\",\n                    background: \"white\",\n                    zIndex: 99,\n                    padding: \"0 3px\",\n                  },\n                  \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n                }}\n              >\n                <InputLabel id=\"PolicyAccount\">Account</InputLabel>\n                <Select\n                  disabled={\n                    state.form_action === \"TEMP\" && user?.department === \"UCSMI\"\n                  }\n                  labelId=\"PolicyAccount\"\n                  value={state.PolicyAccount}\n                  label=\"Account\"\n                  name=\"PolicyAccount\"\n                  onChange={(e) => {\n                    mutateRates({\n                      Account: e.target.value.trim(),\n                      Type: state.form_type.toUpperCase(),\n                    } as any);\n                    handleInputChange({\n                      target: { name: \"Denomination\", value: \"\" },\n                    });\n                    handleInputChange(e);\n                  }}\n                  sx={{\n                    height: \"27px\",\n                    fontSize: \"14px\",\n                  }}\n                >\n                  {dataPolicyAccount.data.policy_account[\n                    `${state.form_type.toUpperCase()}`\n                  ].map((items: any, idx: number) => {\n                    return (\n                      <MenuItem key={idx} value={items.Account}>\n                        {items.Account}\n                      </MenuItem>\n                    );\n                  })}\n                </Select>\n              </FormControl>\n            )}\n            {state.form_type.toLowerCase() === \"tpl\" ? (\n              <React.Fragment>\n                {isLoadingModalTPLId ? (\n                  <LoadingButton loading={isLoadingModalTPLId} />\n                ) : (\n                  <FormControl\n                    variant=\"outlined\"\n                    size=\"small\"\n                    sx={{\n                      flex: 1,\n                      \".MuiFormLabel-root\": {\n                        fontSize: \"14px\",\n                        background: \"white\",\n                        zIndex: 99,\n                        padding: \"0 3px\",\n                      },\n                      \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n                    }}\n                  >\n                    <InputLabel id=\"PolicyNo\">Policy No</InputLabel>\n                    <OutlinedInput\n                      sx={{\n                        height: \"27px\",\n                        fontSize: \"14px\",\n                      }}\n                      id=\"PolicyNo\"\n                      label=\"Policy No\"\n                      name=\"PolicyNo\"\n                      value={state.PolicyNo}\n                      onChange={handleInputChange}\n                      onKeyDown={(e) => {\n                        if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n                          e.preventDefault();\n                          return openModalTPLId(state.PolicyNo);\n                        }\n                      }}\n                      endAdornment={\n                        <InputAdornment position=\"end\">\n                          <IconButton\n                            aria-label=\"search-client\"\n                            color=\"secondary\"\n                            edge=\"end\"\n                            onClick={() => {\n                              openModalTPLId(state.PolicyNo);\n                            }}\n                          >\n                            <PolicyIcon />\n                          </IconButton>\n                        </InputAdornment>\n                      }\n                    />\n                  </FormControl>\n                )}\n              </React.Fragment>\n            ) : state.form_action === \"REG\" ? (\n              <TextField\n                fullWidth\n                variant=\"outlined\"\n                size=\"small\"\n                label=\"Policy No.\"\n                name=\"PolicyNo\"\n                value={state.PolicyNo}\n                onChange={handleInputChange}\n                InputProps={{\n                  style: { height: \"27px\", fontSize: \"14px\" },\n                }}\n                sx={{\n                  width: \"100%\",\n                  height: \"27px\",\n                  \".MuiFormLabel-root\": { fontSize: \"14px\" },\n                  \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n                }}\n              />\n            ) : (\n              <React.Fragment>\n                {isLoadingTempId ? (\n                  <LoadingButton loading={isLoadingTempId} />\n                ) : (\n                  <TextField\n                    fullWidth\n                    variant=\"outlined\"\n                    size=\"small\"\n                    label=\"Policy No.\"\n                    name=\"PolicyNo\"\n                    value={state.PolicyNo}\n                    onChange={handleInputChange}\n                    InputProps={{\n                      readOnly: true,\n                      style: { height: \"27px\", fontSize: \"14px\" },\n                    }}\n                    sx={{\n                      width: \"100%\",\n                      height: \"27px\",\n                      \".MuiFormLabel-root\": { fontSize: \"14px\" },\n                      \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n                    }}\n                  />\n                )}\n              </React.Fragment>\n            )}\n            <TextField\n              disabled={isAddOrEditMode}\n              fullWidth\n              variant=\"outlined\"\n              size=\"small\"\n              label=\"Certificate of Cover No.\"\n              name=\"CCN\"\n              value={state.CCN}\n              onChange={handleInputChange}\n              InputProps={{\n                style: { height: \"27px\", fontSize: \"14px\" },\n              }}\n              sx={{\n                width: \"100%\",\n                height: \"27px\",\n                \".MuiFormLabel-root\": { fontSize: \"14px\" },\n                \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n              }}\n            />\n            <TextField\n              disabled={isAddOrEditMode}\n              fullWidth\n              variant=\"outlined\"\n              size=\"small\"\n              label=\"Official Receipt No.\"\n              name=\"ORN\"\n              value={state.ORN}\n              onChange={handleInputChange}\n              InputProps={{\n                style: { height: \"27px\", fontSize: \"14px\" },\n              }}\n              sx={{\n                width: \"100%\",\n                height: \"27px\",\n                \".MuiFormLabel-root\": { fontSize: \"14px\" },\n                \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n              }}\n            />\n          </fieldset>\n          <fieldset\n            style={\n              {\n                gridArea: \"content4\",\n                padding: \"15px\",\n                border: \"1px solid #cbd5e1\",\n                borderRadius: \"5px\",\n                position: \"relative\",\n                flex: 1,\n              } as CSSProperties\n            }\n          >\n            <legend style={{ color: \"#065f46\" }}>Period of Insurance</legend>\n            <div\n              style={{\n                position: \"absolute\",\n                display: \"flex\",\n                gap: \"10px\",\n                width: \"90%\",\n              }}\n            >\n              <CustomDatePicker\n                fullWidth={false}\n                disabled={isAddOrEditMode}\n                label=\"Date From\"\n                onChange={(e: any) => {\n                  handleDateChange(e, \"DateFrom\");\n                  const newDate = new Date(e);\n                  const newDatePlusOneYear = addYears(newDate, 1);\n                  handleDateChange(newDatePlusOneYear, \"DateTo\");\n                }}\n                value={new Date(state.DateFrom)}\n                onKeyDown={(e: any) => {\n                  if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n                    const timeout = setTimeout(() => {\n                      periodInsuranceDateRef.current\n                        ?.querySelector(\"button\")\n                        ?.click();\n                      clearTimeout(timeout);\n                    }, 150);\n                  }\n                }}\n                datePickerRef={periodInsuranceDateRef}\n                textField={{\n                  InputLabelProps: {\n                    style: {\n                      fontSize: \"14px\",\n                    },\n                  },\n                  InputProps: {\n                    style: { height: \"27px\", fontSize: \"14px\" },\n                  },\n                }}\n              />\n              <CustomDatePicker\n                fullWidth={false}\n                disabled={isAddOrEditMode}\n                label=\"Date To\"\n                onChange={(e: any) => {\n                  handleDateChange(e, \"DateTo\");\n                }}\n                value={new Date(state.DateTo)}\n                onKeyDown={(e: any) => {\n                  if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n                    const timeout = setTimeout(() => {\n                      dateToDateRef.current?.querySelector(\"button\")?.click();\n                      clearTimeout(timeout);\n                    }, 150);\n                  }\n                }}\n                datePickerRef={dateToDateRef}\n                textField={{\n                  InputLabelProps: {\n                    style: {\n                      fontSize: \"14px\",\n                    },\n                  },\n                  InputProps: {\n                    style: { height: \"27px\", fontSize: \"14px\" },\n                  },\n                }}\n              />\n              <CustomDatePicker\n                fullWidth={false}\n                label=\"Date Issued\"\n                name=\"DateIssued\"\n                onChange={(e: any) => {\n                  handleDateChange(e, \"DateIssued\");\n                }}\n                value={new Date(state.DateIssued)}\n                disabled={isAddOrEditMode}\n                onKeyDown={(e: any) => {\n                  if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n                    const timeout = setTimeout(() => {\n                      dateIssuedDateRef.current\n                        ?.querySelector(\"button\")\n                        ?.click();\n                      clearTimeout(timeout);\n                    }, 150);\n                  }\n                }}\n                datePickerRef={dateIssuedDateRef}\n                textField={{\n                  InputLabelProps: {\n                    style: {\n                      fontSize: \"14px\",\n                    },\n                  },\n                  InputProps: {\n                    style: { height: \"27px\", fontSize: \"14px\" },\n                  },\n                }}\n              />\n            </div>\n          </fieldset>\n        </div>\n        <div style={{ width: \"50%\" }}>\n          <fieldset\n            style={{\n              display: \"flex\",\n              gap: \"20px\",\n              padding: \"15px\",\n              border: \"1px solid #cbd5e1\",\n              borderRadius: \"5px\",\n            }}\n          >\n            <legend style={{ color: \"#065f46\" }}>Insured Unit</legend>\n            <div\n              style={\n                {\n                  flex: 1,\n                  display: \"flex\",\n                  gap: \"10px\",\n                  flexDirection: \"column\",\n                } as CSSProperties\n              }\n            >\n              <TextField\n                disabled={isAddOrEditMode}\n                fullWidth\n                variant=\"outlined\"\n                size=\"small\"\n                label=\"Model\"\n                name=\"Model\"\n                value={state.Model}\n                onChange={handleInputChange}\n                InputProps={{\n                  style: { height: \"27px\", fontSize: \"14px\" },\n                }}\n                sx={{\n                  flex: 1,\n                  height: \"27px\",\n                  \".MuiFormLabel-root\": { fontSize: \"14px\" },\n                  \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n                }}\n              />\n              <TextField\n                disabled={isAddOrEditMode}\n                fullWidth\n                variant=\"outlined\"\n                size=\"small\"\n                label=\"Make\"\n                name=\"Make\"\n                value={state.Make}\n                onChange={handleInputChange}\n                InputProps={{\n                  style: { height: \"27px\", fontSize: \"14px\" },\n                }}\n                sx={{\n                  flex: 1,\n                  height: \"27px\",\n                  \".MuiFormLabel-root\": { fontSize: \"14px\" },\n                  \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n                }}\n              />\n              <TextField\n                disabled={isAddOrEditMode}\n                fullWidth\n                variant=\"outlined\"\n                size=\"small\"\n                label=\"Type of Body\"\n                name=\"TB\"\n                value={state.TB}\n                onChange={handleInputChange}\n                InputProps={{\n                  style: { height: \"27px\", fontSize: \"14px\" },\n                }}\n                sx={{\n                  flex: 1,\n                  height: \"27px\",\n                  \".MuiFormLabel-root\": { fontSize: \"14px\" },\n                  \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n                }}\n              />\n              <TextField\n                disabled={isAddOrEditMode}\n                fullWidth\n                variant=\"outlined\"\n                size=\"small\"\n                label=\"Color\"\n                name=\"Color\"\n                value={state.Color}\n                onChange={handleInputChange}\n                InputProps={{\n                  style: { height: \"27px\", fontSize: \"14px\" },\n                }}\n                sx={{\n                  flex: 1,\n                  height: \"27px\",\n                  \".MuiFormLabel-root\": { fontSize: \"14px\" },\n                  \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n                }}\n              />\n              <TextField\n                disabled={isAddOrEditMode}\n                fullWidth\n                variant=\"outlined\"\n                size=\"small\"\n                label=\"BLT File No\"\n                name=\"BLTFileNo\"\n                value={state.BLTFileNo}\n                onChange={handleInputChange}\n                InputProps={{\n                  style: { height: \"27px\", fontSize: \"14px\" },\n                }}\n                sx={{\n                  flex: 1,\n                  height: \"27px\",\n                  \".MuiFormLabel-root\": { fontSize: \"14px\" },\n                  \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n                }}\n              />\n            </div>\n            <div\n              style={\n                {\n                  flex: 1,\n                  display: \"flex\",\n                  gap: \"10px\",\n                  flexDirection: \"column\",\n                } as CSSProperties\n              }\n            >\n              <TextField\n                disabled={isAddOrEditMode}\n                fullWidth\n                variant=\"outlined\"\n                size=\"small\"\n                label=\"Plate No\"\n                name=\"PlateNo\"\n                value={state.PlateNo}\n                onChange={handleInputChange}\n                InputProps={{\n                  style: { height: \"27px\", fontSize: \"14px\" },\n                }}\n                sx={{\n                  flex: 1,\n                  height: \"27px\",\n                  \".MuiFormLabel-root\": { fontSize: \"14px\" },\n                  \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n                }}\n              />\n              <TextField\n                disabled={isAddOrEditMode}\n                fullWidth\n                variant=\"outlined\"\n                size=\"small\"\n                label=\"Chassis No\"\n                name=\"ChassisNo\"\n                value={state.ChassisNo}\n                onChange={handleInputChange}\n                InputProps={{\n                  style: { height: \"27px\", fontSize: \"14px\" },\n                }}\n                sx={{\n                  flex: 1,\n                  height: \"27px\",\n                  \".MuiFormLabel-root\": { fontSize: \"14px\" },\n                  \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n                }}\n              />\n              <TextField\n                disabled={isAddOrEditMode}\n                fullWidth\n                variant=\"outlined\"\n                size=\"small\"\n                label=\"Motor No.\"\n                name=\"MotorNo\"\n                value={state.MotorNo}\n                onChange={handleInputChange}\n                InputProps={{\n                  style: { height: \"27px\", fontSize: \"14px\" },\n                }}\n                sx={{\n                  flex: 1,\n                  height: \"27px\",\n                  \".MuiFormLabel-root\": { fontSize: \"14px\" },\n                  \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n                }}\n              />\n              <TextField\n                disabled={isAddOrEditMode}\n                fullWidth\n                variant=\"outlined\"\n                size=\"small\"\n                label=\"Authorized Capacity\"\n                name=\"AuthorizedCapacity\"\n                value={state.AuthorizedCapacity}\n                onChange={handleInputChange}\n                InputProps={{\n                  style: { height: \"27px\", fontSize: \"14px\" },\n                }}\n                sx={{\n                  flex: 1,\n                  height: \"27px\",\n                  \".MuiFormLabel-root\": { fontSize: \"14px\" },\n                  \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n                }}\n              />\n              <TextField\n                disabled={isAddOrEditMode}\n                fullWidth\n                variant=\"outlined\"\n                size=\"small\"\n                label=\"Unladen Weight\"\n                name=\"UnladenWeigth\"\n                value={state.UnladenWeigth}\n                onChange={handleInputChange}\n                InputProps={{\n                  style: { height: \"27px\", fontSize: \"14px\" },\n                }}\n                sx={{\n                  flex: 1,\n                  height: \"27px\",\n                  \".MuiFormLabel-root\": { fontSize: \"14px\" },\n                  \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n                }}\n              />\n            </div>\n          </fieldset>\n        </div>\n      </div>\n      <div\n        style={{\n          position: \"fixed\",\n          top: 0,\n          bottom: 0,\n          left: 0,\n          right: 0,\n          background: \"rgba(158, 155, 157, 0.31)\",\n          zIndex: \"999\",\n          display: showClientDetails ? \"flex\" : \"none\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n          boxShadow: \"-1px 15px 74px 38px rgba(0,0,0,0.37)\",\n        }}\n      >\n        <div\n          style={{\n            background: \"white\",\n            width: \"70%\",\n            height: \"700px\",\n            position: \"relative\",\n            padding: \"50px 20px\",\n          }}\n        >\n          <IconButton\n            sx={{\n              position: \"absolute\",\n              top: \"10px\",\n              right: \"10px\",\n            }}\n            onClick={() => setShowCLientDetails(false)}\n          >\n            <CloseIcon />\n          </IconButton>\n          <div style={{ width: \"100%\", height: \"100%\" }}>\n            <hr style={{ margin: \"5px 0\" }} />\n            <p style={{ margin: \"0\", padding: \"0\", fontWeight: \"bold\" }}>\n              Client Details\n            </p>\n            <hr style={{ margin: \"5px 0\" }} />\n            <DisplayDetails\n              datakey={\"IDNo\"}\n              label={\"ID NO.\"}\n              value={clientDetailsState.IDNo}\n            />\n            <DisplayDetails\n              datakey={\"ShortName\"}\n              label={\"Short Name\"}\n              value={clientDetailsState.ShortName}\n            />\n            <DisplayDetails\n              datakey={\"subShortName\"}\n              label={\"Sub Account\"}\n              value={clientDetailsState.subShortName}\n            />\n            <DisplayDetails\n              datakey={\"mobile\"}\n              label={\"Mobile\"}\n              value={clientDetailsState.mobile}\n            />\n            <DisplayDetails\n              datakey={\"email\"}\n              label={\"Email\"}\n              value={clientDetailsState.email}\n            />\n            <DisplayDetails\n              datakey={\"address\"}\n              label={\"Address\"}\n              value={clientDetailsState.address}\n            />\n            <DisplayDetails\n              datakey={\"options\"}\n              label={\"Option\"}\n              value={clientDetailsState.options}\n            />\n          </div>\n        </div>\n      </div>\n      {ModalClientIDs}\n      {ModalAgentId}\n      {ModalTPLId}\n    </div>\n  );\n}\nfunction setNewStateValue(dispatch: any, obj: any) {\n  Object.entries(obj).forEach(([field, value]) => {\n    dispatch({ type: \"UPDATE_FIELD\", field, value });\n  });\n}\n","import React, { useContext, useState } from \"react\";\nimport { VehicleContext } from \"../VehiclePolicy\";\nimport {\n  FormGroup,\n  FormControlLabel,\n  Checkbox,\n  FormControl,\n  Select,\n  MenuItem,\n  Typography,\n  TextField,\n  Divider,\n  Button,\n  Box,\n} from \"@mui/material\";\nimport { NumericFormatCustom } from \"../../../../../../../../components/NumberFormat\";\nimport { useQuery } from \"react-query\";\nimport { LoadingButton } from \"@mui/lab\";\n\nexport default function PolicyPremium() {\n  const {\n    state,\n    handleInputChange,\n    handleDateChange,\n    tplCompuation,\n    comComputation,\n    isAddOrEditMode,\n    dispatch,\n    myAxios,\n    user,\n  } = useContext(VehicleContext);\n  const [text, setText] = useState(\n    JSON.parse(state.MortgageeForm)\n      ? `LOSS and/or DAMAGE, if any under this policy shall be payable to ${state.Mortgagee} as their interest may appear subject to all terms and conditions, clauses and warranties of this policy. SUBJECT TO THE ATTACHED STANDARD ACCESSORIES ENDORSEMENT CLAUSE; FULL PREMIUM PAYMENT IN CASE OF LOSS CLAUSE; MEMORANDUM ON DOCUMENTARY STAMPS TAX; ANTI CARNAPING; PREVENTION TIPS AND AUTO PA RIDER; DRUNKEN AND DRIVE CLAUSE THIS POLICY OR ANY RENEWAL THEREOF SHALL NOT BE CANCELLED WITHOUT PRIOR WRITTEN NOTIFICATION AND CONFORMIY TO ${state.Mortgagee}`\n      : \"SUBJECT TO THE ATTACHED STANDARD ACCESSORIES ENDORSEMENT CLAUSE; FULL PREMIUM PAYMENT IN CASE OF LOSS CLAUSE; MEMORANDUM ON DOCUMENTARY STAMPS TAX; ANTI CARNAPING PREVENTION TIPS AND AUTO PA RIDER; DRUNKEN AND DRIVER CLAUSE\"\n  );\n\n  const { data: dataMortgagee, isLoading: isLoadingMortgagee } = useQuery({\n    queryKey: \"get-mortgagee\",\n    queryFn: async () =>\n      await myAxios.get(`/task/production/get-mortgagee`, {\n        headers: {\n          Authorization: `Bearer ${user?.accessToken}`,\n        },\n      }),\n  });\n\n  function onKeyDownComputation(e: any) {\n    if (e.code === \"NumpadEnter\" || e.code === \"Enter\") {\n      if (state.form_type.toLowerCase() === \"com\") {\n        return comComputation();\n      }\n      tplCompuation();\n    }\n  }\n\n  return (\n    <div>\n      <fieldset\n        style={{\n          display: \"flex\",\n          columnGap: \"10px\",\n          padding: \"15px\",\n          border: \"1px solid #cbd5e1\",\n          borderRadius: \"5px\",\n        }}\n      >\n        <legend>Mortgagee</legend>\n        <Box\n          sx={{\n            display: \"flex\",\n            flexDirection: \"column\",\n            rowGap: \"10px\",\n            flex: 1,\n          }}\n        >\n          <div>\n            <FormGroup>\n              <FormControlLabel\n                sx={{\n                  \".MuiTypography-root\": {\n                    fontSize: \"13px !important\",\n                  },\n                }}\n                disabled={isAddOrEditMode}\n                control={\n                  <Checkbox\n                    size=\"small\"\n                    name=\"MortgageeForm\"\n                    value={JSON.parse(state.MortgageeForm)}\n                    checked={JSON.parse(state.MortgageeForm)}\n                    onChange={(e) => {\n                      if (e.target.checked) {\n                        setText(\n                          `LOSS and/or DAMAGE, if any under this policy shall be payable to ${state.Mortgagee} as their interest may appear subject to all terms and conditions, clauses and warranties of this policy. SUBJECT TO THE ATTACHED STANDARD ACCESSORIES ENDORSEMENT CLAUSE; FULL PREMIUM PAYMENT IN CASE OF LOSS CLAUSE; MEMORANDUM ON DOCUMENTARY STAMPS TAX; ANTI CARNAPING; PREVENTION TIPS AND AUTO PA RIDER; DRUNKEN AND DRIVE CLAUSE THIS POLICY OR ANY RENEWAL THEREOF SHALL NOT BE CANCELLED WITHOUT PRIOR WRITTEN NOTIFICATION AND CONFORMIY TO ${state.Mortgagee}`\n                        );\n                      } else {\n                        setText(\n                          \"SUBJECT TO THE ATTACHED STANDARD ACCESSORIES ENDORSEMENT CLAUSE; FULL PREMIUM PAYMENT IN CASE OF LOSS CLAUSE; MEMORANDUM ON DOCUMENTARY STAMPS TAX; ANTI CARNAPING PREVENTION TIPS AND AUTO PA RIDER; DRUNKEN AND DRIVER CLAUSE\"\n                        );\n                      }\n\n                      handleDateChange(`${e.target.checked}`, \"MortgageeForm\");\n                    }}\n                  />\n                }\n                label=\"MortgageeForm\"\n              />\n            </FormGroup>\n            <h5 style={{ margin: \"0\", padding: \"0\" }}>Form and Endorcement</h5>\n          </div>\n\n          {isLoadingMortgagee ? (\n            <LoadingButton loading={isLoadingMortgagee} />\n          ) : (\n            <FormControl\n              size=\"small\"\n              fullWidth\n              required\n              disabled={isAddOrEditMode}\n            >\n              <Select\n                labelId=\"Mortgagee\"\n                value={state.Mortgagee}\n                name=\"Mortgagee\"\n                onChange={handleInputChange}\n              >\n                {[\n                  { type: \"\" },\n                  ...dataMortgagee.data.mortgagee[\n                    `${state.form_type.toUpperCase()}`\n                  ],\n                ].map((items: any, idx: number) => {\n                  return (\n                    <MenuItem key={idx} value={items.Mortgagee}>\n                      {items.Mortgagee}\n                    </MenuItem>\n                  );\n                })}\n              </Select>\n            </FormControl>\n          )}\n          <div\n            style={{\n              border: \"1px solid #cbd5e1\",\n              height: \"100%\",\n              padding: \"5px\",\n              overflowY: \"auto\",\n              maxHeight: \"230px\",\n            }}\n          >\n            <Typography variant=\"caption\">{text}</Typography>\n          </div>\n          <TextField\n            \n            disabled={isAddOrEditMode}\n            label=\"Remarks\"\n            name=\"remarks\"\n            value={state.remarks}\n            onChange={handleInputChange}\n            multiline\n            rows={3}\n            InputProps={{\n              style: { height: \"auto\", fontSize: \"14px\" },\n            }}\n            sx={{\n              flex: 1,\n              height: \"auto\",\n              \".MuiFormLabel-root\": { fontSize: \"14px\" },\n              \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n            }}\n          />\n        </Box>\n        <fieldset\n          style={{\n            display: \"flex\",\n            flexDirection: \"column\",\n            rowGap: \"10px\",\n            padding: \"15px\",\n            border: \"1px solid #cbd5e1\",\n            borderRadius: \"5px\",\n          }}\n        >\n          <legend>Premiums</legend>\n          <div\n            style={{\n              display: \"flex\",\n              justifyContent: \"flex-end\",\n              padding: \"5px\",\n            }}\n          >\n            <Button\n              disabled={isAddOrEditMode}\n              size=\"small\"\n              variant=\"contained\"\n              color=\"primary\"\n              onClick={() => {\n                if (state.form_type.toLowerCase() === \"com\") {\n                  return comComputation();\n                }\n                tplCompuation();\n              }}\n            >\n              Compute\n            </Button>\n          </div>\n          {state.form_type.toLowerCase() === \"tpl\" && (\n            <TextField\n              disabled={isAddOrEditMode}\n              required\n              fullWidth\n              variant=\"outlined\"\n              size=\"small\"\n              label=\"Section I/II\"\n              name=\"SectionI_II\"\n              value={state.SectionI_II}\n              onChange={(e) => {\n                handleInputChange(e);\n              }}\n              onKeyDown={onKeyDownComputation}\n              placeholder=\"0.00\"\n              InputProps={{\n                inputComponent: NumericFormatCustom as any,\n                style: { height: \"27px\", fontSize: \"14px\" },\n              }}\n              sx={{\n                flex: 1,\n                height: \"27px\",\n                \".MuiFormLabel-root\": { fontSize: \"14px\" },\n                \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n              }}\n              onBlur={() => {\n                dispatch({\n                  type: \"UPDATE_FIELD\",\n                  field: \"SectionI_II\",\n                  value: parseFloat(state.SectionI_II).toFixed(2),\n                });\n              }}\n            />\n          )}\n          {state.form_type.toLowerCase() === \"com\" && (\n            <React.Fragment>\n              <div\n                style={{\n                  display: \"grid\",\n                  gridTemplateColumns: \"repeat(2,1fr)\",\n                  gap: \"10px\",\n                }}\n              >\n                <TextField\n                  disabled={isAddOrEditMode}\n                  required\n                  fullWidth\n                  variant=\"outlined\"\n                  size=\"small\"\n                  label=\"Section III(%)\"\n                  name=\"SectionIII\"\n                  value={state.SectionIII}\n                  onChange={handleInputChange}\n                  onKeyDown={onKeyDownComputation}\n                  placeholder=\"0.00\"\n                  InputProps={{\n                    inputComponent: NumericFormatCustom as any,\n                    style: { height: \"27px\", fontSize: \"14px\" },\n                  }}\n                  sx={{\n                    flex: 1,\n                    height: \"27px\",\n                    \".MuiFormLabel-root\": { fontSize: \"14px\" },\n                    \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n                  }}\n                  onBlur={() => {\n                    dispatch({\n                      type: \"UPDATE_FIELD\",\n                      field: \"SectionIII\",\n                      value: parseFloat(state.SectionIII).toFixed(2),\n                    });\n                  }}\n                />\n                <TextField\n                  disabled={isAddOrEditMode}\n                  required\n                  fullWidth\n                  variant=\"outlined\"\n                  size=\"small\"\n                  label=\"Own Damage\"\n                  name=\"OwnDamage\"\n                  value={state.OwnDamage}\n                  onChange={handleInputChange}\n                  onKeyDown={onKeyDownComputation}\n                  placeholder=\"0.00\"\n                  InputProps={{\n                    inputComponent: NumericFormatCustom as any,\n                    style: { height: \"27px\", fontSize: \"14px\" },\n                  }}\n                  sx={{\n                    flex: 1,\n                    height: \"27px\",\n                    \".MuiFormLabel-root\": { fontSize: \"14px\" },\n                    \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n                  }}\n                  onBlur={() => {\n                    dispatch({\n                      type: \"UPDATE_FIELD\",\n                      field: \"OwnDamage\",\n                      value: parseFloat(state.OwnDamage).toFixed(2),\n                    });\n                  }}\n                />\n                <TextField\n                  disabled={isAddOrEditMode}\n                  required\n                  fullWidth\n                  variant=\"outlined\"\n                  size=\"small\"\n                  label=\"Theft\"\n                  name=\"Theft\"\n                  value={state.Theft}\n                  onChange={handleInputChange}\n                  onKeyDown={onKeyDownComputation}\n                  placeholder=\"0.00\"\n                  InputProps={{\n                    inputComponent: NumericFormatCustom as any,\n                    style: { height: \"27px\", fontSize: \"14px\" },\n                  }}\n                  sx={{\n                    flex: 1,\n                    height: \"27px\",\n                    \".MuiFormLabel-root\": { fontSize: \"14px\" },\n                    \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n                  }}\n                  onBlur={() => {\n                    dispatch({\n                      type: \"UPDATE_FIELD\",\n                      field: \"Theft\",\n                      value: parseFloat(state.Theft).toFixed(2),\n                    });\n                  }}\n                />\n                <TextField\n                  disabled={isAddOrEditMode}\n                  required\n                  fullWidth\n                  variant=\"outlined\"\n                  size=\"small\"\n                  label=\"Section IV-A\"\n                  name=\"SectionIVA\"\n                  value={state.SectionIVA}\n                  onChange={handleInputChange}\n                  onKeyDown={onKeyDownComputation}\n                  placeholder=\"0.00\"\n                  InputProps={{\n                    inputComponent: NumericFormatCustom as any,\n                    style: { height: \"27px\", fontSize: \"14px\" },\n                  }}\n                  sx={{\n                    flex: 1,\n                    height: \"27px\",\n                    \".MuiFormLabel-root\": { fontSize: \"14px\" },\n                    \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n                  }}\n                  onBlur={() => {\n                    dispatch({\n                      type: \"UPDATE_FIELD\",\n                      field: \"SectionIVA\",\n                      value: parseFloat(state.SectionIVA).toFixed(2),\n                    });\n                  }}\n                />\n                <TextField\n                  disabled={isAddOrEditMode}\n                  required\n                  fullWidth\n                  variant=\"outlined\"\n                  size=\"small\"\n                  label=\"Section IV-B\"\n                  name=\"SectionIVB\"\n                  value={state.SectionIVB}\n                  onChange={handleInputChange}\n                  onKeyDown={onKeyDownComputation}\n                  placeholder=\"0.00\"\n                  InputProps={{\n                    inputComponent: NumericFormatCustom as any,\n                    style: { height: \"27px\", fontSize: \"14px\" },\n                  }}\n                  sx={{\n                    flex: 1,\n                    height: \"27px\",\n                    \".MuiFormLabel-root\": { fontSize: \"14px\" },\n                    \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n                  }}\n                  onBlur={() => {\n                    dispatch({\n                      type: \"UPDATE_FIELD\",\n                      field: \"SectionIVB\",\n                      value: parseFloat(state.SectionIVB).toFixed(2),\n                    });\n                  }}\n                />\n                <TextField\n                  disabled={isAddOrEditMode}\n                  label=\"Other\"\n                  required\n                  variant=\"outlined\"\n                  size=\"small\"\n                  name=\"PremiumOther\"\n                  value={state.PremiumOther}\n                  onChange={handleInputChange}\n                  onKeyDown={onKeyDownComputation}\n                  placeholder=\"0.00\"\n                  InputProps={{\n                    inputComponent: NumericFormatCustom as any,\n                    style: { height: \"27px\", fontSize: \"14px\" },\n                  }}\n                  sx={{\n                    flex: 1,\n                    height: \"27px\",\n                    \".MuiFormLabel-root\": { fontSize: \"14px\" },\n                    \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n                  }}\n                  onBlur={() => {\n                    dispatch({\n                      type: \"UPDATE_FIELD\",\n                      field: \"PremiumOther\",\n                      value: parseFloat(state.PremiumOther).toFixed(2),\n                    });\n                  }}\n                />\n              </div>\n              <div\n                style={{ display: \"flex\", gap: \"5px\", position: \"relative\" }}\n              >\n                <TextField\n                  disabled={isAddOrEditMode}\n                  required\n                  variant=\"outlined\"\n                  size=\"small\"\n                  label=\"AOG Percent\"\n                  name=\"AOGPercent\"\n                  value={state.AOGPercent}\n                  onChange={handleInputChange}\n                  onKeyDown={onKeyDownComputation}\n                  placeholder=\"0.00\"\n                  InputProps={{\n                    inputComponent: NumericFormatCustom as any,\n                    style: { height: \"27px\", fontSize: \"14px\" },\n                  }}\n                  sx={{\n                    width: \"80px\",\n                    height: \"27px\",\n                    \".MuiFormLabel-root\": { fontSize: \"14px\" },\n                    \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n                  }}\n                  onBlur={() => {\n                    dispatch({\n                      type: \"UPDATE_FIELD\",\n                      field: \"AOGPercent\",\n                      value: parseFloat(state.AOGPercent).toFixed(2),\n                    });\n                  }}\n                />\n                <TextField\n                  disabled={isAddOrEditMode}\n                  required\n                  variant=\"outlined\"\n                  size=\"small\"\n                  label=\"AOG\"\n                  name=\"AOG\"\n                  value={state.AOG}\n                  onChange={handleInputChange}\n                  onKeyDown={onKeyDownComputation}\n                  placeholder=\"0.00\"\n                  InputProps={{\n                    inputComponent: NumericFormatCustom as any,\n                    style: { height: \"27px\", fontSize: \"14px\" },\n                  }}\n                  sx={{\n                    flex: 1,\n                    height: \"27px\",\n                    \".MuiFormLabel-root\": { fontSize: \"14px\" },\n                    \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n                  }}\n                  onBlur={() => {\n                    dispatch({\n                      type: \"UPDATE_FIELD\",\n                      field: \"AOG\",\n                      value: parseFloat(state.AOG).toFixed(2),\n                    });\n                  }}\n                />\n              </div>\n            </React.Fragment>\n          )}\n          <Divider color=\"secondary\" />\n          <div\n            style={{\n              display: \"grid\",\n              gridTemplateColumns: \"repeat(2,1fr)\",\n              gap: \"10px\",\n            }}\n          >\n            <TextField\n              disabled={isAddOrEditMode}\n              required\n              variant=\"outlined\"\n              size=\"small\"\n              label=\"Total Premium\"\n              name=\"TotalPremium\"\n              value={state.TotalPremium}\n              InputProps={{\n                inputComponent: NumericFormatCustom as any,\n                style: { height: \"27px\", fontSize: \"14px\" },\n              }}\n              sx={{\n                flex: 1,\n                height: \"27px\",\n                \".MuiFormLabel-root\": { fontSize: \"14px\" },\n                \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n              }}\n              onChange={(e) => {\n                handleInputChange(e);\n              }}\n              onKeyDown={onKeyDownComputation}\n              placeholder=\"0.00\"\n              onBlur={() => {\n                dispatch({\n                  type: \"UPDATE_FIELD\",\n                  field: \"TotalPremium\",\n                  value: parseFloat(state.TotalPremium).toFixed(2),\n                });\n              }}\n            />\n            <TextField\n              disabled={isAddOrEditMode}\n              required\n              variant=\"outlined\"\n              size=\"small\"\n              label=\"Vat\"\n              name=\"Vat\"\n              value={state.Vat}\n              onChange={(e) => {\n                handleInputChange(e);\n              }}\n              onKeyDown={onKeyDownComputation}\n              placeholder=\"0.00\"\n              InputProps={{\n                inputComponent: NumericFormatCustom as any,\n                style: { height: \"27px\", fontSize: \"14px\" },\n              }}\n              sx={{\n                flex: 1,\n                height: \"27px\",\n                \".MuiFormLabel-root\": { fontSize: \"14px\" },\n                \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n              }}\n              onBlur={() => {\n                dispatch({\n                  type: \"UPDATE_FIELD\",\n                  field: \"Vat\",\n                  value: parseFloat(state.Vat).toFixed(2),\n                });\n              }}\n            />\n\n            <TextField\n              disabled={isAddOrEditMode}\n              required\n              variant=\"outlined\"\n              size=\"small\"\n              label=\"Doc Stamp\"\n              name=\"DocStamp\"\n              value={state.DocStamp}\n              onChange={(e) => {\n                handleInputChange(e);\n              }}\n              onKeyDown={onKeyDownComputation}\n              placeholder=\"0.00\"\n              InputProps={{\n                inputComponent: NumericFormatCustom as any,\n                style: { height: \"27px\", fontSize: \"14px\" },\n              }}\n              sx={{\n                flex: 1,\n                height: \"27px\",\n                \".MuiFormLabel-root\": { fontSize: \"14px\" },\n                \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n              }}\n              onBlur={() => {\n                dispatch({\n                  type: \"UPDATE_FIELD\",\n                  field: \"DocStamp\",\n                  value: parseFloat(state.DocStamp).toFixed(2),\n                });\n              }}\n            />\n            {state.form_type.toLowerCase() === \"com\" ? (\n              <div\n                style={{\n                  display: \"flex\",\n                  gap: \"5px\",\n                  position: \"relative\",\n                  width: \"100%\",\n                }}\n              >\n                <TextField\n                  disabled={isAddOrEditMode}\n                  required\n                  variant=\"outlined\"\n                  size=\"small\"\n                  name=\"LocalGovTaxPercent\"\n                  value={state.LocalGovTaxPercent}\n                  onChange={(e) => {\n                    handleInputChange(e);\n                  }}\n                  onKeyDown={onKeyDownComputation}\n                  placeholder=\"0.00\"\n                  InputProps={{\n                    inputComponent: NumericFormatCustom as any,\n                    style: { height: \"27px\", fontSize: \"14px\" },\n                  }}\n                  sx={{\n                    width: \"80px\",\n                    height: \"27px\",\n                    \".MuiFormLabel-root\": { fontSize: \"14px\" },\n                    \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n                  }}\n                  onBlur={() => {\n                    dispatch({\n                      type: \"UPDATE_FIELD\",\n                      field: \"LocalGovTaxPercent\",\n                      value: parseFloat(state.LocalGovTaxPercent).toFixed(2),\n                    });\n                  }}\n                />\n                <TextField\n                  disabled={isAddOrEditMode}\n                  required\n                  variant=\"outlined\"\n                  size=\"small\"\n                  label=\"Local Gov Tax\"\n                  name=\"LocalGovTax\"\n                  value={state.LocalGovTax}\n                  onChange={(e) => {\n                    handleInputChange(e);\n                  }}\n                  onKeyDown={onKeyDownComputation}\n                  placeholder=\"0.00\"\n                  InputProps={{\n                    inputComponent: NumericFormatCustom as any,\n                    style: { height: \"27px\", fontSize: \"14px\" },\n                  }}\n                  sx={{\n                    width: \"100%\",\n                    height: \"27px\",\n                    \".MuiFormLabel-root\": { fontSize: \"14px\" },\n                    \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n                  }}\n                  onBlur={() => {\n                    dispatch({\n                      type: \"UPDATE_FIELD\",\n                      field: \"LocalGovTax\",\n                      value: parseFloat(state.LocalGovTax).toFixed(2),\n                    });\n                  }}\n                />\n              </div>\n            ) : (\n              <TextField\n                disabled={isAddOrEditMode}\n                required\n                variant=\"outlined\"\n                size=\"small\"\n                label=\"Local Gov Tax\"\n                name=\"LocalGovTax\"\n                value={state.LocalGovTax}\n                onChange={(e) => {\n                  handleInputChange(e);\n                }}\n                onKeyDown={onKeyDownComputation}\n                placeholder=\"0.00\"\n                InputProps={{\n                  inputComponent: NumericFormatCustom as any,\n                  style: { height: \"27px\", fontSize: \"14px\" },\n                }}\n                sx={{\n                  width: \"80px\",\n                  height: \"27px\",\n                  \".MuiFormLabel-root\": { fontSize: \"14px\" },\n                  \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n                }}\n                onBlur={() => {\n                  dispatch({\n                    type: \"UPDATE_FIELD\",\n                    field: \"LocalGovTax\",\n                    value: parseFloat(state.LocalGovTax).toFixed(2),\n                  });\n                }}\n              />\n            )}\n          </div>\n          <TextField\n            disabled={isAddOrEditMode}\n            required\n            variant=\"outlined\"\n            size=\"small\"\n            label=\"StradCom\"\n            name=\"StradCom\"\n            value={state.StradCom}\n            onChange={(e) => {\n              handleInputChange(e);\n            }}\n            onKeyDown={onKeyDownComputation}\n            placeholder=\"0.00\"\n            InputProps={{\n              inputComponent: NumericFormatCustom as any,\n              style: { height: \"27px\", fontSize: \"14px\" },\n            }}\n            sx={{\n              width: \"50%\",\n              height: \"27px\",\n              \".MuiFormLabel-root\": { fontSize: \"14px\" },\n              \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n            }}\n            onBlur={() => {\n              dispatch({\n                type: \"UPDATE_FIELD\",\n                field: \"StradCom\",\n                value: parseFloat(state.StradCom).toFixed(2),\n              });\n            }}\n          />\n          <Divider color=\"secondary\" />\n          <TextField\n            disabled={isAddOrEditMode}\n            required\n            variant=\"outlined\"\n            size=\"small\"\n            label=\"Total Due\"\n            name=\"TotalDue\"\n            value={state.TotalDue}\n            onChange={handleInputChange}\n            onKeyDown={onKeyDownComputation}\n            placeholder=\"0.00\"\n            InputProps={{\n              inputComponent: NumericFormatCustom as any,\n              style: { height: \"27px\", fontSize: \"14px\" },\n            }}\n            sx={{\n              width: \"50%\",\n              height: \"27px\",\n              \".MuiFormLabel-root\": { fontSize: \"14px\" },\n              \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n            }}\n            onBlur={() => {\n              dispatch({\n                type: \"UPDATE_FIELD\",\n                field: \"TotalDue\",\n                value: parseFloat(state.TotalDue).toFixed(2),\n              });\n            }}\n          />\n        </fieldset>\n      </fieldset>\n    </div>\n  );\n}\n","import React, { useContext } from \"react\";\nimport { VehicleContext } from \"../VehiclePolicy\";\nimport {\n  TextField,\n  FormControl,\n  InputLabel,\n  Select,\n  MenuItem,\n  Box,\n  Typography,\n  Autocomplete,\n} from \"@mui/material\";\nimport { NumericFormatCustom } from \"../../../../../../../../components/NumberFormat\";\nimport { LoadingButton } from \"@mui/lab\";\nconst rateOption_ = [\n  { Account: \"0.00\" },\n  { Account: \"50,000.00\" },\n  { Account: \"75,000.00\" },\n  { Account: \"100,000.00\" },\n  { Account: \"150,000.00\" },\n  { Account: \"200,000.00\" },\n  { Account: \"250,000.00\" },\n  { Account: \"300,000.00\" },\n];\n\n// const compreTypeOption_ = [\n//   { Account: \"\" },\n//   { Account: \"PRIVATE VEHICLE\" },\n//   { Account: \"LIGHT AND MEDIUM VEHICLE\" },\n//   { Account: \"HEAVY VEHICLE\" },\n//   { Account: \"MC/TC-MOTORCYCLE/TRICYCLE\" },\n// ];\n\nconst tplTypeOption_ = [\n  { Account: \"\", PremuimPaid: \"0.00\" },\n  { Account: \"LIGHT PRIVATE VEHICLE(1YR)\", PremuimPaid: \"447.01\" },\n  { Account: \"MEDIUM PRIVATE VEHICLE(1YR)\", PremuimPaid: \"486.92\" },\n  { Account: \"HEAVY PRIVATE VEHICLE(1YR)\", PremuimPaid: \"957.88\" },\n  {\n    Account: \"MC/TC - MOTORCYCLE/TRICYCLE(1YR)\",\n    PremuimPaid: \"199.55\",\n  },\n  { Account: \"LIGHT PRIVATE VEHICLE(3YR)\", PremuimPaid: \"1285.14\" },\n  {\n    Account: \"MEDIUM PRIVATE VEHICLE(3YR)\",\n    PremuimPaid: \"1396.89\",\n  },\n  { Account: \"HEAVY PRIVATE VEHICLE(3YR)\", PremuimPaid: \"2746.34\" },\n  {\n    Account: \"MC/TC - MOTORCYCLE/TRICYCLE(3YR)\",\n    PremuimPaid: \"574.72\",\n  },\n];\n\nexport default function PolicyTypeDetails() {\n  const {\n    state,\n    handleInputChange,\n    handleDateChange,\n    showField,\n    isAddOrEditMode,\n    dispatch,\n    tplCompuation,\n    comComputation,\n    parseStringToNumber,\n    domination,\n    isLoadingrates,\n    user,\n  } = useContext(VehicleContext);\n\n  function onKeyDownComputation(e: any) {\n    if (e.code === \"NumpadEnter\" || e.code === \"Enter\") {\n      if (state.form_type.toLowerCase() === \"com\") {\n        return comComputation();\n      }\n      tplCompuation();\n    }\n  }\n\n  function calculateDeductible(value: any, vehicle: string, towing: string) {\n    const EVSV = parseFloat(parseStringToNumber(value).replace(/,/g, \"\"));\n    let Deductible = 0;\n    if (EVSV <= 0) {\n      handleInputChange({ target: { name: \"Deductible\", value: \"0\" } });\n      autorizeRepairComputation(\n        parseStringToNumber(Deductible.toFixed(2)),\n        towing\n      );\n    }\n\n    if (vehicle === \"private\") {\n      Deductible = EVSV * 0.005;\n    } else if (vehicle === \"heavy\") {\n      Deductible = EVSV * 0.01;\n    } else if (vehicle === \"motorcycle\") {\n      Deductible = EVSV * 0.01;\n    }\n\n    if (Deductible < 2000) {\n      Deductible = 2000;\n    }\n\n    handleInputChange({\n      target: {\n        name: \"Deductible\",\n        value: parseStringToNumber(Deductible.toFixed(2)),\n      },\n    });\n    autorizeRepairComputation(\n      parseStringToNumber(Deductible.toFixed(2)),\n      towing\n    );\n  }\n  function autorizeRepairComputation(\n    DeductibleInput: string,\n    TowingInput: string\n  ) {\n    const Deductible = parseFloat(\n      parseStringToNumber(DeductibleInput).replace(/,/g, \"\")\n    );\n    const Towing = parseFloat(\n      parseStringToNumber(TowingInput).replace(/,/g, \"\")\n    );\n\n    handleInputChange({\n      target: {\n        name: \"ARL\",\n        value: parseStringToNumber(\n          (Math.abs(Deductible) + Math.abs(Towing)).toFixed(2)\n        ),\n      },\n    });\n  }\n  return (\n    <div style={{ display: \"flex\", flexDirection: \"column\" }}>\n      {state.form_type.toLowerCase() === \"tpl\" && (\n        <React.Fragment>\n          <Typography variant=\"h6\" sx={{ marginY: \"10px\" }}>\n            THIRD PARTY LIABILITY\n          </Typography>\n          <fieldset\n            style={{\n              display: \"flex\",\n              gap: \"10px\",\n              padding: \"15px\",\n              border: \"1px solid #cbd5e1\",\n              borderRadius: \"5px\",\n            }}\n          >\n            <legend>Section I/II</legend>\n            <FormControl\n              size=\"small\"\n              disabled={!showField.thirdparty || isAddOrEditMode}\n              sx={{\n                flex: 1,\n                \".MuiFormLabel-root\": {\n                  fontSize: \"14px\",\n                  background: \"white\",\n                  zIndex: 99,\n                  padding: \"0 3px\",\n                },\n                \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n              }}\n            >\n              <InputLabel id=\"Type\">Type</InputLabel>\n              <Select\n                labelId=\"Type\"\n                value={state.TplType}\n                label=\"Type\"\n                name=\"TplType\"\n                onChange={(e) => {\n                  const selected: any = tplTypeOption_.filter(\n                    (items) => items.Account === e.target.value\n                  )[0];\n                  handleInputChange(e);\n                  handleDateChange(selected.PremuimPaid, \"PremiumPaid\");\n                }}\n                sx={{\n                  height: \"27px\",\n                  fontSize: \"14px\",\n                }}\n              >\n                {[...tplTypeOption_].map((items: any, idx: number) => {\n                  return (\n                    <MenuItem key={idx} value={items.Account}>\n                      {items.Account}\n                    </MenuItem>\n                  );\n                })}\n              </Select>\n            </FormControl>\n\n            <TextField\n              disabled={isAddOrEditMode}\n              variant=\"outlined\"\n              size=\"small\"\n              label=\"Premium Paid\"\n              name=\"PremiumPaid\"\n              value={state.PremiumPaid}\n              onChange={(e) => {\n                handleInputChange(e);\n              }}\n              placeholder=\"0.00\"\n              onBlur={() => {\n                dispatch({\n                  type: \"UPDATE_FIELD\",\n                  field: \"PremiumPaid\",\n                  value: parseFloat(state.PremiumPaid).toFixed(2),\n                });\n              }}\n              onKeyDown={onKeyDownComputation}\n              InputProps={{\n                inputComponent: NumericFormatCustom as any,\n                style: { height: \"27px\", fontSize: \"14px\" },\n              }}\n              sx={{\n                flex: 1,\n                height: \"27px\",\n                \".MuiFormLabel-root\": { fontSize: \"14px\" },\n                \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n              }}\n            />\n          </fieldset>\n        </React.Fragment>\n      )}\n      {state.form_type.toLowerCase() === \"com\" && (\n        <React.Fragment>\n          <Typography variant=\"h6\" sx={{ marginY: \"10px\" }}>\n            COMPREHENSEVE\n          </Typography>\n          <fieldset\n            style={{\n              display: \"flex\",\n              flexDirection: \"row\",\n              gap: \"10px\",\n              gridArea: \"content4\",\n              padding: \"15px\",\n              border: \"1px solid #cbd5e1\",\n              borderRadius: \"5px\",\n            }}\n          >\n            <legend>Section III/IV</legend>\n            <Box\n              sx={(theme) => ({\n                flex: 1,\n                display: \"flex\",\n                columnGap: \"15px\",\n                flexDirection: \"column\",\n                gap: \"8px\",\n              })}\n            >\n              <TextField\n                disabled={isAddOrEditMode}\n                fullWidth\n                variant=\"outlined\"\n                size=\"small\"\n                label=\"Estimated Value of Schedule Vehicle\"\n                name=\"EVSV\"\n                value={state.EVSV}\n                onChange={(e) => {\n                  calculateDeductible(\n                    e.target.value,\n                    state.vehicle,\n                    state.Towing\n                  );\n                  handleInputChange(e);\n                }}\n                placeholder=\"0.00\"\n                InputProps={{\n                  style: { height: \"27px\", fontSize: \"14px\" },\n                  inputComponent: NumericFormatCustom as any,\n                }}\n                sx={{\n                  flex: 1,\n                  height: \"27px\",\n                  \".MuiFormLabel-root\": { fontSize: \"14px\" },\n                  \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n                }}\n                onKeyDown={onKeyDownComputation}\n                onBlur={() => {\n                  dispatch({\n                    type: \"UPDATE_FIELD\",\n                    field: \"EVSV\",\n                    value: parseFloat(state.EVSV).toFixed(2),\n                  });\n                }}\n              />\n              <TextField\n                disabled={isAddOrEditMode}\n                variant=\"outlined\"\n                size=\"small\"\n                label=\"Aircon\"\n                fullWidth\n                name=\"Aircon\"\n                value={state.Aircon}\n                onChange={handleInputChange}\n                placeholder=\"0.00\"\n                InputProps={{\n                  style: { height: \"27px\", fontSize: \"14px\" },\n                  inputComponent: NumericFormatCustom as any,\n                }}\n                sx={{\n                  flex: 1,\n                  height: \"27px\",\n                  \".MuiFormLabel-root\": { fontSize: \"14px\" },\n                  \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n                }}\n                onBlur={() => {\n                  dispatch({\n                    type: \"UPDATE_FIELD\",\n                    field: \"Aircon\",\n                    value: parseFloat(state.Aircon).toFixed(2),\n                  });\n                }}\n              />\n              <TextField\n                disabled={isAddOrEditMode}\n                variant=\"outlined\"\n                size=\"small\"\n                label=\"Stereo\"\n                fullWidth\n                name=\"Stereo\"\n                value={state.Stereo}\n                onChange={handleInputChange}\n                placeholder=\"0.00\"\n                InputProps={{\n                  style: { height: \"27px\", fontSize: \"14px\" },\n                  inputComponent: NumericFormatCustom as any,\n                }}\n                sx={{\n                  flex: 1,\n                  height: \"27px\",\n                  \".MuiFormLabel-root\": { fontSize: \"14px\" },\n                  \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n                }}\n                onBlur={() => {\n                  dispatch({\n                    type: \"UPDATE_FIELD\",\n                    field: \"Stereo\",\n                    value: parseFloat(state.Stereo).toFixed(2),\n                  });\n                }}\n              />\n              <TextField\n                disabled={isAddOrEditMode}\n                variant=\"outlined\"\n                size=\"small\"\n                label=\"Magwheels\"\n                fullWidth\n                name=\"Magwheels\"\n                value={state.Magwheels}\n                onChange={handleInputChange}\n                placeholder=\"0.00\"\n                InputProps={{\n                  style: { height: \"27px\", fontSize: \"14px\" },\n                  inputComponent: NumericFormatCustom as any,\n                }}\n                sx={{\n                  flex: 1,\n                  height: \"27px\",\n                  \".MuiFormLabel-root\": { fontSize: \"14px\" },\n                  \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n                }}\n                onBlur={() => {\n                  dispatch({\n                    type: \"UPDATE_FIELD\",\n                    field: \"Magwheels\",\n                    value: parseFloat(state.Magwheels).toFixed(2),\n                  });\n                }}\n              />\n\n              <div\n                style={{\n                  display: \"flex\",\n                  gap: \"10px\",\n                  alignItems: \"center\",\n                }}\n              >\n                <TextField\n                  disabled={isAddOrEditMode}\n                  variant=\"outlined\"\n                  size=\"small\"\n                  label=\"Others(Specify)\"\n                  fullWidth\n                  name=\"OthersDesc\"\n                  value={state.OthersDesc}\n                  onChange={handleInputChange}\n                  InputProps={{\n                    style: { height: \"27px\", fontSize: \"14px\" },\n                  }}\n                  sx={{\n                    flex: 1,\n                    height: \"27px\",\n                    \".MuiFormLabel-root\": { fontSize: \"14px\" },\n                    \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n                  }}\n                />\n                <div\n                  style={{\n                    display: \"flex\",\n                    alignItems: \"center\",\n                    justifyContent: \"center\",\n                    width: \"30px\",\n                    height: \"3px\",\n                    backgroundColor: \"black\",\n                    boxSizing: \"border-box\",\n                  }}\n                ></div>\n                <TextField\n                  disabled={isAddOrEditMode}\n                  variant=\"outlined\"\n                  size=\"small\"\n                  name=\"OthersRate\"\n                  value={state.OthersRate}\n                  onChange={handleInputChange}\n                  placeholder=\"0.00\"\n                  InputProps={{\n                    inputComponent: NumericFormatCustom as any,\n                    style: { height: \"27px\", fontSize: \"14px\" },\n                  }}\n                  sx={{\n                    flex: 1,\n                    height: \"27px\",\n                    \".MuiFormLabel-root\": { fontSize: \"14px\" },\n                    \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n                  }}\n                  onBlur={() => {\n                    dispatch({\n                      type: \"UPDATE_FIELD\",\n                      field: \"OthersRate\",\n                      value: parseFloat(state.OthersRate).toFixed(2),\n                    });\n                  }}\n                />\n              </div>\n              {/* <FormControl\n                disabled={isAddOrEditMode}  \n                size=\"small\"\n                sx={{\n                  flex: 1,\n                  \".MuiFormLabel-root\": {\n                    fontSize: \"14px\",\n                    background: \"white\",\n                    zIndex: 99,\n                    padding: \"0 3px\",\n                  },\n                  \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n                }}\n              >\n                <InputLabel id=\"Type\">Type</InputLabel>\n                <Select\n                  labelId=\"Type\"\n                  value={state.CompreType}\n                  label=\"Type\"\n                  name=\"CompreType\"\n                  onChange={handleInputChange}\n                  sx={{\n                    height: \"27px\",\n                    fontSize: \"14px\",\n                  }}\n                >\n                  {compreTypeOption_.map((items: any, idx: number) => {\n                    return (\n                      <MenuItem key={idx} value={items.Account}>\n                        {items.Account}\n                      </MenuItem>\n                    );\n                  })}\n                </Select>\n              </FormControl> */}\n            </Box>\n            <Box sx={{ display: \"flex\", columnGap: \"10px\", flex: 1 }}>\n              <Box sx={{ display: \"flex\", columnGap: \"10px\", flex: 1 }}>\n                <fieldset\n                  style={\n                    {\n                      flex: 1,\n                      padding: \"15px\",\n                      border: \"1px solid #cbd5e1\",\n                      borderRadius: \"5px\",\n                    } as any\n                  }\n                >\n                  <div style={{ display: \"flex\", columnGap: \"4px\" }}>\n                    <FormControl\n                      size=\"small\"\n                      disabled={isAddOrEditMode}\n                      sx={{\n                        width: \"100px\",\n                        \".MuiFormLabel-root\": {\n                          fontSize: \"14px\",\n                          background: \"white\",\n                          zIndex: 99,\n                          padding: \"0 3px\",\n                        },\n                        \".MuiFormLabel-root[data-shrink=false]\": {\n                          top: \"-5px\",\n                        },\n                      }}\n                    >\n                      <InputLabel id=\"vehicle\">Vehicle</InputLabel>\n                      <Select\n                        labelId=\"vehicle\"\n                        value={state.vehicle}\n                        label=\"Vehicle\"\n                        name=\"vehicle\"\n                        onChange={(e) => {\n                          calculateDeductible(\n                            state.EVSV,\n                            e.target.value,\n                            state.Towing\n                          );\n                          handleInputChange(e);\n                        }}\n                        sx={{\n                          height: \"27px\",\n                          fontSize: \"14px\",\n                        }}\n                      >\n                        <MenuItem value={\"private\"}>Private</MenuItem>\n                        <MenuItem value={\"heavy\"}>Heavy</MenuItem>\n                        <MenuItem value={\"motorcycle\"}>Motorcycle</MenuItem>\n                      </Select>\n                    </FormControl>\n                    <TextField\n                      disabled={isAddOrEditMode}\n                      variant=\"outlined\"\n                      size=\"small\"\n                      label=\"Deductible\"\n                      fullWidth\n                      name=\"Deductible\"\n                      value={state.Deductible}\n                      onChange={handleInputChange}\n                      placeholder=\"0.00\"\n                      InputProps={{\n                        inputComponent: NumericFormatCustom as any,\n                        style: { height: \"27px\", fontSize: \"14px\" },\n                      }}\n                      sx={{\n                        marginBottom: \"10px\",\n                        flex: 1,\n                        height: \"27px\",\n                        \".MuiFormLabel-root\": { fontSize: \"14px\" },\n                        \".MuiFormLabel-root[data-shrink=false]\": {\n                          top: \"-5px\",\n                        },\n                      }}\n                      onBlur={() => {\n                        dispatch({\n                          type: \"UPDATE_FIELD\",\n                          field: \"Deductible\",\n                          value: parseFloat(state.Deductible).toFixed(2),\n                        });\n                      }}\n                    />\n                  </div>\n\n                  <TextField\n                    disabled={isAddOrEditMode}\n                    variant=\"outlined\"\n                    size=\"small\"\n                    label=\"Towing\"\n                    fullWidth\n                    name=\"Towing\"\n                    value={state.Towing}\n                    onChange={(e) => {\n                      autorizeRepairComputation(\n                        state.Deductible,\n                        e.target.value\n                      );\n                      handleInputChange(e);\n                    }}\n                    placeholder=\"0.00\"\n                    InputProps={{\n                      inputComponent: NumericFormatCustom as any,\n                      style: { height: \"27px\", fontSize: \"14px\" },\n                    }}\n                    sx={{\n                      marginBottom: \"10px\",\n                      flex: 1,\n                      height: \"27px\",\n                      \".MuiFormLabel-root\": { fontSize: \"14px\" },\n                      \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n                    }}\n                    onBlur={() => {\n                      dispatch({\n                        type: \"UPDATE_FIELD\",\n                        field: \"Towing\",\n                        value: parseFloat(state.Towing).toFixed(2),\n                      });\n                    }}\n                  />\n                  <TextField\n                    disabled={isAddOrEditMode}\n                    variant=\"outlined\"\n                    size=\"small\"\n                    label=\"Authorized Repair Limit\"\n                    fullWidth\n                    name=\"ARL\"\n                    value={state.ARL}\n                    onChange={handleInputChange}\n                    placeholder=\"0.00\"\n                    InputProps={{\n                      inputComponent: NumericFormatCustom as any,\n                      style: { height: \"27px\", fontSize: \"14px\" },\n                    }}\n                    sx={{\n                      marginBottom: \"10px\",\n                      flex: 1,\n                      height: \"27px\",\n                      \".MuiFormLabel-root\": { fontSize: \"14px\" },\n                      \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n                    }}\n                    onBlur={() => {\n                      dispatch({\n                        type: \"UPDATE_FIELD\",\n                        field: \"ARL\",\n                        value: parseFloat(state.ARL).toFixed(2),\n                      });\n                    }}\n                  />\n                </fieldset>\n                <fieldset\n                  style={\n                    {\n                      flex: 1,\n                      padding: \"15px\",\n                      border: \"1px solid #cbd5e1\",\n                      borderRadius: \"5px\",\n                    } as any\n                  }\n                >\n                  <Autocomplete\n                    disabled={isAddOrEditMode}\n                    value={state.BodyInjury}\n                    onChange={(event: any, value: string | null) => {\n                      handleInputChange({\n                        target: { name: \"BodyInjury\", value },\n                      });\n                    }}\n                    size=\"small\"\n                    freeSolo\n                    disableClearable\n                    options={rateOption_.map((option: any) => option.Account)}\n                    getOptionLabel={(option: any) => option}\n                    sx={(theme) => ({\n                      height: \"27px\",\n                      marginBottom: \"10px\",\n                      \"& .MuiAutocomplete-inputRoot\": {\n                        flexWrap: \"nowrap !important\",\n                      },\n                    })}\n                    renderInput={(params) => (\n                      <TextField\n                        {...params}\n                        label=\"Bodily Injury\"\n                        name=\"BodyInjury\"\n                        sx={{\n                          height: \"27px\",\n                        }}\n                        InputProps={{\n                          ...params.InputProps,\n                          type: \"search\",\n                          style: { height: \"27px\", fontSize: \"14px\" },\n                        }}\n                        onChange={(e) => {\n                          const number: number = parseFloat(\n                            e.target.value.replace(/,/g, \"\")\n                          );\n                          if (isNaN(number)) {\n                            return handleInputChange(e);\n                          }\n                          const formattedNumberUS =\n                            number.toLocaleString(\"en-US\");\n                          e.target.value = formattedNumberUS;\n                          handleInputChange(e);\n                        }}\n                        onBlur={() => {\n                          if (\n                            isNaN(\n                              parseFloat(state.BodyInjury.replace(/,/g, \"\"))\n                            )\n                          ) {\n                            return dispatch({\n                              type: \"UPDATE_FIELD\",\n                              field: \"BodyInjury\",\n                              value: \"0.00\",\n                            });\n                          }\n                          dispatch({\n                            type: \"UPDATE_FIELD\",\n                            field: \"BodyInjury\",\n                            value: parseFloat(\n                              state.BodyInjury.replace(/,/g, \"\")\n                            ).toLocaleString(\"en-US\", {\n                              style: \"decimal\",\n                              minimumFractionDigits: 2,\n                              maximumFractionDigits: 2,\n                            }),\n                          });\n                        }}\n                      />\n                    )}\n                  />\n                  <Autocomplete\n                    disabled={isAddOrEditMode}\n                    value={state.PropertyDamage}\n                    onChange={(event: any, value: string | null) => {\n                      handleInputChange({\n                        target: { name: \"PropertyDamage\", value },\n                      });\n                    }}\n                    size=\"small\"\n                    freeSolo\n                    disableClearable\n                    options={rateOption_.map((option: any) => option.Account)}\n                    getOptionLabel={(option: any) => option}\n                    sx={(theme) => ({\n                      height: \"27px\",\n                      marginBottom: \"10px\",\n                      \"& .MuiAutocomplete-inputRoot\": {\n                        flexWrap: \"nowrap !important\",\n                      },\n                    })}\n                    renderInput={(params) => (\n                      <TextField\n                        {...params}\n                        label=\"Property Damage\"\n                        name=\"PropertyDamage\"\n                        sx={{\n                          height: \"27px\",\n                        }}\n                        InputProps={{\n                          ...params.InputProps,\n                          type: \"search\",\n                          style: { height: \"27px\", fontSize: \"14px\" },\n                        }}\n                        onChange={(e) => {\n                          const number: number = parseFloat(\n                            e.target.value.replace(/,/g, \"\")\n                          );\n                          if (isNaN(number)) {\n                            return handleInputChange(e);\n                          }\n                          const formattedNumberUS =\n                            number.toLocaleString(\"en-US\");\n                          e.target.value = formattedNumberUS;\n                          handleInputChange(e);\n                        }}\n                        onBlur={() => {\n                          if (\n                            isNaN(\n                              parseFloat(state.PropertyDamage.replace(/,/g, \"\"))\n                            )\n                          ) {\n                            return dispatch({\n                              type: \"UPDATE_FIELD\",\n                              field: \"PropertyDamage\",\n                              value: \"0.00\",\n                            });\n                          }\n                          dispatch({\n                            type: \"UPDATE_FIELD\",\n                            field: \"PropertyDamage\",\n                            value: parseFloat(\n                              state.PropertyDamage.replace(/,/g, \"\")\n                            ).toLocaleString(\"en-US\", {\n                              style: \"decimal\",\n                              minimumFractionDigits: 2,\n                              maximumFractionDigits: 2,\n                            }),\n                          });\n                        }}\n                      />\n                    )}\n                  />\n                  <Autocomplete\n                    disabled={isAddOrEditMode}\n                    value={state.PersinalAccident}\n                    onChange={(event: any, value: string | null) => {\n                      handleInputChange({\n                        target: { name: \"PersinalAccident\", value },\n                      });\n                    }}\n                    size=\"small\"\n                    freeSolo\n                    disableClearable\n                    options={rateOption_.map((option: any) => option.Account)}\n                    getOptionLabel={(option: any) => option}\n                    sx={(theme) => ({\n                      height: \"27px\",\n                      marginBottom: \"10px\",\n                      \"& .MuiAutocomplete-inputRoot\": {\n                        flexWrap: \"nowrap !important\",\n                      },\n                    })}\n                    renderInput={(params) => (\n                      <TextField\n                        {...params}\n                        label=\"Personal Accident\"\n                        name=\"PersinalAccident\"\n                        sx={{\n                          height: \"27px\",\n                        }}\n                        InputProps={{\n                          ...params.InputProps,\n                          type: \"search\",\n                          style: { height: \"27px\", fontSize: \"14px\" },\n                        }}\n                        onChange={(e) => {\n                          const number: number = parseFloat(\n                            e.target.value.replace(/,/g, \"\")\n                          );\n                          if (isNaN(number)) {\n                            return handleInputChange(e);\n                          }\n                          const formattedNumberUS =\n                            number.toLocaleString(\"en-US\");\n                          e.target.value = formattedNumberUS;\n                          handleInputChange(e);\n                        }}\n                        onBlur={() => {\n                          if (\n                            isNaN(\n                              parseFloat(\n                                state.PersinalAccident.replace(/,/g, \"\")\n                              )\n                            )\n                          ) {\n                            return dispatch({\n                              type: \"UPDATE_FIELD\",\n                              field: \"PersinalAccident\",\n                              value: \"0.00\",\n                            });\n                          }\n                          dispatch({\n                            type: \"UPDATE_FIELD\",\n                            field: \"PersinalAccident\",\n                            value: parseFloat(\n                              state.PersinalAccident.replace(/,/g, \"\")\n                            ).toLocaleString(\"en-US\", {\n                              style: \"decimal\",\n                              minimumFractionDigits: 2,\n                              maximumFractionDigits: 2,\n                            }),\n                          });\n                        }}\n                      />\n                    )}\n                  />\n                </fieldset>\n              </Box>\n            </Box>\n          </fieldset>\n        </React.Fragment>\n      )}\n      <br />\n      {isLoadingrates ? (\n        <LoadingButton loading={isLoadingrates} />\n      ) : (\n        <FormControl\n          disabled={isAddOrEditMode || state.PolicyAccount === \"\"}\n          fullWidth\n          size=\"small\"\n          sx={{\n            width: \"300px\",\n            \".MuiFormLabel-root\": {\n              fontSize: \"14px\",\n              background: \"white\",\n              zIndex: 99,\n              padding: \"0 3px\",\n            },\n            \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n          }}\n        >\n          <InputLabel id=\"Denomination\">Domination</InputLabel>\n          <Select\n            disabled={\n              state.form_action === \"TEMP\" && user?.department === \"UCSMI\"\n            }\n            labelId=\"Denomination\"\n            value={state.Denomination}\n            label=\"Denomination\"\n            name=\"Denomination\"\n            onChange={handleInputChange}\n            sx={{\n              height: \"27px\",\n              fontSize: \"14px\",\n            }}\n          >\n            {domination.map((items: any, idx: number) => {\n              return (\n                <MenuItem key={idx} value={items.type}>\n                  {items.type}\n                </MenuItem>\n              );\n            })}\n          </Select>\n        </FormControl>\n      )}\n    </div>\n  );\n}\n","import {\n  createContext,\n  useContext,\n  useReducer,\n  useState,\n  useRef,\n  useEffect,\n  useCallback,\n} from \"react\";\nimport {\n  Box,\n  Button,\n  CircularProgress,\n  IconButton,\n  TextField,\n} from \"@mui/material\";\nimport { pink } from \"@mui/material/colors\";\nimport AddIcon from \"@mui/icons-material/Add\";\nimport { AuthContext } from \"../../../../../../../components/AuthContext\";\nimport { useQuery, useMutation, useQueryClient } from \"react-query\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport SaveIcon from \"@mui/icons-material/Save\";\nimport Swal from \"sweetalert2\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\nimport { GridRowSelectionModel } from \"@mui/x-data-grid\";\nimport { FormControl, InputLabel, Select, MenuItem } from \"@mui/material\";\nimport ModalWithTable from \"../../../../../../../components/ModalWithTable\";\nimport { LoadingButton } from \"@mui/lab\";\nimport { flushSync } from \"react-dom\";\nimport useMultipleComponent from \"../../../../../../../hooks/useMultipleComponent\";\nimport PolicyInformation from \"./VehicleComponent/PolicyInformation\";\nimport PolicyPremium from \"./VehicleComponent/PolicyPremium\";\nimport PolicyTypeDetails from \"./VehicleComponent/PolicyTypeDetails\";\nimport NavigateNextIcon from \"@mui/icons-material/NavigateNext\";\nimport styled from \"@emotion/styled\";\nimport {\n  codeCondfirmationAlert,\n  saveCondfirmationAlert,\n} from \"../../../../../../../lib/confirmationAlert\";\nimport { addYears, format } from \"date-fns\";\nimport ArticleIcon from \"@mui/icons-material/Article\";\n\ninterface CustomButtonProps {\n  currentStepIndex: number;\n  index: number;\n}\nexport const CustomButton = styled.button`\n  cursor: pointer;\n  border: none;\n  outline: none;\n  background: transparent;\n  font-size: 17px;\n  color:${(props: CustomButtonProps) => {\n    return props.currentStepIndex === props.index ? \"#0284c7;\" : \"#020617;\";\n  }}\n  padding: 0;\n  &:hover  {\n    color: #64748b;\n    background:white;\n  },\n`;\nconst initialState = {\n  form_action: \"REG\",\n  form_type: \"COM\",\n  sub_account: \"HO\",\n  //insurer info\n  client_id: \"\",\n  client_name: \"\",\n  client_address: \"\",\n  //agent info\n  agent_id: \"\",\n  agent_name: \"\",\n  agent_com: \"0.00\",\n  sale_officer: \"\",\n  //Vehicle policy\n  PolicyAccount: \"\",\n  PolicyNo: \"\",\n  CCN: \"\",\n  ORN: \"\",\n  rateCost: \"\",\n  //Period Insurance\n  DateFrom: new Date(),\n  DateTo: addYears(new Date(), 1),\n  DateIssued: new Date(),\n  //Insured Unit\n  Model: \"\",\n  Make: \"\",\n  TB: \"\",\n  Color: \"\",\n  BLTFileNo: \"\",\n  PlateNo: \"\",\n  ChassisNo: \"\",\n  MotorNo: \"\",\n  AuthorizedCapacity: \"\",\n  UnladenWeigth: \"\",\n\n  //==========================\n  //tpl\n  TplType: \"\",\n  PremiumPaid: \"\",\n  //compre\n  EVSV: \"\",\n  Aircon: \"\",\n  Stereo: \"\",\n  Magwheels: \"\",\n  OthersRate: \"\",\n  OthersDesc: \"\",\n  CompreType: \"\",\n\n  Deductible: \"\",\n  Towing: \"\",\n  ARL: \"\",\n  BodyInjury: \"0.00\",\n  PropertyDamage: \"0.00\",\n  PersinalAccident: \"0.00\",\n  Denomination: \"\",\n\n  //==========================\n  //mortgage\n  Mortgagee: \"\",\n  MortgageeForm: \"false\",\n  remarks: \"\",\n  //Premiums\n  SectionI_II: \"\",\n  SectionIII: \"\",\n  OwnDamage: \"\",\n  Theft: \"\",\n  SectionIVA: \"\",\n  SectionIVB: \"\",\n  PremiumOther: \"\",\n  AOG: \"\",\n  AOGPercent: \"0.5\",\n  TotalPremium: \"\",\n  Vat: \"\",\n  DocStamp: \"\",\n  LocalGovTaxPercent: \"0.75\",\n  LocalGovTax: \"\",\n  StradCom: \"\",\n  TotalDue: \"\",\n  Type: \"charles1\",\n  Source_No_Ref_ID: \"\",\n  vehicle: \"private\",\n\n  // extra\n  mode: \"\",\n};\n\nconst initialSummaryState = {\n  PolicyNo: \"\",\n  PolicyType: \"\",\n  DateIssued: \"\",\n  Account: \" \",\n  Mortgagee: \"\",\n  agent_fullname: \"\",\n  sale_officer: \"\",\n  TotalDue: \"\",\n  IDNo: \"\",\n  ShortName: \"\",\n  address: \"\",\n  options: \"\",\n  subShortName: \"\",\n  email: \"\",\n  mobile: \"\",\n  telephone: \"\",\n};\n\nconst reducer = (state: any, action: any) => {\n  switch (action.type) {\n    case \"UPDATE_FIELD\":\n      const newState = {\n        ...state,\n        [action.field]: action.value,\n      };\n      return newState;\n    default:\n      return state;\n  }\n};\nexport const VehicleContext = createContext<any>({});\nconst queryKeySearch = \"vehicle-policy-search\";\nconst queryKeyUpdateAdd = \"vehicle-policy-search\";\nconst queryKeyGet = \"vehicle-policy-get\";\nconst querySearchPolicyIds = \"vehicle-policy-search-ppolicy-id\";\nexport const vpolicyColumn = [\n  { field: \"_DateIssued\", headerName: \"Date\", width: 200 },\n  { field: \"PolicyNo\", headerName: \"Policy No\", width: 170 },\n  {\n    field: \"Account\",\n    headerName: \"Account\",\n    width: 170,\n  },\n  {\n    field: \"client_fullname\",\n    headerName: \"Full Name\",\n    flex: 1,\n  },\n];\nconst vpolicyKey = \"vehicle-policy\";\n\nexport default function VehiclePolicy() {\n  const [showClientDetails, setShowCLientDetails] = useState(false);\n  const [domination, setDomination] = useState([]);\n  const { step, goTo, currentStepIndex } = useMultipleComponent([\n    <PolicyInformation />,\n    <PolicyTypeDetails />,\n    <PolicyPremium />,\n  ]);\n  const [summaryState, summaryDispatch] = useReducer(\n    reducer,\n    initialSummaryState\n  );\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const { myAxios, user } = useContext(AuthContext);\n  const [rows, setRows] = useState<GridRowSelectionModel>([]);\n  const [tplId, setTplId] = useState<GridRowSelectionModel>([]);\n  const [search, setSearch] = useState(\"\");\n  const [searchShow, setSearchShow] = useState(false);\n  const [Mortgagee, setMortgagee] = useState(false);\n  const [showField, setShowField] = useState({\n    thirdparty: state.form_type.toLowerCase() === \"tpl\",\n    compre: state.form_type.toLowerCase() === \"com\",\n  });\n  const newButtonRef = useRef<HTMLButtonElement>(null);\n  const cancelButtonRef = useRef<HTMLButtonElement>(null);\n  const deleteButtonRef = useRef<HTMLButtonElement>(null);\n  const vPolicySearchInput = useRef<HTMLInputElement>(null);\n  const queryClient = useQueryClient();\n  const isAddOrEditMode = state.mode === \"\";\n\n  function onSearchSelected(selectedRowData: any) {\n    const {\n      address,\n      IDNo,\n      Account,\n      SubAcct,\n      PolicyNo,\n      DateIssued,\n      TotalPremium,\n      Vat,\n      DocStamp,\n      LGovTax,\n      Misc,\n      TotalDue,\n      AgentID,\n      AgentCom,\n      CoverNo,\n      ORNo,\n      DateFrom,\n      DateTo,\n      Model,\n      Make,\n      BodyType,\n      Color,\n      BLTFileNo,\n      PlateNo,\n      ChassisNo,\n      MotorNo,\n      AuthorizedCap,\n      UnladenWeight,\n      PremiumPaid,\n      EstimatedValue,\n      Aircon,\n      Stereo,\n      Magwheels,\n      Others,\n      OthersAmount,\n      Deductible,\n      Towing,\n      RepairLimit,\n      BodilyInjury,\n      PropertyDamage,\n      PersonalAccident,\n      SecI,\n      SecIIPercent,\n      ODamage,\n      Theft,\n      Sec4A,\n      Sec4B,\n      Sec4C,\n      AOG,\n      MortgageeForm,\n      Mortgagee,\n      Denomination,\n      client_fullname,\n      agent_fullname,\n      TPLTypeSection_I_II,\n      AOGPercent,\n      LocalGovTaxPercent,\n      Remarks,\n      sale_officer,\n    } = selectedRowData[0];\n\n    function formatTextNumber(input: string) {\n      const userInput = input.toString();\n      if (isNaN(parseFloat(userInput))) {\n        return \"0.00\";\n      }\n      var formattedNumber = parseFloat(\n        userInput.replace(/,/g, \"\")\n      ).toLocaleString(\"en-US\", {\n        minimumFractionDigits: 2,\n        maximumFractionDigits: 2,\n      });\n\n      return formattedNumber;\n    }\n\n    function setFixValue(value: string) {\n      const intVal = parseFloat(value);\n      return intVal.toFixed(2);\n    }\n    function intToBoolean(value: string) {\n      const intVal = parseInt(value);\n      return intVal ? true : false;\n    }\n\n    handleDateChange(SubAcct, \"sub_account\");\n    handleDateChange(IDNo, \"client_id\");\n    handleDateChange(client_fullname, \"client_name\");\n    handleDateChange(address, \"client_address\");\n\n    handleDateChange(AgentID, \"agent_id\");\n    handleDateChange(agent_fullname, \"agent_name\");\n    handleDateChange(AgentCom, \"agent_com\");\n\n    handleDateChange(Account, \"PolicyAccount\");\n    handleDateChange(PolicyNo, \"PolicyNo\");\n    handleDateChange(CoverNo, \"CCN\");\n    handleDateChange(ORNo, \"ORN\");\n\n    handleDateChange(DateFrom, \"DateFrom\");\n    handleDateChange(DateTo, \"DateTo\");\n    handleDateChange(DateIssued, \"DateIssued\");\n\n    handleDateChange(Model, \"Model\");\n    handleDateChange(Make, \"Make\");\n    handleDateChange(BodyType, \"TB\");\n    handleDateChange(Color, \"Color\");\n    handleDateChange(BLTFileNo, \"BLTFileNo\");\n    handleDateChange(PlateNo, \"PlateNo\");\n    handleDateChange(ChassisNo, \"ChassisNo\");\n    handleDateChange(MotorNo, \"MotorNo\");\n    handleDateChange(AuthorizedCap, \"AuthorizedCapacity\");\n    handleDateChange(UnladenWeight, \"UnladenWeigth\");\n\n    handleDateChange(setFixValue(PremiumPaid), \"PremiumPaid\");\n    handleDateChange(setFixValue(EstimatedValue), \"EVSV\");\n    handleDateChange(setFixValue(Aircon), \"Aircon\");\n    handleDateChange(setFixValue(Stereo), \"Stereo\");\n    handleDateChange(setFixValue(Magwheels), \"Magwheels\");\n    handleDateChange(setFixValue(Aircon), \"Aircon\");\n    handleDateChange(setFixValue(OthersAmount), \"OthersRate\");\n    handleDateChange(Others, \"OthersDesc\");\n\n    handleDateChange(setFixValue(Deductible), \"Deductible\");\n    handleDateChange(setFixValue(Towing), \"Towing\");\n    handleDateChange(setFixValue(RepairLimit), \"ARL\");\n    handleDateChange(formatTextNumber(BodilyInjury), \"BodyInjury\");\n    handleDateChange(formatTextNumber(PropertyDamage), \"PropertyDamage\");\n    handleDateChange(formatTextNumber(PersonalAccident), \"PersinalAccident\");\n    handleDateChange(setFixValue(SecI), \"SectionI_II\");\n    handleDateChange(setFixValue(SecIIPercent), \"SectionIII\");\n    handleDateChange(setFixValue(ODamage), \"OwnDamage\");\n    handleDateChange(setFixValue(Theft), \"Theft\");\n    handleDateChange(setFixValue(Sec4A), \"SectionIVA\");\n    handleDateChange(setFixValue(Sec4B), \"SectionIVB\");\n    handleDateChange(setFixValue(Sec4C), \"PremiumOther\");\n    handleDateChange(setFixValue(AOG), \"AOG\");\n\n    handleDateChange(Mortgagee, \"Mortgagee\");\n    handleDateChange(intToBoolean(MortgageeForm), \"MortgageeForm\");\n    handleDateChange(Denomination, \"Denomination\");\n\n    handleDateChange(setFixValue(TotalDue), \"TotalDue\");\n    handleDateChange(setFixValue(Vat), \"Vat\");\n    handleDateChange(setFixValue(DocStamp), \"DocStamp\");\n    handleDateChange(setFixValue(TotalPremium), \"TotalPremium\");\n    handleDateChange(setFixValue(LGovTax), \"LocalGovTax\");\n    handleDateChange(setFixValue(Misc), \"StradCom\");\n\n    handleDateChange(setFixValue(LocalGovTaxPercent), \"LocalGovTaxPercent\");\n    handleDateChange(setFixValue(AOGPercent), \"LocaAOGPercent\");\n    handleDateChange(TPLTypeSection_I_II, \"TplType\");\n    handleDateChange(Remarks, \"remarks\");\n\n    handleDateChange(sale_officer, \"sale_officer\");\n    handleDateChange(\"delete\", \"mode\");\n    setSearchShow(false);\n    setSearchShow(false);\n  }\n  const {\n    isLoading: isLoadingTempId,\n    // refetch: refetchTempId,\n    data: dataTemp,\n  } = useQuery({\n    queryKey: \"temp-id\",\n    queryFn: async () =>\n      await myAxios.get(`/task/production/get-vehicle-policy-temp-id`, {\n        headers: {\n          Authorization: `Bearer ${user?.accessToken}`,\n        },\n      }),\n  });\n  const { isLoading: searchLoading, refetch } = useQuery({\n    queryKey: queryKeySearch,\n    queryFn: async () =>\n      await myAxios.get(\n        `/task/production/tpl-search-vehicle-policy?form_type=${state.form_type}&form_action=${state.form_action}&search=`,\n        {\n          headers: {\n            Authorization: `Bearer ${user?.accessToken}`,\n          },\n        }\n      ),\n    onSuccess: (res) => {\n      const response = res.data?.searchVPolicy as any;\n      setRows(response);\n    },\n  });\n  const { data: dataSubAccount, isLoading: isLoadingSubAccount } = useQuery({\n    queryKey: \"get-sub_account\",\n    queryFn: async () =>\n      await myAxios.get(`/task/production/get-sub_account`, {\n        headers: {\n          Authorization: `Bearer ${user?.accessToken}`,\n        },\n      }),\n  });\n  const { mutate, isLoading: loadingAddNew } = useMutation({\n    mutationKey: queryKeyUpdateAdd,\n    mutationFn: async (variables: any) => {\n      if (state.mode === \"delete\" && state.form_type === \"COM\") {\n        return await myAxios.post(\n          \"/task/production/com-update-vehicle-policy\",\n          variables,\n          {\n            headers: {\n              Authorization: `Bearer ${user?.accessToken}`,\n            },\n          }\n        );\n      }\n\n      if (state.mode === \"delete\" && state.form_type !== \"COM\") {\n        return await myAxios.post(\n          \"/task/production/tpl-update-vehicle-policy\",\n          variables,\n          {\n            headers: {\n              Authorization: `Bearer ${user?.accessToken}`,\n            },\n          }\n        );\n      }\n      return await myAxios.post(\n        \"/task/production/tpl-add-vehicle-policy\",\n        variables,\n        {\n          headers: {\n            Authorization: `Bearer ${user?.accessToken}`,\n          },\n        }\n      );\n    },\n    onSuccess: (res) => {\n      console.log(res.data)\n\n      if (res.data.success) {\n        Promise.all([\n          queryClient.invalidateQueries(queryKeySearch),\n          queryClient.invalidateQueries(queryKeyUpdateAdd),\n          queryClient.invalidateQueries(queryKeyGet),\n          queryClient.invalidateQueries(querySearchPolicyIds),\n        ]);\n        return Swal.fire({\n          position: \"center\",\n          icon: \"success\",\n          title: res.data.message,\n          showConfirmButton: false,\n          timer: 1500,\n        }).then(() => {\n          if (state.form_action === \"TEMP\") {\n            const getNumbers = state.PolicyNo.split(\"TP-\")[1];\n            const inc = parseInt(getNumbers) + 1;\n            const getZero = getNumbers.slice(0, getNumbers.length - 1);\n            initialState.PolicyNo = `TP-${getZero}${inc}`;\n            initialState.form_action = \"TEMP\";\n          }\n          initialState.form_type = state.form_type;\n          backToDefaultState(initialState);\n        });\n      }\n\n      Swal.fire({\n        position: \"center\",\n        icon: \"error\",\n        title: res.data.message,\n        showConfirmButton: false,\n        timer: 1500,\n      });\n    },\n  });\n  const { mutate: mutateDelete, isLoading: loadingDelete } = useMutation({\n    mutationKey: queryKeyUpdateAdd,\n    mutationFn: async (variables: any) => {\n      return await myAxios.post(\n        \"/task/production/tpl-delete-vehicle-policy\",\n        variables,\n        {\n          headers: {\n            Authorization: `Bearer ${user?.accessToken}`,\n          },\n        }\n      );\n    },\n    onSuccess: (res) => {\n      if (res.data.success) {\n        Promise.all([\n          queryClient.invalidateQueries(queryKeySearch),\n          queryClient.invalidateQueries(queryKeyUpdateAdd),\n          queryClient.invalidateQueries(queryKeyGet),\n          queryClient.invalidateQueries(querySearchPolicyIds),\n        ]);\n        backToDefaultState(initialState, true);\n        return Swal.fire({\n          position: \"center\",\n          icon: \"success\",\n          title: res.data.message,\n          showConfirmButton: false,\n          timer: 1500,\n        });\n      }\n\n      Swal.fire({\n        position: \"center\",\n        icon: \"error\",\n        title: res.data.message,\n        showConfirmButton: false,\n        timer: 1500,\n      });\n    },\n  });\n  const { isLoading: isLoadingrates, mutate: mutateRates } = useMutation({\n    mutationKey: \"post-rates\",\n    mutationFn: async (variables) =>\n      await myAxios.post(`/task/production/get-rates`, variables, {\n        headers: {\n          Authorization: `Bearer ${user?.accessToken}`,\n        },\n      }),\n    onSuccess(res) {\n      setDomination(res.data.rates);\n    },\n  });\n  const { isLoading: isLoadingPolicyDetails, mutate: mutatePolicyDetails } =\n    useMutation({\n      mutationKey: \"get-policy-summary\",\n      mutationFn: async (variable: any) =>\n        await myAxios.post(`/task/production/get-policy-summary`, variable, {\n          headers: {\n            Authorization: `Bearer ${user?.accessToken}`,\n          },\n        }),\n      onSuccess(res) {\n        const response = res.data as any;\n        setShowCLientDetails(true);\n        setNewStateValue(summaryDispatch, response.policyDetails[0]);\n      },\n    });\n  const setDefaultValueForNumber = useCallback(() => {\n    state.EVSV = parseStringToNumber(state.EVSV);\n    state.Aircon = parseStringToNumber(state.Aircon);\n    state.Stereo = parseStringToNumber(state.Stereo);\n    state.Magwheels = parseStringToNumber(state.Magwheels);\n    state.OthersRate = parseStringToNumber(state.OthersRate);\n    state.Deductible = parseStringToNumber(state.Deductible);\n    state.Towing = parseStringToNumber(state.Towing);\n    state.ARL = parseStringToNumber(state.ARL);\n    state.TotalPremium = parseStringToNumber(state.TotalPremium);\n    state.Vat = parseStringToNumber(state.Vat);\n    state.DocStamp = parseStringToNumber(state.DocStamp);\n    state.LocalGovTaxPercent = parseStringToNumber(state.LocalGovTaxPercent);\n    state.LocalGovTaxPercent = parseStringToNumber(state.LocalGovTaxPercent);\n    state.LocalGovTax = parseStringToNumber(state.LocalGovTax);\n    state.TotalDue = parseStringToNumber(state.TotalDue);\n    state.AOG = parseStringToNumber(state.AOG);\n    state.AOGPercent = parseStringToNumber(state.AOGPercent);\n    state.PremiumOther = parseStringToNumber(state.PremiumOther);\n    state.SectionIVB = parseStringToNumber(state.SectionIVB);\n    state.SectionIVA = parseStringToNumber(state.SectionIVA);\n    state.Theft = parseStringToNumber(state.Theft);\n    state.OwnDamage = parseStringToNumber(state.OwnDamage);\n    state.SectionIII = parseStringToNumber(state.SectionIII);\n    state.SectionI_II = parseStringToNumber(state.SectionI_II);\n    state.PremiumPaid = parseStringToNumber(state.PremiumPaid);\n    state.StradCom = parseStringToNumber(state.StradCom);\n  }, [state]);\n  const handleOnSave = useCallback(() => {\n    if (\n      state.client_name === \"\" ||\n      state.client_name === null ||\n      state.client_name === undefined\n    ) {\n      return Swal.fire({\n        icon: \"warning\",\n        title: \"Register on ID Entry?\",\n        text: \"Unable to save! Invalid Client ID!\",\n        showCancelButton: true,\n        showConfirmButton: true,\n      }).then((result) => {\n        if (result.isConfirmed) {\n          return window.open(\n            \"/dashboard/reference/id-entry\",\n            \"_blank\"\n          );\n        }\n      });\n    }\n\n    if (state.PolicyAccount === \"\" || state.PolicyAccount === null) {\n      return Swal.fire(\n        \"Unable to save! Please select Account.\",\n        \"you missed the Account Field?\",\n        \"error\"\n      );\n    }\n    if (state.PolicyNo === \"\" || state.PolicyNo === null) {\n      return Swal.fire(\n        \"Unable to save! Invalid Policy No.\",\n        \"you missed the Policy No Field?\",\n        \"error\"\n      );\n    }\n    if (state.mode === \"delete\") {\n      codeCondfirmationAlert({\n        isUpdate: true,\n        cb: (userCodeConfirmation) => {\n          setDefaultValueForNumber();\n          mutate({ ...state, userCodeConfirmation });\n        },\n      });\n    } else {\n      saveCondfirmationAlert({\n        isConfirm: () => {\n          setDefaultValueForNumber();\n          mutate(state);\n        },\n      });\n    }\n  }, [setDefaultValueForNumber, mutate, state]);\n\n  useEffect(() => {\n    const handleKeyDown = (event: any) => {\n      if (\n        event.code === \"AudioVolumeMute\" ||\n        event.code === \"F1\" ||\n        event.keyCode === 173\n      ) {\n        event.preventDefault();\n        goTo(0);\n      }\n      if (\n        event.code === \"AudioVolumeDown\" ||\n        event.code === \"F2\" ||\n        event.keyCode === 174\n      ) {\n        event.preventDefault();\n        goTo(1);\n      }\n      if (\n        event.code === \"AudioVolumeUp\" ||\n        event.code === \"F3\" ||\n        event.keyCode === 175\n      ) {\n        event.preventDefault();\n        goTo(2);\n      }\n\n      if (\n        state.mode === \"\" &&\n        (event.code === \"KeyN\" ||\n          event.code === \"Enter\" ||\n          event.code === \"NumpadEnter\")\n      ) {\n        event.preventDefault();\n        newButtonRef.current?.click();\n      }\n      if (state.mode !== \"\" && event.code === \"Escape\") {\n        event.preventDefault();\n        cancelButtonRef.current?.click();\n      }\n      if (state.mode === \"delete\" && event.code === \"Delete\") {\n        event.preventDefault();\n        deleteButtonRef.current?.click();\n      }\n    };\n    document.addEventListener(\"keydown\", handleKeyDown);\n    return () => {\n      document.removeEventListener(\"keydown\", handleKeyDown);\n    };\n  }, [goTo, handleOnSave, state.mode]);\n\n  const handleInputChange = (e: any) => {\n    const { name, value } = e.target;\n    dispatch({ type: \"UPDATE_FIELD\", field: name, value });\n  };\n  const handleDateChange = (value: any, name: string) => {\n    dispatch({ type: \"UPDATE_FIELD\", field: name, value });\n  };\n  function parseStringToNumber(input: string) {\n    const parsedNumber = parseFloat(input);\n\n    if (!isNaN(parsedNumber)) {\n      return input;\n    } else {\n      return \"0.00\";\n    }\n  }\n  function tplCompuation() {\n    setDefaultValueForNumber();\n\n    if (isNaN(parseFloat(state.PremiumPaid))) {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"error\",\n        title: \"Premiumn Paid is Required\",\n        showConfirmButton: false,\n        timer: 1500,\n      });\n    }\n\n    const vatPercentage = 12 / 100;\n    const dsPercentage = 12.5 / 100;\n    const lgtPercentage = 0.75 / 100;\n    const vatResult = vatPercentage * parseFloat(state.PremiumPaid);\n    const dsResult = dsPercentage * parseFloat(state.PremiumPaid);\n    const lgtResult = lgtPercentage * parseFloat(state.PremiumPaid);\n\n    const totalResult =\n      vatResult +\n      dsResult +\n      lgtResult +\n      parseFloat(state.StradCom) +\n      parseFloat(state.PremiumPaid);\n\n    handleDateChange(\n      `${parseFloat(state.PremiumPaid).toFixed(2)}`,\n      \"SectionI_II\"\n    );\n    handleDateChange(\n      `${parseFloat(state.PremiumPaid).toFixed(2)}`,\n      \"TotalPremium\"\n    );\n    handleDateChange(`${vatResult.toFixed(2)}`, \"Vat\");\n    handleDateChange(`${dsResult.toFixed(2)}`, \"DocStamp\");\n    handleDateChange(`${lgtResult.toFixed(2)}`, \"LocalGovTax\");\n    handleDateChange(`${Math.round(totalResult).toFixed(2)}`, \"TotalDue\");\n  }\n  function comComputation() {\n    setDefaultValueForNumber();\n\n    const vatPercentage = 12 / 100;\n    const docPercentage = 12.5 / 100;\n    const lgtPercentage =\n      parseFloat(state.LocalGovTaxPercent.replace(/,/g, \"\")) / 100;\n    const section = parseFloat(state.SectionIII.replace(/,/g, \"\")) / 100;\n    const aogPercent = parseFloat(state.AOGPercent.replace(/,/g, \"\")) / 100;\n    const owmDamageResult = parseFloat(state.EVSV.replace(/,/g, \"\")) * section;\n    const aogDamageResult =\n      parseFloat(state.EVSV.replace(/,/g, \"\")) * aogPercent;\n    handleDateChange(`${owmDamageResult.toFixed(2)}`, \"OwnDamage\");\n    handleDateChange(\n      `${formatNumberWithTwoDecimals(aogDamageResult.toString())}`,\n      \"AOG\"\n    );\n    const totalPremiumResult =\n      parseFloat(owmDamageResult.toFixed(2)) +\n      parseFloat(aogDamageResult.toString()) +\n      parseFloat(state.SectionIVB.replace(/,/g, \"\")) +\n      parseFloat(state.PremiumOther.replace(/,/g, \"\")) +\n      parseFloat(state.SectionIVA.replace(/,/g, \"\"));\n    handleDateChange(\n      `${(vatPercentage * totalPremiumResult).toFixed(2)}`,\n      \"Vat\"\n    );\n    handleDateChange(\n      `${(docPercentage * totalPremiumResult).toFixed(2)}`,\n      \"DocStamp\"\n    );\n    handleDateChange(\n      `${(lgtPercentage * totalPremiumResult).toFixed(2)}`,\n      \"LocalGovTax\"\n    );\n\n    handleDateChange(\"0.00\", \"TotalPremium\");\n    handleDateChange(\"0.00\", \"TotalDue\");\n\n    const totalDuePremiumResult =\n      totalPremiumResult +\n      parseFloat((vatPercentage * totalPremiumResult).toFixed(2)) +\n      parseFloat((docPercentage * totalPremiumResult).toFixed(2)) +\n      parseFloat((lgtPercentage * totalPremiumResult).toFixed(2)) +\n      parseFloat(parseFloat(state.StradCom.replace(/,/g, \"\")).toFixed(2));\n\n    handleDateChange(\n      `${formatNumberWithTwoDecimals(totalPremiumResult.toString())}`,\n      \"TotalPremium\"\n    );\n    handleDateChange(`${totalDuePremiumResult.toFixed(2)}`, \"TotalDue\");\n  }\n  function backToDefaultState(json: any, resetAll: boolean = false) {\n    Object.entries(json).forEach(([key, value]) => {\n      handleDateChange(value, key);\n    });\n  }\n  function formatNumberWithTwoDecimals(value: string) {\n    const input = parseStringToNumber(value);\n\n    if (input.includes(\".\")) {\n      const parts = input.split(\".\");\n      const integerPart = parts[0];\n      const decimalPart = parts[1].slice(0, 2) || \"00\";\n      return `${integerPart}.${decimalPart}`;\n    }\n\n    return `${input}.00`;\n  }\n  function keySave(event: any) {\n    if (\n      state.mode !== \"\" &&\n      (event.code === \"Enter\" || event.code === \"NumpadEnter\")\n    ) {\n      event.preventDefault();\n      handleOnSave();\n    }\n  }\n  const DisplayDetails = ({ datakey, label, value }: any) => {\n    return (\n      <div style={{ width: \"100%\", display: \"flex\" }}>\n        <label style={{ width: \"200px\" }} htmlFor={datakey}>\n          {label}\n        </label>\n        :\n        <input\n          style={{ flex: 1, border: \"none\", padding: \"0 20px\" }}\n          defaultValue={value ?? \"\"}\n          id={datakey}\n          readOnly={true}\n        />\n      </div>\n    );\n  };\n  function setNewStateValue(dispatch: any, obj: any) {\n    Object.entries(obj).forEach(([field, value]) => {\n      dispatch({ type: \"UPDATE_FIELD\", field, value });\n    });\n  }\n\n  useEffect(() => {\n    if (user?.department === \"UCSMI\")\n      handleInputChange({ target: { value: \"TEMP\", name: \"form_action\" } });\n\n    handleDateChange(dataTemp?.data.tempId[0].tempPolicy_No, \"PolicyNo\");\n    handleInputChange({\n      target: { value: \"COM\", name: \"form_type\" },\n    });\n  }, [user?.department, dataTemp?.data.tempId]);\n\n  useEffect(() => {\n    const handleKeyDown = (event: any) => {\n      if ((event.ctrlKey || event.metaKey) && event.key === 's') {\n        event.preventDefault();\n        handleOnSave();\n      }\n    };\n\n    window.addEventListener('keydown', handleKeyDown);\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [handleOnSave]);\n\n  return (\n    <VehicleContext.Provider\n      value={{\n        parseStringToNumber,\n        state,\n        handleInputChange,\n        handleDateChange,\n        Mortgagee,\n        setMortgagee,\n        showField,\n        setShowField,\n        myAxios,\n        user,\n        tplCompuation,\n        comComputation,\n        tplId,\n        setTplId,\n        isAddOrEditMode,\n        dispatch,\n        isLoadingTempId,\n        keySave,\n        domination,\n        mutateRates,\n        isLoadingrates,\n        reducer,\n      }}\n    >\n      <div style={{ display: \"flex\", columnGap: \"5px\" }}>\n        <div\n          style={{ display: \"flex\", columnGap: \"8px\", alignItems: \"center\" }}\n        >\n          <CustomButton\n            onClick={() => {\n              goTo(0);\n            }}\n            currentStepIndex={currentStepIndex}\n            index={0}\n          >\n            Policy Information\n          </CustomButton>\n          <NavigateNextIcon fontSize=\"small\" />\n        </div>\n        <div\n          style={{ display: \"flex\", columnGap: \"8px\", alignItems: \"center\" }}\n        >\n          <CustomButton\n            onClick={() => {\n              goTo(1);\n            }}\n            currentStepIndex={currentStepIndex}\n            index={1}\n          >\n            Policy Type and Details\n          </CustomButton>\n          <NavigateNextIcon fontSize=\"small\" />\n        </div>\n        <div\n          style={{ display: \"flex\", columnGap: \"8px\", alignItems: \"center\" }}\n        >\n          <CustomButton\n            onClick={() => {\n              goTo(2);\n            }}\n            currentStepIndex={currentStepIndex}\n            index={2}\n          >\n            Policy Premium\n          </CustomButton>\n        </div>\n        <div\n          style={{\n            marginLeft: \"30px\",\n            display: \"flex\",\n            alignItems: \"center\",\n            columnGap: \"20px\",\n          }}\n        >\n          <div\n            style={{\n              display: \"flex\",\n              alignItems: \"center\",\n              columnGap: \"5px\",\n            }}\n          >\n            {state.mode === \"\" && (\n              <Button\n                sx={{\n                  height: \"30px\",\n                  fontSize: \"11px\",\n                }}\n                ref={newButtonRef}\n                variant=\"contained\"\n                startIcon={<AddIcon />}\n                onClick={() => {\n                  handleDateChange(\"add\", \"mode\");\n                }}\n              >\n                New\n              </Button>\n            )}\n            <LoadingButton\n              loading={loadingAddNew}\n              sx={{\n                height: \"30px\",\n                fontSize: \"11px\",\n              }}\n              color=\"primary\"\n              variant=\"contained\"\n              type=\"submit\"\n              onClick={handleOnSave}\n              disabled={state.mode === \"\"}\n              startIcon={<SaveIcon />}\n            >\n              Save\n            </LoadingButton>\n            {state.mode !== \"\" && (\n              <Button\n                sx={{\n                  height: \"30px\",\n                  fontSize: \"11px\",\n                }}\n                ref={cancelButtonRef}\n                variant=\"contained\"\n                startIcon={<CloseIcon />}\n                color=\"error\"\n                onClick={() => {\n                  Swal.fire({\n                    title: \"Are you sure?\",\n                    text: \"You won't be able to revert this!\",\n                    icon: \"warning\",\n                    showCancelButton: true,\n                    confirmButtonColor: \"#3085d6\",\n                    cancelButtonColor: \"#d33\",\n                    confirmButtonText: \"Yes, cancel it!\",\n                  }).then((result) => {\n                    if (result.isConfirmed) {\n                      initialState.form_action = state.form_action;\n                      initialState.form_type = state.form_type;\n                      backToDefaultState(initialState, true);\n                    }\n                  });\n                }}\n              >\n                Cancel\n              </Button>\n            )}\n            <LoadingButton\n              loading={loadingDelete}\n              id=\"save-entry-header\"\n              variant=\"contained\"\n              sx={{\n                height: \"30px\",\n                fontSize: \"11px\",\n                backgroundColor: pink[500],\n                \"&:hover\": {\n                  backgroundColor: pink[600],\n                },\n              }}\n              ref={deleteButtonRef}\n              disabled={state.mode !== \"delete\"}\n              startIcon={<DeleteIcon />}\n              onClick={() => {\n                codeCondfirmationAlert({\n                  isUpdate: false,\n                  cb: (userCodeConfirmation) => {\n                    mutateDelete({\n                      PolicyAccount: state.PolicyAccount,\n                      form_type: state.form_type,\n                      PolicyNo: state.PolicyNo,\n                      userCodeConfirmation,\n                    });\n                  },\n                });\n              }}\n            >\n              Delete\n            </LoadingButton>\n          </div>\n        </div>\n      </div>\n      <Box\n        sx={(theme) => ({\n          display: \"flex\",\n          alignItems: \"center\",\n          columnGap: \"20px\",\n          marginBottom: \"10px\",\n          [theme.breakpoints.down(\"sm\")]: {\n            flexDirection: \"column\",\n            alignItems: \"flex-start\",\n            flex: 1,\n          },\n        })}\n      >\n        <div\n          style={{\n            marginTop: \"10px\",\n            marginBottom: \"12px\",\n            width: \"100%\",\n          }}\n        ></div>\n      </Box>\n      <div style={{ marginBottom: \"5px\", display: \"flex\", gap: \"10px\" }}>\n        {searchLoading ? (\n          <LoadingButton loading={searchLoading} />\n        ) : (\n          <TextField\n            label=\"Search\"\n            size=\"small\"\n            name=\"search\"\n            value={search}\n            onChange={(e: any) => {\n              setSearch(e.target.value);\n            }}\n            onKeyDown={(e) => {\n              if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n                e.preventDefault();\n\n                flushSync(() => {\n                  setSearchShow(true);\n                });\n                if (vPolicySearchInput?.current) {\n                  vPolicySearchInput.current.value = search;\n\n                  myAxios\n                    .get(\n                      `/task/production/tpl-search-vehicle-policy?form_type=${state.form_type}&form_action=${state.form_action}&search=${search}`,\n                      {\n                        headers: {\n                          Authorization: `Bearer ${user?.accessToken}`,\n                        },\n                      }\n                    )\n                    .then((res: any) => {\n                      if (!res?.data.success) {\n                        return alert(`Error : ${res?.data.message}`);\n                      }\n\n                      const response = res as any;\n                      setRows(response.data[\"searchVPolicy\"]);\n                      if (vPolicySearchInput?.current)\n                        vPolicySearchInput.current.focus();\n                    });\n                }\n              }\n            }}\n            InputProps={{\n              style: { height: \"27px\", fontSize: \"14px\" },\n            }}\n            sx={{\n              width: \"300px\",\n              height: \"27px\",\n              \".MuiFormLabel-root\": { fontSize: \"14px\" },\n              \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n            }}\n          />\n        )}\n\n        {isLoadingSubAccount ? (\n          <LoadingButton loading={isLoadingSubAccount} />\n        ) : (\n          <FormControl\n            size=\"small\"\n            sx={(theme) => ({\n              width: \"150px\",\n              \".MuiFormLabel-root\": {\n                fontSize: \"14px\",\n                background: \"white\",\n                zIndex: 99,\n                padding: \"0 3px\",\n              },\n              \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n            })}\n          >\n            <InputLabel id=\"subAccount\">Sub Account</InputLabel>\n            <Select\n              sx={{\n                height: \"27px\",\n                fontSize: \"14px\",\n              }}\n              size=\"small\"\n              labelId=\"subAccount\"\n              label=\"subAccount\"\n              name=\"sub_account\"\n              value={state.sub_account}\n              onChange={(e) => {\n                handleDateChange(\"\", \"Denomination\");\n                handleDateChange(\"\", \"PolicyAccount\");\n                handleDateChange(\"\", \"Mortgagee\");\n                handleInputChange(e);\n              }}\n            >\n              {(dataSubAccount?.data.sub_account).map(\n                (items: any, idx: number) => {\n                  return (\n                    <MenuItem key={idx} value={items.Acronym.trim()}>\n                      {items.Acronym}\n                    </MenuItem>\n                  );\n                }\n              )}\n            </Select>\n          </FormControl>\n        )}\n\n        <FormControl\n          size=\"small\"\n          sx={(theme) => ({\n            width: \"100px\",\n            \".MuiFormLabel-root\": {\n              fontSize: \"14px\",\n              background: \"white\",\n              zIndex: 99,\n              padding: \"0 3px\",\n            },\n            \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n          })}\n        >\n          <Select\n            sx={{\n              height: \"27px\",\n              fontSize: \"14px\",\n            }}\n            labelId=\"formType\"\n            name=\"form_type\"\n            value={state.form_type}\n            onChange={(e) => {\n              Swal.fire({\n                title: \"Are you sure?\",\n                text: \"You won't be able to revert this!\",\n                icon: \"warning\",\n                showCancelButton: true,\n                confirmButtonColor: \"#3085d6\",\n                cancelButtonColor: \"#d33\",\n                confirmButtonText: \"Yes, change it!\",\n              }).then((result) => {\n                if (result.isConfirmed) {\n                  initialState.form_action = state.form_action;\n                  backToDefaultState(initialState);\n                  setShowField({\n                    thirdparty: e.target.value.toLowerCase() === \"tpl\",\n                    compre: e.target.value.toLowerCase() === \"com\",\n                  });\n\n                  refetch();\n                  handleInputChange(e);\n                }\n              });\n            }}\n          >\n            {[\n              { Account: \"TPL\", show: state.form_action === \"REG\" },\n              { Account: \"COM\", show: true },\n            ].map((items: any, idx: number) => {\n              return items.show ? (\n                <MenuItem key={idx} value={items.Account}>\n                  {items.Account}\n                </MenuItem>\n              ) : null;\n            })}\n          </Select>\n        </FormControl>\n        <FormControl\n          size=\"small\"\n          sx={(theme) => ({\n            width: \"100px\",\n            \".MuiFormLabel-root\": {\n              fontSize: \"14px\",\n              background: \"white\",\n              zIndex: 99,\n              padding: \"0 3px\",\n            },\n            \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n          })}\n        >\n          <Select\n            sx={{\n              height: \"27px\",\n              fontSize: \"14px\",\n            }}\n            name=\"form_action\"\n            value={state.form_action}\n            onChange={(e) => {\n              Swal.fire({\n                title: \"Are you sure?\",\n                text: \"You won't be able to revert this!\",\n                icon: \"warning\",\n                showCancelButton: true,\n                confirmButtonColor: \"#3085d6\",\n                cancelButtonColor: \"#d33\",\n                confirmButtonText: \"Yes, change it!\",\n              }).then((result) => {\n                if (result.isConfirmed) {\n                  initialState.form_type = \"COM\";\n                  backToDefaultState(initialState);\n                  refetch();\n                  handleInputChange(e);\n\n                  if (e.target.value === \"TEMP\") {\n                    handleDateChange(\n                      dataTemp?.data.tempId[0].tempPolicy_No,\n                      \"PolicyNo\"\n                    );\n                    handleInputChange({\n                      target: { value: \"COM\", name: \"form_type\" },\n                    });\n                  }\n\n                  if (e.target.value === \"REG\") {\n                    handleDateChange(\"\", \"PolicyNo\");\n                  }\n                }\n              });\n            }}\n          >\n            <MenuItem value={\"REG\"}>REG</MenuItem>\n            {state.form_type !== \"TPL\" && (\n              <MenuItem value={\"TEMP\"}>TEMP</MenuItem>\n            )}\n          </Select>\n        </FormControl>\n        {isLoadingPolicyDetails ? (\n          <div>\n            <CircularProgress size=\"20px\" />\n          </div>\n        ) : (\n          <Button\n            disabled={state.mode !== \"delete\"}\n            variant=\"outlined\"\n            startIcon={<ArticleIcon />}\n            sx={{\n              height: \"27px\",\n              fontSize: \"11px\",\n            }}\n            onClick={() => {\n              mutatePolicyDetails({\n                PolicyNo: state.PolicyNo,\n              });\n            }}\n          >\n            Summary\n          </Button>\n        )}\n      </div>\n      {step}\n      <ModalWithTable\n        searchRef={vPolicySearchInput}\n        showModal={searchShow}\n        onCloseModal={() => {\n          setSearchShow(false);\n        }}\n        onClickCloseIcon={() => {\n          setSearchShow(false);\n        }}\n        searchOnChange={() => { }}\n        onSearchKeyEnter={(value) => {\n          myAxios\n            .get(\n              `/task/production/tpl-search-vehicle-policy?form_type=${state.form_type}&form_action=${state.form_action}&search=${value}`,\n              {\n                headers: {\n                  Authorization: `Bearer ${user?.accessToken}`,\n                },\n              }\n            )\n            .then((res: any) => {\n              if (!res?.data.success) {\n                return alert(`Error : ${res?.data.message}`);\n              }\n              const response = res as any;\n              setRows(response.data[\"searchVPolicy\"]);\n            });\n        }}\n        height={300}\n        isLoading={searchLoading}\n        queryKey={vpolicyKey}\n        columns={vpolicyColumn}\n        onCellKeyDown={(__: any, key: any) => {\n          if (key.code === \"Enter\" || key.code === \"NumpadEnter\") {\n            key.preventDefault();\n            onSearchSelected([__.row]);\n          }\n        }}\n        onSelectionChange={(rowSelectionModel, data) => {\n          if (rowSelectionModel.length <= 0) {\n            return;\n          }\n\n          const selectedIDs = new Set(rowSelectionModel);\n          const selectedRowData = data.filter((row: any) => {\n            return selectedIDs.has(row[\"PolicyNo\"].toString());\n          });\n          if (selectedRowData.length <= 0) return;\n          mutateRates({\n            Account: selectedRowData[0].Account.trim(),\n            Type: state.form_type.toUpperCase(),\n          } as any);\n\n          onSearchSelected(selectedRowData);\n        }}\n        id={\"PolicyNo\"}\n        rows={rows}\n        setRows={setRows}\n      />\n      <div\n        style={{\n          position: \"fixed\",\n          top: 0,\n          bottom: 0,\n          left: 0,\n          right: 0,\n          background: \"rgba(158, 155, 157, 0.31)\",\n          zIndex: \"999\",\n          display: showClientDetails ? \"flex\" : \"none\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n          boxShadow: \"-1px 15px 74px 38px rgba(0,0,0,0.37)\",\n        }}\n      >\n        <div\n          style={{\n            background: \"white\",\n            width: \"70%\",\n            height: \"700px\",\n            position: \"relative\",\n            padding: \"50px 20px\",\n          }}\n        >\n          <IconButton\n            sx={{\n              position: \"absolute\",\n              top: \"10px\",\n              right: \"10px\",\n            }}\n            onClick={() => setShowCLientDetails(false)}\n          >\n            <CloseIcon />\n          </IconButton>\n          <div style={{ width: \"100%\", height: \"100%\" }}>\n            <hr style={{ margin: \"5px 0\" }} />\n            <p style={{ margin: \"0\", padding: \"0\", fontWeight: \"bold\" }}>\n              Policy Details\n            </p>\n            <hr style={{ margin: \"5px 0\" }} />\n            <DisplayDetails\n              datakey={\"DateIssued\"}\n              label={\"Date Issued\"}\n              value={format(new Date(), \"yyyy/MM/dd\")}\n            />\n            <DisplayDetails\n              datakey={\"PolicyNo\"}\n              label={\"Policy No.\"}\n              value={summaryState.PolicyNo}\n            />\n            <DisplayDetails\n              datakey={\"PolicyType\"}\n              label={\"Policy Type\"}\n              value={summaryState.PolicyType}\n            />\n            <DisplayDetails\n              datakey={\"Account\"}\n              label={\"Account\"}\n              value={summaryState.Account}\n            />\n            <DisplayDetails\n              datakey={\"Mortgagee\"}\n              label={\"Mortgagee\"}\n              value={summaryState.Mortgagee}\n            />\n            <DisplayDetails\n              datakey={\"TotalDue\"}\n              label={\"Total Due\"}\n              value={parseFloat(\n                summaryState.TotalDue.toString().replace(/,/g, \"\")\n              ).toLocaleString(\"en-US\", {\n                minimumFractionDigits: 2,\n                maximumFractionDigits: 2,\n              })}\n            />\n            <DisplayDetails\n              datakey={\"sale_officer\"}\n              label={\"Sale Officer\"}\n              value={summaryState.sale_officer}\n            />\n            <hr style={{ margin: \"5px 0\" }} />\n            <p style={{ margin: \"0\", padding: \"0\", fontWeight: \"bold\" }}>\n              Client Details\n            </p>\n            <hr style={{ margin: \"5px 0\" }} />\n            <DisplayDetails\n              datakey={\"IDNo_dr\"}\n              label={\"ID NO.\"}\n              value={summaryState.IDNo}\n            />\n            <DisplayDetails\n              datakey={\"ShortName_dr\"}\n              label={\"Short Name\"}\n              value={summaryState.ShortName}\n            />\n            <DisplayDetails\n              datakey={\"subShortName_dr\"}\n              label={\"Sub Account\"}\n              value={summaryState.subShortName}\n            />\n            <DisplayDetails\n              datakey={\"mobile_dr\"}\n              label={\"Mobile\"}\n              value={summaryState.mobile}\n            />\n            <DisplayDetails\n              datakey={\"email_dr\"}\n              label={\"Email\"}\n              value={summaryState.email}\n            />\n            <DisplayDetails\n              datakey={\"address_dr\"}\n              label={\"Address\"}\n              value={summaryState.address}\n            />\n            <DisplayDetails\n              datakey={\"options_dr\"}\n              label={\"Option\"}\n              value={summaryState.options}\n            />\n            <hr style={{ margin: \"5px 0\" }} />\n            <p style={{ margin: \"0\", padding: \"0\", fontWeight: \"bold\" }}>\n              Agent Details\n            </p>\n            <hr style={{ margin: \"5px 0\" }} />\n            <DisplayDetails\n              datakey={\"agent_fullname\"}\n              label={\"Agent Name\"}\n              value={summaryState.agent_fullname}\n            />\n          </div>\n        </div>\n      </div>\n    </VehicleContext.Provider>\n  );\n}\n","import { useState, ReactElement } from \"react\";\n\nexport default function useMultipleComponent(steps: ReactElement[]) {\n  const [currentStepIndex, setCurrentStepIndex] = useState(0);\n\n  function next() {\n    setCurrentStepIndex((i) => {\n      if (i >= steps.length - 1) {\n        return i;\n      }\n      return i + 1;\n    });\n  }\n  function back() {\n    setCurrentStepIndex((i) => {\n      if (i <= 0) {\n        return i;\n      }\n      return i + 1;\n    });\n  }\n  function goTo(index: number) {\n    setCurrentStepIndex(index);\n  }\n  \n  return {\n    step: steps[currentStepIndex],\n    goTo,\n    back,\n    next,\n    isFirstStep: currentStepIndex !== 0,\n    isLastStep: currentStepIndex === steps.length - 1,\n    currentStepIndex,\n  };\n}\n"],"names":["initialClientDetailsState","ShortName","IDNo","firstname","middlename","company","address","options","sub_account","createdAt","updatedAt","contact_details_id","description","remarks","VAT_Type","tin_no","Sub_Acct","Description","Acronym","update","email","mobile","telephone","reducer","state","action","type","_objectSpread","_defineProperty","field","value","PolicyInformation","_queryFn","_mutationFn","_useContext","useContext","VehicleContext","handleInputChange","handleDateChange","myAxios","user","isAddOrEditMode","isLoadingTempId","mutateRates","_useReducer","useReducer","_useReducer2","_slicedToArray","clientDetailsState","dispatch","_useState","useState","_useState2","showClientDetails","setShowCLientDetails","periodInsuranceDateRef","useRef","dateToDateRef","dateIssuedDateRef","searchClientInputRef","searchAgentInputRef","searchTPLInputRef","handleChangeRef","_useQuery","useQuery","queryKey","queryFn","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","get","headers","Authorization","concat","accessToken","abrupt","sent","stop","apply","arguments","dataPolicyAccount","data","isLoadingPolicyAccount","isLoading","_useMutation","useMutation","mutationKey","mutationFn","_x","_callee2","variable","_context2","post","onSuccess","res","response","obj","Object","entries","forEach","_ref2","_ref3","setNewStateValue","clients","isLoadingClientDetails","mutateDetails","mutate","_useQueryModalTable","useQueryModalTable","link","url","queryUrlName","columns","headerName","width","flex","uniqueId","responseDataKey","onSelected","selectedRowData","entry_client_id","fullname","sale_officer","closeCliendIDsModal","onCellKeyDown","__","key","code","row","searchRef","ModalClientIDs","ModalComponent","openCliendIDsModal","openModal","isLoadingClientIdsModal","closeModal","_useQueryModalTable2","entry_agent_id","closeModalAgentId","ModalAgentId","openModalAgentId","isLoadingModalAgentId","_useQueryModalTable3","Source_No","Cost","Source_No_Ref_ID","closeModalTPLId","ModalTPLId","openModalTPLId","isLoadingModalTPLId","useEffect","form_action","department","Account","Type","form_type","toUpperCase","current","target","name","DisplayDetails","_ref","datakey","label","_jsxs","style","display","children","_jsx","htmlFor","border","padding","defaultValue","id","readOnly","gap","flexDirection","borderRadius","color","columnGap","LoadingButton","loading","FormControl","variant","size","disabled","sx","fontSize","background","zIndex","top","InputLabel","OutlinedInput","height","fullWidth","client_id","onChange","onKeyDown","e","preventDefault","endAdornment","InputAdornment","position","IconButton","edge","onClick","PersonSearchIcon","CircularProgress","Button","startIcon","PersonOutlineIcon","userId","TextField","client_name","InputProps","rows","multiline","client_address","flexWrap","agent_id","agent_name","marginTop","gridTemplateColumns","gridArea","Select","labelId","PolicyAccount","trim","policy_account","map","items","idx","MenuItem","toLowerCase","React","PolicyNo","PolicyIcon","CCN","ORN","CustomDatePicker","newDate","Date","newDatePlusOneYear","addYears","DateFrom","timeout","setTimeout","_periodInsuranceDateR","_periodInsuranceDateR2","querySelector","click","clearTimeout","datePickerRef","textField","InputLabelProps","DateTo","_dateToDateRef$curren","_dateToDateRef$curren2","DateIssued","_dateIssuedDateRef$cu","_dateIssuedDateRef$cu2","Model","Make","TB","Color","BLTFileNo","PlateNo","ChassisNo","MotorNo","AuthorizedCapacity","UnladenWeigth","bottom","left","right","justifyContent","alignItems","boxShadow","CloseIcon","margin","fontWeight","subShortName","PolicyPremium","tplCompuation","comComputation","JSON","parse","MortgageeForm","Mortgagee","text","setText","dataMortgagee","isLoadingMortgagee","onKeyDownComputation","Box","rowGap","FormGroup","FormControlLabel","control","Checkbox","checked","required","_toConsumableArray","mortgagee","overflowY","maxHeight","Typography","SectionI_II","placeholder","inputComponent","NumericFormatCustom","onBlur","parseFloat","toFixed","SectionIII","OwnDamage","Theft","SectionIVA","SectionIVB","PremiumOther","AOGPercent","AOG","Divider","TotalPremium","Vat","DocStamp","LocalGovTaxPercent","LocalGovTax","StradCom","TotalDue","rateOption_","tplTypeOption_","PremuimPaid","PolicyTypeDetails","showField","parseStringToNumber","domination","isLoadingrates","calculateDeductible","vehicle","towing","EVSV","replace","Deductible","autorizeRepairComputation","DeductibleInput","TowingInput","Towing","Math","abs","marginY","thirdparty","TplType","selected","filter","PremiumPaid","theme","Aircon","Stereo","Magwheels","OthersDesc","backgroundColor","boxSizing","OthersRate","marginBottom","ARL","Autocomplete","BodyInjury","event","freeSolo","disableClearable","option","getOptionLabel","renderInput","params","number","isNaN","formattedNumberUS","toLocaleString","minimumFractionDigits","maximumFractionDigits","PropertyDamage","PersinalAccident","Denomination","CustomButton","styled","button","_templateObject","_taggedTemplateLiteral","props","currentStepIndex","index","initialState","agent_com","rateCost","CompreType","mode","initialSummaryState","PolicyType","agent_fullname","createContext","queryKeySearch","queryKeyUpdateAdd","queryKeyGet","querySearchPolicyIds","vpolicyColumn","vpolicyKey","VehiclePolicy","_queryFn2","_queryFn3","_mutationFn2","_mutationFn3","_mutationFn4","_useState3","_useState4","setDomination","_useMultipleComponent","useMultipleComponent","step","goTo","summaryState","summaryDispatch","_useReducer3","_useReducer4","AuthContext","_useState5","_useState6","setRows","_useState7","_useState8","tplId","setTplId","_useState9","_useState10","search","setSearch","_useState11","_useState12","searchShow","setSearchShow","_useState13","_useState14","setMortgagee","_useState15","compre","_useState16","setShowField","newButtonRef","cancelButtonRef","deleteButtonRef","vPolicySearchInput","queryClient","useQueryClient","onSearchSelected","_selectedRowData$","SubAcct","LGovTax","Misc","AgentID","AgentCom","CoverNo","ORNo","BodyType","AuthorizedCap","UnladenWeight","EstimatedValue","Others","OthersAmount","RepairLimit","BodilyInjury","PersonalAccident","SecI","SecIIPercent","ODamage","Sec4A","Sec4B","Sec4C","client_fullname","TPLTypeSection_I_II","Remarks","formatTextNumber","input","userInput","toString","setFixValue","parseInt","dataTemp","_useQuery2","_res$data","searchVPolicy","searchLoading","refetch","_useQuery3","_callee3","_context3","dataSubAccount","isLoadingSubAccount","_callee4","variables","_context4","console","log","success","Promise","all","invalidateQueries","Swal","icon","title","message","showConfirmButton","timer","then","getNumbers","split","inc","getZero","slice","length","backToDefaultState","loadingAddNew","_useMutation2","_x2","_callee5","_context5","mutateDelete","loadingDelete","_useMutation3","_x3","_callee6","_context6","rates","_useMutation4","_x4","_callee7","_context7","_ref4","_ref5","policyDetails","isLoadingPolicyDetails","mutatePolicyDetails","setDefaultValueForNumber","useCallback","handleOnSave","undefined","showCancelButton","result","isConfirmed","window","open","codeCondfirmationAlert","isUpdate","cb","userCodeConfirmation","saveCondfirmationAlert","isConfirm","handleKeyDown","_newButtonRef$current","_cancelButtonRef$curr","_deleteButtonRef$curr","keyCode","document","addEventListener","removeEventListener","_e$target","parsedNumber","json","formatNumberWithTwoDecimals","includes","parts","integerPart","decimalPart","tempId","tempPolicy_No","ctrlKey","metaKey","Provider","vatResult","dsResult","lgtResult","totalResult","round","lgtPercentage","section","aogPercent","owmDamageResult","aogDamageResult","totalPremiumResult","totalDuePremiumResult","keySave","NavigateNextIcon","marginLeft","ref","AddIcon","SaveIcon","confirmButtonColor","cancelButtonColor","confirmButtonText","pink","DeleteIcon","breakpoints","down","flushSync","alert","focus","show","ArticleIcon","ModalWithTable","showModal","onCloseModal","onClickCloseIcon","searchOnChange","onSearchKeyEnter","onSelectionChange","rowSelectionModel","selectedIDs","Set","has","format","steps","setCurrentStepIndex","back","i","isFirstStep","isLastStep"],"sourceRoot":""}