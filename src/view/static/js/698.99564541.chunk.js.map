{"version":3,"file":"static/js/698.99564541.chunk.js","mappings":"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","sources":["components/Helmet.tsx","feautures/Admin/Task/Accounting/Deposit.tsx","lib/confirmationAlert.ts","../node_modules/@mui/icons-material/AccountBalance.js","../node_modules/@mui/lab/LoadingButton/loadingButtonClasses.js","../node_modules/@mui/lab/LoadingButton/LoadingButton.js"],"sourcesContent":["\r\nimport { Helmet } from \"react-helmet\";\r\n\r\nconst PageHelmet = ({ title = '' }: { title: string }) => {\r\n    const imgUrl = process.env.REACT_APP_IMAGE_URL;\r\n    const department = process.env.REACT_APP_DEPARTMENT\r\n    return (\r\n        <Helmet>\r\n            <title>{`${department} - ${title}`}</title>\r\n            <link rel=\"icon\" type=\"image/png\" href={`${imgUrl}/logo.png`} />\r\n        </Helmet>\r\n    );\r\n};\r\n\r\nexport default PageHelmet;","import {\n  useState,\n  createContext,\n  useContext,\n  CSSProperties,\n  useEffect,\n  useRef,\n  forwardRef,\n  Fragment,\n  useImperativeHandle,\n} from \"react\";\nimport { useMutation, useQuery } from \"react-query\";\nimport { AuthContext } from \"../../../../components/AuthContext\";\nimport { Button } from \"@mui/material\";\nimport useQueryModalTable from \"../../../../hooks/useQueryModalTable\";\nimport LoadingButton from \"@mui/lab/LoadingButton\";\nimport AddIcon from \"@mui/icons-material/Add\";\nimport SaveIcon from \"@mui/icons-material/Save\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport Swal from \"sweetalert2\";\nimport { wait } from \"@testing-library/user-event/dist/utils\";\nimport {\n  codeCondfirmationAlert,\n  saveCondfirmationAlert,\n} from \"../../../../lib/confirmationAlert\";\nimport { TextInput } from \"../../../../components/UpwardFields\";\nimport { format } from \"date-fns\";\nimport AutorenewIcon from \"@mui/icons-material/Autorenew\";\nimport AccountBalanceIcon from \"@mui/icons-material/AccountBalance\";\nimport \"../../../../style/laoding.css\";\nimport PageHelmet from \"../../../../components/Helmet\";\nimport SearchIcon from \"@mui/icons-material/Search\";\nimport { useUpwardTableModalSearchSafeMode } from \"../../../../components/DataGridViewReact\";\nimport { formatNumber } from \"./ReturnCheck\";\n\nconst defaultCashBreakDown = [\n  { value1: \"1,000.00\", value2: \"\", value3: \"0.00\" },\n  { value1: \"500.00\", value2: \"\", value3: \"0.00\" },\n  { value1: \"200.00\", value2: \"\", value3: \"0.00\" },\n  { value1: \"100.00\", value2: \"\", value3: \"0.00\" },\n  { value1: \"50.00\", value2: \"\", value3: \"0.00\" },\n  { value1: \"20.00\", value2: \"\", value3: \"0.00\" },\n  { value1: \"10.00\", value2: \"\", value3: \"0.00\" },\n  { value1: \"5.00\", value2: \"\", value3: \"0.00\" },\n  { value1: \"2.00\", value2: \"\", value3: \"0.00\" },\n  { value1: \"1.00\", value2: \"\", value3: \"0.00\" },\n  { value1: \".50\", value2: \"\", value3: \"0.00\" },\n  { value1: \".25\", value2: \"\", value3: \"0.00\" },\n  { value1: \".10\", value2: \"\", value3: \"0.00\" },\n  { value1: \".05\", value2: \"\", value3: \"0.00\" },\n  { value1: \".01\", value2: \"\", value3: \"0.00\" },\n];\n\nconst cashColumns = [\n  {\n    key: \"OR_No\",\n    label: \"OR No.\",\n    width: 270,\n  },\n  {\n    key: \"OR_Date\",\n    label: \"OR Date\",\n    width: 270,\n  },\n  {\n    key: \"Amount\",\n    label: \"Amount\",\n    width: 200,\n    type: \"number\",\n    cellClassName: \"super-app-theme--cell\",\n  },\n  {\n    key: \"Client_Name\",\n    label: \"Client Name\",\n    flex: 1,\n    width: 540,\n  },\n  {\n    key: \"DRCode\",\n    label: \"DRCode\",\n    hide: true,\n  },\n  {\n    key: \"ID_No\",\n    label: \"ID_No\",\n    hide: true,\n  },\n  {\n    key: \"Short\",\n    label: \"Short\",\n    hide: true,\n  },\n  {\n    key: \"Temp_OR\",\n    label: \"Temp_OR\",\n    hide: true,\n  },\n];\n\nconst checkColumns = [\n  {\n    key: \"OR_No\",\n    label: \"OR No.\",\n    width: 170,\n  },\n  {\n    key: \"OR_Date\",\n    label: \"OR Date\",\n    width: 170,\n  },\n  {\n    key: \"Check_No\",\n    label: \"Check No\",\n    width: 170,\n  },\n  {\n    key: \"Check_Date\",\n    label: \"Check Date\",\n    width: 170,\n  },\n  {\n    key: \"Amount\",\n    label: \"Amount\",\n    width: 160,\n    align: \"right\",\n    type: \"number\",\n  },\n  {\n    key: \"Bank_Branch\",\n    label: \"Bank/Branch\",\n    width: 300,\n  },\n  {\n    key: \"Client_Name\",\n    label: \"Client Name\",\n    width: 300,\n  },\n  {\n    key: \"Temp_OR\",\n    hide: true,\n  },\n  {\n    key: \"DRCode\",\n    hide: true,\n  },\n  {\n    key: \"DRRemarks\",\n    hide: true,\n  },\n  {\n    key: \"ID_No\",\n    hide: true,\n  },\n  {\n    key: \"Short\",\n    hide: true,\n  },\n  {\n    key: \"SlipCode\",\n    hide: true,\n  },\n];\n\nconst selectedCollectionColumns = [\n  { key: \"Deposit\", label: \"Deposit\", width: 170 },\n  { key: \"Check_No\", label: \"Check No\", width: 170 },\n  {\n    key: \"Check_Date\",\n    label: \"Check Date\",\n    width: 170,\n  },\n  { key: \"Bank\", label: \"Bank/Branch\", width: 200 },\n  {\n    key: \"Amount\",\n    label: \"Amount\",\n    width: 170,\n    type: \"number\",\n  },\n  { key: \"Name\", label: \"Client Name\", width: 400 },\n  // hide\n  { key: \"DRCode\", label: \"DRCode\", hide: true },\n  { key: \"ORNo\", label: \"ORNo\", hide: true },\n  { key: \"DRRemarks\", label: \"DRRemarks\", hide: true },\n  { key: \"IDNo\", label: \"IDNo\", hide: true },\n  { key: \"TempOR\", label: \"TempOR\", hide: true },\n  { key: \"Short\", label: \"Short\", hide: true },\n];\n\n\nconst selectedCollectionForDeposit = [\n  {\n    key: \"Bank\",\n    label: \"Bank/Branch\",\n    width: 170,\n  },\n  {\n    key: \"Check_No\",\n    label: \"Check No\",\n    width: 170,\n  },\n  {\n    key: \"Amount\",\n    label: \"Amount\",\n    width: 300,\n    type: \"number\",\n  },\n]\nexport const reducer = (state: any, action: any) => {\n  switch (action.type) {\n    case \"UPDATE_FIELD\":\n      return {\n        ...state,\n        [action.field]: action.value,\n      };\n    default:\n      return state;\n  }\n};\n\nconst DepositContext = createContext<any>({\n  cashCollection: [],\n  setCashCollection: () => {},\n  checkCollection: [],\n  setCheckCollection: () => {},\n  selectedCollection: [],\n  setSelectedCollection: () => {},\n  collectionForDeposit: [],\n  setCollectionForDeposit: () => {},\n  tableRows: [],\n  updateTableRowsInput: () => {},\n  LoadingCashTable: false,\n  LoadingCheckTable: false,\n  setTotal: () => {},\n  total: \"0.00\",\n  TotalCashForDeposit: \"0.00\",\n  loadingSearchByDepositSlip: false,\n});\n\nexport default function Deposit() {\n  const [activeTab, setActiveTab] = useState(0);\n  const [buttonPosition, setButtonPosition] = useState<any>({});\n  const buttonsRef = useRef<Array<HTMLButtonElement | null>>([]);\n\n  const cashTable = useRef<any>(null);\n  const checkTable = useRef<any>(null);\n  const selectedTable = useRef<any>(null);\n  const collectionCheckTable = useRef<any>(null);\n\n  const inputSearchRef = useRef<HTMLInputElement>(null);\n  const refSlipCode = useRef<HTMLInputElement>(null);\n  const refDateDepo = useRef<HTMLInputElement>(null);\n  const refBankAcctCode = useRef<HTMLInputElement>(null);\n  const refBankAcctName = useRef<HTMLInputElement>(null);\n\n  const bankDepositSearch = useRef<HTMLInputElement>(null);\n  const _refTempSlipCode = useRef<string>(\"\");\n\n  const refBankAcctCodeTag = useRef(\"\");\n  const refBankAcctNameTag = useRef(\"\");\n  const refAcctID = useRef(\"\");\n  const refAcctName = useRef(\"\");\n  const refClassification = useRef(\"\");\n  const refSubAccount = useRef(\"\");\n  const refShortName = useRef(\"\");\n\n  const { myAxios, user } = useContext(AuthContext);\n  const { goTo } = useMultipleComponent([0, 1, 2, 3]);\n  const [cashCollection, setCashCollection] = useState<any>([]);\n  const [checkCollection, setCheckCollection] = useState<any>([]);\n  const [selectedRows, setSelectedRows] = useState<any>([]);\n  const [collectionForDeposit, setCollectionForDeposit] = useState<any>([]);\n  const [tableRowsInputValue, setTableRowsInputValue] =\n    useState<Array<{ value1: string; value2: string; value3: string }>>(\n      defaultCashBreakDown\n    );\n\n  const [selectedRowsCashIndex, setSelectedRowsCashIndex] = useState<any>([]);\n  const [selectedRowsCheckedIndex, setSelectedRowsCheckedIndex] = useState<any>(\n    []\n  );\n\n  const [depositMode, setDepositMode] = useState(\"\");\n  const [total, setTotal] = useState(\"0.00\");\n  const [totalCheck, setTotalCheck] = useState(\"0.00\");\n\n  const disabledFields = depositMode === \"\";\n\n  const TotalCashForDeposit = selectedRows\n    .reduce((accumulator: number, currentValue: any) => {\n      const dd =\n        currentValue.Check_No || currentValue.Check_No !== \"\"\n          ? 0\n          : parseFloat(currentValue.Amount.replace(/,/g, \"\"));\n      return accumulator + dd;\n    }, 0.0)\n    .toLocaleString(\"en-US\", {\n      minimumFractionDigits: 2,\n      maximumFractionDigits: 2,\n    });\n  const updateTableRowsInput = (\n    fields: { value1: string; value2: string; value3: string },\n    idx: number\n  ) => {\n    setTableRowsInputValue((d) => {\n      return d.map((item, index) => {\n        if (idx === index) {\n          item = { ...item, ...fields };\n        }\n        return item;\n      });\n    });\n  };\n  const { isLoading: LoadingDepositSlipCode, refetch: RefetchDepositSlipCode } =\n    useQuery({\n      queryKey: \"deposit-slipcode\",\n      queryFn: async () =>\n        await myAxios.get(`/task/accounting/get-deposit-slipcode`, {\n          headers: {\n            Authorization: `Bearer ${user?.accessToken}`,\n          },\n        }),\n      refetchOnWindowFocus: false,\n      onSuccess: (data) => {\n        const response = data as any;\n        wait(100).then(() => {\n          if (refSlipCode.current) {\n            refSlipCode.current.value = response.data.slipcode[0].collectionID;\n            _refTempSlipCode.current = response.data.slipcode[0].collectionID;\n          }\n        });\n      },\n    });\n\n  const { mutate: addDepositMutation, isLoading: addDepositMutationLoading } =\n    useMutation({\n      mutationKey: \"add-deposit\",\n      mutationFn: async (variables: any) => {\n        return await myAxios.post(\"/task/accounting/add-deposit\", variables, {\n          headers: {\n            Authorization: `Bearer ${user?.accessToken}`,\n          },\n        });\n      },\n      onSuccess: (res) => {\n        const resposnse = res as any;\n        if (resposnse.data.success) {\n          wait(100).then(() => {\n            resetTables();\n            resetRefs();\n            setTableRowsInputValue(defaultCashBreakDown);\n            setSelectedRows([]);\n            setCollectionForDeposit([]);\n            setSelectedRowsCashIndex([]);\n            setSelectedRowsCheckedIndex([]);\n\n            refetchCashCollection();\n            refetchCheckCollection();\n            RefetchDepositSlipCode();\n            setDepositMode(\"\");\n            goTo(0);\n          });\n\n          return Swal.fire({\n            position: \"center\",\n            icon: \"success\",\n            title: resposnse.data.message,\n            timer: 1500,\n          });\n        }\n        return Swal.fire({\n          position: \"center\",\n          icon: \"warning\",\n          title: resposnse.data.message,\n          timer: 1500,\n        });\n      },\n    });\n  const {\n    mutate: updateDepositMutation,\n    isLoading: updateDepositMutationLoading,\n  } = useMutation({\n    mutationKey: \"update-deposit\",\n    mutationFn: async (variables: any) => {\n      return await myAxios.post(\"/task/accounting/update-deposit\", variables, {\n        headers: {\n          Authorization: `Bearer ${user?.accessToken}`,\n        },\n      });\n    },\n    onSuccess: (res) => {\n      const resposnse = res as any;\n      if (resposnse.data.success) {\n        wait(100).then(() => {\n          resetTables();\n          resetRefs();\n          setTableRowsInputValue(defaultCashBreakDown);\n          setSelectedRows([]);\n          setCollectionForDeposit([]);\n          setSelectedRowsCashIndex([]);\n          setSelectedRowsCheckedIndex([]);\n\n          refetchCashCollection();\n          refetchCheckCollection();\n          RefetchDepositSlipCode();\n          setDepositMode(\"\");\n          goTo(0);\n        });\n        return Swal.fire({\n          position: \"center\",\n          icon: \"success\",\n          title: resposnse.data.message,\n          timer: 1500,\n        });\n      }\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: resposnse.data.message,\n        timer: 1500,\n      });\n    },\n  });\n  const { mutate: searchByDepositSlip, isLoading: loadingSearchByDepositSlip } =\n    useMutation({\n      mutationKey: \"search-deposit-cash-check\",\n      mutationFn: async (variables: any) => {\n        return await myAxios.post(\n          \"/task/accounting/search-cash-check\",\n          variables,\n          {\n            headers: {\n              Authorization: `Bearer ${user?.accessToken}`,\n            },\n          }\n        );\n      },\n      onSuccess: (res) => {\n        const obj = res.data.data.obj;\n        const cash = res.data.data.cash;\n        const check = res.data.data.checks;\n        const cash_breakdown = res.data.data.cash_breakdown;\n\n        console.log(cash_breakdown)\n        setCashCollection([]);\n        setCheckCollection([]);\n        setSelectedRows([]);\n        setCollectionForDeposit([]);\n        setTableRowsInputValue([]);\n        wait(100).then(() => {\n          collectionCheckTable.current.resetTable();\n          selectedTable.current.resetTable();\n          cashTable.current.resetTable();\n          checkTable.current.resetTable();\n\n          if (refBankAcctCode.current)\n            refBankAcctCode.current.value = obj.refBankAcctCode;\n          if (refBankAcctName.current)\n            refBankAcctName.current.value = obj.refBankAcctName;\n          if (refDateDepo.current)\n            refDateDepo.current.value = format(\n              new Date(obj.refDate),\n              \"yyyy-MM-dd\"\n            );\n\n          refBankAcctCodeTag.current = obj?.refBankAcctCodeTag;\n          refBankAcctNameTag.current = obj?.refBankAcctNameTag;\n          refAcctID.current = obj?.refAcctID;\n          refAcctName.current = obj?.refAcctName;\n          refShortName.current = obj?.client_name;\n          refClassification.current = obj?.refClassification;\n          refSubAccount.current = obj?.refSubAccount;\n\n          cashTable.current.setDataFormated(cash);\n          checkTable.current.setDataFormated(check);\n          setCashCollection(cash);\n          setCheckCollection(check);\n          setTableRowsInputValue(cash_breakdown);\n\n          setTimeout(() => {\n            cash.forEach((d: any, idx: number) => {\n              if (\n                refSlipCode.current &&\n                d.SlipCode === refSlipCode.current.value\n              ) {\n                const row = cashTable.current\n                  .parentElement()\n                  .querySelector(`.tr-row-${idx}`);\n                const col = row.querySelectorAll(\"td\")[0];\n                const checkbox = col.querySelector(\"input\") as HTMLInputElement;\n                if (checkbox) {\n                  checkbox.click();\n                }\n              }\n            });\n\n            check.forEach((d: any, idx: number) => {\n              if (\n                refSlipCode.current &&\n                d.SlipCode === refSlipCode.current.value\n              ) {\n                const row = checkTable.current\n                  .parentElement()\n                  .querySelector(`.tr-row-${idx}`);\n                const col = row.querySelectorAll(\"td\")[0];\n                const checkbox = col.querySelector(\"input\") as HTMLInputElement;\n                if (checkbox) {\n                  checkbox.click();\n                }\n              }\n            });\n            wait(300).then(() => {\n              setTotalCheck(\n                formatNumber(\n                  check\n                    .filter(\n                      (d: any) => d.SlipCode === refSlipCode.current?.value\n                    )\n                    .reduce((t: any, itm: any) => {\n                      return (t += parseFloat(\n                        itm.Amount.toString().replace(/,/g, \"\")\n                      ));\n                    }, 0)\n                )\n              );\n            });\n          }, 200);\n        });\n      },\n    });\n\n  const { isLoading: loadingCashCollection, refetch: refetchCashCollection } =\n    useQuery({\n      queryKey: \"get-cash-collection\",\n      queryFn: async () =>\n        await myAxios.get(`/task/accounting/get-cash-collection`, {\n          headers: {\n            Authorization: `Bearer ${user?.accessToken}`,\n          },\n        }),\n      onSuccess: (data) => {\n        const response = data as any;\n        if (depositMode === \"edit\") {\n          setCashCollection((d: any) => {\n            const filteredData = d.filter((itm: any) => {\n              return (\n                refSlipCode.current &&\n                itm.SlipCode === refSlipCode.current.value\n              );\n            });\n            return [...response.data.cash, ...filteredData];\n          });\n        } else {\n          setCashCollection(response.data.cash);\n          wait(100).then(() => {\n            cashTable.current.setDataFormated(response.data.cash);\n          });\n        }\n      },\n    });\n  const { isLoading: loadingCheckCollection, refetch: refetchCheckCollection } =\n    useQuery({\n      queryKey: \"get-check-collection\",\n      queryFn: async () =>\n        await myAxios.get(`/task/accounting/get-check-collection`, {\n          headers: {\n            Authorization: `Bearer ${user?.accessToken}`,\n          },\n        }),\n      onSuccess: (data) => {\n        const response = data as any;\n        if (depositMode === \"edit\") {\n          setCashCollection((d: any) => {\n            const filteredData = d.filter((itm: any) => {\n              return (\n                refSlipCode.current &&\n                itm.SlipCode === refSlipCode.current.value\n              );\n            });\n            return [...response.data.check, ...filteredData];\n          });\n        } else {\n          setCheckCollection(response.data.check);\n          wait(100).then(() => {\n            checkTable.current.setDataFormated(response.data.check);\n          });\n        }\n      },\n    });\n  const handleOnSave = (e: any) => {\n    e.preventDefault();\n    if (\n      refBankAcctCode.current &&\n      refBankAcctCode.current?.value.length >= 200\n    ) {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: \"Bank Account is too long!\",\n        timer: 1500,\n      });\n    }\n    if (refBankAcctCode.current && refBankAcctCode.current?.value === \"\") {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: \"Please provide bank account\",\n        timer: 1500,\n      }).then((result) => {\n        wait(350).then(() => {\n          bankOpenModal(refBankAcctCode.current?.value);\n        });\n      });\n    }\n    if (selectedRows.length <= 0) {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: \"No selected collection to be deposit\",\n        timer: 1500,\n      });\n    }\n    if (TotalCashForDeposit.trim() !== total.trim()) {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: \"Cash breakdown is not balance\",\n        timer: 1500,\n      });\n    }\n    const state = {\n      depositSlip: refSlipCode.current?.value,\n      depositdate: refDateDepo.current?.value,\n      BankAcctCode: refBankAcctCode.current?.value,\n      BankAcctName: refBankAcctName.current?.value,\n      BankAcctCodeTag: refBankAcctCodeTag.current,\n      BankAcctNameTag: refBankAcctNameTag.current,\n      AcctID: refAcctID.current,\n      AcctName: refAcctName.current,\n      Classification: refClassification.current,\n      SubAccount: refSubAccount.current,\n      ShortName: refShortName.current,\n    };\n\n    console.log({\n      ...state,\n      selectedCollection: JSON.stringify(selectedRows),\n      tableRowsInputValue: JSON.stringify(tableRowsInputValue),\n    });\n\n    if (depositMode === \"edit\") {\n      codeCondfirmationAlert({\n        isUpdate: true,\n        cb: (userCodeConfirmation) => {\n          updateDepositMutation({\n            ...state,\n            userCodeConfirmation,\n            selectedCollection: JSON.stringify(selectedRows),\n            tableRowsInputValue: JSON.stringify(tableRowsInputValue),\n          });\n        },\n      });\n    } else {\n      saveCondfirmationAlert({\n        isConfirm: () => {\n          addDepositMutation({\n            ...state,\n            selectedCollection: JSON.stringify(selectedRows),\n            tableRowsInputValue: JSON.stringify(tableRowsInputValue),\n          });\n        },\n      });\n    }\n  };\n  function resetRefs() {\n    if (refBankAcctCode.current) {\n      refBankAcctCode.current.value = \"\";\n    }\n    if (refBankAcctName.current) {\n      refBankAcctName.current.value = \"\";\n    }\n    if (bankDepositSearch.current) bankDepositSearch.current.value = \"\";\n    refBankAcctCodeTag.current = \"\";\n    refBankAcctNameTag.current = \"\";\n    refAcctID.current = \"\";\n    refAcctName.current = \"\";\n    refClassification.current = \"\";\n    refSubAccount.current = \"\";\n    refShortName.current = \"\";\n  }\n  function resetTables() {\n    cashTable.current.resetTable();\n    checkTable.current.resetTable();\n    selectedTable.current.resetTable();\n    collectionCheckTable.current.resetTable();\n    setTotalCheck(\"0.00\");\n  }\n  const {\n    UpwardTableModalSearch: DepositUpwardTableModalSearch,\n    openModal: depositOpenModal,\n    closeModal: depositCloseModal,\n  } = useUpwardTableModalSearchSafeMode({\n    size: \"medium\",\n    link: \"/task/accounting/search-deposit\",\n    column: [\n      { key: \"Date\", label: \"Date\", width: 150 },\n      { key: \"SlipCode\", label: \"Slip Code\", width: 170 },\n      {\n        key: \"BankAccount\",\n        label: \"Bank Account\",\n        width: 170,\n      },\n      {\n        key: \"AccountName\",\n        label: \"Account Name\",\n        flex: 1,\n      },\n    ],\n    getSelectedItem: async (rowItm: any, _: any, rowIdx: any, __: any) => {\n      if (rowItm) {\n        setDepositMode(\"edit\");\n        searchByDepositSlip({ SlipCode: rowItm[1] });\n        wait(100).then(() => {\n          if (refSlipCode.current) {\n            refSlipCode.current.value = rowItm[1];\n          }\n        });\n        depositCloseModal();\n      }\n    },\n  });\n  const {\n    UpwardTableModalSearch: BankUpwardTableModalSearch,\n    openModal: bankOpenModal,\n    closeModal: bankCloseModal,\n  } = useUpwardTableModalSearchSafeMode({\n    link: \"/task/accounting/getBanks\",\n    column: [\n      { key: \"Account_Type\", label: \"Account_Type\", width: 80 },\n      { key: \"Account_No\", label: \"Account_No\", width: 130 },\n      {\n        key: \"Account_Name\",\n        label: \"Account_Name\",\n        width: 200,\n      },\n      {\n        key: \"IDNo\",\n        label: \"\",\n        width: 0,\n        hide: true,\n      },\n      {\n        key: \"Desc\",\n        label: \"\",\n        width: 0,\n        hide: true,\n      },\n      {\n        key: \"Account_ID\",\n        label: \"\",\n        width: 0,\n        hide: true,\n      },\n      {\n        key: \"Short\",\n        label: \"\",\n        width: 0,\n        hide: true,\n      },\n      {\n        key: \"client_name\",\n        label: \"\",\n        width: 0,\n        hide: true,\n      },\n      {\n        key: \"Sub_Acct\",\n        label: \"\",\n        width: 0,\n        hide: true,\n      },\n      {\n        key: \"ShortName\",\n        label: \"\",\n        width: 0,\n        hide: true,\n      },\n    ],\n    getSelectedItem: async (rowItm: any, _: any, rowIdx: any, __: any) => {\n      if (rowItm) {\n        wait(100).then(() => {\n          if (refBankAcctCode.current)\n            refBankAcctCode.current.value = rowItm[1]; // selectedRowData[0]?.Account_No;\n          if (refBankAcctName.current)\n            refBankAcctName.current.value = rowItm[2]; // selectedRowData[0]?.Account_Name;\n\n          refBankAcctCodeTag.current = rowItm[3]; // selectedRowData[0]?.IDNo;\n          refBankAcctNameTag.current = rowItm[4]; // selectedRowData[0]?.Desc;\n          refAcctID.current = rowItm[5]; //selectedRowData[0]?.Account_ID;\n          refAcctName.current = rowItm[6]; //selectedRowData[0]?.Short;\n          refShortName.current = rowItm[7]; //selectedRowData[0]?.client_name;\n          refClassification.current = rowItm[8]; //selectedRowData[0]?.Sub_Acct;\n          refSubAccount.current = rowItm[9]; //selectedRowData[0]?.ShortName;\n        });\n        bankCloseModal();\n      }\n    },\n  });\n\n  useEffect(() => {\n    setButtonPosition(buttonsRef.current[0]?.getBoundingClientRect());\n  }, []);\n\n  const tabs = [\n    {\n      id: 0,\n      label: \"Cash Collection\",\n      content: <CashCollection />,\n    },\n    {\n      id: 1,\n      label: \"Check Collection\",\n      content: <CheckCollection />,\n    },\n    {\n      id: 2,\n      label: \"Selected Collection\",\n      content: <SelectedCollection />,\n    },\n    {\n      id: 3,\n      label: \"Collection for Deposit\",\n      content: <CollectionForDeposit />,\n    },\n  ];\n\n  return (\n    <>\n      <PageHelmet title=\"Deposit\" />\n      <DepositUpwardTableModalSearch />\n      <BankUpwardTableModalSearch />\n      <div\n        style={{\n          display: \"flex\",\n          flexDirection: \"column\",\n          width: \"100%\",\n          height: \"100%\",\n          flex: 1,\n          padding: \"5px\",\n          background: \"#F1F1F1\",\n        }}\n      >\n        <div\n          style={{\n            display: \"flex\",\n            alignItems: \"center\",\n            columnGap: \"5px\",\n            marginBottom: \"10px\",\n          }}\n        >\n          <TextInput\n            label={{\n              title: \"Search: \",\n              style: {\n                fontSize: \"12px\",\n                fontWeight: \"bold\",\n                width: \"50px\",\n              },\n            }}\n            input={{\n              className: \"search-input-up-on-key-down\",\n              type: \"search\",\n              onKeyDown: (e) => {\n                if (e.key === \"Enter\" || e.key === \"NumpadEnter\") {\n                  e.preventDefault();\n                  depositOpenModal(inputSearchRef.current?.value);\n                }\n              },\n              style: { width: \"500px\" },\n            }}\n            icon={<SearchIcon sx={{ fontSize: \"18px\" }} />}\n            onIconClick={(e) => {\n              e.preventDefault();\n              if (inputSearchRef.current)\n                depositOpenModal(inputSearchRef.current.value);\n            }}\n            inputRef={inputSearchRef}\n          />\n          {disabledFields && (\n            <Button\n              sx={{\n                height: \"22px\",\n                fontSize: \"11px\",\n              }}\n              variant=\"contained\"\n              startIcon={<AddIcon sx={{ width: 15, height: 15 }} />}\n              id=\"entry-header-save-button\"\n              onClick={() => {\n                setDepositMode(\"add\");\n              }}\n            >\n              New\n            </Button>\n          )}\n          <LoadingButton\n            sx={{\n              height: \"22px\",\n              fontSize: \"11px\",\n            }}\n            id=\"save-entry-header\"\n            color=\"primary\"\n            variant=\"contained\"\n            type=\"submit\"\n            onClick={handleOnSave}\n            disabled={disabledFields}\n            startIcon={<SaveIcon sx={{ width: 15, height: 15 }} />}\n            loading={updateDepositMutationLoading || addDepositMutationLoading}\n          >\n            Save\n          </LoadingButton>\n          {!disabledFields && (\n            <Button\n              sx={{\n                height: \"22px\",\n                fontSize: \"11px\",\n              }}\n              variant=\"contained\"\n              startIcon={<CloseIcon sx={{ width: 15, height: 15 }} />}\n              color=\"error\"\n              onClick={() => {\n                Swal.fire({\n                  title: \"Are you sure?\",\n                  text: \"You won't be able to revert this!\",\n                  icon: \"warning\",\n                  showCancelButton: true,\n                  confirmButtonColor: \"#3085d6\",\n                  cancelButtonColor: \"#d33\",\n                  confirmButtonText: \"Yes, cancel it!\",\n                }).then((result) => {\n                  if (result.isConfirmed) {\n                    wait(100).then(() => {\n                      resetTables();\n                      resetRefs();\n                      setTableRowsInputValue(defaultCashBreakDown);\n                      setSelectedRows([]);\n                      setCollectionForDeposit([]);\n                      setSelectedRowsCashIndex([]);\n                      setSelectedRowsCheckedIndex([]);\n\n                      refetchCashCollection();\n                      refetchCheckCollection();\n                      RefetchDepositSlipCode();\n                      setDepositMode(\"\");\n                      goTo(0);\n                    });\n                  }\n                });\n              }}\n            >\n              Cancel\n            </Button>\n          )}\n        </div>\n        <form\n          onKeyDown={(e) => {\n            if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n              e.preventDefault();\n              return;\n            }\n          }}\n          style={{\n            display: \"flex\",\n            gap: \"10px\",\n          }}\n        >\n          {LoadingDepositSlipCode ? (\n            \"Loading...\"\n          ) : (\n            <TextInput\n              label={{\n                title: \"Slip Code: \",\n                style: {\n                  fontSize: \"12px\",\n                  fontWeight: \"bold\",\n                  width: \"70px\",\n                },\n              }}\n              input={{\n                disabled: disabledFields,\n                className: \"search-input-up-on-key-down\",\n                type: \"text\",\n                style: { width: \"200px\" },\n              }}\n              inputRef={refSlipCode}\n              icon={<AutorenewIcon sx={{ fontSize: \"18px\" }} />}\n              onIconClick={(e) => {\n                e.preventDefault();\n                RefetchDepositSlipCode();\n              }}\n            />\n          )}\n          <TextInput\n            label={{\n              title: \"Deposit Date: \",\n              style: {\n                fontSize: \"12px\",\n                fontWeight: \"bold\",\n                width: \"80px\",\n              },\n            }}\n            input={{\n              defaultValue: format(new Date(), \"yyyy-MM-dd\"),\n              className: \"search-input-up-on-key-down\",\n              type: \"date\",\n              style: { width: \"200px\" },\n              disabled: disabledFields,\n            }}\n            inputRef={refDateDepo}\n          />\n          <TextInput\n            label={{\n              title: \"Bank Account: \",\n              style: {\n                fontSize: \"12px\",\n                fontWeight: \"bold\",\n                width: \"100px\",\n              },\n            }}\n            input={{\n              className: \"search-input-up-on-key-down\",\n              type: \"text\",\n              style: { width: \"200px\" },\n              onKeyDown: (e) => {\n                if (e.key === \"Enter\" || e.key === \"NumpadEnter\") {\n                  e.preventDefault();\n                  bankOpenModal(refBankAcctCode.current?.value);\n                }\n              },\n              disabled: disabledFields,\n            }}\n            inputRef={refBankAcctCode}\n            icon={\n              <AccountBalanceIcon\n                sx={{\n                  fontSize: \"18px\",\n                  color: disabledFields ? \"gray\" : \"black\",\n                }}\n              />\n            }\n            onIconClick={(e) => {\n              e.preventDefault();\n              bankOpenModal(refBankAcctCode.current?.value);\n            }}\n            disableIcon={disabledFields}\n          />\n\n          <TextInput\n            label={{\n              title: \"Account Name: \",\n              style: {\n                fontSize: \"12px\",\n                fontWeight: \"bold\",\n                width: \"100px\",\n              },\n            }}\n            input={{\n              className: \"search-input-up-on-key-down\",\n              type: \"text\",\n              style: { width: \"200px\" },\n              readOnly: true,\n              disabled: disabledFields,\n            }}\n            inputRef={refBankAcctName}\n          />\n          <button\n            // ref={submitButton}\n            style={{ display: \"none\" }}\n            type=\"submit\"\n          ></button>\n        </form>\n        <br />\n        <div style={{ display: \"flex\" }}>\n          {tabs.map((tab, index) => (\n            <button\n              ref={(el) => (buttonsRef.current[index] = el)}\n              key={tab.id}\n              onClick={(el) => {\n                setActiveTab(tab.id);\n                setButtonPosition(el.currentTarget.getBoundingClientRect());\n              }}\n              style={{\n                width: \"auto\",\n                fontSize: \"11px\",\n                padding: \"10px\",\n                cursor: \"pointer\",\n                backgroundColor: activeTab === tab.id ? \"white\" : \"transparent\",\n                color: activeTab === tab.id ? \"#0074cc\" : \"#000\",\n                border: \"none\",\n                borderRight:\n                  activeTab === tab.id\n                    ? tab.id === 0\n                      ? \"none\"\n                      : \"1px solid #0074cc\"\n                    : tab.id === 0\n                    ? \"none\"\n                    : \"1px solid #64748b\",\n                borderLeft:\n                  activeTab === tab.id\n                    ? tab.id === 2\n                      ? \"none\"\n                      : \"1px solid #0074cc\"\n                    : tab.id === 2\n                    ? \"none\"\n                    : \"1px solid #64748b\",\n                borderTop:\n                  activeTab === tab.id\n                    ? \"1px solid #0074cc\"\n                    : \"1px solid #64748b\",\n\n                // borderBottom:\n                //   activeTab === tab.id ? \"2px solid #007BFF\" : \"2px solid #ccc\",\n                textTransform: \"uppercase\",\n                fontWeight: \"bold\",\n              }}\n            >\n              {tab.label}\n            </button>\n          ))}\n        </div>\n        <DepositContext.Provider\n          value={{\n            cashCollection,\n            setCashCollection,\n            checkCollection,\n            setCheckCollection,\n            selectedRows,\n            setSelectedRows,\n            collectionForDeposit,\n            setCollectionForDeposit,\n            total,\n            setTotal,\n            TotalCashForDeposit,\n            tableRows: tableRowsInputValue,\n            setTableRowsInputValue,\n            updateTableRowsInput,\n            loadingCheckCollection,\n            loadingCashCollection,\n            selectedRowsCashIndex,\n            setSelectedRowsCashIndex,\n            selectedRowsCheckedIndex,\n            setSelectedRowsCheckedIndex,\n            cashTable,\n            checkTable,\n            selectedTable,\n            collectionCheckTable,\n            refetchCheckCollection,\n            refetchCashCollection,\n            disabledFields,\n            totalCheck,\n            setTotalCheck,\n          }}\n        >\n          <div\n            style={{\n              padding: \"7px\",\n              flex: 1,\n              display: \"flex\",\n              // borderTop: \"2px solid #007BFF\",\n              position: \"relative\",\n              flexDirection: \"column\",\n            }}\n          >\n            <div\n              style={{\n                position: \"absolute\",\n                top: \"-2px\",\n                left: 0,\n                width: `${(buttonPosition?.left as number) - 5 || 0}px`,\n                height: \"1px\",\n                background: \"#64748b\",\n              }}\n            ></div>\n            <div\n              style={{\n                position: \"absolute\",\n                top: \"-2px\",\n                right: 0,\n                left: `${(buttonPosition?.right as number) - 5 || 0}px`,\n                height: \"1px\",\n                background: \"#64748b\",\n              }}\n            ></div>\n            {tabs.map((tab) => (\n              <div\n                key={tab.id}\n                style={{\n                  display: activeTab === tab.id ? \"flex\" : \"none\", // Show only the active tab\n                  flex: 1,\n                  flexDirection: \"column\",\n                }}\n              >\n                {tab.content}\n              </div>\n            ))}\n          </div>\n        </DepositContext.Provider>\n\n        {(loadingSearchByDepositSlip ||\n          updateDepositMutationLoading ||\n          addDepositMutationLoading) && (\n          <div className=\"loading-component\">\n            <div className=\"loader\"></div>\n          </div>\n        )}\n        <style>\n          {`\n            #upward-cutom-table tr td{\n            border-right:1px solid #f1f5f9 !important;\n            }\n\n            #upward-cutom-table tr:nth-child(odd) td {\n            background-color: #ffffff !important;\n            }\n            #upward-cutom-table tr:nth-child(even) td {\n            background-color: #f5f5f5 !important;\n            }\n            #upward-cutom-table tr.selected td {\n            background-color: #0076d7 !important;\n            color: #ffffff !important;\n            border-right:1px solid white !important;\n              border-bottom:1px solid white !important;\n            }\n\n            #upward-cutom-table tr.selected td input {\n            color: #ffffff !important;\n            }\n\n            `}\n        </style>\n      </div>\n    </>\n  );\n}\n\nfunction CashCollection() {\n  const { cashCollection, setSelectedRows, cashTable, disabledFields } =\n    useContext(DepositContext);\n\n  return (\n    <div\n      style={{\n        flex: 1,\n        marginTop: \"10px\",\n        width: \"100%\",\n        position: \"relative\",\n      }}\n    >\n      <DepositTable\n        containerStyle={{\n          flex: 1,\n          height:\"100%\",\n        }}\n        disbaleTable={disabledFields}\n        ref={cashTable}\n        columns={cashColumns}\n        rows={cashCollection}\n        getSelectedItem={(\n          rowItm: any,\n          colItm: any,\n          rowIdx: any,\n          colIdx: any\n        ) => {\n          const rowSelected = rowItm;\n          setSelectedRows((d: any) => {\n            const newSelected: any = {\n              Deposit: \"Cash\",\n              Check_No: \"\",\n              Check_Date: \"\",\n              Bank: \"\",\n              Amount: rowSelected[2],\n              Name: rowSelected[3],\n              RowIndex: d.length + 1,\n              DRCode: rowSelected[4],\n              ORNo: rowSelected[0],\n              DRRemarks: \"\",\n              IDNo: rowSelected[5],\n              TempOR: rowSelected[7],\n              Short: rowSelected[6],\n            };\n\n            d = [...d, newSelected];\n            return d;\n          });\n        }}\n      />\n    </div>\n  );\n}\nfunction CheckCollection() {\n  const {\n    checkCollection,\n    setSelectedRows,\n    checkTable,\n    setCollectionForDeposit,\n    disabledFields,\n    setTotalCheck,\n    selectedTable,\n    depositMode,\n  } = useContext(DepositContext);\n \n  let selectedDataTotal = 0;\n  return (\n    <div\n      style={{\n        marginTop: \"10px\",\n        width: \"100%\",\n        position: \"relative\",\n        flex: 1,\n      }}\n    >\n      <DepositTable\n        containerStyle={{\n          flex: 1,\n          height:\"100%\",\n        }}\n        disbaleTable={disabledFields}\n        ref={checkTable}\n        columns={checkColumns}\n        rows={checkCollection}\n        getSelectedItem={(\n          rowItm: any,\n          colItm: any,\n          rowIdx: any,\n          colIdx: any\n        ) => {\n          const rowSelected = rowItm;\n          setSelectedRows((d: any) => {\n            const newSelected: any = {\n              Deposit: \"Check\", //0\n              Check_No: rowSelected[2], //1\n              Check_Date: rowSelected[3], //2\n              Bank: rowSelected[5], //3\n              Amount: rowSelected[4], //4\n              Name: rowSelected[6], //5\n              DRCode: rowSelected[8], //7\n              ORNo: rowSelected[0], //8\n              DRRemarks: rowSelected[9], //9\n              IDNo: rowSelected[10], //10\n              TempOR: rowSelected[7], //11\n              Short: rowSelected[11], //12\n            };\n            d = [...d, newSelected];\n            return d;\n          });\n\n          setCollectionForDeposit((d: any) => {\n            const newSelectedCheckForDeposit: any = {\n              Bank: rowSelected[5],\n              Check_No: rowSelected[2],\n              Amount: rowSelected[4],\n              TempOR: rowSelected[7],\n            };\n            d = [...d, newSelectedCheckForDeposit];\n            return d;\n          });\n          const selectedData = selectedTable.current.getData();\n          selectedDataTotal += selectedData.reduce((t: number, itm: any) => {\n            return (t += parseFloat(itm[4].toString().replace(/,/g, \"\")));\n          }, 0);\n          selectedDataTotal += parseFloat(\n            rowSelected[4].toString().replace(/,/g, \"\")\n          );\n          setTotalCheck(formatNumber(selectedDataTotal));\n        }}\n      />\n    </div>\n  );\n}\nfunction SelectedCollection() {\n  const {\n    setSelectedRows,\n    selectedRows,\n    selectedTable,\n    cashTable,\n    checkTable,\n    setCollectionForDeposit,\n    collectionForDeposit,\n    collectionCheckTable,\n    setTotalCheck,\n  } = useContext(DepositContext);\n\n  \n\n  return (\n    <div\n      style={{\n        marginTop: \"10px\",\n        width: \"100%\",\n        position: \"relative\",\n        flex: 1,\n      }}\n    >\n      <DepositTableSelected\n         containerStyle={{\n          flex: 1,\n          height:\"100%\",\n        }}\n        ref={selectedTable}\n        columns={selectedCollectionColumns}\n        rows={selectedRows}\n        getSelectedItem={(\n          rowItm: any,\n          colItm: any,\n          rowIdx: any,\n          colIdx: any\n        ) => {\n          const rowSelected = rowItm;\n          const selectedData = selectedTable.current.getData();\n\n          if (rowSelected[0] === \"Cash\") {\n            const cashData = cashTable.current.getData();\n            const getSelectedRow = cashTable.current.getSelectedRow();\n            const rowIdx = cashData.findIndex(\n              (itm: any) => itm[7] === rowSelected[10]\n            );\n            const index = getSelectedRow.indexOf(rowIdx);\n            if (index !== -1) {\n              getSelectedRow.splice(index, 1);\n            }\n            cashTable.current.setSelectedRow(getSelectedRow);\n          } else {\n            const cashData = checkTable.current.getData();\n            const getSelectedRow = checkTable.current.getSelectedRow();\n            const rowIdx = cashData.findIndex(\n              (itm: any) => itm[7] === rowSelected[10]\n            );\n            const index = getSelectedRow.indexOf(rowIdx);\n            if (index !== -1) {\n              getSelectedRow.splice(index, 1);\n            }\n            checkTable.current.setSelectedRow(getSelectedRow);\n          }\n\n          setSelectedRows((d: any) => {\n            if (d.length === 1 && d[0].TempOR === rowSelected[10]) {\n              return [];\n            }\n            return d.filter((itm: any) => itm.TempOR !== rowSelected[10]);\n          });\n\n          const newData = (d: any) => {\n            if (d.length === 1 && d[0].TempOR === rowSelected[10]) {\n              return [];\n            }\n            return d.filter((item: any) => item.TempOR !== rowSelected[10]);\n          };\n          const dd = newData(collectionForDeposit);\n          setCollectionForDeposit(dd);\n\n          const columns = collectionCheckTable.current?.getColumns();\n          collectionCheckTable.current?.setData(\n            dd.map((itm: any) => {\n              return columns.map((col: any) => itm[col.key]);\n            })\n          );\n\n          if (\n            selectedData.length === 1 &&\n            selectedData[0][10] === rowSelected[10]\n          ) {\n            setTotalCheck(formatNumber(0));\n\n            return selectedTable.current.setData([]);\n          } else {\n            const newSelectedData = selectedData.filter((itm: any) => {\n              return itm[10] !== rowSelected[10];\n            });\n\n            setTotalCheck(\n              formatNumber(\n                newSelectedData.reduce((t: number, itm: any) => {\n                  return (t += parseFloat(itm[4].toString().replace(/,/g, \"\")));\n                }, 0)\n              )\n            );\n\n            selectedTable.current.setData(newSelectedData);\n          }\n        }}\n      />\n    </div>\n  );\n}\nfunction CollectionForDeposit() {\n  const {\n    collectionForDeposit,\n    tableRows,\n    total,\n    setTotal,\n    TotalCashForDeposit,\n    collectionCheckTable,\n    totalCheck,\n    setTotalCheck,\n  } = useContext(DepositContext);\n\n  useEffect(() => {\n    setTotal(\n      tableRows\n        ?.reduce((accumulator: any, currentValue: any) => {\n          return (\n            accumulator + parseFloat(currentValue.value3.replace(/,/g, \"\"))\n          );\n        }, 0.0)\n        .toLocaleString(\"en-US\", {\n          minimumFractionDigits: 2,\n          maximumFractionDigits: 2,\n        })\n    );\n  }, [tableRows, setTotal]);\n\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        gap: \"10px\",\n        height: \"auto \",\n      }}\n    >\n      <fieldset\n        style={{\n          flexDirection: \"column\",\n          gap: \"10px\",\n          border: \"1px solid #cbd5e1\",\n          borderRadius: \"5px\",\n          width: \"70%\",\n          position: \"relative\",\n        }}\n      >\n        <legend>Checks</legend>\n        <DepositTableSelected\n        \n          isTableSelectable={false}\n          ref={collectionCheckTable}\n          width=\"100%\"\n          columns={selectedCollectionForDeposit}\n          rows={collectionForDeposit}\n          getSelectedItem={(\n            rowItm: any,\n            colItm: any,\n            rowIdx: any,\n            colIdx: any\n          ) => {}}\n        />\n        <div\n          style={{\n            display: \"flex\",\n            alignItems: \"center\",\n            width: \"100%\",\n            textAlign: \"right\",\n            columnGap: \"5px\",\n            marginTop: \"5px\",\n          }}\n        >\n          <span style={{ fontSize: \"12px\", fontWeight: \"bold\" }}>\n            Total Check Deposit:\n          </span>\n          <input\n            style={{\n              fontWeight: \"bold\",\n              border: \"1px solid black\",\n              textAlign: \"right\",\n              fontSize: \"13px\",\n              width: \"180px\",\n            }}\n            value={totalCheck}\n            onChange={(e) => {\n              setTotalCheck(e.target.value);\n            }}\n            readOnly={true}\n          />\n        </div>\n      </fieldset>\n      <fieldset\n        style={{\n          flexDirection: \"column\",\n          gap: \"10px\",\n          border: \"1px solid #cbd5e1\",\n          borderRadius: \"5px\",\n          alignSelf: \"flex-end\",\n          display: \"flex\",\n          width: \"30%\",\n        }}\n      >\n        <legend\n          style={{\n            color: total === TotalCashForDeposit ? \"green\" : \"#ec4899\",\n          }}\n        >\n          Cash ( {TotalCashForDeposit} )\n        </legend>\n        <table\n          id=\"cash-breakdown-table\"\n          style={{\n            border: \"2px solid black\",\n            borderCollapse: \"collapse\",\n            width: \"100%\",\n            background: \"white\",\n          }}\n        >\n          <thead>\n            <tr\n              style={{\n                borderBottom: \"2px solid black\",\n                fontSize: \"14px\",\n              }}\n            >\n              <th\n                style={{\n                  borderRight: \"2px solid black\",\n                }}\n              >\n                Denominations\n              </th>\n              <th\n                style={{\n                  borderRight: \"2px solid black\",\n                }}\n              >\n                QTY\n              </th>\n              <th\n                style={{\n                  borderRight: \"2px solid black\",\n                }}\n              >\n                Amount\n              </th>\n            </tr>\n          </thead>\n          <tbody>\n            {tableRows?.map((items: any, idx: number) => {\n              return (\n                <TrComponent\n                  key={idx}\n                  value1={items.value1}\n                  value2={items.value2}\n                  value3={items.value3}\n                  idx={idx}\n                />\n              );\n            })}\n          </tbody>\n          <tfoot>\n            <tr\n              style={{\n                borderTop: \"2px solid black\",\n                height: \"auto\",\n              }}\n            >\n              <td colSpan={3}>\n                <div\n                  style={{\n                    display: \"flex\",\n                    justifyContent: \"flex-end\",\n                  }}\n                >\n                  <div\n                    style={{\n                      display: \"flex\",\n                      alignItems: \"center\",\n                      width: \"100%\",\n                      textAlign: \"right\",\n                      justifyContent: \"flex-end\",\n                      columnGap: \"5px\",\n                    }}\n                  >\n                    <span style={{ fontSize: \"12px\", fontWeight: \"bold\" }}>\n                      Total Cash Deposit:\n                    </span>\n                    <input\n                      style={{\n                        fontWeight: \"bold\",\n                        border: \"1px solid black\",\n                        textAlign: \"right\",\n                        fontSize: \"13px\",\n                        width: \"180px\",\n                      }}\n                      value={total}\n                      onChange={(e) => {\n                        setTotal(e.target.value);\n                      }}\n                      readOnly={true}\n                    />\n                  </div>\n                </div>\n              </td>\n            </tr>\n          </tfoot>\n        </table>\n      </fieldset>\n    </div>\n  );\n}\nfunction TrComponent({ value1, value2, value3, idx }: any) {\n  const { updateTableRowsInput } = useContext(DepositContext);\n\n  const [input1, setInput1] = useState(value1);\n  const [input2, setInput2] = useState(value2);\n  const [input3, setInput3] = useState(value3);\n\n  const InputStyle: CSSProperties = {\n    textAlign: \"right\",\n    height: \"18px\",\n    borderRight: \"none\",\n    borderLeft: \"none\",\n    borderTop: \"none\",\n    outline: \"none\",\n    borderBottom: \"1px solid #cbd5e1\",\n    padding: \"0 8px\",\n    width: \"100%\",\n    fontSize: \"13px\",\n    margin: \"0 !important\",\n  };\n\n  return (\n    <tr>\n      <td\n        style={{\n          borderRight: \"2px solid black\",\n          margin: \"0\",\n          padding: \"0\",\n          height: \"15px\",\n        }}\n      >\n        <input\n          disabled={true}\n          className={`row-${idx} col-0`}\n          type=\"text\"\n          style={InputStyle}\n          value={input1}\n          onChange={(e) => setInput1(e.target.value)}\n          readOnly={true}\n        />\n      </td>\n      <td\n        style={{\n          borderRight: \"2px solid black\",\n          overflow: \"hidden\",\n          margin: 0,\n          padding: \"0 !important\",\n          height: \"15px\",\n        }}\n      >\n        <input\n          className={`row-${idx} col-1`}\n          style={InputStyle}\n          value={input2}\n          onChange={(e) => {\n            let input1Value = input1;\n            setInput2(e.target.value);\n            if (input1.includes(\",\")) {\n              input1Value = input1.replace(/,/g, \"\").toString();\n            }\n            const valueFor3 = (\n              parseFloat(input1Value) *\n              (isNaN(parseInt(e.target.value)) ? 0 : parseInt(e.target.value))\n            ).toLocaleString(\"en-US\", {\n              minimumFractionDigits: 2,\n              maximumFractionDigits: 2,\n            });\n            \n            setInput3(valueFor3);\n\n            updateTableRowsInput(\n              {\n                value1,\n                value2: e.target.value,\n                value3: valueFor3,\n              },\n              idx\n            );\n          }}\n          onKeyDown={(e) => {\n            if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n              e.preventDefault();\n              const nextInput = document.querySelector(\n                `#cash-breakdown-table td .row-${idx + 1}.col-1`\n              ) as HTMLInputElement;\n              if (nextInput) {\n                nextInput.focus();\n              }\n            }\n          }}\n        />\n      </td>\n      <td\n        style={{\n          borderRight: \"2px solid black\",\n          margin: \"0\",\n          padding: \"0 !important\",\n          height: \"15px\",\n        }}\n      >\n        <input\n          disabled={true}\n          className={`row-${idx} col-2`}\n          type=\"text\"\n          style={InputStyle}\n          value={input3}\n          onChange={(e) => setInput3(e.target.value)}\n          readOnly={true}\n        />\n      </td>\n    </tr>\n  );\n}\nconst DepositTable = forwardRef(\n  (\n    {\n      columns,\n      rows,\n      height = \"400px\",\n      width = \"calc(100vw - 40px)\",\n      getSelectedItem,\n      disbaleTable = false,\n      containerStyle,\n    }: any,\n    ref\n  ) => {\n    const parentElementRef = useRef<any>(null);\n    const [data, setData] = useState([]);\n    const [column, setColumn] = useState([]);\n    const [selectedRow, setSelectedRow] = useState<Array<any>>([]);\n    const [selectedRowIndex, setSelectedRowIndex] = useState<any>(0);\n\n    const totalRowWidth = column.reduce((a: any, b: any) => a + b.width, 0);\n\n\n    const [columnHeader, setColumnHeader] = useState(\n      columns.filter((itm: any) => !itm.hide)\n    );\n    const [hoveredColumn, setHoveredColumn] = useState(null);\n\n\n    useEffect(() => {\n      if (columns.length > 0) {\n        setColumn(columns.filter((itm: any) => !itm.hide));\n      }\n    }, [columns]);\n\n    useEffect(() => {\n      if (rows.length > 0) {\n        setData(\n          rows.map((itm: any) => {\n            return columns.map((col: any) => itm[col.key]);\n          })\n        );\n      }\n    }, [rows, columns]);\n\n    useImperativeHandle(ref, () => ({\n      getData: () => {\n        return data;\n      },\n      setData: (newData: any) => {\n        setData(newData);\n      },\n      setSelectedRow: (rowIdx: any) => {\n        setSelectedRow(rowIdx);\n      },\n      getSelectedRow: (rowIdx: any) => {\n        return selectedRow;\n      },\n      getColumns: () => {\n        return columns;\n      },\n      resetTable: () => {\n        setData([]);\n        setSelectedRow([]);\n      },\n      setDataFormated: (newData: any) => {\n        setData(\n          newData.map((itm: any) => {\n            return columns.map((col: any) => itm[col.key]);\n          })\n        );\n      },\n      parentElement: () => {\n        return parentElementRef.current;\n      },\n    }));\n\n\n    const startResize = (index: any, e: any) => {\n      e.preventDefault();\n      e.stopPropagation();\n\n      const startX = e.clientX;\n      const startWidth = columnHeader[index].width;\n\n      const doDrag = (moveEvent: any) => {\n\n        const newWidth = startWidth + (moveEvent.clientX - startX);\n        const updatedColumns = [...columnHeader];\n        updatedColumns[index].width = newWidth > 50 ? newWidth : 50; // Set minimum column width\n        setColumnHeader(updatedColumns);\n      };\n\n      const stopDrag = () => {\n        document.removeEventListener(\"mousemove\", doDrag);\n        document.removeEventListener(\"mouseup\", stopDrag);\n      };\n\n      document.addEventListener(\"mousemove\", doDrag);\n      document.addEventListener(\"mouseup\", stopDrag);\n    };\n    const handleMouseEnter = (index: any) => {\n      setHoveredColumn(index); // Set the hovered column index\n    };\n    const handleMouseLeave = () => {\n      setHoveredColumn(null); // Reset hovered column index\n    };\n\n    return (\n      <Fragment>\n        <div\n          ref={parentElementRef}\n          style={{\n            width: \"100%\",\n            height,\n            overflow: \"auto\",\n            position: \"relative\",\n            pointerEvents: disbaleTable ? \"none\" : \"auto\",\n            border: disbaleTable ? \"2px solid #8c8f8e\" : \"2px solid #c0c0c0\",\n            boxShadow: `inset -2px -2px 0 #ffffff, \n                      inset 2px 2px 0 #808080`,\n            background: \"#dcdcdc\",\n            ...containerStyle,\n          }}\n        >\n          <div\n            style={{\n              position: \"absolute\",\n              width: `${totalRowWidth}px`,\n              height: \"auto\",\n            }}\n          >\n            <table\n              id=\"upward-cutom-table\"\n              style={{\n                borderCollapse: \"collapse\",\n                width: \"100%\",\n                position: \"relative\",\n              }}\n            >\n              <thead>\n                <tr\n                  style={{\n                    background: \"#f0f0f0\",\n                  }}\n                >\n                  <th\n                    style={{\n                      width: \"30px\",\n                      border: \"none\",\n                      position: \"sticky\",\n                      top: 0,\n                      zIndex: 1,\n                      background: \"#f0f0f0\",\n                    }}\n                  ></th>\n                  {column.map((colItm: any, idx: number) => {\n                    return (\n                      <th\n                        key={idx}\n                        style={{\n                          width: colItm.width,\n                          borderRight: \"1px solid #e2e8f0\",\n                          position: \"sticky\",\n                          top: 0,\n                          zIndex: 1,\n                          background: \"#f0f0f0\",\n                          fontSize: \"12px\",\n                          padding: \"0px 5px\",\n                          textAlign:\n                            colItm.type === \"number\" ? \"center\" : \"left\",\n                        }}\n                      >\n                          <div\n                          key={idx}\n                          className={` ${\n                            hoveredColumn === idx ? `highlight-column` : \"\"\n                          }`} // Add the class if hovered\n                          style={{ width: colItm.width, height: \"20px\" }}\n                        >\n                          {colItm.label}\n\n                          <div\n                            className=\"resize-handle\"\n                            onMouseDown={(e) => startResize(idx, e)}\n                            onMouseEnter={(e) => {\n                              e.preventDefault();\n                              handleMouseEnter(idx);\n                            }} // On hover\n                            onMouseLeave={(e) => {\n                              e.preventDefault();\n                              handleMouseLeave();\n                            }} // On mouse leave\n                          />\n                        </div>\n                      </th>\n                    );\n                  })}\n                </tr>\n              </thead>\n              <tbody>\n                {data?.map((rowItm: any, rowIdx: number) => {\n                  return (\n                    <tr\n                      key={rowIdx}\n                      className={`tr-row-${rowIdx} row ${\n                        selectedRow.includes(rowIdx) ||\n                        selectedRowIndex === rowIdx\n                          ? \"selected\"\n                          : \"\"\n                      }`}\n                    >\n                      <td\n                        style={{\n                          position: \"relative\",\n                          border: \"none\",\n                          cursor: \"pointer\",\n                          padding: 0,\n                          margin: 0,\n                          background: selectedRow.includes(rowIdx)\n                            ? \"#bae6fd\"\n                            : \"\",\n                        }}\n                      >\n                        <div\n                          style={{\n                            width: \"18px\",\n                            height: \"18px\",\n                            position: \"relative\",\n                            display: \"flex\",\n                            alignItems: \"center\",\n                            justifyContent: \"center\",\n                          }}\n                        >\n                          <input\n                            className=\"check-input\"\n                            style={{\n                              cursor: \"pointer\",\n                              background: \"transparent\",\n                            }}\n                            readOnly={true}\n                            type=\"checkbox\"\n                            checked={selectedRow.includes(rowIdx)}\n                            onClick={() => {\n                              if (selectedRow.includes(rowIdx)) {\n                                return;\n                              }\n\n                              setSelectedRow((d: any) => {\n                                return [...d, rowIdx];\n                              });\n\n                              if (getSelectedItem) {\n                                getSelectedItem(rowItm, null, rowIdx, null);\n                              }\n                            }}\n                          />\n                        </div>\n                      </td>\n\n                      {column.map((colItm: any, colIdx: number) => {\n                        return (\n                          <td\n                            onDoubleClick={() => {\n                              if (selectedRow.includes(rowIdx)) {\n                                return;\n                              }\n\n                              setSelectedRow((d: any) => {\n                                return [...d, rowIdx];\n                              });\n                              if (getSelectedItem) {\n                                getSelectedItem(rowItm, colItm, rowIdx, colIdx);\n                              }\n                            }}\n                            onClick={() => {\n                              setSelectedRowIndex(rowIdx);\n                            }}\n                            key={colIdx}\n                            style={{\n                              border: \"none\",\n                              fontSize: \"12px\",\n                              padding: \"0px 5px\",\n                              cursor: \"pointer\",\n                              height: \"20px\",\n                              userSelect: \"none\",\n                            }}\n                          >\n                            {\n                              <input\n                                readOnly={true}\n                                value={rowItm[colIdx]}\n                                style={{\n                                  width: colItm.width,\n                                  pointerEvents: \"none\",\n                                  border: \"none\",\n                                  background: \"transparent\",\n                                  userSelect: \"none\",\n                                  height: \"100%\",\n                                  textAlign:\n                                    colItm.type === \"number\" ? \"right\" : \"left\",\n                                }}\n                              />\n                            }\n                          </td>\n                        );\n                      })}\n                    </tr>\n                  );\n                })}\n              </tbody>\n            </table>\n          </div>\n        </div>\n        <style>\n          {`\n            .resize-handle {\n                position: absolute;\n                right: 0;\n                top: 0;\n                width: 5px;\n                height: 100%;\n                cursor: col-resize;\n                background-color: transparent;\n              }\n              .resize-handle:hover {\n                background-color: #101111;\n              }\n              .highlight-column {\n                border-right: 2px solid #007bff !important;\n              }\n          `}\n        </style>\n      </Fragment>\n    );\n  }\n);\nconst DepositTableSelected = forwardRef(\n  (\n    {\n      columns,\n      rows,\n      height = \"400px\",\n      getSelectedItem,\n      disbaleTable = false,\n      isTableSelectable = true,\n      containerStyle\n    }: any,\n    ref\n  ) => {\n    const parentElementRef = useRef<any>(null);\n    const [data, setData] = useState([]);\n    const [column, setColumn] = useState([]);\n    const [selectedRow, setSelectedRow] = useState<any>(0);\n    const totalRowWidth = column.reduce((a: any, b: any) => a + b.width, 0);\n\n\n    const [columnHeader, setColumnHeader] = useState(\n      columns.filter((itm: any) => !itm.hide)\n    );\n    const [hoveredColumn, setHoveredColumn] = useState(null);\n\n\n\n    useEffect(() => {\n      if (columns.length > 0) {\n        setColumn(columns.filter((itm: any) => !itm.hide));\n      }\n    }, [columns]);\n\n    useEffect(() => {\n      if (rows.length > 0) {\n        setData(\n          rows.map((itm: any) => {\n            return columns.map((col: any) => itm[col.key]);\n          })\n        );\n      }\n    }, [rows, columns]);\n\n    useImperativeHandle(ref, () => ({\n      getData: () => {\n        return data;\n      },\n      setData: (newData: any) => {\n        setData(newData);\n      },\n      getColumns: () => {\n        return columns;\n      },\n      resetTable: () => {\n        setData([]);\n        setSelectedRow(0);\n      },\n      setDataFormated: (newData: any) => {\n        setData(\n          newData.map((itm: any) => {\n            return columns.map((col: any) => itm[col.key]);\n          })\n        );\n      },\n    }));\n\n\n    const startResize = (index: any, e: any) => {\n      e.preventDefault();\n      e.stopPropagation();\n\n      const startX = e.clientX;\n      const startWidth = columnHeader[index].width;\n\n      const doDrag = (moveEvent: any) => {\n\n        const newWidth = startWidth + (moveEvent.clientX - startX);\n        const updatedColumns = [...columnHeader];\n        updatedColumns[index].width = newWidth > 50 ? newWidth : 50; // Set minimum column width\n        setColumnHeader(updatedColumns);\n      };\n\n      const stopDrag = () => {\n        document.removeEventListener(\"mousemove\", doDrag);\n        document.removeEventListener(\"mouseup\", stopDrag);\n      };\n\n      document.addEventListener(\"mousemove\", doDrag);\n      document.addEventListener(\"mouseup\", stopDrag);\n    };\n    const handleMouseEnter = (index: any) => {\n      setHoveredColumn(index); // Set the hovered column index\n    };\n    const handleMouseLeave = () => {\n      setHoveredColumn(null); // Reset hovered column index\n    };\n\n    return (\n      <Fragment>\n        <div\n          ref={parentElementRef}\n          style={{\n            width: \"100%\",\n            height,\n            overflow: \"auto\",\n            position: \"relative\",\n            pointerEvents: disbaleTable ? \"none\" : \"auto\",\n            border: disbaleTable ? \"2px solid #8c8f8e\" : \"2px solid #c0c0c0\",\n            boxShadow: `inset -2px -2px 0 #ffffff, \n                      inset 2px 2px 0 #808080`,\n            background: \"#dcdcdc\",\n            ...containerStyle\n          }}\n        >\n          <div\n            style={{\n              position: \"absolute\",\n              width: `${totalRowWidth}px`,\n              height: \"auto\",\n            }}\n          >\n            <table\n              id=\"upward-cutom-table\"\n              style={{\n                borderCollapse: \"collapse\",\n                width: \"100%\",\n                position: \"relative\",\n              }}\n            >\n              <thead>\n                <tr\n                  style={{\n                    background: \"#f0f0f0\",\n                  }}\n                >\n                  <th\n                    style={{\n                      width: \"30px\",\n                      border: \"none\",\n                      position: \"sticky\",\n                      top: 0,\n                      zIndex: 1,\n                      background: \"#f0f0f0\",\n                    }}\n                  ></th>\n                  {column.map((colItm: any, idx: number) => {\n                    return (\n                      <th\n                        key={idx}\n                        style={{\n                          width: colItm.width,\n                          borderRight: \"1px solid #e2e8f0\",\n                          position: \"sticky\",\n                          top: 0,\n                          zIndex: 1,\n                          fontSize: \"12px\",\n                          padding: \"0px 5px\",\n                          background: \"#f0f0f0\",\n                          textAlign:\n                            colItm.type === \"number\" ? \"center\" : \"left\",\n                        }}\n                      >\n                        <div\n                          key={idx}\n                          className={` ${\n                            hoveredColumn === idx ? `highlight-column` : \"\"\n                          }`} // Add the class if hovered\n                          style={{ width: colItm.width, height: \"20px\" }}\n                        >\n                          {colItm.label}\n\n                          <div\n                            className=\"resize-handle\"\n                            onMouseDown={(e) => startResize(idx, e)}\n                            onMouseEnter={(e) => {\n                              e.preventDefault();\n                              handleMouseEnter(idx);\n                            }} // On hover\n                            onMouseLeave={(e) => {\n                              e.preventDefault();\n                              handleMouseLeave();\n                            }} // On mouse leave\n                          />\n                        </div>\n                      </th>\n                    );\n                  })}\n                </tr>\n              </thead>\n              <tbody>\n                {data?.map((rowItm: any, rowIdx: number) => {\n                  return (\n                    <tr\n                      key={rowIdx}\n                      className={`tr-row-${rowIdx} row ${\n                        selectedRow === rowIdx ? \"selected\" : \"\"\n                      }`}\n                    >\n                      <td\n                        style={{\n                          position: \"relative\",\n                          border: \"none\",\n                          cursor: \"pointer\",\n                          background: selectedRow === rowIdx ? \"#0076d\" : \"\",\n                          padding: 0,\n                          margin: 0,\n                        }}\n                      >\n                        <div\n                          style={{\n                            width: \"18px\",\n                            height: \"18px\",\n                            position: \"relative\",\n                            display: \"flex\",\n                            alignItems: \"center\",\n                            justifyContent: \"center\",\n                          }}\n                        >\n                          <input\n                            style={{\n                              cursor: \"pointer\",\n                              margin: \"0px !important\",\n                              position: \"absolute\",\n                            }}\n                            readOnly={true}\n                            checked={false}\n                            type=\"checkbox\"\n                            onClick={() => {\n                              if (!isTableSelectable) {\n                                return;\n                              }\n\n                              if (getSelectedItem) {\n                                getSelectedItem(rowItm, null, rowIdx, null);\n                              }\n                              setSelectedRow(null);\n                            }}\n                          />\n                        </div>\n                      </td>\n\n                      {column.map((colItm: any, colIdx: number) => {\n                        return (\n                          <td\n                            onDoubleClick={() => {\n                              if (!isTableSelectable) {\n                                return;\n                              }\n                              if (getSelectedItem) {\n                                getSelectedItem(rowItm, null, rowIdx, null);\n                              }\n                              setSelectedRow(null);\n                            }}\n                            onClick={() => {\n                              setSelectedRow(rowIdx);\n                            }}\n                            key={colIdx}\n                            style={{\n                              border: \"none\",\n                              fontSize: \"12px\",\n                              padding: \"0px 5px\",\n                              cursor: \"pointer\",\n                              height: \"20px\",\n                              userSelect: \"none\",\n                            }}\n                          >\n                            {\n                              <input\n                                readOnly={true}\n                                value={rowItm[colIdx]}\n                                style={{\n                                  width: colItm.width,\n                                  pointerEvents: \"none\",\n                                  border: \"none\",\n                                  background: \"transparent\",\n                                  userSelect: \"none\",\n                                  height: \"100%\",\n                                  textAlign:\n                                    colItm.type === \"number\" ? \"right\" : \"left\",\n                                }}\n                              />\n                            }\n                          </td>\n                        );\n                      })}\n                    </tr>\n                  );\n                })}\n              </tbody>\n            </table>\n          </div>\n        </div>\n        <style>\n          {`\n              .resize-handle {\n                    position: absolute;\n                    right: 0;\n                    top: 0;\n                    width: 5px;\n                    height: 100%;\n                    cursor: col-resize;\n                    background-color: transparent;\n                  }\n\n                  .resize-handle:hover {\n                    background-color: #101111;\n                  }\n\n                  .highlight-column {\n                    border-right: 2px solid #007bff !important;\n                  }\n          `}\n        </style>\n      </Fragment>\n    );\n  }\n);\nfunction useMultipleComponent(steps: any) {\n  const [currentStepIndex, setCurrentStepIndex] = useState(0);\n\n  function goTo(index: number) {\n    // Ensure the index is within bounds\n    if (index >= 0 && index < steps.length) {\n      setCurrentStepIndex(index);\n    }\n  }\n\n  return {\n    goTo,\n    currentStepIndex,\n  };\n}\n","import Swal from \"sweetalert2\";\n\nexport function codeCondfirmationAlert(props: {\n  cb: (userCodeConfirmation: string) => void;\n  isUpdate: boolean;\n  isConfirm?: () => void;\n  isDeclined?: () => void;\n  text?: string;\n}) {\n  Swal.fire({\n    title: `Are you sure!`,\n    html: props?.text\n      ? props?.text\n      : props.isUpdate\n      ? `Are you sure you want to make this change?`\n      : \"Are you sure you want to delete this?\",\n    icon: \"warning\",\n    input: \"text\",\n    inputAttributes: {\n      autocapitalize: \"off\",\n    },\n    showCancelButton: true,\n    confirmButtonText: \"Save\",\n    confirmButtonColor: \"green\",\n    showLoaderOnConfirm: true,\n    preConfirm: async (userCodeConfirmation) => {\n      try {\n        props.cb(userCodeConfirmation);\n      } catch (error) {\n        Swal.showValidationMessage(`\n            Request failed: ${error}\n          `);\n      }\n    },\n    allowOutsideClick: () => !Swal.isLoading(),\n  }).then((result) => {\n    if (result.isConfirmed) {\n      if (props.isConfirm) {\n        return props.isConfirm();\n      }\n    }\n    if (props.isDeclined) {\n      props.isDeclined();\n    }\n  });\n}\n\nexport function saveCondfirmationAlert(props: {\n  isConfirm?: () => void;\n  isDeclined?: () => void;\n  text?: string;\n}) {\n  Swal.fire({\n    title: \"Are you sure?\",\n    text: props?.text ? props?.text : \"Do you want to proceed with saving?\",\n    icon: \"warning\",\n    showCancelButton: true,\n    confirmButtonColor: \"#3085d6\",\n    cancelButtonColor: \"#d33\",\n    confirmButtonText: \"Yes, save it!\",\n  }).then((result) => {\n    if (result.isConfirmed) {\n      if (props.isConfirm) {\n        return props.isConfirm();\n      }\n    }\n    if (props.isDeclined) {\n      props.isDeclined();\n    }\n  });\n}\n","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M4 10h3v7H4zm6.5 0h3v7h-3zM2 19h20v3H2zm15-9h3v7h-3zm-5-9L2 6v2h20V6z\"\n}), 'AccountBalance');\nexports.default = _default;","import generateUtilityClass from '@mui/material/generateUtilityClass';\nimport generateUtilityClasses from '@mui/material/generateUtilityClasses';\nexport function getLoadingButtonUtilityClass(slot) {\n  return generateUtilityClass('MuiLoadingButton', slot);\n}\nconst loadingButtonClasses = generateUtilityClasses('MuiLoadingButton', ['root', 'loading', 'loadingIndicator', 'loadingIndicatorCenter', 'loadingIndicatorStart', 'loadingIndicatorEnd', 'endIconLoadingEnd', 'startIconLoadingStart']);\nexport default loadingButtonClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"children\", \"disabled\", \"id\", \"loading\", \"loadingIndicator\", \"loadingPosition\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { chainPropTypes } from '@mui/utils';\nimport { capitalize, unstable_useId as useId } from '@mui/material/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { styled, useThemeProps } from '@mui/material/styles';\nimport Button from '@mui/material/Button';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport loadingButtonClasses, { getLoadingButtonUtilityClass } from './loadingButtonClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    loading,\n    loadingPosition,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root', loading && 'loading'],\n    startIcon: [loading && `startIconLoading${capitalize(loadingPosition)}`],\n    endIcon: [loading && `endIconLoading${capitalize(loadingPosition)}`],\n    loadingIndicator: ['loadingIndicator', loading && `loadingIndicator${capitalize(loadingPosition)}`]\n  };\n  const composedClasses = composeClasses(slots, getLoadingButtonUtilityClass, classes);\n  return _extends({}, classes, composedClasses);\n};\n\n// TODO use `import { rootShouldForwardProp } from '../styles/styled';` once move to core\nconst rootShouldForwardProp = prop => prop !== 'ownerState' && prop !== 'theme' && prop !== 'sx' && prop !== 'as' && prop !== 'classes';\nconst LoadingButtonRoot = styled(Button, {\n  shouldForwardProp: prop => rootShouldForwardProp(prop) || prop === 'classes',\n  name: 'MuiLoadingButton',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    return [styles.root, styles.startIconLoadingStart && {\n      [`& .${loadingButtonClasses.startIconLoadingStart}`]: styles.startIconLoadingStart\n    }, styles.endIconLoadingEnd && {\n      [`& .${loadingButtonClasses.endIconLoadingEnd}`]: styles.endIconLoadingEnd\n    }];\n  }\n})(({\n  ownerState,\n  theme\n}) => _extends({\n  [`& .${loadingButtonClasses.startIconLoadingStart}, & .${loadingButtonClasses.endIconLoadingEnd}`]: {\n    transition: theme.transitions.create(['opacity'], {\n      duration: theme.transitions.duration.short\n    }),\n    opacity: 0\n  }\n}, ownerState.loadingPosition === 'center' && {\n  transition: theme.transitions.create(['background-color', 'box-shadow', 'border-color'], {\n    duration: theme.transitions.duration.short\n  }),\n  [`&.${loadingButtonClasses.loading}`]: {\n    color: 'transparent'\n  }\n}, ownerState.loadingPosition === 'start' && ownerState.fullWidth && {\n  [`& .${loadingButtonClasses.startIconLoadingStart}, & .${loadingButtonClasses.endIconLoadingEnd}`]: {\n    transition: theme.transitions.create(['opacity'], {\n      duration: theme.transitions.duration.short\n    }),\n    opacity: 0,\n    marginRight: -8\n  }\n}, ownerState.loadingPosition === 'end' && ownerState.fullWidth && {\n  [`& .${loadingButtonClasses.startIconLoadingStart}, & .${loadingButtonClasses.endIconLoadingEnd}`]: {\n    transition: theme.transitions.create(['opacity'], {\n      duration: theme.transitions.duration.short\n    }),\n    opacity: 0,\n    marginLeft: -8\n  }\n}));\nconst LoadingButtonLoadingIndicator = styled('span', {\n  name: 'MuiLoadingButton',\n  slot: 'LoadingIndicator',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.loadingIndicator, styles[`loadingIndicator${capitalize(ownerState.loadingPosition)}`]];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  position: 'absolute',\n  visibility: 'visible',\n  display: 'flex'\n}, ownerState.loadingPosition === 'start' && (ownerState.variant === 'outlined' || ownerState.variant === 'contained') && {\n  left: ownerState.size === 'small' ? 10 : 14\n}, ownerState.loadingPosition === 'start' && ownerState.variant === 'text' && {\n  left: 6\n}, ownerState.loadingPosition === 'center' && {\n  left: '50%',\n  transform: 'translate(-50%)',\n  color: (theme.vars || theme).palette.action.disabled\n}, ownerState.loadingPosition === 'end' && (ownerState.variant === 'outlined' || ownerState.variant === 'contained') && {\n  right: ownerState.size === 'small' ? 10 : 14\n}, ownerState.loadingPosition === 'end' && ownerState.variant === 'text' && {\n  right: 6\n}, ownerState.loadingPosition === 'start' && ownerState.fullWidth && {\n  position: 'relative',\n  left: -10\n}, ownerState.loadingPosition === 'end' && ownerState.fullWidth && {\n  position: 'relative',\n  right: -10\n}));\nconst LoadingButton = /*#__PURE__*/React.forwardRef(function LoadingButton(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiLoadingButton'\n  });\n  const {\n      children,\n      disabled = false,\n      id: idProp,\n      loading = false,\n      loadingIndicator: loadingIndicatorProp,\n      loadingPosition = 'center',\n      variant = 'text'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const id = useId(idProp);\n  const loadingIndicator = loadingIndicatorProp != null ? loadingIndicatorProp : /*#__PURE__*/_jsx(CircularProgress, {\n    \"aria-labelledby\": id,\n    color: \"inherit\",\n    size: 16\n  });\n  const ownerState = _extends({}, props, {\n    disabled,\n    loading,\n    loadingIndicator,\n    loadingPosition,\n    variant\n  });\n  const classes = useUtilityClasses(ownerState);\n  const loadingButtonLoadingIndicator = loading ? /*#__PURE__*/_jsx(LoadingButtonLoadingIndicator, {\n    className: classes.loadingIndicator,\n    ownerState: ownerState,\n    children: loadingIndicator\n  }) : null;\n  return /*#__PURE__*/_jsxs(LoadingButtonRoot, _extends({\n    disabled: disabled || loading,\n    id: id,\n    ref: ref\n  }, other, {\n    variant: variant,\n    classes: classes,\n    ownerState: ownerState,\n    children: [ownerState.loadingPosition === 'end' ? children : loadingButtonLoadingIndicator, ownerState.loadingPosition === 'end' ? loadingButtonLoadingIndicator : children]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? LoadingButton.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * If `true`, the component is disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n  /**\n   * @ignore\n   */\n  id: PropTypes.string,\n  /**\n   * If `true`, the loading indicator is shown and the button becomes disabled.\n   * @default false\n   */\n  loading: PropTypes.bool,\n  /**\n   * Element placed before the children if the button is in loading state.\n   * The node should contain an element with `role=\"progressbar\"` with an accessible name.\n   * By default we render a `CircularProgress` that is labelled by the button itself.\n   * @default <CircularProgress color=\"inherit\" size={16} />\n   */\n  loadingIndicator: PropTypes.node,\n  /**\n   * The loading indicator can be positioned on the start, end, or the center of the button.\n   * @default 'center'\n   */\n  loadingPosition: chainPropTypes(PropTypes.oneOf(['start', 'end', 'center']), props => {\n    if (props.loadingPosition === 'start' && !props.startIcon) {\n      return new Error(`MUI: The loadingPosition=\"start\" should be used in combination with startIcon.`);\n    }\n    if (props.loadingPosition === 'end' && !props.endIcon) {\n      return new Error(`MUI: The loadingPosition=\"end\" should be used in combination with endIcon.`);\n    }\n    return null;\n  }),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The variant to use.\n   * @default 'text'\n   */\n  variant: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['contained', 'outlined', 'text']), PropTypes.string])\n} : void 0;\nexport default LoadingButton;"],"names":["_ref","_ref$title","title","_jsxs","Helmet","children","_jsx","concat","process","rel","type","href","defaultCashBreakDown","value1","value2","value3","cashColumns","key","label","width","cellClassName","flex","hide","checkColumns","align","selectedCollectionColumns","selectedCollectionForDeposit","reducer","state","action","_objectSpread","_defineProperty","field","value","DepositContext","createContext","cashCollection","setCashCollection","checkCollection","setCheckCollection","selectedCollection","setSelectedCollection","collectionForDeposit","setCollectionForDeposit","tableRows","updateTableRowsInput","LoadingCashTable","LoadingCheckTable","setTotal","total","TotalCashForDeposit","loadingSearchByDepositSlip","Deposit","_queryFn","_mutationFn","_mutationFn2","_mutationFn3","_queryFn2","_queryFn3","_getSelectedItem","_getSelectedItem2","_useState","useState","_useState2","_slicedToArray","activeTab","setActiveTab","_useState3","_useState4","buttonPosition","setButtonPosition","buttonsRef","useRef","cashTable","checkTable","selectedTable","collectionCheckTable","inputSearchRef","refSlipCode","refDateDepo","refBankAcctCode","refBankAcctName","bankDepositSearch","_refTempSlipCode","refBankAcctCodeTag","refBankAcctNameTag","refAcctID","refAcctName","refClassification","refSubAccount","refShortName","_useContext","useContext","AuthContext","myAxios","user","_useMultipleComponent","steps","_useState53","_useState54","currentStepIndex","setCurrentStepIndex","goTo","index","length","useMultipleComponent","_useState5","_useState6","_useState7","_useState8","_useState9","_useState10","selectedRows","setSelectedRows","_useState11","_useState12","_useState13","_useState14","tableRowsInputValue","setTableRowsInputValue","_useState15","_useState16","selectedRowsCashIndex","setSelectedRowsCashIndex","_useState17","_useState18","selectedRowsCheckedIndex","setSelectedRowsCheckedIndex","_useState19","_useState20","depositMode","setDepositMode","_useState21","_useState22","_useState23","_useState24","totalCheck","setTotalCheck","disabledFields","reduce","accumulator","currentValue","Check_No","parseFloat","Amount","replace","toLocaleString","minimumFractionDigits","maximumFractionDigits","_useQuery","useQuery","queryKey","queryFn","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","get","headers","Authorization","accessToken","abrupt","sent","stop","apply","arguments","refetchOnWindowFocus","onSuccess","data","response","wait","then","current","slipcode","collectionID","LoadingDepositSlipCode","isLoading","RefetchDepositSlipCode","refetch","_useMutation","useMutation","mutationKey","mutationFn","_x","_callee2","variables","_context2","post","res","resposnse","success","resetTables","resetRefs","refetchCashCollection","refetchCheckCollection","Swal","position","icon","message","timer","addDepositMutation","mutate","addDepositMutationLoading","_useMutation2","_x2","_callee3","_context3","updateDepositMutation","updateDepositMutationLoading","_useMutation3","_x3","_callee4","_context4","obj","cash","check","checks","cash_breakdown","console","log","resetTable","format","Date","refDate","client_name","setDataFormated","setTimeout","forEach","d","idx","SlipCode","checkbox","parentElement","querySelector","querySelectorAll","click","formatNumber","filter","_refSlipCode$current","t","itm","toString","searchByDepositSlip","_useQuery2","_callee5","_context5","filteredData","_toConsumableArray","loadingCashCollection","_useQuery3","_callee6","_context6","loadingCheckCollection","_useUpwardTableModalS","useUpwardTableModalSearchSafeMode","size","link","column","getSelectedItem","_x4","_x5","_x6","_x7","_callee7","rowItm","_","rowIdx","__","_context7","depositCloseModal","DepositUpwardTableModalSearch","UpwardTableModalSearch","depositOpenModal","openModal","closeModal","_useUpwardTableModalS2","_x8","_x9","_x10","_x11","_callee8","_context8","bankCloseModal","BankUpwardTableModalSearch","bankOpenModal","useEffect","_buttonsRef$current$","getBoundingClientRect","tabs","id","content","CashCollection","CheckCollection","SelectedCollection","CollectionForDeposit","_Fragment","PageHelmet","style","display","flexDirection","height","padding","background","alignItems","columnGap","marginBottom","TextInput","fontSize","fontWeight","input","className","onKeyDown","e","_inputSearchRef$curre","preventDefault","SearchIcon","sx","onIconClick","inputRef","Button","variant","startIcon","AddIcon","onClick","LoadingButton","color","_refBankAcctCode$curr","_refBankAcctCode$curr2","_refSlipCode$current2","_refDateDepo$current","_refBankAcctCode$curr4","_refBankAcctName$curr","result","_refBankAcctCode$curr3","trim","depositSlip","depositdate","BankAcctCode","BankAcctName","BankAcctCodeTag","BankAcctNameTag","AcctID","AcctName","Classification","SubAccount","ShortName","JSON","stringify","codeCondfirmationAlert","isUpdate","cb","userCodeConfirmation","saveCondfirmationAlert","isConfirm","disabled","SaveIcon","loading","CloseIcon","text","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","isConfirmed","code","gap","AutorenewIcon","defaultValue","_refBankAcctCode$curr5","AccountBalanceIcon","_refBankAcctCode$curr6","disableIcon","readOnly","map","tab","ref","el","currentTarget","cursor","backgroundColor","border","borderRight","borderLeft","borderTop","textTransform","Provider","fields","item","top","left","right","_useContext2","marginTop","DepositTable","containerStyle","disbaleTable","columns","rows","colItm","colIdx","rowSelected","newSelected","Check_Date","Bank","Name","RowIndex","DRCode","ORNo","DRRemarks","IDNo","TempOR","Short","_useContext3","selectedDataTotal","newSelectedCheckForDeposit","selectedData","getData","_useContext4","DepositTableSelected","_collectionCheckTable","_collectionCheckTable2","cashData","getSelectedRow","findIndex","indexOf","splice","setSelectedRow","dd","getColumns","setData","col","newSelectedData","_useContext5","borderRadius","isTableSelectable","textAlign","onChange","target","alignSelf","borderCollapse","borderBottom","items","TrComponent","colSpan","justifyContent","_useState25","_useState26","input1","setInput1","_useState27","_useState28","input2","setInput2","_useState29","_useState30","input3","setInput3","InputStyle","outline","margin","overflow","input1Value","includes","valueFor3","isNaN","parseInt","nextInput","document","focus","forwardRef","_ref2","_ref2$height","_ref2$disbaleTable","parentElementRef","_useState31","_useState32","_useState33","_useState34","setColumn","_useState35","_useState36","selectedRow","_useState37","_useState38","selectedRowIndex","setSelectedRowIndex","totalRowWidth","a","b","_useState39","_useState40","columnHeader","setColumnHeader","_useState41","_useState42","hoveredColumn","setHoveredColumn","useImperativeHandle","newData","Fragment","pointerEvents","boxShadow","zIndex","onMouseDown","stopPropagation","startX","clientX","startWidth","doDrag","moveEvent","newWidth","updatedColumns","addEventListener","stopDrag","removeEventListener","startResize","onMouseEnter","onMouseLeave","checked","onDoubleClick","userSelect","_ref3","_ref3$height","_ref3$disbaleTable","_ref3$isTableSelectab","_useState43","_useState44","_useState45","_useState46","_useState47","_useState48","_useState49","_useState50","_useState51","_useState52","props","_preConfirm","html","inputAttributes","autocapitalize","showLoaderOnConfirm","preConfirm","error","allowOutsideClick","isDeclined","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","getLoadingButtonUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","LoadingButtonRoot","styled","shouldForwardProp","prop","rootShouldForwardProp","name","overridesResolver","styles","root","startIconLoadingStart","loadingButtonClasses","endIconLoadingEnd","ownerState","theme","_extends","transition","transitions","create","duration","short","opacity","loadingPosition","fullWidth","marginRight","marginLeft","LoadingButtonLoadingIndicator","loadingIndicator","capitalize","_ref7","visibility","transform","vars","palette","React","inProps","useThemeProps","_props$disabled","idProp","_props$loading","loadingIndicatorProp","_props$loadingPositio","_props$variant","other","_objectWithoutPropertiesLoose","useId","CircularProgress","classes","slots","endIcon","composedClasses","composeClasses","useUtilityClasses","loadingButtonLoadingIndicator"],"sourceRoot":""}