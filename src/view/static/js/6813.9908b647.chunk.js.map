{"version":3,"file":"static/js/6813.9908b647.chunk.js","mappings":"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","sources":["components/UpwardTable.tsx","feautures/Admin/Dashboard.tsx","hooks/useMultipleComponent.tsx"],"sourcesContent":["\n\nimport React, {\n  useState,\n  useRef,\n  useEffect,\n  forwardRef,\n  useImperativeHandle,\n} from \"react\";\n\nimport \"../style/datagridview.css\";\nimport { Pagination } from \"@mui/material\";\n\ninterface UpwardTablePropsType {\n  rows: Array<any>;\n  column: Array<any>;\n  width: number;\n  height: number;\n  dataReadOnly: boolean;\n  onSelectionChange?: (row: Array<any>, rowIndex: number) => void;\n  onKeyDown?: (row: Array<any>, key: string, rowIndex: number) => void;\n  isMultipleSelect?: boolean;\n  freeze?: boolean;\n  inputsearchselector?: string;\n  isRowSelectable?: boolean;\n  unSelectable?: (row: any) => boolean;\n  isLoading?: boolean,\n  onRightClick?: (rowSelected: any, event: any) => any\n}\n\nconst UpwardTable = forwardRef(\n  (\n    {\n      rows,\n      column,\n      width,\n      height,\n      dataReadOnly,\n      onSelectionChange = () => { },\n      isMultipleSelect = false,\n      freeze = false,\n      onKeyDown,\n      inputsearchselector = \".search-input-up-on-key-down\",\n      isRowSelectable = true,\n      unSelectable = () => false,\n      isLoading,\n      onRightClick\n    }: UpwardTablePropsType,\n    UpwardTableRef\n  ) => {\n    const [pages, setPages] = useState<Array<any>>([])\n    const [pageNumber, setPageNumber] = useState(0)\n    const onSelectionChangeRef = useRef(onSelectionChange);\n    const onKeyDownRef = useRef(onKeyDown);\n    const [columns, setColumns] = useState(column.filter((itm) => !itm.hide));\n    const [hoveredColumn, setHoveredColumn] = useState(null);\n    const [selectedRows, setSelectedRows] = useState<Array<number>>([0]);\n    const [lastSelectedRowIndex, setLastSelectedRowIndex] = useState(0);\n    const [selectedItems, setSelectedItems] = useState<Array<number>>([]);\n    const divRef = useRef<HTMLDivElement>(null);\n    const [_clickTimeout, _setClickTimeout] = useState(null);\n\n\n    useEffect(() => {\n      const _pages = formatArrayIntoChunks(rows, 100)\n      setPages(_pages)\n    }, [rows])\n\n    const startResize = (index: any, e: any) => {\n      e.preventDefault();\n      e.stopPropagation();\n\n      const startX = e.clientX;\n      const startWidth = columns[index].width;\n\n      const doDrag = (moveEvent: any) => {\n        const newWidth = startWidth + (moveEvent.clientX - startX);\n        const updatedColumns = [...columns];\n        updatedColumns[index].width = newWidth > 50 ? newWidth : 50; // Set minimum column width\n        setColumns(updatedColumns);\n      };\n\n      const stopDrag = () => {\n        document.removeEventListener(\"mousemove\", doDrag);\n        document.removeEventListener(\"mouseup\", stopDrag);\n      };\n\n      document.addEventListener(\"mousemove\", doDrag);\n      document.addEventListener(\"mouseup\", stopDrag);\n    };\n    const handleMouseEnter = (index: any) => {\n      setHoveredColumn(index); // Set the hovered column index\n    };\n    const handleMouseLeave = () => {\n      setHoveredColumn(null); // Reset hovered column index\n    };\n    const handleRowClick = (\n      rowIndex: any,\n      event: React.MouseEvent<HTMLDivElement, MouseEvent>\n    ) => {\n      function getIndexAndData(selectedRowData: Array<any>) {\n        const filterSelectrowData = selectedRowData.map((d, idx) => {\n          if (!unSelectable(d)) {\n            return { idx, data: d };\n          }\n          return null;\n        });\n        const removeNullValue = filterSelectrowData.filter((d) => d !== null);\n        const data = removeNullValue.map((itm: any) => itm.data);\n        const newSelectedRowsFiltered = removeNullValue.map(\n          (itm: any) => itm.idx\n        );\n        return { newSelectedRowsFiltered, data };\n      }\n\n      if (!isMultipleSelect) {\n        // Single selection mode\n        setSelectedRows([rowIndex]);\n      } else {\n        // Multiple selection mode\n        if (event.shiftKey && lastSelectedRowIndex !== null) {\n          // Shift + Click: Select range between last clicked row and current clicked row\n          const rangeStart = Math.min(lastSelectedRowIndex, rowIndex);\n          const rangeEnd = Math.max(lastSelectedRowIndex, rowIndex);\n          const newSelectedRows: Array<number> = [];\n          for (let i = rangeStart; i <= rangeEnd; i++) {\n            if (!selectedRows.includes(i)) {\n              newSelectedRows.push(i);\n            }\n          }\n\n          let selectedItemsParams: Array<number> = [\n            ...selectedItems,\n            ...newSelectedRows,\n          ];\n\n          setSelectedRows([...selectedRows, ...newSelectedRows]);\n          const selectedRowData = rows.filter((d, idx) =>\n            selectedItemsParams.includes(idx)\n          );\n          const { newSelectedRowsFiltered } =\n            getIndexAndData(selectedRowData);\n\n          setSelectedItems(newSelectedRowsFiltered);\n          // onSelectionChangeRef.current(data, rowIndex);\n        } else if (event.ctrlKey || event.metaKey) {\n          // Ctrl (or Cmd on macOS) + Click: Toggle row selection\n          if (selectedRows.includes(rowIndex) && !freeze) {\n            setSelectedRows(selectedRows.filter((i) => i !== rowIndex));\n            setSelectedItems((d) => {\n              d = d.filter((i) => i !== rowIndex);\n              return d;\n            });\n            let selectedItemsParams: Array<number> = selectedItems.filter(\n              (i) => i !== rowIndex\n            );\n\n            setSelectedItems(selectedItemsParams);\n            // onSelectionChangeRef.current(selectedRowData, rowIndex);\n          } else {\n            setSelectedRows([...selectedRows, rowIndex]);\n            setSelectedItems((d) => {\n              d.push(rowIndex);\n              return d;\n            });\n            let selectedItemsParams: Array<number> = [\n              ...selectedItems,\n              rowIndex,\n            ];\n\n            setSelectedItems(selectedItemsParams);\n            // onSelectionChangeRef.current(selectedRowData, rowIndex);\n          }\n        } else {\n          // Regular click in multiple selection mode: Single click to select a row\n          setSelectedRows([rowIndex]);\n        }\n      }\n      setLastSelectedRowIndex(rowIndex); // Update the last selected index\n    };\n    const handleRowDoubleClick = (\n      rowIndex: any,\n      event: React.MouseEvent<HTMLDivElement, MouseEvent>\n    ) => {\n      const row = rows[rowIndex];\n      if (unSelectable(row)) return;\n      if (!isRowSelectable) return;\n\n\n      let selectedItemsParams: Array<number> = [];\n      if (isMultipleSelect) {\n        selectedItemsParams = [...selectedItems, ...selectedRows];\n      } else {\n        selectedItemsParams = [rowIndex];\n      }\n\n\n      if (selectedItems.includes(rowIndex) && !freeze) {\n        selectedItemsParams = selectedItems.filter((i) => i !== rowIndex);\n        setSelectedItems(selectedItemsParams);\n        onSelectionChangeRef.current([], rowIndex);\n        return;\n      }\n\n      setSelectedItems(selectedItemsParams);\n      onSelectionChangeRef.current([row], rowIndex);\n    };\n    const handleKeyDown = (e: any) => {\n\n      if (e.key === \"ArrowDown\") {\n        e.preventDefault();\n        setSelectedRows((prevIndex: any) => {\n          if (prevIndex[prevIndex.length - 1] === null) return [0];\n          if (prevIndex[prevIndex.length - 1] >= rows.length - 1) {\n            return [rows.length - 1];\n          }\n          const newPrevIndex = prevIndex[prevIndex.length - 1] + 1;\n          const row = document.querySelector(`.row-${newPrevIndex}`);\n          row?.querySelector(\"input\")?.focus();\n\n          row?.scrollIntoView({ block: \"end\", behavior: \"smooth\" });\n          return [newPrevIndex];\n        });\n      } else if (e.key === \"ArrowUp\") {\n        e.preventDefault();\n\n        if (selectedRows[selectedRows.length - 1] === 0) {\n          const input = document.querySelector(\n            inputsearchselector\n          ) as HTMLInputElement;\n          if (input && input.tagName === \"INPUT\") {\n            input?.focus();\n          } else if (input && input.tagName === \"DIV\") {\n            const divInput = document.querySelector(\n              `${inputsearchselector} input`\n            ) as HTMLInputElement;\n\n            divInput?.focus();\n          }\n        }\n\n        setSelectedRows((prevIndex: any) => {\n          if (prevIndex[prevIndex.length - 1] === 0) return [0];\n          const newPrevIndex = prevIndex[prevIndex.length - 1] - 1;\n          const row = document.querySelector(`.row-${newPrevIndex}`);\n\n          row?.scrollIntoView({ block: \"end\", behavior: \"smooth\" });\n          row?.querySelector(\"input\")?.focus();\n          return [newPrevIndex];\n        });\n      }\n\n    };\n    const handleRowKeyDown = (e: any) => {\n      e.stopPropagation()\n\n      if (e.key === \"Enter\" || e.key === \"NumpadEnter\") {\n        e.preventDefault();\n        if (!isRowSelectable) return;\n\n        let selectedItemsParams: Array<number> = [];\n        const rowIndex = selectedRows[selectedRows.length - 1];\n        if (isMultipleSelect) {\n          selectedItemsParams = [...selectedItems, ...selectedRows];\n        } else {\n          selectedItemsParams = [rowIndex];\n        }\n        const row = rows[selectedItemsParams[selectedItemsParams.length - 1]];\n        if (unSelectable(row)) {\n          return;\n        }\n\n        if (selectedItems.includes(rowIndex) && !freeze) {\n          selectedItemsParams = selectedItems.filter((i) => i !== rowIndex);\n          setSelectedItems(selectedItemsParams);\n          onSelectionChangeRef.current([], rowIndex);\n          return;\n        }\n\n        setSelectedItems(selectedItemsParams);\n        onSelectionChangeRef.current([row], rowIndex);\n      } else if (e.key === \"Delete\" || e.key === \"Backspace\") {\n        if (!isRowSelectable) return;\n        const rowIndex = selectedRows[selectedRows.length - 1];\n\n        const selectedRowData = rows.filter((d, idx) =>\n          selectedRows.includes(idx)\n        );\n\n        if (onKeyDownRef?.current) {\n          onKeyDownRef?.current(selectedRowData, e.key, rowIndex);\n        }\n      }\n    }\n    useImperativeHandle(UpwardTableRef, () => ({\n      resetTableSelected: () => {\n        setSelectedRows([0]);\n        setLastSelectedRowIndex(0);\n        setSelectedItems([]);\n        if (rows.length > 0) {\n          const row = document.querySelector(`.row-${0}`);\n          row?.scrollIntoView({ block: \"end\", behavior: \"smooth\" });\n        }\n      },\n      getSelectedIndex: () => {\n        return selectedItems[0];\n      },\n      getSelectedRows: () => {\n        return rows.filter((d, idx) => selectedItems.includes(idx));\n      },\n      getFirstColumn: () => {\n        return rows.filter((d, idx) => selectedItems.includes(idx));\n      },\n      getParentElement: () => {\n        return divRef.current\n      },\n      getSelectedRowsOnClick: () => {\n        return selectedRows[0];\n      },\n      setSelectRows: (indx: number) => {\n        return setSelectedItems([indx])\n      },\n    }));\n\n    const handleRightClick = (event: any, rowIndex: number) => {\n      event.preventDefault();\n      const rowSelected = rows[rowIndex]\n      if (onRightClick) {\n        onRightClick(rowSelected, event)\n      }\n    };\n\n\n\n    return (\n      <div\n        style={{\n          display: \"flex\",\n          justifyContent: \"center\",\n        }}\n        onKeyDown={handleKeyDown}\n      >\n        <div>\n          <div className=\"table-frame-color\">\n            <div\n              style={{\n                display: \"flex\",\n                flexDirection: \"column\",\n                width: `${width - 10}px        `,\n                height: `${height - 135}px`,\n                minHeight: \"270px\"\n              }}\n              className=\"table-frame\"\n            >\n              <div className=\"table-panel\">\n                <div ref={divRef} className={`grid-container `} tabIndex={-1}>\n                  <div\n                    className=\"grid-row grid-header\"\n                    style={{\n                      position: \"sticky\",\n                      zIndex: \"10\",\n                      top: \"-1px\",\n                      background: \"white\",\n                    }}\n                  >\n                    {columns.map((col: any, index: number) => (\n                      <div\n                        key={index}\n                        className={`grid-cell header-cell ${hoveredColumn === index ? `highlight-column` : \"\"\n                          }`} // Add the class if hovered\n                        style={{ width: col.width, height: \"20px\", }}\n                      >\n                        <input\n                          style={{ fontWeight: \"bold\" }}\n                          defaultValue={col.headerName}\n                          readOnly\n                          onChange={(e) => { }}\n                        />\n                        <div\n                          className=\"resize-handle\"\n                          onMouseDown={(e) => startResize(index, e)}\n                          onMouseEnter={(e) => {\n                            e.preventDefault();\n                            handleMouseEnter(index);\n                          }} // On hover\n                          onMouseLeave={(e) => {\n                            e.preventDefault();\n                            handleMouseLeave();\n                          }} // On mouse leave\n                        />\n                      </div>\n                    ))}\n                  </div>\n                  {pages[pageNumber]?.map((row: any, rowIndex: any) => (\n                    <div\n                      className={`grid-row row-${rowIndex}`} // Highlight selected row\n                      key={rowIndex}\n                      onClick={(e) => handleRowClick(rowIndex, e)}\n                      onDoubleClick={(e) => {\n                        // e.stopPropagation()\n\n                        if (_clickTimeout) {\n                          clearTimeout(_clickTimeout);\n                          _setClickTimeout(null);\n                        }\n\n                        const timeoutId: any = setTimeout(() => {\n                          handleRowDoubleClick(rowIndex, e)\n                        }, 200);\n\n                        _setClickTimeout(timeoutId);\n\n\n\n                      }}\n                      onKeyDown={(e) => {\n\n                        // e.stopPropagation()\n\n                        if (_clickTimeout) {\n                          clearTimeout(_clickTimeout);\n                          _setClickTimeout(null);\n                        }\n\n                        const timeoutId: any = setTimeout(() => {\n                          handleRowKeyDown(e)\n                        }, 200);\n\n                        _setClickTimeout(timeoutId);\n\n\n                      }}\n                      onContextMenu={(e) => handleRightClick(e, rowIndex)}\n                    >\n                      {columns.map((col: any, colIndex: number) => (\n                        <div\n                          key={colIndex}\n                          style={{ width: col.width }}\n                          className={`grid-cell ${hoveredColumn === colIndex ? `highlight-column` : \"\"} row-${rowIndex} col-${colIndex}`}\n                        >\n                          <input\n                            value={row[col.field]}\n                            onChange={(e) => { }}\n                            readOnly={dataReadOnly}\n                            className={`${selectedRows.includes(rowIndex)\n                              ? \"selected-row\"\n                              : \"\"\n                              } ${selectedItems.includes(rowIndex)\n                                ? \"selected-items\"\n                                : \"\"\n                              }\n                          ${col.type === \"number\" ? \"number\" : \"text\"}\n                          `}\n                          />\n                          <div\n                            className=\"resize-handle\"\n                            onMouseDown={(e) => {\n                              e.preventDefault();\n                              startResize(colIndex, e);\n                            }}\n                            onMouseEnter={(e) => {\n                              e.preventDefault();\n                              handleMouseEnter(colIndex);\n                            }} // On hover\n                            onMouseLeave={(e) => {\n                              e.preventDefault();\n                              handleMouseLeave();\n                            }} // On mouse leave\n                          />\n                        </div>\n                      ))}\n                    </div>\n                  ))}\n                </div>\n              </div>\n            </div>\n\n            {isLoading && <div className=\"table-loading\">\n              <div className=\"loader\"></div>\n            </div>}\n          </div>\n          <div className=\"table-panel-footer\" >\n            <div>Records : {rows?.length}</div>\n            <div><Pagination count={pages.length} onChange={(e, value) => {\n              setPageNumber(value - 1)\n            }} />\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n);\n\nfunction formatArrayIntoChunks(arr: Array<any>, chunkSize = 100) {\n  let result = [];\n\n  for (let i = 0; i < arr.length; i += chunkSize) {\n    // Use slice to create chunks of 'chunkSize'\n    result.push(arr.slice(i, i + chunkSize));\n  }\n  return result;\n}\n\n\n\n\n\nexport { UpwardTable, };\n","import React, { useEffect, useState, useRef } from \"react\";\nimport { useQuery } from \"react-query\";\nimport { myAxios } from \"../../lib/axios\";\nimport { useContext } from \"react\";\nimport { AuthContext } from \"../../components/AuthContext\";\nimport \"../../style/dashboard.css\";\nimport useMultipleComponent from \"../../hooks/useMultipleComponent\";\nimport { flushSync } from \"react-dom\";\nimport { UpwardTable } from \"../../components/UpwardTable\";\n\n\n\nconst policyColumn = [\n  { field: \"AssuredName\", headerName: \"Assured Name\", width: 300 },\n  { field: \"PolicyNo\", headerName: \"Policy No.\", width: 200 },\n  { field: \"InsuredValue\", headerName: \"Insured Value\", width: 120 ,type:\"number\"},\n  { field: \"unit\", headerName: \"Unit\", width: 270 },\n  { field: \"ChassisNo\", headerName: \"Chassis No.\", width: 160 },\n  { field: \"DateExpired\", headerName: \"Date Expired\", width: 100 },\n]\n\nconst claimColumn = [\n  { field: \"claims_id\", headerName: \"Claims ID.\", width: 300 },\n  { field: \"AssuredName\", headerName: \"Assured Name\", width: 200 },\n  { field: \"PolicyNo\", headerName: \"Policy No.\", width: 120 ,type:\"number\"},\n  { field: \"dateAccident\", headerName: \"Date Accident\", width: 270 },\n  { field: \"dateReported\", headerName: \"Date Reported\", width: 160 },\n  { field: \"status\", headerName: \"Status\", width: 100 },\n]\n\nconst buttons = [\n  {text:\"TPL\"},\n  {text:\"COM\"},\n  {text:\"CGL\"},\n  {text:\"FIRE\"},\n  {text:\"MAR\"},\n  {text:\"PA\"},\n]\n\nexport default function Dashboard() {\n  const [buttonShadowPostion, setButtonShadowPostion] = useState(0);\n  const [showbuttonShadowPostion, setShowbuttonShadowPostion] = useState(false);\n\n  const [currButtonClick, setCurrButtonClick] = useState(0);\n  const { step, goTo } = useMultipleComponent([\n    <POLICYTABLE policy={'TPL'} column={policyColumn} />,\n    <POLICYTABLE policy={'COM'} column={policyColumn} />,\n    <POLICYTABLE policy={'CGL'} column={policyColumn} />,\n    <POLICYTABLE policy={'FIRE'} column={policyColumn} />,\n    <POLICYTABLE policy={'MAR'} column={policyColumn} />,\n    <POLICYTABLE policy={'PA'} column={policyColumn} />,\n  ]);\n  \n  const { user } = useContext(AuthContext);\n\n  const { data: claimsData, isLoading: isLoadingClaims } = useQuery({\n    queryKey: \"claims-notice\",\n    queryFn: async () =>\n      await myAxios.get(\"/get-claims-notice\", {\n        headers: {\n          Authorization: `Bearer ${user?.accessToken}`,\n        },\n      }),\n  });\n\n\n  const handleIncrement = (index:number ,e:any) => {\n    flushSync(()=>{\n      setShowbuttonShadowPostion(true)\n    })\n    setCurrButtonClick(index);\n    goTo(index)\n    \n    setButtonShadowPostion(e.target.getBoundingClientRect().left )\n   \n  };\n\n  const width = window.innerWidth - 50;\n  const height = window.innerHeight - 145;\n\n  // style={{border:\"1px solid red\" ,height:\"500px\" ,background:\"#D3D3D3\"}}\n  return (\n    <div id=\"main\" >\n      {\n        (user?.userAccess === \"PRODUCTION\" ||\n          user?.userAccess === \"ACCOUNTING\" ||\n          user?.userAccess === \"PRODUCTION_ACCOUNTING\" ||\n          user?.userAccess === \"ADMIN\") &&\n          <div style={{position:\"relative\",width:\"100%\",height:\"auto\"}}>\n          <h3 style={{padding:0,margin:0,fontWeight:\"bold\" ,position:\"absolute\"}}>RENEWAL NOTICE</h3>\n        <div style={{position:\"relative\" ,textAlign:\"center\",width:\"100%\" ,marginBottom:\"10px\"}}>\n          {buttons.map((itm,index)=>{\n              return (<ButtonComponent \n                key={index} \n                text={itm.text} \n                index={index}  \n                handleIncrement={handleIncrement}\n                curr={currButtonClick}\n                />)\n          })}\n            <span \n            onTransitionEnd={(e)=>{\n                setShowbuttonShadowPostion(false); // Hide element when transition is complete\n            }}\n            style={{\n            position:\"absolute\",\n            background:\"rgba(0, 0, 0, 0.524)\",\n            top:0,\n            left:`${buttonShadowPostion}px`,\n            width:\"60px\",\n            height:\"40px\",\n            transition:\"all 200ms\",\n            display:showbuttonShadowPostion ? \"block\" :\"none\"\n          }}\n          ></span>\n        </div>\n      <div style={{ width:\"100%\",height:\"360px\"}}>\n          {step}\n      </div>\n      </div>\n      }\n\n {(user?.userAccess === \"CLAIMS\" || user?.userAccess === \"ADMIN\") && ( \n            <div>\n               <h3 style={{padding:0,fontWeight:\"bold\"}}>CLAIMS</h3>\n            {isLoadingClaims ? (\n              <div>Loading...</div>\n            ) : (\n              <UpwardTable\n              isLoading={isLoadingClaims}\n              ref={null}\n              rows={claimsData?.data.claims}\n              column={claimColumn}\n              width={width}\n              height={height}\n              dataReadOnly={true}\n              onSelectionChange={()=>{}}\n              onKeyDown={() => {}}\n              inputsearchselector=\".manok\"\n            />\n            )}\n            </div>\n         )} \n  \n    </div>\n  );\n}\n\nconst ButtonComponent =({text = 'unknown',index = 0 ,handleIncrement ,curr }:any)=>{\n\n  return (\n\n    <button \n    disabled={curr === index}\n      style={{\n        border:\"none\",\n        borderRadius:\"0\",\n        cursor:\"pointer\",\n        color:'white',\n        background:(curr === index)    ? \"\" :\"#008CBA\",\n        width:\"80px\",\n        height:\"40px\",\n        padding:0\n      }}\n\n    onClick={(e)=>{\n      handleIncrement(index ,e)\n    }}>{text}</button>\n\n   \n  )\n}\n\nconst POLICYTABLE = ({policy,column}:any)=>{\n  const tableRef = useRef()\n  const [laoding,setLoading] = useState(false)\n  const [data,setData] = useState([])\n  const { user } = useContext(AuthContext);\n\n\n  useEffect(()=>{\n    setLoading(true)\n    myAxios.get(`/get-renewal-this-month?policy=${policy}`, {\n      headers: {\n        Authorization: `Bearer ${user?.accessToken}`,\n      },\n    }).then((data)=>{\n      setLoading(false)\n      setData(data?.data.renewal)\n    })\n  },[policy ,user])\n\n  const width = window.innerWidth - 50;\n  const height = window.innerHeight - 145;\n  if(laoding){\n    return <div style={{textAlign:\"center\"}}>Loading...</div>\n  }\n  return (\n    <div>\n      <UpwardTable\n        isLoading={laoding}\n        ref={tableRef}\n        rows={data}\n        column={column}\n        width={width}\n        height={height}\n        dataReadOnly={true}\n        onSelectionChange={()=>{}}\n        onKeyDown={() => {}}\n        inputsearchselector=\".manok\"\n      />\n    </div>\n  )\n}\n\n// function formatData(data: any) {\n//   return data.map((itm: any) => {\n//     itm.PrevBalance = parseFloat(itm.PrevBalance.toString().replace(/,/g, \"\"));\n//     itm.CurrCredit = parseFloat(itm.CurrCredit.toString().replace(/,/g, \"\"));\n//     itm.CurrDebit = parseFloat(itm.CurrDebit.toString().replace(/,/g, \"\"));\n//     itm.TotalBalance = parseFloat(\n//       itm.TotalBalance.toString().replace(/,/g, \"\")\n//     );\n//     return itm;\n//   });\n// }\n\n// function formatNumber(num: any) {\n//   const formattedPrice = new Intl.NumberFormat(\"en-US\", {\n//     minimumFractionDigits: 2,\n//     maximumFractionDigits: 2,\n//   }).format(num);\n\n//   return formattedPrice;\n// }\n// const GroupedReport = forwardRef(({ data }: any, ref: any) => {\n//   data = formatData(data);\n//   // Group by \"H\"\n//   const groupedByH = _.groupBy(data, \"H\");\n\n//   function getSum(data: any, property: string) {\n//     const totalPrice = data.reduce(\n//       (total: any, product: any) => total + product[property],\n//       0\n//     );\n\n//     return totalPrice;\n//   }\n\n//   return (\n//     <div ref={ref}>\n//       {Object.keys(groupedByH).map((groupHKey) => {\n//         const groupHT1 = _.groupBy(groupedByH[groupHKey], \"HT1\"); // Group by \"HT1\" inside each \"H\" group\n//         const groupTotalH1 = Object.values(groupHT1).flat();\n\n//         return (\n//           <div key={groupHKey} className={`H`}>\n//             <p\n//               style={{ margin: 0, padding: \"10px\", color: \"black\" }}\n//               className=\"p\"\n//             >\n//               {groupHKey}\n//             </p>\n//             {Object.keys(groupHT1).map((groupHT1Key) => {\n//               const groupHT2 = _.groupBy(groupHT1[groupHT1Key], \"HT2\");\n//               const groupTotal = Object.values(groupHT2).flat();\n//               return (\n//                 <div\n//                   key={groupHT1Key}\n//                   style={{ marginLeft: \"20px\" }}\n//                   className={`HT1`}\n//                 >\n//                   <p\n//                     style={{ margin: 0, padding: \"10px\", color: \"black\" }}\n//                     className=\"p\"\n//                   >\n//                     {groupHT1Key}\n//                   </p>\n//                   {Object.keys(groupHT2).map((groupHT2Key) => {\n//                     return (\n//                       <div\n//                         key={groupHT2Key}\n//                         style={{ marginLeft: \"40px\" }}\n//                         className={`HT2`}\n//                       >\n//                         <p\n//                           style={{ margin: 0, padding: \"10px\", color: \"black\" }}\n//                           className=\"p\"\n//                         >\n//                           {groupHT2Key}\n//                         </p>\n//                         {groupHT2[groupHT2Key].map((item, index) => (\n//                           <div\n//                             key={index}\n//                             style={{ marginLeft: \"60px\", display: \"flex\" }}\n//                             className=\"p\"\n//                           >\n//                             <div style={{ width: \"400px\" }}>{item.HT3}</div>\n//                             <div style={{ width: \"150px\", textAlign: \"right\" }}>\n//                               {formatNumber(item.PrevBalance)}\n//                             </div>\n//                             <div style={{ width: \"150px\", textAlign: \"right\" }}>\n//                               {formatNumber(item.CurrDebit)}\n//                             </div>\n//                             <div style={{ width: \"150px\", textAlign: \"right\" }}>\n//                               {formatNumber(item.CurrCredit)}\n//                             </div>\n//                             <div style={{ width: \"150px\", textAlign: \"right\" }}>\n//                               {formatNumber(item.TotalBalance)}\n//                             </div>\n//                           </div>\n//                         ))}\n//                         <div\n//                           style={{\n//                             marginLeft: \"60px\",\n//                             display: \"flex\",\n//                           }}\n//                           className=\"p\"\n//                         >\n//                           <div\n//                             style={{ width: \"400px\", textAlign: \"left\" }}\n//                           ></div>\n//                           <div\n//                             style={{\n//                               width: \"150px\",\n//                               borderTop: \"1px solid #94a3b8\",\n//                               textAlign: \"right\",\n//                               fontWeight: \"bold\",\n//                             }}\n//                           >\n//                             {formatNumber(\n//                               getSum(groupHT2[groupHT2Key], \"PrevBalance\")\n//                             )}\n//                           </div>\n//                           <div\n//                             style={{\n//                               width: \"150px\",\n//                               textAlign: \"right\",\n//                               fontWeight: \"bold\",\n//                               borderTop: \"1px solid #94a3b8\",\n//                             }}\n//                           >\n//                             {formatNumber(\n//                               getSum(groupHT2[groupHT2Key], \"CurrDebit\")\n//                             )}\n//                           </div>\n//                           <div\n//                             style={{\n//                               width: \"150px\",\n//                               textAlign: \"right\",\n//                               fontWeight: \"bold\",\n//                               borderTop: \"1px solid #94a3b8\",\n//                             }}\n//                           >\n//                             {formatNumber(\n//                               getSum(groupHT2[groupHT2Key], \"CurrCredit\")\n//                             )}\n//                           </div>\n//                           <div\n//                             style={{\n//                               width: \"150px\",\n//                               textAlign: \"right\",\n//                               fontWeight: \"bold\",\n//                               borderTop: \"1px solid #94a3b8\",\n//                             }}\n//                           >\n//                             {formatNumber(\n//                               getSum(groupHT2[groupHT2Key], \"TotalBalance\")\n//                             )}\n//                           </div>\n//                         </div>\n//                       </div>\n//                     );\n//                   })}\n//                   <div\n//                     style={{\n//                       marginLeft: \"20px\",\n//                       display: \"flex\",\n//                       padding: \"10px 0px\",\n//                     }}\n//                     className=\"p\"\n//                   >\n//                     <div style={{ width: \"480px\", textAlign: \"left\" }}>\n//                       <p style={{ margin: 0, padding: 0, color: \"black\" }}>\n//                         TOTAL {groupHT1Key}\n//                       </p>\n//                     </div>\n//                     <div\n//                       style={{\n//                         width: \"150px\",\n//                         textAlign: \"right\",\n//                         fontWeight: \"bold\",\n//                         borderBottom: \"1px solid black\",\n//                       }}\n//                     >\n//                       {formatNumber(getSum(groupTotal, \"PrevBalance\"))}\n//                     </div>\n//                     <div\n//                       style={{\n//                         width: \"150px\",\n//                         textAlign: \"right\",\n//                         fontWeight: \"bold\",\n//                         borderBottom: \"1px solid black\",\n//                       }}\n//                     >\n//                       {formatNumber(getSum(groupTotal, \"CurrDebit\"))}\n//                     </div>\n//                     <div\n//                       style={{\n//                         width: \"150px\",\n//                         textAlign: \"right\",\n//                         fontWeight: \"bold\",\n//                         borderBottom: \"1px solid black\",\n//                       }}\n//                     >\n//                       {formatNumber(getSum(groupTotal, \"CurrCredit\"))}\n//                     </div>\n//                     <div\n//                       style={{\n//                         width: \"150px\",\n//                         textAlign: \"right\",\n//                         fontWeight: \"bold\",\n//                         borderBottom: \"1px solid black\",\n//                       }}\n//                     >\n//                       {formatNumber(getSum(groupTotal, \"TotalBalance\"))}\n//                     </div>\n//                   </div>\n//                 </div>\n//               );\n//             })}\n//             <div\n//               style={{\n//                 display: \"flex\",\n//                 padding: \"10px 0px\",\n//               }}\n//               className=\"p\"\n//             >\n//               <div style={{ width: \"520px\", textAlign: \"left\" }}>\n//                 <p style={{ margin: 0, padding: 0, color: \"black\" }}>\n//                   TOTAL{\" \"}\n//                   {groupHKey !== \"ASSETS\"\n//                     ? groupHKey + \"AND CAPITAL\"\n//                     : groupHKey}\n//                 </p>\n//               </div>\n//               <div\n//                 style={{\n//                   width: \"150px\",\n//                   textAlign: \"right\",\n//                   fontWeight: \"bold\",\n//                   borderBottom: \"double black 5px\",\n//                 }}\n//               >\n//                 {formatNumber(getSum(groupTotalH1, \"PrevBalance\"))}\n//               </div>\n//               <div\n//                 style={{\n//                   width: \"150px\",\n//                   textAlign: \"right\",\n//                   fontWeight: \"bold\",\n//                   borderBottom: \"double black 5px\",\n//                 }}\n//               >\n//                 {formatNumber(getSum(groupTotalH1, \"CurrDebit\"))}\n//               </div>\n//               <div\n//                 style={{\n//                   width: \"150px\",\n//                   textAlign: \"right\",\n//                   fontWeight: \"bold\",\n//                   borderBottom: \"double black 5px\",\n//                 }}\n//               >\n//                 {formatNumber(getSum(groupTotalH1, \"CurrCredit\"))}\n//               </div>\n//               <div\n//                 style={{\n//                   width: \"150px\",\n//                   textAlign: \"right\",\n//                   fontWeight: \"bold\",\n//                   borderBottom: \"double black 5px\",\n//                 }}\n//               >\n//                 {formatNumber(getSum(groupTotalH1, \"TotalBalance\"))}\n//               </div>\n//             </div>\n//           </div>\n//         );\n//       })}\n//     </div>\n//   );\n// });\n\n// function convertElementToURL(page: Element) {\n//   const elements = page as Element;\n//   console.log(elements.getBoundingClientRect());\n//   const elementString = new XMLSerializer().serializeToString(elements);\n//   const height = elements.getBoundingClientRect().height;\n//   const width = elements.getBoundingClientRect().width;\n//   const viewBox = `0 0 ${width} ${height}`;\n//   let scale = 100;\n\n//   const dataURL =\n//     \"data:image/svg+xml,\" +\n//     encodeURIComponent(\n//       `<svg xmlns=\"http://www.w3.org/2000/svg\"  width=\"${scale}%\" height=\"${scale}%\">\n//           <foreignObject viewBox=\"${viewBox}\" width=\"100%\" height=\"100%\">\n//               ${elementString}\n//           </foreignObject>\n//           <style>\n//               .page{\n//                   page-break-after: always;\n//                   display: flex;\n//                   flex-direction: column;\n//                   height: 100vh;\n//                   width: 100vw;\n//               }\n//               img{\n//                   width: 100%;\n//                   height: 100%;\n//               }\n//           </style> \n//         </svg>`\n//     );\n//   return dataURL;\n// }\n\n// export default function Dashboard() {\n//   const report = useRef<HTMLDivElement>(null);\n//   const { user } = useContext(AuthContext);\n//   const [data, setData] = useState([]);\n//   const handleClick = async () => {\n//     const state = {\n//       dateFormat: \"Monthly\",\n//       format: 0,\n//       date: \"2024-09-05T05:56:21.669Z\",\n//       sub_acct: \"All\",\n//       nominalAccount: 0,\n//     };\n//     const response = await myAxios.post(\n//       \"/reports/accounting//balance-sheet-long-report\",\n//       state,\n//       {\n//         headers: {\n//           Authorization: `Bearer ${user?.accessToken}`,\n//         },\n//       }\n//     );\n//     const jsonData = await response.data;\n//     setData(jsonData.data);\n//   };\n//   const handleLogic = () => {\n//     const loopThroughChildren = (elements: Array<HTMLElement>) => {\n//       const F_EL = elements[0];\n//       const L_EL = elements[elements.length - 1];\n\n//       let _EH = 0;\n//       const _EL_C = [];\n//       elements.forEach((child: HTMLElement, index) => {\n//         const _H = Math.round(child.getBoundingClientRect().height);\n//         _EH += _H;\n//         if (_EH + _H > 900) {\n//           _EH = 0;\n//           _EL_C.push(child);\n//           _EL_C.push(elements[index + 1]);\n//           console.log(`============ ${index} - ${_EH} ================`, child);\n//         }\n//       });\n\n//       _EL_C.unshift(F_EL);\n//       _EL_C.push(L_EL);\n\n//       const formatArrayToObjects = (arr: any) => {\n//         let formattedArray = [];\n\n//         // Loop through the array in steps of 2\n//         for (let i = 0; i < arr.length; i += 2) {\n//           formattedArray.push({\n//             start: arr[i],\n//             end: arr[i + 1],\n//           });\n//         }\n\n//         return formattedArray;\n//       };\n//       const formatted = formatArrayToObjects(_EL_C);\n//       const pageCuts = document.getElementById(\"cut-pages\");\n//       const div = document.createElement(\"div\");\n//       div.className = \"main\";\n//       formatted.forEach((itm) => {\n//         const page = document.createElement(\"div\");\n//         page.className = \"page\";\n//         page.style.height = \"11in\";\n//         page.style.width = \"auto\";\n//         page.style.fontSize = \"8px !important\";\n//         page.style.padding = \"15px\";\n//         const range = document.createRange();\n\n//         range.setStartBefore(itm.start);\n//         range.setEndAfter(itm.end);\n//         const cutContent = range.cloneContents();\n//         range.deleteContents();\n//         page.appendChild(cutContent);\n//         div.appendChild(page);\n//       });\n//       pageCuts?.appendChild(div);\n//     };\n//     const dd = report.current?.querySelectorAll(\".p\") as any;\n//     loopThroughChildren(dd);\n//   };\n\n//   const captureElement = async (page: Element) => {\n//     const imgData = convertElementToURL(page);\n//     const tableIamge = '<img src=\"' + imgData + '\" />';\n//     return `<div class=\"page\">${tableIamge}</div>`;\n//   };\n\n//   async function getPaperToPrint() {\n//     let printString = \"\";\n//     const pages: any = document.querySelectorAll(\"#cut-pages .page\");\n\n//     for (const page of pages) {\n//       page.style.fontSize = \"8px !important\";\n//       printString += await captureElement(page);\n//     }\n//     return printString;\n//   }\n\n//   return (\n//     <div>\n//       <button onClick={handleClick}>Report</button>\n//       <button\n//         onClick={async () => {\n//           await getPaperToPrint().then((printString) => {\n//             const iframe = document.createElement(\n//               \"iframe\"\n//             ) as HTMLIFrameElement;\n//             iframe.style.display = \"none\";\n//             document.body.appendChild(iframe);\n//             const iframeDocument =\n//               iframe.contentDocument || iframe.contentWindow?.document;\n//             const htmlContent = `\n//                           <!DOCTYPE html>\n//                           <html lang=\"en\">\n//                           <head>\n//                               <meta charset=\"UTF-8\">\n//                               <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n//                               <title>Printed HTML Content</title>\n//                               <style>\n//                               @import url('https://fonts.googleapis.com/css2?family=Lato:ital,wght@0,100;0,300;0,400;0,700;0,900;1,100;1,300;1,400;1,700;1,900&family=Plus+Jakarta+Sans:ital,wght@0,200..800;1,200..800&family=Roboto:ital,wght@0,100;0,300;0,400;0,500;0,700;0,900;1,100;1,300;1,400;1,500;1,700;1,900&display=swap');\n//                               @media print {\n//                                 @page{\n//                                     margin-top: 0mm;\n//                                     margin-bottom: 0mm;\n//                                     margin-left: 0mm;\n//                                     margin-right: 0mm;\n//                                 }\n//                                 body {\n//                                       margin: 0;\n//                                       padding: 0;\n//                                   }\n//                                 .page{\n//                                     page-break-after: always;\n//                                     height: 100vh;\n//                                     width: 100vw;\n//                                 }\n                               \n//                                  img{\n//                                     width: 95%;\n//                                     height: 100%;\n//                                 }\n                               \n//                               }\n          \n//                               </style>\n//                           </head>\n//                           <body>\n//                                 ${printString}\n//                           </body>\n//                           </html>\n//                       `;\n//             iframeDocument?.open();\n//             iframeDocument?.write(htmlContent);\n//             iframeDocument?.close();\n//             setTimeout(function () {\n//               iframe.contentWindow?.print();\n//               iframe.parentNode?.removeChild(iframe);\n//             }, 1000);\n//           });\n//         }}\n//       >\n//         Report Element\n//       </button>\n//       <button onClick={handleLogic}>Logic</button>\n//       <GroupedReport data={data} ref={report} />\n//       <div id=\"cut-pages\"></div>\n//     </div>\n//   );\n// }\n","import { useState, ReactElement } from \"react\";\n\nexport default function useMultipleComponent(steps: ReactElement[]) {\n  const [currentStepIndex, setCurrentStepIndex] = useState(0);\n\n  function next() {\n    setCurrentStepIndex((i) => {\n      if (i >= steps.length - 1) {\n        return i;\n      }\n      return i + 1;\n    });\n  }\n  function back() {\n    setCurrentStepIndex((i) => {\n      if (i <= 0) {\n        return i;\n      }\n      return i + 1;\n    });\n  }\n  function goTo(index: number) {\n    setCurrentStepIndex(index);\n  }\n  \n  return {\n    step: steps[currentStepIndex],\n    goTo,\n    back,\n    next,\n    isFirstStep: currentStepIndex !== 0,\n    isLastStep: currentStepIndex === steps.length - 1,\n    currentStepIndex,\n  };\n}\n"],"names":["UpwardTable","forwardRef","_ref","UpwardTableRef","_pages$pageNumber","rows","column","width","height","dataReadOnly","_ref$onSelectionChang","onSelectionChange","_ref$isMultipleSelect","isMultipleSelect","_ref$freeze","freeze","onKeyDown","_ref$inputsearchselec","inputsearchselector","_ref$isRowSelectable","isRowSelectable","_ref$unSelectable","unSelectable","isLoading","onRightClick","_useState","useState","_useState2","_slicedToArray","pages","setPages","_useState3","_useState4","pageNumber","setPageNumber","onSelectionChangeRef","useRef","onKeyDownRef","_useState5","filter","itm","hide","_useState6","columns","setColumns","_useState7","_useState8","hoveredColumn","setHoveredColumn","_useState9","_useState10","selectedRows","setSelectedRows","_useState11","_useState12","lastSelectedRowIndex","setLastSelectedRowIndex","_useState13","_useState14","selectedItems","setSelectedItems","divRef","_useState15","_useState16","_clickTimeout","_setClickTimeout","useEffect","_pages","arr","chunkSize","arguments","length","undefined","result","i","push","slice","formatArrayIntoChunks","startResize","index","e","preventDefault","stopPropagation","startX","clientX","startWidth","doDrag","moveEvent","newWidth","updatedColumns","_toConsumableArray","document","addEventListener","stopDrag","removeEventListener","handleMouseEnter","handleMouseLeave","useImperativeHandle","resetTableSelected","row","querySelector","concat","scrollIntoView","block","behavior","getSelectedIndex","getSelectedRows","d","idx","includes","getFirstColumn","getParentElement","current","getSelectedRowsOnClick","setSelectRows","indx","_jsx","style","display","justifyContent","key","prevIndex","_row$querySelector","newPrevIndex","focus","input","tagName","divInput","_row$querySelector2","children","_jsxs","className","flexDirection","minHeight","ref","tabIndex","position","zIndex","top","background","map","col","fontWeight","defaultValue","headerName","readOnly","onChange","onMouseDown","onMouseEnter","onMouseLeave","rowIndex","onClick","event","shiftKey","rangeStart","Math","min","rangeEnd","max","newSelectedRows","selectedItemsParams","newSelectedRowsFiltered","selectedRowData","removeNullValue","data","getIndexAndData","ctrlKey","metaKey","handleRowClick","onDoubleClick","clearTimeout","timeoutId","setTimeout","handleRowDoubleClick","handleRowKeyDown","onContextMenu","rowSelected","handleRightClick","colIndex","value","field","type","Pagination","count","policyColumn","claimColumn","buttons","text","Dashboard","_queryFn","buttonShadowPostion","setButtonShadowPostion","showbuttonShadowPostion","setShowbuttonShadowPostion","currButtonClick","setCurrButtonClick","_useMultipleComponent","useMultipleComponent","POLICYTABLE","policy","step","goTo","user","useContext","AuthContext","_useQuery","useQuery","queryKey","queryFn","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","myAxios","get","headers","Authorization","accessToken","abrupt","sent","stop","apply","claimsData","isLoadingClaims","handleIncrement","flushSync","target","getBoundingClientRect","left","window","innerWidth","innerHeight","id","userAccess","padding","margin","textAlign","marginBottom","ButtonComponent","curr","onTransitionEnd","transition","claims","_ref$text","_ref$index","disabled","border","borderRadius","cursor","color","_ref2","tableRef","laoding","setLoading","setData","then","renewal","steps","currentStepIndex","setCurrentStepIndex","back","isFirstStep","isLastStep"],"sourceRoot":""}