{"version":3,"file":"static/js/8218.30d6d3a2.chunk.js","mappings":"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","sources":["components/ModalWithTable.tsx","components/Table.tsx","feautures/Admin/Task/Accounting/Deposit.tsx","hooks/useMultipleComponent.tsx","hooks/useQueryModalTable.tsx","lib/confirmationAlert.ts","../node_modules/@mui/icons-material/Add.js","../node_modules/@mui/icons-material/Autorenew.js","../node_modules/@mui/icons-material/Save.js","../node_modules/prop-types/factoryWithThrowingShims.js","../node_modules/prop-types/index.js","../node_modules/prop-types/lib/ReactPropTypesSecret.js","../node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js"],"sourcesContent":["import React from \"react\";\nimport {\n  GridRowSelectionModel,\n  GridRowParams,\n  GridCellParams,\n  GridTreeNode,\n} from \"@mui/x-data-grid\";\nimport { Modal, Box, Typography, IconButton, TextField } from \"@mui/material\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport Table from \"./Table\";\n\ninterface ModalWithTableParams {\n  height: number;\n  isLoading: boolean;\n  queryKey: string;\n  columns: Array<any>;\n  onSelectionChange: (rowSelectionModel: Array<any>, data: Array<any>) => void;\n  setRows: React.Dispatch<React.SetStateAction<GridRowSelectionModel>>;\n  rows: GridRowSelectionModel;\n  id: string;\n  onCloseModal: () => void;\n  onClickCloseIcon: () => void;\n  showModal: boolean;\n  searchOnChange:\n  | React.ChangeEventHandler<HTMLInputElement | HTMLTextAreaElement>\n  | undefined;\n  title?: string;\n  searchRef?: React.RefObject<HTMLInputElement>;\n  onCellKeyDown?: any;\n  onSearchKeyEnter?: (search: string) => void;\n  isRowSelectable?: ((params: GridRowParams<any>) => boolean) | undefined;\n  getCellClassName?:\n  | ((params: GridCellParams<any, any, any, GridTreeNode>) => string)\n  | undefined;\n}\n\nconst style = {\n  position: \"absolute\" as \"absolute\",\n  top: \"50%\",\n  left: \"50%\",\n  transform: \"translate(-50%, -50%)\",\n  width: \"70%\",\n  bgcolor: \"background.paper\",\n  boxShadow: 24,\n  p: 4,\n  heigth: \"auto\",\n};\n\nexport default function ModalWithTable({\n  height,\n  isLoading,\n  queryKey,\n  columns,\n  onSelectionChange,\n  setRows,\n  rows,\n  id,\n  onCloseModal,\n  showModal,\n  onClickCloseIcon,\n  searchOnChange,\n  title = \"\",\n  searchRef,\n  onCellKeyDown,\n  onSearchKeyEnter = () => { },\n  isRowSelectable,\n  getCellClassName,\n}: ModalWithTableParams) {\n  const mainId = generateRandomClass();\n\n  return (\n    <Modal\n      open={showModal}\n      onClose={onCloseModal}\n      aria-labelledby=\"modal-modal-title\"\n      aria-describedby=\"modal-modal-description\"\n    >\n      <Box sx={style}>\n        <Typography id=\"modal-modal-title\" variant=\"h6\" component=\"h2\" mb={2}>\n          {title}\n        </Typography>\n        <TextField\n          size=\"small\"\n          label=\"Search\"\n          sx={{ marginBottom: \"10px\" }}\n          fullWidth\n          onChange={searchOnChange}\n          InputProps={{\n            inputRef: searchRef,\n          }}\n          onKeyDown={(e) => {\n            if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n              e.preventDefault();\n              onSearchKeyEnter(searchRef?.current?.value as string);\n            }\n            keyBoardSelectionTable(\n              e,\n              mainId,\n              searchRef?.current as HTMLInputElement\n            );\n          }}\n        />\n        <div\n          className={`${mainId} main-table-selection-container`}\n          style={{ position: \"relative\", height: `${height + 20}px` }}\n        >\n          <Table\n            isSingleSelection={true}\n            isRowFreeze={false}\n            columns={columns}\n            isLoading={isLoading}\n            dataSelection={(selection, data, code) => {\n              onSelectionChange(selection, data);\n            }}\n            table_id={id}\n            rows={rows}\n            isRowSelectable={isRowSelectable}\n            getCellClassName={getCellClassName}\n          />\n        </div>\n\n        <div style={{ position: \"absolute\", top: \"10px\", right: \"10px\" }}>\n          <IconButton\n            aria-label=\"search-client\"\n            color=\"secondary\"\n            onClick={onClickCloseIcon}\n          >\n            <CloseIcon />\n          </IconButton>\n        </div>\n      </Box>\n    </Modal>\n  );\n}\n\nexport function generateRandomClass() {\n  const randomNumber = Math.floor(Math.random() * 10000);\n  const randomClass = \"main-\" + randomNumber;\n  return randomClass;\n}\n\nfunction keyBoardUpDown(className: string, el: HTMLElement) {\n  const firstRowParent = document.querySelector(\n    `.${className} .MuiDataGrid-row`\n  );\n  const firstInput = firstRowParent?.querySelector(\"input\");\n  firstInput?.focus();\n  const event = new MouseEvent(\"mouseenter\", {\n    bubbles: true,\n    cancelable: true,\n    view: window,\n  });\n  firstRowParent?.dispatchEvent(event);\n  firstInput?.addEventListener(\"keydown\", (es: any) => {\n    if (es.key === \"ArrowUp\") {\n      es.preventDefault();\n      el.focus();\n    }\n    if (es.key === \"ArrowUp\") {\n      firstRowParent?.classList.remove(\"hover-keyboard\");\n    }\n  });\n}\n\nexport function keyBoardSelectionTable(\n  e: React.KeyboardEvent<HTMLDivElement>,\n  className: string,\n  el: HTMLElement\n) {\n  const mainId = className;\n  if (e.code === \"ArrowDown\") {\n    const rows = document.querySelectorAll(`.${mainId} .MuiDataGrid-row`);\n    e.preventDefault();\n    rows[0]?.classList.add(\"hover-keyboard\");\n    keyBoardUpDown(className, el);\n    rows.forEach((el, idx) => {\n      el.addEventListener(\"keydown\", (es: any) => {\n        if (es.key === \"ArrowUp\") {\n          if (idx <= 0) {\n            return;\n          }\n\n          es.preventDefault();\n          rows[idx]?.classList.remove(\"hover-keyboard\");\n          rows[idx - 1]?.classList.add(\"hover-keyboard\");\n          return;\n        }\n        if (es.key === \"ArrowDown\") {\n          es.preventDefault();\n          if (idx >= rows.length - 1) {\n            return;\n          }\n          rows[idx]?.classList.remove(\"hover-keyboard\");\n          rows[idx + 1]?.classList.add(\"hover-keyboard\");\n        }\n      });\n    });\n  }\n}\n","import {\n  useState,\n  useContext,\n  createContext,\n  ReactElement,\n  forwardRef,\n  useImperativeHandle,\n} from \"react\";\nimport { Box, LinearProgress } from \"@mui/material\";\nimport {\n  DataGrid,\n  GridSlotsComponentsProps,\n  gridPageCountSelector,\n  GridPagination,\n  useGridApiContext,\n  useGridSelector,\n  GridRowSelectionModel,\n  GridColDef,\n  GridRowParams,\n  GridCellParams,\n  GridTreeNode,\n} from \"@mui/x-data-grid\";\nimport { TablePaginationProps } from \"@mui/material/TablePagination\";\nimport MuiPagination from \"@mui/material/Pagination\";\n\ninterface TableProps {\n  isLoading: boolean;\n  columns: Array<any>;\n  rows: Array<any>;\n  table_id: string;\n  isSingleSelection: boolean;\n  isRowFreeze: boolean;\n  dataSelection?: (selection: any, data: any, code: string | null) => void;\n  CustomFooterComponent?: any;\n  isRowSelectable?: ((params: GridRowParams<any>) => boolean) | undefined;\n  getCellClassName?:\n    | ((params: GridCellParams<any, any, any, GridTreeNode>) => string)\n    | undefined;\n  footerChildren?: (\n    rowSelectionModel: GridRowSelectionModel,\n    rows: Array<any>\n  ) => ReactElement;\n  footerPaginationPosition?: string;\n  showFooterSelectedCount?: boolean;\n  checkboxSelection?: boolean | undefined;\n}\n\nconst TableContext = createContext<{\n  rowSelectionModel: GridRowSelectionModel;\n  rows: Array<any>;\n  footerPaginationPosition?: string;\n  showFooterSelectedCount?: boolean;\n  footerChildren: (\n    rowSelectionModel: GridRowSelectionModel,\n    rows: Array<any>\n  ) => ReactElement;\n}>({\n  rows: [],\n  rowSelectionModel: [],\n  footerChildren: () => <div></div>,\n  footerPaginationPosition: \"right-left\",\n  showFooterSelectedCount: true,\n});\nconst Table = forwardRef(\n  (\n    {\n      isLoading,\n      columns,\n      rows,\n      table_id,\n      isSingleSelection,\n      isRowFreeze,\n      dataSelection,\n      CustomFooterComponent = DefaultooterComponent,\n      isRowSelectable,\n      getCellClassName,\n      checkboxSelection = true,\n      footerChildren = (\n        rowSelectionModel: GridRowSelectionModel,\n        rows: Array<any>\n      ) => <div></div>,\n      footerPaginationPosition = \"right-left\",\n      showFooterSelectedCount = true,\n    }: TableProps,\n    ref\n  ) => {\n    const [selectedRows, setSelectedRows] = useState<any>([]);\n\n    useImperativeHandle(ref, () => ({\n      removeSelection: () => {\n        setSelectedRows([]);\n      },\n      getSelectedRows: () => {\n        return rows.filter((item: any) =>\n          selectedRows?.includes(item[table_id])\n        );\n      },\n      setSelectedRows: (data: Array<any>) => {\n        setSelectedRows(data);\n      },\n    }));\n\n    function onSelectionChange(selection: any, data: any, code: string | null) {\n      if (dataSelection) {\n        dataSelection(selection, data, code);\n      }\n    }\n    let freezeArray: Array<any> = [];\n\n    return (\n      <TableContext.Provider\n        value={{\n          showFooterSelectedCount,\n          footerPaginationPosition,\n          rowSelectionModel: selectedRows,\n          rows,\n          footerChildren,\n        }}\n      >\n        <DataGrid\n          slots={{\n            loadingOverlay: LinearProgress,\n            footer: CustomFooterComponent,\n          }}\n          initialState={{\n            pagination: { paginationModel: { pageSize: 35 } },\n          }}\n          loading={isLoading}\n          getRowId={(row) => row[table_id]}\n          columns={columns.filter((col: any) => !col.hide) as GridColDef<any>[]}\n          rows={rows}\n          showCellVerticalBorder={true}\n          showColumnVerticalBorder={true}\n          checkboxSelection={checkboxSelection}\n          rowSelectionModel={selectedRows}\n          rowHeight={25}\n          columnHeaderHeight={35}\n          pageSizeOptions={[10, 20, 35, 50, 75, 100]}\n          sx={{\n            \"& .cash\": {\n              color: \"#ec4899\",\n            },\n            \"& .check\": {\n              color: \"#0891b2\",\n            },\n            \"& .approved\": {\n              color: \"green\",\n            },\n            \"& .pending\": {\n              color: \"orange\",\n            },\n            \"& .disapproved\": {\n              color: \"red\",\n            },\n            \"& .normal\": {\n              color: \"red\",\n            },\n            \"& .MuiDataGrid-row.Mui-selected:hover\": {\n              color: \"black\",\n              \"& .MuiSvgIcon-root \": {\n                fill: \"#3b82f6\",\n              },\n            },\n            \"& .hover-keyboard\": {\n              background: \"#2563eb\",\n              color: \"white\",\n              \"& .MuiSvgIcon-root \": {\n                fill: \"white\",\n              },\n            },\n            \"& .MuiDataGrid-row:hover\": {\n              background: \"#2563eb\",\n              color: \"white\",\n              \"& .MuiSvgIcon-root \": {\n                fill: \"white\",\n              },\n            },\n            \"& .MuiDataGrid-row.hover\": {\n              background: \"#2563eb\",\n              color: \"white\",\n              \"& .MuiSvgIcon-root \": {\n                fill: \"white\",\n              },\n            },\n            \"& .MuiTablePagination-root p \": {\n              padding: \"0 !important\",\n            },\n\n            ...{\n              \"& .MuiDataGrid-columnHeaders\": {\n                background: \"#64748b\",\n                color: \"white\",\n                fontSize: \"14px\",\n                // borderBottomColor: \"#38bdf8\",\n              },\n              \"& .MuiDataGrid-columnHeaderCheckbox .MuiDataGrid-columnHeaderTitleContainer .MuiSvgIcon-root \":\n                {\n                  display: isSingleSelection || isRowFreeze ? \"none\" : \"block\",\n                  fill: \"white\",\n                },\n              \"& .MuiDataGrid-columnHeaderCheckbox .MuiDataGrid-columnHeaderTitleContainer input \":\n                {\n                  display: isSingleSelection || isRowFreeze ? \"none\" : \"block\",\n                },\n            },\n            ...{\n              fontSize: 13,\n              fontWeight: 500,\n              \"& .MuiDataGrid-checkboxInput\": {\n                height: \"27px\",\n                width: \"27px\",\n              },\n              \"& .MuiDataGrid-checkboxInput svg\": {\n                height: \"20px\",\n                width: \"20px\",\n              },\n            },\n          }}\n          // onRowDoubleClick={(e, r) => {\n          //   console.log(e, r);\n          // }}\n\n          onRowSelectionModelChange={(selection) => {\n            if (isRowFreeze) {\n              if (selection.length <= 0) return;\n              freezeArray = selection;\n              if (selectedRows.includes(freezeArray[freezeArray.length - 1]))\n                return;\n\n              setSelectedRows(selection);\n\n              onSelectionChange([selection[selection.length - 1]], rows, null);\n              return;\n            }\n\n            if (!isRowFreeze && isSingleSelection) {\n              if (selectedRows && selectedRows?.length > 0) {\n                const selectionSet = new Set(selectedRows);\n                setSelectedRows(\n                  selection.filter((s: any) => !selectionSet.has(s))\n                );\n              } else {\n                setSelectedRows(selection);\n              }\n            } else {\n              setSelectedRows(selection);\n            }\n\n            onSelectionChange([selection[selection.length - 1]], rows, null);\n          }}\n          onCellKeyDown={(__: any, key: any) => {\n            const keyFinding = [\"NumpadEnter\", \"Enter\", \"Delete\", \"Backspace\"];\n            if (!keyFinding.includes(key.code)) {\n              return;\n            }\n            key.preventDefault();\n            if (key.code === \"Enter\" || key.code === \"NumpadEnter\") {\n              if (isSingleSelection && !isRowFreeze) {\n                return setSelectedRows((data: any) => {\n                  if (data && data.length > 0 && data[0] === __.rowNode.id) {\n                    onSelectionChange([], rows, key.code);\n                    return [];\n                  }\n                  onSelectionChange([__.rowNode.id], rows, key.code);\n                  return [__.rowNode.id];\n                });\n              } else {\n                setSelectedRows((data: any) => {\n                  if (\n                    data &&\n                    !isRowFreeze &&\n                    data.length > 0 &&\n                    data.includes(__.rowNode.id)\n                  ) {\n                    data = data.filter((item: any) => item !== __.rowNode.id);\n                    onSelectionChange([], rows, key.code);\n                    return data;\n                  }\n                  if (\n                    data &&\n                    isRowFreeze &&\n                    data.length > 0 &&\n                    data.includes(__.rowNode.id)\n                  ) {\n                    return data;\n                  }\n                  onSelectionChange([__.rowNode.id], rows, key.code);\n                  return [...data, __.rowNode.id];\n                });\n              }\n              return;\n            }\n            if (key.code === \"Delete\" || key.code === \"Backspace\") {\n              setSelectedRows([__.rowNode.id]);\n              return onSelectionChange([__.rowNode.id], rows, key.code);\n            }\n          }}\n          disableVirtualization\n          isRowSelectable={isRowSelectable}\n          getCellClassName={getCellClassName}\n        />\n      </TableContext.Provider>\n    );\n  }\n);\n\nexport default Table;\nfunction Pagination({\n  page,\n  onPageChange,\n  className,\n}: Pick<TablePaginationProps, \"page\" | \"onPageChange\" | \"className\">) {\n  const apiRef = useGridApiContext();\n  const pageCount = useGridSelector(apiRef, gridPageCountSelector);\n\n  return (\n    <MuiPagination\n      variant=\"outlined\"\n      color=\"primary\"\n      className={className}\n      count={pageCount}\n      page={page + 1}\n      onChange={(event, newPage) => {\n        onPageChange(event as any, newPage - 1);\n      }}\n    />\n  );\n}\n\nfunction CustomPagination(props: any) {\n  return <GridPagination ActionsComponent={Pagination} {...props} />;\n}\nfunction DefaultooterComponent(\n  props: NonNullable<GridSlotsComponentsProps[\"footer\"]>\n) {\n  const {\n    rowSelectionModel,\n    showFooterSelectedCount,\n    footerPaginationPosition,\n    footerChildren,\n    rows,\n  } = useContext(TableContext);\n  return (\n    <Box\n      sx={{\n        columnGap: \"50px\",\n        display: \"flex\",\n        width: \"100%\",\n        justifyContent: \"space-between\",\n        px: 3,\n        alignItems: \"center\",\n        flexDirection:\n          footerPaginationPosition === \"right-left\" ? \"row-reverse\" : \"row\",\n      }}\n    >\n      <CustomPagination {...props} />\n      <Box\n        sx={{\n          display: \"flex\",\n          justifyContent:\n            footerPaginationPosition === \"right-left\"\n              ? \"flex-start\"\n              : \"flex-end\",\n          flex: 1,\n          alignItems: \"center\",\n        }}\n      >\n        {showFooterSelectedCount && (\n          <div>Selected:{rowSelectionModel?.length}</div>\n        )}\n        <div>{footerChildren(rowSelectionModel, rows)}</div>\n      </Box>\n    </Box>\n  );\n}\n","import {\n  useState,\n  createContext,\n  useContext,\n  CSSProperties,\n  useEffect,\n  useRef,\n  useReducer,\n} from \"react\";\nimport { GridRowSelectionModel } from \"@mui/x-data-grid\";\nimport { useMutation, useQuery, useQueryClient } from \"react-query\";\nimport { AuthContext } from \"../../../../components/AuthContext\";\nimport {\n  Box,\n  Button,\n} from \"@mui/material\";\nimport useQueryModalTable from \"../../../../hooks/useQueryModalTable\";\nimport LoadingButton from \"@mui/lab/LoadingButton\";\nimport AddIcon from \"@mui/icons-material/Add\";\nimport SaveIcon from \"@mui/icons-material/Save\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport Swal from \"sweetalert2\";\nimport { wait } from \"@testing-library/user-event/dist/utils\";\nimport useMultipleComponent from \"../../../../hooks/useMultipleComponent\";\nimport Table from \"../../../../components/Table\";\nimport {\n  codeCondfirmationAlert,\n  saveCondfirmationAlert,\n} from \"../../../../lib/confirmationAlert\";\nimport { TextInput } from \"../../../../components/UpwardFields\";\nimport { format } from 'date-fns'\nimport AutorenewIcon from '@mui/icons-material/Autorenew';\nimport AccountBalanceIcon from '@mui/icons-material/AccountBalance';\nimport '../../../../style/laoding.css'\nimport { UpwardTable } from \"../../../../components/UpwardTable\";\nconst defaultCashBreakDown = [\n  { value1: \"1,000.00\", value2: \"\", value3: \"0.00\" },\n  { value1: \"500.00\", value2: \"\", value3: \"0.00\" },\n  { value1: \"200.00\", value2: \"\", value3: \"0.00\" },\n  { value1: \"100.00\", value2: \"\", value3: \"0.00\" },\n  { value1: \"50.00\", value2: \"\", value3: \"0.00\" },\n  { value1: \"20.00\", value2: \"\", value3: \"0.00\" },\n  { value1: \"10.00\", value2: \"\", value3: \"0.00\" },\n  { value1: \"5.00\", value2: \"\", value3: \"0.00\" },\n  { value1: \"2.00\", value2: \"\", value3: \"0.00\" },\n  { value1: \"1.00\", value2: \"\", value3: \"0.00\" },\n  { value1: \".50\", value2: \"\", value3: \"0.00\" },\n  { value1: \".25\", value2: \"\", value3: \"0.00\" },\n  { value1: \".10\", value2: \"\", value3: \"0.00\" },\n  { value1: \".05\", value2: \"\", value3: \"0.00\" },\n  { value1: \".01\", value2: \"\", value3: \"0.00\" },\n];\nconst buttons = [\n  {\n    title: \"Cash Collection\",\n    index: 0,\n  },\n  {\n    title: \"Check Collection\",\n    index: 1,\n  },\n  {\n    title: \"Selected Collection\",\n    index: 2,\n  },\n  {\n    title: \"Collection for Deposit\",\n    index: 3,\n  },\n];\n\nexport const reducer = (state: any, action: any) => {\n  switch (action.type) {\n    case \"UPDATE_FIELD\":\n      return {\n        ...state,\n        [action.field]: action.value,\n      };\n    default:\n      return state;\n  }\n};\nconst DepositContext = createContext<any>({\n  cashCollection: [],\n  setCashCollection: () => { },\n  checkCollection: [],\n  setCheckCollection: () => { },\n  selectedCollection: [],\n  setSelectedCollection: () => { },\n  collectionForDeposit: [],\n  setCollectionForDeposit: () => { },\n  tableRows: [],\n  updateTableRowsInput: () => { },\n  LoadingCashTable: false,\n  LoadingCheckTable: false,\n  setTotal: () => { },\n  total: \"0.00\",\n  TotalCashForDeposit: \"0.00\",\n  loadingSearchByDepositSlip: false,\n});\n\nexport default function Deposit() {\n  const depositSearch = useRef<HTMLInputElement>(null)\n  const inputSearchRef = useRef<HTMLInputElement>(null)\n  const refSlipCode = useRef<HTMLInputElement>(null)\n  const refDateDepo = useRef<HTMLInputElement>(null)\n  const refBankAcctCode = useRef<HTMLInputElement>(null)\n  const refBankAcctName = useRef<HTMLInputElement>(null)\n\n  const bankDepositSearch = useRef<HTMLInputElement>(null)\n  const _refTempSlipCode = useRef<string>(\"\")\n\n  const refBankAcctCodeTag = useRef('')\n  const refBankAcctNameTag = useRef('')\n  const refAcctID = useRef('')\n  const refAcctName = useRef('')\n  const refClassification = useRef('')\n  const refSubAccount = useRef('')\n  const refShortName = useRef('')\n\n  const { myAxios, user } = useContext(AuthContext);\n  const { currentStepIndex, step, goTo } = useMultipleComponent([\n    <CashCollection />,\n    <CheckCollection />,\n    <SelectedCollection />,\n    <CollectionForDeposit />,\n  ]);\n\n  const [cashCollection, setCashCollection] = useState<any>([])\n  const [checkCollection, setCheckCollection] = useState<any>([])\n  const [selectedRows, setSelectedRows] = useState<any>([])\n  const [selectedRowsCashIndex, setSelectedRowsCashIndex] = useState<any>([])\n  const [selectedRowsCheckedIndex, setSelectedRowsCheckedIndex] = useState<any>([])\n  const [collectionForDeposit, setCollectionForDeposit] = useState<any>([]);\n  const [tableRowsInputValue, setTableRowsInputValue] =\n    useState<Array<{ value1: string; value2: string; value3: string }>>(\n      defaultCashBreakDown\n    );\n  const [depositMode, setDepositMode] = useState('')\n  const [total, setTotal] = useState(\"0.00\");\n  const TotalCashForDeposit = selectedRows\n    .reduce((accumulator: number, currentValue: any) => {\n      const dd =\n        currentValue.Check_No || currentValue.Check_No !== \"\"\n          ? 0\n          : parseFloat(currentValue.Amount.replace(/,/g, \"\"));\n      return accumulator + dd;\n    }, 0.0)\n    .toLocaleString(\"en-US\", {\n      minimumFractionDigits: 2,\n      maximumFractionDigits: 2,\n    });\n\n  const updateTableRowsInput = (\n    fields: { value1: string; value2: string; value3: string },\n    idx: number\n  ) => {\n    setTableRowsInputValue((d) => {\n      return d.map((item, index) => {\n        if (idx === index) {\n          item = { ...item, ...fields };\n        }\n        return item;\n      });\n    });\n  };\n\n  const { isLoading: LoadingDepositSlipCode, refetch: RefetchDepositSlipCode } =\n    useQuery({\n      queryKey: \"deposit-slipcode\",\n      queryFn: async () =>\n        await myAxios.get(`/task/accounting/get-deposit-slipcode`, {\n          headers: {\n            Authorization: `Bearer ${user?.accessToken}`,\n          },\n        }),\n      refetchOnWindowFocus: false,\n      onSuccess: (data) => {\n        const response = data as any;\n        wait(100).then(() => {\n          if (refSlipCode.current) {\n            refSlipCode.current.value = response.data.slipcode[0].collectionID\n            _refTempSlipCode.current = response.data.slipcode[0].collectionID\n          }\n          if (refDateDepo.current) {\n            refDateDepo.current.value = format(new Date(), \"yyyy-MM-dd\")\n          }\n        })\n      },\n    });\n\n  const {\n    ModalComponent: ModalDepostitBanks,\n    openModal: openDepositBanks,\n    isLoading: isLoadingDepostitBanks,\n    closeModal: closeDepositBanks,\n  } = useQueryModalTable({\n    link: {\n      url: \"/task/accounting/getBanks\",\n      queryUrlName: \"bankDepositSearch\",\n    },\n    columns: [\n      { field: \"Account_Type\", headerName: \"Account_Type\", width: 200 },\n      { field: \"Account_No\", headerName: \"Account_No\", width: 170 },\n      {\n        field: \"Account_Name\",\n        headerName: \"Account_Name\",\n        flex: 1,\n      },\n    ],\n    queryKey: \"bank-deposit\",\n    uniqueId: \"Account_No\",\n    responseDataKey: \"banks\",\n    onSelected: (selectedRowData) => {\n      if (selectedRowData.length > 0) {\n        if (refBankAcctCode.current)\n          refBankAcctCode.current.value = selectedRowData[0].Account_No\n        if (refBankAcctName.current)\n          refBankAcctName.current.value = selectedRowData[0].Account_Name\n\n        refBankAcctCodeTag.current = selectedRowData[0]?.IDNo\n        refBankAcctNameTag.current = selectedRowData[0]?.Desc\n        refAcctID.current = selectedRowData[0]?.Account_ID\n        refAcctName.current = selectedRowData[0]?.Short\n        refShortName.current = selectedRowData[0]?.client_name\n        refClassification.current = selectedRowData[0]?.Sub_Acct\n        refSubAccount.current = selectedRowData[0]?.ShortName\n\n        closeDepositBanks();\n      }\n    },\n    searchRef: bankDepositSearch,\n  });\n\n  const { mutate: addDepositMutation, isLoading: addDepositMutationLoading } =\n    useMutation({\n      mutationKey: \"add-deposit\",\n      mutationFn: async (variables: any) => {\n        return await myAxios.post(\"/task/accounting/add-deposit\", variables, {\n          headers: {\n            Authorization: `Bearer ${user?.accessToken}`,\n          },\n        });\n      },\n      onSuccess: (res) => {\n        const resposnse = res as any;\n        if (resposnse.data.success) {\n          setSelectedRows([]);\n          setCollectionForDeposit([]);\n          RefetchDepositSlipCode();\n          setTableRowsInputValue(defaultCashBreakDown);\n          resetRefs()\n          refetchCashCollection()\n          refetchCheckCollection()\n          setSelectedRowsCashIndex([])\n          setSelectedRowsCheckedIndex([])\n          return Swal.fire({\n            position: \"center\",\n            icon: \"success\",\n            title: resposnse.data.message,\n            timer: 1500,\n          });\n        }\n        return Swal.fire({\n          position: \"center\",\n          icon: \"warning\",\n          title: resposnse.data.message,\n          timer: 1500,\n        });\n      },\n    });\n\n  const {\n    mutate: updateDepositMutation,\n    isLoading: updateDepositMutationLoading,\n  } = useMutation({\n    mutationKey: \"update-deposit\",\n    mutationFn: async (variables: any) => {\n      return await myAxios.post(\"/task/accounting/update-deposit\", variables, {\n        headers: {\n          Authorization: `Bearer ${user?.accessToken}`,\n        },\n      });\n    },\n    onSuccess: (res) => {\n      const resposnse = res as any;\n      if (resposnse.data.success) {\n        resetRefs()\n        setSelectedRows([]);\n        setCollectionForDeposit([]);\n        RefetchDepositSlipCode();\n        setTableRowsInputValue(defaultCashBreakDown);\n        resetRefs()\n        refetchCashCollection()\n        refetchCheckCollection()\n        setSelectedRowsCashIndex([])\n        setSelectedRowsCheckedIndex([])\n        return Swal.fire({\n          position: \"center\",\n          icon: \"success\",\n          title: resposnse.data.message,\n          timer: 1500,\n        });\n      }\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: resposnse.data.message,\n        timer: 1500,\n      });\n    },\n  });\n\n  const { mutate: searchByDepositSlip, isLoading: loadingSearchByDepositSlip } =\n    useMutation({\n      mutationKey: \"search-deposit-cash-check\",\n      mutationFn: async (variables: any) => {\n        return await myAxios.post(\n          \"/task/accounting/search-cash-check\",\n          variables,\n          {\n            headers: {\n              Authorization: `Bearer ${user?.accessToken}`,\n            },\n          }\n        );\n      },\n      onSuccess: (res) => {\n        const obj = res.data.data.obj\n        const cash = res.data.data.cash\n        const check = res.data.data.checks\n        const cash_breakdown = res.data.data.cash_breakdown\n\n        wait(100).then(() => {\n          if (refBankAcctCode.current)\n            refBankAcctCode.current.value = obj.refBankAcctCode\n          if (refBankAcctName.current)\n            refBankAcctName.current.value = obj.refBankAcctName\n          if (refDateDepo.current)\n            refDateDepo.current.value = format(new Date(obj.refDate), \"yyyy-MM-dd\")\n\n\n\n          refBankAcctCodeTag.current = obj?.refBankAcctCodeTag\n          refBankAcctNameTag.current = obj?.refBankAcctNameTag\n          refAcctID.current = obj?.refAcctID\n          refAcctName.current = obj?.refAcctName\n          refShortName.current = obj?.client_name\n          refClassification.current = obj?.refClassification\n          refSubAccount.current = obj?.refSubAccount\n\n          const cashIndex = cash\n            .map((obj: any, index: number) => obj.SlipCode !== null && obj.SlipCode !== '' ? index : null)\n            .filter((index: number) => index !== null);\n\n          const checkIndex = check\n            .map((obj: any, index: number) => obj.SlipCode !== null && obj.SlipCode !== '' ? index : null)\n            .filter((index: number) => index !== null);\n\n\n          setSelectedRowsCashIndex(cashIndex)\n          setSelectedRowsCheckedIndex(checkIndex)\n          setCashCollection(cash);\n          setCheckCollection(check);\n\n\n          const filteredCash = cash.filter((itm: any) => itm.SlipCode !== '' && itm.SlipCode === refSlipCode.current?.value)\n          const filteredCheck = check.filter((itm: any) => itm.SlipCode !== '' && itm.SlipCode === refSlipCode.current?.value)\n\n          if (filteredCash.length > 0) {\n            filteredCash.forEach((rowSelected: any) => {\n              setSelectedRows((d: any) => {\n\n                const newSelected: any = {\n                  Deposit: \"Cash\",\n                  Check_No: \"\",\n                  Check_Date: \"\",\n                  Bank: \"\",\n                  Amount: rowSelected.Amount,\n                  Name: rowSelected.Client_Name,\n                  RowIndex: d.length + 1,\n                  DRCode: rowSelected.DRCode,\n                  ORNo: rowSelected.OR_No,\n                  DRRemarks: \"\",\n                  IDNo: rowSelected.ID_No,\n                  TempOR: rowSelected.Temp_OR,\n                  Short: rowSelected.Short,\n                };\n\n                d = [...d, newSelected];\n                return d;\n              });\n            });\n          }\n          if (filteredCheck.length > 0) {\n            filteredCheck.forEach((rowSelected: any) => {\n              setSelectedRows((d: any) => {\n                const newSelected: any = {\n                  Deposit: \"Check\",//0\n                  Check_No: rowSelected.Check_No,//1\n                  Check_Date: rowSelected.Check_Date,//2\n                  Bank: rowSelected.Bank_Branch,//3\n                  Amount: rowSelected.Amount,//4\n                  Name: rowSelected.Client_Name,//5\n                  RowIndex: d.length + 1,//6\n                  DRCode: rowSelected.DRCode,//7\n                  ORNo: rowSelected.OR_No,//8\n                  DRRemarks: rowSelected.DRRemarks,//9\n                  IDNo: rowSelected.ID_No,//10\n                  TempOR: rowSelected.Temp_OR,//11\n                  Short: rowSelected.Short,//12\n                };\n                d = [...d, newSelected];\n                return d;\n              });\n\n\n              setCollectionForDeposit((d: any) => {\n                const newSelectedCheckForDeposit: any = {\n                  Bank: rowSelected.Bank_Branch,\n                  Check_No: rowSelected.Check_No,\n                  Amount: rowSelected.Amount,\n                  TempOR: rowSelected.Temp_OR,\n                };\n                d = [...d, newSelectedCheckForDeposit];\n                return d;\n              });\n            });\n          }\n          setTableRowsInputValue(cash_breakdown)\n        })\n\n        setDepositMode('edit')\n\n      },\n    });\n\n  const {\n    ModalComponent: ModalDeposit,\n    openModal: openDeposit,\n    isLoading: isLoadingDeposit,\n    closeModal: closeDeposit,\n  } = useQueryModalTable({\n    link: {\n      url: \"/task/accounting/search-deposit\",\n      queryUrlName: \"searchDeposit\",\n    },\n    columns: [\n      { field: \"Date\", headerName: \"Date\", width: 150 },\n      { field: \"SlipCode\", headerName: \"Slip Code\", width: 170 },\n      {\n        field: \"BankAccount\",\n        headerName: \"Bank Account\",\n        width: 170,\n      },\n      {\n        field: \"AccountName\",\n        headerName: \"Account Name\",\n        flex: 1,\n      },\n    ],\n    queryKey: \"deposit-search\",\n    uniqueId: \"SlipCode\",\n    responseDataKey: \"deposit\",\n    onSelected: (selectedRowData) => {\n      const SlipCode = selectedRowData[0].SlipCode;\n      searchByDepositSlip({ SlipCode });\n\n      wait(100).then(() => {\n        if (refSlipCode.current) {\n          refSlipCode.current.value = SlipCode\n        }\n      })\n\n      closeDeposit();\n    },\n    onCloseFunction: (value: any) => {\n      if (inputSearchRef.current) {\n        inputSearchRef.current.value = \"\"\n      }\n    },\n    searchRef: depositSearch,\n  });\n\n  const { isLoading: loadingCashCollection, refetch: refetchCashCollection } =\n    useQuery({\n      queryKey: \"get-cash-collection\",\n      queryFn: async () =>\n        await myAxios.get(`/task/accounting/get-cash-collection`, {\n          headers: {\n            Authorization: `Bearer ${user?.accessToken}`,\n          },\n        }),\n      refetchOnWindowFocus: false,\n      onSuccess: (data) => {\n        const response = data as any;\n        setCashCollection(response.data.cash)\n      },\n    });\n\n  const { isLoading: loadingCheckCollection, refetch: refetchCheckCollection } =\n    useQuery({\n      queryKey: \"get-check-collection\",\n      queryFn: async () =>\n        await myAxios.get(`/task/accounting/get-check-collection`, {\n          headers: {\n            Authorization: `Bearer ${user?.accessToken}`,\n          },\n        }),\n      refetchOnWindowFocus: false,\n      onSuccess: (data) => {\n        const response = data as any;\n        setCheckCollection(response.data.check)\n      },\n    });\n\n  const handleOnSave = (e: any) => {\n    e.preventDefault();\n    if (refBankAcctCode.current && refBankAcctCode.current?.value.length >= 200) {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: \"Bank Account is too long!\",\n        timer: 1500,\n      });\n    }\n    if (refBankAcctCode.current && refBankAcctCode.current?.value === \"\") {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: \"Please provide bank account\",\n        timer: 1500,\n      }).then((result) => {\n        wait(350).then(() => {\n          openDepositBanks();\n        });\n      });\n    }\n    if (selectedRows.length <= 0) {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: \"No selected collection to be deposit\",\n        timer: 1500,\n      });\n    }\n    if (TotalCashForDeposit.trim() !== total.trim()) {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: \"Cash breakdown is not balance\",\n        timer: 1500,\n      });\n    }\n    const state = {\n      depositSlip: refSlipCode.current?.value,\n      depositdate: refDateDepo.current?.value,\n      BankAcctCode: refBankAcctCode.current?.value,\n      BankAcctName: refBankAcctName.current?.value,\n      BankAcctCodeTag: refBankAcctCodeTag.current,\n      BankAcctNameTag: refBankAcctNameTag.current,\n      AcctID: refAcctID.current,\n      AcctName: refAcctName.current,\n      Classification: refClassification.current,\n      SubAccount: refSubAccount.current,\n      ShortName: refShortName.current,\n    }\n    if (depositMode === \"edit\") {\n      codeCondfirmationAlert({\n        isUpdate: true,\n        cb: (userCodeConfirmation) => {\n\n          updateDepositMutation({\n            ...state,\n            userCodeConfirmation,\n            selectedCollection: JSON.stringify(selectedRows),\n            tableRowsInputValue: JSON.stringify(tableRowsInputValue),\n          });\n        },\n      });\n    } else {\n      saveCondfirmationAlert({\n        isConfirm: () => {\n          addDepositMutation({\n            ...state,\n            selectedCollection: JSON.stringify(selectedRows),\n            tableRowsInputValue: JSON.stringify(tableRowsInputValue),\n          });\n        },\n      });\n    }\n  };\n\n  function resetRefs() {\n\n    if (refBankAcctCode.current) {\n      refBankAcctCode.current.value = ''\n    }\n    if (refBankAcctName.current) {\n      refBankAcctName.current.value = ''\n    }\n    if (bankDepositSearch.current)\n      bankDepositSearch.current.value = ''\n    refBankAcctCodeTag.current = ''\n    refBankAcctNameTag.current = ''\n    refAcctID.current = ''\n    refAcctName.current = ''\n    refClassification.current = ''\n    refSubAccount.current = ''\n    refShortName.current = ''\n  }\n\n  const disabledFields = depositMode === \"\";\n\n\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        flexDirection: \"column\",\n        width: \"100%\",\n        height: \"100%\",\n        flex: 1,\n      }}\n    >\n      <div\n        style={{\n          display: \"flex\",\n          alignItems: \"center\",\n          columnGap: \"5px\",\n        }}\n      >\n        {isLoadingDeposit ? (\n          <LoadingButton loading={isLoadingDeposit} />\n        ) : (\n          <TextInput\n            label={{\n              title: \"Search: \",\n              style: {\n                fontSize: \"12px\",\n                fontWeight: \"bold\",\n                width: \"50px\",\n              },\n            }}\n            input={{\n              className: \"search-input-up-on-key-down\",\n              type: \"search\",\n              onKeyDown: (e) => {\n                if (e.key === \"Enter\" || e.key === \"NumpadEnter\") {\n                  e.preventDefault();\n                  openDeposit(inputSearchRef.current?.value);\n                }\n                if (e.key === \"ArrowDown\") {\n                  e.preventDefault();\n                  const datagridview = document.querySelector(\n                    \".grid-container\"\n                  ) as HTMLDivElement;\n                  datagridview.focus();\n                }\n              },\n              style: { width: \"500px\" },\n            }}\n            inputRef={inputSearchRef}\n          />\n        )}\n        {disabledFields && (\n          <Button\n            sx={{\n              height: \"30px\",\n              fontSize: \"11px\",\n            }}\n            variant=\"contained\"\n            startIcon={<AddIcon sx={{ width: 15, height: 15 }} />}\n            id=\"entry-header-save-button\"\n            onClick={() => {\n              setDepositMode(\"add\")\n\n            }}\n          >\n            New\n          </Button>\n        )}\n        <LoadingButton\n          sx={{\n            height: \"30px\",\n            fontSize: \"11px\",\n          }}\n          id=\"save-entry-header\"\n          color=\"primary\"\n          variant=\"contained\"\n          type=\"submit\"\n          onClick={handleOnSave}\n          disabled={disabledFields}\n          startIcon={<SaveIcon sx={{ width: 15, height: 15 }} />}\n          loading={updateDepositMutationLoading || addDepositMutationLoading}\n        >\n          Save\n        </LoadingButton>\n        {!disabledFields && (\n          <Button\n            sx={{\n              height: \"30px\",\n              fontSize: \"11px\",\n            }}\n            variant=\"contained\"\n            startIcon={<CloseIcon sx={{ width: 15, height: 15 }} />}\n            color=\"error\"\n            onClick={() => {\n              Swal.fire({\n                title: \"Are you sure?\",\n                text: \"You won't be able to revert this!\",\n                icon: \"warning\",\n                showCancelButton: true,\n                confirmButtonColor: \"#3085d6\",\n                cancelButtonColor: \"#d33\",\n                confirmButtonText: \"Yes, cancel it!\",\n              }).then((result) => {\n                if (result.isConfirmed) {\n                  setDepositMode(\"\")\n                  setSelectedRows([]);\n                  setCollectionForDeposit([]);\n                  RefetchDepositSlipCode();\n                  setTableRowsInputValue(defaultCashBreakDown);\n                  resetRefs()\n                  refetchCheckCollection()\n                  refetchCashCollection()\n\n                }\n              });\n            }}\n          >\n            Cancel\n          </Button>\n        )}\n      </div>\n      <br />\n      <form\n        onKeyDown={(e) => {\n          if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n            e.preventDefault();\n            return;\n          }\n        }}\n        style={{\n          display: \"flex\",\n          gap: \"10px\",\n        }}\n      >\n        {LoadingDepositSlipCode ? \"Loading...\" : <TextInput\n          label={{\n            title: \"Slip Code: \",\n            style: {\n              fontSize: \"12px\",\n              fontWeight: \"bold\",\n              width: \"70px\",\n            },\n          }}\n          input={{\n            disabled: disabledFields,\n            className: \"search-input-up-on-key-down\",\n            type: \"text\",\n            style: { width: \"200px\" },\n          }}\n          inputRef={refSlipCode}\n          icon={<AutorenewIcon sx={{ fontSize: \"18px\" }} />}\n          onIconClick={(e) => {\n            e.preventDefault()\n            RefetchDepositSlipCode()\n          }}\n        />}\n        <TextInput\n          label={{\n            title: \"Deposit Date: \",\n            style: {\n              fontSize: \"12px\",\n              fontWeight: \"bold\",\n              width: \"80px\",\n            },\n          }}\n          input={{\n            className: \"search-input-up-on-key-down\",\n            type: \"date\",\n            style: { width: \"200px\" },\n            disabled: disabledFields\n          }}\n          inputRef={refDateDepo}\n        />\n\n        {isLoadingDepostitBanks ? (\n          \"Loading...\"\n        ) : (\n          <TextInput\n            label={{\n              title: \"Bank Account: \",\n              style: {\n                fontSize: \"12px\",\n                fontWeight: \"bold\",\n                width: \"100px\",\n              },\n            }}\n            input={{\n              className: \"search-input-up-on-key-down\",\n              type: \"text\",\n              style: { width: \"200px\" },\n              onKeyDown: (e) => {\n                if (e.key === \"Enter\" || e.key === \"NumpadEnter\") {\n                  e.preventDefault();\n                  openDepositBanks(refBankAcctCode.current?.value)\n                }\n\n              },\n              disabled: disabledFields\n            }}\n            inputRef={refBankAcctCode}\n            icon={<AccountBalanceIcon sx={{ fontSize: \"18px\", color: disabledFields ? \"gray\" : \"black\" }} />}\n            onIconClick={(e) => {\n              e.preventDefault()\n              openDepositBanks(refBankAcctCode.current?.value)\n            }}\n            disableIcon={disabledFields}\n          />)}\n\n        <TextInput\n          label={{\n            title: \"Account Name: \",\n            style: {\n              fontSize: \"12px\",\n              fontWeight: \"bold\",\n              width: \"100px\",\n            },\n          }}\n          input={{\n            className: \"search-input-up-on-key-down\",\n            type: \"text\",\n            style: { width: \"200px\" },\n            readOnly: true,\n            disabled: disabledFields\n\n          }}\n          inputRef={refBankAcctName}\n        />\n        <button\n          // ref={submitButton}\n          style={{ display: \"none\" }}\n          type=\"submit\"\n        ></button>\n      </form>\n      <br />\n      <div>\n        <div style={{ display: \"flex\" }}>\n          {buttons.map((item, idx) => {\n            return (\n              <button\n                key={idx}\n                style={{\n                  border: \"none\",\n                  outline: \"none\",\n                  backgroundColor: \"rgba(51, 51, 51, 0.05)\",\n                  borderWidth: \"0\",\n                  color: currentStepIndex === idx ? \"#7e22ce\" : \"#333333\",\n                  cursor: \"pointer\",\n                  display: \"inline-block\",\n                  fontFamily: `\"Haas Grot Text R Web\", \"Helvetica Neue\", Helvetica, Arial, sans-serif`,\n                  fontSize: \"14px\",\n                  fontWeight: \"500\",\n                  lineHeight: \"20px\",\n                  listStyle: \"none\",\n                  margin: \"0\",\n                  padding: \"10px 12px\",\n                  textAlign: \"center\",\n                  transition: \"all 200ms\",\n                  verticalAlign: \"baseline\",\n                  whiteSpace: \"nowrap\",\n                  userSelect: \"none\",\n                  touchAction: \"manipulation\",\n                  position: \"relative\",\n                  overflow: \"hidden\",\n                }}\n                onClick={() => goTo(idx)}\n              >\n                <span\n                  style={{\n                    position: \"absolute\",\n                    top: 0,\n                    bottom: 0,\n                    left: 0,\n                    right: 0,\n                    background: \"rgba(206, 214, 211, 0.18)\",\n                    transition: \"all 200ms\",\n                    transform: slideAnimation(currentStepIndex, idx),\n                  }}\n                ></span>\n                {item.title}\n              </button>\n            );\n          })}\n        </div>\n      </div>\n      <br />\n      <DepositContext.Provider\n        value={{\n          myAxios,\n          user,\n          cashCollection,\n          setCashCollection,\n          checkCollection,\n          setCheckCollection,\n          selectedRows,\n          setSelectedRows,\n          collectionForDeposit,\n          setCollectionForDeposit,\n          total,\n          setTotal,\n          TotalCashForDeposit,\n          tableRows: tableRowsInputValue,\n          setTableRowsInputValue,\n          updateTableRowsInput,\n          loadingCheckCollection,\n          loadingCashCollection,\n          selectedRowsCashIndex,\n          setSelectedRowsCashIndex,\n          selectedRowsCheckedIndex,\n          setSelectedRowsCheckedIndex\n        }}\n      >\n        <div\n          style={{\n            display: \"flex\",\n            flexDirection: \"column\",\n            flex: 1,\n          }}\n          id=\"concatiner\"\n        >\n          {step}\n        </div>\n      </DepositContext.Provider>\n      {ModalDepostitBanks}\n      {ModalDeposit}\n      {loadingSearchByDepositSlip || updateDepositMutationLoading || addDepositMutationLoading && <div className=\"loading-component\"><div className=\"loader\"></div></div>}\n    </div>\n  );\n}\nfunction slideAnimation(activeButton: number, idx: number) {\n  if (activeButton === idx) {\n    return \"translateX(100%)\";\n  } else {\n    return \"translateX(0%)\";\n  }\n}\nfunction CashCollection() {\n  const {\n    cashCollection,\n    setSelectedRows,\n    selectedRowsCashIndex,\n    setSelectedRowsCashIndex,\n\n  } = useContext(DepositContext);\n\n  const table = useRef<any>(null);\n  const cashColumns = [\n    {\n      field: \"OR_No\",\n      headerName: \"OR No.\",\n      width: 270,\n    },\n    {\n      field: \"OR_Date\",\n      headerName: \"OR Date\",\n      width: 270,\n    },\n    {\n      field: \"Amount\",\n      headerName: \"Amount\",\n      width: 200,\n      type: \"number\",\n      cellClassName: \"super-app-theme--cell\",\n    },\n    {\n      field: \"Client_Name\",\n      headerName: \"Client Name\",\n      flex: 1,\n      width: 540,\n    },\n    {\n      field: \"Temp_OR\",\n      headerName: \"Temp_OR\",\n      hide: true,\n    },\n  ];\n\n  useEffect(() => {\n    table.current?.setSelectRows(\n      selectedRowsCashIndex\n    );\n  }, [selectedRowsCashIndex, table]);\n\n  const width = window.innerWidth - 70;\n  const height = window.innerHeight - 200;\n\n  //[checkSelected, table, loadingSearchByDepositSlip]\n  console.log(selectedRowsCashIndex)\n\n  return (\n    <div\n      style={{\n        flex: 1,\n        marginTop: \"10px\",\n        width: \"100%\",\n        position: \"relative\",\n      }}\n    >\n\n      <UpwardTable\n        isLoading={false}\n        ref={table}\n        rows={cashCollection}\n        column={cashColumns}\n        width={width}\n        height={height}\n        dataReadOnly={true}\n        freeze={true}\n        isMultipleSelect={true}\n        onSelectionChange={(selectedRow, rowIndex) => {\n          const rowSelected = selectedRow[0];\n          if (selectedRow.length > 0) {\n            if (selectedRowsCashIndex?.includes(rowIndex)) {\n              return\n            }\n            setSelectedRowsCashIndex((d: any) => [...d, rowIndex])\n            setSelectedRows((d: any) => {\n              const newSelected: any = {\n                Deposit: \"Cash\",\n                Check_No: \"\",\n                Check_Date: \"\",\n                Bank: \"\",\n                Amount: rowSelected.Amount,\n                Name: rowSelected.Client_Name,\n                RowIndex: d.length + 1,\n                DRCode: rowSelected.DRCode,\n                ORNo: rowSelected.OR_No,\n                DRRemarks: \"\",\n                IDNo: rowSelected.ID_No,\n                TempOR: rowSelected.Temp_OR,\n                Short: rowSelected.Short,\n              };\n\n              d = [...d, newSelected];\n              return d;\n            });\n\n          } else {\n\n          }\n        }}\n        inputsearchselector=\".manok\"\n      />\n      {/*               \n      <Box\n        style={{\n          height: `${document.getElementById(\"concatiner\")?.getBoundingClientRect()\n            .height\n            }px`,\n          width: \"100%\",\n          overflowX: \"scroll\",\n          position: \"absolute\",\n        }}\n      >\n        <Table\n          ref={table}\n          isLoading={loadingCashCollection}\n          columns={cashColumns}\n          rows={cashCollection}\n          table_id={\"Temp_OR\"}\n          isSingleSelection={true}\n          isRowFreeze={true}\n          dataSelection={(selection, data, code) => {\n            const rowSelected = data.filter(\n              (item: any) => item.Temp_OR === selection[0]\n            )[0];\n            if (rowSelected === undefined || rowSelected.length <= 0) {\n              return;\n            }\n\n\n            setSelectedRows((d: any) => {\n\n              const newSelected: any = {\n                Deposit: \"Cash\",\n                Check_No: \"\",\n                Check_Date: \"\",\n                Bank: \"\",\n                Amount: rowSelected.Amount,\n                Name: rowSelected.Client_Name,\n                RowIndex: d.length + 1,\n                DRCode: rowSelected.DRCode,\n                ORNo: rowSelected.OR_No,\n                DRRemarks: \"\",\n                IDNo: rowSelected.ID_No,\n                TempOR: rowSelected.Temp_OR,\n                Short: rowSelected.Short,\n              };\n\n              d = [...d, newSelected];\n              return d;\n            });\n          }}\n        />\n      </Box> */}\n    </div>\n  );\n}\nfunction CheckCollection() {\n  const {\n    checkCollection,\n    setSelectedRows,\n    setCollectionForDeposit,\n    selectedRowsCheckedIndex,\n    setSelectedRowsCheckedIndex\n\n  } = useContext(DepositContext)\n\n\n  const checkColumns = [\n    {\n      field: \"OR_No\",\n      headerName: \"OR No.\",\n      minWidth: 170,\n    },\n    {\n      field: \"OR_Date\",\n      headerName: \"OR Date\",\n      minWidth: 170,\n    },\n    {\n      field: \"Check_No\",\n      headerName: \"Check No\",\n      minWidth: 170,\n    },\n    {\n      field: \"Check_Date\",\n      headerName: \"Check Date\",\n      minWidth: 170,\n    },\n    {\n      field: \"Amount\",\n      headerName: \"Amount\",\n      minWidth: 160,\n      align: \"right\",\n    },\n    {\n      field: \"Bank_Branch\",\n      headerName: \"Bank/Branch\",\n      minWidth: 300,\n    },\n    {\n      field: \"Client_Name\",\n      headerName: \"Client Name\",\n      minWidth: 300,\n      flex: 1,\n    },\n    {\n      field: \"Temp_OR\",\n      headerName: \"Temp_OR\",\n      hide: true,\n    },\n  ];\n  const table = useRef<any>(null);\n\n  useEffect(() => {\n    table.current?.setSelectRows(\n      selectedRowsCheckedIndex\n    );\n  }, [selectedRowsCheckedIndex, table]);\n\n  const width = window.innerWidth - 70;\n  const height = window.innerHeight - 200;\n  // / [selectedRows, table, loadingSearchByDepositSlip]\n\n  return (\n    <div\n      style={{\n        marginTop: \"10px\",\n        width: \"100%\",\n        position: \"relative\",\n        flex: 1,\n      }}\n    >\n      <UpwardTable\n        isLoading={false}\n        ref={table}\n        rows={checkCollection}\n        column={checkColumns}\n        width={width}\n        height={height}\n        dataReadOnly={true}\n        freeze={true}\n        isMultipleSelect={true}\n        onSelectionChange={(selectedRow, rowIndex) => {\n          const rowSelected = selectedRow[0];\n          if (selectedRow.length > 0) {\n            if (selectedRowsCheckedIndex.includes(rowIndex)) {\n              return\n            }\n            setSelectedRowsCheckedIndex((d: any) => [...d, rowIndex])\n            setSelectedRows((d: any) => {\n              const newSelected: any = {\n                Deposit: \"Check\",//0\n                Check_No: rowSelected.Check_No,//1\n                Check_Date: rowSelected.Check_Date,//2\n                Bank: rowSelected.Bank_Branch,//3\n                Amount: rowSelected.Amount,//4\n                Name: rowSelected.Client_Name,//5\n                RowIndex: d.length + 1,//6\n                DRCode: rowSelected.DRCode,//7\n                ORNo: rowSelected.OR_No,//8\n                DRRemarks: rowSelected.DRRemarks,//9\n                IDNo: rowSelected.ID_No,//10\n                TempOR: rowSelected.Temp_OR,//11\n                Short: rowSelected.Short,//12\n              };\n              d = [...d, newSelected];\n              return d;\n            });\n\n\n            setCollectionForDeposit((d: any) => {\n              const newSelectedCheckForDeposit: any = {\n                Bank: rowSelected.Bank_Branch,\n                Check_No: rowSelected.Check_No,\n                Amount: rowSelected.Amount,\n                TempOR: rowSelected.Temp_OR,\n              };\n              d = [...d, newSelectedCheckForDeposit];\n              return d;\n            });\n          } else {\n\n          }\n        }}\n        inputsearchselector=\".manok\"\n      />\n      {/* <UpwardTable\n        isLoading={false}\n        ref={table}\n        rows={checkCollection}\n        column={checkColumns}\n        width={width}\n        height={height}\n        dataReadOnly={true}\n        onSelectionChange={(selectedRow, rowIndex) => {\n          const rowSelected = selectedRow[0];\n          if (selectedRow.length > 0) {\n            setSelectedRowsIndex(rowIndex)\n            setSelectedRows((d: any) => {\n              const newSelected: any = {\n                Deposit: \"Check\",//0\n                Check_No: rowSelected.Check_No,//1\n                Check_Date: rowSelected.Check_Date,//2\n                Bank: rowSelected.Bank_Branch,//3\n                Amount: rowSelected.Amount,//4\n                Name: rowSelected.Client_Name,//5\n                RowIndex: d.length + 1,//6\n                DRCode: rowSelected.DRCode,//7\n                ORNo: rowSelected.OR_No,//8\n                DRRemarks: rowSelected.DRRemarks,//9\n                IDNo: rowSelected.ID_No,//10\n                TempOR: rowSelected.Temp_OR,//11\n                Short: rowSelected.Short,//12\n              };\n              d = [...d, newSelected];\n              return d;\n            });\n\n\n            setCollectionForDeposit((d: any) => {\n              const newSelectedCheckForDeposit: any = {\n                Bank: rowSelected.Bank_Branch,\n                Check_No: rowSelected.Check_No,\n                Amount: rowSelected.Amount,\n                TempOR: rowSelected.Temp_OR,\n              };\n              d = [...d, newSelectedCheckForDeposit];\n              return d;\n            });\n          } else {\n\n          }\n        }}\n        inputsearchselector=\".manok\"\n      /> */}\n      {/*       \n      <Box\n        style={{\n          height: `${document.getElementById(\"concatiner\")?.getBoundingClientRect()\n            .height\n            }px`,\n          width: \"100%\",\n          overflowX: \"scroll\",\n          position: \"absolute\",\n        }}\n      >\n        <Table\n          ref={table}\n          isLoading={loadingCheckCollection}\n          columns={checkColumns}\n          rows={checkCollection}\n          table_id={\"Temp_OR\"}\n          isSingleSelection={true}\n          isRowFreeze={true}\n          dataSelection={(selection, data, code) => {\n            const rowSelected = data.filter(\n              (item: any) => item.Temp_OR === selection[0]\n            )[0];\n            if (rowSelected === undefined || rowSelected.length <= 0) {\n              return;\n            }\n\n            setSelectedRows((d: any) => {\n              const newSelected: any = {\n                Deposit: \"Check\",//0\n                Check_No: rowSelected.Check_No,//1\n                Check_Date: rowSelected.Check_Date,//2\n                Bank: rowSelected.Bank_Branch,//3\n                Amount: rowSelected.Amount,//4\n                Name: rowSelected.Client_Name,//5\n                RowIndex: d.length + 1,//6\n                DRCode: rowSelected.DRCode,//7\n                ORNo: rowSelected.OR_No,//8\n                DRRemarks: rowSelected.DRRemarks,//9\n                IDNo: rowSelected.ID_No,//10\n                TempOR: rowSelected.Temp_OR,//11\n                Short: rowSelected.Short,//12\n              };\n              d = [...d, newSelected];\n              return d;\n            });\n\n\n            setCollectionForDeposit((d: any) => {\n              const newSelectedCheckForDeposit: any = {\n                Bank: rowSelected.Bank_Branch,\n                Check_No: rowSelected.Check_No,\n                Amount: rowSelected.Amount,\n                TempOR: rowSelected.Temp_OR,\n              };\n              d = [...d, newSelectedCheckForDeposit];\n              return d;\n            });\n          }}\n        />\n      </Box> */}\n    </div>\n  );\n\n\n\n}\nfunction SelectedCollection() {\n\n  const {\n    selectedRows,\n    setSelectedRows,\n    setCollectionForDeposit,\n    setSelectedRowsCheckedIndex,\n    setSelectedRowsCashIndex,\n    checkCollection,\n    cashCollection\n  } = useContext(DepositContext);\n\n  const table = useRef<any>(null);\n  const selectedCollectionColumns = [\n    { field: \"Deposit\", headerName: \"Deposit\", flex: 1, minWidth: 170 },\n    { field: \"Check_No\", headerName: \"Check No\", flex: 1, minWidth: 170 },\n    {\n      field: \"Check_Date\",\n      headerName: \"Check Date\",\n      flex: 1,\n      minWidth: 170,\n    },\n    { field: \"Bank\", headerName: \"Bank/Branch\", flex: 1, minWidth: 200 },\n    { field: \"Amount\", headerName: \"Amount\", flex: 1, minWidth: 170 },\n    { field: \"Name\", headerName: \"Client Name\", flex: 1, minWidth: 400 },\n    // hide\n    { field: \"RowIndex\", headerName: \"RowIndex\", hide: true },\n    { field: \"DRCode\", headerName: \"DRCode\", hide: true },\n    { field: \"ORNo\", headerName: \"ORNo\", hide: true },\n    { field: \"DRRemarks\", headerName: \"DRRemarks\", hide: true },\n    { field: \"IDNo\", headerName: \"IDNo\", hide: true },\n    { field: \"TempOR\", headerName: \"TempOR\", hide: true },\n    { field: \"Short\", headerName: \"Short\", hide: true },\n  ];\n\n\n  const width = window.innerWidth - 70;\n  const height = window.innerHeight - 200;\n  return (\n    <div\n      style={{\n        marginTop: \"10px\",\n        width: \"100%\",\n        position: \"relative\",\n        flex: 1,\n      }}\n    >\n      <UpwardTable\n        isLoading={false}\n        ref={table}\n        rows={selectedRows}\n        column={selectedCollectionColumns}\n        width={width}\n        height={height}\n        dataReadOnly={true}\n        freeze={true}\n        isMultipleSelect={true}\n        onSelectionChange={(selectedRow, rowIndex) => {\n          const rowSelected = selectedRow[0];\n          if (selectedRow.length > 0) {\n            if (rowSelected.Deposit === \"Check\") {\n              const getRowIndex = checkCollection.findIndex((d: any) => d.Temp_OR === rowSelected.TempOR)\n\n              setSelectedRowsCheckedIndex((d: any) => {\n                const r = d.filter((d: any) => d !== getRowIndex)\n                return r\n              })\n            } else {\n              const getRowIndex = cashCollection.findIndex((d: any) => d.Temp_OR === rowSelected.TempOR)\n              setSelectedRowsCashIndex((d: any) => {\n                console.log(d, rowIndex)\n                const r = d.filter((d: any) => d !== getRowIndex)\n                return r\n              })\n\n            }\n            setSelectedRows((d: any) => {\n              return d.filter((item: any) => item.TempOR !== rowSelected.TempOR);\n            });\n            setCollectionForDeposit((d: any) => {\n              return d.filter((item: any) => item.TempOR !== rowSelected.TempOR);\n            });\n\n          } else {\n\n          }\n        }}\n        inputsearchselector=\".manok\"\n      />\n\n      {/* <Box\n        style={{\n          height: `${document.getElementById(\"concatiner\")?.getBoundingClientRect()\n            .height\n            }px`,\n          width: \"100%\",\n          overflowX: \"scroll\",\n          position: \"absolute\",\n        }}\n      >\n        <Table\n          ref={table}\n          isLoading={false}\n          columns={selectedCollectionColumns}\n          rows={selectedRows}\n          table_id={\"TempOR\"}\n          isSingleSelection={true}\n          isRowFreeze={false}\n          dataSelection={(selection, data, code) => {\n            const rowSelected = data.filter(\n              (item: any) => item.TempOR === selection[0]\n            )[0];\n            if (rowSelected === undefined || rowSelected.length <= 0) {\n              return;\n            }\n\n            setSelectedRows((d: any) => {\n              return d.filter((item: any) => item.TempOR !== selection[0]);\n            });\n            setCollectionForDeposit((d: any) => {\n              return d.filter((item: any) => item.TempOR !== selection[0]);\n            });\n          }}\n          getCellClassName={(params) => {\n            if (params.field === \"Deposit\" && params.value === \"Cash\") {\n              return \"cash\";\n            } else if (params.field === \"Deposit\" && params.value === \"Check\") {\n              return \"check\";\n            } else {\n              return \"\";\n            }\n          }}\n        />\n      </Box> */}\n    </div>\n  );\n\n\n}\nfunction CollectionForDeposit() {\n  const {\n    collectionForDeposit,\n    tableRows,\n    total,\n    setTotal,\n    TotalCashForDeposit,\n  } = useContext(DepositContext);\n  const table = useRef<any>(null);\n  useEffect(() => {\n    setTotal(\n      tableRows\n        ?.reduce((accumulator: any, currentValue: any) => {\n          return (\n            accumulator + parseFloat(currentValue.value3.replace(/,/g, \"\"))\n          );\n        }, 0.0)\n        .toLocaleString(\"en-US\", {\n          minimumFractionDigits: 2,\n          maximumFractionDigits: 2,\n        })\n    );\n  }, [tableRows, setTotal]);\n  const width = 600;\n  const height = window.innerHeight - 200;\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        gap: \"10px\",\n        height: \"auto \",\n      }}\n    >\n      <fieldset\n        style={{\n          flexDirection: \"column\",\n          gap: \"10px\",\n          border: \"1px solid #cbd5e1\",\n          borderRadius: \"5px\",\n          width: \"60%\",\n          position: \"relative\",\n        }}\n      >\n        <legend>Checks</legend>\n\n        <UpwardTable\n          isLoading={false}\n          ref={table}\n          rows={collectionForDeposit}\n          column={[\n            {\n              field: \"Bank\",\n              headerName: \"Bank/Branch\",\n              flex: 1,\n              width: 170,\n            },\n            {\n              field: \"Check_No\",\n              headerName: \"Check No\",\n              flex: 1,\n              width: 170,\n            },\n            {\n              field: \"Amount\",\n              headerName: \"Amount\",\n              flex: 1,\n              width: 300,\n            },\n          ]}\n          width={width}\n          height={height}\n          dataReadOnly={true}\n          freeze={true}\n          isMultipleSelect={true}\n          onSelectionChange={() => { }}\n          inputsearchselector=\".manok\"\n        />\n\n        {/* <div style={{ marginTop: \"10px\", width: \"100%\", position: \"relative\" }}>\n          <Box\n            style={{\n              height: \"530px\",\n              width: \"100%\",\n              overflowX: \"scroll\",\n              position: \"absolute\",\n            }}\n          >\n            <Table\n              ref={table}\n              isLoading={false}\n              checkboxSelection={false}\n              columns={[\n                {\n                  field: \"Bank\",\n                  headerName: \"Bank/Branch\",\n                  flex: 1,\n                  minWidth: 170,\n                },\n                {\n                  field: \"Check_No\",\n                  headerName: \"Check No\",\n                  flex: 1,\n                  minWidth: 170,\n                },\n                {\n                  field: \"Amount\",\n                  headerName: \"Amount\",\n                  flex: 1,\n                  minWidth: 170,\n                },\n              ]}\n              rows={collectionForDeposit}\n              table_id={\"TempOR\"}\n              isSingleSelection={true}\n              isRowFreeze={false}\n              isRowSelectable={() => false}\n              footerChildren={() => {\n                return <FooterCollectionForDepositCheck />;\n              }}\n              footerPaginationPosition={\"left-right\"}\n              showFooterSelectedCount={false}\n            />\n          </Box>\n        </div> */}\n      </fieldset>\n      <fieldset\n        style={{\n          flexDirection: \"column\",\n          gap: \"10px\",\n          padding: \"15px\",\n          border: \"1px solid #cbd5e1\",\n          borderRadius: \"5px\",\n          alignSelf: \"flex-end\",\n          display: \"flex\",\n          width: \"40%\",\n        }}\n      >\n        <legend\n          style={{\n            color: total === TotalCashForDeposit ? \"green\" : \"#ec4899\",\n          }}\n        >\n          Cash ( {TotalCashForDeposit} )\n        </legend>\n        <table\n          style={{\n            border: \"2px solid black\",\n            borderCollapse: \"collapse\",\n            marginTop: \"10px\",\n            width: \"100%\",\n          }}\n        >\n        \n          <thead>\n            <tr\n              style={{\n                borderBottom: \"2px solid black\",\n                fontSize: \"14px\",\n              }}\n            >\n              <th\n                style={{\n                  borderRight: \"2px solid black\",\n                }}\n              >\n                Denominations\n              </th>\n              <th\n                style={{\n                  borderRight: \"2px solid black\",\n                }}\n              >\n                QTY\n              </th>\n              <th\n                style={{\n                  borderRight: \"2px solid black\",\n                }}\n              >\n                Amount\n              </th>\n            </tr>\n          </thead>\n          <tbody>\n            {tableRows?.map((items: any, idx: number) => {\n              return (\n                <TrComponent\n                  key={idx}\n                  value1={items.value1}\n                  value2={items.value2}\n                  value3={items.value3}\n                  idx={idx}\n                />\n              );\n            })}\n          </tbody>\n          <tfoot>\n            <tr\n              style={{\n                borderTop: \"2px solid black\",\n                height: \"50px\",\n              }}\n            >\n              <td colSpan={3}>\n                <div\n                  style={{\n                    display: \"flex\",\n                    justifyContent: \"flex-end\",\n                    padding: \"0 10px  \",\n                  }}\n                >\n                  <div\n                    style={{\n                      display: \"flex\",\n                      alignItems: \"center\",\n                      width: \"250px\",\n                    }}\n                  >\n                    <span style={{ fontSize: \"14px\", marginRight: \"5px\" }}>\n                      Total Cash Deposit:\n                    </span>\n                    <input\n                      style={{\n                        fontWeight: \"bold\",\n                        border: \"1px solid black\",\n                        textAlign: \"right\",\n                        fontSize: \"15px\",\n                        width: \"117px\",\n                      }}\n                      value={total}\n                      onChange={(e) => {\n                        setTotal(e.target.value);\n                      }}\n                      readOnly={true}\n                    />\n                  </div>\n                </div>\n              </td>\n            </tr>\n          </tfoot>\n        </table>\n      </fieldset>\n    </div>\n  );\n}\nfunction TrComponent({ value1, value2, value3, idx }: any) {\n  const { updateTableRowsInput } = useContext(DepositContext);\n\n  const [input1, setInput1] = useState(value1);\n  const [input2, setInput2] = useState(value2);\n  const [input3, setInput3] = useState(value3);\n  const InputStyle: CSSProperties = {\n    textAlign: \"right\",\n    height: \"20px\",\n    borderRight: \"none\",\n    borderLeft: \"none\",\n    borderTop: \"none\",\n    outline: \"none\",\n    borderBottom: \"1px solid #cbd5e1\",\n    padding: \"0 8px\",\n    width: \"100%\",\n    fontSize: \"11px\",\n    margin: \"0\",\n\n  };\n\n  return (\n    <tr style={{ margin: \"0\", padding: \"0 !important\" }} >\n      <td\n        style={{\n          borderRight: \"2px solid black\", margin: \"0\", padding: \"0\"\n        }}\n      >\n        <input\n          type=\"text\"\n          style={InputStyle}\n          value={input1}\n          onChange={(e) => setInput1(e.target.value)}\n          readOnly={true}\n\n        />\n      </td>\n      <td\n        style={{\n          borderRight: \"2px solid black\",\n          overflow: \"hidden\", margin: 0, padding: \"0 !important\"\n        }}\n      >\n        <input\n          style={InputStyle}\n          value={input2}\n          onChange={(e) => {\n            let input1Value = input1;\n            setInput2(e.target.value);\n            if (input1.includes(\",\")) {\n              input1Value = input1.replace(/,/g, \"\").toString();\n            }\n            const valueFor3 = (\n              parseFloat(input1Value) *\n              (isNaN(parseInt(e.target.value)) ? 0 : parseInt(e.target.value))\n            ).toLocaleString(\"en-US\", {\n              minimumFractionDigits: 2,\n              maximumFractionDigits: 2,\n            });\n            setInput3(valueFor3);\n\n            updateTableRowsInput(\n              {\n                value1,\n                value2: e.target.value,\n                value3: valueFor3,\n              },\n              idx\n            );\n          }}\n        />\n      </td>\n      <td\n        style={{\n          borderRight: \"2px solid black\", margin: \"0\", padding: \"0 !important\"\n        }}\n      >\n        <input\n          type=\"text\"\n          style={InputStyle}\n          value={input3}\n          onChange={(e) => setInput3(e.target.value)}\n          readOnly={true}\n        />\n      </td>\n    </tr>\n  );\n}\nfunction FooterCollectionForDepositCheck() {\n  const { collectionForDeposit } = useContext(DepositContext);\n  return (\n    <Box\n      sx={{\n        px: 2,\n        py: 1,\n        display: \"flex\",\n        justifyContent: \"flex-end\",\n        borderTop: \"2px solid #e2e8f0\",\n      }}\n    >\n      <strong>\n        Total:{\" \"}\n        {collectionForDeposit\n          .reduce((sum: number, obj: any) => {\n            return sum + parseFloat(obj.Amount.replace(/,/g, \"\"));\n          }, 0)\n          .toLocaleString(\"en-US\", {\n            minimumFractionDigits: 2,\n            maximumFractionDigits: 2,\n          })}\n      </strong>\n    </Box>\n  );\n}\nfunction setNewStateValue(dispatch: any, obj: any) {\n  Object.entries(obj).forEach(([field, value]) => {\n    dispatch({ type: \"UPDATE_FIELD\", field, value });\n  });\n}\n","import { useState, ReactElement } from \"react\";\n\nexport default function useMultipleComponent(steps: ReactElement[]) {\n  const [currentStepIndex, setCurrentStepIndex] = useState(0);\n\n  function next() {\n    setCurrentStepIndex((i) => {\n      if (i >= steps.length - 1) {\n        return i;\n      }\n      return i + 1;\n    });\n  }\n  function back() {\n    setCurrentStepIndex((i) => {\n      if (i <= 0) {\n        return i;\n      }\n      return i + 1;\n    });\n  }\n  function goTo(index: number) {\n    setCurrentStepIndex(index);\n  }\n  \n  return {\n    step: steps[currentStepIndex],\n    goTo,\n    back,\n    next,\n    isFirstStep: currentStepIndex !== 0,\n    isLastStep: currentStepIndex === steps.length - 1,\n    currentStepIndex,\n  };\n}\n","import { useContext, useState } from \"react\";\nimport { useQuery } from \"react-query\";\nimport { AuthContext, User } from \"../components/AuthContext\";\nimport {\n  GridRowSelectionModel,\n  GridCellParams,\n  GridTreeNode,\n} from \"@mui/x-data-grid\";\nimport ModalWithTable from \"../components/ModalWithTable\";\nimport { flushSync } from \"react-dom\";\nimport { AxiosResponse, AxiosInstance } from \"axios\";\nimport { GridRowParams } from \"@mui/x-data-grid\";\ninterface QueryModalTableParamsType {\n  link?: {\n    url: string;\n    queryUrlName: string;\n  };\n  uniqueId: string;\n  queryKey: string;\n  responseDataKey: string;\n  columns: Array<any>;\n  onSelected?: (selectedRowData: Array<any>, data: Array<any>) => void;\n  onRemoveSelected?: (data: Array<any>) => void;\n  onSuccess?: (data: any) => void;\n  searchRef?: React.RefObject<HTMLInputElement>;\n  onCellKeyDown?: any;\n  onCloseFunction?: (search: any) => void;\n  CustomizeAxios?: (\n    myAxios: AxiosInstance,\n    user: User | null,\n    link: QueryModalTableParamsType[\"link\"],\n    search?: string\n  ) => Promise<AxiosResponse<any, any>>;\n  isRowSelectable?: ((params: GridRowParams<any>) => boolean) | undefined;\n  getCellClassName?:\n    | ((params: GridCellParams<any, any, any, GridTreeNode>) => string)\n    | undefined;\n}\n\nasync function CustomizeAxiosFunc(\n  myAxios: AxiosInstance,\n  user: User | null,\n  link: QueryModalTableParamsType[\"link\"],\n  search: string = \"\"\n) {\n  return myAxios.get(`${link?.url}?${link?.queryUrlName}=${search}`, {\n    headers: {\n      Authorization: `Bearer ${user?.accessToken}`,\n    },\n  });\n}\n\nconst useQueryModalTable = ({\n  link,\n  uniqueId,\n  queryKey,\n  responseDataKey,\n  columns,\n  onSelected = () => {},\n  onRemoveSelected = () => {},\n  onSuccess = () => {},\n  searchRef,\n  onCellKeyDown,\n  onCloseFunction = () => {},\n  CustomizeAxios = CustomizeAxiosFunc,\n  isRowSelectable,\n  getCellClassName,\n}: QueryModalTableParamsType) => {\n  const { myAxios, user } = useContext(AuthContext);\n  const [show, setShowModal] = useState(false);\n  const [rows, setRows] = useState<GridRowSelectionModel>([]);\n  async function customizeAxiostool(search: string = \"\") {\n    return await CustomizeAxios(myAxios, user, link, search);\n  }\n  const { isLoading, refetch } = useQuery({\n    queryKey: queryKey,\n    queryFn: async () => await customizeAxiostool(),\n    onSuccess: (res) => {\n      const response = res as any;\n      setRows(response.data[responseDataKey]);\n      onSuccess(response);\n    },\n    refetchOnWindowFocus: false,\n  });\n\n  const openModal = (search: string = \"\") => {\n    flushSync(() => {\n      setShowModal(true);\n    });\n    if (searchRef?.current) {\n      searchRef.current.value = search;\n      customizeAxiostool(search).then((res: any) => {\n        if (!res?.data.success) {\n          return alert(`Error : ${res?.data.message}`);\n        }\n        const response = res as any;\n        setRows(response.data[responseDataKey]);\n        if (searchRef?.current) searchRef.current.focus();\n      });\n    }\n  };\n\n  const closeModal = () => {\n    setShowModal(false);\n    if (onCloseFunction) {\n      onCloseFunction(searchRef?.current?.value);\n    }\n  };\n\n  const ModalComponent = (\n    <ModalWithTable\n      getCellClassName={getCellClassName}\n      searchRef={searchRef}\n      showModal={show}\n      onCloseModal={() => {\n        setShowModal(false);\n        if (onCloseFunction) {\n          onCloseFunction(searchRef?.current?.value);\n        }\n      }}\n      onClickCloseIcon={() => {\n        setShowModal(false);\n        if (onCloseFunction) {\n          onCloseFunction(searchRef?.current?.value);\n        }\n      }}\n      searchOnChange={(e) => {\n        // myAxios\n        //   .get(`${link.url}?${link.queryUrlName}=${e.target.value}`, {\n        //     headers: {\n        //       Authorization: `Bearer ${user?.accessToken}`,\n        //     },\n        //   })\n        //   .then((res: any) => {\n        //     if (!res?.data.success) {\n        //       return alert(`Error : ${res?.data.message}`);\n        //     }\n        //     const response = res as any;\n        //     setRows(response.data[responseDataKey]);\n        //   });\n      }}\n      onSearchKeyEnter={(value) => {\n        customizeAxiostool(value).then((res: any) => {\n          if (!res?.data.success) {\n            return alert(`Error : ${res?.data.message}`);\n          }\n          const response = res as any;\n          setRows(response.data[responseDataKey]);\n        });\n      }}\n      onCellKeyDown={onCellKeyDown}\n      height={300}\n      isLoading={isLoading}\n      queryKey={queryKey}\n      columns={columns}\n      onSelectionChange={(rowSelectionModel, data) => {\n        if (rowSelectionModel.length <= 0) {\n          return onRemoveSelected(data);\n        }\n        const selectedIDs = new Set(rowSelectionModel);\n        const selectedRowData = data.filter((row: any) => {\n          return selectedIDs.has(row[uniqueId].toString());\n        });\n        if (selectedRowData.length <= 0) return;\n        onSelected(selectedRowData, data);\n      }}\n      id={uniqueId}\n      rows={rows}\n      setRows={setRows}\n      isRowSelectable={isRowSelectable}\n    />\n  );\n\n  return {\n    show,\n    rows,\n    isLoading,\n    openModal,\n    closeModal,\n    ModalComponent,\n    refetch,\n  };\n};\n\nexport default useQueryModalTable;\n","import Swal from \"sweetalert2\";\n\nexport function codeCondfirmationAlert(props: {\n  cb: (userCodeConfirmation: string) => void;\n  isUpdate: boolean;\n  isConfirm?: () => void;\n  isDeclined?: () => void;\n  text?: string;\n}) {\n  Swal.fire({\n    title: `Are you sure!`,\n    html: props?.text\n      ? props?.text\n      : props.isUpdate\n      ? `Are you sure you want to make this change?`\n      : \"Are you sure you want to delete this?\",\n    icon: \"warning\",\n    input: \"text\",\n    inputAttributes: {\n      autocapitalize: \"off\",\n    },\n    showCancelButton: true,\n    confirmButtonText: \"Save\",\n    confirmButtonColor: \"green\",\n    showLoaderOnConfirm: true,\n    preConfirm: async (userCodeConfirmation) => {\n      try {\n        props.cb(userCodeConfirmation);\n      } catch (error) {\n        Swal.showValidationMessage(`\n            Request failed: ${error}\n          `);\n      }\n    },\n    allowOutsideClick: () => !Swal.isLoading(),\n  }).then((result) => {\n    if (result.isConfirmed) {\n      if (props.isConfirm) {\n        return props.isConfirm();\n      }\n    }\n    if (props.isDeclined) {\n      props.isDeclined();\n    }\n  });\n}\n\nexport function saveCondfirmationAlert(props: {\n  isConfirm?: () => void;\n  isDeclined?: () => void;\n  text?: string;\n}) {\n  Swal.fire({\n    title: \"Are you sure?\",\n    text: props?.text ? props?.text : \"Do you want to proceed with saving?\",\n    icon: \"warning\",\n    showCancelButton: true,\n    confirmButtonColor: \"#3085d6\",\n    cancelButtonColor: \"#d33\",\n    confirmButtonText: \"Yes, save it!\",\n  }).then((result) => {\n    if (result.isConfirmed) {\n      if (props.isConfirm) {\n        return props.isConfirm();\n      }\n    }\n    if (props.isDeclined) {\n      props.isDeclined();\n    }\n  });\n}\n","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\"\n}), 'Add');\nexports.default = _default;","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 6v3l4-4-4-4v3c-4.42 0-8 3.58-8 8 0 1.57.46 3.03 1.24 4.26L6.7 14.8c-.45-.83-.7-1.79-.7-2.8 0-3.31 2.69-6 6-6zm6.76 1.74L17.3 9.2c.44.84.7 1.79.7 2.8 0 3.31-2.69 6-6 6v-3l-4 4 4 4v-3c4.42 0 8-3.58 8-8 0-1.57-.46-3.03-1.24-4.26z\"\n}), 'Autorenew');\nexports.default = _default;","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M17 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V7l-4-4zm-5 16c-1.66 0-3-1.34-3-3s1.34-3 3-3 3 1.34 3 3-1.34 3-3 3zm3-10H5V5h10v4z\"\n}), 'Save');\nexports.default = _default;","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bigint: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is');\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}"],"names":["style","position","top","left","transform","width","bgcolor","boxShadow","p","heigth","ModalWithTable","_ref","height","isLoading","columns","queryKey","onSelectionChange","rows","setRows","id","onCloseModal","showModal","onClickCloseIcon","searchOnChange","_ref$title","title","searchRef","_ref$onSearchKeyEnter","onCellKeyDown","onSearchKeyEnter","isRowSelectable","getCellClassName","mainId","generateRandomClass","_jsx","Modal","open","onClose","children","_jsxs","Box","sx","Typography","variant","component","mb","TextField","size","label","marginBottom","fullWidth","onChange","InputProps","inputRef","onKeyDown","e","_searchRef$current","code","preventDefault","current","value","keyBoardSelectionTable","className","concat","Table","isSingleSelection","isRowFreeze","dataSelection","selection","data","table_id","right","IconButton","color","onClick","CloseIcon","Math","floor","random","el","_rows$","document","querySelectorAll","classList","add","firstRowParent","querySelector","firstInput","focus","event","MouseEvent","bubbles","cancelable","view","window","dispatchEvent","addEventListener","es","key","remove","keyBoardUpDown","forEach","idx","_rows$idx","_rows","_rows$idx2","_rows2","length","TableContext","createContext","rowSelectionModel","footerChildren","footerPaginationPosition","showFooterSelectedCount","forwardRef","ref","_ref$CustomFooterComp","CustomFooterComponent","DefaultooterComponent","_ref$checkboxSelectio","checkboxSelection","_ref$footerChildren","_ref$footerPagination","_ref$showFooterSelect","_useState","useState","_useState2","_slicedToArray","selectedRows","setSelectedRows","useImperativeHandle","removeSelection","getSelectedRows","filter","item","includes","freezeArray","Provider","DataGrid","slots","loadingOverlay","LinearProgress","footer","initialState","pagination","paginationModel","pageSize","loading","getRowId","row","col","hide","showCellVerticalBorder","showColumnVerticalBorder","rowHeight","columnHeaderHeight","pageSizeOptions","_objectSpread","fill","background","padding","fontSize","display","fontWeight","onRowSelectionModelChange","selectionSet","Set","s","has","__","rowNode","_toConsumableArray","disableVirtualization","Pagination","_ref2","page","onPageChange","apiRef","useGridApiContext","pageCount","useGridSelector","gridPageCountSelector","MuiPagination","count","newPage","CustomPagination","props","GridPagination","ActionsComponent","_useContext","useContext","columnGap","justifyContent","px","alignItems","flexDirection","flex","defaultCashBreakDown","value1","value2","value3","buttons","index","reducer","state","action","type","_defineProperty","field","DepositContext","cashCollection","setCashCollection","checkCollection","setCheckCollection","selectedCollection","setSelectedCollection","collectionForDeposit","setCollectionForDeposit","tableRows","updateTableRowsInput","LoadingCashTable","LoadingCheckTable","setTotal","total","TotalCashForDeposit","loadingSearchByDepositSlip","Deposit","_queryFn","_mutationFn","_mutationFn2","_mutationFn3","_queryFn2","_queryFn3","depositSearch","useRef","inputSearchRef","refSlipCode","refDateDepo","refBankAcctCode","refBankAcctName","bankDepositSearch","_refTempSlipCode","refBankAcctCodeTag","refBankAcctNameTag","refAcctID","refAcctName","refClassification","refSubAccount","refShortName","AuthContext","myAxios","user","_useMultipleComponent","useMultipleComponent","CashCollection","CheckCollection","SelectedCollection","CollectionForDeposit","currentStepIndex","step","goTo","_useState3","_useState4","_useState5","_useState6","_useState7","_useState8","selectedRowsCashIndex","setSelectedRowsCashIndex","_useState9","_useState10","selectedRowsCheckedIndex","setSelectedRowsCheckedIndex","_useState11","_useState12","_useState13","_useState14","tableRowsInputValue","setTableRowsInputValue","_useState15","_useState16","depositMode","setDepositMode","_useState17","_useState18","reduce","accumulator","currentValue","Check_No","parseFloat","Amount","replace","toLocaleString","minimumFractionDigits","maximumFractionDigits","_useQuery","useQuery","queryFn","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","get","headers","Authorization","accessToken","abrupt","sent","stop","apply","arguments","refetchOnWindowFocus","onSuccess","response","wait","then","slipcode","collectionID","format","Date","LoadingDepositSlipCode","RefetchDepositSlipCode","refetch","_useQueryModalTable","useQueryModalTable","link","url","queryUrlName","headerName","uniqueId","responseDataKey","onSelected","selectedRowData","_selectedRowData$","_selectedRowData$2","_selectedRowData$3","_selectedRowData$4","_selectedRowData$5","_selectedRowData$6","_selectedRowData$7","Account_No","Account_Name","IDNo","Desc","Account_ID","Short","client_name","Sub_Acct","ShortName","closeDepositBanks","ModalDepostitBanks","ModalComponent","openDepositBanks","openModal","isLoadingDepostitBanks","closeModal","_useMutation","useMutation","mutationKey","mutationFn","_x","_callee2","variables","_context2","post","res","resposnse","success","resetRefs","refetchCashCollection","refetchCheckCollection","Swal","icon","message","timer","addDepositMutation","mutate","addDepositMutationLoading","_useMutation2","_x2","_callee3","_context3","updateDepositMutation","updateDepositMutationLoading","_useMutation3","_x3","_callee4","_context4","obj","cash","check","checks","cash_breakdown","refDate","cashIndex","map","SlipCode","checkIndex","filteredCash","itm","_refSlipCode$current","filteredCheck","_refSlipCode$current2","rowSelected","d","newSelected","Check_Date","Bank","Name","Client_Name","RowIndex","DRCode","ORNo","OR_No","DRRemarks","ID_No","TempOR","Temp_OR","Bank_Branch","newSelectedCheckForDeposit","searchByDepositSlip","_useQueryModalTable2","closeDeposit","onCloseFunction","ModalDeposit","openDeposit","isLoadingDeposit","_useQuery2","_callee5","_context5","loadingCashCollection","_useQuery3","_callee6","_context6","loadingCheckCollection","disabledFields","LoadingButton","TextInput","input","_inputSearchRef$curre","Button","startIcon","AddIcon","_refBankAcctCode$curr","_refBankAcctCode$curr2","_refSlipCode$current3","_refDateDepo$current","_refBankAcctCode$curr3","_refBankAcctName$curr","result","trim","depositSlip","depositdate","BankAcctCode","BankAcctName","BankAcctCodeTag","BankAcctNameTag","AcctID","AcctName","Classification","SubAccount","codeCondfirmationAlert","isUpdate","cb","userCodeConfirmation","JSON","stringify","saveCondfirmationAlert","isConfirm","disabled","SaveIcon","text","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","isConfirmed","gap","AutorenewIcon","onIconClick","_refBankAcctCode$curr4","AccountBalanceIcon","_refBankAcctCode$curr5","disableIcon","readOnly","border","outline","backgroundColor","borderWidth","cursor","fontFamily","lineHeight","listStyle","margin","textAlign","transition","verticalAlign","whiteSpace","userSelect","touchAction","overflow","bottom","slideAnimation","fields","activeButton","_useContext2","table","useEffect","_table$current","setSelectRows","innerWidth","innerHeight","console","log","marginTop","UpwardTable","column","cellClassName","dataReadOnly","freeze","isMultipleSelect","selectedRow","rowIndex","inputsearchselector","_useContext3","_table$current2","minWidth","align","_useContext4","getRowIndex","findIndex","_useContext5","borderRadius","alignSelf","borderCollapse","borderBottom","borderRight","items","TrComponent","borderTop","colSpan","marginRight","target","_useState19","_useState20","input1","setInput1","_useState21","_useState22","input2","setInput2","_useState23","_useState24","input3","setInput3","InputStyle","borderLeft","input1Value","toString","valueFor3","isNaN","parseInt","steps","setCurrentStepIndex","back","i","isFirstStep","isLastStep","CustomizeAxiosFunc","_CustomizeAxiosFunc","search","_args","undefined","_customizeAxiostool","_ref$onSelected","_ref$onRemoveSelected","onRemoveSelected","_ref$onSuccess","_ref$onCloseFunction","_ref$CustomizeAxios","CustomizeAxios","show","setShowModal","customizeAxiostool","_args2","flushSync","alert","_searchRef$current2","_searchRef$current3","selectedIDs","_preConfirm","html","inputAttributes","autocapitalize","showLoaderOnConfirm","preConfirm","error","allowOutsideClick","isDeclined","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","ReactPropTypesSecret","emptyFunction","emptyFunctionWithReset","resetWarningCache","module","shim","propName","componentName","location","propFullName","secret","err","Error","name","getShim","isRequired","ReactPropTypes","array","bigint","bool","func","number","object","string","symbol","any","arrayOf","element","elementType","instanceOf","node","objectOf","oneOf","oneOfType","shape","exact","checkPropTypes","PropTypes","_objectWithoutProperties","source","excluded","Object","getOwnPropertySymbols","sourceSymbolKeys","indexOf","prototype","propertyIsEnumerable","call"],"sourceRoot":""}