{"version":3,"file":"static/js/885.5414cee9.chunk.js","mappings":"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","sources":["components/Helmet.tsx","feautures/Admin/Task/Accounting/Deposit.tsx","lib/confirmationAlert.ts","../node_modules/@mui/icons-material/AccountBalance.js","../node_modules/@mui/icons-material/Add.js","../node_modules/@mui/icons-material/Autorenew.js","../node_modules/@mui/icons-material/Close.js","../node_modules/@mui/icons-material/Save.js","../node_modules/@mui/icons-material/Search.js","../node_modules/prop-types/factoryWithThrowingShims.js","../node_modules/prop-types/index.js","../node_modules/prop-types/lib/ReactPropTypesSecret.js"],"sourcesContent":["\r\nimport { Helmet } from \"react-helmet\";\r\n\r\nconst PageHelmet = ({ title = '' }: { title: string }) => {\r\n    const imgUrl = process.env.REACT_APP_IMAGE_URL;\r\n    return (\r\n        <Helmet>\r\n            <title>{title}</title>\r\n            <link rel=\"icon\" type=\"image/png\" href={`${imgUrl}/logo.png`} />\r\n        </Helmet>\r\n    );\r\n};\r\n\r\nexport default PageHelmet;","import {\n  useState,\n  createContext,\n  useContext,\n  CSSProperties,\n  useEffect,\n  useRef,\n  forwardRef,\n  Fragment,\n  useImperativeHandle,\n} from \"react\";\nimport { useMutation, useQuery } from \"react-query\";\nimport { AuthContext } from \"../../../../components/AuthContext\";\nimport { Button } from \"@mui/material\";\nimport useQueryModalTable from \"../../../../hooks/useQueryModalTable\";\nimport LoadingButton from \"@mui/lab/LoadingButton\";\nimport AddIcon from \"@mui/icons-material/Add\";\nimport SaveIcon from \"@mui/icons-material/Save\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport Swal from \"sweetalert2\";\nimport { wait } from \"@testing-library/user-event/dist/utils\";\nimport {\n  codeCondfirmationAlert,\n  saveCondfirmationAlert,\n} from \"../../../../lib/confirmationAlert\";\nimport { TextInput } from \"../../../../components/UpwardFields\";\nimport { format } from \"date-fns\";\nimport AutorenewIcon from \"@mui/icons-material/Autorenew\";\nimport AccountBalanceIcon from \"@mui/icons-material/AccountBalance\";\nimport \"../../../../style/laoding.css\";\nimport PageHelmet from \"../../../../components/Helmet\";\nimport SearchIcon from \"@mui/icons-material/Search\";\nimport { useUpwardTableModalSearchSafeMode } from \"../../../../components/DataGridViewReact\";\n\nconst defaultCashBreakDown = [\n  { value1: \"1,000.00\", value2: \"\", value3: \"0.00\" },\n  { value1: \"500.00\", value2: \"\", value3: \"0.00\" },\n  { value1: \"200.00\", value2: \"\", value3: \"0.00\" },\n  { value1: \"100.00\", value2: \"\", value3: \"0.00\" },\n  { value1: \"50.00\", value2: \"\", value3: \"0.00\" },\n  { value1: \"20.00\", value2: \"\", value3: \"0.00\" },\n  { value1: \"10.00\", value2: \"\", value3: \"0.00\" },\n  { value1: \"5.00\", value2: \"\", value3: \"0.00\" },\n  { value1: \"2.00\", value2: \"\", value3: \"0.00\" },\n  { value1: \"1.00\", value2: \"\", value3: \"0.00\" },\n  { value1: \".50\", value2: \"\", value3: \"0.00\" },\n  { value1: \".25\", value2: \"\", value3: \"0.00\" },\n  { value1: \".10\", value2: \"\", value3: \"0.00\" },\n  { value1: \".05\", value2: \"\", value3: \"0.00\" },\n  { value1: \".01\", value2: \"\", value3: \"0.00\" },\n];\nconst buttons = [\n  {\n    title: \"Cash Collection\",\n    index: 0,\n  },\n  {\n    title: \"Check Collection\",\n    index: 1,\n  },\n  {\n    title: \"Selected Collection\",\n    index: 2,\n  },\n  {\n    title: \"Collection for Deposit\",\n    index: 3,\n  },\n];\nconst cashColumns = [\n  {\n    key: \"OR_No\",\n    label: \"OR No.\",\n    width: 270,\n  },\n  {\n    key: \"OR_Date\",\n    label: \"OR Date\",\n    width: 270,\n  },\n  {\n    key: \"Amount\",\n    label: \"Amount\",\n    width: 200,\n    type: \"number\",\n    cellClassName: \"super-app-theme--cell\",\n  },\n  {\n    key: \"Client_Name\",\n    label: \"Client Name\",\n    flex: 1,\n    width: 540,\n  },\n  {\n    key: \"DRCode\",\n    label: \"DRCode\",\n    hide: true,\n  },\n  {\n    key: \"ID_No\",\n    label: \"ID_No\",\n    hide: true,\n  },\n  {\n    key: \"Short\",\n    label: \"Short\",\n    hide: true,\n  },\n  {\n    key: \"Temp_OR\",\n    label: \"Temp_OR\",\n    hide: true,\n  },\n];\n\nexport const reducer = (state: any, action: any) => {\n  switch (action.type) {\n    case \"UPDATE_FIELD\":\n      return {\n        ...state,\n        [action.field]: action.value,\n      };\n    default:\n      return state;\n  }\n};\n\nconst DepositContext = createContext<any>({\n  cashCollection: [],\n  setCashCollection: () => {},\n  checkCollection: [],\n  setCheckCollection: () => {},\n  selectedCollection: [],\n  setSelectedCollection: () => {},\n  collectionForDeposit: [],\n  setCollectionForDeposit: () => {},\n  tableRows: [],\n  updateTableRowsInput: () => {},\n  LoadingCashTable: false,\n  LoadingCheckTable: false,\n  setTotal: () => {},\n  total: \"0.00\",\n  TotalCashForDeposit: \"0.00\",\n  loadingSearchByDepositSlip: false,\n});\n\nexport default function Deposit() {\n  const cashTable = useRef<any>(null);\n  const checkTable = useRef<any>(null);\n  const selectedTable = useRef<any>(null);\n  const collectionCheckTable = useRef<any>(null);\n\n  const depositSearch = useRef<HTMLInputElement>(null);\n  const inputSearchRef = useRef<HTMLInputElement>(null);\n  const refSlipCode = useRef<HTMLInputElement>(null);\n  const refDateDepo = useRef<HTMLInputElement>(null);\n  const refBankAcctCode = useRef<HTMLInputElement>(null);\n  const refBankAcctName = useRef<HTMLInputElement>(null);\n\n  const bankDepositSearch = useRef<HTMLInputElement>(null);\n  const _refTempSlipCode = useRef<string>(\"\");\n\n  const refBankAcctCodeTag = useRef(\"\");\n  const refBankAcctNameTag = useRef(\"\");\n  const refAcctID = useRef(\"\");\n  const refAcctName = useRef(\"\");\n  const refClassification = useRef(\"\");\n  const refSubAccount = useRef(\"\");\n  const refShortName = useRef(\"\");\n\n  const { myAxios, user } = useContext(AuthContext);\n  const { currentStepIndex, goTo } = useMultipleComponent([0, 1, 2, 3]);\n  const [cashCollection, setCashCollection] = useState<any>([]);\n  const [checkCollection, setCheckCollection] = useState<any>([]);\n  const [selectedRows, setSelectedRows] = useState<any>([]);\n  const [collectionForDeposit, setCollectionForDeposit] = useState<any>([]);\n  const [tableRowsInputValue, setTableRowsInputValue] =\n    useState<Array<{ value1: string; value2: string; value3: string }>>(\n      defaultCashBreakDown\n    );\n\n  const [selectedRowsCashIndex, setSelectedRowsCashIndex] = useState<any>([]);\n  const [selectedRowsCheckedIndex, setSelectedRowsCheckedIndex] = useState<any>(\n    []\n  );\n\n  const [depositMode, setDepositMode] = useState(\"\");\n  const [total, setTotal] = useState(\"0.00\");\n\n  const disabledFields = depositMode === \"\";\n\n  const TotalCashForDeposit = selectedRows\n    .reduce((accumulator: number, currentValue: any) => {\n      const dd =\n        currentValue.Check_No || currentValue.Check_No !== \"\"\n          ? 0\n          : parseFloat(currentValue.Amount.replace(/,/g, \"\"));\n      return accumulator + dd;\n    }, 0.0)\n    .toLocaleString(\"en-US\", {\n      minimumFractionDigits: 2,\n      maximumFractionDigits: 2,\n    });\n  const updateTableRowsInput = (\n    fields: { value1: string; value2: string; value3: string },\n    idx: number\n  ) => {\n    setTableRowsInputValue((d) => {\n      return d.map((item, index) => {\n        if (idx === index) {\n          item = { ...item, ...fields };\n        }\n        return item;\n      });\n    });\n  };\n  const { isLoading: LoadingDepositSlipCode, refetch: RefetchDepositSlipCode } =\n    useQuery({\n      queryKey: \"deposit-slipcode\",\n      queryFn: async () =>\n        await myAxios.get(`/task/accounting/get-deposit-slipcode`, {\n          headers: {\n            Authorization: `Bearer ${user?.accessToken}`,\n          },\n        }),\n      refetchOnWindowFocus: false,\n      onSuccess: (data) => {\n        const response = data as any;\n        wait(100).then(() => {\n          if (refSlipCode.current) {\n            refSlipCode.current.value = response.data.slipcode[0].collectionID;\n            _refTempSlipCode.current = response.data.slipcode[0].collectionID;\n          }\n        });\n      },\n    });\n\n  const { mutate: addDepositMutation, isLoading: addDepositMutationLoading } =\n    useMutation({\n      mutationKey: \"add-deposit\",\n      mutationFn: async (variables: any) => {\n        return await myAxios.post(\"/task/accounting/add-deposit\", variables, {\n          headers: {\n            Authorization: `Bearer ${user?.accessToken}`,\n          },\n        });\n      },\n      onSuccess: (res) => {\n        const resposnse = res as any;\n        if (resposnse.data.success) {\n          wait(100).then(() => {\n            resetTables();\n            resetRefs();\n            setTableRowsInputValue(defaultCashBreakDown);\n            setSelectedRows([]);\n            setCollectionForDeposit([]);\n            setSelectedRowsCashIndex([]);\n            setSelectedRowsCheckedIndex([]);\n\n            refetchCashCollection();\n            refetchCheckCollection();\n            RefetchDepositSlipCode();\n            setDepositMode(\"\");\n            goTo(0);\n          });\n\n          return Swal.fire({\n            position: \"center\",\n            icon: \"success\",\n            title: resposnse.data.message,\n            timer: 1500,\n          });\n        }\n        return Swal.fire({\n          position: \"center\",\n          icon: \"warning\",\n          title: resposnse.data.message,\n          timer: 1500,\n        });\n      },\n    });\n  const {\n    mutate: updateDepositMutation,\n    isLoading: updateDepositMutationLoading,\n  } = useMutation({\n    mutationKey: \"update-deposit\",\n    mutationFn: async (variables: any) => {\n      return await myAxios.post(\"/task/accounting/update-deposit\", variables, {\n        headers: {\n          Authorization: `Bearer ${user?.accessToken}`,\n        },\n      });\n    },\n    onSuccess: (res) => {\n      const resposnse = res as any;\n      if (resposnse.data.success) {\n        wait(100).then(() => {\n          resetTables();\n          resetRefs();\n          setTableRowsInputValue(defaultCashBreakDown);\n          setSelectedRows([]);\n          setCollectionForDeposit([]);\n          setSelectedRowsCashIndex([]);\n          setSelectedRowsCheckedIndex([]);\n\n          refetchCashCollection();\n          refetchCheckCollection();\n          RefetchDepositSlipCode();\n          setDepositMode(\"\");\n          goTo(0);\n        });\n        return Swal.fire({\n          position: \"center\",\n          icon: \"success\",\n          title: resposnse.data.message,\n          timer: 1500,\n        });\n      }\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: resposnse.data.message,\n        timer: 1500,\n      });\n    },\n  });\n  const { mutate: searchByDepositSlip, isLoading: loadingSearchByDepositSlip } =\n    useMutation({\n      mutationKey: \"search-deposit-cash-check\",\n      mutationFn: async (variables: any) => {\n        return await myAxios.post(\n          \"/task/accounting/search-cash-check\",\n          variables,\n          {\n            headers: {\n              Authorization: `Bearer ${user?.accessToken}`,\n            },\n          }\n        );\n      },\n      onSuccess: (res) => {\n        const obj = res.data.data.obj;\n        const cash = res.data.data.cash;\n        const check = res.data.data.checks;\n        const cash_breakdown = res.data.data.cash_breakdown;\n\n        setCashCollection([]);\n        setCheckCollection([]);\n        setSelectedRows([]);\n        setCollectionForDeposit([]);\n        setTableRowsInputValue([]);\n        wait(100).then(() => {\n          collectionCheckTable.current.resetTable();\n          selectedTable.current.resetTable();\n          cashTable.current.resetTable();\n          checkTable.current.resetTable();\n\n          if (refBankAcctCode.current)\n            refBankAcctCode.current.value = obj.refBankAcctCode;\n          if (refBankAcctName.current)\n            refBankAcctName.current.value = obj.refBankAcctName;\n          if (refDateDepo.current)\n            refDateDepo.current.value = format(\n              new Date(obj.refDate),\n              \"yyyy-MM-dd\"\n            );\n\n          refBankAcctCodeTag.current = obj?.refBankAcctCodeTag;\n          refBankAcctNameTag.current = obj?.refBankAcctNameTag;\n          refAcctID.current = obj?.refAcctID;\n          refAcctName.current = obj?.refAcctName;\n          refShortName.current = obj?.client_name;\n          refClassification.current = obj?.refClassification;\n          refSubAccount.current = obj?.refSubAccount;\n\n          cashTable.current.setDataFormated(cash);\n          checkTable.current.setDataFormated(check);\n          setCashCollection(cash);\n          setCheckCollection(check);\n          setTableRowsInputValue(cash_breakdown);\n\n          setTimeout(() => {\n            cash.forEach((d: any, idx: number) => {\n              if (\n                refSlipCode.current &&\n                d.SlipCode === refSlipCode.current.value\n              ) {\n                const row = cashTable.current\n                  .parentElement()\n                  .querySelector(`.tr-row-${idx}`);\n                const col = row.querySelectorAll(\"td\")[0];\n                const checkbox = col.querySelector(\"input\") as HTMLInputElement;\n                if (checkbox) {\n                  checkbox.click();\n                }\n              }\n            });\n\n            check.forEach((d: any, idx: number) => {\n              if (\n                refSlipCode.current &&\n                d.SlipCode === refSlipCode.current.value\n              ) {\n                const row = checkTable.current\n                  .parentElement()\n                  .querySelector(`.tr-row-${idx}`);\n                const col = row.querySelectorAll(\"td\")[0];\n                const checkbox = col.querySelector(\"input\") as HTMLInputElement;\n                if (checkbox) {\n                  checkbox.click();\n                }\n              }\n            });\n          }, 200);\n        });\n        setDepositMode(\"edit\");\n      },\n    });\n\n  const { isLoading: loadingCashCollection, refetch: refetchCashCollection } =\n    useQuery({\n      queryKey: \"get-cash-collection\",\n      queryFn: async () =>\n        await myAxios.get(`/task/accounting/get-cash-collection`, {\n          headers: {\n            Authorization: `Bearer ${user?.accessToken}`,\n          },\n        }),\n      onSuccess: (data) => {\n        const response = data as any;\n        if (depositMode === \"edit\") {\n          setCashCollection((d: any) => {\n            const filteredData = d.filter((itm: any) => {\n              return (\n                refSlipCode.current &&\n                itm.SlipCode === refSlipCode.current.value\n              );\n            });\n            return [...response.data.cash, ...filteredData];\n          });\n        } else {\n          setCashCollection(response.data.cash);\n          wait(100).then(() => {\n            cashTable.current.setDataFormated(response.data.cash);\n          });\n        }\n      },\n    });\n  const { isLoading: loadingCheckCollection, refetch: refetchCheckCollection } =\n    useQuery({\n      queryKey: \"get-check-collection\",\n      queryFn: async () =>\n        await myAxios.get(`/task/accounting/get-check-collection`, {\n          headers: {\n            Authorization: `Bearer ${user?.accessToken}`,\n          },\n        }),\n      onSuccess: (data) => {\n        const response = data as any;\n        if (depositMode === \"edit\") {\n          setCashCollection((d: any) => {\n            const filteredData = d.filter((itm: any) => {\n              return (\n                refSlipCode.current &&\n                itm.SlipCode === refSlipCode.current.value\n              );\n            });\n            return [...response.data.check, ...filteredData];\n          });\n        } else {\n          setCheckCollection(response.data.check);\n          wait(100).then(() => {\n            checkTable.current.setDataFormated(response.data.check);\n          });\n        }\n      },\n    });\n  const handleOnSave = (e: any) => {\n    e.preventDefault();\n    if (\n      refBankAcctCode.current &&\n      refBankAcctCode.current?.value.length >= 200\n    ) {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: \"Bank Account is too long!\",\n        timer: 1500,\n      });\n    }\n    if (refBankAcctCode.current && refBankAcctCode.current?.value === \"\") {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: \"Please provide bank account\",\n        timer: 1500,\n      }).then((result) => {\n        wait(350).then(() => {\n          bankOpenModal(refBankAcctCode.current?.value);\n        });\n      });\n    }\n    if (selectedRows.length <= 0) {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: \"No selected collection to be deposit\",\n        timer: 1500,\n      });\n    }\n    if (TotalCashForDeposit.trim() !== total.trim()) {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: \"Cash breakdown is not balance\",\n        timer: 1500,\n      });\n    }\n    const state = {\n      depositSlip: refSlipCode.current?.value,\n      depositdate: refDateDepo.current?.value,\n      BankAcctCode: refBankAcctCode.current?.value,\n      BankAcctName: refBankAcctName.current?.value,\n      BankAcctCodeTag: refBankAcctCodeTag.current,\n      BankAcctNameTag: refBankAcctNameTag.current,\n      AcctID: refAcctID.current,\n      AcctName: refAcctName.current,\n      Classification: refClassification.current,\n      SubAccount: refSubAccount.current,\n      ShortName: refShortName.current,\n    };\n    if (depositMode === \"edit\") {\n      codeCondfirmationAlert({\n        isUpdate: true,\n        cb: (userCodeConfirmation) => {\n          updateDepositMutation({\n            ...state,\n            userCodeConfirmation,\n            selectedCollection: JSON.stringify(selectedRows),\n            tableRowsInputValue: JSON.stringify(tableRowsInputValue),\n          });\n        },\n      });\n    } else {\n      saveCondfirmationAlert({\n        isConfirm: () => {\n          addDepositMutation({\n            ...state,\n            selectedCollection: JSON.stringify(selectedRows),\n            tableRowsInputValue: JSON.stringify(tableRowsInputValue),\n          });\n        },\n      });\n    }\n  };\n  function resetRefs() {\n    if (refBankAcctCode.current) {\n      refBankAcctCode.current.value = \"\";\n    }\n    if (refBankAcctName.current) {\n      refBankAcctName.current.value = \"\";\n    }\n    if (bankDepositSearch.current) bankDepositSearch.current.value = \"\";\n    refBankAcctCodeTag.current = \"\";\n    refBankAcctNameTag.current = \"\";\n    refAcctID.current = \"\";\n    refAcctName.current = \"\";\n    refClassification.current = \"\";\n    refSubAccount.current = \"\";\n    refShortName.current = \"\";\n  }\n  function resetTables() {\n    cashTable.current.resetTable();\n    checkTable.current.resetTable();\n    selectedTable.current.resetTable();\n    collectionCheckTable.current.resetTable();\n  }\n  const {\n    UpwardTableModalSearch: DepositUpwardTableModalSearch,\n    openModal: depositOpenModal,\n    closeModal: depositCloseModal,\n  } = useUpwardTableModalSearchSafeMode({\n    size: \"medium\",\n    link: \"/task/accounting/search-deposit\",\n    column: [\n      { key: \"Date\", label: \"Date\", width: 150 },\n      { key: \"SlipCode\", label: \"Slip Code\", width: 170 },\n      {\n        key: \"BankAccount\",\n        label: \"Bank Account\",\n        width: 170,\n      },\n      {\n        key: \"AccountName\",\n        label: \"Account Name\",\n        flex: 1,\n      },\n    ],\n    getSelectedItem: async (rowItm: any, _: any, rowIdx: any, __: any) => {\n      if (rowItm) {\n        console.log(rowItm);\n        searchByDepositSlip({ SlipCode: rowItm[1] });\n        wait(100).then(() => {\n          if (refSlipCode.current) {\n            refSlipCode.current.value = rowItm[1];\n          }\n        });\n        depositCloseModal();\n      }\n    },\n  });\n  const {\n    UpwardTableModalSearch: BankUpwardTableModalSearch,\n    openModal: bankOpenModal,\n    closeModal: bankCloseModal,\n  } = useUpwardTableModalSearchSafeMode({\n    link: \"/task/accounting/getBanks\",\n    column: [\n      { key: \"Account_Type\", label: \"Account_Type\", width: 80 },\n      { key: \"Account_No\", label: \"Account_No\", width: 130 },\n      {\n        key: \"Account_Name\",\n        label: \"Account_Name\",\n        width: 200,\n      },\n      {\n        key: \"IDNo\",\n        label: \"\",\n        width: 0,\n        hide: true,\n      },\n      {\n        key: \"Desc\",\n        label: \"\",\n        width: 0,\n        hide: true,\n      },\n      {\n        key: \"Account_ID\",\n        label: \"\",\n        width: 0,\n        hide: true,\n      },\n      {\n        key: \"Short\",\n        label: \"\",\n        width: 0,\n        hide: true,\n      },\n      {\n        key: \"client_name\",\n        label: \"\",\n        width: 0,\n        hide: true,\n      },\n      {\n        key: \"Sub_Acct\",\n        label: \"\",\n        width: 0,\n        hide: true,\n      },\n      {\n        key: \"ShortName\",\n        label: \"\",\n        width: 0,\n        hide: true,\n      },\n    ],\n    getSelectedItem: async (rowItm: any, _: any, rowIdx: any, __: any) => {\n      if (rowItm) {\n        wait(100).then(() => {\n          if (refBankAcctCode.current)\n            refBankAcctCode.current.value = rowItm[1] ; // selectedRowData[0]?.Account_No;\n          if(refBankAcctName.current)\n            refBankAcctName.current.value = rowItm[2] ; // selectedRowData[0]?.Account_Name;\n\n          refBankAcctCodeTag.current = rowItm[3];// selectedRowData[0]?.IDNo;\n          refBankAcctNameTag.current = rowItm[4] // selectedRowData[0]?.Desc;\n          refAcctID.current = rowItm[5] //selectedRowData[0]?.Account_ID;\n          refAcctName.current = rowItm[6] //selectedRowData[0]?.Short;\n          refShortName.current = rowItm[7] //selectedRowData[0]?.client_name;\n          refClassification.current = rowItm[8] //selectedRowData[0]?.Sub_Acct;\n          refSubAccount.current = rowItm[9] //selectedRowData[0]?.ShortName;\n        });\n        bankCloseModal();\n      }\n    },\n  });\n\n  return (\n    <>\n      <PageHelmet title=\"Deposit\" />\n      <DepositUpwardTableModalSearch />\n      <BankUpwardTableModalSearch />\n      <div\n        style={{\n          display: \"flex\",\n          flexDirection: \"column\",\n          width: \"100%\",\n          height: \"100%\",\n          flex: 1,\n          padding: \"5px\",\n          background: \"#F1F1F1\",\n        }}\n      >\n        <div\n          style={{\n            display: \"flex\",\n            alignItems: \"center\",\n            columnGap: \"5px\",\n            marginBottom: \"10px\",\n          }}\n        >\n          <TextInput\n            label={{\n              title: \"Search: \",\n              style: {\n                fontSize: \"12px\",\n                fontWeight: \"bold\",\n                width: \"50px\",\n              },\n            }}\n            input={{\n              className: \"search-input-up-on-key-down\",\n              type: \"search\",\n              onKeyDown: (e) => {\n                if (e.key === \"Enter\" || e.key === \"NumpadEnter\") {\n                  e.preventDefault();\n                  depositOpenModal(inputSearchRef.current?.value);\n                }\n                if (e.key === \"ArrowDown\") {\n                  e.preventDefault();\n                  const datagridview = document.querySelector(\n                    \".grid-container\"\n                  ) as HTMLDivElement;\n                  datagridview.focus();\n                }\n              },\n              style: { width: \"500px\" },\n            }}\n            icon={<SearchIcon sx={{ fontSize: \"18px\" }} />}\n            onIconClick={(e) => {\n              e.preventDefault();\n              if (inputSearchRef.current)\n                depositOpenModal(inputSearchRef.current.value);\n            }}\n            inputRef={inputSearchRef}\n          />\n          {disabledFields && (\n            <Button\n              sx={{\n                height: \"22px\",\n                fontSize: \"11px\",\n              }}\n              variant=\"contained\"\n              startIcon={<AddIcon sx={{ width: 15, height: 15 }} />}\n              id=\"entry-header-save-button\"\n              onClick={() => {\n                setDepositMode(\"add\");\n              }}\n            >\n              New\n            </Button>\n          )}\n          <LoadingButton\n            sx={{\n              height: \"22px\",\n              fontSize: \"11px\",\n            }}\n            id=\"save-entry-header\"\n            color=\"primary\"\n            variant=\"contained\"\n            type=\"submit\"\n            onClick={handleOnSave}\n            disabled={disabledFields}\n            startIcon={<SaveIcon sx={{ width: 15, height: 15 }} />}\n            loading={updateDepositMutationLoading || addDepositMutationLoading}\n          >\n            Save\n          </LoadingButton>\n          {!disabledFields && (\n            <Button\n              sx={{\n                height: \"22px\",\n                fontSize: \"11px\",\n              }}\n              variant=\"contained\"\n              startIcon={<CloseIcon sx={{ width: 15, height: 15 }} />}\n              color=\"error\"\n              onClick={() => {\n                Swal.fire({\n                  title: \"Are you sure?\",\n                  text: \"You won't be able to revert this!\",\n                  icon: \"warning\",\n                  showCancelButton: true,\n                  confirmButtonColor: \"#3085d6\",\n                  cancelButtonColor: \"#d33\",\n                  confirmButtonText: \"Yes, cancel it!\",\n                }).then((result) => {\n                  if (result.isConfirmed) {\n                    wait(100).then(() => {\n                      resetTables();\n                      resetRefs();\n                      setTableRowsInputValue(defaultCashBreakDown);\n                      setSelectedRows([]);\n                      setCollectionForDeposit([]);\n                      setSelectedRowsCashIndex([]);\n                      setSelectedRowsCheckedIndex([]);\n\n                      refetchCashCollection();\n                      refetchCheckCollection();\n                      RefetchDepositSlipCode();\n                      setDepositMode(\"\");\n                      goTo(0);\n                    });\n                  }\n                });\n              }}\n            >\n              Cancel\n            </Button>\n          )}\n        </div>\n        <form\n          onKeyDown={(e) => {\n            if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n              e.preventDefault();\n              return;\n            }\n          }}\n          style={{\n            display: \"flex\",\n            gap: \"10px\",\n          }}\n        >\n          {LoadingDepositSlipCode ? (\n            \"Loading...\"\n          ) : (\n            <TextInput\n              label={{\n                title: \"Slip Code: \",\n                style: {\n                  fontSize: \"12px\",\n                  fontWeight: \"bold\",\n                  width: \"70px\",\n                },\n              }}\n              input={{\n                disabled: disabledFields,\n                className: \"search-input-up-on-key-down\",\n                type: \"text\",\n                style: { width: \"200px\" },\n              }}\n              inputRef={refSlipCode}\n              icon={<AutorenewIcon sx={{ fontSize: \"18px\" }} />}\n              onIconClick={(e) => {\n                e.preventDefault();\n                RefetchDepositSlipCode();\n              }}\n            />\n          )}\n          <TextInput\n            label={{\n              title: \"Deposit Date: \",\n              style: {\n                fontSize: \"12px\",\n                fontWeight: \"bold\",\n                width: \"80px\",\n              },\n            }}\n            input={{\n              defaultValue: format(new Date(), \"yyyy-MM-dd\"),\n              className: \"search-input-up-on-key-down\",\n              type: \"date\",\n              style: { width: \"200px\" },\n              disabled: disabledFields,\n            }}\n            inputRef={refDateDepo}\n          />\n          <TextInput\n            label={{\n              title: \"Bank Account: \",\n              style: {\n                fontSize: \"12px\",\n                fontWeight: \"bold\",\n                width: \"100px\",\n              },\n            }}\n            input={{\n              className: \"search-input-up-on-key-down\",\n              type: \"text\",\n              style: { width: \"200px\" },\n              onKeyDown: (e) => {\n                if (e.key === \"Enter\" || e.key === \"NumpadEnter\") {\n                  e.preventDefault();\n                  bankOpenModal(refBankAcctCode.current?.value);\n                }\n              },\n              disabled: disabledFields,\n            }}\n            inputRef={refBankAcctCode}\n            icon={\n              <AccountBalanceIcon\n                sx={{\n                  fontSize: \"18px\",\n                  color: disabledFields ? \"gray\" : \"black\",\n                }}\n              />\n            }\n            onIconClick={(e) => {\n              e.preventDefault();\n              bankOpenModal(refBankAcctCode.current?.value);\n            }}\n            disableIcon={disabledFields}\n          />\n\n          <TextInput\n            label={{\n              title: \"Account Name: \",\n              style: {\n                fontSize: \"12px\",\n                fontWeight: \"bold\",\n                width: \"100px\",\n              },\n            }}\n            input={{\n              className: \"search-input-up-on-key-down\",\n              type: \"text\",\n              style: { width: \"200px\" },\n              readOnly: true,\n              disabled: disabledFields,\n            }}\n            inputRef={refBankAcctName}\n          />\n          <button\n            // ref={submitButton}\n            style={{ display: \"none\" }}\n            type=\"submit\"\n          ></button>\n        </form>\n        <br />\n        <div>\n          <div style={{ display: \"flex\" }}>\n            {buttons.map((item, idx) => {\n              return (\n                <button\n                  key={idx}\n                  disabled={disabledFields}\n                  style={{\n                    border: \"1px solid #c0c0c0\",\n                    outline: \"none\",\n                    backgroundColor:\n                      currentStepIndex === idx\n                        ? \"#c0c0c0\"\n                        : \"rgba(51, 51, 51, 0.05)\",\n                    borderWidth: \"0\",\n                    color: \"black\",\n                    cursor: \"pointer\",\n                    display: \"inline-block\",\n                    fontFamily: `\"Haas Grot Text R Web\", \"Helvetica Neue\", Helvetica, Arial, sans-serif`,\n                    fontSize: \"14px\",\n                    fontWeight: \"500\",\n                    lineHeight: \"20px\",\n                    listStyle: \"none\",\n                    margin: \"0\",\n                    padding: \"10px 12px\",\n                    textAlign: \"center\",\n                    verticalAlign: \"baseline\",\n                    whiteSpace: \"nowrap\",\n                    userSelect: \"none\",\n                    touchAction: \"manipulation\",\n                    position: \"relative\",\n                    overflow: \"hidden\",\n                    borderRadius: \"0px\",\n                  }}\n                  onClick={() => {\n                    if (idx === 0) {\n                      refetchCashCollection();\n                    } else if (idx === 1) {\n                      refetchCheckCollection();\n                    }\n                    goTo(idx);\n                  }}\n                >\n                  <span\n                    style={{\n                      position: \"absolute\",\n                      top: 0,\n                      bottom: 0,\n                      left: 0,\n                      right: 0,\n                      background: \"rgba(206, 214, 211, 0.18)\",\n                      transition: \"all 200ms\",\n                      transform: slideAnimation(currentStepIndex, idx),\n                    }}\n                  ></span>\n                  {item.title}\n                </button>\n              );\n            })}\n          </div>\n        </div>\n        <DepositContext.Provider\n          value={{\n            cashCollection,\n            setCashCollection,\n            checkCollection,\n            setCheckCollection,\n            selectedRows,\n            setSelectedRows,\n            collectionForDeposit,\n            setCollectionForDeposit,\n            total,\n            setTotal,\n            TotalCashForDeposit,\n            tableRows: tableRowsInputValue,\n            setTableRowsInputValue,\n            updateTableRowsInput,\n            loadingCheckCollection,\n            loadingCashCollection,\n            selectedRowsCashIndex,\n            setSelectedRowsCashIndex,\n            selectedRowsCheckedIndex,\n            setSelectedRowsCheckedIndex,\n            cashTable,\n            checkTable,\n            selectedTable,\n            collectionCheckTable,\n            refetchCheckCollection,\n            refetchCashCollection,\n            disabledFields,\n          }}\n        >\n          <div\n            style={{\n              display: \"flex\",\n              flexDirection: \"column\",\n              flex: 1,\n            }}\n            id=\"concatiner\"\n          >\n            <div style={{ display: currentStepIndex === 0 ? \"block\" : \"none\" }}>\n              <CashCollection />\n            </div>\n            <div style={{ display: currentStepIndex === 1 ? \"block\" : \"none\" }}>\n              <CheckCollection />\n            </div>\n            <div style={{ display: currentStepIndex === 2 ? \"block\" : \"none\" }}>\n              <SelectedCollection />\n            </div>\n            <div style={{ display: currentStepIndex === 3 ? \"block\" : \"none\" }}>\n              <CollectionForDeposit />\n            </div>\n          </div>\n        </DepositContext.Provider>\n\n        {(loadingSearchByDepositSlip ||\n          updateDepositMutationLoading ||\n          addDepositMutationLoading) && (\n          <div className=\"loading-component\">\n            <div className=\"loader\"></div>\n          </div>\n        )}\n        <style>\n          {`\n            #upward-cutom-table tr td{\n            border-right:1px solid #f1f5f9 !important;\n            }\n\n            #upward-cutom-table tr:nth-child(odd) td {\n            background-color: #ffffff !important;\n            }\n            #upward-cutom-table tr:nth-child(even) td {\n            background-color: #f5f5f5 !important;\n            }\n            #upward-cutom-table tr.selected td {\n            background-color: #0076d7 !important;\n            color: #ffffff !important;\n            border-right:1px solid white !important;\n              border-bottom:1px solid white !important;\n            }\n\n            #upward-cutom-table tr.selected td input {\n            color: #ffffff !important;\n            }\n\n            `}\n        </style>\n      </div>\n    </>\n  );\n}\nfunction slideAnimation(activeButton: number, idx: number) {\n  if (activeButton === idx) {\n    return \"translateX(100%)\";\n  } else {\n    return \"translateX(0%)\";\n  }\n}\nfunction CashCollection() {\n  const { cashCollection, setSelectedRows, cashTable, disabledFields } =\n    useContext(DepositContext);\n\n  return (\n    <div\n      style={{\n        flex: 1,\n        marginTop: \"10px\",\n        width: \"100%\",\n        position: \"relative\",\n      }}\n    >\n      <DepositTable\n        disbaleTable={disabledFields}\n        ref={cashTable}\n        columns={cashColumns}\n        rows={cashCollection}\n        getSelectedItem={(\n          rowItm: any,\n          colItm: any,\n          rowIdx: any,\n          colIdx: any\n        ) => {\n          const rowSelected = rowItm;\n          setSelectedRows((d: any) => {\n            const newSelected: any = {\n              Deposit: \"Cash\",\n              Check_No: \"\",\n              Check_Date: \"\",\n              Bank: \"\",\n              Amount: rowSelected[2],\n              Name: rowSelected[3],\n              RowIndex: d.length + 1,\n              DRCode: rowSelected[4],\n              ORNo: rowSelected[0],\n              DRRemarks: \"\",\n              IDNo: rowSelected[5],\n              TempOR: rowSelected[7],\n              Short: rowSelected[6],\n            };\n\n            d = [...d, newSelected];\n            return d;\n          });\n        }}\n      />\n    </div>\n  );\n}\nfunction CheckCollection() {\n  const {\n    checkCollection,\n    setSelectedRows,\n    checkTable,\n    setCollectionForDeposit,\n    disabledFields,\n  } = useContext(DepositContext);\n  const checkColumns = [\n    {\n      key: \"OR_No\",\n      label: \"OR No.\",\n      width: 170,\n    },\n    {\n      key: \"OR_Date\",\n      label: \"OR Date\",\n      width: 170,\n    },\n    {\n      key: \"Check_No\",\n      label: \"Check No\",\n      width: 170,\n    },\n    {\n      key: \"Check_Date\",\n      label: \"Check Date\",\n      width: 170,\n    },\n    {\n      key: \"Amount\",\n      label: \"Amount\",\n      width: 160,\n      align: \"right\",\n      type: \"number\",\n    },\n    {\n      key: \"Bank_Branch\",\n      label: \"Bank/Branch\",\n      width: 300,\n    },\n    {\n      key: \"Client_Name\",\n      label: \"Client Name\",\n      width: 300,\n    },\n    {\n      key: \"Temp_OR\",\n      hide: true,\n    },\n    {\n      key: \"DRCode\",\n      hide: true,\n    },\n    {\n      key: \"DRRemarks\",\n      hide: true,\n    },\n    {\n      key: \"ID_No\",\n      hide: true,\n    },\n    {\n      key: \"Short\",\n      hide: true,\n    },\n    {\n      key: \"SlipCode\",\n      hide: true,\n    },\n  ];\n\n  return (\n    <div\n      style={{\n        marginTop: \"10px\",\n        width: \"100%\",\n        position: \"relative\",\n        flex: 1,\n      }}\n    >\n      <DepositTable\n        disbaleTable={disabledFields}\n        ref={checkTable}\n        columns={checkColumns}\n        rows={checkCollection}\n        getSelectedItem={(\n          rowItm: any,\n          colItm: any,\n          rowIdx: any,\n          colIdx: any\n        ) => {\n          const rowSelected = rowItm;\n          setSelectedRows((d: any) => {\n            const newSelected: any = {\n              Deposit: \"Check\", //0\n              Check_No: rowSelected[2], //1\n              Check_Date: rowSelected[3], //2\n              Bank: rowSelected[5], //3\n              Amount: rowSelected[4], //4\n              Name: rowSelected[6], //5\n              DRCode: rowSelected[8], //7\n              ORNo: rowSelected[0], //8\n              DRRemarks: rowSelected[9], //9\n              IDNo: rowSelected[10], //10\n              TempOR: rowSelected[7], //11\n              Short: rowSelected[11], //12\n            };\n            d = [...d, newSelected];\n            return d;\n          });\n\n          setCollectionForDeposit((d: any) => {\n            const newSelectedCheckForDeposit: any = {\n              Bank: rowSelected[5],\n              Check_No: rowSelected[2],\n              Amount: rowSelected[4],\n              TempOR: rowSelected[7],\n            };\n            d = [...d, newSelectedCheckForDeposit];\n            return d;\n          });\n        }}\n      />\n    </div>\n  );\n}\nfunction SelectedCollection() {\n  const {\n    setSelectedRows,\n    selectedRows,\n    selectedTable,\n    cashTable,\n    checkTable,\n    setCollectionForDeposit,\n    collectionForDeposit,\n    collectionCheckTable,\n  } = useContext(DepositContext);\n\n  const selectedCollectionColumns = [\n    { key: \"Deposit\", label: \"Deposit\", width: 170 },\n    { key: \"Check_No\", label: \"Check No\", width: 170 },\n    {\n      key: \"Check_Date\",\n      label: \"Check Date\",\n      width: 170,\n    },\n    { key: \"Bank\", label: \"Bank/Branch\", width: 200 },\n    {\n      key: \"Amount\",\n      label: \"Amount\",\n      width: 170,\n      type: \"number\",\n    },\n    { key: \"Name\", label: \"Client Name\", width: 400 },\n    // hide\n    { key: \"DRCode\", label: \"DRCode\", hide: true },\n    { key: \"ORNo\", label: \"ORNo\", hide: true },\n    { key: \"DRRemarks\", label: \"DRRemarks\", hide: true },\n    { key: \"IDNo\", label: \"IDNo\", hide: true },\n    { key: \"TempOR\", label: \"TempOR\", hide: true },\n    { key: \"Short\", label: \"Short\", hide: true },\n  ];\n\n  return (\n    <div\n      style={{\n        marginTop: \"10px\",\n        width: \"100%\",\n        position: \"relative\",\n        flex: 1,\n      }}\n    >\n      <DepositTableSelected\n        ref={selectedTable}\n        columns={selectedCollectionColumns}\n        rows={selectedRows}\n        getSelectedItem={(\n          rowItm: any,\n          colItm: any,\n          rowIdx: any,\n          colIdx: any\n        ) => {\n          const rowSelected = rowItm;\n          const selectedData = selectedTable.current.getData();\n\n          if (rowSelected[0] === \"Cash\") {\n            const cashData = cashTable.current.getData();\n            const getSelectedRow = cashTable.current.getSelectedRow();\n            const rowIdx = cashData.findIndex(\n              (itm: any) => itm[7] === rowSelected[10]\n            );\n            const index = getSelectedRow.indexOf(rowIdx);\n            if (index !== -1) {\n              getSelectedRow.splice(index, 1);\n            }\n            cashTable.current.setSelectedRow(getSelectedRow);\n          } else {\n            const cashData = checkTable.current.getData();\n            const getSelectedRow = checkTable.current.getSelectedRow();\n            const rowIdx = cashData.findIndex(\n              (itm: any) => itm[7] === rowSelected[10]\n            );\n            const index = getSelectedRow.indexOf(rowIdx);\n            if (index !== -1) {\n              getSelectedRow.splice(index, 1);\n            }\n            checkTable.current.setSelectedRow(getSelectedRow);\n          }\n\n          setSelectedRows((d: any) => {\n            if (d.length === 1 && d[0].TempOR === rowSelected[10]) {\n              return [];\n            }\n            return d.filter((itm: any) => itm.TempOR !== rowSelected[10]);\n          });\n\n          const newData = (d: any) => {\n            if (d.length === 1 && d[0].TempOR === rowSelected[10]) {\n              return [];\n            }\n            return d.filter((item: any) => item.TempOR !== rowSelected[10]);\n          };\n          const dd = newData(collectionForDeposit);\n          setCollectionForDeposit(dd);\n\n          const columns = collectionCheckTable.current?.getColumns();\n          collectionCheckTable.current?.setData(\n            dd.map((itm: any) => {\n              return columns.map((col: any) => itm[col.key]);\n            })\n          );\n\n          if (\n            selectedData.length === 1 &&\n            selectedData[0][10] === rowSelected[10]\n          ) {\n            return selectedTable.current.setData([]);\n          } else {\n            const newSelectedData = selectedData.filter((itm: any) => {\n              return itm[10] !== rowSelected[10];\n            });\n            selectedTable.current.setData(newSelectedData);\n          }\n        }}\n      />\n    </div>\n  );\n}\nfunction CollectionForDeposit() {\n  const {\n    collectionForDeposit,\n    tableRows,\n    total,\n    setTotal,\n    TotalCashForDeposit,\n    collectionCheckTable,\n  } = useContext(DepositContext);\n\n  useEffect(() => {\n    setTotal(\n      tableRows\n        ?.reduce((accumulator: any, currentValue: any) => {\n          return (\n            accumulator + parseFloat(currentValue.value3.replace(/,/g, \"\"))\n          );\n        }, 0.0)\n        .toLocaleString(\"en-US\", {\n          minimumFractionDigits: 2,\n          maximumFractionDigits: 2,\n        })\n    );\n  }, [tableRows, setTotal]);\n\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        gap: \"10px\",\n        height: \"auto \",\n      }}\n    >\n      <fieldset\n        style={{\n          flexDirection: \"column\",\n          gap: \"10px\",\n          border: \"1px solid #cbd5e1\",\n          borderRadius: \"5px\",\n          width: \"70%\",\n          position: \"relative\",\n        }}\n      >\n        <legend>Checks</legend>\n        <DepositTableSelected\n          isTableSelectable={false}\n          ref={collectionCheckTable}\n          width=\"100%\"\n          columns={[\n            {\n              key: \"Bank\",\n              label: \"Bank/Branch\",\n              width: 170,\n            },\n            {\n              key: \"Check_No\",\n              label: \"Check No\",\n              width: 170,\n            },\n            {\n              key: \"Amount\",\n              label: \"Amount\",\n              width: 300,\n              type: \"number\",\n            },\n          ]}\n          rows={collectionForDeposit}\n          getSelectedItem={(\n            rowItm: any,\n            colItm: any,\n            rowIdx: any,\n            colIdx: any\n          ) => {}}\n        />\n      </fieldset>\n      <fieldset\n        style={{\n          flexDirection: \"column\",\n          gap: \"10px\",\n          border: \"1px solid #cbd5e1\",\n          borderRadius: \"5px\",\n          alignSelf: \"flex-end\",\n          display: \"flex\",\n          width: \"30%\",\n        }}\n      >\n        <legend\n          style={{\n            color: total === TotalCashForDeposit ? \"green\" : \"#ec4899\",\n          }}\n        >\n          Cash ( {TotalCashForDeposit} )\n        </legend>\n        <table\n          id=\"cash-breakdown-table\"\n          style={{\n            border: \"2px solid black\",\n            borderCollapse: \"collapse\",\n            width: \"100%\",\n            background: \"white\",\n          }}\n        >\n          <thead>\n            <tr\n              style={{\n                borderBottom: \"2px solid black\",\n                fontSize: \"14px\",\n              }}\n            >\n              <th\n                style={{\n                  borderRight: \"2px solid black\",\n                }}\n              >\n                Denominations\n              </th>\n              <th\n                style={{\n                  borderRight: \"2px solid black\",\n                }}\n              >\n                QTY\n              </th>\n              <th\n                style={{\n                  borderRight: \"2px solid black\",\n                }}\n              >\n                Amount\n              </th>\n            </tr>\n          </thead>\n          <tbody>\n            {tableRows?.map((items: any, idx: number) => {\n              return (\n                <TrComponent\n                  key={idx}\n                  value1={items.value1}\n                  value2={items.value2}\n                  value3={items.value3}\n                  idx={idx}\n                />\n              );\n            })}\n          </tbody>\n          <tfoot>\n            <tr\n              style={{\n                borderTop: \"2px solid black\",\n                height: \"auto\",\n              }}\n            >\n              <td colSpan={3}>\n                <div\n                  style={{\n                    display: \"flex\",\n                    justifyContent: \"flex-end\",\n                  }}\n                >\n                  <div\n                    style={{\n                      display: \"flex\",\n                      alignItems: \"center\",\n                      width: \"100%\",\n                      textAlign: \"right\",\n                      justifyContent: \"flex-end\",\n                      columnGap: \"5px\",\n                    }}\n                  >\n                    <span style={{ fontSize: \"12px\", fontWeight: \"bold\" }}>\n                      Total Cash Deposit:\n                    </span>\n                    <input\n                      style={{\n                        fontWeight: \"bold\",\n                        border: \"1px solid black\",\n                        textAlign: \"right\",\n                        fontSize: \"13px\",\n                        width: \"180px\",\n                      }}\n                      value={total}\n                      onChange={(e) => {\n                        setTotal(e.target.value);\n                      }}\n                      readOnly={true}\n                    />\n                  </div>\n                </div>\n              </td>\n            </tr>\n          </tfoot>\n        </table>\n      </fieldset>\n    </div>\n  );\n}\nfunction TrComponent({ value1, value2, value3, idx }: any) {\n  const { updateTableRowsInput } = useContext(DepositContext);\n\n  const [input1, setInput1] = useState(value1);\n  const [input2, setInput2] = useState(value2);\n  const [input3, setInput3] = useState(value3);\n  const InputStyle: CSSProperties = {\n    textAlign: \"right\",\n    height: \"18px\",\n    borderRight: \"none\",\n    borderLeft: \"none\",\n    borderTop: \"none\",\n    outline: \"none\",\n    borderBottom: \"1px solid #cbd5e1\",\n    padding: \"0 8px\",\n    width: \"100%\",\n    fontSize: \"13px\",\n    margin: \"0 !important\",\n  };\n\n  return (\n    <tr>\n      <td\n        style={{\n          borderRight: \"2px solid black\",\n          margin: \"0\",\n          padding: \"0\",\n          height: \"15px\",\n        }}\n      >\n        <input\n          disabled={true}\n          className={`row-${idx} col-0`}\n          type=\"text\"\n          style={InputStyle}\n          value={input1}\n          onChange={(e) => setInput1(e.target.value)}\n          readOnly={true}\n        />\n      </td>\n      <td\n        style={{\n          borderRight: \"2px solid black\",\n          overflow: \"hidden\",\n          margin: 0,\n          padding: \"0 !important\",\n          height: \"15px\",\n        }}\n      >\n        <input\n          className={`row-${idx} col-1`}\n          style={InputStyle}\n          value={input2}\n          onChange={(e) => {\n            let input1Value = input1;\n            setInput2(e.target.value);\n            if (input1.includes(\",\")) {\n              input1Value = input1.replace(/,/g, \"\").toString();\n            }\n            const valueFor3 = (\n              parseFloat(input1Value) *\n              (isNaN(parseInt(e.target.value)) ? 0 : parseInt(e.target.value))\n            ).toLocaleString(\"en-US\", {\n              minimumFractionDigits: 2,\n              maximumFractionDigits: 2,\n            });\n            setInput3(valueFor3);\n\n            updateTableRowsInput(\n              {\n                value1,\n                value2: e.target.value,\n                value3: valueFor3,\n              },\n              idx\n            );\n          }}\n          onKeyDown={(e) => {\n            if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n              e.preventDefault();\n              const nextInput = document.querySelector(\n                `#cash-breakdown-table td .row-${idx + 1}.col-1`\n              ) as HTMLInputElement;\n              if (nextInput) {\n                nextInput.focus();\n              }\n            }\n          }}\n        />\n      </td>\n      <td\n        style={{\n          borderRight: \"2px solid black\",\n          margin: \"0\",\n          padding: \"0 !important\",\n          height: \"15px\",\n        }}\n      >\n        <input\n          disabled={true}\n          className={`row-${idx} col-2`}\n          type=\"text\"\n          style={InputStyle}\n          value={input3}\n          onChange={(e) => setInput3(e.target.value)}\n          readOnly={true}\n        />\n      </td>\n    </tr>\n  );\n}\nconst DepositTable = forwardRef(\n  (\n    {\n      columns,\n      rows,\n      height = \"400px\",\n      width = \"calc(100vw - 40px)\",\n      getSelectedItem,\n      disbaleTable = false,\n    }: any,\n    ref\n  ) => {\n    const parentElementRef = useRef<any>(null);\n    const [data, setData] = useState([]);\n    const [column, setColumn] = useState([]);\n    const [selectedRow, setSelectedRow] = useState<Array<any>>([]);\n    const [selectedRowIndex, setSelectedRowIndex] = useState<any>(0);\n\n    const totalRowWidth = column.reduce((a: any, b: any) => a + b.width, 0);\n\n    useEffect(() => {\n      if (columns.length > 0) {\n        setColumn(columns.filter((itm: any) => !itm.hide));\n      }\n    }, [columns]);\n\n    useEffect(() => {\n      if (rows.length > 0) {\n        setData(\n          rows.map((itm: any) => {\n            return columns.map((col: any) => itm[col.key]);\n          })\n        );\n      }\n    }, [rows, columns]);\n\n    useImperativeHandle(ref, () => ({\n      getData: () => {\n        return data;\n      },\n      setData: (newData: any) => {\n        setData(newData);\n      },\n      setSelectedRow: (rowIdx: any) => {\n        setSelectedRow(rowIdx);\n      },\n      getSelectedRow: (rowIdx: any) => {\n        return selectedRow;\n      },\n      getColumns: () => {\n        return columns;\n      },\n      resetTable: () => {\n        setData([]);\n        setSelectedRow([]);\n      },\n      setDataFormated: (newData: any) => {\n        setData(\n          newData.map((itm: any) => {\n            return columns.map((col: any) => itm[col.key]);\n          })\n        );\n      },\n      parentElement: () => {\n        return parentElementRef.current;\n      },\n    }));\n\n    return (\n      <Fragment>\n        <div\n          ref={parentElementRef}\n          style={{\n            width,\n            height,\n            overflow: \"auto\",\n            position: \"relative\",\n            pointerEvents: disbaleTable ? \"none\" : \"auto\",\n            border: disbaleTable ? \"2px solid #8c8f8e\" : \"2px solid #c0c0c0\",\n            boxShadow: `inset -2px -2px 0 #ffffff, \n                        inset 2px 2px 0 #808080`,\n          }}\n        >\n          <div\n            style={{\n              position: \"absolute\",\n              width: `${totalRowWidth}px`,\n              height: \"auto\",\n            }}\n          >\n            <table\n              id=\"upward-cutom-table\"\n              style={{\n                borderCollapse: \"collapse\",\n                width: \"100%\",\n                position: \"relative\",\n              }}\n            >\n              <thead>\n                <tr>\n                  <th\n                    style={{\n                      width: \"30px\",\n                      border: \"none\",\n                      position: \"sticky\",\n                      top: 0,\n                      zIndex: 1,\n                      background: \"#f0f0f0\",\n                    }}\n                  ></th>\n                  {column.map((colItm: any, idx: number) => {\n                    return (\n                      <th\n                        key={idx}\n                        style={{\n                          width: colItm.width,\n                          borderRight: \"1px solid #e2e8f0\",\n                          position: \"sticky\",\n                          top: 0,\n                          zIndex: 1,\n                          background: \"#f0f0f0\",\n                          fontSize: \"12px\",\n                          padding: \"0px 5px\",\n                          textAlign:\n                            colItm.type === \"number\" ? \"center\" : \"left\",\n                        }}\n                      >\n                        {colItm.label}\n                      </th>\n                    );\n                  })}\n                </tr>\n              </thead>\n              <tbody>\n                {data?.map((rowItm: any, rowIdx: number) => {\n                  return (\n                    <tr\n                      key={rowIdx}\n                      className={`tr-row-${rowIdx} row ${\n                        selectedRow.includes(rowIdx) ||\n                        selectedRowIndex === rowIdx\n                          ? \"selected\"\n                          : \"\"\n                      }`}\n                    >\n                      <td\n                        style={{\n                          position: \"relative\",\n                          border: \"none\",\n                          cursor: \"pointer\",\n                          padding: 0,\n                          margin: 0,\n                          background: selectedRow.includes(rowIdx)\n                            ? \"#bae6fd\"\n                            : \"\",\n                        }}\n                      >\n                        <div\n                          style={{\n                            width: \"18px\",\n                            height: \"18px\",\n                            position: \"relative\",\n                            display: \"flex\",\n                            alignItems: \"center\",\n                            justifyContent: \"center\",\n                          }}\n                        >\n                          <input\n                            className=\"check-input\"\n                            style={{\n                              cursor: \"pointer\",\n                              background: \"transparent\",\n                            }}\n                            readOnly={true}\n                            type=\"checkbox\"\n                            checked={selectedRow.includes(rowIdx)}\n                            onClick={() => {\n                              if (selectedRow.includes(rowIdx)) {\n                                return;\n                              }\n\n                              setSelectedRow((d: any) => {\n                                return [...d, rowIdx];\n                              });\n\n                              if (getSelectedItem) {\n                                getSelectedItem(rowItm, null, rowIdx, null);\n                              }\n                            }}\n                          />\n                        </div>\n                      </td>\n\n                      {column.map((colItm: any, colIdx: number) => {\n                        return (\n                          <td\n                            onDoubleClick={() => {\n                              if (selectedRow.includes(rowIdx)) {\n                                return;\n                              }\n\n                              setSelectedRow((d: any) => {\n                                return [...d, rowIdx];\n                              });\n                              if (getSelectedItem) {\n                                getSelectedItem(rowItm, colItm, rowIdx, colIdx);\n                              }\n                            }}\n                            onClick={() => {\n                              setSelectedRowIndex(rowIdx);\n                            }}\n                            key={colIdx}\n                            style={{\n                              border: \"none\",\n                              fontSize: \"12px\",\n                              padding: \"0px 5px\",\n                              cursor: \"pointer\",\n                              height: \"20px\",\n                              userSelect: \"none\",\n                            }}\n                          >\n                            {\n                              <input\n                                readOnly={true}\n                                value={rowItm[colIdx]}\n                                style={{\n                                  width: colItm.width,\n                                  pointerEvents: \"none\",\n                                  border: \"none\",\n                                  background: \"transparent\",\n                                  userSelect: \"none\",\n                                  height: \"100%\",\n                                  textAlign:\n                                    colItm.type === \"number\" ? \"right\" : \"left\",\n                                }}\n                              />\n                            }\n                          </td>\n                        );\n                      })}\n                    </tr>\n                  );\n                })}\n              </tbody>\n            </table>\n          </div>\n        </div>\n      </Fragment>\n    );\n  }\n);\nconst DepositTableSelected = forwardRef(\n  (\n    {\n      columns,\n      rows,\n      height = \"400px\",\n      getSelectedItem,\n      disbaleTable = false,\n      isTableSelectable = true,\n    }: any,\n    ref\n  ) => {\n    const parentElementRef = useRef<any>(null);\n    const [data, setData] = useState([]);\n    const [column, setColumn] = useState([]);\n    const [selectedRow, setSelectedRow] = useState<any>(0);\n    const totalRowWidth = column.reduce((a: any, b: any) => a + b.width, 0);\n\n    useEffect(() => {\n      if (columns.length > 0) {\n        setColumn(columns.filter((itm: any) => !itm.hide));\n      }\n    }, [columns]);\n\n    useEffect(() => {\n      if (rows.length > 0) {\n        setData(\n          rows.map((itm: any) => {\n            return columns.map((col: any) => itm[col.key]);\n          })\n        );\n      }\n    }, [rows, columns]);\n\n    useImperativeHandle(ref, () => ({\n      getData: () => {\n        return data;\n      },\n      setData: (newData: any) => {\n        setData(newData);\n      },\n      getColumns: () => {\n        return columns;\n      },\n      resetTable: () => {\n        setData([]);\n        setSelectedRow(0);\n      },\n      setDataFormated: (newData: any) => {\n        setData(\n          newData.map((itm: any) => {\n            return columns.map((col: any) => itm[col.key]);\n          })\n        );\n      },\n    }));\n\n    return (\n      <Fragment>\n        <div\n          ref={parentElementRef}\n          style={{\n            width: \"100%\",\n            height,\n            overflow: \"auto\",\n            position: \"relative\",\n            pointerEvents: disbaleTable ? \"none\" : \"auto\",\n            border: disbaleTable ? \"2px solid #8c8f8e\" : \"2px solid #c0c0c0\",\n            boxShadow: `inset -2px -2px 0 #ffffff, \n                      inset 2px 2px 0 #808080`,\n            background: \"#dcdcdc\",\n          }}\n        >\n          <div\n            style={{\n              position: \"absolute\",\n              width: `${totalRowWidth}px`,\n              height: \"auto\",\n            }}\n          >\n            <table\n              id=\"upward-cutom-table\"\n              style={{\n                borderCollapse: \"collapse\",\n                width: \"100%\",\n                position: \"relative\",\n              }}\n            >\n              <thead>\n                <tr\n                  style={{\n                    background: \"#f0f0f0\",\n                  }}\n                >\n                  <th\n                    style={{\n                      width: \"30px\",\n                      border: \"none\",\n                      position: \"sticky\",\n                      top: 0,\n                      zIndex: 1,\n                      background: \"#f0f0f0\",\n                    }}\n                  ></th>\n                  {column.map((colItm: any, idx: number) => {\n                    return (\n                      <th\n                        key={idx}\n                        style={{\n                          width: colItm.width,\n                          borderRight: \"1px solid #e2e8f0\",\n                          position: \"sticky\",\n                          top: 0,\n                          zIndex: 1,\n                          fontSize: \"12px\",\n                          padding: \"0px 5px\",\n                          background: \"#f0f0f0\",\n                          textAlign:\n                            colItm.type === \"number\" ? \"center\" : \"left\",\n                        }}\n                      >\n                        {colItm.label}\n                      </th>\n                    );\n                  })}\n                </tr>\n              </thead>\n              <tbody>\n                {data?.map((rowItm: any, rowIdx: number) => {\n                  return (\n                    <tr\n                      key={rowIdx}\n                      className={`tr-row-${rowIdx} row ${\n                        selectedRow === rowIdx ? \"selected\" : \"\"\n                      }`}\n                    >\n                      <td\n                        style={{\n                          position: \"relative\",\n                          border: \"none\",\n                          cursor: \"pointer\",\n                          background: selectedRow === rowIdx ? \"#0076d\" : \"\",\n                          padding: 0,\n                          margin: 0,\n                        }}\n                      >\n                        <div\n                          style={{\n                            width: \"18px\",\n                            height: \"18px\",\n                            position: \"relative\",\n                            display: \"flex\",\n                            alignItems: \"center\",\n                            justifyContent: \"center\",\n                          }}\n                        >\n                          <input\n                            style={{\n                              cursor: \"pointer\",\n                              margin: \"0px !important\",\n                              position: \"absolute\",\n                            }}\n                            readOnly={true}\n                            checked={false}\n                            type=\"checkbox\"\n                            onClick={() => {\n                              if (!isTableSelectable) {\n                                return;\n                              }\n\n                              if (getSelectedItem) {\n                                getSelectedItem(rowItm, null, rowIdx, null);\n                              }\n                              setSelectedRow(null);\n                            }}\n                          />\n                        </div>\n                      </td>\n\n                      {column.map((colItm: any, colIdx: number) => {\n                        return (\n                          <td\n                            onDoubleClick={() => {\n                              if (!isTableSelectable) {\n                                return;\n                              }\n                              if (getSelectedItem) {\n                                getSelectedItem(rowItm, null, rowIdx, null);\n                              }\n                              setSelectedRow(null);\n                            }}\n                            onClick={() => {\n                              setSelectedRow(rowIdx);\n                            }}\n                            key={colIdx}\n                            style={{\n                              border: \"none\",\n                              fontSize: \"12px\",\n                              padding: \"0px 5px\",\n                              cursor: \"pointer\",\n                              height: \"20px\",\n                              userSelect: \"none\",\n                            }}\n                          >\n                            {\n                              <input\n                                readOnly={true}\n                                value={rowItm[colIdx]}\n                                style={{\n                                  width: colItm.width,\n                                  pointerEvents: \"none\",\n                                  border: \"none\",\n                                  background: \"transparent\",\n                                  userSelect: \"none\",\n                                  height: \"100%\",\n                                  textAlign:\n                                    colItm.type === \"number\" ? \"right\" : \"left\",\n                                }}\n                              />\n                            }\n                          </td>\n                        );\n                      })}\n                    </tr>\n                  );\n                })}\n              </tbody>\n            </table>\n          </div>\n        </div>\n      </Fragment>\n    );\n  }\n);\nfunction useMultipleComponent(steps: any) {\n  const [currentStepIndex, setCurrentStepIndex] = useState(0);\n\n  function goTo(index: number) {\n    // Ensure the index is within bounds\n    if (index >= 0 && index < steps.length) {\n      setCurrentStepIndex(index);\n    }\n  }\n\n  return {\n    goTo,\n    currentStepIndex,\n  };\n}\n","import Swal from \"sweetalert2\";\n\nexport function codeCondfirmationAlert(props: {\n  cb: (userCodeConfirmation: string) => void;\n  isUpdate: boolean;\n  isConfirm?: () => void;\n  isDeclined?: () => void;\n  text?: string;\n}) {\n  Swal.fire({\n    title: `Are you sure!`,\n    html: props?.text\n      ? props?.text\n      : props.isUpdate\n      ? `Are you sure you want to make this change?`\n      : \"Are you sure you want to delete this?\",\n    icon: \"warning\",\n    input: \"text\",\n    inputAttributes: {\n      autocapitalize: \"off\",\n    },\n    showCancelButton: true,\n    confirmButtonText: \"Save\",\n    confirmButtonColor: \"green\",\n    showLoaderOnConfirm: true,\n    preConfirm: async (userCodeConfirmation) => {\n      try {\n        props.cb(userCodeConfirmation);\n      } catch (error) {\n        Swal.showValidationMessage(`\n            Request failed: ${error}\n          `);\n      }\n    },\n    allowOutsideClick: () => !Swal.isLoading(),\n  }).then((result) => {\n    if (result.isConfirmed) {\n      if (props.isConfirm) {\n        return props.isConfirm();\n      }\n    }\n    if (props.isDeclined) {\n      props.isDeclined();\n    }\n  });\n}\n\nexport function saveCondfirmationAlert(props: {\n  isConfirm?: () => void;\n  isDeclined?: () => void;\n  text?: string;\n}) {\n  Swal.fire({\n    title: \"Are you sure?\",\n    text: props?.text ? props?.text : \"Do you want to proceed with saving?\",\n    icon: \"warning\",\n    showCancelButton: true,\n    confirmButtonColor: \"#3085d6\",\n    cancelButtonColor: \"#d33\",\n    confirmButtonText: \"Yes, save it!\",\n  }).then((result) => {\n    if (result.isConfirmed) {\n      if (props.isConfirm) {\n        return props.isConfirm();\n      }\n    }\n    if (props.isDeclined) {\n      props.isDeclined();\n    }\n  });\n}\n","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M4 10h3v7H4zm6.5 0h3v7h-3zM2 19h20v3H2zm15-9h3v7h-3zm-5-9L2 6v2h20V6z\"\n}), 'AccountBalance');\nexports.default = _default;","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\"\n}), 'Add');\nexports.default = _default;","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 6v3l4-4-4-4v3c-4.42 0-8 3.58-8 8 0 1.57.46 3.03 1.24 4.26L6.7 14.8c-.45-.83-.7-1.79-.7-2.8 0-3.31 2.69-6 6-6zm6.76 1.74L17.3 9.2c.44.84.7 1.79.7 2.8 0 3.31-2.69 6-6 6v-3l-4 4 4 4v-3c4.42 0 8-3.58 8-8 0-1.57-.46-3.03-1.24-4.26z\"\n}), 'Autorenew');\nexports.default = _default;","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19 6.41 17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n}), 'Close');\nexports.default = _default;","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M17 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V7l-4-4zm-5 16c-1.66 0-3-1.34-3-3s1.34-3 3-3 3 1.34 3 3-1.34 3-3 3zm3-10H5V5h10v4z\"\n}), 'Save');\nexports.default = _default;","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z\"\n}), 'Search');\nexports.default = _default;","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bigint: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is');\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n"],"names":["_ref","_ref$title","title","_jsxs","Helmet","children","_jsx","rel","type","href","concat","process","defaultCashBreakDown","value1","value2","value3","buttons","index","cashColumns","key","label","width","cellClassName","flex","hide","reducer","state","action","_objectSpread","_defineProperty","field","value","DepositContext","createContext","cashCollection","setCashCollection","checkCollection","setCheckCollection","selectedCollection","setSelectedCollection","collectionForDeposit","setCollectionForDeposit","tableRows","updateTableRowsInput","LoadingCashTable","LoadingCheckTable","setTotal","total","TotalCashForDeposit","loadingSearchByDepositSlip","Deposit","_queryFn","_mutationFn","_mutationFn2","_mutationFn3","_queryFn2","_queryFn3","_getSelectedItem","_getSelectedItem2","cashTable","useRef","checkTable","selectedTable","collectionCheckTable","inputSearchRef","refSlipCode","refDateDepo","refBankAcctCode","refBankAcctName","bankDepositSearch","_refTempSlipCode","refBankAcctCodeTag","refBankAcctNameTag","refAcctID","refAcctName","refClassification","refSubAccount","refShortName","_useContext","useContext","AuthContext","myAxios","user","_useMultipleComponent","steps","_useState39","useState","_useState40","_slicedToArray","currentStepIndex","setCurrentStepIndex","goTo","length","useMultipleComponent","_useState","_useState2","_useState3","_useState4","_useState5","_useState6","selectedRows","setSelectedRows","_useState7","_useState8","_useState9","_useState10","tableRowsInputValue","setTableRowsInputValue","_useState11","_useState12","selectedRowsCashIndex","setSelectedRowsCashIndex","_useState13","_useState14","selectedRowsCheckedIndex","setSelectedRowsCheckedIndex","_useState15","_useState16","depositMode","setDepositMode","_useState17","_useState18","disabledFields","reduce","accumulator","currentValue","Check_No","parseFloat","Amount","replace","toLocaleString","minimumFractionDigits","maximumFractionDigits","_useQuery","useQuery","queryKey","queryFn","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","get","headers","Authorization","accessToken","abrupt","sent","stop","apply","arguments","refetchOnWindowFocus","onSuccess","data","response","wait","then","current","slipcode","collectionID","LoadingDepositSlipCode","isLoading","RefetchDepositSlipCode","refetch","_useMutation","useMutation","mutationKey","mutationFn","_x","_callee2","variables","_context2","post","res","resposnse","success","resetTables","resetRefs","refetchCashCollection","refetchCheckCollection","Swal","position","icon","message","timer","addDepositMutation","mutate","addDepositMutationLoading","_useMutation2","_x2","_callee3","_context3","updateDepositMutation","updateDepositMutationLoading","_useMutation3","_x3","_callee4","_context4","obj","cash","check","checks","cash_breakdown","resetTable","format","Date","refDate","client_name","setDataFormated","setTimeout","forEach","d","idx","SlipCode","checkbox","parentElement","querySelector","querySelectorAll","click","searchByDepositSlip","_useQuery2","_callee5","_context5","filteredData","filter","itm","_toConsumableArray","loadingCashCollection","_useQuery3","_callee6","_context6","loadingCheckCollection","_useUpwardTableModalS","useUpwardTableModalSearchSafeMode","size","link","column","getSelectedItem","_x4","_x5","_x6","_x7","_callee7","rowItm","_","rowIdx","__","_context7","console","log","depositCloseModal","DepositUpwardTableModalSearch","UpwardTableModalSearch","depositOpenModal","openModal","closeModal","_useUpwardTableModalS2","_x8","_x9","_x10","_x11","_callee8","_context8","bankCloseModal","BankUpwardTableModalSearch","bankOpenModal","_Fragment","PageHelmet","style","display","flexDirection","height","padding","background","alignItems","columnGap","marginBottom","TextInput","fontSize","fontWeight","input","className","onKeyDown","e","_inputSearchRef$curre","preventDefault","document","focus","SearchIcon","sx","onIconClick","inputRef","Button","variant","startIcon","AddIcon","id","onClick","LoadingButton","color","_refBankAcctCode$curr","_refBankAcctCode$curr2","_refSlipCode$current","_refDateDepo$current","_refBankAcctCode$curr4","_refBankAcctName$curr","result","_refBankAcctCode$curr3","trim","depositSlip","depositdate","BankAcctCode","BankAcctName","BankAcctCodeTag","BankAcctNameTag","AcctID","AcctName","Classification","SubAccount","ShortName","codeCondfirmationAlert","isUpdate","cb","userCodeConfirmation","JSON","stringify","saveCondfirmationAlert","isConfirm","disabled","SaveIcon","loading","CloseIcon","text","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","isConfirmed","code","gap","AutorenewIcon","defaultValue","_refBankAcctCode$curr5","AccountBalanceIcon","_refBankAcctCode$curr6","disableIcon","readOnly","map","item","border","outline","backgroundColor","borderWidth","cursor","fontFamily","lineHeight","listStyle","margin","textAlign","verticalAlign","whiteSpace","userSelect","touchAction","overflow","borderRadius","top","bottom","left","right","transition","transform","slideAnimation","Provider","fields","CashCollection","CheckCollection","SelectedCollection","CollectionForDeposit","activeButton","_useContext2","marginTop","DepositTable","disbaleTable","ref","columns","rows","colItm","colIdx","rowSelected","newSelected","Check_Date","Bank","Name","RowIndex","DRCode","ORNo","DRRemarks","IDNo","TempOR","Short","_useContext3","align","newSelectedCheckForDeposit","_useContext4","DepositTableSelected","_collectionCheckTable","_collectionCheckTable2","selectedData","getData","cashData","getSelectedRow","findIndex","indexOf","splice","setSelectedRow","dd","getColumns","setData","col","newSelectedData","_useContext5","useEffect","isTableSelectable","alignSelf","borderCollapse","borderBottom","borderRight","items","TrComponent","borderTop","colSpan","justifyContent","onChange","target","_useState19","_useState20","input1","setInput1","_useState21","_useState22","input2","setInput2","_useState23","_useState24","input3","setInput3","InputStyle","borderLeft","input1Value","includes","toString","valueFor3","isNaN","parseInt","nextInput","forwardRef","_ref2","_ref2$height","_ref2$width","_ref2$disbaleTable","parentElementRef","_useState25","_useState26","_useState27","_useState28","setColumn","_useState29","_useState30","selectedRow","_useState31","_useState32","selectedRowIndex","setSelectedRowIndex","totalRowWidth","a","b","useImperativeHandle","newData","Fragment","pointerEvents","boxShadow","zIndex","checked","onDoubleClick","_ref3","_ref3$height","_ref3$disbaleTable","_ref3$isTableSelectab","_useState33","_useState34","_useState35","_useState36","_useState37","_useState38","props","_preConfirm","html","inputAttributes","autocapitalize","showLoaderOnConfirm","preConfirm","error","allowOutsideClick","isDeclined","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","ReactPropTypesSecret","emptyFunction","emptyFunctionWithReset","resetWarningCache","module","shim","propName","componentName","location","propFullName","secret","err","Error","name","getShim","isRequired","ReactPropTypes","array","bigint","bool","func","number","object","string","symbol","any","arrayOf","element","elementType","instanceOf","node","objectOf","oneOf","oneOfType","shape","exact","checkPropTypes","PropTypes"],"sourceRoot":""}