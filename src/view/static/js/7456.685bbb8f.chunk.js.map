{"version":3,"file":"static/js/7456.685bbb8f.chunk.js","mappings":"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","sources":["components/DatePicker.tsx","components/PrintPreview/dataCore.ts","feautures/Admin/Reports/Accounting/ProductionBook.tsx","../node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js"],"sourcesContent":["import { LocalizationProvider } from \"@mui/x-date-pickers/LocalizationProvider\";\nimport { AdapterDateFns } from \"@mui/x-date-pickers/AdapterDateFns\";\nimport { DatePicker } from \"@mui/x-date-pickers\";\nexport default function CustomDatePicker({\n  label,\n  name,\n  onChange,\n  value,\n  onKeyDown,\n  inputRef,\n  datePickerRef,\n  fullWidth,\n  textField,\n  minWidth = \"200px\",\n  ...rest\n}: any) {\n  return (\n    <LocalizationProvider dateAdapter={AdapterDateFns}>\n      <DatePicker\n      floatingLabelStyle={{color: \"black\" }}\n        value={value}\n        onChange={onChange}\n        ref={datePickerRef}\n        slotProps={{\n          textField: {\n            size: \"small\",\n            label,\n            name,\n            onKeyDown,\n            inputRef: inputRef,\n            fullWidth,\n\n            ...textField,\n          },\n        }}\n        InputLabelProps={{\n          sx: {\n            color: \"black\",\n          },\n        }}\n        sx={{\n          minWidth,\n          fieldset: { borderColor: \"black\" },\n          \".MuiFormLabel-root\": { fontSize: \"14px\" },\n          \".MuiFormLabel-root[data-shrink=false]\": {\n            top: \"-5px\",\n          },\n        }}\n        {...rest}\n      />\n    </LocalizationProvider>\n  );\n}\n","export function getTableCellHeight(\n  tempCell: HTMLTableCellElement,\n  content: string,\n  columnWidth: string,\n  contentElment: Element,\n  tempTable: HTMLTableElement\n) {\n  tempCell.style.width = columnWidth;\n  tempCell.textContent = content;\n  contentElment.appendChild(tempTable);\n}\n\nexport function defaultArrangeDataCore({\n  data,\n  column,\n  beforeArrangeData,\n  adjustMaxHeight,\n  fontSize = \"11px\",\n  summaryHeight = 0,\n}: {\n  data: any;\n  column: Array<any>;\n  beforeArrangeData: (itm: any) => any;\n  adjustMaxHeight: number;\n  fontSize: string;\n  summaryHeight?: number;\n}) {\n  const newData: Array<any> = [];\n  let trHeight = 0;\n  let temp: Array<any> = [];\n  const contentElment = document.querySelector(\".content\") as Element;\n  const maxHeight =\n    contentElment.getBoundingClientRect().height - adjustMaxHeight;\n\n  data.forEach((itm: any, idx: number) => {\n    itm = beforeArrangeData(itm);\n    const contentElment = document.querySelector(\".content\") as Element;\n    const tempTable = document.createElement(\"table\");\n    const tempRow = tempTable.insertRow();\n\n    if (itm.summaryReport) {\n      if (maxHeight - trHeight <= summaryHeight + 20) {\n        trHeight += maxHeight - trHeight;\n      }\n    }\n    column.forEach((col) => {\n      const tempCell = tempRow.insertCell();\n      tempTable.style.visibility = \"hidden\";\n      tempTable.style.width = `100%`;\n      tempTable.style.fontSize = fontSize;\n\n      getTableCellHeight(\n        tempCell,\n        itm[col.datakey],\n        col.width,\n        contentElment,\n        tempTable\n      );\n    });\n    trHeight += tempRow.getBoundingClientRect().height;\n    contentElment.removeChild(tempTable);\n    temp.push(itm);\n    if (\n      trHeight >= maxHeight ||\n      (idx === data.length - 1 && trHeight < maxHeight)\n    ) {\n      newData.push(temp);\n      trHeight = 0;\n      temp = [];\n    }\n  });\n\n  return newData;\n}\nexport const arrangeData = async ({\n  data,\n  column,\n  beforeArrangeData,\n  adjustMaxHeight,\n  cb,\n  fontSize = \"11px\",\n  summaryHeight,\n}: {\n  data: any;\n  column: Array<any>;\n  beforeArrangeData: (itm: any) => any;\n  adjustMaxHeight: number;\n  cb?: ({\n    data,\n    column,\n    beforeArrangeData,\n    adjustMaxHeight,\n  }: {\n    data: any;\n    column: Array<any>;\n    beforeArrangeData: (itm: any) => any;\n    adjustMaxHeight: number;\n  }) => any[];\n  fontSize?: string;\n  summaryHeight?: number;\n}) => {\n  if (data === undefined) return [];\n  if (cb) {\n    return cb({\n      data,\n      column,\n      beforeArrangeData,\n      adjustMaxHeight,\n    });\n  }\n\n  return defaultArrangeDataCore({\n    data,\n    column,\n    beforeArrangeData,\n    adjustMaxHeight,\n    fontSize,\n    summaryHeight,\n  });\n};\n","import React, { useContext, useRef } from \"react\";\nimport {\n  FormControl,\n  MenuItem,\n  Select,\n  TextField,\n  InputLabel,\n  Box,\n} from \"@mui/material\";\nimport { useQuery } from \"react-query\";\nimport { AuthContext } from \"../../../../components/AuthContext\";\nimport CustomDatePicker from \"../../../../components/DatePicker\";\nimport { LoadingButton } from \"@mui/lab\";\nimport { AdapterDateFns } from \"@mui/x-date-pickers/AdapterDateFns\";\nimport { DatePicker, LocalizationProvider } from \"@mui/x-date-pickers\";\nimport PrintPreview, {\n  columnSelection,\n  copiedByHeaderOnDoubleClick,\n} from \"../../../../components/PrintPreview/PrintPreview\";\nimport { arrangeData } from \"../../../../components/PrintPreview/dataCore\";\nimport ReactDOMServer from \"react-dom/server\";\nimport { format } from \"date-fns\";\n\nconst initialState = {\n  dateFormat: \"Monthly\",\n  date: new Date(),\n  sub_acct: \"All\",\n  title: \"\",\n};\n\nexport const reducer = (state: any, action: any) => {\n  switch (action.type) {\n    case \"UPDATE_FIELD\":\n      return {\n        ...state,\n        [action.field]: action.value,\n      };\n    default:\n      return state;\n  }\n};\n\nconst column = [\n  {\n    groupId: \"\",\n    datakey: \"Acct_Code\",\n    header: \"ACCT.\",\n    width: \"100px\",\n  },\n  {\n    groupId: \"\",\n    datakey: \"Short\",\n    header: \"ACCOUNT NAME\",\n    width: \"180px\",\n  },\n  {\n    groupId: \"\",\n    datakey: \"SubAcct\",\n    header: \"SUB-ACCOUNT\",\n    width: \"150px\",\n  },\n  {\n    groupId: \"\",\n    datakey: \"Shortname\",\n    header: \"ID NAME\",\n    width: \"180px\",\n  },\n  {\n    groupId: \"\",\n    datakey: \"Debit\",\n    header: \"DEBIT\",\n    type: \"number\",\n    width: \"100px\",\n  },\n  {\n    groupId: \"\",\n    datakey: \"Credit\",\n    header: \"CREDIT\",\n    type: \"number\",\n    width: \"100px\",\n  },\n  {\n    groupId: \"\",\n    datakey: \"TC\",\n    header: \"\",\n    width: \"70px\",\n  },\n];\nfunction setupTitle(state: any, department: string) {\n  return `${\n    department === \"UMIS\"\n      ? \"UPWARD MANAGEMENT INSURANCE SERVICES\"\n      : \"UPWARD CONSULTANCY SERVICES AND MANAGEMENT INC.\"\n  }\\n${state.dateFormat} Production Book - PB\\n${DateToStringFormat(state)}`;\n}\nfunction DateToStringFormat(state: any) {\n  let dateString = \"\";\n  if (state.dateFormat === \"Daily\") {\n    dateString = state.date.toLocaleDateString(\"en-US\", {\n      year: \"numeric\",\n      month: \"long\",\n      day: \"numeric\",\n    });\n  } else if (state.dateFormat === \"Monthly\") {\n    dateString = state.date.toLocaleDateString(\"en-US\", {\n      year: \"numeric\",\n      month: \"long\",\n    });\n  }\n\n  return dateString.toString();\n}\nfunction Setting({ state, dispatch }: { state: any; dispatch: any }) {\n  const dateFromRef = useRef<HTMLElement>(null);\n  const { myAxios, user } = useContext(AuthContext);\n  const { data: dataSubAccounts, isLoading: isLoadingSubAccounts } = useQuery({\n    queryKey: \"sub-accounts\",\n    queryFn: async () =>\n      await myAxios.get(\"/reports/accounting/get-sub-account-acronym\", {\n        headers: {\n          Authorization: `Bearer ${user?.accessToken}`,\n        },\n      }),\n  });\n\n  const handleInputChange = (e: any) => {\n    const { name, value } = e.target;\n    dispatch({ type: \"UPDATE_FIELD\", field: name, value });\n  };\n\n  return (\n    <div\n      style={{\n        padding: \"10px\",\n      }}\n    >\n      <TextField\n        label=\"Title\"\n        fullWidth\n        name=\"title\"\n        value={state.title}\n        onChange={handleInputChange}\n        rows={6}\n        multiline\n        InputProps={{\n          style: { height: \"140px\", fontSize: \"12px\" },\n        }}\n        sx={{\n          flex: 1,\n          \".MuiFormLabel-root\": { fontSize: \"14px\" },\n          \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n        }}\n      />\n      <Box\n        sx={(theme) => ({\n          height: \"100%\",\n          display: \"grid\",\n          gridTemplateColumns: \"repeat(1,1fr)\",\n          gap: \"10px\",\n          margin: \"10px 0\",\n          [theme.breakpoints.down(\"sm\")]: {\n            gridTemplateColumns: \"repeat(1,1fr)\",\n          },\n        })}\n      >\n        <FormControl\n          fullWidth\n          variant=\"outlined\"\n          size=\"small\"\n          sx={{\n            \".MuiFormLabel-root\": {\n              fontSize: \"14px\",\n              background: \"white\",\n              zIndex: 99,\n              padding: \"0 3px\",\n            },\n            \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n          }}\n        >\n          <InputLabel id=\"date_format\">Report</InputLabel>\n          <Select\n            labelId=\"date_format\"\n            value={state.dateFormat}\n            label=\"Report\"\n            name=\"dateFormat\"\n            onChange={(e) => {\n              handleInputChange(e);\n              state.dateFormat = e.target.value;\n              dispatch({\n                type: \"UPDATE_FIELD\",\n                field: \"title\",\n                value: setupTitle(state, user?.department as string),\n              });\n            }}\n            sx={{\n              height: \"27px\",\n              fontSize: \"14px\",\n            }}\n          >\n            <MenuItem value={\"Daily\"}>Daily</MenuItem>\n            <MenuItem value={\"Monthly\"}>Monthly</MenuItem>\n          </Select>\n        </FormControl>\n        {isLoadingSubAccounts ? (\n          <LoadingButton loading={isLoadingSubAccounts} />\n        ) : (\n          <FormControl\n            fullWidth\n            variant=\"outlined\"\n            size=\"small\"\n            sx={{\n              \".MuiFormLabel-root\": {\n                fontSize: \"14px\",\n                background: \"white\",\n                zIndex: 99,\n                padding: \"0 3px\",\n              },\n              \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n            }}\n          >\n            <InputLabel id=\"sub_account_id\">Sub Account</InputLabel>\n            <Select\n              labelId=\"sub_account_id\"\n              value={state.sub_acct}\n              label=\"Sub Account\"\n              name=\"sub_acct\"\n              onChange={handleInputChange}\n              sx={{\n                height: \"27px\",\n                fontSize: \"14px\",\n              }}\n            >\n              <MenuItem value={\"All\"}>All</MenuItem>\n              {dataSubAccounts?.data.sub_account.map(\n                (itm: any, idx: number) => {\n                  return (\n                    <MenuItem key={idx} value={itm.Acronym}>\n                      {itm.Acronym}\n                    </MenuItem>\n                  );\n                }\n              )}\n            </Select>\n          </FormControl>\n        )}\n        {state.dateFormat === \"Monthly\" && (\n          <LocalizationProvider dateAdapter={AdapterDateFns}>\n            <DatePicker\n              sx={{\n                width: \"100%\",\n                \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n              }}\n              slotProps={{\n                textField: {\n                  size: \"small\",\n                  name: \"\",\n                  InputLabelProps: {\n                    style: {\n                      fontSize: \"14px\",\n                    },\n                  },\n                  InputProps: {\n                    style: { height: \"27px\", fontSize: \"14px\" },\n                  },\n                },\n              }}\n              label={\"Date\"}\n              views={[\"month\", \"year\"]}\n              value={state.date}\n              onChange={(value) => {\n                dispatch({\n                  type: \"UPDATE_FIELD\",\n                  field: \"date\",\n                  value: value,\n                });\n                state.date = value;\n                dispatch({\n                  type: \"UPDATE_FIELD\",\n                  field: \"title\",\n                  value: setupTitle(state, user?.department as string),\n                });\n              }}\n            />\n          </LocalizationProvider>\n        )}\n        {state.dateFormat === \"Daily\" && (\n          <CustomDatePicker\n            fullWidth={true}\n            label=\"Date From\"\n            onChange={(value: any) => {\n              dispatch({\n                type: \"UPDATE_FIELD\",\n                field: \"date\",\n                value: value,\n              });\n              state.date = value;\n              dispatch({\n                type: \"UPDATE_FIELD\",\n                field: \"title\",\n                value: setupTitle(state, user?.department as string),\n              });\n            }}\n            value={new Date(state.date)}\n            onKeyDown={(e: any) => {\n              if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n                const timeout = setTimeout(() => {\n                  dateFromRef.current?.querySelector(\"button\")?.click();\n                  clearTimeout(timeout);\n                }, 150);\n              }\n            }}\n            datePickerRef={dateFromRef}\n            textField={{\n              InputLabelProps: {\n                style: {\n                  fontSize: \"14px\",\n                },\n              },\n              InputProps: {\n                style: { height: \"27px\", fontSize: \"14px\" },\n              },\n            }}\n          />\n        )}\n      </Box>\n    </div>\n  );\n}\n\nexport default function ProductionBook() {\n  const { user, myAxios } = useContext(AuthContext);\n  initialState.title = setupTitle(initialState, user?.department as string);\n\n  async function onReportSubmit(setData: any, setLoading: any, state: any) {\n    const response = await myAxios.post(\n      \"/reports/accounting/production-book-pb\",\n      state,\n      {\n        headers: {\n          Authorization: `Bearer ${user?.accessToken}`,\n        },\n      }\n    );\n    const jsonData = await response.data;\n    const SummaryTable = () => (\n      <table>\n        <tbody>\n          {jsonData.summary.map((rowItem: any, rowIdx: number) => {\n            if (rowItem.summary) {\n              return (\n                <React.Fragment key={rowIdx}>\n                  <tr style={{ height: \"20px\" }}></tr>\n                  <tr>\n                    <td\n                      colSpan={2}\n                      style={{\n                        fontSize: \"11px\",\n                        fontWeight: \"bold\",\n                        textAlign: \"center\",\n                      }}\n                    >\n                      {rowItem.SubAcct}\n                    </td>\n                  </tr>\n                </React.Fragment>\n              );\n            }\n            if (rowItem.summaryHeader) {\n              return (\n                <React.Fragment key={rowIdx}>\n                  <tr style={{ height: \"50px\" }}></tr>\n                  <tr>\n                    <td colSpan={1}></td>\n                    <td\n                      colSpan={2}\n                      style={{\n                        fontSize: \"11px\",\n                        fontWeight: \"bold\",\n                        textAlign: \"center\",\n                      }}\n                    >\n                      ACCOUNT TITLE\n                    </td>\n                    <td\n                      style={{\n                        fontSize: \"11px\",\n                        fontWeight: \"bold\",\n                      }}\n                    >\n                      DEBIT\n                    </td>\n                    <td\n                      colSpan={2}\n                      style={{\n                        fontSize: \"11px\",\n                        fontWeight: \"bold\",\n                      }}\n                    >\n                      CREDIT\n                    </td>\n                  </tr>\n                  <tr style={{ height: \"10px\" }}></tr>\n                </React.Fragment>\n              );\n            }\n            if (rowItem.summaryData) {\n              return (\n                <React.Fragment key={rowIdx}>\n                  <tr>\n                    <td></td>\n                    <td\n                      colSpan={2}\n                      style={{\n                        fontSize: \"11px\",\n                        fontWeight: \"bold\",\n                        textAlign: \"left\",\n                      }}\n                    >\n                      {rowItem.Acct_Code}\n                    </td>\n                    <td\n                      style={{\n                        fontSize: \"11px\",\n                        fontWeight: \"bold\",\n                        textAlign: \"right\",\n                        paddingRight: \"100px\",\n                      }}\n                    >\n                      {rowItem.Debit}\n                    </td>\n                    <td\n                      colSpan={2}\n                      style={{\n                        fontSize: \"11px\",\n                        fontWeight: \"bold\",\n                        textAlign: \"right\",\n                        paddingRight: \"120px\",\n                      }}\n                    >\n                      {rowItem.Credit}\n                    </td>\n                  </tr>\n                </React.Fragment>\n              );\n            }\n            if (rowItem.summaryFooter) {\n              return (\n                <React.Fragment key={rowIdx}>\n                  <tr style={{ height: \"10px\" }}></tr>\n                  <tr style={{ height: \"5px\" }}>\n                    <td colSpan={1}></td>\n                    <td colSpan={2}></td>\n                    <td style={{ borderTop: \"1px solid black\" }}></td>\n                    <td style={{ borderTop: \"1px solid black\" }}></td>\n                  </tr>\n                  <tr>\n                    <td></td>\n                    <td\n                      colSpan={2}\n                      style={{\n                        fontSize: \"11px\",\n                        fontWeight: \"bold\",\n                        textAlign: \"right\",\n                        paddingRight: \"20px\",\n                      }}\n                    >\n                      {rowItem.Acct_Code}\n                    </td>\n                    <td\n                      style={{\n                        fontSize: \"11px\",\n                        fontWeight: \"bold\",\n                        textAlign: \"right\",\n                        paddingRight: \"100px\",\n                      }}\n                    >\n                      {rowItem.Debit}\n                    </td>\n                    <td\n                      colSpan={2}\n                      style={{\n                        fontSize: \"11px\",\n                        fontWeight: \"bold\",\n                        textAlign: \"right\",\n                        paddingRight: \"120px\",\n                      }}\n                    >\n                      {rowItem.Credit}\n                    </td>\n                  </tr>\n                  <tr style={{ height: \"5px\" }}>\n                    <td colSpan={1}></td>\n                    <td colSpan={2}></td>\n                    <td style={{ borderBottom: \"2px solid black\" }}></td>\n                    <td style={{ borderBottom: \"2px solid black\" }}></td>\n                  </tr>\n                </React.Fragment>\n              );\n            }\n            if (rowItem.summaryFooterSignature) {\n              return (\n                <React.Fragment key={rowIdx}>\n                  <tr style={{ height: \"50px\" }}></tr>\n                  <tr>\n                    <td\n                      colSpan={column.length}\n                      style={{\n                        fontSize: \"11px\",\n                        fontWeight: \"bold\",\n                        textAlign: \"center\",\n                      }}\n                    >\n                      Prepared: _______________ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                      Checked: _______________ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                      Approved: _______________\n                    </td>\n                  </tr>\n                </React.Fragment>\n              );\n            }\n            return <></>;\n          })}\n        </tbody>\n      </table>\n    );\n    const componentAsString = ReactDOMServer.renderToString(<SummaryTable />);\n    const summaryContainer = document.createElement(\"div\");\n    summaryContainer.innerHTML = componentAsString;\n    document.body.appendChild(summaryContainer);\n    const summaryHeight = summaryContainer.getBoundingClientRect().height;\n    document.body.removeChild(summaryContainer);\n\n    arrangeData({\n      data: jsonData.report,\n      column: column,\n      beforeArrangeData: (itm) => {\n        return itm;\n      },\n      adjustMaxHeight: 580,\n      summaryHeight,\n    }).then((newData) => {\n      setData(newData);\n      setLoading(false);\n    });\n  }\n\n  return (\n    <PrintPreview\n      column={column}\n      initialState={initialState}\n      Setting={(state, dispatch) => (\n        <Setting state={state} dispatch={dispatch} />\n      )}\n      onReportSubmit={onReportSubmit}\n      scaleDefaultValue={100}\n      drawTable={(data, state) => {\n        return data.map((pages: any, pageNumber: number) => {\n          return (\n            <div className=\"page out-page\" key={pageNumber}>\n              <div className=\"header\" style={{ height: \"50px\" }}></div>\n              <div className=\"content\">\n                <table>\n                  <thead>\n                    {state.title.split(\"\\n\").map((t: string, idx: number) => {\n                      return (\n                        <tr key={idx}>\n                          <th\n                            style={{\n                              fontSize: \"14px\",\n                              fontWeight: \"bold\",\n                              textAlign: \"left\",\n                            }}\n                            colSpan={column.length}\n                          >\n                            {t}\n                          </th>\n                        </tr>\n                      );\n                    })}\n                    <tr style={{ height: \"40px\" }}></tr>\n                    <tr>\n                      <th\n                        style={{\n                          fontSize: \"12px\",\n                          fontWeight: \"bold\",\n                          textAlign: \"left\",\n                        }}\n                      >\n                        DATE\n                      </th>\n                      <th\n                        style={{\n                          fontSize: \"12px\",\n                          fontWeight: \"bold\",\n                          textAlign: \"left\",\n                        }}\n                      >\n                        POLICY #\n                      </th>\n                      <th\n                        style={{\n                          fontSize: \"12px\",\n                          fontWeight: \"bold\",\n                          textAlign: \"left\",\n                        }}\n                        colSpan={6}\n                      >\n                        EXPLANATION\n                      </th>\n                    </tr>\n                    <tr>\n                      {column.map((itm: any, rowIdx: number) => {\n                        return (\n                          <th\n                            onDoubleClick={(e) =>\n                              copiedByHeaderOnDoubleClick(e, itm.datakey, data)\n                            }\n                            style={{\n                              width: itm.width,\n                              fontSize: \"12px\",\n                              fontWeight: \"bold\",\n                              textAlign: \"left\",\n                            }}\n                            key={rowIdx}\n                          >\n                            {itm.header}\n                          </th>\n                        );\n                      })}\n                    </tr>\n                    <tr style={{ height: \"10px\" }}></tr>\n                  </thead>\n                  <tbody>\n                    {pages.map((rowItem: any, rowIdx: number) => {\n                      if (rowItem.nHeader === \"1\") {\n                        return (\n                          <React.Fragment key={rowIdx}>\n                            <tr style={{ height: \"5px\" }}></tr>\n                            <tr>\n                              <td\n                                style={{\n                                  fontSize: \"10.5px\",\n                                  fontWeight: \"bold\",\n                                }}\n                              >\n                                {rowItem.nDate_Entry}\n                              </td>\n                              <td\n                                style={{\n                                  fontSize: \"11px\",\n                                  fontWeight: \"bold\",\n                                }}\n                              >\n                                {rowItem.nSource_No}\n                              </td>\n\n                              <td\n                                style={{\n                                  fontSize: \"11px\",\n                                  fontWeight: \"bold\",\n                                }}\n                                colSpan={6}\n                              >\n                                {rowItem.Explanation}\n                              </td>\n                            </tr>\n                            <tr key={rowIdx}>\n                              {column.map((colItem: any, colIdx: number) => {\n                                return (\n                                  <td\n                                    onClick={columnSelection}\n                                    className={`editable not-looking page-${pageNumber}  row-${rowIdx}_col-${colIdx}`}\n                                    key={colIdx}\n                                    style={{\n                                      fontSize: \"11px\",\n                                      fontWeight: \"500\",\n                                      width: `${colItem.width} !important`,\n                                      textAlign:\n                                        colItem.type === \"number\"\n                                          ? \"right\"\n                                          : \"left\",\n                                    }}\n                                  >\n                                    {rowItem[colItem.datakey]}\n                                  </td>\n                                );\n                              })}\n                            </tr>\n                          </React.Fragment>\n                        );\n                      }\n                      if (rowItem.mainTotal) {\n                        return (\n                          <React.Fragment key={rowIdx}>\n                            <tr style={{ height: \"10px\" }}></tr>\n                            <tr>\n                              <td\n                                style={{\n                                  fontSize: \"11px\",\n                                  fontWeight: \"bold\",\n                                  textAlign: \"right\",\n                                }}\n                                colSpan={4}\n                              >\n                                {rowItem.Shortname}\n                              </td>\n                              <td\n                                style={{\n                                  fontSize: \"11px\",\n                                  fontWeight: \"bold\",\n                                  textAlign: \"right\",\n                                }}\n                              >\n                                {rowItem.Debit}\n                              </td>\n                              <td\n                                style={{\n                                  fontSize: \"11px\",\n                                  fontWeight: \"bold\",\n                                  textAlign: \"right\",\n                                }}\n                              >\n                                {rowItem.Credit}\n                              </td>\n                            </tr>\n                            <tr\n                              style={{\n                                height: \"5px\",\n                              }}\n                            >\n                              <td colSpan={4}></td>\n                              <td\n                                style={{\n                                  borderBottom: \"2px solid black\",\n                                }}\n                              ></td>\n                              <td\n                                style={{\n                                  borderBottom: \"2px solid black\",\n                                }}\n                              ></td>\n                            </tr>\n                          </React.Fragment>\n                        );\n                      }\n                      if (rowItem.summary) {\n                        return (\n                          <React.Fragment key={rowIdx}>\n                            <tr style={{ height: \"20px\" }}></tr>\n                            <tr>\n                              <td\n                                colSpan={2}\n                                style={{\n                                  fontSize: \"11px\",\n                                  fontWeight: \"bold\",\n                                  textAlign: \"center\",\n                                }}\n                              >\n                                {rowItem.SubAcct}\n                              </td>\n                            </tr>\n                          </React.Fragment>\n                        );\n                      }\n                      if (rowItem.summaryHeader) {\n                        return (\n                          <React.Fragment key={rowIdx}>\n                            <tr style={{ height: \"50px\" }}></tr>\n                            <tr>\n                              <td colSpan={1}></td>\n                              <td\n                                colSpan={2}\n                                style={{\n                                  fontSize: \"11px\",\n                                  fontWeight: \"bold\",\n                                  textAlign: \"center\",\n                                }}\n                              >\n                                ACCOUNT TITLE\n                              </td>\n                              <td\n                                style={{\n                                  fontSize: \"11px\",\n                                  fontWeight: \"bold\",\n                                }}\n                              >\n                                DEBIT\n                              </td>\n                              <td\n                                colSpan={2}\n                                style={{\n                                  fontSize: \"11px\",\n                                  fontWeight: \"bold\",\n                                }}\n                              >\n                                CREDIT\n                              </td>\n                            </tr>\n                            <tr style={{ height: \"10px\" }}></tr>\n                          </React.Fragment>\n                        );\n                      }\n                      if (rowItem.summaryData) {\n                        return (\n                          <React.Fragment key={rowIdx}>\n                            <tr>\n                              <td></td>\n                              <td\n                                colSpan={2}\n                                style={{\n                                  fontSize: \"11px\",\n                                  fontWeight: \"bold\",\n                                  textAlign: \"left\",\n                                }}\n                              >\n                                {rowItem.Acct_Code}\n                              </td>\n                              <td\n                                style={{\n                                  fontSize: \"11px\",\n                                  fontWeight: \"bold\",\n                                  textAlign: \"right\",\n                                  paddingRight: \"100px\",\n                                }}\n                              >\n                                {rowItem.Debit}\n                              </td>\n                              <td\n                                colSpan={2}\n                                style={{\n                                  fontSize: \"11px\",\n                                  fontWeight: \"bold\",\n                                  textAlign: \"right\",\n                                  paddingRight: \"120px\",\n                                }}\n                              >\n                                {rowItem.Credit}\n                              </td>\n                            </tr>\n                          </React.Fragment>\n                        );\n                      }\n                      if (rowItem.summaryFooter) {\n                        return (\n                          <React.Fragment key={rowIdx}>\n                            <tr style={{ height: \"10px\" }}></tr>\n                            <tr style={{ height: \"5px\" }}>\n                              <td colSpan={1}></td>\n                              <td colSpan={2}></td>\n                              <td style={{ borderTop: \"1px solid black\" }}></td>\n                              <td style={{ borderTop: \"1px solid black\" }}></td>\n                            </tr>\n                            <tr>\n                              <td></td>\n                              <td\n                                colSpan={2}\n                                style={{\n                                  fontSize: \"11px\",\n                                  fontWeight: \"bold\",\n                                  textAlign: \"right\",\n                                  paddingRight: \"20px\",\n                                }}\n                              >\n                                {rowItem.Acct_Code}\n                              </td>\n                              <td\n                                style={{\n                                  fontSize: \"11px\",\n                                  fontWeight: \"bold\",\n                                  textAlign: \"right\",\n                                  paddingRight: \"100px\",\n                                }}\n                              >\n                                {rowItem.Debit}\n                              </td>\n                              <td\n                                colSpan={2}\n                                style={{\n                                  fontSize: \"11px\",\n                                  fontWeight: \"bold\",\n                                  textAlign: \"right\",\n                                  paddingRight: \"120px\",\n                                }}\n                              >\n                                {rowItem.Credit}\n                              </td>\n                            </tr>\n                            <tr style={{ height: \"5px\" }}>\n                              <td colSpan={1}></td>\n                              <td colSpan={2}></td>\n                              <td\n                                style={{ borderBottom: \"2px solid black\" }}\n                              ></td>\n                              <td\n                                style={{ borderBottom: \"2px solid black\" }}\n                              ></td>\n                            </tr>\n                          </React.Fragment>\n                        );\n                      }\n                      if (rowItem.summaryFooterSignature) {\n                        return (\n                          <React.Fragment key={rowIdx}>\n                            <tr style={{ height: \"50px\" }}></tr>\n                            <tr>\n                              <td\n                                colSpan={column.length}\n                                style={{\n                                  fontSize: \"11px\",\n                                  fontWeight: \"bold\",\n                                  textAlign: \"center\",\n                                }}\n                              >\n                                Prepared: _______________\n                                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Checked:\n                                _______________ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                                Approved: _______________\n                              </td>\n                            </tr>\n                          </React.Fragment>\n                        );\n                      }\n\n                      return (\n                        <tr key={rowIdx}>\n                          {column.map((colItem: any, colIdx: number) => {\n                            return (\n                              <td\n                                onClick={columnSelection}\n                                className={`editable not-looking page-${pageNumber}  row-${rowIdx}_col-${colIdx}`}\n                                key={colIdx}\n                                style={{\n                                  fontSize: \"11px\",\n                                  fontWeight: \"500\",\n                                  width: `${colItem.width} !important`,\n                                  textAlign:\n                                    colItem.type === \"number\"\n                                      ? \"right\"\n                                      : \"left\",\n                                }}\n                              >\n                                {rowItem[colItem.datakey]}\n                              </td>\n                            );\n                          })}\n                        </tr>\n                      );\n                    })}\n                  </tbody>\n                </table>\n              </div>\n              <div\n                className=\"footer\"\n                style={{\n                  height: \"50px\",\n                  display: \"flex\",\n                  justifyContent: \"space-between\",\n                }}\n              >\n                <p style={{ fontSize: \"10px\", fontWeight: \"bold\" }}>\n                  {format(new Date(), \"dd/MM/yyyy\")}\n                </p>\n                <p style={{ fontSize: \"10px\", fontWeight: \"bold\" }}>\n                  Page {pageNumber + 1} of {data.length}\n                </p>\n              </div>\n            </div>\n          );\n        });\n      }}\n      pageHeight={\"13in\"}\n      pageWidth={\"8.5in\"}\n    />\n  );\n}\n","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}"],"names":["CustomDatePicker","_ref","label","name","onChange","value","onKeyDown","inputRef","datePickerRef","fullWidth","textField","_ref$minWidth","minWidth","rest","_objectWithoutProperties","_excluded","_jsx","LocalizationProvider","dateAdapter","AdapterDateFns","children","DatePicker","_objectSpread","floatingLabelStyle","color","ref","slotProps","size","InputLabelProps","sx","fieldset","borderColor","fontSize","top","defaultArrangeDataCore","data","column","beforeArrangeData","adjustMaxHeight","_ref$fontSize","_ref$summaryHeight","summaryHeight","newData","trHeight","temp","maxHeight","document","querySelector","getBoundingClientRect","height","forEach","itm","idx","contentElment","tempTable","createElement","tempRow","insertRow","summaryReport","col","tempCell","insertCell","style","visibility","width","content","columnWidth","textContent","appendChild","getTableCellHeight","datakey","removeChild","push","length","arrangeData","_x","_ref3","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_ref2","cb","_ref2$fontSize","wrap","_context","prev","next","undefined","abrupt","stop","apply","arguments","initialState","dateFormat","date","Date","sub_acct","title","reducer","state","action","type","_defineProperty","field","groupId","header","setupTitle","department","concat","dateString","toLocaleDateString","year","month","day","toString","DateToStringFormat","Setting","_queryFn","dispatch","dateFromRef","useRef","_useContext","useContext","AuthContext","myAxios","user","_useQuery","useQuery","queryKey","queryFn","get","headers","Authorization","accessToken","sent","dataSubAccounts","isLoadingSubAccounts","isLoading","handleInputChange","e","_e$target","target","_jsxs","padding","TextField","rows","multiline","InputProps","flex","Box","theme","display","gridTemplateColumns","gap","margin","breakpoints","down","FormControl","variant","background","zIndex","InputLabel","id","Select","labelId","MenuItem","LoadingButton","loading","sub_account","map","Acronym","views","code","timeout","setTimeout","_dateFromRef$current","_dateFromRef$current$","current","click","clearTimeout","ProductionBook","_onReportSubmit","_useContext2","PrintPreview","_Setting","onReportSubmit","_x2","_x3","_callee2","setData","setLoading","response","jsonData","SummaryTable","componentAsString","summaryContainer","_context2","post","summary","rowItem","rowIdx","React","colSpan","fontWeight","textAlign","SubAcct","summaryHeader","summaryData","Acct_Code","paddingRight","Debit","Credit","summaryFooter","borderTop","borderBottom","summaryFooterSignature","_Fragment","ReactDOMServer","innerHTML","body","report","then","scaleDefaultValue","drawTable","pages","pageNumber","className","split","t","onDoubleClick","copiedByHeaderOnDoubleClick","nHeader","nDate_Entry","nSource_No","Explanation","colItem","colIdx","onClick","columnSelection","mainTotal","Shortname","justifyContent","format","pageHeight","pageWidth","source","excluded","key","i","Object","getOwnPropertySymbols","sourceSymbolKeys","indexOf","prototype","propertyIsEnumerable","call"],"sourceRoot":""}