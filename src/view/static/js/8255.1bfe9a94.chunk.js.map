{"version":3,"file":"static/js/8255.1bfe9a94.chunk.js","mappings":"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","sources":["feautures/Admin/Task/Accounting/Collections.tsx","../node_modules/@mui/icons-material/AccountBox.js","../node_modules/@mui/icons-material/Forward.js","../node_modules/@mui/icons-material/LocalPrintshop.js"],"sourcesContent":["import {\n  useContext, useState, useRef,\n  forwardRef, useEffect,\n  useImperativeHandle,\n} from \"react\";\nimport {\n  Button,\n  IconButton,\n} from \"@mui/material\";\nimport AddIcon from \"@mui/icons-material/Add\";\nimport { useMutation, useQuery } from \"react-query\";\nimport Swal from \"sweetalert2\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport SaveIcon from \"@mui/icons-material/Save\";\nimport { AuthContext } from \"../../../../components/AuthContext\";\nimport { wait } from \"../../../../lib/wait\";\nimport LoadingButton from \"@mui/lab/LoadingButton\";\nimport useQueryModalTable from \"../../../../hooks/useQueryModalTable\";\nimport { flushSync } from \"react-dom\";\nimport RestartAltIcon from \"@mui/icons-material/RestartAlt\";\nimport {\n  codeCondfirmationAlert,\n  saveCondfirmationAlert,\n} from \"../../../../lib/confirmationAlert\";\nimport PageHelmet from \"../../../../components/Helmet\";\nimport { SelectInput, TextAreaInput, TextFormatedInput, TextInput } from \"../../../../components/UpwardFields\";\nimport ForwardIcon from '@mui/icons-material/Forward';\nimport { Autocomplete } from \"./PettyCash\";\nimport AccountBoxIcon from '@mui/icons-material/AccountBox';\nimport { format } from 'date-fns'\nimport SearchIcon from '@mui/icons-material/Search';\nimport useExecuteQueryFromClient from \"../../../../lib/executeQueryFromClient\";\nimport LocalPrintshopIcon from '@mui/icons-material/LocalPrintshop';\nimport { DataGridViewReact, useUpwardTableModalSearch } from \"../../../../components/DataGridViewReact\";\nimport { Loading } from \"../../../../components/Loading\";\n\n\nexport const debitColumn = [\n  { key: \"Payment\", label: \"Payment\", flex: 1, width: 170 },\n  {\n    key: \"Amount\",\n    label: \"Amount\",\n    flex: 1,\n    width: 170,\n    type: \"number\",\n  },\n  { key: \"Check_No\", label: \"Check No\", width: 170 },\n  { key: \"Check_Date\", label: \"Check Date\", width: 170 },\n  { key: \"Bank_Branch\", label: \"Bank/Branch\", width: 300 },\n  { key: \"Acct_Code\", label: \"DR Code\", width: 170 },\n  { key: \"Acct_Title\", label: \"DR Title\", width: 300 },\n  { key: \"Deposit_Slip\", label: \"Deposit Slip\", width: 170 },\n  { key: \"Cntr\", label: \"Cntr\", width: 170 },\n  { key: \"Remarks\", label: \"Remarks\", width: 300 },\n  { key: \"TC\", label: \"TC\", width: 170 },\n  { key: \"Bank\", label: \"Bank\", hide: true },\n  { key: \"BankName\", label: \"BankName\", hide: true },\n];\nexport const creditColumn = [\n  { key: \"transaction\", label: \"Transaction\", width: 200 },\n  { key: \"amount\", label: \"Amount\", width: 150, type: \"number\" },\n  { key: \"Name\", label: \"Name\", width: 350 },\n  { key: \"Remarks\", label: \"Remarks\", width: 350 },\n  { key: \"VATType\", label: \"VAT Type\", width: 150 },\n  { key: \"invoiceNo\", label: \"Invoice No\", width: 250 },\n  { key: \"Code\", label: \"Code\", width: 150 },\n  { key: \"Title\", label: \"Title\", width: 350 },\n  { key: \"TC\", label: \"TC\", width: 200 },\n  { key: \"Account_No\", label: \"Accoount No.\", width: 180 },\n];\n\nconst queryKeyPaymentType = \"payment-type-code\";\nconst queryKeyNewORNumber = \"new-or-number\";\n\n\nexport default function Collection() {\n  const debitTable = useRef<any>(null)\n  const creditTable = useRef<any>(null)\n  const modalCheckRef = useRef<any>(null)\n\n  const [paymentType, setPaymentType] = useState('CSH')\n  const [totalDebit, setTotalDebit] = useState(0)\n  const [totalCredit, setTotalCredit] = useState(0)\n  const [collectionMode, setCollectionMode] = useState('')\n\n  // SEARCH COLLECTION\n  const searchRef = useRef<HTMLInputElement>(null)\n\n  // first layer fields\n  const ornoSubRef = useRef('')\n  const ornoRef = useRef<HTMLInputElement>(null)\n  const dateRef = useRef<HTMLInputElement>(null)\n  const pnClientRef = useRef<HTMLInputElement>(null)\n  const clientNameRef = useRef<HTMLInputElement>(null)\n  const IDNo = useRef('')\n\n  // second layer fields\n  const paymentTypeRef = useRef<HTMLSelectElement>(null)\n  const amountDebitRef = useRef<HTMLInputElement>(null)\n  const buttonCshSave = useRef<HTMLButtonElement>(null)\n  const buttonCheckSave = useRef<HTMLButtonElement>(null)\n  const buttonCheckList = useRef<HTMLButtonElement>(null)\n\n  // third layer fields\n  const transactionRef = useRef<HTMLSelectElement>(null)\n  const amountCreditRef = useRef<HTMLInputElement>(null)\n  const faoRef = useRef<HTMLInputElement>(null)\n  const remarksRef = useRef<HTMLTextAreaElement>(null)\n  const vatTypeRef = useRef<HTMLSelectElement>(null)\n  const invoiceRef = useRef<HTMLInputElement>(null)\n  const foaIDNoRef = useRef('')\n  const accCodeRef = useRef('')\n  const accTitleRef = useRef('')\n  const accTCRef = useRef('')\n\n  const searchModalInputRef = useRef<HTMLInputElement>(null)\n  const { myAxios, user } = useContext(AuthContext);\n  const { executeQueryToClient } = useExecuteQueryFromClient()\n\n  const disableFields = collectionMode === ''\n\n  const {\n    UpwardTableModalSearch,\n    openModal,\n    closeModal\n  } = useUpwardTableModalSearch({\n    column: [\n      { key: \"Check_No\", label: \"Check No\", width: 100 },\n      { key: \"Check_Date\", label: \"Check Date\", width: 100 },\n      {\n        key: \"Amount\",\n        label: \"Amount\",\n        width: 90,\n        type: \"number\",\n      },\n      {\n        key: \"Bank_Branch\",\n        label: \"Bank Branch\",\n        width: 200,\n      },\n      {\n        key: \"Remarks\",\n        label: \"Remarks\",\n        width: 200,\n        hide: true,\n      },\n    ],\n    query: (search: string) => {\n      if (pnClientRef.current) {\n        return `\n            SELECT \n               Check_No AS Check_No, \n               date_FORMAT(Check_Date,'%b. %d, %Y') AS Check_Date,\n              FORMAT(CAST(REPLACE(Check_Amnt, ',', '') AS DECIMAL(10,2)), 2) AS Amount,\n              CONCAT(Bank, '/', Branch) AS Bank_Branch\n            FROM PDC \n            WHERE (\n              Check_No LIKE '%${search}%' \n              OR Bank  LIKE '%${search}%' \n              OR Branch LIKE '%${search}%') \n              AND (PNo = '${pnClientRef.current.value}' ) \n              AND (ORNum IS NULL OR ORNum = '')\n            ORDER BY PDC.Check_Date\n        `\n      }\n      return ``\n    },\n    getSelectedItem: async (rowItm: any, _: any, rowIdx: any, __: any) => {\n      if (rowItm) {\n        if (pnClientRef.current) {\n          const dt = await executeQueryToClient(`\n            SELECT \n              Check_No, \n              Check_Date, \n              Check_Amnt, \n              PDC.Bank, \n              Bank.Bank AS BName, \n              Branch, \n              Remarks \n            FROM PDC \n            LEFT JOIN Bank ON PDC.Bank = Bank.Bank_Code\n            WHERE PNo = '${pnClientRef.current.value}' AND Check_No = '${rowItm[0]}'`)\n          const checkDetails = dt?.data.data[0]\n          wait(100).then(() => {\n            if (modalCheckRef.current) {\n              if (modalCheckRef.current.checknoRef.current) {\n                modalCheckRef.current.checknoRef.current.value = checkDetails.Check_No\n              }\n              if (modalCheckRef.current.bankRef.current) {\n                modalCheckRef.current.bankRef.current.value = checkDetails.Bank\n              }\n              if (modalCheckRef.current.branchRef.current) {\n                modalCheckRef.current.branchRef.current.value = checkDetails.Branch\n              }\n              if (modalCheckRef.current.remarksRef.current) {\n                modalCheckRef.current.remarksRef.current.value = checkDetails.Remarks\n              }\n              if (modalCheckRef.current.checkdateRef.current) {\n                modalCheckRef.current.checkdateRef.current.value = checkDetails.Check_Date\n              }\n              if (modalCheckRef.current.amountRef.current) {\n                modalCheckRef.current.amountRef.current.value = checkDetails.Check_Amnt\n              }\n              if (modalCheckRef.current.bankRefName.current) {\n                modalCheckRef.current.bankRefName.current = checkDetails.BName\n              }\n\n            }\n          })\n\n          saveCheckDebit({\n            amountRef: { current: { value: checkDetails.Check_Amnt } },\n            checknoRef: { current: { value: checkDetails.Check_No } },\n            checkdateRef: { current: { value: checkDetails.Check_Date } },\n            branchRef: { current: { value: checkDetails.Branch } },\n            remarksRef: { current: { value: checkDetails.Remarks } },\n            bankRef: { current: { value: checkDetails.Bank } },\n            bankRefName: { current: checkDetails.BName },\n          }, false)\n          closeModal()\n          wait(250).then(() => {\n            buttonCheckList.current?.focus()\n          })\n\n        }\n\n      }\n    }\n  })\n  const {\n    isLoading: paymentTypeLoading,\n    data: transactionDesc\n  } = useQuery({\n    queryKey: queryKeyPaymentType,\n    queryFn: async () =>\n      await myAxios.get(`/task/accounting/get-transaction-code-title`, {\n        headers: {\n          Authorization: `Bearer ${user?.accessToken}`,\n        },\n      }),\n    refetchOnWindowFocus: false,\n  });\n  //CLIENT MODAL \n  const {\n    ModalComponent: ModalClientIDs,\n    openModal: openCliendIDsModal,\n    isLoading: isLoadingClientIdsModal,\n    closeModal: closeCliendIDsModal,\n  } = useQueryModalTable({\n    link: {\n      url: \"/task/accounting/search-pdc-policy-id\",\n      queryUrlName: \"searchPdcPolicyIds\",\n    },\n    columns: [\n      { field: \"Type\", headerName: \"Type\", width: 130 },\n      { field: \"IDNo\", headerName: \"ID No.\", width: 200 },\n      {\n        field: \"Name\",\n        headerName: \"Name\",\n        flex: 1,\n      },\n      {\n        field: \"ID\",\n        headerName: \"ID\",\n        flex: 1,\n        hide: true,\n      },\n    ],\n    queryKey: \"collection-polidy-ids\",\n    uniqueId: \"IDNo\",\n    responseDataKey: \"clientsId\",\n    onSelected: (selectedRowData, data) => {\n      wait(100).then(() => {\n        IDNo.current = selectedRowData[0].client_id\n        if (pnClientRef.current) {\n          pnClientRef.current.value = selectedRowData[0].IDNo\n        }\n        if (clientNameRef.current) {\n          clientNameRef.current.value = selectedRowData[0].Name ?? \"\"\n        }\n        paymentTypeRef.current?.focus()\n      })\n      closeCliendIDsModal();\n    },\n    searchRef: searchModalInputRef,\n  });\n  //CLIENT MODAL CREDIT\n  const {\n    ModalComponent: ModalCreditClientIDs,\n    openModal: openCreditCliendIDsModal,\n    isLoading: isLoadingCreditClientIdsModal,\n    closeModal: closeCreditCliendIDsModal,\n  } = useQueryModalTable({\n    link: {\n      url: \"/task/accounting/search-pdc-policy-id\",\n      queryUrlName: \"searchPdcPolicyIds\",\n    },\n    columns: [\n      { field: \"Type\", headerName: \"Type\", width: 130 },\n      { field: \"IDNo\", headerName: \"ID No.\", width: 200 },\n      {\n        field: \"Name\",\n        headerName: \"Name\",\n        flex: 1,\n      },\n      {\n        field: \"ID\",\n        headerName: \"ID\",\n        flex: 1,\n        hide: true,\n      },\n    ],\n    queryKey: \"collection-polidy-ids\",\n    uniqueId: \"IDNo\",\n    responseDataKey: \"clientsId\",\n    onSelected: (selectedRowData, data) => {\n      wait(100).then(() => {\n        foaIDNoRef.current = selectedRowData[0].IDNo\n        if (faoRef.current) {\n          faoRef.current.value = selectedRowData[0].Name ?? \"\"\n        }\n        remarksRef.current?.focus()\n      })\n      closeCreditCliendIDsModal();\n    },\n    searchRef: searchModalInputRef,\n  });\n  const {\n    isLoading: loadingCollectionDataSearch,\n    mutate: mutateCollectionDataSearch,\n  } = useMutation({\n    mutationKey: 'get-collection-data-search',\n    mutationFn: async (variables: any) =>\n      await myAxios.get(\n        `/task/accounting/get-collection-data-search?ORNo=${variables.ORNo}`,\n        {\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${user?.accessToken}`,\n          },\n        }\n      ),\n    onSuccess: (res) => {\n      const response = res as any;\n      const dataCollection = response.data.collection;\n\n      if (\n        ornoRef.current &&\n        dateRef.current &&\n        pnClientRef.current &&\n        clientNameRef.current\n      ) {\n        ornoRef.current.value = dataCollection[0].ORNo\n        dateRef.current.value = dataCollection[0].Date_OR\n        pnClientRef.current.value = dataCollection[0].ID_No\n        clientNameRef.current.value = dataCollection[0].Short\n      }\n\n      const debit: Array<any> = [];\n      const credit: Array<any> = [];\n\n      for (let i = 0; i <= dataCollection.length - 1; i++) {\n\n        if (dataCollection[i].Payment !== null && dataCollection[i].Payment.toString() !== '') {\n          const isCash = dataCollection[i].Payment === 'Cash'\n          debit.push({\n            Payment: dataCollection[i].Payment,\n            Amount: dataCollection[i].Debit,\n            Check_No: isCash ? \"\" : dataCollection[i].Check_No,\n            Check_Date: isCash ? \"\" : format(new Date(dataCollection[i].Check_Date), 'yyyy-MM-dd'),\n            Bank_Branch: isCash ? \"\" : dataCollection[i].Bank,\n            Acct_Code: dataCollection[i].DRCode,\n            Acct_Title: dataCollection[i].DRTitle,\n            Deposit_Slip: dataCollection[i].SlipCode,\n            Cntr: \"\",\n            Remarks: dataCollection[i].DRRemarks,\n            TC: isCash ? \"CSH\" : \"CHK\",\n            Bank: dataCollection[i].Bank_Code,\n            BankName: dataCollection[i].BankName,\n          });\n        }\n\n        if (dataCollection[i].Purpose !== null && dataCollection[i].Purpose.toString() !== \"\") {\n          credit.push({\n            temp_id: `${i}`,\n            transaction: dataCollection[i].Purpose,\n            amount: dataCollection[i].Credit,\n            Remarks: dataCollection[i].CRRemarks,\n            Code: dataCollection[i].CRCode,\n            Title: dataCollection[i].CRTitle,\n            TC: dataCollection[i].CRTitle,\n            Account_No: dataCollection[i].CRLoanID,\n            Name: dataCollection[i].CRLoanName,\n            VATType: dataCollection[i].CRVATType,\n            invoiceNo: dataCollection[i].CRInvoiceNo,\n          });\n        }\n      \n      }\n\n      debitTable.current.setDataFormated(debit)\n      creditTable.current.setDataFormated(credit)\n      setTotalDebit(debit.reduce((sum: any, subArray: any) => sum + parseFloat(subArray.Amount.replace(/,/g, '')), 0)\n      )\n      setTotalCredit(credit.reduce((sum: any, subArray: any) => sum + parseFloat(subArray.amount.replace(/,/g, '')), 0)\n      )\n      setCollectionMode('update')\n      closeModalSearchCollection();\n    },\n  });\n  const {\n    ModalComponent: ModalSearchCollection,\n    openModal: openModalSearchCollection,\n    closeModal: closeModalSearchCollection,\n    isLoading: isLoadingModalSearchCollection,\n  } = useQueryModalTable({\n    link: {\n      url: \"/task/accounting/search-collection\",\n      queryUrlName: \"searchCollectionInput\",\n    },\n    columns: [\n      { field: \"Date_OR\", headerName: \"OR Date\", width: 170 },\n      { field: \"ORNo\", headerName: \"OR No.\", width: 200 },\n      { field: \"Name\", headerName: \"Name\", flex: 1 },\n    ],\n    queryKey: \"collection-search\",\n    uniqueId: \"ORNo\",\n    responseDataKey: \"collection\",\n    onSelected: (selectedRowData, data) => {\n      resetCredit(false)\n      resetDebit(false)\n      mutateCollectionDataSearch({ ORNo: selectedRowData[0].ORNo });\n    },\n    searchRef: searchModalInputRef,\n  });\n  const { isLoading: NewORNoLoading, refetch: refetchNewOR } = useQuery({\n    queryKey: queryKeyNewORNumber,\n    queryFn: async () =>\n      await myAxios.get(`/task/accounting/get-new-or-number`, {\n        headers: {\n          Authorization: `Bearer ${user?.accessToken}`,\n        },\n      }),\n    refetchOnWindowFocus: false,\n    onSuccess: (res) => {\n      const response = res as any;\n      wait(100).then(() => {\n        ornoSubRef.current = response.data?.ORNo[0].collectionID\n        if (ornoRef.current) {\n          ornoRef.current.value = response.data?.ORNo[0].collectionID\n        }\n      })\n    },\n  });\n  const {\n    mutate,\n    isLoading: loadingAddNew,\n  } = useMutation({\n    mutationKey: \"add-update-collection\",\n    mutationFn: async (variables: any) => {\n      if (collectionMode === 'update') {\n        delete variables.mode;\n        return await myAxios.post(\n          \"/task/accounting/update-collection\",\n          variables,\n          {\n            headers: {\n              Authorization: `Bearer ${user?.accessToken}`,\n            },\n          }\n        );\n      }\n      delete variables.mode;\n      return await myAxios.post(\"/task/accounting/add-collection\", variables, {\n        headers: {\n          Authorization: `Bearer ${user?.accessToken}`,\n        },\n      });\n    },\n    onSuccess: (res) => {\n      if (res.data.success) {\n        resetCollection()\n        return Swal.fire({\n          position: \"center\",\n          icon: \"success\",\n          title: res.data.message,\n          showConfirmButton: false,\n          timer: 1500,\n        });\n      }\n      Swal.fire({\n        position: \"center\",\n        icon: \"error\",\n        title: res.data.message,\n        showConfirmButton: false,\n        timer: 1500,\n      });\n    },\n  });\n  const { mutate: mutataPrint, isLoading: isLoadingPrint } = useMutation({\n    mutationKey: \"on-print\",\n    mutationFn: async (variables: any) => {\n      return await myAxios.post(\"/task/accounting/on-print\", variables, {\n        headers: {\n          Authorization: `Bearer ${user?.accessToken}`,\n        },\n      });\n    },\n    onSuccess: (res) => {\n      if (res.data.success) {\n        printOR(res.data);\n      }\n    },\n  });\n  function resetCollection() {\n    wait(100).then(() => {\n      refetchNewOR();\n      resetFields()\n      resetCredit(false)\n      resetDebit(false)\n      debitTable.current?.setData([])\n      creditTable.current?.setData([])\n      pnClientRef.current?.focus()\n      setTotalCredit(0)\n      setTotalDebit(0)\n    })\n  }\n  async function saveCashDebit(value: string, paymentType: string) {\n    const amount = parseFloat(value.replace(/,/g, ''))\n    if (isNaN(amount) || amount <= 0) {\n      amountDebitRef.current?.focus()\n      return alert('Please provide amount!')\n    }\n    const getSelectedRow = debitTable.current.getSelectedRow()\n    const debitTableData = debitTable.current.getData()\n\n\n    if (getSelectedRow !== null) {\n      debitTableData[getSelectedRow][1] = amount.toLocaleString(\"en-US\", {\n        minimumFractionDigits: 2,\n        maximumFractionDigits: 2,\n      })\n      debitTable.current.setData(debitTableData)\n      debitTable.current.setSelectedRow(null)\n      setTotalDebit(\n        debitTableData.reduce((sum: any, subArray: any) => sum + parseFloat(subArray[1].replace(/,/g, '')), 0)\n      )\n    } else {\n      const dd = await executeQueryToClient(`select * from Transaction_Code LEFT JOIN Chart_Account ON Transaction_Code.Acct_Code = Chart_Account.Acct_Code WHERE Code = 'CSH'`)\n\n      const data = {\n        Payment: \"Cash\",\n        Amount: amount.toLocaleString(\"en-US\", {\n          minimumFractionDigits: 2,\n          maximumFractionDigits: 2,\n        }),\n        Check_No: \"\",\n        Check_Date: \"\",\n        Bank_Branch: \"\",\n        Acct_Code: dd.data?.data[0].Acct_Code,\n        Acct_Title: dd.data?.data[0].Acct_Title,\n        Deposit_Slip: \"\",\n        Cntr: \"\",\n        Remarks: \"\",\n        TC: paymentType,\n        Bank: \"\",\n        BankName: \"\",\n      };\n      const newDataFormatted = debitTableData.map((itm: any) => {\n        let newItm = {\n          Payment: itm[0],\n          Amount: itm[1],\n          Check_No: itm[2],\n          Check_Date: itm[3],\n          Bank_Branch: itm[4],\n          Acct_Code: itm[5],\n          Acct_Title: itm[6],\n          Deposit_Slip: itm[7],\n          Cntr: itm[8],\n          Remarks: itm[9],\n          TC: itm[10],\n          Bank: itm[11],\n          BankName: itm[12],\n        }\n        return newItm\n      })\n      const newDataTable = [...newDataFormatted, data]\n      debitTable.current.setDataFormated(newDataTable)\n      setTotalDebit(\n        newDataTable.reduce((sum: any, subArray: any) => sum + parseFloat(subArray.Amount.replace(/,/g, '')), 0)\n      )\n    }\n\n\n\n    if (amountDebitRef.current) {\n      amountDebitRef.current.value = ''\n      amountDebitRef.current?.focus()\n    }\n\n  }\n  function saveCheckDebit(refs: any, autoClose = true) {\n\n    wait(100).then(async () => {\n      // const refs = modalCheckRef.current.getRefs()\n\n      const amount = parseFloat(refs.amountRef.current?.value.replace(/,/g, ''))\n      const checkno = refs.checknoRef.current?.value\n      const checkdate = refs.checkdateRef.current?.value\n      const branch = refs.branchRef.current?.value\n      const remarks = refs.remarksRef.current?.value\n      const bank = refs.bankRef.current?.value\n      const bankRefName = refs.bankRefName.current\n      const getSelectedRow = debitTable.current.getSelectedRow()\n\n\n\n      if (debitTable.current.checkNoIsExist(checkno) && getSelectedRow === null) {\n        return alert(`check no is already exist`)\n      }\n\n\n      if (getSelectedRow !== null) {\n        const debitTableData = debitTable.current.getData()\n        debitTableData[getSelectedRow][1] = amount.toLocaleString(\"en-US\", {\n          minimumFractionDigits: 2,\n          maximumFractionDigits: 2,\n        })\n        debitTableData[getSelectedRow][2] = checkno\n        debitTableData[getSelectedRow][3] = checkdate\n        debitTableData[getSelectedRow][4] = branch\n        debitTableData[getSelectedRow][9] = remarks\n        debitTableData[getSelectedRow][11] = bank\n        debitTableData[getSelectedRow][12] = bankRefName\n        debitTable.current.setData(debitTableData)\n        debitTable.current.setSelectedRow(null)\n        setTotalDebit(\n          debitTableData.reduce((sum: any, subArray: any) => sum + parseFloat(subArray[1].replace(/,/g, '')), 0)\n        )\n      } else {\n        const dd = await executeQueryToClient(`select * from Transaction_Code LEFT JOIN Chart_Account ON Transaction_Code.Acct_Code = Chart_Account.Acct_Code WHERE Code = 'CHK'`)\n        const data = {\n          Payment: \"Check\",\n          Amount: amount.toLocaleString(\"en-US\", {\n            minimumFractionDigits: 2,\n            maximumFractionDigits: 2,\n          }),\n          Check_No: checkno,\n          Check_Date: checkdate,\n          Bank_Branch: branch,\n          Acct_Code: dd.data?.data[0].Acct_Code,\n          Acct_Title: dd.data?.data[0].Acct_Title,\n          Deposit_Slip: \"\",\n          Cntr: \"\",\n          Remarks: remarks,\n          TC: paymentType,\n          Bank: bank,\n          BankName: bankRefName,\n        };\n        const debitTableData = debitTable.current.getData()\n        const newDataFormatted = debitTableData.map((itm: any) => {\n          let newItm = {\n            Payment: itm[0],\n            Amount: itm[1],\n            Check_No: itm[2],\n            Check_Date: itm[3],\n            Bank_Branch: itm[4],\n            Acct_Code: itm[5],\n            Acct_Title: itm[6],\n            Deposit_Slip: itm[7],\n            Cntr: itm[8],\n            Remarks: itm[9],\n            TC: itm[10],\n            Bank: itm[11],\n            BankName: itm[12],\n          }\n          return newItm\n        })\n        const newDataTable = [...newDataFormatted, data]\n        debitTable.current.setDataFormated(newDataTable)\n        setTotalDebit(\n          newDataTable.reduce((sum: any, subArray: any) => sum + parseFloat(subArray.Amount.replace(/,/g, '')), 0)\n        )\n      }\n\n      if (autoClose) {\n        modalCheckRef.current.closeDelay()\n      }\n    })\n  }\n  async function saveCredit() {\n    if ((transactionRef.current && transactionRef.current.value === '') ||\n      (transactionRef.current && transactionRef.current.value === null) ||\n      (transactionRef.current && transactionRef.current.value === undefined)) {\n      transactionRef.current.focus()\n      return alert(`Please select a transaction!`)\n    }\n    if (transactionRef.current) {\n      const dd = await executeQueryToClient(`SELECT * FROM transaction_code where Description = \"${transactionRef.current.value}\"`)\n      if (dd.data.data?.length <= 0) {\n        return alert('Transaction not yet defined!')\n      }\n    }\n    if (amountCreditRef.current) {\n      if (isNaN(parseFloat(amountCreditRef.current.value.replace(/,/g, ''))) || parseFloat(amountCreditRef.current.value.replace(/,/g, '')) <= 0) {\n        amountCreditRef.current.focus()\n        return alert('Please provide amount!')\n      }\n    }\n    if (invoiceRef.current && invoiceRef.current.value === '') {\n      invoiceRef.current.focus()\n      return alert('Please provide invoice!')\n    }\n    if (foaIDNoRef.current === '') {\n      faoRef.current?.focus()\n      return alert('Please provide usage!')\n    }\n\n    const getSelectedRow = creditTable.current.getSelectedRow()\n\n    if (getSelectedRow !== null) {\n      const creditTableData = creditTable.current.getData()\n      creditTableData[getSelectedRow][0] = transactionRef.current?.value\n      creditTableData[getSelectedRow][1] = amountCreditRef.current?.value\n      creditTableData[getSelectedRow][2] = faoRef.current?.value\n      creditTableData[getSelectedRow][3] = remarksRef.current?.value\n      creditTableData[getSelectedRow][4] = vatTypeRef.current?.value\n      creditTableData[getSelectedRow][5] = invoiceRef.current?.value\n      creditTableData[getSelectedRow][6] = accCodeRef.current\n      creditTableData[getSelectedRow][7] = accTitleRef.current\n      creditTableData[getSelectedRow][8] = accTCRef.current\n      creditTableData[getSelectedRow][9] = foaIDNoRef.current\n\n      creditTable.current.setData(creditTableData)\n      creditTable.current.setSelectedRow(null)\n      setTotalCredit(\n        creditTableData.reduce((sum: any, subArray: any) => sum + parseFloat(subArray[1].replace(/,/g, '')), 0)\n      )\n    } else {\n      const data = {\n        transaction: transactionRef.current?.value,\n        amount: amountCreditRef.current?.value,\n        Name: faoRef.current?.value,\n        Remarks: remarksRef.current?.value,\n        VATType: vatTypeRef.current?.value,\n        invoiceNo: invoiceRef.current?.value,\n        Code: accCodeRef.current,\n        Title: accTitleRef.current,\n        TC: accTCRef.current,\n        Account_No: foaIDNoRef.current,\n      }\n\n      const creditTableData = creditTable.current.getData()\n      const newDataFormatted = creditTableData.map((itm: any) => {\n        let newItm = {\n          transaction: itm[0],\n          amount: itm[1],\n          Name: itm[2],\n          Remarks: itm[3],\n          VATType: itm[4],\n          invoiceNo: itm[5],\n          Code: itm[6],\n          Title: itm[7],\n          TC: itm[8],\n          Account_No: itm[9],\n        }\n        return newItm\n      })\n      const newCreditTableData = [...newDataFormatted, data]\n      creditTable.current.setDataFormated(newCreditTableData)\n      setTotalCredit(\n        newCreditTableData.reduce((sum: any, subArray: any) => sum + parseFloat(subArray.amount.replace(/,/g, '')), 0)\n      )\n    }\n\n    if (vatTypeRef.current && vatTypeRef.current.value === 'VAT') {\n\n      const dd = await executeQueryToClient(`select chart_account.Acct_Code,chart_account.Acct_Title from transaction_code LEFT JOIN chart_account ON transaction_code.Acct_Code = chart_account.Acct_Code WHERE Description = 'Output Tax'`)\n      const TC = await executeQueryToClient(`select Code from transaction_code WHERE Description = 'Output Tax' `)\n\n\n      let taxableamt = 0\n      let inputtax = 0\n\n      if (amountCreditRef.current) {\n        taxableamt = parseFloat(amountCreditRef.current.value.replace(/,/g, '')) / 1.12\n        inputtax = taxableamt * 0.12\n      }\n\n\n      const debitTableData = creditTable.current.getData()\n\n\n      if (getSelectedRow !== null) {\n        const newData: any = []\n        newData[0] = \"Output Tax\"\n        newData[1] = inputtax.toLocaleString(\"en-US\", {\n          minimumFractionDigits: 2,\n          maximumFractionDigits: 2,\n        });\n        newData[2] = faoRef.current?.value\n        newData[3] = remarksRef.current?.value\n        newData[4] = \"VAT\"\n        newData[5] = invoiceRef.current?.value\n        newData[6] = dd.data?.data[0].Acct_Code\n        newData[7] = dd.data?.data[0].Acct_Title\n        newData[8] = TC.data?.data[0].Code\n        newData[9] = foaIDNoRef.current\n\n        debitTableData[getSelectedRow][1] = taxableamt.toLocaleString(\"en-US\", {\n          minimumFractionDigits: 2,\n          maximumFractionDigits: 2,\n        });\n\n        debitTableData.splice(getSelectedRow + 1, 0, newData);\n        creditTable.current.setData(debitTableData)\n\n      } else {\n        const newData: any = []\n        newData[0] = \"Output Tax\"\n        newData[1] = inputtax.toLocaleString(\"en-US\", {\n          minimumFractionDigits: 2,\n          maximumFractionDigits: 2,\n        });\n        newData[2] = faoRef.current?.value\n        newData[3] = remarksRef.current?.value\n        newData[4] = \"VAT\"\n        newData[5] = invoiceRef.current?.value\n        newData[6] = dd.data?.data[0].Acct_Code\n        newData[7] = dd.data?.data[0].Acct_Title\n        newData[8] = TC.data?.data[0].Code\n        newData[9] = foaIDNoRef.current\n\n        debitTableData[debitTableData.length] = newData\n        debitTableData[debitTableData.length - 2][1] = taxableamt.toLocaleString(\"en-US\", {\n          minimumFractionDigits: 2,\n          maximumFractionDigits: 2,\n        });\n        creditTable.current.setData(debitTableData)\n      }\n\n\n\n\n    }\n    resetCredit()\n  }\n  function resetFields() {\n    wait(100).then(() => {\n      if (dateRef.current) {\n        dateRef.current.value = format(new Date(), \"yyyy-MM-dd\")\n      }\n      if (pnClientRef.current) {\n        pnClientRef.current.value = ''\n      }\n      if (clientNameRef.current) {\n        clientNameRef.current.value = ''\n      }\n      IDNo.current = ''\n    })\n  }\n  function resetDebit(setFocus = true) {\n    modalCheckRef.current?.closeDelay()\n    setPaymentType('CSH')\n    if (paymentTypeRef.current) {\n      paymentTypeRef.current.value = 'CSH'\n    }\n    wait(100).then(() => {\n      if (amountDebitRef.current) {\n        amountDebitRef.current.value = ''\n        if (setFocus)\n          amountDebitRef.current?.focus()\n      }\n    })\n\n  }\n  function resetCredit(setFocus = true) {\n    wait(100).then(() => {\n      if (transactionRef.current) {\n        transactionRef.current.value = ''\n      }\n      if (amountCreditRef.current) {\n        amountCreditRef.current.value = '0.00'\n      }\n      if (faoRef.current) {\n        faoRef.current.value = ''\n      }\n      if (remarksRef.current) {\n        remarksRef.current.value = ''\n      }\n      if (vatTypeRef.current) {\n        vatTypeRef.current.value = 'Non-VAT'\n      }\n      if (invoiceRef.current) {\n        invoiceRef.current.value = ''\n      }\n      accCodeRef.current = ''\n      accTitleRef.current = ''\n      accTCRef.current = ''\n      foaIDNoRef.current = ''\n      if (setFocus)\n        transactionRef.current?.focus()\n    })\n  }\n  function handleOnAdd() {\n    setCollectionMode('add')\n    resetCollection()\n  }\n  function handleOnSave() {\n\n    const debitTableData = debitTable.current.getData()\n    const creditTableData = creditTable.current.getData()\n\n\n    if (ornoRef.current && ornoRef.current.value === \"\") {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: \"Please provide OR number\",\n        timer: 1500,\n      });\n    } else if (pnClientRef.current && pnClientRef.current.value === \"\") {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: \"Please provide PN/Client ID\",\n        timer: 1500,\n      }).then(() => {\n        wait(350).then(() => {\n          openCliendIDsModal();\n        });\n      });\n    } else if (debitTableData.length <= 0) {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: \"Please provide debit entry\",\n        timer: 1500,\n      }).then(() => {\n        wait(300).then(() => {\n          paymentTypeRef.current?.focus();\n        });\n      });\n    } else if (creditTableData.length <= 0) {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: \"Please provide credit entry\",\n        timer: 1500,\n      }).then(() => {\n        wait(300).then(() => {\n          transactionRef.current?.focus();\n        });\n      });\n    } else if (\n      parseFloat(debitTableData.reduce((sum: any, obj: any) => sum + parseFloat(obj[1].toString().replace(/,/g, \"\")), 0)).toFixed(2) !==\n      parseFloat(creditTableData.reduce((sum: any, obj: any) => sum + parseFloat(obj[1].toString().replace(/,/g, \"\")), 0)).toFixed(2)\n    ) {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title:\n          \"Transaction is not balanced. Check if the amount you entered are correct!\",\n        timer: 1500,\n      });\n    }\n\n\n\n    const creditTableDataFormatted = creditTableData.map((itm: any) => {\n      let newItm = {\n        transaction: itm[0],\n        amount: itm[1],\n        Name: itm[2],\n        Remarks: itm[3],\n        VATType: itm[4],\n        invoiceNo: itm[5],\n        Code: itm[6],\n        Title: itm[7],\n        TC: itm[8],\n        Account_No: itm[9],\n      }\n      return newItm\n    })\n\n    const debitTableDataFormatted = debitTableData.map((itm: any) => {\n      let newItm = {\n        Payment: itm[0],\n        Amount: itm[1],\n        Check_No: itm[2],\n        Check_Date: itm[3],\n        Bank_Branch: itm[4],\n        Acct_Code: itm[5],\n        Acct_Title: itm[6],\n        Deposit_Slip: itm[7],\n        Cntr: itm[8],\n        Remarks: itm[9],\n        TC: itm[10],\n        Bank: itm[11],\n        BankName: itm[12],\n      }\n      return newItm\n    })\n\n    const state = {\n      ORNo: ornoRef.current?.value,\n      Date: dateRef.current?.value,\n      PNo: pnClientRef.current?.value,\n      Name: clientNameRef.current?.value,\n      debit: JSON.stringify(debitTableDataFormatted),\n      credit: JSON.stringify(creditTableDataFormatted)\n    }\n\n    if (collectionMode === 'update') {\n      codeCondfirmationAlert({\n        isUpdate: true,\n        cb: (userCodeConfirmation) => {\n          mutate({ ...state, userCodeConfirmation, mode: \"\" });\n        },\n      });\n    } else {\n      saveCondfirmationAlert({\n        isConfirm: () => {\n          mutate({ ...state, mode: \"\" });\n        },\n      });\n    }\n\n\n  }\n  function handleOnPrint() {\n    if (ornoRef.current)\n      mutataPrint({ ORNo: ornoRef.current.value });\n\n  }\n  function handleOnClose() {\n\n    Swal.fire({\n      title: \"Are you sure?\",\n      text: \"You won't be able to revert this!\",\n      icon: \"warning\",\n      showCancelButton: true,\n      confirmButtonColor: \"#3085d6\",\n      cancelButtonColor: \"#d33\",\n      confirmButtonText: \"Yes, cancel it!\",\n    }).then((result) => {\n      if (result.isConfirmed) {\n        setCollectionMode('')\n        resetCollection()\n      }\n    });\n\n  }\n  function printOR(res: any) {\n    const data = res.data.concat(res.data1);\n    console.log(res)\n    flushSync(() => {\n      localStorage.removeItem(\"printString\");\n      localStorage.setItem(\"dataString\", JSON.stringify(data));\n      localStorage.setItem(\"paper-width\", \"8.5in\");\n      localStorage.setItem(\"paper-height\", \"11in\");\n      localStorage.setItem(\"module\", \"collection\");\n      if (user?.department === \"UMIS\") {\n        localStorage.setItem(\"title\", user?.department === 'UMIS' ? \"UPWARD MANAGEMENT INSURANCE SERVICES\" : \"UPWARD CONSULTANCY SERVICES AND MANAGEMENT INC.\");\n      } else {\n        localStorage.setItem(\n          \"title\",\n          \"UPWARD CONSULTANCY SERVICES AND MANAGEMENT INC.\"\n        );\n      }\n    });\n    window.open(\"/dashboard/print\", \"_blank\");\n  }\n\n  return (\n    <div\n      style={{\n        height: \"100%\",\n        width: \"100%\",\n        background: \"#F1F1F1\",\n      }}\n    >\n      <PageHelmet title=\"Collection\" />\n      <UpwardTableModalSearch />\n      <ModalCheck\n        ref={modalCheckRef}\n        handleOnSave={() => {\n          const refs = modalCheckRef.current.getRefs()\n          saveCheckDebit(refs)\n        }}\n        handleOnClose={() => {\n          debitTable.current.setSelectedRow(null)\n          buttonCheckSave.current?.focus()\n        }}\n      />\n\n      {(loadingAddNew || isLoadingPrint || loadingCollectionDataSearch) && <Loading />}\n\n      <div\n        style={{\n          width: \"100%\",\n          height: \"20%\",\n          display: \"flex\",\n          flexDirection: \"column\",\n          padding: \"5px\"\n        }}\n      >\n        <div style={{\n          height: \"30px\",\n          display: \"flex\",\n          columnGap: \"10px\"\n        }}>\n          {\n            isLoadingModalSearchCollection ?\n              <LoadingButton loading={isLoadingModalSearchCollection} />\n              :\n              <TextInput\n                containerStyle={{ width: \"550px\" }}\n                label={{\n                  title: \"Search: \",\n                  style: {\n                    fontSize: \"12px\",\n                    fontWeight: \"bold\",\n                    width: \"50px\",\n                  },\n                }}\n                input={{\n                  className: \"search-input-up-on-key-down\",\n                  type: \"search\",\n                  onKeyDown: (e) => {\n                    if (e.key === \"Enter\" || e.key === \"NumpadEnter\") {\n                      e.preventDefault();\n                      openModalSearchCollection(e.currentTarget.value);\n                    }\n                  },\n                  style: { width: \"500px\", height: \"22px\" },\n                }}\n\n                icon={<SearchIcon sx={{ fontSize: \"18px\" }} />}\n                onIconClick={(e) => {\n                  e.preventDefault()\n                  if (searchRef.current)\n                    openModalSearchCollection(searchRef.current.value);\n                }}\n                inputRef={searchRef}\n              />}\n          {ModalSearchCollection}\n          <IconButton\n            aria-label=\"add\" size=\"small\" color=\"info\"\n            onClick={handleOnAdd}\n          >\n            <AddIcon />\n          </IconButton>\n          <IconButton\n            disabled={disableFields}\n            aria-label=\"save\" size=\"small\" color=\"success\"\n            onClick={handleOnSave}\n          >\n            <SaveIcon />\n          </IconButton>\n          <IconButton\n            disabled={collectionMode !== 'update'}\n            aria-label=\"print\" size=\"small\" color=\"secondary\"\n            onClick={handleOnPrint}\n          >\n            <LocalPrintshopIcon />\n          </IconButton>\n          <IconButton\n            disabled={disableFields}\n            aria-label=\"print\" size=\"small\" color=\"error\"\n            onClick={handleOnClose}\n          >\n            <CloseIcon />\n          </IconButton>\n        </div>\n        <div\n          style={{\n            flex: 1,\n            border: \"1px solid #64748b\",\n            display: \"flex\",\n            alignItems: \"center\",\n            columnGap: \"50px\",\n            padding: \"5px\",\n            width: \"100%\"\n          }}\n        >\n          <div style={{\n            display: \"flex\",\n            flexDirection: \"column\",\n            rowGap: \"5px\",\n            width: \"50%\"\n          }}>\n            {\n              NewORNoLoading ?\n                <LoadingButton loading={NewORNoLoading} />\n                :\n                <TextInput\n                  containerStyle={{\n                    width: \"320px\"\n                  }}\n                  label={{\n                    title: \"OR No. : \",\n                    style: {\n                      fontSize: \"12px\",\n                      fontWeight: \"bold\",\n                      width: \"70px\",\n                    },\n                  }}\n                  input={{\n                    disabled: disableFields,\n                    readOnly: true,\n                    type: \"text\",\n                    style: { width: \"250px\" },\n                    onKeyDown: (e) => {\n                      if (e.code === \"NumpadEnter\" || e.code === 'Enter') {\n                        refetchNewOR()\n                      }\n                    },\n                  }}\n                  inputRef={ornoRef}\n                  icon={<RestartAltIcon sx={{ fontSize: \"18px\" }} />}\n                  onIconClick={(e) => {\n                    e.preventDefault()\n                    if (faoRef.current) {\n                      refetchNewOR()\n                    }\n                  }}\n                />}\n            <TextInput\n              label={{\n                title: \"Date : \",\n                style: {\n                  fontSize: \"12px\",\n                  fontWeight: \"bold\",\n                  width: \"70px\",\n                },\n              }}\n              input={{\n                disabled: disableFields,\n                type: \"date\",\n                style: { width: \"250px\" },\n                defaultValue: format(new Date(), \"yyyy-MM-dd\"),\n                onKeyDown: (e) => {\n                  if (e.code === \"NumpadEnter\" || e.code === 'Enter') {\n                    pnClientRef.current?.focus()\n                  }\n                },\n              }}\n\n              inputRef={dateRef}\n            />\n          </div>\n          <div style={{\n            display: \"flex\",\n            flexDirection: \"column\",\n            rowGap: \"5px\",\n            width: \"50%\"\n          }}>\n            {isLoadingClientIdsModal ? (\n              <LoadingButton loading={isLoadingClientIdsModal} />\n            ) : (\n              <TextInput\n                containerStyle={{\n                  width: \"60%\"\n                }}\n                label={{\n                  title: \"PN/Client ID : \",\n                  style: {\n                    fontSize: \"12px\",\n                    fontWeight: \"bold\",\n                    width: \"100px\",\n                  },\n                }}\n                input={{\n                  disabled: disableFields,\n                  type: \"text\",\n                  style: { flex: 1 },\n                  onKeyDown: (e) => {\n                    if (e.code === \"NumpadEnter\" || e.code === 'Enter') {\n                      openCliendIDsModal(e.currentTarget.value)\n                    }\n                  }\n                }}\n                icon={<AccountBoxIcon sx={{ fontSize: \"18px\" }} />}\n                onIconClick={(e) => {\n                  e.preventDefault()\n                  if (faoRef.current) {\n                    openCliendIDsModal(faoRef.current.value)\n                  }\n                }}\n                inputRef={pnClientRef}\n              />\n            )}\n            {ModalClientIDs}\n            <TextInput\n              label={{\n                title: \"Client Name : \",\n                style: {\n                  fontSize: \"12px\",\n                  fontWeight: \"bold\",\n                  width: \"100px\",\n                },\n              }}\n              input={{\n                disabled: disableFields,\n                type: \"text\",\n                style: { width: \"80%\" },\n                onKeyDown: (e) => {\n                  if (e.code === \"NumpadEnter\" || e.code === 'Enter') {\n                  }\n                },\n              }}\n              inputRef={clientNameRef}\n            />\n          </div>\n        </div>\n      </div>\n      <div style={{ height: \"5px\" }}></div>\n      <ContentContainer\n        title={'Particulars (Debit)'}\n        firstContent={\n          <div\n            style={{\n              display: \"flex\",\n              flexDirection: \"column\",\n              rowGap: \"5px\",\n              width: \"100%\"\n            }}\n          >\n            <div\n              style={{\n                display: \"flex\",\n                alignItems: \"center\",\n                columnGap: \"15px\",\n                marginTop: \"5px\",\n                flex: 1,\n              }}>\n              <SelectInput\n                containerStyle={{ width: \"100%\" }}\n                label={{\n                  title: \"Payment Type : \",\n                  style: {\n                    fontSize: \"12px\",\n                    fontWeight: \"bold\",\n                    width: \"100px\",\n                  },\n                }}\n                selectRef={paymentTypeRef}\n                select={{\n                  disabled: disableFields,\n                  style: { flex: 1, height: \"22px\" },\n                  value: paymentType,\n                  onKeyDown: (e) => {\n                    if (e.code === \"NumpadEnter\" || e.code === 'Enter') {\n                      e.preventDefault()\n                      amountDebitRef.current?.focus()\n                    }\n                  },\n                  onChange: (e) => {\n                    if (e.target.value === 'CHK' && amountDebitRef.current) {\n                      amountDebitRef.current.value = '0.00'\n                      wait(100).then(() => {\n                        buttonCheckSave.current?.focus()\n                      })\n                    }\n                    setPaymentType(e.target.value)\n                  }\n                }}\n                datasource={[\n                  { key: \"Cash\", value: \"CSH\" },\n                  { key: \"Check\", value: \"CHK\" },\n                ]}\n                values={\"value\"}\n                display={\"key\"}\n              />\n              <button\n                ref={buttonCheckSave}\n                disabled={paymentType === 'CSH'}\n                className={`custom-btn ripple-button ${paymentType === 'CSH' ? \"disabled\" : \"not-disabled\"}`}\n                style={{\n                  padding: \"0 5px\",\n                  borderRadius: \"0px\",\n                  color: \"white\",\n                  height: \"22px\",\n                  background: paymentType === 'CSH' ? \"#8fc993\" : \"#1b5e20\"\n\n                }}\n                onClick={(e) => {\n                  modalCheckRef.current?.showModal()\n                  wait(100).then(() => {\n                    modalCheckRef.current?.checknoRef.current?.focus()\n                  })\n                }}\n              >\n                <AddIcon sx={{ fontSize: \"22px\" }} />\n              </button>\n            </div>\n            <div\n              style={{\n                display: \"flex\",\n                alignItems: \"center\",\n                columnGap: \"15px\"\n              }}>\n              <TextFormatedInput\n                containerStyle={{\n                  flex: 1\n                }}\n                label={{\n                  title: \"Amount : \",\n                  style: {\n                    fontSize: \"12px\",\n                    fontWeight: \"bold\",\n                    width: \"100px\",\n                  },\n                }}\n                input={{\n                  disabled: paymentType === 'CHK' || disableFields,\n                  type: \"text\",\n                  style: { flex: 1 },\n                  onKeyDown: (e) => {\n                    if (e.code === \"NumpadEnter\" || e.code === 'Enter') {\n                      buttonCshSave.current?.click()\n                    }\n                  }\n                }}\n                inputRef={amountDebitRef}\n              />\n              <button\n                ref={buttonCshSave}\n                disabled={paymentType === 'CHK'}\n                className={`custom-btn ripple-button ${paymentType === 'CHK' ? \"disabled\" : \"not-disabled\"}`}\n                style={{\n                  padding: \"0 5px\",\n                  borderRadius: \"0px\",\n                  color: \"white\",\n                  height: \"22px\",\n                  background: paymentType === 'CHK' ? \"#8fc993\" : \"#1b5e20\"\n\n                }}\n                onClick={(e) => {\n                  if (amountDebitRef.current && paymentTypeRef.current) {\n                    saveCashDebit(amountDebitRef.current.value, paymentTypeRef.current.value)\n                  }\n                }}\n              >\n                <ForwardIcon sx={{ fontSize: \"22px\" }} />\n              </button>\n            </div>\n            <Button\n              ref={buttonCheckList}\n              disabled={paymentType === 'CSH'}\n              startIcon={<AddIcon />}\n              sx={{\n                height: \"30px\",\n                fontSize: \"11px\",\n                marginTop: \"20px\"\n              }}\n              color=\"success\"\n              variant=\"contained\"\n              onClick={openModal}\n            >\n              Add Check from PDC Entry\n            </Button>\n          </div>\n        }\n        secondContent={\n          <div\n            style={{\n              position: \"relative\",\n              height: \"100%\",\n              width: \"100%\",\n              flex: 1,\n              display: \"flex\",\n              flexDirection: \"column\"\n            }}>\n            <DataGridViewReact\n              ref={debitTable}\n              columns={debitColumn}\n              rows={[]}\n              containerStyle={{\n                height: 'auto',\n                flex: 1,\n              }}\n              getSelectedItem={(rowItm: any) => {\n                if (rowItm) {\n\n                  if (rowItm[0] === 'Cash') {\n                    wait(100).then(() => {\n                      if (amountDebitRef.current)\n                        amountDebitRef.current.value = rowItm[1]\n                    })\n                  } else {\n                    if (rowItm[7] && rowItm[7] !== '') {\n                      debitTable.current.setSelectedRow(null)\n                      buttonCheckSave.current?.focus()\n                      return alert(` Unable to edit. Check No [${rowItm[2]}] already deposited!`)\n                    }\n                    if (rowItm[8] && rowItm[8] !== '') {\n                      debitTable.current.setSelectedRow(null)\n                      buttonCheckSave.current?.focus()\n                      return alert(` Unable to edit. Check No [${rowItm[2]}] is a PDC reference!`)\n                    }\n                    const strBank = rowItm[4].split('/')\n                    const BankName = executeQueryToClient(`select * from bank where Bank_Code = '${strBank[0]}'`)\n\n\n                    modalCheckRef.current?.showModal()\n\n                    wait(100).then(() => {\n                      if (modalCheckRef.current) {\n                        if (modalCheckRef.current.checknoRef.current) {\n                          modalCheckRef.current.checknoRef.current.value = rowItm[2]\n                        }\n                        if (modalCheckRef.current.bankRef.current) {\n                          modalCheckRef.current.bankRef.current.value = strBank[0]\n                        }\n                        if (modalCheckRef.current.branchRef.current) {\n                          modalCheckRef.current.branchRef.current.value = rowItm[4]\n                        }\n                        if (modalCheckRef.current.remarksRef.current) {\n                          modalCheckRef.current.remarksRef.current.value = rowItm[9]\n                        }\n                        if (modalCheckRef.current.checkdateRef.current) {\n                          modalCheckRef.current.checkdateRef.current.value = rowItm[3]\n                        }\n                        if (modalCheckRef.current.amountRef.current) {\n                          modalCheckRef.current.amountRef.current.value = rowItm[1]\n                        }\n                        if (modalCheckRef.current.bankRefName.current) {\n                          modalCheckRef.current.bankRefName.current = BankName\n                        }\n\n                      }\n                    })\n                  }\n\n                } else {\n                  wait(100).then(() => {\n                    if (amountDebitRef.current)\n                      amountDebitRef.current.value = '0.00'\n                  })\n                }\n              }}\n              onKeyDown={(rowItm: any, rowIdx: any, e: any) => {\n                if (e.code === 'Delete' || e.code === 'Backspace') {\n                  const isConfim = window.confirm(`Are you sure you want to delete?`)\n                  if (isConfim) {\n                    const debitTableData = debitTable.current.getData()\n                    debitTableData.splice(rowIdx, 1);\n                    debitTable.current.setData(debitTableData)\n                    setTotalDebit(\n                      debitTableData.reduce((sum: any, subArray: any) => sum + parseFloat(subArray[1].replace(/,/g, '')), 0)\n                    )\n                    return\n                  }\n                }\n              }}\n            />\n            <div\n              style={{\n                fontSize: \"13px\",\n                textAlign: \"right\",\n                border: \"1px solid #d1cdcd\",\n                background: \"#dcdcdc\",\n                fontWeight: \"bold\"\n              }}>{totalDebit.toLocaleString(\"en-US\", {\n                minimumFractionDigits: 2,\n                maximumFractionDigits: 2,\n              })}</div>\n          </div>\n        }\n        contentStyle={`\n          .custom-btn.not-disabled:hover{\n            background:#154f19 !important;\n          }\n          `}\n      />\n      <div style={{ height: \"5px\" }}></div>\n      <ContentContainer\n        title={'Particulars Breakdown (Credit)'}\n        firstContent={\n          <div\n            style={{\n              display: \"flex\",\n              rowGap: \"5px\",\n              flexDirection: \"column\"\n            }}\n          >\n            <label\n              htmlFor=\"auto-solo-collection\"\n              style={{\n                fontSize: \"12px\",\n                fontWeight: \"bold\",\n                marginTop: \"5px\"\n              }}\n\n            >Transaction :</label>\n            <div\n              style={{\n                display: \"flex\",\n                alignItems: \"center\",\n                columnGap: \"15px\",\n                flex: 1,\n              }}>\n\n              {paymentTypeLoading ?\n                <LoadingButton loading={paymentTypeLoading} />\n                : <div style={{ flex: 1 }}>\n                  <Autocomplete\n                    label={\n                      {\n                        title: \" \",\n                        style: {\n                          width: \"0px\",\n                          display: \"none\"\n                        },\n                      }\n                    }\n                    input={{\n                      id: \"auto-solo-collection\",\n                      style: {\n                        width: \"100%\",\n                        flex: 1\n                      }\n                    }}\n                    width={\"100%\"}\n                    DisplayMember={'Description'}\n                    DataSource={transactionDesc?.data.transactionDesc}\n                    disableInput={disableFields}\n                    inputRef={transactionRef}\n                    onChange={(selected: any, e: any) => {\n                      console.log(selected)\n                      if (transactionRef.current)\n                        transactionRef.current.value = selected.Description\n\n                      accCodeRef.current = selected.Acct_Code\n                      accTitleRef.current = selected.Acct_Title\n                      accTCRef.current = selected.Code\n                    }}\n                    onKeydown={(e: any) => {\n                      if (e.key === \"Enter\" || e.key === 'NumpadEnter') {\n                        e.preventDefault()\n                        amountCreditRef.current?.focus()\n                      }\n                    }}\n                  />\n                </div>}\n              <button\n                className=\"custom-btn ripple-button\"\n                style={{\n                  background: \"#1b5e20\",\n                  padding: \"0 5px\",\n                  borderRadius: \"0px\",\n                  color: \"white\",\n                  height: \"22px\"\n                }}\n                onClick={() => {\n                  wait(100).then(() => {\n                    if (transactionRef.current) {\n                      transactionRef.current.value = ''\n                    }\n                    if (amountCreditRef.current) {\n                      amountCreditRef.current.value = '0.00'\n                    }\n                    if (faoRef.current) {\n                      faoRef.current.value = ''\n                    }\n                    if (remarksRef.current) {\n                      remarksRef.current.value = ''\n                    }\n                    if (vatTypeRef.current) {\n                      vatTypeRef.current.value = 'Non-VAT'\n                    }\n                    if (invoiceRef.current) {\n                      invoiceRef.current.value = ''\n                    }\n                    accCodeRef.current = ''\n                    accTitleRef.current = ''\n                    accTCRef.current = ''\n                    foaIDNoRef.current = ''\n                    transactionRef.current?.focus()\n                    creditTable.current.setSelectedRow(null)\n\n                  })\n                }}\n              >\n                <AddIcon sx={{ fontSize: \"22px\" }} />\n              </button>\n            </div>\n            <div\n              style={{\n                display: \"flex\",\n                alignItems: \"center\",\n                columnGap: \"15px\",\n                width: \"100%\",\n                flex: 1\n              }}>\n              <TextFormatedInput\n                containerStyle={{\n                  flex: 1\n                }}\n                label={{\n                  title: \"Amount : \",\n                  style: {\n                    fontSize: \"12px\",\n                    fontWeight: \"bold\",\n                    width: \"70px\",\n                  },\n                }}\n                input={{\n                  disabled: disableFields,\n                  type: \"text\",\n                  style: { flex: 1, width: \"100%\" },\n                  onKeyDown: (e) => {\n                    if (e.code === \"NumpadEnter\" || e.code === 'Enter') {\n                      faoRef.current?.focus()\n                    }\n                  }\n                }}\n                inputRef={amountCreditRef}\n              />\n\n              <button\n                className=\"custom-btn ripple-button\"\n                style={{\n                  background: \"#1b5e20\",\n                  padding: \"0 5px\",\n                  borderRadius: \"0px\",\n                  color: \"white\",\n                  height: \"22px\"\n                }}\n                onClick={() => {\n                  saveCredit()\n                }}\n              >\n                <ForwardIcon sx={{ fontSize: \"22px\" }} />\n              </button>\n            </div>\n            {isLoadingCreditClientIdsModal ? (\n              <LoadingButton loading={isLoadingCreditClientIdsModal} />\n            ) : (\n              <TextInput\n                containerStyle={{\n                  width: \"100%\"\n                }}\n                label={{\n                  title: \"Usage : \",\n                  style: {\n                    fontSize: \"12px\",\n                    fontWeight: \"bold\",\n                    width: \"70px\",\n                  },\n                }}\n                input={{\n                  disabled: disableFields,\n                  type: \"text\",\n                  style: { flex: 1 },\n                  onKeyDown: (e) => {\n                    if (e.code === \"NumpadEnter\" || e.code === 'Enter') {\n                      openCreditCliendIDsModal(e.currentTarget.value)\n                    }\n                  }\n                }}\n                icon={<AccountBoxIcon sx={{ fontSize: \"18px\" }} />}\n                onIconClick={(e) => {\n                  e.preventDefault()\n                  if (faoRef.current) {\n                    openCreditCliendIDsModal(faoRef.current.value)\n                  }\n                }}\n                inputRef={faoRef}\n              />\n            )}\n            {ModalCreditClientIDs}\n            <TextAreaInput\n              label={{\n                title: \"Remarks : \",\n                style: {\n                  fontSize: \"12px\",\n                  fontWeight: \"bold\",\n                  width: \"70px\",\n                },\n              }}\n              textarea={{\n                disabled: disableFields,\n                rows: 3,\n                style: { flex: 1 },\n                onKeyDown: (e) => {\n                  e.stopPropagation()\n                  if ((e.code === \"NumpadEnter\" && !e.shiftKey) || (e.code === 'Enter' && !e.shiftKey)) {\n                    vatTypeRef.current?.focus()\n                  }\n                },\n              }}\n              _inputRef={remarksRef}\n            />\n            <SelectInput\n              label={{\n                title: \"Vat Type : \",\n                style: {\n                  fontSize: \"12px\",\n                  fontWeight: \"bold\",\n                  width: \"70px\",\n                },\n              }}\n              selectRef={vatTypeRef}\n              select={{\n                disabled: disableFields,\n                style: { flex: 1, height: \"22px\" },\n                defaultValue: \"Non-VAT\",\n                onKeyDown: (e) => {\n                  if (e.code === \"NumpadEnter\" || e.code === 'Enter') {\n                    e.preventDefault()\n                    invoiceRef.current?.focus()\n                  }\n                }\n              }}\n              datasource={[\n                { key: \"VAT\", value: \"VAT\" },\n                { key: \"Non-VAT\", value: \"Non-VAT\" },\n              ]}\n              values={\"value\"}\n              display={\"key\"}\n            />\n            <TextInput\n              label={{\n                title: \"Invoice : \",\n                style: {\n                  fontSize: \"12px\",\n                  fontWeight: \"bold\",\n                  width: \"70px\",\n                },\n              }}\n              input={{\n                disabled: disableFields,\n                type: \"text\",\n                style: { flex: 1 },\n                onKeyDown: (e) => {\n                  if (e.code === \"NumpadEnter\" || e.code === 'Enter') {\n                    saveCredit()\n                  }\n                },\n              }}\n              inputRef={invoiceRef}\n            />\n          </div>\n        }\n        secondContent={\n          <div style={{\n            position: \"relative\",\n            height: \"100%\",\n            width: \"100%\",\n            flex: 1,\n            display: \"flex\",\n            flexDirection: \"column\"\n          }}>\n            <DataGridViewReact\n              ref={creditTable}\n              columns={creditColumn}\n              rows={[]}\n              containerStyle={{\n                height: 'auto',\n                flex: 1,\n              }}\n              getSelectedItem={(rowItm: any) => {\n                if (rowItm) {\n                  wait(100).then(() => {\n                    if (transactionRef.current) {\n                      transactionRef.current.value = rowItm[0]\n                    }\n                    if (amountCreditRef.current) {\n                      amountCreditRef.current.value = rowItm[1]\n                    }\n                    if (faoRef.current) {\n                      faoRef.current.value = rowItm[2]\n                    }\n                    if (remarksRef.current) {\n                      remarksRef.current.value = rowItm[3]\n                    }\n                    if (vatTypeRef.current) {\n                      vatTypeRef.current.value = rowItm[4]\n                    }\n                    if (invoiceRef.current) {\n                      invoiceRef.current.value = rowItm[5]\n                    }\n                    accCodeRef.current = rowItm[6]\n                    accTitleRef.current = rowItm[7]\n                    accTCRef.current = rowItm[8]\n                    foaIDNoRef.current = rowItm[9]\n                  })\n                } else {\n                  wait(100).then(() => {\n                    if (transactionRef.current) {\n                      transactionRef.current.value = ''\n                    }\n                    if (amountCreditRef.current) {\n                      amountCreditRef.current.value = '0.00'\n                    }\n                    if (faoRef.current) {\n                      faoRef.current.value = ''\n                    }\n                    if (remarksRef.current) {\n                      remarksRef.current.value = ''\n                    }\n                    if (vatTypeRef.current) {\n                      vatTypeRef.current.value = 'Non-VAT'\n                    }\n                    if (invoiceRef.current) {\n                      invoiceRef.current.value = ''\n                    }\n                    accCodeRef.current = ''\n                    accTitleRef.current = ''\n                    accTCRef.current = ''\n                    foaIDNoRef.current = ''\n\n                  })\n                }\n\n              }}\n              onKeyDown={(rowItm: any, rowIdx: any, e: any) => {\n                if (e.code === 'Delete' || e.code === 'Backspace') {\n                  const isConfim = window.confirm(`Are you sure you want to delete?`)\n                  if (isConfim) {\n                    const creditTableData = creditTable.current.getData()\n                    creditTableData.splice(rowIdx, 1);\n                    creditTable.current.setData(creditTableData)\n                    setTotalCredit(\n                      creditTableData.reduce((sum: any, subArray: any) => sum + parseFloat(subArray[1].replace(/,/g, '')), 0)\n                    )\n                    return\n                  }\n                }\n              }}\n            />\n            <div\n              style={{\n                fontSize: \"13px\",\n                textAlign: \"right\",\n                border: \"1px solid #d1cdcd\",\n                background: \"#dcdcdc\",\n                fontWeight: \"bold\"\n              }}>{totalCredit.toLocaleString(\"en-US\", {\n                minimumFractionDigits: 2,\n                maximumFractionDigits: 2,\n              })}</div>\n          </div>\n        }\n        contentStyle={`\n          .custom-btn.not-disabled:hover{\n            background:#154f19 !important;\n          }\n            .custom-btn:focus{\n              outline:3px solid #2563eb;\n            }\n        `}\n      />\n\n    </div>\n  )\n}\n\n\n\nconst ContentContainer = ({\n  firstContent,\n  secondContent,\n  title,\n  contentStyle\n}: any) => {\n\n  return (\n    <div\n      style={{\n        width: \"100%\",\n        height: \"38%\",\n        display: \"flex\",\n        padding: \"5px\"\n      }}\n    >\n      <style>{contentStyle}</style>\n      <div style={{\n        flex: 1,\n        display: \"flex\",\n        width: \"100%\",\n        border: \"1px solid #64748b\",\n        position: \"relative\",\n      }}>\n        <span\n          style={{\n            position: \"absolute\",\n            top: \"-15px\",\n            left: \"20px\",\n            background: \"#F1F1F1\",\n            padding: \"0 5px\",\n            fontSize: \"14px\",\n            fontWeight: \"bold\"\n          }}\n        >{title}</span>\n        <div\n          style={{\n            width: \"30%\",\n            height: \"100%\",\n            padding: \"10px 5px\",\n            boxSizing: \"border-box\"\n          }}\n        >\n          {firstContent}\n        </div>\n        <div\n          style={{\n            width: \"70%\",\n            height: \"100%\",\n            padding: \"10px 5px\",\n            boxSizing: \"border-box\"\n          }}\n        >\n          {secondContent}\n        </div>\n      </div>\n    </div>\n  )\n}\nconst ModalCheck = forwardRef(({\n  handleOnSave,\n  handleOnClose\n}: any, ref) => {\n  const [showModal, setShowModal] = useState(false)\n  const [handleDelayClose, setHandleDelayClose] = useState(false)\n  const [blick, setBlick] = useState(false)\n\n  const checknoRef = useRef<HTMLInputElement>(null)\n  const bankRef = useRef<HTMLInputElement>(null)\n  const branchRef = useRef<HTMLInputElement>(null)\n  const remarksRef = useRef<HTMLTextAreaElement>(null)\n  const checkdateRef = useRef<HTMLInputElement>(null)\n  const amountRef = useRef<HTMLInputElement>(null)\n  const bankRefName = useRef('')\n  const searchModalInputRef = useRef<HTMLInputElement>(null)\n\n  const closeDelay = () => {\n    setHandleDelayClose(true)\n    setTimeout(() => {\n      setShowModal(false)\n      setHandleDelayClose(false)\n      handleOnClose()\n    }, 100)\n  }\n  const closeDelayRef = useRef<any>(closeDelay)\n\n  useImperativeHandle(ref, () => ({\n\n    showModal: () => {\n      setShowModal(true)\n    },\n    clsoeModal: () => {\n      setShowModal(false)\n    },\n    getRefs: () => {\n      const refs = {\n        checknoRef,\n        bankRef,\n        branchRef,\n        remarksRef,\n        checkdateRef,\n        amountRef,\n        bankRefName\n      }\n      return refs\n    },\n    checknoRef,\n    bankRef,\n    branchRef,\n    remarksRef,\n    checkdateRef,\n    amountRef,\n    bankRefName,\n    searchModalInputRef,\n    closeDelay\n\n  }))\n\n  const {\n    ModalComponent: ModalSearchBanks,\n    openModal: openModalSearchBanks,\n    closeModal: closeModalSearchBanks,\n    isLoading: isLoadingModalSearchbanks,\n  } = useQueryModalTable({\n    link: {\n      url: \"/task/accounting/search-pdc-banks\",\n      queryUrlName: \"searchPdcBanks\",\n    },\n    columns: [\n      { field: \"Bank_Code\", headerName: \"Code\", width: 130 },\n      { field: \"Bank\", headerName: \"Bank Name\", flex: 1 },\n    ],\n    queryKey: \"collection-banks\",\n    uniqueId: \"Bank_Code\",\n    responseDataKey: \"pdcBanks\",\n    onSelected: (selectedRowData, data) => {\n      wait(100).then(() => {\n        bankRefName.current = selectedRowData[0].Bank_Code\n        if (bankRef.current) {\n          bankRef.current.value = selectedRowData[0].Bank\n        }\n        branchRef.current?.focus()\n      })\n      closeModalSearchBanks();\n    },\n\n    searchRef: searchModalInputRef,\n  });\n\n  useEffect(() => {\n    window.addEventListener('keydown', (e: any) => {\n      if (e.key === \"Escape\") {\n        closeDelayRef.current()\n      }\n    })\n  }, [])\n\n  return (\n    showModal ?\n      <>\n        <div style={{\n          position: \"fixed\",\n          top: 0,\n          bottom: 0,\n          left: 0,\n          right: 0,\n          background: \"transparent\",\n          zIndex: \"88\"\n        }}\n          onClick={() => {\n            setBlick(true)\n            setTimeout(() => {\n              setBlick(false)\n            }, 250)\n          }}\n\n        ></div>\n        <div\n\n          style={{\n            height: blick ? \"202px\" : \"200px\",\n            width: blick ? \"60.3%\" : \"60%\",\n            border: \"1px solid #64748b\",\n            position: \"absolute\",\n            left: \"50%\",\n            top: \"50%\",\n            transform: \"translate(-50%, -75%)\",\n            display: \"flex\",\n            flexDirection: \"column\",\n            zIndex: handleDelayClose ? -100 : 100,\n            opacity: handleDelayClose ? 0 : 1,\n            transition: \"all 150ms\",\n            boxShadow: '3px 6px 32px -7px rgba(0,0,0,0.75)'\n          }}>\n          <div\n            style={{\n              height: \"22px\",\n              background: \"white\",\n              display: \"flex\",\n              justifyContent: \"space-between\",\n              padding: \"5px\",\n              position: \"relative\",\n              alignItems: \"center\"\n\n            }}\n          >\n            <span style={{ fontSize: \"13px\", fontWeight: \"bold\" }}>Check Details</span>\n            <button\n              className=\"btn-check-exit-modal\"\n              style={{\n                padding: \"0 5px\",\n                borderRadius: \"0px\",\n                background: \"white\",\n                color: \"black\",\n                height: \"22px\",\n                position: \"absolute\",\n                top: 0,\n                right: 0\n              }}\n              onClick={() => {\n                closeDelay()\n              }}\n            >\n              <CloseIcon sx={{ fontSize: \"22px\" }} />\n            </button>\n          </div>\n          <div\n            style={{\n              flex: 1,\n              background: \"#F1F1F1\",\n              padding: \"5px\",\n              display: \"flex\",\n            }}\n          >\n            <div style={{\n              width: \"55%\",\n              display: \"flex\",\n              flexDirection: \"column\",\n              rowGap: \"5px\",\n              padding: \"10px\"\n\n            }}>\n              <TextInput\n                label={{\n                  title: \"Check No. : \",\n                  style: {\n                    fontSize: \"12px\",\n                    fontWeight: \"bold\",\n                    width: \"70px\",\n                  },\n                }}\n                input={{\n                  type: \"text\",\n                  style: { width: \"160px\" },\n                  onKeyDown: (e) => {\n                    if (e.code === \"NumpadEnter\" || e.code === 'Enter') {\n                      bankRef.current?.focus()\n                    }\n                  },\n                }}\n                inputRef={checknoRef}\n              />\n              {isLoadingModalSearchbanks ? (\n                <LoadingButton loading={isLoadingModalSearchbanks} />\n              ) : (\n                <TextInput\n                  containerStyle={{\n                    width: \"370px\"\n                  }}\n                  label={{\n                    title: \"Bank : \",\n                    style: {\n                      fontSize: \"12px\",\n                      fontWeight: \"bold\",\n                      width: \"70px\",\n                    },\n                  }}\n                  input={{\n                    disabled: false,\n                    type: \"text\",\n                    style: { width: \"300px\" },\n                    onKeyDown: (e) => {\n                      if (e.code === \"NumpadEnter\" || e.code === 'Enter') {\n                        openModalSearchBanks(e.currentTarget.value)\n                      }\n                    }\n                  }}\n                  icon={<AccountBoxIcon sx={{ fontSize: \"18px\" }} />}\n                  onIconClick={(e) => {\n                    e.preventDefault()\n                    if (bankRef.current) {\n                      openModalSearchBanks(bankRef.current.value)\n                    }\n                  }}\n                  inputRef={bankRef}\n                />\n              )}\n              <TextInput\n                label={{\n                  title: \"Branch : \",\n                  style: {\n                    fontSize: \"12px\",\n                    fontWeight: \"bold\",\n                    width: \"70px\",\n                  },\n                }}\n                input={{\n                  type: \"text\",\n                  style: { width: \"300px\" },\n                  onKeyDown: (e) => {\n                    if (e.code === \"NumpadEnter\" || e.code === 'Enter') {\n                      remarksRef.current?.focus()\n                    }\n                  },\n                }}\n                inputRef={branchRef}\n              />\n              <TextAreaInput\n                label={{\n                  title: \"Remarks : \",\n                  style: {\n                    fontSize: \"12px\",\n                    fontWeight: \"bold\",\n                    width: \"70px\",\n                  },\n                }}\n                textarea={{\n                  rows: 4,\n                  style: { width: \"300px\" },\n                  onKeyDown: (e) => {\n                    e.stopPropagation()\n                    if ((e.code === \"NumpadEnter\" && !e.shiftKey) || (e.code === 'Enter' && !e.shiftKey)) {\n                      checkdateRef.current?.focus()\n                    }\n                  },\n                }}\n                _inputRef={remarksRef}\n              />\n\n            </div>\n            <div style={{\n              width: \"45%\",\n              display: \"flex\",\n              flexDirection: \"column\",\n              rowGap: \"5px\",\n              position: \"relative\",\n              padding: \"10px\",\n              alignItems: \"flex-end\"\n            }}>\n              <TextInput\n                label={{\n                  title: \"Date : \",\n                  style: {\n                    fontSize: \"12px\",\n                    fontWeight: \"bold\",\n                    width: \"70px\",\n                  },\n                }}\n                input={{\n                  type: \"date\",\n                  style: { width: \"200px\" },\n                  defaultValue: format(new Date(), \"yyyy-MM-dd\"),\n                  onKeyDown: (e) => {\n                    if (e.code === \"NumpadEnter\" || e.code === 'Enter') {\n                      amountRef.current?.focus()\n                    }\n                  },\n                }}\n\n                inputRef={checkdateRef}\n              />\n              <TextFormatedInput\n                label={{\n                  title: \"Amount : \",\n                  style: {\n                    fontSize: \"12px\",\n                    fontWeight: \"bold\",\n                    width: \"70px\",\n                  },\n                }}\n                input={{\n                  type: \"text\",\n                  style: { width: \"200px\" },\n                  onKeyDown: (e) => {\n                    if (e.code === \"NumpadEnter\" || e.code === 'Enter') {\n                      if (handleOnSave) {\n                        handleOnSave()\n                      }\n                    }\n                  }\n                }}\n                inputRef={amountRef}\n              />\n              <div style={{\n                display: \"flex\",\n                columnGap: \"10px\",\n                flex: 1,\n                justifyContent: \"flex-end\",\n                alignItems: \"flex-end\"\n              }}>\n                <Button\n                  variant=\"contained\"\n                  color=\"success\"\n                  style={{\n                    height: \"22px\",\n                    fontSize: \"12px\",\n                  }}\n                  onClick={(e) => {\n                    if (handleOnSave) {\n                      handleOnSave()\n                    }\n\n                  }}\n                >\n                  OK\n                </Button>\n                <Button\n                  variant=\"contained\"\n                  color=\"success\"\n                  style={{\n                    height: \"22px\",\n                    fontSize: \"12px\",\n                  }}\n                  onClick={(e) => {\n                    closeDelay()\n                  }}\n                >\n                  Cancel\n                </Button>\n\n              </div>\n            </div>\n          </div>\n          {ModalSearchBanks}\n          <style>\n            {`\n              .btn-check-exit-modal:hover{\n                background:red !important;\n                color:white !important;\n              }\n            `}\n          </style>\n        </div>\n      </>\n      : null\n  )\n})\n","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-7 3c1.93 0 3.5 1.57 3.5 3.5S13.93 13 12 13s-3.5-1.57-3.5-3.5S10.07 6 12 6zm7 13H5v-.23c0-.62.28-1.2.76-1.58C7.47 15.82 9.64 15 12 15s4.53.82 6.24 2.19c.48.38.76.97.76 1.58V19z\"\n}), 'AccountBox');\nexports.default = _default;","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 8V4l8 8-8 8v-4H4V8z\"\n}), 'Forward');\nexports.default = _default;","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19 8H5c-1.66 0-3 1.34-3 3v6h4v4h12v-4h4v-6c0-1.66-1.34-3-3-3zm-3 11H8v-5h8v5zm3-7c-.55 0-1-.45-1-1s.45-1 1-1 1 .45 1 1-.45 1-1 1zm-1-9H6v4h12V3z\"\n}), 'LocalPrintshop');\nexports.default = _default;"],"names":["debitColumn","key","label","flex","width","type","hide","creditColumn","queryKeyPaymentType","queryKeyNewORNumber","Collection","_getSelectedItem","_queryFn","_mutationFn","_queryFn2","_mutationFn2","_mutationFn3","_saveCashDebit","_saveCredit","debitTable","useRef","creditTable","modalCheckRef","_useState","useState","_useState2","_slicedToArray","paymentType","setPaymentType","_useState3","_useState4","totalDebit","setTotalDebit","_useState5","_useState6","totalCredit","setTotalCredit","_useState7","_useState8","collectionMode","setCollectionMode","searchRef","ornoSubRef","ornoRef","dateRef","pnClientRef","clientNameRef","IDNo","paymentTypeRef","amountDebitRef","buttonCshSave","buttonCheckSave","buttonCheckList","transactionRef","amountCreditRef","faoRef","remarksRef","vatTypeRef","invoiceRef","foaIDNoRef","accCodeRef","accTitleRef","accTCRef","searchModalInputRef","_useContext","useContext","AuthContext","myAxios","user","executeQueryToClient","useExecuteQueryFromClient","disableFields","_useUpwardTableModalS","useUpwardTableModalSearch","column","query","search","current","concat","value","getSelectedItem","_x","_x2","_x3","_x4","_asyncToGenerator","_regeneratorRuntime","mark","_callee","rowItm","_","rowIdx","__","dt","checkDetails","wrap","_context","prev","next","sent","data","wait","then","checknoRef","Check_No","bankRef","Bank","branchRef","Branch","Remarks","checkdateRef","Check_Date","amountRef","Check_Amnt","bankRefName","BName","saveCheckDebit","closeModal","_buttonCheckList$curr","focus","stop","apply","arguments","UpwardTableModalSearch","openModal","_useQuery","useQuery","queryKey","queryFn","_callee2","_context2","get","headers","Authorization","accessToken","abrupt","refetchOnWindowFocus","paymentTypeLoading","isLoading","transactionDesc","_useQueryModalTable","useQueryModalTable","link","url","queryUrlName","columns","field","headerName","uniqueId","responseDataKey","onSelected","selectedRowData","_paymentTypeRef$curre","_selectedRowData$0$Na","client_id","Name","closeCliendIDsModal","ModalClientIDs","ModalComponent","openCliendIDsModal","isLoadingClientIdsModal","_useQueryModalTable2","_remarksRef$current","_selectedRowData$0$Na2","closeCreditCliendIDsModal","ModalCreditClientIDs","openCreditCliendIDsModal","isLoadingCreditClientIdsModal","_useMutation","useMutation","mutationKey","mutationFn","_x5","_callee3","variables","_context3","ORNo","onSuccess","res","dataCollection","collection","Date_OR","ID_No","Short","debit","credit","i","length","Payment","toString","isCash","push","Amount","Debit","format","Date","Bank_Branch","Acct_Code","DRCode","Acct_Title","DRTitle","Deposit_Slip","SlipCode","Cntr","DRRemarks","TC","Bank_Code","BankName","Purpose","temp_id","transaction","amount","Credit","CRRemarks","Code","CRCode","Title","CRTitle","Account_No","CRLoanID","CRLoanName","VATType","CRVATType","invoiceNo","CRInvoiceNo","setDataFormated","reduce","sum","subArray","parseFloat","replace","closeModalSearchCollection","loadingCollectionDataSearch","mutateCollectionDataSearch","mutate","_useQueryModalTable3","resetCredit","resetDebit","ModalSearchCollection","openModalSearchCollection","isLoadingModalSearchCollection","_useQuery2","_callee4","_context4","response","_response$data","_response$data2","collectionID","NewORNoLoading","refetchNewOR","refetch","_useMutation2","_x6","_callee5","_context5","mode","post","success","resetCollection","Swal","position","icon","title","message","showConfirmButton","timer","loadingAddNew","_useMutation3","_x7","_callee6","_context6","data1","console","log","flushSync","localStorage","removeItem","setItem","JSON","stringify","department","window","open","printOR","mutataPrint","isLoadingPrint","_debitTable$current","_creditTable$current","_pnClientRef$current","setData","refs","autoClose","undefined","_callee8","_refs$amountRef$curre","_refs$checknoRef$curr","_refs$checkdateRef$cu","_refs$branchRef$curre","_refs$remarksRef$curr","_refs$bankRef$current","checkno","checkdate","branch","remarks","bank","getSelectedRow","debitTableData","_dd$data3","_dd$data4","dd","_debitTableData","newDataFormatted","newDataTable","_context8","checkNoIsExist","alert","getData","toLocaleString","minimumFractionDigits","maximumFractionDigits","setSelectedRow","map","itm","_toConsumableArray","closeDelay","saveCredit","_callee9","_dd$data$data","_faoRef$current","_transactionRef$curre","_amountCreditRef$curr","_faoRef$current2","_remarksRef$current2","_vatTypeRef$current","_invoiceRef$current","creditTableData","_transactionRef$curre2","_amountCreditRef$curr2","_faoRef$current3","_remarksRef$current3","_vatTypeRef$current2","_invoiceRef$current2","_creditTableData","newCreditTableData","_dd","taxableamt","inputtax","_faoRef$current4","_remarksRef$current4","_invoiceRef$current3","_dd$data5","_dd$data6","_TC$data","newData","_faoRef$current5","_remarksRef$current5","_invoiceRef$current4","_dd$data7","_dd$data8","_TC$data2","_newData","_context9","isNaN","splice","_modalCheckRef$curren","setFocus","_amountDebitRef$curre3","_transactionRef$curre3","_jsxs","style","height","background","children","_jsx","PageHelmet","ModalCheck","ref","handleOnSave","getRefs","handleOnClose","_buttonCheckSave$curr","Loading","display","flexDirection","padding","columnGap","LoadingButton","loading","TextInput","containerStyle","fontSize","fontWeight","input","className","onKeyDown","e","preventDefault","currentTarget","SearchIcon","sx","onIconClick","inputRef","IconButton","size","color","onClick","AddIcon","disabled","_ornoRef$current","_dateRef$current","_pnClientRef$current2","_clientNameRef$curren","_paymentTypeRef$curre2","_transactionRef$curre4","obj","toFixed","creditTableDataFormatted","debitTableDataFormatted","state","PNo","codeCondfirmationAlert","isUpdate","cb","userCodeConfirmation","_objectSpread","saveCondfirmationAlert","isConfirm","SaveIcon","LocalPrintshopIcon","text","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","result","isConfirmed","CloseIcon","border","alignItems","rowGap","readOnly","code","RestartAltIcon","defaultValue","_pnClientRef$current3","AccountBoxIcon","ContentContainer","firstContent","marginTop","SelectInput","selectRef","select","_amountDebitRef$curre4","onChange","target","_buttonCheckSave$curr2","datasource","values","borderRadius","_modalCheckRef$curren2","showModal","_modalCheckRef$curren3","_modalCheckRef$curren4","TextFormatedInput","_buttonCshSave$curren","click","_x8","_x9","_callee7","_amountDebitRef$curre","_dd$data","_dd$data2","_amountDebitRef$curre2","_context7","saveCashDebit","ForwardIcon","Button","startIcon","variant","secondContent","DataGridViewReact","rows","_modalCheckRef$curren5","_buttonCheckSave$curr3","_buttonCheckSave$curr4","strBank","split","confirm","textAlign","contentStyle","htmlFor","Autocomplete","id","DisplayMember","DataSource","disableInput","selected","Description","onKeydown","_amountCreditRef$curr3","_transactionRef$curre5","_faoRef$current6","TextAreaInput","textarea","_vatTypeRef$current3","stopPropagation","shiftKey","_inputRef","_invoiceRef$current5","_ref2","top","left","boxSizing","forwardRef","_ref3","_useState9","_useState10","setShowModal","_useState11","_useState12","handleDelayClose","setHandleDelayClose","_useState13","_useState14","blick","setBlick","setTimeout","closeDelayRef","useImperativeHandle","clsoeModal","_useQueryModalTable4","_branchRef$current","closeModalSearchBanks","ModalSearchBanks","openModalSearchBanks","isLoadingModalSearchbanks","useEffect","addEventListener","_Fragment","bottom","right","zIndex","transform","opacity","transition","boxShadow","justifyContent","_bankRef$current","_remarksRef$current6","_checkdateRef$current","_amountRef$current","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d"],"sourceRoot":""}