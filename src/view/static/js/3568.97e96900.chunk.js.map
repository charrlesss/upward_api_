{"version":3,"file":"static/js/3568.97e96900.chunk.js","mappings":"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","sources":["components/Helmet.tsx","feautures/Admin/Task/Accounting/CheckPulloutApproved.tsx","../node_modules/@mui/icons-material/Search.js"],"sourcesContent":["\r\nimport { Helmet } from \"react-helmet\";\r\n\r\nconst PageHelmet = ({ title = '' }: { title: string }) => {\r\n    const imgUrl = process.env.REACT_APP_IMAGE_URL;\r\n    return (\r\n        <Helmet>\r\n            <title>{title}</title>\r\n            <link rel=\"icon\" type=\"image/png\" href={`${imgUrl}/logo.png`} />\r\n        </Helmet>\r\n    );\r\n};\r\n\r\nexport default PageHelmet;","import { LoadingButton } from \"@mui/lab\";\r\nimport { useContext, useRef, useState } from \"react\";\r\nimport { useMutation, useQuery } from \"react-query\";\r\nimport { AuthContext } from \"../../../../components/AuthContext\";\r\nimport useExecuteQueryFromClient from \"../../../../lib/executeQueryFromClient\";\r\nimport { SelectInput, TextInput } from \"../../../../components/UpwardFields\";\r\nimport { DataGridViewMultiSelectionReact } from \"../../../../components/DataGridViewReact\";\r\nimport { Button } from \"@mui/material\";\r\nimport { wait } from \"@testing-library/user-event/dist/utils\";\r\nimport Swal from \"sweetalert2\";\r\nimport { Loading } from \"../../../../components/Loading\";\r\nimport PageHelmet from \"../../../../components/Helmet\";\r\n\r\nconst column = [\r\n  {\r\n    key: \"row_count\",\r\n    label: \"#\",\r\n    width: 30,\r\n  },\r\n  {\r\n    key: \"Check_Date\",\r\n    label: \"Date\",\r\n    width: 80,\r\n  },\r\n  {\r\n    key: \"Bank\",\r\n    label: \"Bank\",\r\n    width: 150,\r\n  },\r\n  { key: \"CheckNo\", label: \"Check No\", width: 150 },\r\n  { key: \"Check_Amnt\", label: \"Amount\", width: 120, type: \"number\" },\r\n];\r\nexport default function CheckPulloutApproved() {\r\n  const { myAxios, user } = useContext(AuthContext);\r\n  const table = useRef<any>(null);\r\n\r\n  const rcpnRef = useRef<HTMLSelectElement>(null);\r\n  const ppnoRef = useRef<HTMLInputElement>(null);\r\n  const nameRef = useRef<HTMLInputElement>(null);\r\n  const reasonRef = useRef<HTMLInputElement>(null);\r\n  const codeRef = useRef<HTMLInputElement>(null);\r\n\r\n  const btnAddRef = useRef<HTMLButtonElement>(null);\r\n\r\n  const {\r\n    isLoading: isLoadingLoadRequestNumber,\r\n    data: dataLoadRequestNumber,\r\n    refetch: refetchRequestNumber,\r\n  } = useQuery({\r\n    queryKey: \"load-request-number\",\r\n    queryFn: async () =>\r\n      await myAxios.get(\r\n        `/task/accounting/pullout/approved/load-request-number`,\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${user?.accessToken}`,\r\n          },\r\n        }\r\n      ),\r\n      refetchOnWindowFocus: false,\r\n\r\n  });\r\n\r\n  const { isLoading: isLoadingLoadDetails, mutate: mutateDetails } =\r\n    useMutation({\r\n      mutationKey: \"load-details\",\r\n      mutationFn: async (variable: any) =>\r\n        await myAxios.post(\r\n          `/task/accounting/pullout/approved/load-details`,\r\n          variable,\r\n          {\r\n            headers: {\r\n              Authorization: `Bearer ${user?.accessToken}`,\r\n            },\r\n          }\r\n        ),\r\n      onSuccess(res) {\r\n        const details = res?.data.details;\r\n        if (ppnoRef.current) ppnoRef.current.value = details[0].PNNo;\r\n        if (nameRef.current) nameRef.current.value = details[0].Name;\r\n        if (reasonRef.current) reasonRef.current.value = details[0].Reason;\r\n        table.current.setDataFormated(details);\r\n      },\r\n    });\r\n\r\n  const { isLoading: isLoadingConfirmCode, mutate: mutateConfirmCode } =\r\n    useMutation({\r\n      mutationKey: \"confirm-code\",\r\n      mutationFn: async (variable: any) =>\r\n        await myAxios.post(\r\n          `/task/accounting/pullout/approved/confirm-code`,\r\n          variable,\r\n          {\r\n            headers: {\r\n              Authorization: `Bearer ${user?.accessToken}`,\r\n            },\r\n          }\r\n        ),\r\n      onSuccess(res) {\r\n        table.current.resetTable();\r\n        if (rcpnRef.current) rcpnRef.current.value = \"\";\r\n        if (ppnoRef.current) ppnoRef.current.value = \"\";\r\n        if (nameRef.current) nameRef.current.value = \"\";\r\n        if (reasonRef.current) reasonRef.current.value = \"\";\r\n        if (codeRef.current) codeRef.current.value = \"\";\r\n\r\n        Swal.fire({\r\n          position: \"center\",\r\n          icon: \"warning\",\r\n          title: res.data.message,\r\n          timer: 1500,\r\n        }).then(() => {\r\n          refetchRequestNumber();\r\n        });\r\n      },\r\n    });\r\n\r\n  const { isLoading: isLoadingConfirm, mutate: mutateConfirm } = useMutation({\r\n    mutationKey: \"confirm\",\r\n    mutationFn: async (variable: any) =>\r\n      await myAxios.post(\r\n        `/task/accounting/pullout/approved/confirm`,\r\n        variable,\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${user?.accessToken}`,\r\n          },\r\n        }\r\n      ),\r\n    onSuccess(res) {\r\n      if (res.data.success) {\r\n        return Swal.fire({\r\n          title: \"Are you sure?\",\r\n          text: res.data.message,\r\n          icon: \"warning\",\r\n          showCancelButton: true,\r\n          confirmButtonColor: \"#3085d6\",\r\n          cancelButtonColor: \"#d33\",\r\n          confirmButtonText: \"Yes, confirm it!\",\r\n        }).then((result) => {\r\n          if (result.isConfirmed) {\r\n            const getData = table.current.getData();\r\n            const formatData = getData.map((itm: any) => {\r\n              return {\r\n                Check_Date: itm[1],\r\n                Bank: itm[2],\r\n                Check_No: itm[3],\r\n                Check_Amnt: itm[4],\r\n              };\r\n            });\r\n            mutateConfirmCode({\r\n              RCPNo: rcpnRef.current?.value,\r\n              PNNo: ppnoRef.current?.value,\r\n              reason: reasonRef.current?.value,\r\n              Name: nameRef.current?.value,\r\n              code: codeRef.current?.value,\r\n              selected: JSON.stringify(formatData),\r\n            });\r\n          }\r\n        });\r\n      }\r\n\r\n      alert(res.data.message);\r\n    },\r\n  });\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        flex: \"1\",\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        background: \"#F1F1F1\",\r\n      }}\r\n    >\r\n      <PageHelmet title=\"Pullout Approved\" />\r\n      {(isLoadingLoadDetails || isLoadingConfirm || isLoadingConfirmCode) && (\r\n        <Loading />\r\n      )}\r\n      <div\r\n        style={{\r\n          padding: \"10px\",\r\n          width: \"62%\",\r\n          border: \"1px sold black\",\r\n          height: \"500px\",\r\n          boxShadow: \"1px 1px 2px 2px black\",\r\n          display: \"flex\",\r\n          flexDirection: \"column\",\r\n        }}\r\n      >\r\n        <div\r\n          style={{\r\n            height: \"auto\",\r\n          }}\r\n        >\r\n          {isLoadingLoadRequestNumber ? (\r\n            <LoadingButton loading={isLoadingLoadRequestNumber} />\r\n          ) : (\r\n            <div\r\n              style={{\r\n                width: \"100%\",\r\n                marginBottom: \"8px\",\r\n              }}\r\n            >\r\n              <SelectInput\r\n                label={{\r\n                  title: \"RCP No.  : \",\r\n                  style: {\r\n                    fontSize: \"12px\",\r\n                    fontWeight: \"bold\",\r\n                    width: \"100px\",\r\n                  },\r\n                }}\r\n                selectRef={rcpnRef}\r\n                select={{\r\n                  style: { flex: 1, height: \"22px\" },\r\n                  defaultValue: \"Non-VAT\",\r\n                  onChange: async (e) => {\r\n                    if (e.currentTarget.selectedIndex === 0) {\r\n                      table.current.resetTable();\r\n                      if (rcpnRef.current) rcpnRef.current.value = \"\";\r\n                      if (ppnoRef.current) ppnoRef.current.value = \"\";\r\n                      if (nameRef.current) nameRef.current.value = \"\";\r\n                      if (reasonRef.current) reasonRef.current.value = \"\";\r\n                      if (codeRef.current) codeRef.current.value = \"\";\r\n                    }\r\n                    mutateDetails({ RCPNo: e.target.value });\r\n                  },\r\n                }}\r\n                containerStyle={{\r\n                  width: \"300px\",\r\n                  marginBottom: \"12px\",\r\n                }}\r\n                datasource={dataLoadRequestNumber?.data.rcpn}\r\n                values={\"RCPNo\"}\r\n                display={\"RCPNo\"}\r\n              />\r\n            </div>\r\n          )}\r\n\r\n          <TextInput\r\n            containerStyle={{\r\n              width: \"50%\",\r\n              marginBottom: \"8px\",\r\n              marginLeft: \"50px\",\r\n            }}\r\n            label={{\r\n              title: \"PN No. :\",\r\n              style: {\r\n                fontSize: \"12px\",\r\n                fontWeight: \"bold\",\r\n                width: \"100px\",\r\n              },\r\n            }}\r\n            input={{\r\n              disabled: true,\r\n              type: \"text\",\r\n              style: { width: \"calc(100% - 100px)\" },\r\n            }}\r\n            inputRef={ppnoRef}\r\n          />\r\n\r\n          <TextInput\r\n            containerStyle={{\r\n              width: \"50%\",\r\n              marginBottom: \"8px\",\r\n              marginLeft: \"50px\",\r\n            }}\r\n            label={{\r\n              title: \"Client :\",\r\n              style: {\r\n                fontSize: \"12px\",\r\n                fontWeight: \"bold\",\r\n                width: \"100px\",\r\n              },\r\n            }}\r\n            input={{\r\n              disabled: true,\r\n              type: \"text\",\r\n              style: { width: \"calc(100% - 100px)\" },\r\n            }}\r\n            inputRef={nameRef}\r\n          />\r\n          <TextInput\r\n            containerStyle={{\r\n              width: \"50%\",\r\n              marginBottom: \"8px\",\r\n              marginLeft: \"50px\",\r\n            }}\r\n            label={{\r\n              title: \"Reason :\",\r\n              style: {\r\n                fontSize: \"12px\",\r\n                fontWeight: \"bold\",\r\n                width: \"100px\",\r\n              },\r\n            }}\r\n            input={{\r\n              disabled: true,\r\n              type: \"text\",\r\n              style: { width: \"calc(100% - 100px)\" },\r\n            }}\r\n            inputRef={reasonRef}\r\n          />\r\n        </div>\r\n        <DataGridViewMultiSelectionReact\r\n          isTableSelectable={false}\r\n          ref={table}\r\n          columns={column}\r\n          rows={[]}\r\n          containerStyle={{\r\n            flex: 1,\r\n          }}\r\n          getSelectedItem={(rowItm: any) => {\r\n            if (rowItm) {\r\n            }\r\n          }}\r\n        />\r\n        <div\r\n          style={{\r\n            height: \"35px\",\r\n            display: \"flex\",\r\n            justifyContent: \"flex-end\",\r\n            alignItems: \"center\",\r\n            columnGap: \"5px\",\r\n          }}\r\n        >\r\n          <TextInput\r\n            label={{\r\n              title: \"Authentication Code:\",\r\n              style: {\r\n                fontSize: \"12px\",\r\n                fontWeight: \"bold\",\r\n                width: \"140px\",\r\n              },\r\n            }}\r\n            input={{\r\n              type: \"text\",\r\n              style: { width: \"300px\" },\r\n              onKeyDown: (e) => {\r\n                if (e.key === \"Enter\" || e.key === \"NumEnter\") {\r\n                  mutateConfirm({\r\n                    RCPNo: rcpnRef.current?.value,\r\n                    code: e.currentTarget.value,\r\n                  });\r\n                }\r\n              },\r\n            }}\r\n            inputRef={codeRef}\r\n          />\r\n          <Button\r\n            ref={btnAddRef}\r\n            variant=\"contained\"\r\n            color=\"info\"\r\n            style={{\r\n              height: \"25px\",\r\n              fontSize: \"12px\",\r\n            }}\r\n            onClick={(e) => {\r\n              mutateConfirm({\r\n                RCPNo: rcpnRef.current?.value,\r\n                code: codeRef.current?.value,\r\n              });\r\n            }}\r\n          >\r\n            Confirm\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z\"\n}), 'Search');\nexports.default = _default;"],"names":["_ref","_ref$title","title","_jsxs","Helmet","children","_jsx","rel","type","href","concat","process","column","key","label","width","CheckPulloutApproved","_queryFn","_mutationFn","_mutationFn2","_mutationFn3","_onChange","_useContext","useContext","AuthContext","myAxios","user","table","useRef","rcpnRef","ppnoRef","nameRef","reasonRef","codeRef","btnAddRef","_useQuery","useQuery","queryKey","queryFn","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","get","headers","Authorization","accessToken","abrupt","sent","stop","apply","arguments","refetchOnWindowFocus","isLoadingLoadRequestNumber","isLoading","dataLoadRequestNumber","data","refetchRequestNumber","refetch","_useMutation","useMutation","mutationKey","mutationFn","_x","_callee2","variable","_context2","post","onSuccess","res","details","current","value","PNNo","Name","Reason","setDataFormated","isLoadingLoadDetails","mutateDetails","mutate","_useMutation2","_x2","_callee3","_context3","resetTable","Swal","position","icon","message","timer","then","isLoadingConfirmCode","mutateConfirmCode","_useMutation3","_x3","_callee4","_context4","success","text","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","result","isConfirmed","_rcpnRef$current","_ppnoRef$current","_reasonRef$current","_nameRef$current","_codeRef$current","formatData","getData","map","itm","Check_Date","Bank","Check_No","Check_Amnt","RCPNo","reason","code","selected","JSON","stringify","alert","isLoadingConfirm","mutateConfirm","style","flex","display","justifyContent","alignItems","background","PageHelmet","Loading","padding","border","height","boxShadow","flexDirection","LoadingButton","loading","marginBottom","SelectInput","fontSize","fontWeight","selectRef","select","defaultValue","onChange","_x4","_callee5","e","_context5","currentTarget","selectedIndex","target","containerStyle","datasource","rcpn","values","TextInput","marginLeft","input","disabled","inputRef","DataGridViewMultiSelectionReact","isTableSelectable","ref","columns","rows","getSelectedItem","rowItm","columnGap","onKeyDown","_rcpnRef$current2","Button","variant","color","onClick","_rcpnRef$current3","_codeRef$current2","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d"],"sourceRoot":""}