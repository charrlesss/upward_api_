{"version":3,"file":"static/js/1760.89895379.chunk.js","mappings":"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","sources":["components/Helmet.tsx","feautures/Admin/Task/Production/Policies/PolicyComponent/Vehicle/VehicleComponent/PolicyInformation.tsx","feautures/Admin/Task/Production/Policies/PolicyComponent/Vehicle/VehicleComponent/PolicyPremium.tsx","feautures/Admin/Task/Production/Policies/PolicyComponent/Vehicle/VehicleComponent/PolicyTypeDetails.tsx","feautures/Admin/Task/Production/Policies/PolicyComponent/Vehicle/VehiclePolicy.tsx","hooks/useMultipleComponent.tsx"],"sourcesContent":["\r\nimport { Helmet } from \"react-helmet\";\r\n\r\nconst PageHelmet = ({ title = '' }: { title: string }) => {\r\n    const imgUrl = process.env.REACT_APP_IMAGE_URL;\r\n    return (\r\n        <Helmet>\r\n            <title>{title}</title>\r\n            <link rel=\"icon\" type=\"image/png\" href={`${imgUrl}/logo.png`} />\r\n        </Helmet>\r\n    );\r\n};\r\n\r\nexport default PageHelmet;","import React, {\n  CSSProperties,\n  useContext,\n  useEffect,\n  useReducer,\n  useRef,\n  useState,\n} from \"react\";\nimport { VehicleContext } from \"../VehiclePolicy\";\nimport {\n  IconButton,\n  TextField,\n  FormControl,\n  InputLabel,\n  Select,\n  MenuItem,\n  InputAdornment,\n  OutlinedInput,\n  Button,\n  CircularProgress,\n} from \"@mui/material\";\nimport PersonSearchIcon from \"@mui/icons-material/PersonSearch\";\nimport CustomDatePicker from \"../../../../../../../../components/DatePicker\";\nimport PolicyIcon from \"@mui/icons-material/Policy\";\nimport { LoadingButton } from \"@mui/lab\";\nimport useQueryModalTable from \"../../../../../../../../hooks/useQueryModalTable\";\nimport { useMutation, useQuery } from \"react-query\";\nimport PersonOutlineIcon from \"@mui/icons-material/PersonOutline\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport { addYears } from \"date-fns\";\nconst initialClientDetailsState = {\n  ShortName: \"\",\n  IDNo: \"\",\n  firstname: \"\",\n  middlename: \"\",\n  company: \"\",\n  address: \"\",\n  options: \"\",\n  sub_account: \"\",\n  createdAt: \"\",\n  updatedAt: \"\",\n  contact_details_id: \"\",\n  description: \"\",\n  remarks: \"\",\n  VAT_Type: \"\",\n  tin_no: \"\",\n  Sub_Acct: \"\",\n  Description: \"\",\n  Acronym: \"\",\n  update: \"\",\n  email: \"\",\n  mobile: \"\",\n  telephone: \"\",\n};\nconst reducer = (state: any, action: any) => {\n  switch (action.type) {\n    case \"UPDATE_FIELD\":\n      const newState = {\n        ...state,\n        [action.field]: action.value,\n      };\n      return newState;\n    default:\n      return state;\n  }\n};\n\nexport default function PolicyInformation() {\n  const {\n    state,\n    handleInputChange,\n    handleDateChange,\n    myAxios,\n    user,\n    isAddOrEditMode,\n    isLoadingTempId,\n    mutateRates,\n  } = useContext(VehicleContext);\n  const [clientDetailsState, dispatch] = useReducer(\n    reducer,\n    initialClientDetailsState\n  );\n\n  const [showClientDetails, setShowCLientDetails] = useState(false);\n  const periodInsuranceDateRef = useRef<HTMLElement>(null);\n  const dateToDateRef = useRef<HTMLElement>(null);\n  const dateIssuedDateRef = useRef<HTMLElement>(null);\n\n  const searchClientInputRef = useRef<HTMLInputElement>(null);\n  const searchAgentInputRef = useRef<HTMLInputElement>(null);\n  const searchTPLInputRef = useRef<HTMLInputElement>(null);\n\n  const handleChangeRef = useRef<any>(handleInputChange);\n\n  const { data: dataPolicyAccount, isLoading: isLoadingPolicyAccount } =\n    useQuery({\n      queryKey: \"get-policy-account\",\n      queryFn: async () =>\n        await myAxios.get(`/task/production/get-policy-account`, {\n          headers: {\n            Authorization: `Bearer ${user?.accessToken}`,\n          },\n        }),\n    });\n  const { isLoading: isLoadingClientDetails, mutate: mutateDetails } =\n    useMutation({\n      mutationKey: \"get-client-details\",\n      mutationFn: async (variable: any) =>\n        await myAxios.post(`/task/production/get-client-details`, variable, {\n          headers: {\n            Authorization: `Bearer ${user?.accessToken}`,\n          },\n        }),\n      onSuccess(res) {\n        const response = res.data as any;\n        setNewStateValue(dispatch, response?.clients[0]);\n        setShowCLientDetails(true);\n      },\n    });\n\n  const {\n    ModalComponent: ModalClientIDs,\n    openModal: openCliendIDsModal,\n    isLoading: isLoadingClientIdsModal,\n    closeModal: closeCliendIDsModal,\n  } = useQueryModalTable({\n    link: {\n      url: \"/task/production/get-clients\",\n      queryUrlName: \"clientSearch\",\n    },\n    columns: [\n      { field: \"entry_client_id\", headerName: \"ID\", width: 130 },\n      { field: \"fullname\", headerName: \"Full Name\", flex: 1 },\n      {\n        field: \"entry_type\",\n        headerName: \"ID Type\",\n        width: 150,\n      },\n    ],\n    queryKey: \"get-clients\",\n    uniqueId: \"entry_client_id\",\n    responseDataKey: \"clients\",\n    onSelected: (selectedRowData) => {\n      handleDateChange(selectedRowData[0].entry_client_id, \"client_id\");\n      handleDateChange(selectedRowData[0].fullname, \"client_name\");\n      handleDateChange(selectedRowData[0].address, \"client_address\");\n      handleDateChange(selectedRowData[0].sale_officer, \"sale_officer\");\n      closeCliendIDsModal();\n    },\n    onCellKeyDown: (__: any, key: any) => {\n      if (key.code === \"Enter\" || key.code === \"NumpadEnter\") {\n        handleDateChange(__.row.entry_client_id, \"client_id\");\n        handleDateChange(__.row.fullname, \"client_name\");\n        handleDateChange(__.row.address, \"client_address\");\n        handleDateChange(__.row.sale_officer, \"sale_officer\");\n        closeCliendIDsModal();\n      }\n    },\n    searchRef: searchClientInputRef,\n  });\n  const {\n    ModalComponent: ModalAgentId,\n    openModal: openModalAgentId,\n    isLoading: isLoadingModalAgentId,\n    closeModal: closeModalAgentId,\n  } = useQueryModalTable({\n    link: {\n      url: \"/task/production/get-agents\",\n      queryUrlName: \"agentSearch\",\n    },\n    columns: [\n      { field: \"entry_agent_id\", headerName: \"ID\", width: 130 },\n      { field: \"fullname\", headerName: \"First Name\", flex: 1 },\n      {\n        field: \"entry_type\",\n        headerName: \"ID Type\",\n        width: 150,\n      },\n    ],\n    queryKey: \"get-agents\",\n    uniqueId: \"entry_agent_id\",\n    responseDataKey: \"agents\",\n    onSelected: (selectedRowData) => {\n      handleDateChange(selectedRowData[0].entry_agent_id, \"agent_id\");\n      handleDateChange(selectedRowData[0].fullname, \"agent_name\");\n      closeModalAgentId();\n    },\n    onCellKeyDown: (__: any, key: any) => {\n      if (key.code === \"Enter\" || key.code === \"NumpadEnter\") {\n        handleDateChange(__.row.entry_agent_id, \"agent_id\");\n        handleDateChange(__.row.fullname, \"agent_name\");\n        closeModalAgentId();\n      }\n    },\n    searchRef: searchAgentInputRef,\n  });\n\n  const {\n    ModalComponent: ModalTPLId,\n    openModal: openModalTPLId,\n    isLoading: isLoadingModalTPLId,\n    closeModal: closeModalTPLId,\n  } = useQueryModalTable({\n    link: {\n      url: \"/task/production/tpl-ids-vehicle-policy\",\n      queryUrlName: \"tplIDSearch\",\n    },\n    columns: [\n      { field: \"Source_No\", headerName: \"ID\", width: 130 },\n      { field: \"Cost\", headerName: \"Cost\", flex: 1 },\n    ],\n    queryKey: \"get-tpl-ids\",\n    uniqueId: \"Source_No\",\n    responseDataKey: \"tpl_ids\",\n    onSelected: (selectedRowData) => {\n      handleDateChange(selectedRowData[0].Source_No, \"PolicyNo\");\n      handleDateChange(selectedRowData[0].Cost, \"rateCost\");\n      handleDateChange(selectedRowData[0].Source_No_Ref_ID, \"Source_No_Ref_ID\");\n      closeModalTPLId();\n    },\n    onCellKeyDown: (__: any, key: any) => {\n      if (key.code === \"Enter\" || key.code === \"NumpadEnter\") {\n        handleDateChange(__.row.Source_No, \"PolicyNo\");\n        handleDateChange(__.row.Cost, \"rateCost\");\n        handleDateChange(__.row.Source_No_Ref_ID, \"Source_No_Ref_ID\");\n        closeModalTPLId();\n      }\n    },\n    searchRef: searchTPLInputRef,\n  });\n\n  useEffect(() => {\n    if (state.form_action === \"TEMP\" && user?.department === \"UCSMI\") {\n      mutateRates({\n        Account: \"TEMPORARY\",\n        Type: state.form_type.toUpperCase(),\n      } as any);\n      handleChangeRef.current({\n        target: {\n          name: \"PolicyAccount\",\n          value: \"TEMPORARY\",\n        },\n      });\n      handleChangeRef.current({\n        target: {\n          name: \"Denomination\",\n          value: \"COM-ALL TYPE\",\n        },\n      });\n    }\n  }, [state.form_action, state.form_type, mutateRates, user]);\n\n  const DisplayDetails = ({ datakey, label, value }: any) => {\n    return (\n      <div style={{ width: \"100%\", display: \"flex\" }}>\n        <label style={{ width: \"200px\" }} htmlFor={datakey}>\n          {label}\n        </label>\n        :\n        <input\n          style={{ flex: 1, border: \"none\", padding: \"0 20px\" }}\n          defaultValue={value ?? \"\"}\n          id={datakey}\n          readOnly={true}\n        />\n      </div>\n    );\n  };\n\n  return (\n    <div>\n      <div\n        style={{\n          display: \"flex\",\n          gap: \"10px\",\n          flexDirection: \"column\",\n        }}\n      >\n        <div\n          style={\n            {\n              flex: 1,\n              display: \"flex\",\n              gap: \"10px\",\n            } as CSSProperties\n          }\n        >\n          <fieldset\n            style={\n              {\n                flex: 1,\n                display: \"flex\",\n                flexDirection: \"column\",\n                gap: \"10px\",\n                padding: \"15px\",\n                border: \"1px solid #cbd5e1\",\n                borderRadius: \"5px\",\n              } as CSSProperties\n            }\n          >\n            <legend style={{ color: \"#065f46\" }}>Insurer Information</legend>\n            <div\n              style={{ display: \"flex\", gap: \"10px\", flexDirection: \"column\" }}\n            >\n              <div style={{ display: \"flex\", columnGap: \"10px\" }}>\n                {isLoadingClientIdsModal ? (\n                  <LoadingButton loading={isLoadingClientIdsModal} />\n                ) : (\n                  <FormControl\n                    variant=\"outlined\"\n                    size=\"small\"\n                    disabled={isAddOrEditMode}\n                    sx={{\n                      width: \"200px\",\n                      \".MuiFormLabel-root\": {\n                        fontSize: \"14px\",\n                        background: \"white\",\n                        zIndex: 99,\n                        padding: \"0 3px\",\n                      },\n                      \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n                    }}\n                  >\n                    <InputLabel htmlFor=\"client-id-field\">Client ID</InputLabel>\n                    <OutlinedInput\n                      sx={{\n                        height: \"27px\",\n                        fontSize: \"14px\",\n                      }}\n                      disabled={isAddOrEditMode}\n                      fullWidth\n                      label=\"Client ID\"\n                      name=\"client_id\"\n                      value={state.client_id}\n                      onChange={handleInputChange}\n                      onKeyDown={(e) => {\n                        if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n                          e.preventDefault();\n                          openCliendIDsModal(state.client_id);\n                          return;\n                        }\n                      }}\n                      id=\"client-id-field\"\n                      endAdornment={\n                        <InputAdornment position=\"end\">\n                          <IconButton\n                            // ref={reloadIDButtonRef}\n                            disabled={isAddOrEditMode}\n                            aria-label=\"search-client\"\n                            color=\"secondary\"\n                            edge=\"end\"\n                            onClick={() => {\n                              openCliendIDsModal(state.client_id);\n                            }}\n                          >\n                            <PersonSearchIcon />\n                          </IconButton>\n                        </InputAdornment>\n                      }\n                    />\n                  </FormControl>\n                )}\n                {isLoadingClientDetails ? (\n                  <div>\n                    <CircularProgress size=\"20px\" />\n                  </div>\n                ) : (\n                  <Button\n                    // disabled={state.client_id === \"\"}\n                    variant=\"outlined\"\n                    startIcon={<PersonOutlineIcon />}\n                    sx={{\n                      height: \"27px\",\n                      fontSize: \"11px\",\n                    }}\n                    onClick={() => {\n                      mutateDetails({\n                        userId: state.client_id,\n                      });\n                    }}\n                  >\n                    Client\n                  </Button>\n                )}\n              </div>\n\n              <TextField\n                disabled={isAddOrEditMode}\n                fullWidth\n                variant=\"outlined\"\n                size=\"small\"\n                label=\"Client Name\"\n                name=\"client_name\"\n                value={state.client_name}\n                onChange={handleInputChange}\n                InputProps={{\n                  style: { height: \"27px\", fontSize: \"14px\" },\n                  readOnly: true,\n                }}\n                sx={{\n                  flex: 1,\n                  height: \"27px\",\n                  \".MuiFormLabel-root\": { fontSize: \"14px\" },\n                  \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n                }}\n              />\n            </div>\n            <TextField\n              rows={5}\n              disabled={isAddOrEditMode}\n              fullWidth\n              variant=\"outlined\"\n              size=\"small\"\n              label=\"Client Address\"\n              multiline\n              name=\"client_address\"\n              value={state.client_address}\n              onChange={handleInputChange}\n              InputProps={{\n                style: { height: \"100px\", fontSize: \"14px\", padding: \"10px\" },\n                readOnly: true,\n              }}\n              sx={{\n                flex: 1,\n                height: \"100px\",\n                \".MuiFormLabel-root\": { fontSize: \"14px\" },\n                \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n              }}\n            />\n          </fieldset>\n          <fieldset\n            style={\n              {\n                gap: \"10px\",\n                padding: \"15px\",\n                border: \"1px solid #cbd5e1\",\n                borderRadius: \"5px\",\n                flexWrap: \"wrap\",\n                flex: 1,\n              } as CSSProperties\n            }\n          >\n            <legend style={{ color: \"#065f46\" }}>Agent Information</legend>\n            {isLoadingModalAgentId ? (\n              <LoadingButton loading={isLoadingModalAgentId} />\n            ) : (\n              <FormControl\n                variant=\"outlined\"\n                size=\"small\"\n                disabled={isAddOrEditMode}\n                sx={{\n                  width: \"170px\",\n                  \".MuiFormLabel-root\": {\n                    fontSize: \"14px\",\n                    background: \"white\",\n                    zIndex: 99,\n                    padding: \"0 3px\",\n                  },\n                  \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n                }}\n              >\n                <InputLabel htmlFor=\"AGENT-id-field\">Agent ID</InputLabel>\n                <OutlinedInput\n                  sx={{\n                    height: \"27px\",\n                    fontSize: \"14px\",\n                  }}\n                  disabled={isAddOrEditMode}\n                  label=\"Agent ID\"\n                  name=\"agent_id\"\n                  value={state.agent_id}\n                  onChange={handleInputChange}\n                  onKeyDown={(e) => {\n                    if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n                      e.preventDefault();\n                      return openModalAgentId(state.agent_id);\n                    }\n                  }}\n                  id=\"AGENT-id-field\"\n                  endAdornment={\n                    <InputAdornment position=\"end\">\n                      <IconButton\n                        // ref={reloadIDButtonRef}\n                        disabled={isAddOrEditMode}\n                        aria-label=\"search-client\"\n                        color=\"secondary\"\n                        edge=\"end\"\n                        onClick={() => {\n                          openModalAgentId(state.agent_id);\n                        }}\n                      >\n                        <PersonSearchIcon />\n                      </IconButton>\n                    </InputAdornment>\n                  }\n                />\n              </FormControl>\n            )}\n            <TextField\n              fullWidth\n              disabled={isAddOrEditMode}\n              variant=\"outlined\"\n              size=\"small\"\n              label=\"Agent Name\"\n              name=\"agent_name\"\n              value={state.agent_name}\n              onChange={handleInputChange}\n              InputProps={{\n                style: { height: \"27px\", fontSize: \"14px\" },\n                readOnly: true,\n              }}\n              sx={{\n                flex: 1,\n                height: \"27px\",\n                \".MuiFormLabel-root\": { fontSize: \"14px\" },\n                \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n                marginTop: \"10px\",\n              }}\n            />\n            <TextField\n              disabled={isAddOrEditMode}\n              fullWidth\n              variant=\"outlined\"\n              size=\"small\"\n              label=\"Sale Officer\"\n              multiline\n              name=\"sale_officer\"\n              value={state.sale_officer}\n              onChange={handleInputChange}\n              InputProps={{\n                style: { height: \"27px\", fontSize: \"14px\" },\n                readOnly: true,\n              }}\n              sx={{\n                width: \"100%\",\n                height: \"27px\",\n                \".MuiFormLabel-root\": { fontSize: \"14px\" },\n                \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n                marginTop: \"10px\",\n              }}\n            />\n          </fieldset>\n        </div>\n        <div\n          style={\n            {\n              display: \"flex\",\n              gap: \"10px\",\n              flex: 1,\n            } as CSSProperties\n          }\n        >\n          <fieldset\n            style={\n              {\n                display: \"grid\",\n                gridTemplateColumns: \"repeat(2,1fr)\",\n                gap: \"10px\",\n                gridArea: \"content3\",\n                padding: \"15px\",\n                border: \"1px solid #cbd5e1\",\n                borderRadius: \"5px\",\n                flex: 1,\n              } as CSSProperties\n            }\n          >\n            <legend style={{ color: \"#065f46\" }}>Vehicle Policy</legend>\n            {isLoadingPolicyAccount ? (\n              <LoadingButton loading={isLoadingPolicyAccount} />\n            ) : (\n              <FormControl\n                size=\"small\"\n                disabled={isAddOrEditMode}\n                sx={{\n                  flex: 1,\n                  \".MuiFormLabel-root\": {\n                    fontSize: \"14px\",\n                    background: \"white\",\n                    zIndex: 99,\n                    padding: \"0 3px\",\n                  },\n                  \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n                }}\n              >\n                <InputLabel id=\"PolicyAccount\">Account</InputLabel>\n                <Select\n                  disabled={\n                    state.form_action === \"TEMP\" && user?.department === \"UCSMI\"\n                  }\n                  labelId=\"PolicyAccount\"\n                  value={state.PolicyAccount}\n                  label=\"Account\"\n                  name=\"PolicyAccount\"\n                  onChange={(e) => {\n                    mutateRates({\n                      Account: e.target.value.trim(),\n                      Type: state.form_type.toUpperCase(),\n                    } as any);\n                    handleInputChange({\n                      target: { name: \"Denomination\", value: \"\" },\n                    });\n                    handleInputChange(e);\n                  }}\n                  sx={{\n                    height: \"27px\",\n                    fontSize: \"14px\",\n                  }}\n                >\n                  {dataPolicyAccount.data.policy_account[\n                    `${state.form_type.toUpperCase()}`\n                  ].map((items: any, idx: number) => {\n                    return (\n                      <MenuItem key={idx} value={items.Account}>\n                        {items.Account}\n                      </MenuItem>\n                    );\n                  })}\n                </Select>\n              </FormControl>\n            )}\n            {state.form_type.toLowerCase() === \"tpl\" ? (\n              <React.Fragment>\n                {isLoadingModalTPLId ? (\n                  <LoadingButton loading={isLoadingModalTPLId} />\n                ) : (\n                  <FormControl\n                    variant=\"outlined\"\n                    size=\"small\"\n                    sx={{\n                      flex: 1,\n                      \".MuiFormLabel-root\": {\n                        fontSize: \"14px\",\n                        background: \"white\",\n                        zIndex: 99,\n                        padding: \"0 3px\",\n                      },\n                      \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n                    }}\n                  >\n                    <InputLabel id=\"PolicyNo\">Policy No</InputLabel>\n                    <OutlinedInput\n                      sx={{\n                        height: \"27px\",\n                        fontSize: \"14px\",\n                      }}\n                      id=\"PolicyNo\"\n                      label=\"Policy No\"\n                      name=\"PolicyNo\"\n                      value={state.PolicyNo}\n                      onChange={handleInputChange}\n                      onKeyDown={(e) => {\n                        if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n                          e.preventDefault();\n                          return openModalTPLId(state.PolicyNo);\n                        }\n                      }}\n                      endAdornment={\n                        <InputAdornment position=\"end\">\n                          <IconButton\n                            aria-label=\"search-client\"\n                            color=\"secondary\"\n                            edge=\"end\"\n                            onClick={() => {\n                              openModalTPLId(state.PolicyNo);\n                            }}\n                          >\n                            <PolicyIcon />\n                          </IconButton>\n                        </InputAdornment>\n                      }\n                    />\n                  </FormControl>\n                )}\n              </React.Fragment>\n            ) : state.form_action === \"REG\" ? (\n              <TextField\n                fullWidth\n                variant=\"outlined\"\n                size=\"small\"\n                label=\"Policy No.\"\n                name=\"PolicyNo\"\n                value={state.PolicyNo}\n                onChange={handleInputChange}\n                InputProps={{\n                  style: { height: \"27px\", fontSize: \"14px\" },\n                }}\n                sx={{\n                  width: \"100%\",\n                  height: \"27px\",\n                  \".MuiFormLabel-root\": { fontSize: \"14px\" },\n                  \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n                }}\n              />\n            ) : (\n              <React.Fragment>\n                {isLoadingTempId ? (\n                  <LoadingButton loading={isLoadingTempId} />\n                ) : (\n                  <TextField\n                    fullWidth\n                    variant=\"outlined\"\n                    size=\"small\"\n                    label=\"Policy No.\"\n                    name=\"PolicyNo\"\n                    value={state.PolicyNo}\n                    onChange={handleInputChange}\n                    InputProps={{\n                      readOnly: true,\n                      style: { height: \"27px\", fontSize: \"14px\" },\n                    }}\n                    sx={{\n                      width: \"100%\",\n                      height: \"27px\",\n                      \".MuiFormLabel-root\": { fontSize: \"14px\" },\n                      \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n                    }}\n                  />\n                )}\n              </React.Fragment>\n            )}\n            <TextField\n              disabled={isAddOrEditMode}\n              fullWidth\n              variant=\"outlined\"\n              size=\"small\"\n              label=\"Certificate of Cover No.\"\n              name=\"CCN\"\n              value={state.CCN}\n              onChange={handleInputChange}\n              InputProps={{\n                style: { height: \"27px\", fontSize: \"14px\" },\n              }}\n              sx={{\n                width: \"100%\",\n                height: \"27px\",\n                \".MuiFormLabel-root\": { fontSize: \"14px\" },\n                \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n              }}\n            />\n            <TextField\n              disabled={isAddOrEditMode}\n              fullWidth\n              variant=\"outlined\"\n              size=\"small\"\n              label=\"Official Receipt No.\"\n              name=\"ORN\"\n              value={state.ORN}\n              onChange={handleInputChange}\n              InputProps={{\n                style: { height: \"27px\", fontSize: \"14px\" },\n              }}\n              sx={{\n                width: \"100%\",\n                height: \"27px\",\n                \".MuiFormLabel-root\": { fontSize: \"14px\" },\n                \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n              }}\n            />\n          </fieldset>\n          <fieldset\n            style={\n              {\n                gridArea: \"content4\",\n                padding: \"15px\",\n                border: \"1px solid #cbd5e1\",\n                borderRadius: \"5px\",\n                position: \"relative\",\n                flex: 1,\n              } as CSSProperties\n            }\n          >\n            <legend style={{ color: \"#065f46\" }}>Period of Insurance</legend>\n            <div\n              style={{\n                position: \"absolute\",\n                display: \"flex\",\n                gap: \"10px\",\n                width: \"90%\",\n              }}\n            >\n              <CustomDatePicker\n                fullWidth={false}\n                disabled={isAddOrEditMode}\n                label=\"Date From\"\n                onChange={(e: any) => {\n                  handleDateChange(e, \"DateFrom\");\n                  const newDate = new Date(e);\n                  const newDatePlusOneYear = addYears(newDate, 1);\n                  handleDateChange(newDatePlusOneYear, \"DateTo\");\n                }}\n                value={new Date(state.DateFrom)}\n                onKeyDown={(e: any) => {\n                  if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n                    const timeout = setTimeout(() => {\n                      periodInsuranceDateRef.current\n                        ?.querySelector(\"button\")\n                        ?.click();\n                      clearTimeout(timeout);\n                    }, 150);\n                  }\n                }}\n                datePickerRef={periodInsuranceDateRef}\n                textField={{\n                  InputLabelProps: {\n                    style: {\n                      fontSize: \"14px\",\n                    },\n                  },\n                  InputProps: {\n                    style: { height: \"27px\", fontSize: \"14px\" },\n                  },\n                }}\n              />\n              <CustomDatePicker\n                fullWidth={false}\n                disabled={isAddOrEditMode}\n                label=\"Date To\"\n                onChange={(e: any) => {\n                  handleDateChange(e, \"DateTo\");\n                }}\n                value={new Date(state.DateTo)}\n                onKeyDown={(e: any) => {\n                  if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n                    const timeout = setTimeout(() => {\n                      dateToDateRef.current?.querySelector(\"button\")?.click();\n                      clearTimeout(timeout);\n                    }, 150);\n                  }\n                }}\n                datePickerRef={dateToDateRef}\n                textField={{\n                  InputLabelProps: {\n                    style: {\n                      fontSize: \"14px\",\n                    },\n                  },\n                  InputProps: {\n                    style: { height: \"27px\", fontSize: \"14px\" },\n                  },\n                }}\n              />\n              <CustomDatePicker\n                fullWidth={false}\n                label=\"Date Issued\"\n                name=\"DateIssued\"\n                onChange={(e: any) => {\n                  handleDateChange(e, \"DateIssued\");\n                }}\n                value={new Date(state.DateIssued)}\n                disabled={isAddOrEditMode}\n                onKeyDown={(e: any) => {\n                  if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n                    const timeout = setTimeout(() => {\n                      dateIssuedDateRef.current\n                        ?.querySelector(\"button\")\n                        ?.click();\n                      clearTimeout(timeout);\n                    }, 150);\n                  }\n                }}\n                datePickerRef={dateIssuedDateRef}\n                textField={{\n                  InputLabelProps: {\n                    style: {\n                      fontSize: \"14px\",\n                    },\n                  },\n                  InputProps: {\n                    style: { height: \"27px\", fontSize: \"14px\" },\n                  },\n                }}\n              />\n            </div>\n          </fieldset>\n        </div>\n        <div style={{ width: \"50%\" }}>\n          <fieldset\n            style={{\n              display: \"flex\",\n              gap: \"20px\",\n              padding: \"15px\",\n              border: \"1px solid #cbd5e1\",\n              borderRadius: \"5px\",\n            }}\n          >\n            <legend style={{ color: \"#065f46\" }}>Insured Unit</legend>\n            <div\n              style={\n                {\n                  flex: 1,\n                  display: \"flex\",\n                  gap: \"10px\",\n                  flexDirection: \"column\",\n                } as CSSProperties\n              }\n            >\n              <TextField\n                disabled={isAddOrEditMode}\n                fullWidth\n                variant=\"outlined\"\n                size=\"small\"\n                label=\"Model\"\n                name=\"Model\"\n                value={state.Model}\n                onChange={handleInputChange}\n                InputProps={{\n                  style: { height: \"27px\", fontSize: \"14px\" },\n                }}\n                sx={{\n                  flex: 1,\n                  height: \"27px\",\n                  \".MuiFormLabel-root\": { fontSize: \"14px\" },\n                  \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n                }}\n              />\n              <TextField\n                disabled={isAddOrEditMode}\n                fullWidth\n                variant=\"outlined\"\n                size=\"small\"\n                label=\"Make\"\n                name=\"Make\"\n                value={state.Make}\n                onChange={handleInputChange}\n                InputProps={{\n                  style: { height: \"27px\", fontSize: \"14px\" },\n                }}\n                sx={{\n                  flex: 1,\n                  height: \"27px\",\n                  \".MuiFormLabel-root\": { fontSize: \"14px\" },\n                  \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n                }}\n              />\n              <TextField\n                disabled={isAddOrEditMode}\n                fullWidth\n                variant=\"outlined\"\n                size=\"small\"\n                label=\"Type of Body\"\n                name=\"TB\"\n                value={state.TB}\n                onChange={handleInputChange}\n                InputProps={{\n                  style: { height: \"27px\", fontSize: \"14px\" },\n                }}\n                sx={{\n                  flex: 1,\n                  height: \"27px\",\n                  \".MuiFormLabel-root\": { fontSize: \"14px\" },\n                  \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n                }}\n              />\n              <TextField\n                disabled={isAddOrEditMode}\n                fullWidth\n                variant=\"outlined\"\n                size=\"small\"\n                label=\"Color\"\n                name=\"Color\"\n                value={state.Color}\n                onChange={handleInputChange}\n                InputProps={{\n                  style: { height: \"27px\", fontSize: \"14px\" },\n                }}\n                sx={{\n                  flex: 1,\n                  height: \"27px\",\n                  \".MuiFormLabel-root\": { fontSize: \"14px\" },\n                  \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n                }}\n              />\n              <TextField\n                disabled={isAddOrEditMode}\n                fullWidth\n                variant=\"outlined\"\n                size=\"small\"\n                label=\"BLT File No\"\n                name=\"BLTFileNo\"\n                value={state.BLTFileNo}\n                onChange={handleInputChange}\n                InputProps={{\n                  style: { height: \"27px\", fontSize: \"14px\" },\n                }}\n                sx={{\n                  flex: 1,\n                  height: \"27px\",\n                  \".MuiFormLabel-root\": { fontSize: \"14px\" },\n                  \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n                }}\n              />\n            </div>\n            <div\n              style={\n                {\n                  flex: 1,\n                  display: \"flex\",\n                  gap: \"10px\",\n                  flexDirection: \"column\",\n                } as CSSProperties\n              }\n            >\n              <TextField\n                disabled={isAddOrEditMode}\n                fullWidth\n                variant=\"outlined\"\n                size=\"small\"\n                label=\"Plate No\"\n                name=\"PlateNo\"\n                value={state.PlateNo}\n                onChange={handleInputChange}\n                InputProps={{\n                  style: { height: \"27px\", fontSize: \"14px\" },\n                }}\n                sx={{\n                  flex: 1,\n                  height: \"27px\",\n                  \".MuiFormLabel-root\": { fontSize: \"14px\" },\n                  \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n                }}\n              />\n              <TextField\n                disabled={isAddOrEditMode}\n                fullWidth\n                variant=\"outlined\"\n                size=\"small\"\n                label=\"Chassis No\"\n                name=\"ChassisNo\"\n                value={state.ChassisNo}\n                onChange={handleInputChange}\n                InputProps={{\n                  style: { height: \"27px\", fontSize: \"14px\" },\n                }}\n                sx={{\n                  flex: 1,\n                  height: \"27px\",\n                  \".MuiFormLabel-root\": { fontSize: \"14px\" },\n                  \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n                }}\n              />\n              <TextField\n                disabled={isAddOrEditMode}\n                fullWidth\n                variant=\"outlined\"\n                size=\"small\"\n                label=\"Motor No.\"\n                name=\"MotorNo\"\n                value={state.MotorNo}\n                onChange={handleInputChange}\n                InputProps={{\n                  style: { height: \"27px\", fontSize: \"14px\" },\n                }}\n                sx={{\n                  flex: 1,\n                  height: \"27px\",\n                  \".MuiFormLabel-root\": { fontSize: \"14px\" },\n                  \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n                }}\n              />\n              <TextField\n                disabled={isAddOrEditMode}\n                fullWidth\n                variant=\"outlined\"\n                size=\"small\"\n                label=\"Authorized Capacity\"\n                name=\"AuthorizedCapacity\"\n                value={state.AuthorizedCapacity}\n                onChange={handleInputChange}\n                InputProps={{\n                  style: { height: \"27px\", fontSize: \"14px\" },\n                }}\n                sx={{\n                  flex: 1,\n                  height: \"27px\",\n                  \".MuiFormLabel-root\": { fontSize: \"14px\" },\n                  \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n                }}\n              />\n              <TextField\n                disabled={isAddOrEditMode}\n                fullWidth\n                variant=\"outlined\"\n                size=\"small\"\n                label=\"Unladen Weight\"\n                name=\"UnladenWeigth\"\n                value={state.UnladenWeigth}\n                onChange={handleInputChange}\n                InputProps={{\n                  style: { height: \"27px\", fontSize: \"14px\" },\n                }}\n                sx={{\n                  flex: 1,\n                  height: \"27px\",\n                  \".MuiFormLabel-root\": { fontSize: \"14px\" },\n                  \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n                }}\n              />\n            </div>\n          </fieldset>\n        </div>\n      </div>\n      <div\n        style={{\n          position: \"fixed\",\n          top: 0,\n          bottom: 0,\n          left: 0,\n          right: 0,\n          background: \"rgba(158, 155, 157, 0.31)\",\n          zIndex: \"999\",\n          display: showClientDetails ? \"flex\" : \"none\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n          boxShadow: \"-1px 15px 74px 38px rgba(0,0,0,0.37)\",\n        }}\n      >\n        <div\n          style={{\n            background: \"white\",\n            width: \"70%\",\n            height: \"700px\",\n            position: \"relative\",\n            padding: \"50px 20px\",\n          }}\n        >\n          <IconButton\n            sx={{\n              position: \"absolute\",\n              top: \"10px\",\n              right: \"10px\",\n            }}\n            onClick={() => setShowCLientDetails(false)}\n          >\n            <CloseIcon />\n          </IconButton>\n          <div style={{ width: \"100%\", height: \"100%\" }}>\n            <hr style={{ margin: \"5px 0\" }} />\n            <p style={{ margin: \"0\", padding: \"0\", fontWeight: \"bold\" }}>\n              Client Details\n            </p>\n            <hr style={{ margin: \"5px 0\" }} />\n            <DisplayDetails\n              datakey={\"IDNo\"}\n              label={\"ID NO.\"}\n              value={clientDetailsState.IDNo}\n            />\n            <DisplayDetails\n              datakey={\"ShortName\"}\n              label={\"Short Name\"}\n              value={clientDetailsState.ShortName}\n            />\n            <DisplayDetails\n              datakey={\"subShortName\"}\n              label={\"Sub Account\"}\n              value={clientDetailsState.subShortName}\n            />\n            <DisplayDetails\n              datakey={\"mobile\"}\n              label={\"Mobile\"}\n              value={clientDetailsState.mobile}\n            />\n            <DisplayDetails\n              datakey={\"email\"}\n              label={\"Email\"}\n              value={clientDetailsState.email}\n            />\n            <DisplayDetails\n              datakey={\"address\"}\n              label={\"Address\"}\n              value={clientDetailsState.address}\n            />\n            <DisplayDetails\n              datakey={\"options\"}\n              label={\"Option\"}\n              value={clientDetailsState.options}\n            />\n          </div>\n        </div>\n      </div>\n      {ModalClientIDs}\n      {ModalAgentId}\n      {ModalTPLId}\n    </div>\n  );\n}\nfunction setNewStateValue(dispatch: any, obj: any) {\n  Object.entries(obj).forEach(([field, value]) => {\n    dispatch({ type: \"UPDATE_FIELD\", field, value });\n  });\n}\n","import React, { useContext, useState } from \"react\";\nimport { VehicleContext } from \"../VehiclePolicy\";\nimport {\n  FormGroup,\n  FormControlLabel,\n  Checkbox,\n  FormControl,\n  Select,\n  MenuItem,\n  Typography,\n  TextField,\n  Divider,\n  Button,\n  Box,\n} from \"@mui/material\";\nimport { NumericFormatCustom } from \"../../../../../../../../components/NumberFormat\";\nimport { useQuery } from \"react-query\";\nimport { LoadingButton } from \"@mui/lab\";\n\nexport default function PolicyPremium() {\n  const {\n    state,\n    handleInputChange,\n    handleDateChange,\n    tplCompuation,\n    comComputation,\n    isAddOrEditMode,\n    dispatch,\n    myAxios,\n    user,\n  } = useContext(VehicleContext);\n  const [text, setText] = useState(\n    JSON.parse(state.MortgageeForm)\n      ? `LOSS and/or DAMAGE, if any under this policy shall be payable to ${state.Mortgagee} as their interest may appear subject to all terms and conditions, clauses and warranties of this policy. SUBJECT TO THE ATTACHED STANDARD ACCESSORIES ENDORSEMENT CLAUSE; FULL PREMIUM PAYMENT IN CASE OF LOSS CLAUSE; MEMORANDUM ON DOCUMENTARY STAMPS TAX; ANTI CARNAPING; PREVENTION TIPS AND AUTO PA RIDER; DRUNKEN AND DRIVE CLAUSE THIS POLICY OR ANY RENEWAL THEREOF SHALL NOT BE CANCELLED WITHOUT PRIOR WRITTEN NOTIFICATION AND CONFORMIY TO ${state.Mortgagee}`\n      : \"SUBJECT TO THE ATTACHED STANDARD ACCESSORIES ENDORSEMENT CLAUSE; FULL PREMIUM PAYMENT IN CASE OF LOSS CLAUSE; MEMORANDUM ON DOCUMENTARY STAMPS TAX; ANTI CARNAPING PREVENTION TIPS AND AUTO PA RIDER; DRUNKEN AND DRIVER CLAUSE\"\n  );\n\n  const { data: dataMortgagee, isLoading: isLoadingMortgagee } = useQuery({\n    queryKey: \"get-mortgagee\",\n    queryFn: async () =>\n      await myAxios.get(`/task/production/get-mortgagee`, {\n        headers: {\n          Authorization: `Bearer ${user?.accessToken}`,\n        },\n      }),\n  });\n\n  function onKeyDownComputation(e: any) {\n    if (e.code === \"NumpadEnter\" || e.code === \"Enter\") {\n      if (state.form_type.toLowerCase() === \"com\") {\n        return comComputation();\n      }\n      tplCompuation();\n    }\n  }\n\n  return (\n    <div>\n      <fieldset\n        style={{\n          display: \"flex\",\n          columnGap: \"10px\",\n          padding: \"15px\",\n          border: \"1px solid #cbd5e1\",\n          borderRadius: \"5px\",\n        }}\n      >\n        <legend>Mortgagee</legend>\n        <Box\n          sx={{\n            display: \"flex\",\n            flexDirection: \"column\",\n            rowGap: \"10px\",\n            flex: 1,\n          }}\n        >\n          <div>\n            <FormGroup>\n              <FormControlLabel\n                sx={{\n                  \".MuiTypography-root\": {\n                    fontSize: \"13px !important\",\n                  },\n                }}\n                disabled={isAddOrEditMode}\n                control={\n                  <Checkbox\n                    size=\"small\"\n                    name=\"MortgageeForm\"\n                    value={JSON.parse(state.MortgageeForm)}\n                    checked={JSON.parse(state.MortgageeForm)}\n                    onChange={(e) => {\n                      if (e.target.checked) {\n                        setText(\n                          `LOSS and/or DAMAGE, if any under this policy shall be payable to ${state.Mortgagee} as their interest may appear subject to all terms and conditions, clauses and warranties of this policy. SUBJECT TO THE ATTACHED STANDARD ACCESSORIES ENDORSEMENT CLAUSE; FULL PREMIUM PAYMENT IN CASE OF LOSS CLAUSE; MEMORANDUM ON DOCUMENTARY STAMPS TAX; ANTI CARNAPING; PREVENTION TIPS AND AUTO PA RIDER; DRUNKEN AND DRIVE CLAUSE THIS POLICY OR ANY RENEWAL THEREOF SHALL NOT BE CANCELLED WITHOUT PRIOR WRITTEN NOTIFICATION AND CONFORMIY TO ${state.Mortgagee}`\n                        );\n                      } else {\n                        setText(\n                          \"SUBJECT TO THE ATTACHED STANDARD ACCESSORIES ENDORSEMENT CLAUSE; FULL PREMIUM PAYMENT IN CASE OF LOSS CLAUSE; MEMORANDUM ON DOCUMENTARY STAMPS TAX; ANTI CARNAPING PREVENTION TIPS AND AUTO PA RIDER; DRUNKEN AND DRIVER CLAUSE\"\n                        );\n                      }\n\n                      handleDateChange(`${e.target.checked}`, \"MortgageeForm\");\n                    }}\n                  />\n                }\n                label=\"MortgageeForm\"\n              />\n            </FormGroup>\n            <h5 style={{ margin: \"0\", padding: \"0\" }}>Form and Endorcement</h5>\n          </div>\n\n          {isLoadingMortgagee ? (\n            <LoadingButton loading={isLoadingMortgagee} />\n          ) : (\n            <FormControl\n              size=\"small\"\n              fullWidth\n              required\n              disabled={isAddOrEditMode}\n            >\n              <Select\n                labelId=\"Mortgagee\"\n                value={state.Mortgagee}\n                name=\"Mortgagee\"\n                onChange={handleInputChange}\n              >\n                {[\n                  { type: \"\" },\n                  ...dataMortgagee.data.mortgagee[\n                    `${state.form_type.toUpperCase()}`\n                  ],\n                ].map((items: any, idx: number) => {\n                  return (\n                    <MenuItem key={idx} value={items.Mortgagee}>\n                      {items.Mortgagee}\n                    </MenuItem>\n                  );\n                })}\n              </Select>\n            </FormControl>\n          )}\n          <div\n            style={{\n              border: \"1px solid #cbd5e1\",\n              height: \"100%\",\n              padding: \"5px\",\n              overflowY: \"auto\",\n              maxHeight: \"230px\",\n            }}\n          >\n            <Typography variant=\"caption\">{text}</Typography>\n          </div>\n          <TextField\n            \n            disabled={isAddOrEditMode}\n            label=\"Remarks\"\n            name=\"remarks\"\n            value={state.remarks}\n            onChange={handleInputChange}\n            multiline\n            rows={3}\n            InputProps={{\n              style: { height: \"auto\", fontSize: \"14px\" },\n            }}\n            sx={{\n              flex: 1,\n              height: \"auto\",\n              \".MuiFormLabel-root\": { fontSize: \"14px\" },\n              \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n            }}\n          />\n        </Box>\n        <fieldset\n          style={{\n            display: \"flex\",\n            flexDirection: \"column\",\n            rowGap: \"10px\",\n            padding: \"15px\",\n            border: \"1px solid #cbd5e1\",\n            borderRadius: \"5px\",\n          }}\n        >\n          <legend>Premiums</legend>\n          <div\n            style={{\n              display: \"flex\",\n              justifyContent: \"flex-end\",\n              padding: \"5px\",\n            }}\n          >\n            <Button\n              disabled={isAddOrEditMode}\n              size=\"small\"\n              variant=\"contained\"\n              color=\"primary\"\n              onClick={() => {\n                if (state.form_type.toLowerCase() === \"com\") {\n                  return comComputation();\n                }\n                tplCompuation();\n              }}\n            >\n              Compute\n            </Button>\n          </div>\n          {state.form_type.toLowerCase() === \"tpl\" && (\n            <TextField\n              disabled={isAddOrEditMode}\n              required\n              fullWidth\n              variant=\"outlined\"\n              size=\"small\"\n              label=\"Section I/II\"\n              name=\"SectionI_II\"\n              value={state.SectionI_II}\n              onChange={(e) => {\n                handleInputChange(e);\n              }}\n              onKeyDown={onKeyDownComputation}\n              placeholder=\"0.00\"\n              InputProps={{\n                inputComponent: NumericFormatCustom as any,\n                style: { height: \"27px\", fontSize: \"14px\" },\n              }}\n              sx={{\n                flex: 1,\n                height: \"27px\",\n                \".MuiFormLabel-root\": { fontSize: \"14px\" },\n                \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n              }}\n              onBlur={() => {\n                dispatch({\n                  type: \"UPDATE_FIELD\",\n                  field: \"SectionI_II\",\n                  value: parseFloat(state.SectionI_II).toFixed(2),\n                });\n              }}\n            />\n          )}\n          {state.form_type.toLowerCase() === \"com\" && (\n            <React.Fragment>\n              <div\n                style={{\n                  display: \"grid\",\n                  gridTemplateColumns: \"repeat(2,1fr)\",\n                  gap: \"10px\",\n                }}\n              >\n                <TextField\n                  disabled={isAddOrEditMode}\n                  required\n                  fullWidth\n                  variant=\"outlined\"\n                  size=\"small\"\n                  label=\"Section III(%)\"\n                  name=\"SectionIII\"\n                  value={state.SectionIII}\n                  onChange={handleInputChange}\n                  onKeyDown={onKeyDownComputation}\n                  placeholder=\"0.00\"\n                  InputProps={{\n                    inputComponent: NumericFormatCustom as any,\n                    style: { height: \"27px\", fontSize: \"14px\" },\n                  }}\n                  sx={{\n                    flex: 1,\n                    height: \"27px\",\n                    \".MuiFormLabel-root\": { fontSize: \"14px\" },\n                    \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n                  }}\n                  onBlur={() => {\n                    dispatch({\n                      type: \"UPDATE_FIELD\",\n                      field: \"SectionIII\",\n                      value: parseFloat(state.SectionIII).toFixed(2),\n                    });\n                  }}\n                />\n                <TextField\n                  disabled={isAddOrEditMode}\n                  required\n                  fullWidth\n                  variant=\"outlined\"\n                  size=\"small\"\n                  label=\"Own Damage\"\n                  name=\"OwnDamage\"\n                  value={state.OwnDamage}\n                  onChange={handleInputChange}\n                  onKeyDown={onKeyDownComputation}\n                  placeholder=\"0.00\"\n                  InputProps={{\n                    inputComponent: NumericFormatCustom as any,\n                    style: { height: \"27px\", fontSize: \"14px\" },\n                  }}\n                  sx={{\n                    flex: 1,\n                    height: \"27px\",\n                    \".MuiFormLabel-root\": { fontSize: \"14px\" },\n                    \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n                  }}\n                  onBlur={() => {\n                    dispatch({\n                      type: \"UPDATE_FIELD\",\n                      field: \"OwnDamage\",\n                      value: parseFloat(state.OwnDamage).toFixed(2),\n                    });\n                  }}\n                />\n                <TextField\n                  disabled={isAddOrEditMode}\n                  required\n                  fullWidth\n                  variant=\"outlined\"\n                  size=\"small\"\n                  label=\"Theft\"\n                  name=\"Theft\"\n                  value={state.Theft}\n                  onChange={handleInputChange}\n                  onKeyDown={onKeyDownComputation}\n                  placeholder=\"0.00\"\n                  InputProps={{\n                    inputComponent: NumericFormatCustom as any,\n                    style: { height: \"27px\", fontSize: \"14px\" },\n                  }}\n                  sx={{\n                    flex: 1,\n                    height: \"27px\",\n                    \".MuiFormLabel-root\": { fontSize: \"14px\" },\n                    \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n                  }}\n                  onBlur={() => {\n                    dispatch({\n                      type: \"UPDATE_FIELD\",\n                      field: \"Theft\",\n                      value: parseFloat(state.Theft).toFixed(2),\n                    });\n                  }}\n                />\n                <TextField\n                  disabled={isAddOrEditMode}\n                  required\n                  fullWidth\n                  variant=\"outlined\"\n                  size=\"small\"\n                  label=\"Section IV-A\"\n                  name=\"SectionIVA\"\n                  value={state.SectionIVA}\n                  onChange={handleInputChange}\n                  onKeyDown={onKeyDownComputation}\n                  placeholder=\"0.00\"\n                  InputProps={{\n                    inputComponent: NumericFormatCustom as any,\n                    style: { height: \"27px\", fontSize: \"14px\" },\n                  }}\n                  sx={{\n                    flex: 1,\n                    height: \"27px\",\n                    \".MuiFormLabel-root\": { fontSize: \"14px\" },\n                    \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n                  }}\n                  onBlur={() => {\n                    dispatch({\n                      type: \"UPDATE_FIELD\",\n                      field: \"SectionIVA\",\n                      value: parseFloat(state.SectionIVA).toFixed(2),\n                    });\n                  }}\n                />\n                <TextField\n                  disabled={isAddOrEditMode}\n                  required\n                  fullWidth\n                  variant=\"outlined\"\n                  size=\"small\"\n                  label=\"Section IV-B\"\n                  name=\"SectionIVB\"\n                  value={state.SectionIVB}\n                  onChange={handleInputChange}\n                  onKeyDown={onKeyDownComputation}\n                  placeholder=\"0.00\"\n                  InputProps={{\n                    inputComponent: NumericFormatCustom as any,\n                    style: { height: \"27px\", fontSize: \"14px\" },\n                  }}\n                  sx={{\n                    flex: 1,\n                    height: \"27px\",\n                    \".MuiFormLabel-root\": { fontSize: \"14px\" },\n                    \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n                  }}\n                  onBlur={() => {\n                    dispatch({\n                      type: \"UPDATE_FIELD\",\n                      field: \"SectionIVB\",\n                      value: parseFloat(state.SectionIVB).toFixed(2),\n                    });\n                  }}\n                />\n                <TextField\n                  disabled={isAddOrEditMode}\n                  label=\"Other\"\n                  required\n                  variant=\"outlined\"\n                  size=\"small\"\n                  name=\"PremiumOther\"\n                  value={state.PremiumOther}\n                  onChange={handleInputChange}\n                  onKeyDown={onKeyDownComputation}\n                  placeholder=\"0.00\"\n                  InputProps={{\n                    inputComponent: NumericFormatCustom as any,\n                    style: { height: \"27px\", fontSize: \"14px\" },\n                  }}\n                  sx={{\n                    flex: 1,\n                    height: \"27px\",\n                    \".MuiFormLabel-root\": { fontSize: \"14px\" },\n                    \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n                  }}\n                  onBlur={() => {\n                    dispatch({\n                      type: \"UPDATE_FIELD\",\n                      field: \"PremiumOther\",\n                      value: parseFloat(state.PremiumOther).toFixed(2),\n                    });\n                  }}\n                />\n              </div>\n              <div\n                style={{ display: \"flex\", gap: \"5px\", position: \"relative\" }}\n              >\n                <TextField\n                  disabled={isAddOrEditMode}\n                  required\n                  variant=\"outlined\"\n                  size=\"small\"\n                  label=\"AOG Percent\"\n                  name=\"AOGPercent\"\n                  value={state.AOGPercent}\n                  onChange={handleInputChange}\n                  onKeyDown={onKeyDownComputation}\n                  placeholder=\"0.00\"\n                  InputProps={{\n                    inputComponent: NumericFormatCustom as any,\n                    style: { height: \"27px\", fontSize: \"14px\" },\n                  }}\n                  sx={{\n                    width: \"80px\",\n                    height: \"27px\",\n                    \".MuiFormLabel-root\": { fontSize: \"14px\" },\n                    \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n                  }}\n                  onBlur={() => {\n                    dispatch({\n                      type: \"UPDATE_FIELD\",\n                      field: \"AOGPercent\",\n                      value: parseFloat(state.AOGPercent).toFixed(2),\n                    });\n                  }}\n                />\n                <TextField\n                  disabled={isAddOrEditMode}\n                  required\n                  variant=\"outlined\"\n                  size=\"small\"\n                  label=\"AOG\"\n                  name=\"AOG\"\n                  value={state.AOG}\n                  onChange={handleInputChange}\n                  onKeyDown={onKeyDownComputation}\n                  placeholder=\"0.00\"\n                  InputProps={{\n                    inputComponent: NumericFormatCustom as any,\n                    style: { height: \"27px\", fontSize: \"14px\" },\n                  }}\n                  sx={{\n                    flex: 1,\n                    height: \"27px\",\n                    \".MuiFormLabel-root\": { fontSize: \"14px\" },\n                    \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n                  }}\n                  onBlur={() => {\n                    dispatch({\n                      type: \"UPDATE_FIELD\",\n                      field: \"AOG\",\n                      value: parseFloat(state.AOG).toFixed(2),\n                    });\n                  }}\n                />\n              </div>\n            </React.Fragment>\n          )}\n          <Divider color=\"secondary\" />\n          <div\n            style={{\n              display: \"grid\",\n              gridTemplateColumns: \"repeat(2,1fr)\",\n              gap: \"10px\",\n            }}\n          >\n            <TextField\n              disabled={isAddOrEditMode}\n              required\n              variant=\"outlined\"\n              size=\"small\"\n              label=\"Total Premium\"\n              name=\"TotalPremium\"\n              value={state.TotalPremium}\n              InputProps={{\n                inputComponent: NumericFormatCustom as any,\n                style: { height: \"27px\", fontSize: \"14px\" },\n              }}\n              sx={{\n                flex: 1,\n                height: \"27px\",\n                \".MuiFormLabel-root\": { fontSize: \"14px\" },\n                \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n              }}\n              onChange={(e) => {\n                handleInputChange(e);\n              }}\n              onKeyDown={onKeyDownComputation}\n              placeholder=\"0.00\"\n              onBlur={() => {\n                dispatch({\n                  type: \"UPDATE_FIELD\",\n                  field: \"TotalPremium\",\n                  value: parseFloat(state.TotalPremium).toFixed(2),\n                });\n              }}\n            />\n            <TextField\n              disabled={isAddOrEditMode}\n              required\n              variant=\"outlined\"\n              size=\"small\"\n              label=\"Vat\"\n              name=\"Vat\"\n              value={state.Vat}\n              onChange={(e) => {\n                handleInputChange(e);\n              }}\n              onKeyDown={onKeyDownComputation}\n              placeholder=\"0.00\"\n              InputProps={{\n                inputComponent: NumericFormatCustom as any,\n                style: { height: \"27px\", fontSize: \"14px\" },\n              }}\n              sx={{\n                flex: 1,\n                height: \"27px\",\n                \".MuiFormLabel-root\": { fontSize: \"14px\" },\n                \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n              }}\n              onBlur={() => {\n                dispatch({\n                  type: \"UPDATE_FIELD\",\n                  field: \"Vat\",\n                  value: parseFloat(state.Vat).toFixed(2),\n                });\n              }}\n            />\n\n            <TextField\n              disabled={isAddOrEditMode}\n              required\n              variant=\"outlined\"\n              size=\"small\"\n              label=\"Doc Stamp\"\n              name=\"DocStamp\"\n              value={state.DocStamp}\n              onChange={(e) => {\n                handleInputChange(e);\n              }}\n              onKeyDown={onKeyDownComputation}\n              placeholder=\"0.00\"\n              InputProps={{\n                inputComponent: NumericFormatCustom as any,\n                style: { height: \"27px\", fontSize: \"14px\" },\n              }}\n              sx={{\n                flex: 1,\n                height: \"27px\",\n                \".MuiFormLabel-root\": { fontSize: \"14px\" },\n                \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n              }}\n              onBlur={() => {\n                dispatch({\n                  type: \"UPDATE_FIELD\",\n                  field: \"DocStamp\",\n                  value: parseFloat(state.DocStamp).toFixed(2),\n                });\n              }}\n            />\n            {state.form_type.toLowerCase() === \"com\" ? (\n              <div\n                style={{\n                  display: \"flex\",\n                  gap: \"5px\",\n                  position: \"relative\",\n                  width: \"100%\",\n                }}\n              >\n                <TextField\n                  disabled={isAddOrEditMode}\n                  required\n                  variant=\"outlined\"\n                  size=\"small\"\n                  name=\"LocalGovTaxPercent\"\n                  value={state.LocalGovTaxPercent}\n                  onChange={(e) => {\n                    handleInputChange(e);\n                  }}\n                  onKeyDown={onKeyDownComputation}\n                  placeholder=\"0.00\"\n                  InputProps={{\n                    inputComponent: NumericFormatCustom as any,\n                    style: { height: \"27px\", fontSize: \"14px\" },\n                  }}\n                  sx={{\n                    width: \"80px\",\n                    height: \"27px\",\n                    \".MuiFormLabel-root\": { fontSize: \"14px\" },\n                    \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n                  }}\n                  onBlur={() => {\n                    dispatch({\n                      type: \"UPDATE_FIELD\",\n                      field: \"LocalGovTaxPercent\",\n                      value: parseFloat(state.LocalGovTaxPercent).toFixed(2),\n                    });\n                  }}\n                />\n                <TextField\n                  disabled={isAddOrEditMode}\n                  required\n                  variant=\"outlined\"\n                  size=\"small\"\n                  label=\"Local Gov Tax\"\n                  name=\"LocalGovTax\"\n                  value={state.LocalGovTax}\n                  onChange={(e) => {\n                    handleInputChange(e);\n                  }}\n                  onKeyDown={onKeyDownComputation}\n                  placeholder=\"0.00\"\n                  InputProps={{\n                    inputComponent: NumericFormatCustom as any,\n                    style: { height: \"27px\", fontSize: \"14px\" },\n                  }}\n                  sx={{\n                    width: \"100%\",\n                    height: \"27px\",\n                    \".MuiFormLabel-root\": { fontSize: \"14px\" },\n                    \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n                  }}\n                  onBlur={() => {\n                    dispatch({\n                      type: \"UPDATE_FIELD\",\n                      field: \"LocalGovTax\",\n                      value: parseFloat(state.LocalGovTax).toFixed(2),\n                    });\n                  }}\n                />\n              </div>\n            ) : (\n              <TextField\n                disabled={isAddOrEditMode}\n                required\n                variant=\"outlined\"\n                size=\"small\"\n                label=\"Local Gov Tax\"\n                name=\"LocalGovTax\"\n                value={state.LocalGovTax}\n                onChange={(e) => {\n                  handleInputChange(e);\n                }}\n                onKeyDown={onKeyDownComputation}\n                placeholder=\"0.00\"\n                InputProps={{\n                  inputComponent: NumericFormatCustom as any,\n                  style: { height: \"27px\", fontSize: \"14px\" },\n                }}\n                sx={{\n                  width: \"80px\",\n                  height: \"27px\",\n                  \".MuiFormLabel-root\": { fontSize: \"14px\" },\n                  \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n                }}\n                onBlur={() => {\n                  dispatch({\n                    type: \"UPDATE_FIELD\",\n                    field: \"LocalGovTax\",\n                    value: parseFloat(state.LocalGovTax).toFixed(2),\n                  });\n                }}\n              />\n            )}\n          </div>\n          <TextField\n            disabled={isAddOrEditMode}\n            required\n            variant=\"outlined\"\n            size=\"small\"\n            label=\"StradCom\"\n            name=\"StradCom\"\n            value={state.StradCom}\n            onChange={(e) => {\n              handleInputChange(e);\n            }}\n            onKeyDown={onKeyDownComputation}\n            placeholder=\"0.00\"\n            InputProps={{\n              inputComponent: NumericFormatCustom as any,\n              style: { height: \"27px\", fontSize: \"14px\" },\n            }}\n            sx={{\n              width: \"50%\",\n              height: \"27px\",\n              \".MuiFormLabel-root\": { fontSize: \"14px\" },\n              \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n            }}\n            onBlur={() => {\n              dispatch({\n                type: \"UPDATE_FIELD\",\n                field: \"StradCom\",\n                value: parseFloat(state.StradCom).toFixed(2),\n              });\n            }}\n          />\n          <Divider color=\"secondary\" />\n          <TextField\n            disabled={isAddOrEditMode}\n            required\n            variant=\"outlined\"\n            size=\"small\"\n            label=\"Total Due\"\n            name=\"TotalDue\"\n            value={state.TotalDue}\n            onChange={handleInputChange}\n            onKeyDown={onKeyDownComputation}\n            placeholder=\"0.00\"\n            InputProps={{\n              inputComponent: NumericFormatCustom as any,\n              style: { height: \"27px\", fontSize: \"14px\" },\n            }}\n            sx={{\n              width: \"50%\",\n              height: \"27px\",\n              \".MuiFormLabel-root\": { fontSize: \"14px\" },\n              \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n            }}\n            onBlur={() => {\n              dispatch({\n                type: \"UPDATE_FIELD\",\n                field: \"TotalDue\",\n                value: parseFloat(state.TotalDue).toFixed(2),\n              });\n            }}\n          />\n        </fieldset>\n      </fieldset>\n    </div>\n  );\n}\n","import React, { useContext } from \"react\";\nimport { VehicleContext } from \"../VehiclePolicy\";\nimport {\n  TextField,\n  FormControl,\n  InputLabel,\n  Select,\n  MenuItem,\n  Box,\n  Typography,\n  Autocomplete,\n} from \"@mui/material\";\nimport { NumericFormatCustom } from \"../../../../../../../../components/NumberFormat\";\nimport { LoadingButton } from \"@mui/lab\";\nconst rateOption_ = [\n  { Account: \"0.00\" },\n  { Account: \"50,000.00\" },\n  { Account: \"75,000.00\" },\n  { Account: \"100,000.00\" },\n  { Account: \"150,000.00\" },\n  { Account: \"200,000.00\" },\n  { Account: \"250,000.00\" },\n  { Account: \"300,000.00\" },\n];\n\n// const compreTypeOption_ = [\n//   { Account: \"\" },\n//   { Account: \"PRIVATE VEHICLE\" },\n//   { Account: \"LIGHT AND MEDIUM VEHICLE\" },\n//   { Account: \"HEAVY VEHICLE\" },\n//   { Account: \"MC/TC-MOTORCYCLE/TRICYCLE\" },\n// ];\n\nconst tplTypeOption_ = [\n  { Account: \"\", PremuimPaid: \"0.00\" },\n  { Account: \"LIGHT PRIVATE VEHICLE(1YR)\", PremuimPaid: \"447.01\" },\n  { Account: \"MEDIUM PRIVATE VEHICLE(1YR)\", PremuimPaid: \"486.92\" },\n  { Account: \"HEAVY PRIVATE VEHICLE(1YR)\", PremuimPaid: \"957.88\" },\n  {\n    Account: \"MC/TC - MOTORCYCLE/TRICYCLE(1YR)\",\n    PremuimPaid: \"199.55\",\n  },\n  { Account: \"LIGHT PRIVATE VEHICLE(3YR)\", PremuimPaid: \"1285.14\" },\n  {\n    Account: \"MEDIUM PRIVATE VEHICLE(3YR)\",\n    PremuimPaid: \"1396.89\",\n  },\n  { Account: \"HEAVY PRIVATE VEHICLE(3YR)\", PremuimPaid: \"2746.34\" },\n  {\n    Account: \"MC/TC - MOTORCYCLE/TRICYCLE(3YR)\",\n    PremuimPaid: \"574.72\",\n  },\n];\n\nexport default function PolicyTypeDetails() {\n  const {\n    state,\n    handleInputChange,\n    handleDateChange,\n    showField,\n    isAddOrEditMode,\n    dispatch,\n    tplCompuation,\n    comComputation,\n    parseStringToNumber,\n    domination,\n    isLoadingrates,\n    user,\n  } = useContext(VehicleContext);\n\n  function onKeyDownComputation(e: any) {\n    if (e.code === \"NumpadEnter\" || e.code === \"Enter\") {\n      if (state.form_type.toLowerCase() === \"com\") {\n        return comComputation();\n      }\n      tplCompuation();\n    }\n  }\n\n  function calculateDeductible(value: any, vehicle: string, towing: string) {\n    const EVSV = parseFloat(parseStringToNumber(value).replace(/,/g, \"\"));\n    let Deductible = 0;\n    if (EVSV <= 0) {\n      handleInputChange({ target: { name: \"Deductible\", value: \"0\" } });\n      autorizeRepairComputation(\n        parseStringToNumber(Deductible.toFixed(2)),\n        towing\n      );\n    }\n\n    if (vehicle === \"private\") {\n      Deductible = EVSV * 0.005;\n    } else if (vehicle === \"heavy\") {\n      Deductible = EVSV * 0.01;\n    } else if (vehicle === \"motorcycle\") {\n      Deductible = EVSV * 0.01;\n    }\n\n    if (Deductible < 2000) {\n      Deductible = 2000;\n    }\n\n    handleInputChange({\n      target: {\n        name: \"Deductible\",\n        value: parseStringToNumber(Deductible.toFixed(2)),\n      },\n    });\n    autorizeRepairComputation(\n      parseStringToNumber(Deductible.toFixed(2)),\n      towing\n    );\n  }\n  function autorizeRepairComputation(\n    DeductibleInput: string,\n    TowingInput: string\n  ) {\n    const Deductible = parseFloat(\n      parseStringToNumber(DeductibleInput).replace(/,/g, \"\")\n    );\n    const Towing = parseFloat(\n      parseStringToNumber(TowingInput).replace(/,/g, \"\")\n    );\n\n    handleInputChange({\n      target: {\n        name: \"ARL\",\n        value: parseStringToNumber(\n          (Math.abs(Deductible) + Math.abs(Towing)).toFixed(2)\n        ),\n      },\n    });\n  }\n  return (\n    <div style={{ display: \"flex\", flexDirection: \"column\" }}>\n      {state.form_type.toLowerCase() === \"tpl\" && (\n        <React.Fragment>\n          <Typography variant=\"h6\" sx={{ marginY: \"10px\" }}>\n            THIRD PARTY LIABILITY\n          </Typography>\n          <fieldset\n            style={{\n              display: \"flex\",\n              gap: \"10px\",\n              padding: \"15px\",\n              border: \"1px solid #cbd5e1\",\n              borderRadius: \"5px\",\n            }}\n          >\n            <legend>Section I/II</legend>\n            <FormControl\n              size=\"small\"\n              disabled={!showField.thirdparty || isAddOrEditMode}\n              sx={{\n                flex: 1,\n                \".MuiFormLabel-root\": {\n                  fontSize: \"14px\",\n                  background: \"white\",\n                  zIndex: 99,\n                  padding: \"0 3px\",\n                },\n                \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n              }}\n            >\n              <InputLabel id=\"Type\">Type</InputLabel>\n              <Select\n                labelId=\"Type\"\n                value={state.TplType}\n                label=\"Type\"\n                name=\"TplType\"\n                onChange={(e) => {\n                  const selected: any = tplTypeOption_.filter(\n                    (items) => items.Account === e.target.value\n                  )[0];\n                  handleInputChange(e);\n                  handleDateChange(selected.PremuimPaid, \"PremiumPaid\");\n                }}\n                sx={{\n                  height: \"27px\",\n                  fontSize: \"14px\",\n                }}\n              >\n                {[...tplTypeOption_].map((items: any, idx: number) => {\n                  return (\n                    <MenuItem key={idx} value={items.Account}>\n                      {items.Account}\n                    </MenuItem>\n                  );\n                })}\n              </Select>\n            </FormControl>\n\n            <TextField\n              disabled={isAddOrEditMode}\n              variant=\"outlined\"\n              size=\"small\"\n              label=\"Premium Paid\"\n              name=\"PremiumPaid\"\n              value={state.PremiumPaid}\n              onChange={(e) => {\n                handleInputChange(e);\n              }}\n              placeholder=\"0.00\"\n              onBlur={() => {\n                dispatch({\n                  type: \"UPDATE_FIELD\",\n                  field: \"PremiumPaid\",\n                  value: parseFloat(state.PremiumPaid).toFixed(2),\n                });\n              }}\n              onKeyDown={onKeyDownComputation}\n              InputProps={{\n                inputComponent: NumericFormatCustom as any,\n                style: { height: \"27px\", fontSize: \"14px\" },\n              }}\n              sx={{\n                flex: 1,\n                height: \"27px\",\n                \".MuiFormLabel-root\": { fontSize: \"14px\" },\n                \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n              }}\n            />\n          </fieldset>\n        </React.Fragment>\n      )}\n      {state.form_type.toLowerCase() === \"com\" && (\n        <React.Fragment>\n          <Typography variant=\"h6\" sx={{ marginY: \"10px\" }}>\n            COMPREHENSEVE\n          </Typography>\n          <fieldset\n            style={{\n              display: \"flex\",\n              flexDirection: \"row\",\n              gap: \"10px\",\n              gridArea: \"content4\",\n              padding: \"15px\",\n              border: \"1px solid #cbd5e1\",\n              borderRadius: \"5px\",\n            }}\n          >\n            <legend>Section III/IV</legend>\n            <Box\n              sx={(theme) => ({\n                flex: 1,\n                display: \"flex\",\n                columnGap: \"15px\",\n                flexDirection: \"column\",\n                gap: \"8px\",\n              })}\n            >\n              <TextField\n                disabled={isAddOrEditMode}\n                fullWidth\n                variant=\"outlined\"\n                size=\"small\"\n                label=\"Estimated Value of Schedule Vehicle\"\n                name=\"EVSV\"\n                value={state.EVSV}\n                onChange={(e) => {\n                  calculateDeductible(\n                    e.target.value,\n                    state.vehicle,\n                    state.Towing\n                  );\n                  handleInputChange(e);\n                }}\n                placeholder=\"0.00\"\n                InputProps={{\n                  style: { height: \"27px\", fontSize: \"14px\" },\n                  inputComponent: NumericFormatCustom as any,\n                }}\n                sx={{\n                  flex: 1,\n                  height: \"27px\",\n                  \".MuiFormLabel-root\": { fontSize: \"14px\" },\n                  \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n                }}\n                onKeyDown={onKeyDownComputation}\n                onBlur={() => {\n                  dispatch({\n                    type: \"UPDATE_FIELD\",\n                    field: \"EVSV\",\n                    value: parseFloat(state.EVSV).toFixed(2),\n                  });\n                }}\n              />\n              <TextField\n                disabled={isAddOrEditMode}\n                variant=\"outlined\"\n                size=\"small\"\n                label=\"Aircon\"\n                fullWidth\n                name=\"Aircon\"\n                value={state.Aircon}\n                onChange={handleInputChange}\n                placeholder=\"0.00\"\n                InputProps={{\n                  style: { height: \"27px\", fontSize: \"14px\" },\n                  inputComponent: NumericFormatCustom as any,\n                }}\n                sx={{\n                  flex: 1,\n                  height: \"27px\",\n                  \".MuiFormLabel-root\": { fontSize: \"14px\" },\n                  \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n                }}\n                onBlur={() => {\n                  dispatch({\n                    type: \"UPDATE_FIELD\",\n                    field: \"Aircon\",\n                    value: parseFloat(state.Aircon).toFixed(2),\n                  });\n                }}\n              />\n              <TextField\n                disabled={isAddOrEditMode}\n                variant=\"outlined\"\n                size=\"small\"\n                label=\"Stereo\"\n                fullWidth\n                name=\"Stereo\"\n                value={state.Stereo}\n                onChange={handleInputChange}\n                placeholder=\"0.00\"\n                InputProps={{\n                  style: { height: \"27px\", fontSize: \"14px\" },\n                  inputComponent: NumericFormatCustom as any,\n                }}\n                sx={{\n                  flex: 1,\n                  height: \"27px\",\n                  \".MuiFormLabel-root\": { fontSize: \"14px\" },\n                  \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n                }}\n                onBlur={() => {\n                  dispatch({\n                    type: \"UPDATE_FIELD\",\n                    field: \"Stereo\",\n                    value: parseFloat(state.Stereo).toFixed(2),\n                  });\n                }}\n              />\n              <TextField\n                disabled={isAddOrEditMode}\n                variant=\"outlined\"\n                size=\"small\"\n                label=\"Magwheels\"\n                fullWidth\n                name=\"Magwheels\"\n                value={state.Magwheels}\n                onChange={handleInputChange}\n                placeholder=\"0.00\"\n                InputProps={{\n                  style: { height: \"27px\", fontSize: \"14px\" },\n                  inputComponent: NumericFormatCustom as any,\n                }}\n                sx={{\n                  flex: 1,\n                  height: \"27px\",\n                  \".MuiFormLabel-root\": { fontSize: \"14px\" },\n                  \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n                }}\n                onBlur={() => {\n                  dispatch({\n                    type: \"UPDATE_FIELD\",\n                    field: \"Magwheels\",\n                    value: parseFloat(state.Magwheels).toFixed(2),\n                  });\n                }}\n              />\n\n              <div\n                style={{\n                  display: \"flex\",\n                  gap: \"10px\",\n                  alignItems: \"center\",\n                }}\n              >\n                <TextField\n                  disabled={isAddOrEditMode}\n                  variant=\"outlined\"\n                  size=\"small\"\n                  label=\"Others(Specify)\"\n                  fullWidth\n                  name=\"OthersDesc\"\n                  value={state.OthersDesc}\n                  onChange={handleInputChange}\n                  InputProps={{\n                    style: { height: \"27px\", fontSize: \"14px\" },\n                  }}\n                  sx={{\n                    flex: 1,\n                    height: \"27px\",\n                    \".MuiFormLabel-root\": { fontSize: \"14px\" },\n                    \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n                  }}\n                />\n                <div\n                  style={{\n                    display: \"flex\",\n                    alignItems: \"center\",\n                    justifyContent: \"center\",\n                    width: \"30px\",\n                    height: \"3px\",\n                    backgroundColor: \"black\",\n                    boxSizing: \"border-box\",\n                  }}\n                ></div>\n                <TextField\n                  disabled={isAddOrEditMode}\n                  variant=\"outlined\"\n                  size=\"small\"\n                  name=\"OthersRate\"\n                  value={state.OthersRate}\n                  onChange={handleInputChange}\n                  placeholder=\"0.00\"\n                  InputProps={{\n                    inputComponent: NumericFormatCustom as any,\n                    style: { height: \"27px\", fontSize: \"14px\" },\n                  }}\n                  sx={{\n                    flex: 1,\n                    height: \"27px\",\n                    \".MuiFormLabel-root\": { fontSize: \"14px\" },\n                    \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n                  }}\n                  onBlur={() => {\n                    dispatch({\n                      type: \"UPDATE_FIELD\",\n                      field: \"OthersRate\",\n                      value: parseFloat(state.OthersRate).toFixed(2),\n                    });\n                  }}\n                />\n              </div>\n              {/* <FormControl\n                disabled={isAddOrEditMode}  \n                size=\"small\"\n                sx={{\n                  flex: 1,\n                  \".MuiFormLabel-root\": {\n                    fontSize: \"14px\",\n                    background: \"white\",\n                    zIndex: 99,\n                    padding: \"0 3px\",\n                  },\n                  \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n                }}\n              >\n                <InputLabel id=\"Type\">Type</InputLabel>\n                <Select\n                  labelId=\"Type\"\n                  value={state.CompreType}\n                  label=\"Type\"\n                  name=\"CompreType\"\n                  onChange={handleInputChange}\n                  sx={{\n                    height: \"27px\",\n                    fontSize: \"14px\",\n                  }}\n                >\n                  {compreTypeOption_.map((items: any, idx: number) => {\n                    return (\n                      <MenuItem key={idx} value={items.Account}>\n                        {items.Account}\n                      </MenuItem>\n                    );\n                  })}\n                </Select>\n              </FormControl> */}\n            </Box>\n            <Box sx={{ display: \"flex\", columnGap: \"10px\", flex: 1 }}>\n              <Box sx={{ display: \"flex\", columnGap: \"10px\", flex: 1 }}>\n                <fieldset\n                  style={\n                    {\n                      flex: 1,\n                      padding: \"15px\",\n                      border: \"1px solid #cbd5e1\",\n                      borderRadius: \"5px\",\n                    } as any\n                  }\n                >\n                  <div style={{ display: \"flex\", columnGap: \"4px\" }}>\n                    <FormControl\n                      size=\"small\"\n                      disabled={isAddOrEditMode}\n                      sx={{\n                        width: \"100px\",\n                        \".MuiFormLabel-root\": {\n                          fontSize: \"14px\",\n                          background: \"white\",\n                          zIndex: 99,\n                          padding: \"0 3px\",\n                        },\n                        \".MuiFormLabel-root[data-shrink=false]\": {\n                          top: \"-5px\",\n                        },\n                      }}\n                    >\n                      <InputLabel id=\"vehicle\">Vehicle</InputLabel>\n                      <Select\n                        labelId=\"vehicle\"\n                        value={state.vehicle}\n                        label=\"Vehicle\"\n                        name=\"vehicle\"\n                        onChange={(e) => {\n                          calculateDeductible(\n                            state.EVSV,\n                            e.target.value,\n                            state.Towing\n                          );\n                          handleInputChange(e);\n                        }}\n                        sx={{\n                          height: \"27px\",\n                          fontSize: \"14px\",\n                        }}\n                      >\n                        <MenuItem value={\"private\"}>Private</MenuItem>\n                        <MenuItem value={\"heavy\"}>Heavy</MenuItem>\n                        <MenuItem value={\"motorcycle\"}>Motorcycle</MenuItem>\n                      </Select>\n                    </FormControl>\n                    <TextField\n                      disabled={isAddOrEditMode}\n                      variant=\"outlined\"\n                      size=\"small\"\n                      label=\"Deductible\"\n                      fullWidth\n                      name=\"Deductible\"\n                      value={state.Deductible}\n                      onChange={handleInputChange}\n                      placeholder=\"0.00\"\n                      InputProps={{\n                        inputComponent: NumericFormatCustom as any,\n                        style: { height: \"27px\", fontSize: \"14px\" },\n                      }}\n                      sx={{\n                        marginBottom: \"10px\",\n                        flex: 1,\n                        height: \"27px\",\n                        \".MuiFormLabel-root\": { fontSize: \"14px\" },\n                        \".MuiFormLabel-root[data-shrink=false]\": {\n                          top: \"-5px\",\n                        },\n                      }}\n                      onBlur={() => {\n                        dispatch({\n                          type: \"UPDATE_FIELD\",\n                          field: \"Deductible\",\n                          value: parseFloat(state.Deductible).toFixed(2),\n                        });\n                      }}\n                    />\n                  </div>\n\n                  <TextField\n                    disabled={isAddOrEditMode}\n                    variant=\"outlined\"\n                    size=\"small\"\n                    label=\"Towing\"\n                    fullWidth\n                    name=\"Towing\"\n                    value={state.Towing}\n                    onChange={(e) => {\n                      autorizeRepairComputation(\n                        state.Deductible,\n                        e.target.value\n                      );\n                      handleInputChange(e);\n                    }}\n                    placeholder=\"0.00\"\n                    InputProps={{\n                      inputComponent: NumericFormatCustom as any,\n                      style: { height: \"27px\", fontSize: \"14px\" },\n                    }}\n                    sx={{\n                      marginBottom: \"10px\",\n                      flex: 1,\n                      height: \"27px\",\n                      \".MuiFormLabel-root\": { fontSize: \"14px\" },\n                      \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n                    }}\n                    onBlur={() => {\n                      dispatch({\n                        type: \"UPDATE_FIELD\",\n                        field: \"Towing\",\n                        value: parseFloat(state.Towing).toFixed(2),\n                      });\n                    }}\n                  />\n                  <TextField\n                    disabled={isAddOrEditMode}\n                    variant=\"outlined\"\n                    size=\"small\"\n                    label=\"Authorized Repair Limit\"\n                    fullWidth\n                    name=\"ARL\"\n                    value={state.ARL}\n                    onChange={handleInputChange}\n                    placeholder=\"0.00\"\n                    InputProps={{\n                      inputComponent: NumericFormatCustom as any,\n                      style: { height: \"27px\", fontSize: \"14px\" },\n                    }}\n                    sx={{\n                      marginBottom: \"10px\",\n                      flex: 1,\n                      height: \"27px\",\n                      \".MuiFormLabel-root\": { fontSize: \"14px\" },\n                      \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n                    }}\n                    onBlur={() => {\n                      dispatch({\n                        type: \"UPDATE_FIELD\",\n                        field: \"ARL\",\n                        value: parseFloat(state.ARL).toFixed(2),\n                      });\n                    }}\n                  />\n                </fieldset>\n                <fieldset\n                  style={\n                    {\n                      flex: 1,\n                      padding: \"15px\",\n                      border: \"1px solid #cbd5e1\",\n                      borderRadius: \"5px\",\n                    } as any\n                  }\n                >\n                  <Autocomplete\n                    disabled={isAddOrEditMode}\n                    value={state.BodyInjury}\n                    onChange={(event: any, value: string | null) => {\n                      handleInputChange({\n                        target: { name: \"BodyInjury\", value },\n                      });\n                    }}\n                    size=\"small\"\n                    freeSolo\n                    disableClearable\n                    options={rateOption_.map((option: any) => option.Account)}\n                    getOptionLabel={(option: any) => option}\n                    sx={(theme) => ({\n                      height: \"27px\",\n                      marginBottom: \"10px\",\n                      \"& .MuiAutocomplete-inputRoot\": {\n                        flexWrap: \"nowrap !important\",\n                      },\n                    })}\n                    renderInput={(params) => (\n                      <TextField\n                        {...params}\n                        label=\"Bodily Injury\"\n                        name=\"BodyInjury\"\n                        sx={{\n                          height: \"27px\",\n                        }}\n                        InputProps={{\n                          ...params.InputProps,\n                          type: \"search\",\n                          style: { height: \"27px\", fontSize: \"14px\" },\n                        }}\n                        onChange={(e) => {\n                          const number: number = parseFloat(\n                            e.target.value.replace(/,/g, \"\")\n                          );\n                          if (isNaN(number)) {\n                            return handleInputChange(e);\n                          }\n                          const formattedNumberUS =\n                            number.toLocaleString(\"en-US\");\n                          e.target.value = formattedNumberUS;\n                          handleInputChange(e);\n                        }}\n                        onBlur={() => {\n                          if (\n                            isNaN(\n                              parseFloat(state.BodyInjury.replace(/,/g, \"\"))\n                            )\n                          ) {\n                            return dispatch({\n                              type: \"UPDATE_FIELD\",\n                              field: \"BodyInjury\",\n                              value: \"0.00\",\n                            });\n                          }\n                          dispatch({\n                            type: \"UPDATE_FIELD\",\n                            field: \"BodyInjury\",\n                            value: parseFloat(\n                              state.BodyInjury.replace(/,/g, \"\")\n                            ).toLocaleString(\"en-US\", {\n                              style: \"decimal\",\n                              minimumFractionDigits: 2,\n                              maximumFractionDigits: 2,\n                            }),\n                          });\n                        }}\n                      />\n                    )}\n                  />\n                  <Autocomplete\n                    disabled={isAddOrEditMode}\n                    value={state.PropertyDamage}\n                    onChange={(event: any, value: string | null) => {\n                      handleInputChange({\n                        target: { name: \"PropertyDamage\", value },\n                      });\n                    }}\n                    size=\"small\"\n                    freeSolo\n                    disableClearable\n                    options={rateOption_.map((option: any) => option.Account)}\n                    getOptionLabel={(option: any) => option}\n                    sx={(theme) => ({\n                      height: \"27px\",\n                      marginBottom: \"10px\",\n                      \"& .MuiAutocomplete-inputRoot\": {\n                        flexWrap: \"nowrap !important\",\n                      },\n                    })}\n                    renderInput={(params) => (\n                      <TextField\n                        {...params}\n                        label=\"Property Damage\"\n                        name=\"PropertyDamage\"\n                        sx={{\n                          height: \"27px\",\n                        }}\n                        InputProps={{\n                          ...params.InputProps,\n                          type: \"search\",\n                          style: { height: \"27px\", fontSize: \"14px\" },\n                        }}\n                        onChange={(e) => {\n                          const number: number = parseFloat(\n                            e.target.value.replace(/,/g, \"\")\n                          );\n                          if (isNaN(number)) {\n                            return handleInputChange(e);\n                          }\n                          const formattedNumberUS =\n                            number.toLocaleString(\"en-US\");\n                          e.target.value = formattedNumberUS;\n                          handleInputChange(e);\n                        }}\n                        onBlur={() => {\n                          if (\n                            isNaN(\n                              parseFloat(state.PropertyDamage.replace(/,/g, \"\"))\n                            )\n                          ) {\n                            return dispatch({\n                              type: \"UPDATE_FIELD\",\n                              field: \"PropertyDamage\",\n                              value: \"0.00\",\n                            });\n                          }\n                          dispatch({\n                            type: \"UPDATE_FIELD\",\n                            field: \"PropertyDamage\",\n                            value: parseFloat(\n                              state.PropertyDamage.replace(/,/g, \"\")\n                            ).toLocaleString(\"en-US\", {\n                              style: \"decimal\",\n                              minimumFractionDigits: 2,\n                              maximumFractionDigits: 2,\n                            }),\n                          });\n                        }}\n                      />\n                    )}\n                  />\n                  <Autocomplete\n                    disabled={isAddOrEditMode}\n                    value={state.PersinalAccident}\n                    onChange={(event: any, value: string | null) => {\n                      handleInputChange({\n                        target: { name: \"PersinalAccident\", value },\n                      });\n                    }}\n                    size=\"small\"\n                    freeSolo\n                    disableClearable\n                    options={rateOption_.map((option: any) => option.Account)}\n                    getOptionLabel={(option: any) => option}\n                    sx={(theme) => ({\n                      height: \"27px\",\n                      marginBottom: \"10px\",\n                      \"& .MuiAutocomplete-inputRoot\": {\n                        flexWrap: \"nowrap !important\",\n                      },\n                    })}\n                    renderInput={(params) => (\n                      <TextField\n                        {...params}\n                        label=\"Personal Accident\"\n                        name=\"PersinalAccident\"\n                        sx={{\n                          height: \"27px\",\n                        }}\n                        InputProps={{\n                          ...params.InputProps,\n                          type: \"search\",\n                          style: { height: \"27px\", fontSize: \"14px\" },\n                        }}\n                        onChange={(e) => {\n                          const number: number = parseFloat(\n                            e.target.value.replace(/,/g, \"\")\n                          );\n                          if (isNaN(number)) {\n                            return handleInputChange(e);\n                          }\n                          const formattedNumberUS =\n                            number.toLocaleString(\"en-US\");\n                          e.target.value = formattedNumberUS;\n                          handleInputChange(e);\n                        }}\n                        onBlur={() => {\n                          if (\n                            isNaN(\n                              parseFloat(\n                                state.PersinalAccident.replace(/,/g, \"\")\n                              )\n                            )\n                          ) {\n                            return dispatch({\n                              type: \"UPDATE_FIELD\",\n                              field: \"PersinalAccident\",\n                              value: \"0.00\",\n                            });\n                          }\n                          dispatch({\n                            type: \"UPDATE_FIELD\",\n                            field: \"PersinalAccident\",\n                            value: parseFloat(\n                              state.PersinalAccident.replace(/,/g, \"\")\n                            ).toLocaleString(\"en-US\", {\n                              style: \"decimal\",\n                              minimumFractionDigits: 2,\n                              maximumFractionDigits: 2,\n                            }),\n                          });\n                        }}\n                      />\n                    )}\n                  />\n                </fieldset>\n              </Box>\n            </Box>\n          </fieldset>\n        </React.Fragment>\n      )}\n      <br />\n      {isLoadingrates ? (\n        <LoadingButton loading={isLoadingrates} />\n      ) : (\n        <FormControl\n          disabled={isAddOrEditMode || state.PolicyAccount === \"\"}\n          fullWidth\n          size=\"small\"\n          sx={{\n            width: \"300px\",\n            \".MuiFormLabel-root\": {\n              fontSize: \"14px\",\n              background: \"white\",\n              zIndex: 99,\n              padding: \"0 3px\",\n            },\n            \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n          }}\n        >\n          <InputLabel id=\"Denomination\">Domination</InputLabel>\n          <Select\n            disabled={\n              state.form_action === \"TEMP\" && user?.department === \"UCSMI\"\n            }\n            labelId=\"Denomination\"\n            value={state.Denomination}\n            label=\"Denomination\"\n            name=\"Denomination\"\n            onChange={handleInputChange}\n            sx={{\n              height: \"27px\",\n              fontSize: \"14px\",\n            }}\n          >\n            {domination.map((items: any, idx: number) => {\n              return (\n                <MenuItem key={idx} value={items.type}>\n                  {items.type}\n                </MenuItem>\n              );\n            })}\n          </Select>\n        </FormControl>\n      )}\n    </div>\n  );\n}\n","import {\n  createContext,\n  useContext,\n  useReducer,\n  useState,\n  useRef,\n  useEffect,\n  useCallback,\n} from \"react\";\nimport {\n  Box,\n  Button,\n  CircularProgress,\n  IconButton,\n  TextField,\n} from \"@mui/material\";\nimport { pink } from \"@mui/material/colors\";\nimport AddIcon from \"@mui/icons-material/Add\";\nimport { AuthContext } from \"../../../../../../../components/AuthContext\";\nimport { useQuery, useMutation, useQueryClient } from \"react-query\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport SaveIcon from \"@mui/icons-material/Save\";\nimport Swal from \"sweetalert2\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\nimport { GridRowSelectionModel } from \"@mui/x-data-grid\";\nimport { FormControl, InputLabel, Select, MenuItem } from \"@mui/material\";\nimport ModalWithTable from \"../../../../../../../components/ModalWithTable\";\nimport { LoadingButton } from \"@mui/lab\";\nimport { flushSync } from \"react-dom\";\nimport useMultipleComponent from \"../../../../../../../hooks/useMultipleComponent\";\nimport PolicyInformation from \"./VehicleComponent/PolicyInformation\";\nimport PolicyPremium from \"./VehicleComponent/PolicyPremium\";\nimport PolicyTypeDetails from \"./VehicleComponent/PolicyTypeDetails\";\nimport NavigateNextIcon from \"@mui/icons-material/NavigateNext\";\nimport styled from \"@emotion/styled\";\nimport {\n  codeCondfirmationAlert,\n  saveCondfirmationAlert,\n} from \"../../../../../../../lib/confirmationAlert\";\nimport { addYears, format } from \"date-fns\";\nimport ArticleIcon from \"@mui/icons-material/Article\";\nimport PageHelmet from \"../../../../../../../components/Helmet\";\n\ninterface CustomButtonProps {\n  currentStepIndex: number;\n  index: number;\n}\nexport const CustomButton = styled.button`\n  cursor: pointer;\n  border: none;\n  outline: none;\n  background: transparent;\n  font-size: 17px;\n  color:${(props: CustomButtonProps) => {\n    return props.currentStepIndex === props.index ? \"#0284c7;\" : \"#020617;\";\n  }}\n  padding: 0;\n  &:hover  {\n    color: #64748b;\n    background:white;\n  },\n`;\nconst initialState = {\n  form_action: \"REG\",\n  form_type: \"COM\",\n  sub_account: \"HO\",\n  //insurer info\n  client_id: \"\",\n  client_name: \"\",\n  client_address: \"\",\n  //agent info\n  agent_id: \"\",\n  agent_name: \"\",\n  agent_com: \"0.00\",\n  sale_officer: \"\",\n  //Vehicle policy\n  PolicyAccount: \"\",\n  PolicyNo: \"\",\n  CCN: \"\",\n  ORN: \"\",\n  rateCost: \"\",\n  //Period Insurance\n  DateFrom: new Date(),\n  DateTo: addYears(new Date(), 1),\n  DateIssued: new Date(),\n  //Insured Unit\n  Model: \"\",\n  Make: \"\",\n  TB: \"\",\n  Color: \"\",\n  BLTFileNo: \"\",\n  PlateNo: \"\",\n  ChassisNo: \"\",\n  MotorNo: \"\",\n  AuthorizedCapacity: \"\",\n  UnladenWeigth: \"\",\n\n  //==========================\n  //tpl\n  TplType: \"\",\n  PremiumPaid: \"\",\n  //compre\n  EVSV: \"\",\n  Aircon: \"\",\n  Stereo: \"\",\n  Magwheels: \"\",\n  OthersRate: \"\",\n  OthersDesc: \"\",\n  CompreType: \"\",\n\n  Deductible: \"\",\n  Towing: \"\",\n  ARL: \"\",\n  BodyInjury: \"0.00\",\n  PropertyDamage: \"0.00\",\n  PersinalAccident: \"0.00\",\n  Denomination: \"\",\n\n  //==========================\n  //mortgage\n  Mortgagee: \"\",\n  MortgageeForm: \"false\",\n  remarks: \"\",\n  //Premiums\n  SectionI_II: \"\",\n  SectionIII: \"\",\n  OwnDamage: \"\",\n  Theft: \"\",\n  SectionIVA: \"\",\n  SectionIVB: \"\",\n  PremiumOther: \"\",\n  AOG: \"\",\n  AOGPercent: \"0.5\",\n  TotalPremium: \"\",\n  Vat: \"\",\n  DocStamp: \"\",\n  LocalGovTaxPercent: \"0.75\",\n  LocalGovTax: \"\",\n  StradCom: \"\",\n  TotalDue: \"\",\n  Type: \"charles1\",\n  Source_No_Ref_ID: \"\",\n  vehicle: \"private\",\n\n  // extra\n  mode: \"\",\n};\n\nconst initialSummaryState = {\n  PolicyNo: \"\",\n  PolicyType: \"\",\n  DateIssued: \"\",\n  Account: \" \",\n  Mortgagee: \"\",\n  agent_fullname: \"\",\n  sale_officer: \"\",\n  TotalDue: \"\",\n  IDNo: \"\",\n  ShortName: \"\",\n  address: \"\",\n  options: \"\",\n  subShortName: \"\",\n  email: \"\",\n  mobile: \"\",\n  telephone: \"\",\n};\n\nconst reducer = (state: any, action: any) => {\n  switch (action.type) {\n    case \"UPDATE_FIELD\":\n      const newState = {\n        ...state,\n        [action.field]: action.value,\n      };\n      return newState;\n    default:\n      return state;\n  }\n};\nexport const VehicleContext = createContext<any>({});\nconst queryKeySearch = \"vehicle-policy-search\";\nconst queryKeyUpdateAdd = \"vehicle-policy-search\";\nconst queryKeyGet = \"vehicle-policy-get\";\nconst querySearchPolicyIds = \"vehicle-policy-search-ppolicy-id\";\nexport const vpolicyColumn = [\n  { field: \"_DateIssued\", headerName: \"Date\", width: 200 },\n  { field: \"PolicyNo\", headerName: \"Policy No\", width: 170 },\n  {\n    field: \"Account\",\n    headerName: \"Account\",\n    width: 170,\n  },\n  {\n    field: \"client_fullname\",\n    headerName: \"Full Name\",\n    flex: 1,\n  },\n];\nconst vpolicyKey = \"vehicle-policy\";\n\nexport default function VehiclePolicy() {\n  const [showClientDetails, setShowCLientDetails] = useState(false);\n  const [domination, setDomination] = useState([]);\n  const { step, goTo, currentStepIndex } = useMultipleComponent([\n    <PolicyInformation />,\n    <PolicyTypeDetails />,\n    <PolicyPremium />,\n  ]);\n  const [summaryState, summaryDispatch] = useReducer(\n    reducer,\n    initialSummaryState\n  );\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const { myAxios, user } = useContext(AuthContext);\n  const [rows, setRows] = useState<GridRowSelectionModel>([]);\n  const [tplId, setTplId] = useState<GridRowSelectionModel>([]);\n  const [search, setSearch] = useState(\"\");\n  const [searchShow, setSearchShow] = useState(false);\n  const [Mortgagee, setMortgagee] = useState(false);\n  const [showField, setShowField] = useState({\n    thirdparty: state.form_type.toLowerCase() === \"tpl\",\n    compre: state.form_type.toLowerCase() === \"com\",\n  });\n  const newButtonRef = useRef<HTMLButtonElement>(null);\n  const cancelButtonRef = useRef<HTMLButtonElement>(null);\n  const deleteButtonRef = useRef<HTMLButtonElement>(null);\n  const vPolicySearchInput = useRef<HTMLInputElement>(null);\n  const queryClient = useQueryClient();\n  const isAddOrEditMode = state.mode === \"\";\n\n  function onSearchSelected(selectedRowData: any) {\n    const {\n      address,\n      IDNo,\n      Account,\n      SubAcct,\n      PolicyNo,\n      DateIssued,\n      TotalPremium,\n      Vat,\n      DocStamp,\n      LGovTax,\n      Misc,\n      TotalDue,\n      AgentID,\n      AgentCom,\n      CoverNo,\n      ORNo,\n      DateFrom,\n      DateTo,\n      Model,\n      Make,\n      BodyType,\n      Color,\n      BLTFileNo,\n      PlateNo,\n      ChassisNo,\n      MotorNo,\n      AuthorizedCap,\n      UnladenWeight,\n      PremiumPaid,\n      EstimatedValue,\n      Aircon,\n      Stereo,\n      Magwheels,\n      Others,\n      OthersAmount,\n      Deductible,\n      Towing,\n      RepairLimit,\n      BodilyInjury,\n      PropertyDamage,\n      PersonalAccident,\n      SecI,\n      SecIIPercent,\n      ODamage,\n      Theft,\n      Sec4A,\n      Sec4B,\n      Sec4C,\n      AOG,\n      MortgageeForm,\n      Mortgagee,\n      Denomination,\n      client_fullname,\n      agent_fullname,\n      TPLTypeSection_I_II,\n      AOGPercent,\n      LocalGovTaxPercent,\n      Remarks,\n      sale_officer,\n    } = selectedRowData[0];\n\n    function formatTextNumber(input: string) {\n      const userInput = input.toString();\n      if (isNaN(parseFloat(userInput))) {\n        return \"0.00\";\n      }\n      var formattedNumber = parseFloat(\n        userInput.replace(/,/g, \"\")\n      ).toLocaleString(\"en-US\", {\n        minimumFractionDigits: 2,\n        maximumFractionDigits: 2,\n      });\n\n      return formattedNumber;\n    }\n\n    function setFixValue(value: string) {\n      const intVal = parseFloat(value);\n      return intVal.toFixed(2);\n    }\n    function intToBoolean(value: string) {\n      const intVal = parseInt(value);\n      return intVal ? true : false;\n    }\n\n    handleDateChange(SubAcct, \"sub_account\");\n    handleDateChange(IDNo, \"client_id\");\n    handleDateChange(client_fullname, \"client_name\");\n    handleDateChange(address, \"client_address\");\n\n    handleDateChange(AgentID, \"agent_id\");\n    handleDateChange(agent_fullname, \"agent_name\");\n    handleDateChange(AgentCom, \"agent_com\");\n\n    handleDateChange(Account, \"PolicyAccount\");\n    handleDateChange(PolicyNo, \"PolicyNo\");\n    handleDateChange(CoverNo, \"CCN\");\n    handleDateChange(ORNo, \"ORN\");\n\n    handleDateChange(DateFrom, \"DateFrom\");\n    handleDateChange(DateTo, \"DateTo\");\n    handleDateChange(DateIssued, \"DateIssued\");\n\n    handleDateChange(Model, \"Model\");\n    handleDateChange(Make, \"Make\");\n    handleDateChange(BodyType, \"TB\");\n    handleDateChange(Color, \"Color\");\n    handleDateChange(BLTFileNo, \"BLTFileNo\");\n    handleDateChange(PlateNo, \"PlateNo\");\n    handleDateChange(ChassisNo, \"ChassisNo\");\n    handleDateChange(MotorNo, \"MotorNo\");\n    handleDateChange(AuthorizedCap, \"AuthorizedCapacity\");\n    handleDateChange(UnladenWeight, \"UnladenWeigth\");\n\n    handleDateChange(setFixValue(PremiumPaid), \"PremiumPaid\");\n    handleDateChange(setFixValue(EstimatedValue), \"EVSV\");\n    handleDateChange(setFixValue(Aircon), \"Aircon\");\n    handleDateChange(setFixValue(Stereo), \"Stereo\");\n    handleDateChange(setFixValue(Magwheels), \"Magwheels\");\n    handleDateChange(setFixValue(Aircon), \"Aircon\");\n    handleDateChange(setFixValue(OthersAmount), \"OthersRate\");\n    handleDateChange(Others, \"OthersDesc\");\n\n    handleDateChange(setFixValue(Deductible), \"Deductible\");\n    handleDateChange(setFixValue(Towing), \"Towing\");\n    handleDateChange(setFixValue(RepairLimit), \"ARL\");\n    handleDateChange(formatTextNumber(BodilyInjury), \"BodyInjury\");\n    handleDateChange(formatTextNumber(PropertyDamage), \"PropertyDamage\");\n    handleDateChange(formatTextNumber(PersonalAccident), \"PersinalAccident\");\n    handleDateChange(setFixValue(SecI), \"SectionI_II\");\n    handleDateChange(setFixValue(SecIIPercent), \"SectionIII\");\n    handleDateChange(setFixValue(ODamage), \"OwnDamage\");\n    handleDateChange(setFixValue(Theft), \"Theft\");\n    handleDateChange(setFixValue(Sec4A), \"SectionIVA\");\n    handleDateChange(setFixValue(Sec4B), \"SectionIVB\");\n    handleDateChange(setFixValue(Sec4C), \"PremiumOther\");\n    handleDateChange(setFixValue(AOG), \"AOG\");\n\n    handleDateChange(Mortgagee, \"Mortgagee\");\n    handleDateChange(intToBoolean(MortgageeForm), \"MortgageeForm\");\n    handleDateChange(Denomination, \"Denomination\");\n\n    handleDateChange(setFixValue(TotalDue), \"TotalDue\");\n    handleDateChange(setFixValue(Vat), \"Vat\");\n    handleDateChange(setFixValue(DocStamp), \"DocStamp\");\n    handleDateChange(setFixValue(TotalPremium), \"TotalPremium\");\n    handleDateChange(setFixValue(LGovTax), \"LocalGovTax\");\n    handleDateChange(setFixValue(Misc), \"StradCom\");\n\n    handleDateChange(setFixValue(LocalGovTaxPercent), \"LocalGovTaxPercent\");\n    handleDateChange(setFixValue(AOGPercent), \"LocaAOGPercent\");\n    handleDateChange(TPLTypeSection_I_II, \"TplType\");\n    handleDateChange(Remarks, \"remarks\");\n\n    handleDateChange(sale_officer, \"sale_officer\");\n    handleDateChange(\"delete\", \"mode\");\n    setSearchShow(false);\n    setSearchShow(false);\n  }\n  const {\n    isLoading: isLoadingTempId,\n    // refetch: refetchTempId,\n    data: dataTemp,\n  } = useQuery({\n    queryKey: \"temp-id\",\n    queryFn: async () =>\n      await myAxios.get(`/task/production/get-vehicle-policy-temp-id`, {\n        headers: {\n          Authorization: `Bearer ${user?.accessToken}`,\n        },\n      }),\n  });\n  const { isLoading: searchLoading, refetch } = useQuery({\n    queryKey: queryKeySearch,\n    queryFn: async () =>\n      await myAxios.get(\n        `/task/production/tpl-search-vehicle-policy?form_type=${state.form_type}&form_action=${state.form_action}&search=`,\n        {\n          headers: {\n            Authorization: `Bearer ${user?.accessToken}`,\n          },\n        }\n      ),\n    onSuccess: (res) => {\n      const response = res.data?.searchVPolicy as any;\n      setRows(response);\n    },\n  });\n  const { data: dataSubAccount, isLoading: isLoadingSubAccount } = useQuery({\n    queryKey: \"get-sub_account\",\n    queryFn: async () =>\n      await myAxios.get(`/task/production/get-sub_account`, {\n        headers: {\n          Authorization: `Bearer ${user?.accessToken}`,\n        },\n      }),\n  });\n  const { mutate, isLoading: loadingAddNew } = useMutation({\n    mutationKey: queryKeyUpdateAdd,\n    mutationFn: async (variables: any) => {\n      if (state.mode === \"delete\" && state.form_type === \"COM\") {\n        return await myAxios.post(\n          \"/task/production/com-update-vehicle-policy\",\n          variables,\n          {\n            headers: {\n              Authorization: `Bearer ${user?.accessToken}`,\n            },\n          }\n        );\n      }\n\n      if (state.mode === \"delete\" && state.form_type !== \"COM\") {\n        return await myAxios.post(\n          \"/task/production/tpl-update-vehicle-policy\",\n          variables,\n          {\n            headers: {\n              Authorization: `Bearer ${user?.accessToken}`,\n            },\n          }\n        );\n      }\n      return await myAxios.post(\n        \"/task/production/tpl-add-vehicle-policy\",\n        variables,\n        {\n          headers: {\n            Authorization: `Bearer ${user?.accessToken}`,\n          },\n        }\n      );\n    },\n    onSuccess: (res) => {\n      console.log(res.data)\n\n      if (res.data.success) {\n        Promise.all([\n          queryClient.invalidateQueries(queryKeySearch),\n          queryClient.invalidateQueries(queryKeyUpdateAdd),\n          queryClient.invalidateQueries(queryKeyGet),\n          queryClient.invalidateQueries(querySearchPolicyIds),\n        ]);\n        return Swal.fire({\n          position: \"center\",\n          icon: \"success\",\n          title: res.data.message,\n          showConfirmButton: false,\n          timer: 1500,\n        }).then(() => {\n          if (state.form_action === \"TEMP\") {\n            const getNumbers = state.PolicyNo.split(\"TP-\")[1];\n            const inc = parseInt(getNumbers) + 1;\n            const getZero = getNumbers.slice(0, getNumbers.length - 1);\n            initialState.PolicyNo = `TP-${getZero}${inc}`;\n            initialState.form_action = \"TEMP\";\n          }\n          initialState.form_type = state.form_type;\n          backToDefaultState(initialState);\n        });\n      }\n\n      Swal.fire({\n        position: \"center\",\n        icon: \"error\",\n        title: res.data.message,\n        showConfirmButton: false,\n        timer: 1500,\n      });\n    },\n  });\n  const { mutate: mutateDelete, isLoading: loadingDelete } = useMutation({\n    mutationKey: queryKeyUpdateAdd,\n    mutationFn: async (variables: any) => {\n      return await myAxios.post(\n        \"/task/production/tpl-delete-vehicle-policy\",\n        variables,\n        {\n          headers: {\n            Authorization: `Bearer ${user?.accessToken}`,\n          },\n        }\n      );\n    },\n    onSuccess: (res) => {\n      if (res.data.success) {\n        Promise.all([\n          queryClient.invalidateQueries(queryKeySearch),\n          queryClient.invalidateQueries(queryKeyUpdateAdd),\n          queryClient.invalidateQueries(queryKeyGet),\n          queryClient.invalidateQueries(querySearchPolicyIds),\n        ]);\n        backToDefaultState(initialState, true);\n        return Swal.fire({\n          position: \"center\",\n          icon: \"success\",\n          title: res.data.message,\n          showConfirmButton: false,\n          timer: 1500,\n        });\n      }\n\n      Swal.fire({\n        position: \"center\",\n        icon: \"error\",\n        title: res.data.message,\n        showConfirmButton: false,\n        timer: 1500,\n      });\n    },\n  });\n  const { isLoading: isLoadingrates, mutate: mutateRates } = useMutation({\n    mutationKey: \"post-rates\",\n    mutationFn: async (variables) =>\n      await myAxios.post(`/task/production/get-rates`, variables, {\n        headers: {\n          Authorization: `Bearer ${user?.accessToken}`,\n        },\n      }),\n    onSuccess(res) {\n      setDomination(res.data.rates);\n    },\n  });\n  const { isLoading: isLoadingPolicyDetails, mutate: mutatePolicyDetails } =\n    useMutation({\n      mutationKey: \"get-policy-summary\",\n      mutationFn: async (variable: any) =>\n        await myAxios.post(`/task/production/get-policy-summary`, variable, {\n          headers: {\n            Authorization: `Bearer ${user?.accessToken}`,\n          },\n        }),\n      onSuccess(res) {\n        const response = res.data as any;\n        setShowCLientDetails(true);\n        setNewStateValue(summaryDispatch, response.policyDetails[0]);\n      },\n    });\n  const setDefaultValueForNumber = useCallback(() => {\n    state.EVSV = parseStringToNumber(state.EVSV);\n    state.Aircon = parseStringToNumber(state.Aircon);\n    state.Stereo = parseStringToNumber(state.Stereo);\n    state.Magwheels = parseStringToNumber(state.Magwheels);\n    state.OthersRate = parseStringToNumber(state.OthersRate);\n    state.Deductible = parseStringToNumber(state.Deductible);\n    state.Towing = parseStringToNumber(state.Towing);\n    state.ARL = parseStringToNumber(state.ARL);\n    state.TotalPremium = parseStringToNumber(state.TotalPremium);\n    state.Vat = parseStringToNumber(state.Vat);\n    state.DocStamp = parseStringToNumber(state.DocStamp);\n    state.LocalGovTaxPercent = parseStringToNumber(state.LocalGovTaxPercent);\n    state.LocalGovTaxPercent = parseStringToNumber(state.LocalGovTaxPercent);\n    state.LocalGovTax = parseStringToNumber(state.LocalGovTax);\n    state.TotalDue = parseStringToNumber(state.TotalDue);\n    state.AOG = parseStringToNumber(state.AOG);\n    state.AOGPercent = parseStringToNumber(state.AOGPercent);\n    state.PremiumOther = parseStringToNumber(state.PremiumOther);\n    state.SectionIVB = parseStringToNumber(state.SectionIVB);\n    state.SectionIVA = parseStringToNumber(state.SectionIVA);\n    state.Theft = parseStringToNumber(state.Theft);\n    state.OwnDamage = parseStringToNumber(state.OwnDamage);\n    state.SectionIII = parseStringToNumber(state.SectionIII);\n    state.SectionI_II = parseStringToNumber(state.SectionI_II);\n    state.PremiumPaid = parseStringToNumber(state.PremiumPaid);\n    state.StradCom = parseStringToNumber(state.StradCom);\n  }, [state]);\n  const handleOnSave = useCallback(() => {\n    if (\n      state.client_name === \"\" ||\n      state.client_name === null ||\n      state.client_name === undefined\n    ) {\n      return Swal.fire({\n        icon: \"warning\",\n        title: \"Register on ID Entry?\",\n        text: \"Unable to save! Invalid Client ID!\",\n        showCancelButton: true,\n        showConfirmButton: true,\n      }).then((result) => {\n        if (result.isConfirmed) {\n          return window.open(\n            \"/dashboard/reference/id-entry\",\n            \"_blank\"\n          );\n        }\n      });\n    }\n\n    if (state.PolicyAccount === \"\" || state.PolicyAccount === null) {\n      return Swal.fire(\n        \"Unable to save! Please select Account.\",\n        \"you missed the Account Field?\",\n        \"error\"\n      );\n    }\n    if (state.PolicyNo === \"\" || state.PolicyNo === null) {\n      return Swal.fire(\n        \"Unable to save! Invalid Policy No.\",\n        \"you missed the Policy No Field?\",\n        \"error\"\n      );\n    }\n    if (state.mode === \"delete\") {\n      codeCondfirmationAlert({\n        isUpdate: true,\n        cb: (userCodeConfirmation) => {\n          setDefaultValueForNumber();\n          mutate({ ...state, userCodeConfirmation });\n        },\n      });\n    } else {\n      saveCondfirmationAlert({\n        isConfirm: () => {\n          setDefaultValueForNumber();\n          mutate(state);\n        },\n      });\n    }\n  }, [setDefaultValueForNumber, mutate, state]);\n\n  useEffect(() => {\n    const handleKeyDown = (event: any) => {\n      if (\n        event.code === \"AudioVolumeMute\" ||\n        event.code === \"F1\" ||\n        event.keyCode === 173\n      ) {\n        event.preventDefault();\n        goTo(0);\n      }\n      if (\n        event.code === \"AudioVolumeDown\" ||\n        event.code === \"F2\" ||\n        event.keyCode === 174\n      ) {\n        event.preventDefault();\n        goTo(1);\n      }\n      if (\n        event.code === \"AudioVolumeUp\" ||\n        event.code === \"F3\" ||\n        event.keyCode === 175\n      ) {\n        event.preventDefault();\n        goTo(2);\n      }\n\n      if (\n        state.mode === \"\" &&\n        (event.code === \"KeyN\" ||\n          event.code === \"Enter\" ||\n          event.code === \"NumpadEnter\")\n      ) {\n        event.preventDefault();\n        newButtonRef.current?.click();\n      }\n      if (state.mode !== \"\" && event.code === \"Escape\") {\n        event.preventDefault();\n        cancelButtonRef.current?.click();\n      }\n      if (state.mode === \"delete\" && event.code === \"Delete\") {\n        event.preventDefault();\n        deleteButtonRef.current?.click();\n      }\n    };\n    document.addEventListener(\"keydown\", handleKeyDown);\n    return () => {\n      document.removeEventListener(\"keydown\", handleKeyDown);\n    };\n  }, [goTo, handleOnSave, state.mode]);\n\n  const handleInputChange = (e: any) => {\n    const { name, value } = e.target;\n    dispatch({ type: \"UPDATE_FIELD\", field: name, value });\n  };\n  const handleDateChange = (value: any, name: string) => {\n    dispatch({ type: \"UPDATE_FIELD\", field: name, value });\n  };\n  function parseStringToNumber(input: string) {\n    const parsedNumber = parseFloat(input);\n\n    if (!isNaN(parsedNumber)) {\n      return input;\n    } else {\n      return \"0.00\";\n    }\n  }\n  function tplCompuation() {\n    setDefaultValueForNumber();\n\n    if (isNaN(parseFloat(state.PremiumPaid))) {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"error\",\n        title: \"Premiumn Paid is Required\",\n        showConfirmButton: false,\n        timer: 1500,\n      });\n    }\n\n    const vatPercentage = 12 / 100;\n    const dsPercentage = 12.5 / 100;\n    const lgtPercentage = 0.75 / 100;\n    const vatResult = vatPercentage * parseFloat(state.PremiumPaid);\n    const dsResult = dsPercentage * parseFloat(state.PremiumPaid);\n    const lgtResult = lgtPercentage * parseFloat(state.PremiumPaid);\n\n    const totalResult =\n      vatResult +\n      dsResult +\n      lgtResult +\n      parseFloat(state.StradCom) +\n      parseFloat(state.PremiumPaid);\n\n    handleDateChange(\n      `${parseFloat(state.PremiumPaid).toFixed(2)}`,\n      \"SectionI_II\"\n    );\n    handleDateChange(\n      `${parseFloat(state.PremiumPaid).toFixed(2)}`,\n      \"TotalPremium\"\n    );\n    handleDateChange(`${vatResult.toFixed(2)}`, \"Vat\");\n    handleDateChange(`${dsResult.toFixed(2)}`, \"DocStamp\");\n    handleDateChange(`${lgtResult.toFixed(2)}`, \"LocalGovTax\");\n    handleDateChange(`${Math.round(totalResult).toFixed(2)}`, \"TotalDue\");\n  }\n  function comComputation() {\n    setDefaultValueForNumber();\n\n    const vatPercentage = 12 / 100;\n    const docPercentage = 12.5 / 100;\n    const lgtPercentage =\n      parseFloat(state.LocalGovTaxPercent.replace(/,/g, \"\")) / 100;\n    const section = parseFloat(state.SectionIII.replace(/,/g, \"\")) / 100;\n    const aogPercent = parseFloat(state.AOGPercent.replace(/,/g, \"\")) / 100;\n    const owmDamageResult = parseFloat(state.EVSV.replace(/,/g, \"\")) * section;\n    const aogDamageResult =\n      parseFloat(state.EVSV.replace(/,/g, \"\")) * aogPercent;\n    handleDateChange(`${owmDamageResult.toFixed(2)}`, \"OwnDamage\");\n    handleDateChange(\n      `${formatNumberWithTwoDecimals(aogDamageResult.toString())}`,\n      \"AOG\"\n    );\n    const totalPremiumResult =\n      parseFloat(owmDamageResult.toFixed(2)) +\n      parseFloat(aogDamageResult.toString()) +\n      parseFloat(state.SectionIVB.replace(/,/g, \"\")) +\n      parseFloat(state.PremiumOther.replace(/,/g, \"\")) +\n      parseFloat(state.SectionIVA.replace(/,/g, \"\"));\n    handleDateChange(\n      `${(vatPercentage * totalPremiumResult).toFixed(2)}`,\n      \"Vat\"\n    );\n    handleDateChange(\n      `${(docPercentage * totalPremiumResult).toFixed(2)}`,\n      \"DocStamp\"\n    );\n    handleDateChange(\n      `${(lgtPercentage * totalPremiumResult).toFixed(2)}`,\n      \"LocalGovTax\"\n    );\n\n    handleDateChange(\"0.00\", \"TotalPremium\");\n    handleDateChange(\"0.00\", \"TotalDue\");\n\n    const totalDuePremiumResult =\n      totalPremiumResult +\n      parseFloat((vatPercentage * totalPremiumResult).toFixed(2)) +\n      parseFloat((docPercentage * totalPremiumResult).toFixed(2)) +\n      parseFloat((lgtPercentage * totalPremiumResult).toFixed(2)) +\n      parseFloat(parseFloat(state.StradCom.replace(/,/g, \"\")).toFixed(2));\n\n    handleDateChange(\n      `${formatNumberWithTwoDecimals(totalPremiumResult.toString())}`,\n      \"TotalPremium\"\n    );\n    handleDateChange(`${totalDuePremiumResult.toFixed(2)}`, \"TotalDue\");\n  }\n  function backToDefaultState(json: any, resetAll: boolean = false) {\n    Object.entries(json).forEach(([key, value]) => {\n      handleDateChange(value, key);\n    });\n  }\n  function formatNumberWithTwoDecimals(value: string) {\n    const input = parseStringToNumber(value);\n\n    if (input.includes(\".\")) {\n      const parts = input.split(\".\");\n      const integerPart = parts[0];\n      const decimalPart = parts[1].slice(0, 2) || \"00\";\n      return `${integerPart}.${decimalPart}`;\n    }\n\n    return `${input}.00`;\n  }\n  function keySave(event: any) {\n    if (\n      state.mode !== \"\" &&\n      (event.code === \"Enter\" || event.code === \"NumpadEnter\")\n    ) {\n      event.preventDefault();\n      handleOnSave();\n    }\n  }\n  const DisplayDetails = ({ datakey, label, value }: any) => {\n    return (\n      <div style={{ width: \"100%\", display: \"flex\" }}>\n        <label style={{ width: \"200px\" }} htmlFor={datakey}>\n          {label}\n        </label>\n        :\n        <input\n          style={{ flex: 1, border: \"none\", padding: \"0 20px\" }}\n          defaultValue={value ?? \"\"}\n          id={datakey}\n          readOnly={true}\n        />\n      </div>\n    );\n  };\n  function setNewStateValue(dispatch: any, obj: any) {\n    Object.entries(obj).forEach(([field, value]) => {\n      dispatch({ type: \"UPDATE_FIELD\", field, value });\n    });\n  }\n\n  useEffect(() => {\n    if (user?.department === \"UCSMI\")\n      handleInputChange({ target: { value: \"TEMP\", name: \"form_action\" } });\n\n    handleDateChange(dataTemp?.data.tempId[0].tempPolicy_No, \"PolicyNo\");\n    handleInputChange({\n      target: { value: \"COM\", name: \"form_type\" },\n    });\n  }, [user?.department, dataTemp?.data.tempId]);\n\n  useEffect(() => {\n    const handleKeyDown = (event: any) => {\n      if ((event.ctrlKey || event.metaKey) && event.key === 's') {\n        event.preventDefault();\n        handleOnSave();\n      }\n    };\n\n    window.addEventListener('keydown', handleKeyDown);\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [handleOnSave]);\n\n  return (\n    <>\n      <PageHelmet title=\"Vehicle Policy\" />\n\n      <VehicleContext.Provider\n        value={{\n          parseStringToNumber,\n          state,\n          handleInputChange,\n          handleDateChange,\n          Mortgagee,\n          setMortgagee,\n          showField,\n          setShowField,\n          myAxios,\n          user,\n          tplCompuation,\n          comComputation,\n          tplId,\n          setTplId,\n          isAddOrEditMode,\n          dispatch,\n          isLoadingTempId,\n          keySave,\n          domination,\n          mutateRates,\n          isLoadingrates,\n          reducer,\n        }}\n      >\n        <div style={{ display: \"flex\", columnGap: \"5px\" }}>\n          <div\n            style={{ display: \"flex\", columnGap: \"8px\", alignItems: \"center\" }}\n          >\n            <CustomButton\n              onClick={() => {\n                goTo(0);\n              }}\n              currentStepIndex={currentStepIndex}\n              index={0}\n            >\n              Policy Information\n            </CustomButton>\n            <NavigateNextIcon fontSize=\"small\" />\n          </div>\n          <div\n            style={{ display: \"flex\", columnGap: \"8px\", alignItems: \"center\" }}\n          >\n            <CustomButton\n              onClick={() => {\n                goTo(1);\n              }}\n              currentStepIndex={currentStepIndex}\n              index={1}\n            >\n              Policy Type and Details\n            </CustomButton>\n            <NavigateNextIcon fontSize=\"small\" />\n          </div>\n          <div\n            style={{ display: \"flex\", columnGap: \"8px\", alignItems: \"center\" }}\n          >\n            <CustomButton\n              onClick={() => {\n                goTo(2);\n              }}\n              currentStepIndex={currentStepIndex}\n              index={2}\n            >\n              Policy Premium\n            </CustomButton>\n          </div>\n          <div\n            style={{\n              marginLeft: \"30px\",\n              display: \"flex\",\n              alignItems: \"center\",\n              columnGap: \"20px\",\n            }}\n          >\n            <div\n              style={{\n                display: \"flex\",\n                alignItems: \"center\",\n                columnGap: \"5px\",\n              }}\n            >\n              {state.mode === \"\" && (\n                <Button\n                  sx={{\n                    height: \"30px\",\n                    fontSize: \"11px\",\n                  }}\n                  ref={newButtonRef}\n                  variant=\"contained\"\n                  startIcon={<AddIcon />}\n                  onClick={() => {\n                    handleDateChange(\"add\", \"mode\");\n                  }}\n                >\n                  New\n                </Button>\n              )}\n              <LoadingButton\n                loading={loadingAddNew}\n                sx={{\n                  height: \"30px\",\n                  fontSize: \"11px\",\n                }}\n                color=\"primary\"\n                variant=\"contained\"\n                type=\"submit\"\n                onClick={handleOnSave}\n                disabled={state.mode === \"\"}\n                startIcon={<SaveIcon />}\n              >\n                Save\n              </LoadingButton>\n              {state.mode !== \"\" && (\n                <Button\n                  sx={{\n                    height: \"30px\",\n                    fontSize: \"11px\",\n                  }}\n                  ref={cancelButtonRef}\n                  variant=\"contained\"\n                  startIcon={<CloseIcon />}\n                  color=\"error\"\n                  onClick={() => {\n                    Swal.fire({\n                      title: \"Are you sure?\",\n                      text: \"You won't be able to revert this!\",\n                      icon: \"warning\",\n                      showCancelButton: true,\n                      confirmButtonColor: \"#3085d6\",\n                      cancelButtonColor: \"#d33\",\n                      confirmButtonText: \"Yes, cancel it!\",\n                    }).then((result) => {\n                      if (result.isConfirmed) {\n                        initialState.form_action = state.form_action;\n                        initialState.form_type = state.form_type;\n                        backToDefaultState(initialState, true);\n                      }\n                    });\n                  }}\n                >\n                  Cancel\n                </Button>\n              )}\n              <LoadingButton\n                loading={loadingDelete}\n                id=\"save-entry-header\"\n                variant=\"contained\"\n                sx={{\n                  height: \"30px\",\n                  fontSize: \"11px\",\n                  backgroundColor: pink[500],\n                  \"&:hover\": {\n                    backgroundColor: pink[600],\n                  },\n                }}\n                ref={deleteButtonRef}\n                disabled={state.mode !== \"delete\"}\n                startIcon={<DeleteIcon />}\n                onClick={() => {\n                  codeCondfirmationAlert({\n                    isUpdate: false,\n                    cb: (userCodeConfirmation) => {\n                      mutateDelete({\n                        PolicyAccount: state.PolicyAccount,\n                        form_type: state.form_type,\n                        PolicyNo: state.PolicyNo,\n                        userCodeConfirmation,\n                      });\n                    },\n                  });\n                }}\n              >\n                Delete\n              </LoadingButton>\n            </div>\n          </div>\n        </div>\n        <Box\n          sx={(theme) => ({\n            display: \"flex\",\n            alignItems: \"center\",\n            columnGap: \"20px\",\n            marginBottom: \"10px\",\n            [theme.breakpoints.down(\"sm\")]: {\n              flexDirection: \"column\",\n              alignItems: \"flex-start\",\n              flex: 1,\n            },\n          })}\n        >\n          <div\n            style={{\n              marginTop: \"10px\",\n              marginBottom: \"12px\",\n              width: \"100%\",\n            }}\n          ></div>\n        </Box>\n        <div style={{ marginBottom: \"5px\", display: \"flex\", gap: \"10px\" }}>\n          {searchLoading ? (\n            <LoadingButton loading={searchLoading} />\n          ) : (\n            <TextField\n              label=\"Search\"\n              size=\"small\"\n              name=\"search\"\n              value={search}\n              onChange={(e: any) => {\n                setSearch(e.target.value);\n              }}\n              onKeyDown={(e) => {\n                if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n                  e.preventDefault();\n\n                  flushSync(() => {\n                    setSearchShow(true);\n                  });\n                  if (vPolicySearchInput?.current) {\n                    vPolicySearchInput.current.value = search;\n\n                    myAxios\n                      .get(\n                        `/task/production/tpl-search-vehicle-policy?form_type=${state.form_type}&form_action=${state.form_action}&search=${search}`,\n                        {\n                          headers: {\n                            Authorization: `Bearer ${user?.accessToken}`,\n                          },\n                        }\n                      )\n                      .then((res: any) => {\n                        if (!res?.data.success) {\n                          return alert(`Error : ${res?.data.message}`);\n                        }\n\n                        const response = res as any;\n                        setRows(response.data[\"searchVPolicy\"]);\n                        if (vPolicySearchInput?.current)\n                          vPolicySearchInput.current.focus();\n                      });\n                  }\n                }\n              }}\n              InputProps={{\n                style: { height: \"27px\", fontSize: \"14px\" },\n              }}\n              sx={{\n                width: \"300px\",\n                height: \"27px\",\n                \".MuiFormLabel-root\": { fontSize: \"14px\" },\n                \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n              }}\n            />\n          )}\n\n          {isLoadingSubAccount ? (\n            <LoadingButton loading={isLoadingSubAccount} />\n          ) : (\n            <FormControl\n              size=\"small\"\n              sx={(theme) => ({\n                width: \"150px\",\n                \".MuiFormLabel-root\": {\n                  fontSize: \"14px\",\n                  background: \"white\",\n                  zIndex: 99,\n                  padding: \"0 3px\",\n                },\n                \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n              })}\n            >\n              <InputLabel id=\"subAccount\">Sub Account</InputLabel>\n              <Select\n                sx={{\n                  height: \"27px\",\n                  fontSize: \"14px\",\n                }}\n                size=\"small\"\n                labelId=\"subAccount\"\n                label=\"subAccount\"\n                name=\"sub_account\"\n                value={state.sub_account}\n                onChange={(e) => {\n                  handleDateChange(\"\", \"Denomination\");\n                  handleDateChange(\"\", \"PolicyAccount\");\n                  handleDateChange(\"\", \"Mortgagee\");\n                  handleInputChange(e);\n                }}\n              >\n                {(dataSubAccount?.data.sub_account).map(\n                  (items: any, idx: number) => {\n                    return (\n                      <MenuItem key={idx} value={items.Acronym.trim()}>\n                        {items.Acronym}\n                      </MenuItem>\n                    );\n                  }\n                )}\n              </Select>\n            </FormControl>\n          )}\n\n          <FormControl\n            size=\"small\"\n            sx={(theme) => ({\n              width: \"100px\",\n              \".MuiFormLabel-root\": {\n                fontSize: \"14px\",\n                background: \"white\",\n                zIndex: 99,\n                padding: \"0 3px\",\n              },\n              \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n            })}\n          >\n            <Select\n              sx={{\n                height: \"27px\",\n                fontSize: \"14px\",\n              }}\n              labelId=\"formType\"\n              name=\"form_type\"\n              value={state.form_type}\n              onChange={(e) => {\n                Swal.fire({\n                  title: \"Are you sure?\",\n                  text: \"You won't be able to revert this!\",\n                  icon: \"warning\",\n                  showCancelButton: true,\n                  confirmButtonColor: \"#3085d6\",\n                  cancelButtonColor: \"#d33\",\n                  confirmButtonText: \"Yes, change it!\",\n                }).then((result) => {\n                  if (result.isConfirmed) {\n                    initialState.form_action = state.form_action;\n                    backToDefaultState(initialState);\n                    setShowField({\n                      thirdparty: e.target.value.toLowerCase() === \"tpl\",\n                      compre: e.target.value.toLowerCase() === \"com\",\n                    });\n\n                    refetch();\n                    handleInputChange(e);\n                  }\n                });\n              }}\n            >\n              {[\n                { Account: \"TPL\", show: state.form_action === \"REG\" },\n                { Account: \"COM\", show: true },\n              ].map((items: any, idx: number) => {\n                return items.show ? (\n                  <MenuItem key={idx} value={items.Account}>\n                    {items.Account}\n                  </MenuItem>\n                ) : null;\n              })}\n            </Select>\n          </FormControl>\n          <FormControl\n            size=\"small\"\n            sx={(theme) => ({\n              width: \"100px\",\n              \".MuiFormLabel-root\": {\n                fontSize: \"14px\",\n                background: \"white\",\n                zIndex: 99,\n                padding: \"0 3px\",\n              },\n              \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n            })}\n          >\n            <Select\n              sx={{\n                height: \"27px\",\n                fontSize: \"14px\",\n              }}\n              name=\"form_action\"\n              value={state.form_action}\n              onChange={(e) => {\n                Swal.fire({\n                  title: \"Are you sure?\",\n                  text: \"You won't be able to revert this!\",\n                  icon: \"warning\",\n                  showCancelButton: true,\n                  confirmButtonColor: \"#3085d6\",\n                  cancelButtonColor: \"#d33\",\n                  confirmButtonText: \"Yes, change it!\",\n                }).then((result) => {\n                  if (result.isConfirmed) {\n                    initialState.form_type = \"COM\";\n                    backToDefaultState(initialState);\n                    refetch();\n                    handleInputChange(e);\n\n                    if (e.target.value === \"TEMP\") {\n                      handleDateChange(\n                        dataTemp?.data.tempId[0].tempPolicy_No,\n                        \"PolicyNo\"\n                      );\n                      handleInputChange({\n                        target: { value: \"COM\", name: \"form_type\" },\n                      });\n                    }\n\n                    if (e.target.value === \"REG\") {\n                      handleDateChange(\"\", \"PolicyNo\");\n                    }\n                  }\n                });\n              }}\n            >\n              <MenuItem value={\"REG\"}>REG</MenuItem>\n              {state.form_type !== \"TPL\" && (\n                <MenuItem value={\"TEMP\"}>TEMP</MenuItem>\n              )}\n            </Select>\n          </FormControl>\n          {isLoadingPolicyDetails ? (\n            <div>\n              <CircularProgress size=\"20px\" />\n            </div>\n          ) : (\n            <Button\n              disabled={state.mode !== \"delete\"}\n              variant=\"outlined\"\n              startIcon={<ArticleIcon />}\n              sx={{\n                height: \"27px\",\n                fontSize: \"11px\",\n              }}\n              onClick={() => {\n                mutatePolicyDetails({\n                  PolicyNo: state.PolicyNo,\n                });\n              }}\n            >\n              Summary\n            </Button>\n          )}\n        </div>\n        {step}\n        <ModalWithTable\n          searchRef={vPolicySearchInput}\n          showModal={searchShow}\n          onCloseModal={() => {\n            setSearchShow(false);\n          }}\n          onClickCloseIcon={() => {\n            setSearchShow(false);\n          }}\n          searchOnChange={() => { }}\n          onSearchKeyEnter={(value) => {\n            myAxios\n              .get(\n                `/task/production/tpl-search-vehicle-policy?form_type=${state.form_type}&form_action=${state.form_action}&search=${value}`,\n                {\n                  headers: {\n                    Authorization: `Bearer ${user?.accessToken}`,\n                  },\n                }\n              )\n              .then((res: any) => {\n                if (!res?.data.success) {\n                  return alert(`Error : ${res?.data.message}`);\n                }\n                const response = res as any;\n                setRows(response.data[\"searchVPolicy\"]);\n              });\n          }}\n          height={300}\n          isLoading={searchLoading}\n          queryKey={vpolicyKey}\n          columns={vpolicyColumn}\n          onCellKeyDown={(__: any, key: any) => {\n            if (key.code === \"Enter\" || key.code === \"NumpadEnter\") {\n              key.preventDefault();\n              onSearchSelected([__.row]);\n            }\n          }}\n          onSelectionChange={(rowSelectionModel, data) => {\n            if (rowSelectionModel.length <= 0) {\n              return;\n            }\n\n            const selectedIDs = new Set(rowSelectionModel);\n            const selectedRowData = data.filter((row: any) => {\n              return selectedIDs.has(row[\"PolicyNo\"].toString());\n            });\n            if (selectedRowData.length <= 0) return;\n            mutateRates({\n              Account: selectedRowData[0].Account.trim(),\n              Type: state.form_type.toUpperCase(),\n            } as any);\n\n            onSearchSelected(selectedRowData);\n          }}\n          id={\"PolicyNo\"}\n          rows={rows}\n          setRows={setRows}\n        />\n        <div\n          style={{\n            position: \"fixed\",\n            top: 0,\n            bottom: 0,\n            left: 0,\n            right: 0,\n            background: \"rgba(158, 155, 157, 0.31)\",\n            zIndex: \"999\",\n            display: showClientDetails ? \"flex\" : \"none\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n            boxShadow: \"-1px 15px 74px 38px rgba(0,0,0,0.37)\",\n          }}\n        >\n          <div\n            style={{\n              background: \"white\",\n              width: \"70%\",\n              height: \"700px\",\n              position: \"relative\",\n              padding: \"50px 20px\",\n            }}\n          >\n            <IconButton\n              sx={{\n                position: \"absolute\",\n                top: \"10px\",\n                right: \"10px\",\n              }}\n              onClick={() => setShowCLientDetails(false)}\n            >\n              <CloseIcon />\n            </IconButton>\n            <div style={{ width: \"100%\", height: \"100%\" }}>\n              <hr style={{ margin: \"5px 0\" }} />\n              <p style={{ margin: \"0\", padding: \"0\", fontWeight: \"bold\" }}>\n                Policy Details\n              </p>\n              <hr style={{ margin: \"5px 0\" }} />\n              <DisplayDetails\n                datakey={\"DateIssued\"}\n                label={\"Date Issued\"}\n                value={format(new Date(), \"yyyy/MM/dd\")}\n              />\n              <DisplayDetails\n                datakey={\"PolicyNo\"}\n                label={\"Policy No.\"}\n                value={summaryState.PolicyNo}\n              />\n              <DisplayDetails\n                datakey={\"PolicyType\"}\n                label={\"Policy Type\"}\n                value={summaryState.PolicyType}\n              />\n              <DisplayDetails\n                datakey={\"Account\"}\n                label={\"Account\"}\n                value={summaryState.Account}\n              />\n              <DisplayDetails\n                datakey={\"Mortgagee\"}\n                label={\"Mortgagee\"}\n                value={summaryState.Mortgagee}\n              />\n              <DisplayDetails\n                datakey={\"TotalDue\"}\n                label={\"Total Due\"}\n                value={parseFloat(\n                  summaryState.TotalDue.toString().replace(/,/g, \"\")\n                ).toLocaleString(\"en-US\", {\n                  minimumFractionDigits: 2,\n                  maximumFractionDigits: 2,\n                })}\n              />\n              <DisplayDetails\n                datakey={\"sale_officer\"}\n                label={\"Sale Officer\"}\n                value={summaryState.sale_officer}\n              />\n              <hr style={{ margin: \"5px 0\" }} />\n              <p style={{ margin: \"0\", padding: \"0\", fontWeight: \"bold\" }}>\n                Client Details\n              </p>\n              <hr style={{ margin: \"5px 0\" }} />\n              <DisplayDetails\n                datakey={\"IDNo_dr\"}\n                label={\"ID NO.\"}\n                value={summaryState.IDNo}\n              />\n              <DisplayDetails\n                datakey={\"ShortName_dr\"}\n                label={\"Short Name\"}\n                value={summaryState.ShortName}\n              />\n              <DisplayDetails\n                datakey={\"subShortName_dr\"}\n                label={\"Sub Account\"}\n                value={summaryState.subShortName}\n              />\n              <DisplayDetails\n                datakey={\"mobile_dr\"}\n                label={\"Mobile\"}\n                value={summaryState.mobile}\n              />\n              <DisplayDetails\n                datakey={\"email_dr\"}\n                label={\"Email\"}\n                value={summaryState.email}\n              />\n              <DisplayDetails\n                datakey={\"address_dr\"}\n                label={\"Address\"}\n                value={summaryState.address}\n              />\n              <DisplayDetails\n                datakey={\"options_dr\"}\n                label={\"Option\"}\n                value={summaryState.options}\n              />\n              <hr style={{ margin: \"5px 0\" }} />\n              <p style={{ margin: \"0\", padding: \"0\", fontWeight: \"bold\" }}>\n                Agent Details\n              </p>\n              <hr style={{ margin: \"5px 0\" }} />\n              <DisplayDetails\n                datakey={\"agent_fullname\"}\n                label={\"Agent Name\"}\n                value={summaryState.agent_fullname}\n              />\n            </div>\n          </div>\n        </div>\n      </VehicleContext.Provider>\n    </>\n  );\n}\n","import { useState, ReactElement } from \"react\";\n\nexport default function useMultipleComponent(steps: ReactElement[]) {\n  const [currentStepIndex, setCurrentStepIndex] = useState(0);\n\n  function next() {\n    setCurrentStepIndex((i) => {\n      if (i >= steps.length - 1) {\n        return i;\n      }\n      return i + 1;\n    });\n  }\n  function back() {\n    setCurrentStepIndex((i) => {\n      if (i <= 0) {\n        return i;\n      }\n      return i + 1;\n    });\n  }\n  function goTo(index: number) {\n    setCurrentStepIndex(index);\n  }\n  \n  return {\n    step: steps[currentStepIndex],\n    goTo,\n    back,\n    next,\n    isFirstStep: currentStepIndex !== 0,\n    isLastStep: currentStepIndex === steps.length - 1,\n    currentStepIndex,\n  };\n}\n"],"names":["_ref","_ref$title","title","_jsxs","Helmet","children","_jsx","rel","type","href","concat","process","initialClientDetailsState","ShortName","IDNo","firstname","middlename","company","address","options","sub_account","createdAt","updatedAt","contact_details_id","description","remarks","VAT_Type","tin_no","Sub_Acct","Description","Acronym","update","email","mobile","telephone","reducer","state","action","_objectSpread","_defineProperty","field","value","PolicyInformation","_queryFn","_mutationFn","_useContext","useContext","VehicleContext","handleInputChange","handleDateChange","myAxios","user","isAddOrEditMode","isLoadingTempId","mutateRates","_useReducer","useReducer","_useReducer2","_slicedToArray","clientDetailsState","dispatch","_useState","useState","_useState2","showClientDetails","setShowCLientDetails","periodInsuranceDateRef","useRef","dateToDateRef","dateIssuedDateRef","searchClientInputRef","searchAgentInputRef","searchTPLInputRef","handleChangeRef","_useQuery","useQuery","queryKey","queryFn","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","get","headers","Authorization","accessToken","abrupt","sent","stop","apply","arguments","dataPolicyAccount","data","isLoadingPolicyAccount","isLoading","_useMutation","useMutation","mutationKey","mutationFn","_x","_callee2","variable","_context2","post","onSuccess","res","response","obj","Object","entries","forEach","_ref2","_ref3","setNewStateValue","clients","isLoadingClientDetails","mutateDetails","mutate","_useQueryModalTable","useQueryModalTable","link","url","queryUrlName","columns","headerName","width","flex","uniqueId","responseDataKey","onSelected","selectedRowData","entry_client_id","fullname","sale_officer","closeCliendIDsModal","onCellKeyDown","__","key","code","row","searchRef","ModalClientIDs","ModalComponent","openCliendIDsModal","openModal","isLoadingClientIdsModal","closeModal","_useQueryModalTable2","entry_agent_id","closeModalAgentId","ModalAgentId","openModalAgentId","isLoadingModalAgentId","_useQueryModalTable3","Source_No","Cost","Source_No_Ref_ID","closeModalTPLId","ModalTPLId","openModalTPLId","isLoadingModalTPLId","useEffect","form_action","department","Account","Type","form_type","toUpperCase","current","target","name","DisplayDetails","datakey","label","style","display","htmlFor","border","padding","defaultValue","id","readOnly","gap","flexDirection","borderRadius","color","columnGap","LoadingButton","loading","FormControl","variant","size","disabled","sx","fontSize","background","zIndex","top","InputLabel","OutlinedInput","height","fullWidth","client_id","onChange","onKeyDown","e","preventDefault","endAdornment","InputAdornment","position","IconButton","edge","onClick","PersonSearchIcon","CircularProgress","Button","startIcon","PersonOutlineIcon","userId","TextField","client_name","InputProps","rows","multiline","client_address","flexWrap","agent_id","agent_name","marginTop","gridTemplateColumns","gridArea","Select","labelId","PolicyAccount","trim","policy_account","map","items","idx","MenuItem","toLowerCase","React","PolicyNo","PolicyIcon","CCN","ORN","CustomDatePicker","newDate","Date","newDatePlusOneYear","addYears","DateFrom","timeout","setTimeout","_periodInsuranceDateR","_periodInsuranceDateR2","querySelector","click","clearTimeout","datePickerRef","textField","InputLabelProps","DateTo","_dateToDateRef$curren","_dateToDateRef$curren2","DateIssued","_dateIssuedDateRef$cu","_dateIssuedDateRef$cu2","Model","Make","TB","Color","BLTFileNo","PlateNo","ChassisNo","MotorNo","AuthorizedCapacity","UnladenWeigth","bottom","left","right","justifyContent","alignItems","boxShadow","CloseIcon","margin","fontWeight","subShortName","PolicyPremium","tplCompuation","comComputation","JSON","parse","MortgageeForm","Mortgagee","text","setText","dataMortgagee","isLoadingMortgagee","onKeyDownComputation","Box","rowGap","FormGroup","FormControlLabel","control","Checkbox","checked","required","_toConsumableArray","mortgagee","overflowY","maxHeight","Typography","SectionI_II","placeholder","inputComponent","NumericFormatCustom","onBlur","parseFloat","toFixed","SectionIII","OwnDamage","Theft","SectionIVA","SectionIVB","PremiumOther","AOGPercent","AOG","Divider","TotalPremium","Vat","DocStamp","LocalGovTaxPercent","LocalGovTax","StradCom","TotalDue","rateOption_","tplTypeOption_","PremuimPaid","PolicyTypeDetails","showField","parseStringToNumber","domination","isLoadingrates","calculateDeductible","vehicle","towing","EVSV","replace","Deductible","autorizeRepairComputation","DeductibleInput","TowingInput","Towing","Math","abs","marginY","thirdparty","TplType","selected","filter","PremiumPaid","theme","Aircon","Stereo","Magwheels","OthersDesc","backgroundColor","boxSizing","OthersRate","marginBottom","ARL","Autocomplete","BodyInjury","event","freeSolo","disableClearable","option","getOptionLabel","renderInput","params","number","isNaN","formattedNumberUS","toLocaleString","minimumFractionDigits","maximumFractionDigits","PropertyDamage","PersinalAccident","Denomination","CustomButton","styled","button","_templateObject","_taggedTemplateLiteral","props","currentStepIndex","index","initialState","agent_com","rateCost","CompreType","mode","initialSummaryState","PolicyType","agent_fullname","createContext","queryKeySearch","queryKeyUpdateAdd","queryKeyGet","querySearchPolicyIds","vpolicyColumn","vpolicyKey","VehiclePolicy","_queryFn2","_queryFn3","_mutationFn2","_mutationFn3","_mutationFn4","_useState3","_useState4","setDomination","_useMultipleComponent","useMultipleComponent","step","goTo","summaryState","summaryDispatch","_useReducer3","_useReducer4","AuthContext","_useState5","_useState6","setRows","_useState7","_useState8","tplId","setTplId","_useState9","_useState10","search","setSearch","_useState11","_useState12","searchShow","setSearchShow","_useState13","_useState14","setMortgagee","_useState15","compre","_useState16","setShowField","newButtonRef","cancelButtonRef","deleteButtonRef","vPolicySearchInput","queryClient","useQueryClient","onSearchSelected","_selectedRowData$","SubAcct","LGovTax","Misc","AgentID","AgentCom","CoverNo","ORNo","BodyType","AuthorizedCap","UnladenWeight","EstimatedValue","Others","OthersAmount","RepairLimit","BodilyInjury","PersonalAccident","SecI","SecIIPercent","ODamage","Sec4A","Sec4B","Sec4C","client_fullname","TPLTypeSection_I_II","Remarks","formatTextNumber","input","userInput","toString","setFixValue","parseInt","dataTemp","_useQuery2","_res$data","searchVPolicy","searchLoading","refetch","_useQuery3","_callee3","_context3","dataSubAccount","isLoadingSubAccount","_callee4","variables","_context4","console","log","success","Promise","all","invalidateQueries","Swal","icon","message","showConfirmButton","timer","then","getNumbers","split","inc","getZero","slice","length","backToDefaultState","loadingAddNew","_useMutation2","_x2","_callee5","_context5","mutateDelete","loadingDelete","_useMutation3","_x3","_callee6","_context6","rates","_useMutation4","_x4","_callee7","_context7","_ref4","_ref5","policyDetails","isLoadingPolicyDetails","mutatePolicyDetails","setDefaultValueForNumber","useCallback","handleOnSave","undefined","showCancelButton","result","isConfirmed","window","open","codeCondfirmationAlert","isUpdate","cb","userCodeConfirmation","saveCondfirmationAlert","isConfirm","handleKeyDown","_newButtonRef$current","_cancelButtonRef$curr","_deleteButtonRef$curr","keyCode","document","addEventListener","removeEventListener","_e$target","parsedNumber","json","formatNumberWithTwoDecimals","includes","parts","integerPart","decimalPart","tempId","tempPolicy_No","ctrlKey","metaKey","_Fragment","PageHelmet","Provider","vatResult","dsResult","lgtResult","totalResult","round","lgtPercentage","section","aogPercent","owmDamageResult","aogDamageResult","totalPremiumResult","totalDuePremiumResult","keySave","NavigateNextIcon","marginLeft","ref","AddIcon","SaveIcon","confirmButtonColor","cancelButtonColor","confirmButtonText","pink","DeleteIcon","breakpoints","down","flushSync","alert","focus","show","ArticleIcon","ModalWithTable","showModal","onCloseModal","onClickCloseIcon","searchOnChange","onSearchKeyEnter","onSelectionChange","rowSelectionModel","selectedIDs","Set","has","format","steps","setCurrentStepIndex","back","i","isFirstStep","isLastStep"],"sourceRoot":""}