{"version":3,"file":"static/js/899.cb742a02.chunk.js","mappings":"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","sources":["../node_modules/@mui/material/RadioGroup/RadioGroupContext.js","../node_modules/@mui/material/RadioGroup/RadioGroup.js","../node_modules/@mui/material/internal/svg-icons/RadioButtonUnchecked.js","../node_modules/@mui/material/internal/svg-icons/RadioButtonChecked.js","../node_modules/@mui/material/Radio/RadioButtonIcon.js","../node_modules/@mui/material/Radio/radioClasses.js","../node_modules/@mui/material/Radio/Radio.js","../node_modules/@mui/material/RadioGroup/useRadioGroup.js","hooks/useMutationModalTable.tsx","feautures/Admin/Task/Accounting/Collections.tsx","../node_modules/@mui/material/FormGroup/formGroupClasses.js","../node_modules/@mui/material/FormGroup/FormGroup.js"],"sourcesContent":["import * as React from 'react';\n/**\n * @ignore - internal component.\n */\nconst RadioGroupContext = /*#__PURE__*/React.createContext(undefined);\nif (process.env.NODE_ENV !== 'production') {\n  RadioGroupContext.displayName = 'RadioGroupContext';\n}\nexport default RadioGroupContext;","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"actions\", \"children\", \"defaultValue\", \"name\", \"onChange\", \"value\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport FormGroup from '../FormGroup';\nimport useForkRef from '../utils/useForkRef';\nimport useControlled from '../utils/useControlled';\nimport RadioGroupContext from './RadioGroupContext';\nimport useId from '../utils/useId';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst RadioGroup = /*#__PURE__*/React.forwardRef(function RadioGroup(props, ref) {\n  const {\n      // private\n      // eslint-disable-next-line react/prop-types\n      actions,\n      children,\n      defaultValue,\n      name: nameProp,\n      onChange,\n      value: valueProp\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rootRef = React.useRef(null);\n  const [value, setValueState] = useControlled({\n    controlled: valueProp,\n    default: defaultValue,\n    name: 'RadioGroup'\n  });\n  React.useImperativeHandle(actions, () => ({\n    focus: () => {\n      let input = rootRef.current.querySelector('input:not(:disabled):checked');\n      if (!input) {\n        input = rootRef.current.querySelector('input:not(:disabled)');\n      }\n      if (input) {\n        input.focus();\n      }\n    }\n  }), []);\n  const handleRef = useForkRef(ref, rootRef);\n  const name = useId(nameProp);\n  const contextValue = React.useMemo(() => ({\n    name,\n    onChange(event) {\n      setValueState(event.target.value);\n      if (onChange) {\n        onChange(event, event.target.value);\n      }\n    },\n    value\n  }), [name, onChange, setValueState, value]);\n  return /*#__PURE__*/_jsx(RadioGroupContext.Provider, {\n    value: contextValue,\n    children: /*#__PURE__*/_jsx(FormGroup, _extends({\n      role: \"radiogroup\",\n      ref: handleRef\n    }, other, {\n      children: children\n    }))\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? RadioGroup.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * The default value. Use when the component is not controlled.\n   */\n  defaultValue: PropTypes.any,\n  /**\n   * The name used to reference the value of the control.\n   * If you don't provide this prop, it falls back to a randomly generated name.\n   */\n  name: PropTypes.string,\n  /**\n   * Callback fired when a radio button is selected.\n   *\n   * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.\n   * @param {string} value The value of the selected radio button.\n   * You can pull out the new value by accessing `event.target.value` (string).\n   */\n  onChange: PropTypes.func,\n  /**\n   * Value of the selected radio button. The DOM API casts this to a string.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default RadioGroup;","'use client';\n\nimport * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z\"\n}), 'RadioButtonUnchecked');","'use client';\n\nimport * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M8.465 8.465C9.37 7.56 10.62 7 12 7C14.76 7 17 9.24 17 12C17 13.38 16.44 14.63 15.535 15.535C14.63 16.44 13.38 17 12 17C9.24 17 7 14.76 7 12C7 10.62 7.56 9.37 8.465 8.465Z\"\n}), 'RadioButtonChecked');","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport RadioButtonUncheckedIcon from '../internal/svg-icons/RadioButtonUnchecked';\nimport RadioButtonCheckedIcon from '../internal/svg-icons/RadioButtonChecked';\nimport styled from '../styles/styled';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst RadioButtonIconRoot = styled('span')({\n  position: 'relative',\n  display: 'flex'\n});\nconst RadioButtonIconBackground = styled(RadioButtonUncheckedIcon)({\n  // Scale applied to prevent dot misalignment in Safari\n  transform: 'scale(1)'\n});\nconst RadioButtonIconDot = styled(RadioButtonCheckedIcon)(({\n  theme,\n  ownerState\n}) => _extends({\n  left: 0,\n  position: 'absolute',\n  transform: 'scale(0)',\n  transition: theme.transitions.create('transform', {\n    easing: theme.transitions.easing.easeIn,\n    duration: theme.transitions.duration.shortest\n  })\n}, ownerState.checked && {\n  transform: 'scale(1)',\n  transition: theme.transitions.create('transform', {\n    easing: theme.transitions.easing.easeOut,\n    duration: theme.transitions.duration.shortest\n  })\n}));\n\n/**\n * @ignore - internal component.\n */\nfunction RadioButtonIcon(props) {\n  const {\n    checked = false,\n    classes = {},\n    fontSize\n  } = props;\n  const ownerState = _extends({}, props, {\n    checked\n  });\n  return /*#__PURE__*/_jsxs(RadioButtonIconRoot, {\n    className: classes.root,\n    ownerState: ownerState,\n    children: [/*#__PURE__*/_jsx(RadioButtonIconBackground, {\n      fontSize: fontSize,\n      className: classes.background,\n      ownerState: ownerState\n    }), /*#__PURE__*/_jsx(RadioButtonIconDot, {\n      fontSize: fontSize,\n      className: classes.dot,\n      ownerState: ownerState\n    })]\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? RadioButtonIcon.propTypes = {\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n  /**\n   * The size of the component.\n   * `small` is equivalent to the dense radio styling.\n   */\n  fontSize: PropTypes.oneOf(['small', 'medium'])\n} : void 0;\nexport default RadioButtonIcon;","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getRadioUtilityClass(slot) {\n  return generateUtilityClass('MuiRadio', slot);\n}\nconst radioClasses = generateUtilityClasses('MuiRadio', ['root', 'checked', 'disabled', 'colorPrimary', 'colorSecondary', 'sizeSmall']);\nexport default radioClasses;","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"checked\", \"checkedIcon\", \"color\", \"icon\", \"name\", \"onChange\", \"size\", \"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base/composeClasses';\nimport { alpha } from '@mui/system';\nimport SwitchBase from '../internal/SwitchBase';\nimport useThemeProps from '../styles/useThemeProps';\nimport RadioButtonIcon from './RadioButtonIcon';\nimport capitalize from '../utils/capitalize';\nimport createChainedFunction from '../utils/createChainedFunction';\nimport useRadioGroup from '../RadioGroup/useRadioGroup';\nimport radioClasses, { getRadioUtilityClass } from './radioClasses';\nimport styled, { rootShouldForwardProp } from '../styles/styled';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    color,\n    size\n  } = ownerState;\n  const slots = {\n    root: ['root', `color${capitalize(color)}`, size !== 'medium' && `size${capitalize(size)}`]\n  };\n  return _extends({}, classes, composeClasses(slots, getRadioUtilityClass, classes));\n};\nconst RadioRoot = styled(SwitchBase, {\n  shouldForwardProp: prop => rootShouldForwardProp(prop) || prop === 'classes',\n  name: 'MuiRadio',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[`color${capitalize(ownerState.color)}`]];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  color: (theme.vars || theme).palette.text.secondary\n}, !ownerState.disableRipple && {\n  '&:hover': {\n    backgroundColor: theme.vars ? `rgba(${ownerState.color === 'default' ? theme.vars.palette.action.activeChannel : theme.vars.palette[ownerState.color].mainChannel} / ${theme.vars.palette.action.hoverOpacity})` : alpha(ownerState.color === 'default' ? theme.palette.action.active : theme.palette[ownerState.color].main, theme.palette.action.hoverOpacity),\n    // Reset on touch devices, it doesn't add specificity\n    '@media (hover: none)': {\n      backgroundColor: 'transparent'\n    }\n  }\n}, ownerState.color !== 'default' && {\n  [`&.${radioClasses.checked}`]: {\n    color: (theme.vars || theme).palette[ownerState.color].main\n  }\n}, {\n  [`&.${radioClasses.disabled}`]: {\n    color: (theme.vars || theme).palette.action.disabled\n  }\n}));\nfunction areEqualValues(a, b) {\n  if (typeof b === 'object' && b !== null) {\n    return a === b;\n  }\n\n  // The value could be a number, the DOM will stringify it anyway.\n  return String(a) === String(b);\n}\nconst defaultCheckedIcon = /*#__PURE__*/_jsx(RadioButtonIcon, {\n  checked: true\n});\nconst defaultIcon = /*#__PURE__*/_jsx(RadioButtonIcon, {});\nconst Radio = /*#__PURE__*/React.forwardRef(function Radio(inProps, ref) {\n  var _defaultIcon$props$fo, _defaultCheckedIcon$p;\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiRadio'\n  });\n  const {\n      checked: checkedProp,\n      checkedIcon = defaultCheckedIcon,\n      color = 'primary',\n      icon = defaultIcon,\n      name: nameProp,\n      onChange: onChangeProp,\n      size = 'medium',\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    color,\n    size\n  });\n  const classes = useUtilityClasses(ownerState);\n  const radioGroup = useRadioGroup();\n  let checked = checkedProp;\n  const onChange = createChainedFunction(onChangeProp, radioGroup && radioGroup.onChange);\n  let name = nameProp;\n  if (radioGroup) {\n    if (typeof checked === 'undefined') {\n      checked = areEqualValues(radioGroup.value, props.value);\n    }\n    if (typeof name === 'undefined') {\n      name = radioGroup.name;\n    }\n  }\n  return /*#__PURE__*/_jsx(RadioRoot, _extends({\n    type: \"radio\",\n    icon: /*#__PURE__*/React.cloneElement(icon, {\n      fontSize: (_defaultIcon$props$fo = defaultIcon.props.fontSize) != null ? _defaultIcon$props$fo : size\n    }),\n    checkedIcon: /*#__PURE__*/React.cloneElement(checkedIcon, {\n      fontSize: (_defaultCheckedIcon$p = defaultCheckedIcon.props.fontSize) != null ? _defaultCheckedIcon$p : size\n    }),\n    ownerState: ownerState,\n    classes: classes,\n    name: name,\n    checked: checked,\n    onChange: onChange,\n    ref: ref,\n    className: clsx(classes.root, className)\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Radio.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n  /**\n   * The icon to display when the component is checked.\n   * @default <RadioButtonIcon checked />\n   */\n  checkedIcon: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The color of the component.\n   * It supports both default and custom theme colors, which can be added as shown in the\n   * [palette customization guide](https://mui.com/material-ui/customization/palette/#adding-new-colors).\n   * @default 'primary'\n   */\n  color: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['default', 'primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\n  /**\n   * If `true`, the component is disabled.\n   */\n  disabled: PropTypes.bool,\n  /**\n   * If `true`, the ripple effect is disabled.\n   * @default false\n   */\n  disableRipple: PropTypes.bool,\n  /**\n   * The icon to display when the component is unchecked.\n   * @default <RadioButtonIcon />\n   */\n  icon: PropTypes.node,\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n  /**\n   * Name attribute of the `input` element.\n   */\n  name: PropTypes.string,\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.\n   * You can pull out the new value by accessing `event.target.value` (string).\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n  /**\n   * If `true`, the `input` element is required.\n   * @default false\n   */\n  required: PropTypes.bool,\n  /**\n   * The size of the component.\n   * `small` is equivalent to the dense radio styling.\n   * @default 'medium'\n   */\n  size: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['medium', 'small']), PropTypes.string]),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The value of the component. The DOM API casts this to a string.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default Radio;","'use client';\n\nimport * as React from 'react';\nimport RadioGroupContext from './RadioGroupContext';\nexport default function useRadioGroup() {\n  return React.useContext(RadioGroupContext);\n}","import { useContext, useState } from \"react\";\nimport { useMutation } from \"react-query\";\nimport { AuthContext } from \"../components/AuthContext\";\nimport { GridRowSelectionModel ,GridRowParams} from \"@mui/x-data-grid\";\nimport ModalWithTable from \"../components/ModalWithTable\";\nimport { flushSync } from \"react-dom\";\n\ninterface QueryModalTableParamsType {\n  link: {\n    queryWithVariable: (variable: any) => string;\n    queryExtraBySearch: string;\n  };\n  uniqueId: string;\n  queryKey: string;\n  responseDataKey: string;\n  columns: Array<any>;\n  onSelected?: (selectedRowData: Array<any>, data: Array<any>) => void;\n  onRemoveSelected?: (data: Array<any>) => void;\n  onSuccess?: (data: Array<any>) => void;\n  searchRef?: React.RefObject<HTMLInputElement>;\n  onCellKeyDown?: any;\n  onCloseFunction?: (search: any) => void;\n  isRowSelectable?: ((params: GridRowParams<any>) => boolean) | undefined;\n}\nconst useMutationModalTable = ({\n  link,\n  uniqueId,\n  queryKey,\n  responseDataKey,\n  columns,\n  onSelected = () => {},\n  onRemoveSelected = () => {},\n  onSuccess = () => {},\n  searchRef,\n  onCellKeyDown,\n  onCloseFunction,\n  isRowSelectable\n}: QueryModalTableParamsType) => {\n  const { myAxios, user } = useContext(AuthContext);\n  const [openSearchCollection, setOpenSearchCollection] = useState(false);\n  const [rows, setRows] = useState<GridRowSelectionModel>([]);\n  const { isLoading, mutate } = useMutation({\n    mutationKey: queryKey,\n    mutationFn: async (variables: any) =>\n      await myAxios.get(`${link.queryWithVariable(variables)}`, {\n        headers: {\n          Authorization: `Bearer ${user?.accessToken}`,\n        },\n      }),\n    onSuccess: (res) => {\n      const response = res as any;\n      setRows(response.data[responseDataKey]);\n      onSuccess(response);\n    },\n  });\n\n  const openModal = (search: string = \"\") => {\n    flushSync(() => {\n      setOpenSearchCollection(true);\n    });\n\n    if (searchRef?.current) {\n      searchRef.current.value = search;\n\n      myAxios\n        .get(`${link.queryExtraBySearch}=${search}`, {\n          headers: {\n            Authorization: `Bearer ${user?.accessToken}`,\n          },\n        })\n        .then((res: any) => {\n          if (!res?.data.success) {\n            return alert(`Error : ${res?.data.message}`);\n          }\n          const response = res as any;\n          setRows(response.data[responseDataKey]);\n          if (searchRef?.current) searchRef.current.focus();\n        });\n\n    }\n\n  };\n  const closeModal = () => {\n    setOpenSearchCollection(false);\n    if (onCloseFunction) {\n      onCloseFunction(searchRef?.current?.value);\n    }\n  };\n\n  const ModalComponent = (\n    <ModalWithTable\n      searchRef={searchRef}\n      showModal={openSearchCollection}\n      onCloseModal={() => {\n        setOpenSearchCollection(false);\n        if (onCloseFunction) {\n          onCloseFunction(searchRef?.current?.value);\n        }\n      }}\n      onClickCloseIcon={() => {\n        setOpenSearchCollection(false);\n        if (onCloseFunction) {\n          onCloseFunction(searchRef?.current?.value);\n        }\n      }}\n      searchOnChange={(e) => {\n        myAxios\n          .get(`${link.queryExtraBySearch}=${e.target.value}`, {\n            headers: {\n              Authorization: `Bearer ${user?.accessToken}`,\n            },\n          })\n          .then((res: any) => {\n            if (!res?.data.success) {\n              return alert(`Error : ${res?.data.message}`);\n            }\n            const response = res as any;\n            setRows(response.data[responseDataKey]);\n          });\n      }}\n      onSearchKeyEnter={(value) => {\n        myAxios\n          .get(`${link.queryExtraBySearch}=${value}`, {\n            headers: {\n              Authorization: `Bearer ${user?.accessToken}`,\n            },\n          })\n          .then((res: any) => {\n            if (!res?.data.success) {\n              return alert(`Error : ${res?.data.message}`);\n            }\n            const response = res as any;\n            setRows(response.data[responseDataKey]);\n          });\n      }}\n      onCellKeyDown={onCellKeyDown}\n      height={300}\n      isLoading={isLoading}\n      queryKey={queryKey}\n      columns={columns}\n      onSelectionChange={(rowSelectionModel, data) => {\n        if (rowSelectionModel.length <= 0) {\n          return onRemoveSelected(data);\n        }\n        const selectedIDs = new Set(rowSelectionModel);\n        const selectedRowData = data.filter((row: any) => {\n          return selectedIDs.has(row[uniqueId].toString());\n        });\n        if (selectedRowData.length <= 0) return;\n        onSelected(selectedRowData, data);\n      }}\n      isRowSelectable={isRowSelectable}\n      id={uniqueId}\n      rows={rows}\n      setRows={setRows}\n    />\n  );\n\n  return {\n    openSearchCollection,\n    rows,\n    isLoading,\n    openModal,\n    closeModal,\n    ModalComponent,\n    mutate,\n  };\n};\n\nexport default useMutationModalTable;\n","import { useContext, useState, useRef, useReducer, createContext } from \"react\";\nimport {\n  Box,\n  Typography,\n  TextField,\n  Button,\n  CircularProgress,\n  IconButton,\n  InputAdornment,\n  InputLabel,\n  OutlinedInput,\n  FormControl,\n  Select,\n  MenuItem,\n  Modal,\n  RadioGroup,\n  FormControlLabel,\n  Radio,\n  Autocomplete,\n} from \"@mui/material\";\nimport AddIcon from \"@mui/icons-material/Add\";\nimport { GridRowSelectionModel } from \"@mui/x-data-grid\";\nimport { useMutation, useQuery, useQueryClient } from \"react-query\";\nimport Swal, { SweetAlertResult } from \"sweetalert2\";\nimport { green } from \"@mui/material/colors\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport SaveIcon from \"@mui/icons-material/Save\";\nimport PersonSearchIcon from \"@mui/icons-material/PersonSearch\";\nimport useUrlParams from \"../../../../hooks/useUrlParams\";\nimport { AuthContext } from \"../../../../components/AuthContext\";\nimport { wait } from \"../../../../lib/wait\";\nimport CustomDatePicker from \"../../../../components/DatePicker\";\nimport PolicyIcon from \"@mui/icons-material/Policy\";\nimport LoadingButton from \"@mui/lab/LoadingButton\";\nimport { NumericFormatCustom } from \"../../../../components/NumberFormat\";\nimport { incrementCheckNo } from \"./PostDateChecks\";\nimport useQueryModalTable from \"../../../../hooks/useQueryModalTable\";\nimport useMutationModalTable from \"../../../../hooks/useMutationModalTable\";\nimport { flushSync } from \"react-dom\";\nimport RestartAltIcon from \"@mui/icons-material/RestartAlt\";\nimport {\n  codeCondfirmationAlert,\n  saveCondfirmationAlert,\n} from \"../../../../lib/confirmationAlert\";\nimport {UpwardTable} from \"../../../../components/UpwardTable\";\n\nconst CollectionContext = createContext<{\n  debit: Array<any>;\n  credit: Array<any>;\n}>({ debit: [], credit: [] });\n\nconst initialState = {\n  ORNo: \"\",\n  PNo: \"\",\n  IDNo: \"\",\n  Date: new Date(),\n  Name: \"\",\n  Remarks: \"\",\n  //====\n  creditUpdateMode: false,\n  creditCheckIdx: \"\",\n  creditCheckID: \"\",\n  //===\n  PDC_Status: \"\",\n  Deposit_Slip: \"\",\n  DateDeposit: \"\",\n  OR_No: \"\",\n  searchCheckedList: \"\",\n  bank_transaction: \"\",\n  isFao: false,\n  search: \"\",\n  mode: \"\",\n};\nconst initialStateDeposit = {\n  cashID: \"\",\n  cashMode: \"add\",\n  payamentType: \"CSH\",\n  amount: \"\",\n  transaction_desc: [],\n  debitHasSelected: false,\n};\nconst initialStateCredit = {\n  creditMode: \"add\",\n  creditId: \"\",\n  transaction: \"\",\n  amount: \"\",\n  FAO_Name: \"\",\n  FAO_ID: \"\",\n  remarks: \"\",\n  option: \"nonVAT\",\n  invoice: \"\",\n  Code: \"\",\n  Title: \"\",\n  TC: \"\",\n};\nconst modalInitialState = {\n  CheckIdx: \"\",\n  BankName: \"\",\n  BankCode: \"\",\n  Branch: \"\",\n  Check_Date: new Date(),\n  Check_No: \"\",\n  Check_Amnt: \"\",\n  Check_Remarks: \"\",\n  CheckMode: \"add\",\n};\n\nexport const reducer = (state: any, action: any) => {\n  switch (action.type) {\n    case \"UPDATE_FIELD\":\n      return {\n        ...state,\n        [action.field]: action.value,\n      };\n    default:\n      return state;\n  }\n};\n\nconst addCollectionQueryKey = \"add-collection\";\nconst queryMutationKeyCollectionDataSearch = \"collection-data-search\";\nexport const debitColumn = [\n  { field: \"Payment\", headerName: \"Payment\", flex: 1, width: 170 },\n  {\n    field: \"Amount\",\n    headerName: \"Amount\",\n    flex: 1,\n    width: 170,\n    type: \"number\",\n  },\n  { field: \"Check_No\", headerName: \"Check No\", width: 170 },\n  { field: \"Check_Date\", headerName: \"Check Date\", width: 170 },\n  { field: \"Bank_Branch\", headerName: \"Bank/Branch\", width: 300 },\n  { field: \"Acct_Code\", headerName: \"DR Code\", width: 170 },\n  { field: \"Acct_Title\", headerName: \"DR Title\", width: 300 },\n  { field: \"Deposit_Slip\", headerName: \"Deposit Slip\", width: 170 },\n  { field: \"Cntr\", headerName: \"Cntr\", width: 170 },\n  { field: \"Remarks\", headerName: \"Remarks\", width: 300 },\n  { field: \"TC\", headerName: \"TC\", width: 170 },\n  { field: \"temp_id\", headerName: \"temp_id\", hide: true },\n  { field: \"Bank\", headerName: \"Bank\", hide: true },\n  { field: \"BankName\", headerName: \"BankName\", hide: true },\n];\nexport const creditColumn = [\n  { field: \"temp_id\", headerName: \"temp_id\", hide: true },\n  { field: \"transaction\", headerName: \"Transaction\", width: 200 },\n  { field: \"amount\", headerName: \"Amount\", width: 150, type: \"number\" },\n  { field: \"Remarks\", headerName: \"Remarks\", width: 350 },\n  { field: \"Code\", headerName: \"Code\", width: 150 },\n  { field: \"Title\", headerName: \"Title\", width: 350 },\n  { field: \"TC\", headerName: \"TC\", width: 200 },\n  { field: \"Account_No\", headerName: \"Accoount No.\", width: 180 },\n  { field: \"Name\", headerName: \"Name\", width: 350 },\n  { field: \"VATType\", headerName: \"VAT Type\", width: 150 },\n  { field: \"invoiceNo\", headerName: \"Invoice No\", width: 250 },\n];\nconst queryKeyPaymentType = \"payment-type-code\";\nconst queryKeyNewORNumber = \"new-or-number\";\n\nexport default function Collections() {\n  const [credit, setCredit] = useState<GridRowSelectionModel>([]);\n  const [debit, setDebit] = useState<GridRowSelectionModel>([]);\n  const [openPdcInputModal, setOpenPdcInputModal] = useState(false);\n\n  const { searchParams, setSearchParams } = useUrlParams();\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const [debitState, debitDispatch] = useReducer(reducer, initialStateDeposit);\n  const [creditState, creditDispatch] = useReducer(reducer, initialStateCredit);\n  const [modalState, modalDispatch] = useReducer(reducer, modalInitialState);\n\n  const { myAxios, user } = useContext(AuthContext);\n  const [save, setSave] = useState(searchParams.get(\"selected\") !== \"\");\n  const [addNew, setAddNew] = useState(searchParams.get(\"selected\") !== \"\");\n  const [hasSelected, setHasSelected] = useState(false);\n\n  // button submit buttons\n  const cashButtonSave = useRef<HTMLButtonElement>(null);\n  const checkModalSaveButton = useRef<HTMLButtonElement>(null);\n  const checkModalSaveActionButtonRef = useRef<any>(null);\n\n  const creditSaveButton = useRef<HTMLButtonElement>(null);\n  const saveCollectionButtonRef = useRef<HTMLButtonElement>(null);\n\n  //search modal auto focus on load\n  const pdcSearchInput = useRef<HTMLInputElement>(null);\n  const collectionSearchInput = useRef<HTMLInputElement>(null);\n  const bankSearchInput = useRef<HTMLInputElement>(null);\n  const checkListSearchInput = useRef<HTMLInputElement>(null);\n\n  //Check Modal Input ref\n  const checkNoRef = useRef<HTMLInputElement>(null);\n  const checkBankRef = useRef<HTMLInputElement>(null);\n  const checkBranchRef = useRef<HTMLInputElement>(null);\n  const checkAmountRef = useRef<HTMLInputElement>(null);\n  const checkDateRef = useRef<HTMLInputElement>(null);\n\n  //debit amount ref\n  const paymentTypeRef = useRef<HTMLSelectElement>(null);\n  const amountRef = useRef<HTMLInputElement>(null);\n\n  //credit input ref\n  let creditTransactionRef = useRef<HTMLInputElement>(null);\n  const creditAmountRef = useRef<HTMLInputElement>(null);\n  const creditFaoRef = useRef<HTMLInputElement>(null);\n  const creditInvoiceRef = useRef<HTMLInputElement>(null);\n\n  //pn/client ref\n  const pnClientORRef = useRef<HTMLInputElement>(null);\n\n  const queryClient = useQueryClient();\n  // client IDs search table modal\n\n  const tableDebit = useRef<any>(null);\n  const tableCredit = useRef<any>(null);\n\n  const {\n    ModalComponent: ModalClientIDs,\n    openModal: openCliendIDsModal,\n    isLoading: isLoadingClientIdsModal,\n    closeModal: closeCliendIDsModal,\n  } = useQueryModalTable({\n    link: {\n      url: \"/task/accounting/search-pdc-policy-id\",\n      queryUrlName: \"searchPdcPolicyIds\",\n    },\n    columns: [\n      { field: \"Type\", headerName: \"Type\", width: 130 },\n      { field: \"IDNo\", headerName: \"ID No.\", width: 200 },\n      {\n        field: \"Name\",\n        headerName: \"Name\",\n        flex: 1,\n      },\n      {\n        field: \"ID\",\n        headerName: \"ID\",\n        flex: 1,\n        hide: true,\n      },\n    ],\n    queryKey: \"collection-polidy-ids\",\n    uniqueId: \"IDNo\",\n    responseDataKey: \"clientsId\",\n    onSelected: (selectedRowData, data) => {\n      if (state.isFao) {\n        creditDispatch({\n          type: \"UPDATE_FIELD\",\n          field: \"FAO_ID\",\n          value: selectedRowData[0].IDNo,\n        });\n        creditDispatch({\n          type: \"UPDATE_FIELD\",\n          field: \"FAO_Name\",\n          value: selectedRowData[0].Name ?? \"\",\n        });\n      } else {\n        dispatch({\n          type: \"UPDATE_FIELD\",\n          field: \"PNo\",\n          value: selectedRowData[0].IDNo,\n        });\n        dispatch({\n          type: \"UPDATE_FIELD\",\n          field: \"IDNo\",\n          value: selectedRowData[0].ID,\n        });\n        dispatch({\n          type: \"UPDATE_FIELD\",\n          field: \"Name\",\n          value: selectedRowData[0].Name ?? \"\",\n        });\n      }\n      closeCliendIDsModal();\n    },\n    searchRef: pdcSearchInput,\n  });\n  // collection search table modal\n  const {\n    ModalComponent: ModalSearchCollection,\n    openModal: openModalSearchCollection,\n    closeModal: closeModalSearchCollection,\n    isLoading: isLoadingModalSearchCollection,\n  } = useQueryModalTable({\n    link: {\n      url: \"/task/accounting/search-collection\",\n      queryUrlName: \"searchCollectionInput\",\n    },\n    columns: [\n      { field: \"Date\", headerName: \"OR Date\", width: 170 },\n      { field: \"ORNo\", headerName: \"OR No.\", width: 200 },\n      { field: \"Name\", headerName: \"Name\", flex: 1 },\n    ],\n    queryKey: \"collection-search\",\n    uniqueId: \"ORNo\",\n    responseDataKey: \"collection\",\n    onSelected: (selectedRowData, data) => {\n      mutateCollectionDataSearch({ ORNo: selectedRowData[0].ORNo });\n    },\n    onCloseFunction: (value: any) => {\n      dispatch({ type: \"UPDATE_FIELD\", field: \"search\", value });\n    },\n    searchRef: collectionSearchInput,\n  });\n  // bank search table modal\n  const {\n    ModalComponent: ModalSearchBanks,\n    openModal: openModalSearchBanks,\n    closeModal: closeModalSearchBanks,\n    isLoading: isLoadingModalSearchbanks,\n  } = useQueryModalTable({\n    link: {\n      url: \"/task/accounting/search-pdc-banks\",\n      queryUrlName: \"searchPdcBanks\",\n    },\n    columns: [\n      { field: \"Bank_Code\", headerName: \"Code\", width: 130 },\n      { field: \"Bank\", headerName: \"Bank Name\", flex: 1 },\n    ],\n    queryKey: \"collection-banks\",\n    uniqueId: \"Bank_Code\",\n    responseDataKey: \"pdcBanks\",\n    onSelected: (selectedRowData, data) => {\n      modalDispatch({\n        type: \"UPDATE_FIELD\",\n        field: \"BankName\",\n        value: selectedRowData[0].Bank,\n      });\n\n      modalDispatch({\n        type: \"UPDATE_FIELD\",\n        field: \"BankCode\",\n        value: selectedRowData[0].Bank_Code,\n      });\n      closeModalSearchBanks();\n    },\n\n    searchRef: bankSearchInput,\n  });\n  //Get checked list\n  const {\n    ModalComponent: ModalSearchCheckList,\n    openModal: openModalSearchCheckList,\n    closeModal: closeModalSearchCheckList,\n    isLoading: isLoadingModalSearchCheckList,\n    mutate: mutateClientCheckedList,\n  } = useMutationModalTable({\n    link: {\n      queryWithVariable: (variables: any) => {\n        return `/task/accounting/get-client-checked-by-id?PNo=${variables.PNo}&searchCheckedList=${variables.searchCheckedList}`;\n      },\n      queryExtraBySearch: `/task/accounting/get-client-checked-by-id?PNo=${state.PNo}&searchCheckedList`,\n    },\n    columns: [\n      { field: \"temp_id\", headerName: \"temp_id\", width: 0, hide: true },\n      { field: \"Check_No\", headerName: \"Check No\", width: 130 },\n      { field: \"Check_Date\", headerName: \"Check Date\", flex: 1 },\n      {\n        field: \"Amount\",\n        headerName: \"Amount\",\n        width: 200,\n        type: \"number\",\n      },\n      {\n        field: \"Bank_Branch\",\n        headerName: \"Bank Branch\",\n        width: 200,\n      },\n      {\n        field: \"Remarks\",\n        headerName: \"Remarks\",\n        width: 200,\n        hide: true,\n      },\n    ],\n    queryKey: \"collection-client-check\",\n    uniqueId: \"temp_id\",\n    responseDataKey: \"clientCheckedList\",\n    onSelected: (selectedRowData, data) => {\n      if (\n        debit\n          .filter((items: any) => items.Check_No !== \"\")\n          .map((items: any) => items.Check_No)\n          .includes(selectedRowData[0].Check_No)\n      ) {\n        return;\n      }\n\n      myAxios\n        .post(\n          `/task/accounting/get-drcode-drtitle-from-collection`,\n          { code: debitState.payamentType },\n          {\n            headers: {\n              \"Content-Type\": \"application/json\",\n              Authorization: `Bearer ${user?.accessToken}`,\n            },\n          }\n        )\n        .then((res) => {\n          console.log(res)\n          const { Acct_Code, Acct_Title } = res?.data?.data[0];\n          setDebit((d: any) => {\n            let lastID = 0;\n            if (d.length <= 0) {\n              lastID = 0;\n            } else {\n              lastID = parseInt(d[d.length - 1].temp_id) + 1;\n            }\n\n            d = [\n              ...d,\n              {\n                Payment: \"Check\",\n                Amount: selectedRowData[0].Amount,\n                Check_No: selectedRowData[0].Check_No,\n                Check_Date: selectedRowData[0].Check_Date,\n                Bank_Branch: selectedRowData[0].Bank_Branch,\n                Acct_Code,\n                Acct_Title,\n                Deposit_Slip: \"\",\n                Cntr: \"\",\n                Remarks: selectedRowData[0].Remarks,\n                TC: debitState.payamentType,\n                temp_id: lastID.toString(),\n                Bank: selectedRowData[0].Bank,\n                BankName: selectedRowData[0].BankName,\n                Check_Remarks: selectedRowData[0].Check_Remarks,\n                Branch: selectedRowData[0].Branch,\n              },\n            ];\n            return d;\n          });\n          closeModalSearchCheckList();\n        });\n    },\n    onSuccess: (data) => {\n      openModalSearchCheckList();\n    },\n    searchRef: checkListSearchInput,\n    isRowSelectable: (params) => {\n      if (\n        debit\n          .filter((items: any) => items.Check_No !== \"\")\n          .map((items: any) => items.Check_No)\n          .includes(params.row.Check_No)\n      ) {\n        return false;\n      }\n      return true;\n    },\n  });\n\n  // get chart_account and transaction_code\n  const { isLoading: paymentTypeLoading } = useQuery({\n    queryKey: queryKeyPaymentType,\n    queryFn: async () =>\n      await myAxios.get(`/task/accounting/get-transaction-code-title`, {\n        headers: {\n          Authorization: `Bearer ${user?.accessToken}`,\n        },\n      }),\n    refetchOnWindowFocus: false,\n    onSuccess: (res) => {\n      const response = res as any;\n\n      debitDispatch({\n        type: \"UPDATE_FIELD\",\n        field: \"transaction_desc\",\n        value: response.data.transactionDesc,\n      });\n    },\n  });\n\n  //get drcode and drtitle\n  const { isLoading: NewORNoLoading, refetch: refetchNewOR } = useQuery({\n    queryKey: queryKeyNewORNumber,\n    queryFn: async () =>\n      await myAxios.get(`/task/accounting/get-new-or-number`, {\n        headers: {\n          Authorization: `Bearer ${user?.accessToken}`,\n        },\n      }),\n    refetchOnWindowFocus: false,\n    onSuccess: (res) => {\n      const response = res as any;\n      dispatch({\n        type: \"UPDATE_FIELD\",\n        field: \"ORNo\",\n        value: response.data?.ORNo[0].collectionID,\n      });\n\n      dispatch({\n        type: \"UPDATE_FIELD\",\n        field: \"OR_No\",\n        value: response.data?.ORNo[0].collectionID,\n      });\n    },\n  });\n  // get data after collection search selected\n  const {\n    isLoading: loadingCollectionDataSearch,\n    mutate: mutateCollectionDataSearch,\n  } = useMutation({\n    mutationKey: queryMutationKeyCollectionDataSearch,\n    mutationFn: async (variables: any) =>\n      await myAxios.get(\n        `/task/accounting/get-collection-data-search?ORNo=${variables.ORNo}`,\n        {\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${user?.accessToken}`,\n          },\n        }\n      ),\n    onSuccess: (res) => {\n      const response = res as any;\n      const dataCollection = response.data.collection;\n\n      const ORNo = dataCollection[0].ORNo;\n      const OR_Date = dataCollection[0].Date_OR;\n      const ClientID = dataCollection[0].ID_No;\n      const ClientName = dataCollection[0].Short;\n      const selectedSearchState = {\n        ORNo: ORNo,\n        PNo: ClientID,\n        IDNo: ClientID,\n        Date: OR_Date,\n        Name: ClientName,\n      };\n      const debit: Array<any> = [];\n      const credit: Array<any> = [];\n\n      function isValidDate(dateString: string) {\n        const date: any = new Date(dateString);\n        return !isNaN(date) && dateString.trim() !== \"\";\n      }\n\n      for (let i = 0; i <= dataCollection.length - 1; i++) {\n        if (\n          dataCollection[i].Payment !== \"\" &&\n          dataCollection[i].Debit !== \"0\"\n        ) {\n          debit.push({\n            Payment: dataCollection[i].Payment,\n            Amount: dataCollection[i].Debit,\n            Check_No: dataCollection[i].Check_No,\n            Check_Date: isValidDate(dataCollection[i].Check_Date)\n              ? new Date(dataCollection[i].Check_Date).toLocaleDateString()\n              : \"\",\n            Bank_Branch: dataCollection[i].Bank,\n            Acct_Code: dataCollection[i].DRCode,\n            Acct_Title: dataCollection[i].DRTitle,\n            Deposit_Slip: dataCollection[i].SlipCode,\n            Cntr: \"\",\n            Remarks: dataCollection[i].DRRemarks,\n            TC: dataCollection[i].Check_No ? \"CHK\" : \"CSH\",\n            temp_id: `${i}`,\n            Bank: dataCollection[i].Bank_Code,\n            BankName: dataCollection[i].BankName,\n            Branch: dataCollection[i].Branch,\n            Check_Remarks: dataCollection[i].DRRemarks,\n          });\n        }\n\n        if (\n          dataCollection[i].Purpose !== \"\" &&\n          dataCollection[i].Credit !== \"0\" &&\n          dataCollection[i].CRCode !== \"\" &&\n          dataCollection[i].CRTitle !== \"\" &&\n          dataCollection[i].CRLoanID !== \"\" &&\n          dataCollection[i].CRLoanName !== \"\" &&\n          dataCollection[i].CRVatType !== \"\" &&\n          dataCollection[i].CRInvoiceNo !== \"\"\n        ) {\n          credit.push({\n            temp_id: `${i}`,\n            transaction: dataCollection[i].Purpose,\n            amount: dataCollection[i].Credit,\n            Remarks: dataCollection[i].CRRemarks,\n            Code: dataCollection[i].CRCode,\n            Title: dataCollection[i].CRTitle,\n            TC: dataCollection[i].CRTitle,\n            Account_No: dataCollection[i].CRLoanID,\n            Name: dataCollection[i].CRLoanName,\n            VATType: dataCollection[i].CRVATType,\n            invoiceNo: dataCollection[i].CRInvoiceNo,\n          });\n        }\n      }\n      setNewStateValue(dispatch, selectedSearchState);\n      setDebit(debit);\n      setCredit(credit);\n      setAddNew(true);\n      setSave(true);\n      setHasSelected(true);\n      closeModalSearchCollection();\n    },\n  });\n  //add update\n  const {\n    mutate,\n    isLoading: loadingAddNew,\n    variables,\n  } = useMutation({\n    mutationKey: addCollectionQueryKey,\n    mutationFn: async (variables: any) => {\n      if (hasSelected) {\n        delete variables.mode;\n        return await myAxios.post(\n          \"/task/accounting/update-collection\",\n          variables,\n          {\n            headers: {\n              Authorization: `Bearer ${user?.accessToken}`,\n            },\n          }\n        );\n      }\n      delete variables.mode;\n      return await myAxios.post(\"/task/accounting/add-collection\", variables, {\n        headers: {\n          Authorization: `Bearer ${user?.accessToken}`,\n        },\n      });\n    },\n    onSuccess: (res) => {\n      if (res.data.success) {\n        setSave(false);\n        setAddNew(false);\n        setNewStateValue(dispatch, initialState);\n        queryClient.invalidateQueries(\"collection-search\");\n        setHasSelected(false);\n        setDebit([]);\n        setCredit([]);\n        refetchNewOR();\n        return Swal.fire({\n          position: \"center\",\n          icon: \"success\",\n          title: res.data.message,\n          showConfirmButton: false,\n          timer: 1500,\n        });\n      }\n      Swal.fire({\n        position: \"center\",\n        icon: \"error\",\n        title: res.data.message,\n        showConfirmButton: false,\n        timer: 1500,\n      });\n    },\n  });\n  // print\n  const { mutate: mutataPrint, isLoading: isLoadingPrint } = useMutation({\n    mutationKey: \"on-print\",\n    mutationFn: async (variables: any) => {\n      return await myAxios.post(\"/task/accounting/on-print\", variables, {\n        headers: {\n          Authorization: `Bearer ${user?.accessToken}`,\n        },\n      });\n    },\n    onSuccess: (res) => {\n      if (res.data.success) {\n        printOR(res.data);\n      }\n    },\n  });\n  // dispatch state\n  const handleInputChange = (e: any) => {\n    const { name, value } = e.target;\n    dispatch({ type: \"UPDATE_FIELD\", field: name, value });\n  };\n  // dispatch debit state\n  const handleDebitInputChange = (e: any) => {\n    const { name, value } = e.target;\n    debitDispatch({ type: \"UPDATE_FIELD\", field: name, value });\n  };\n  // dispatch credit state\n  const handleCreditInputChange = (e: any) => {\n    const { name, value } = e.target;\n    creditDispatch({ type: \"UPDATE_FIELD\", field: name, value });\n  };\n  // click button save\n  function handleOnSave(e: any) {\n    e.preventDefault();\n    if (state.ORNo === \"\") {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: \"Please provide OR number\",\n        timer: 1500,\n      });\n    } else if (state.PNo === \"\") {\n      dispatch({\n        type: \"UPDATE_FIELD\",\n        field: \"isFao\",\n        value: false,\n      });\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: \"Please provide PN/Client ID\",\n        timer: 1500,\n      }).then(() => {\n        wait(350).then(() => {\n          openCliendIDsModal();\n        });\n      });\n    } else if (debit.length <= 0) {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: \"Please provide debit entry\",\n        timer: 1500,\n      }).then(() => {\n        wait(300).then(() => {\n          paymentTypeRef.current?.focus();\n        });\n      });\n    } else if (credit.length <= 0) {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: \"Please provide credit entry\",\n        timer: 1500,\n      }).then(() => {\n        wait(300).then(() => {\n          creditTransactionRef.current?.focus();\n        });\n      });\n    } else if (\n      debit.reduce(\n        (sum: any, obj: any) =>\n          sum + parseFloat(obj.Amount.toString().replace(/,/g, \"\")),\n        0\n      ) !==\n      credit.reduce(\n        (sum: any, obj: any) =>\n          sum + parseFloat(obj.amount.toString().replace(/,/g, \"\")),\n        0\n      )\n    ) {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title:\n          \"Transaction is not balanced. Check if the amount you entered are correct!\",\n        timer: 1500,\n      });\n    }\n\n    if (state.PNo.length >= 200) {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: \"PN/Client ID is too long!\",\n        timer: 1500,\n      });\n    }\n\n    const newState = {\n      ORNo: state.ORNo,\n      PNo: state.PNo,\n      IDNo: state.IDNo,\n      Date: state.Date,\n      Name: state.Name,\n      debit: JSON.stringify(debit),\n      credit: JSON.stringify(credit),\n      payamentType: debitState.payamentType,\n    };\n    if (hasSelected) {\n      codeCondfirmationAlert({\n        isUpdate: true,\n        cb: (userCodeConfirmation) => {\n          mutate({ ...newState, userCodeConfirmation, mode: \"\" });\n        },\n      });\n    } else {\n      saveCondfirmationAlert({\n        isConfirm: () => {\n          mutate({ ...newState, mode: \"\" });\n        },\n      });\n    }\n  }\n  // debit select Row\n  function DebitSelectedChange(rowSelected: any) {\n    if (rowSelected.Payment === \"Cash\") {\n      modalDispatch({\n        type: \"UPDATE_FIELD\",\n        field: \"CheckMode\",\n        value: \"\",\n      });\n      modalDispatch({\n        type: \"UPDATE_FIELD\",\n        field: \"CheckIdx\",\n        value: \"\",\n      });\n\n      debitDispatch({\n        type: \"UPDATE_FIELD\",\n        field: \"amount\",\n        value: rowSelected.Amount,\n      });\n      debitDispatch({\n        type: \"UPDATE_FIELD\",\n        field: \"cashID\",\n        value: rowSelected.temp_id,\n      });\n      debitDispatch({\n        type: \"UPDATE_FIELD\",\n        field: \"cashMode\",\n        value: \"edit\",\n      });\n      return;\n    }\n    setAddNew(true);\n    setSave(true);\n    modalDispatch({\n      type: \"UPDATE_FIELD\",\n      field: \"CheckMode\",\n      value: \"edit\",\n    });\n    modalDispatch({\n      type: \"UPDATE_FIELD\",\n      field: \"CheckIdx\",\n      value: rowSelected.temp_id,\n    });\n\n    if (rowSelected.Deposit_Slip !== \"\") {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: `Unable to edit. Check No ${rowSelected.Check_No} is a PDC deposited!`,\n        showConfirmButton: false,\n        timer: 1500,\n      });\n    }\n    if (rowSelected.Cntr !== \"\") {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: `Unable to edit. Check No ${rowSelected.Check_No} is a PDC reference!`,\n        showConfirmButton: false,\n        timer: 1500,\n      });\n    }\n    const newState = {\n      CheckIdx: rowSelected.temp_id,\n      BankName: rowSelected.BankName,\n      BankCode: rowSelected.Bank,\n      Branch: rowSelected.Branch,\n      Check_Date: new Date(rowSelected.Check_Date),\n      Check_No: rowSelected.Check_No,\n      Check_Amnt: rowSelected.Amount,\n      Check_Remarks: rowSelected.Remarks,\n      CheckMode: \"edit\",\n    };\n\n    // if (code === \"Delete\" || code === \"Backspace\") {\n    //   return DebitDeleteRow(rowSelected);\n    // }\n\n    setNewStateValue(modalDispatch, newState);\n    flushSync(() => {\n      setOpenPdcInputModal(true);\n    });\n    checkModalSaveActionButtonRef.current?.focusVisible();\n  }\n  // debit selected row delete\n  function DebitDeleteRow(rowSelected: any) {\n    Swal.fire({\n      title: \"Are you sure?\",\n      text: `You won't to delete this Check No. ${rowSelected.Check_No}`,\n      icon: \"warning\",\n      showCancelButton: true,\n      confirmButtonColor: \"#3085d6\",\n      cancelButtonColor: \"#d33\",\n      confirmButtonText: \"Yes, delete it!\",\n    }).then((result) => {\n      if (result.isConfirmed) {\n        return Swal.fire({\n          text: `Check No. ${rowSelected.Check_No} has delete successfully.`,\n          icon: \"success\",\n          showCancelButton: true,\n          timer: 1500,\n        }).then(() => {\n          setDebit((d) => {\n            d = d.filter((item: any) => {\n              return item.temp_id !== rowSelected.temp_id;\n            });\n            return d;\n          });\n        });\n      }\n\n      debitDispatch({\n        type: \"UPDATE_FIELD\",\n        field: \"amount\",\n        value: \"0.00\",\n      });\n      tableDebit.current?.resetTableSelected();\n    });\n  }\n\n  function handleModalInputChange(e: any) {\n    const { name, value } = e.target;\n    modalDispatch({ type: \"UPDATE_FIELD\", field: name, value });\n  }\n\n  function CustomSwalAlertWarning(\n    label: string,\n    cb: (value: SweetAlertResult<any>) => any\n  ) {\n    Swal.fire({\n      text: label,\n      icon: \"warning\",\n      showCancelButton: false,\n      timer: 1500,\n    }).then(cb);\n  }\n\n  function printOR(res: any) {\n    const data = res.data.concat(res.data1);\n    flushSync(() => {\n      localStorage.removeItem(\"printString\");\n      localStorage.setItem(\"dataString\", JSON.stringify(data));\n      localStorage.setItem(\"paper-width\", \"8.5in\");\n      localStorage.setItem(\"paper-height\", \"11in\");\n      localStorage.setItem(\"module\", \"collection\");\n      if (user?.department === \"UMIS\") {\n        localStorage.setItem(\"title\", user?.department === 'UMIS' ? \"UPWARD MANAGEMENT INSURANCE SERVICES\" : \"UPWARD CONSULTANCY SERVICES AND MANAGEMENT INC.\");\n      } else {\n        localStorage.setItem(\n          \"title\",\n          \"UPWARD CONSULTANCY SERVICES AND MANAGEMENT INC.\"\n        );\n      }\n    });\n    window.open(\"/dashboard/print\", \"_blank\");\n  }\n\n  const width = window.innerWidth - 70;\n  const height = window.innerHeight - 500;\n\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        flexDirection: \"column\",\n        flex: 1,\n      }}\n    >\n      <CollectionContext.Provider value={{ credit, debit }}>\n        <div style={{ height: \"auto\" }}>\n          <Box\n            sx={(theme) => ({\n              display: \"flex\",\n              alignItems: \"center\",\n              columnGap: \"20px\",\n              [theme.breakpoints.down(\"sm\")]: {\n                flexDirection: \"column\",\n                alignItems: \"flex-start\",\n                flex: 1,\n                marginBottom: \"15px\",\n              },\n            })}\n          >\n            <div\n              style={{\n                display: \"flex\",\n                alignItems: \"center\",\n                columnGap: \"20px\",\n              }}\n            >\n              <div\n                style={{\n                  display: \"flex\",\n                  alignItems: \"center\",\n                  columnGap: \"5px\",\n                }}\n              >\n                {isLoadingModalSearchCollection ? (\n                  <LoadingButton loading={isLoadingModalSearchCollection} />\n                ) : (\n                  <TextField\n                    label=\"Search\"\n                    size=\"small\"\n                    name=\"search\"\n                    value={state.search}\n                    onChange={handleInputChange}\n                    onKeyDown={(e) => {\n                      if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n                        e.preventDefault();\n                        return openModalSearchCollection(\n                          (e.target as HTMLInputElement).value\n                        );\n                      }\n                    }}\n                    InputProps={{\n                      style: { height: \"27px\", fontSize: \"14px\" },\n                    }}\n                    sx={{\n                      width: \"300px\",\n                      height: \"27px\",\n                      \".MuiFormLabel-root\": { fontSize: \"14px\" },\n                      \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n                    }}\n                  />\n                )}\n                {!save && (\n                  <Button\n                    sx={{\n                      height: \"30px\",\n                      fontSize: \"11px\",\n                    }}\n                    variant=\"contained\"\n                    startIcon={<AddIcon sx={{ width: 15, height: 15 }} />}\n                    id=\"entry-header-save-button\"\n                    onClick={() => {\n                      setAddNew(true);\n                      setSave(true);\n                      setSearchParams((prev) => {\n                        prev.set(\"selected\", \"\");\n                        return prev;\n                      });\n                      setDebit([]);\n                      setCredit([]);\n                      setHasSelected(false);\n                    }}\n                  >\n                    New\n                  </Button>\n                )}\n                <Box sx={{ position: \"relative\" }}>\n                  <Button\n                    sx={{\n                      height: \"30px\",\n                      fontSize: \"11px\",\n                    }}\n                    ref={saveCollectionButtonRef}\n                    id=\"save-entry-header\"\n                    color=\"success\"\n                    variant=\"contained\"\n                    type=\"submit\"\n                    onClick={handleOnSave}\n                    disabled={\n                      (loadingAddNew && variables.mode === undefined) || !save\n                    }\n                    startIcon={<SaveIcon sx={{ width: 15, height: 15 }} />}\n                  >\n                    Save\n                  </Button>\n                  {loadingAddNew && variables.mode === undefined && (\n                    <CircularProgress\n                      size={24}\n                      sx={{\n                        color: green[500],\n                        position: \"absolute\",\n                        top: \"50%\",\n                        left: \"50%\",\n                        marginTop: \"-12px\",\n                        marginLeft: \"-12px\",\n                      }}\n                    />\n                  )}\n                </Box>\n                {save && (\n                  <Button\n                    sx={{\n                      height: \"30px\",\n                      fontSize: \"11px\",\n                    }}\n                    variant=\"contained\"\n                    startIcon={<CloseIcon sx={{ width: 15, height: 15 }} />}\n                    color=\"error\"\n                    onClick={() => {\n                      Swal.fire({\n                        title: \"Are you sure?\",\n                        text: \"You won't be able to revert this!\",\n                        icon: \"warning\",\n                        showCancelButton: true,\n                        confirmButtonColor: \"#3085d6\",\n                        cancelButtonColor: \"#d33\",\n                        confirmButtonText: \"Yes, cancel it!\",\n                      }).then((result) => {\n                        if (result.isConfirmed) {\n                          setSave(false);\n                          setAddNew(false);\n                          setNewStateValue(dispatch, initialState);\n                          refetchNewOR();\n                          setDebit([]);\n                          setCredit([]);\n                          setHasSelected(false);\n                        }\n                      });\n                    }}\n                  >\n                    Cancel\n                  </Button>\n                )}\n                <LoadingButton\n                  loading={isLoadingPrint}\n                  color=\"secondary\"\n                  variant=\"contained\"\n                  sx={{\n                    height: \"30px\",\n                    fontSize: \"11px\",\n                  }}\n                  disabled={!hasSelected}\n                  onClick={() => {\n                    mutataPrint({ ORNo: state.ORNo });\n                  }}\n                >\n                  Print\n                </LoadingButton>\n              </div>\n            </div>\n          </Box>\n          <form\n            onKeyDown={(e) => {\n              if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n                e.preventDefault();\n                return;\n              }\n            }}\n          >\n            <Box\n              sx={(theme) => ({\n                [theme.breakpoints.down(\"md\")]: {\n                  flexDirection: \"column\",\n                  rowGap: \"10px\",\n                },\n              })}\n            >\n              <div\n                style={{\n                  display: \"flex\",\n                  gap: \"10px\",\n                  padding: \"15px 0 \",\n                }}\n              >\n                {NewORNoLoading ? (\n                  <LoadingButton loading={NewORNoLoading} />\n                ) : (\n                  <FormControl\n                    sx={{\n                      width: \"170px\",\n                      \".MuiFormLabel-root\": {\n                        fontSize: \"14px\",\n                        background: \"white\",\n                        zIndex: 99,\n                        padding: \"0 3px\",\n                      },\n                      \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n                    }}\n                    variant=\"outlined\"\n                    size=\"small\"\n                    disabled={!addNew || hasSelected}\n                    required\n                  >\n                    <InputLabel htmlFor=\"collection-id-field\">\n                      OR No.\n                    </InputLabel>\n                    <OutlinedInput\n                      sx={{\n                        height: \"27px\",\n                        fontSize: \"14px\",\n                      }}\n                      readOnly={user?.department !== \"UCSMI\"}\n\n                      // inputRef={checkBankRef}\n                      disabled={!addNew || hasSelected}\n                      label=\"OR No.\"\n                      name=\"ORNo\"\n                      value={state.ORNo}\n                      onChange={handleInputChange}\n                      onKeyDown={(e) => {\n                        if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n                          saveCollectionButtonRef.current?.click();\n                        }\n                      }}\n                      id=\"collection-id-field\"\n                      endAdornment={\n                        <InputAdornment position=\"end\">\n                          <IconButton\n                            disabled={!addNew || hasSelected}\n                            aria-label=\"search-client\"\n                            color=\"secondary\"\n                            edge=\"end\"\n                            onClick={() => {\n                              refetchNewOR();\n                            }}\n                          >\n                            <RestartAltIcon />\n                          </IconButton>\n                        </InputAdornment>\n                      }\n                    />\n                  </FormControl>\n                )}\n                <CustomDatePicker\n                  textField={{\n                    InputLabelProps: {\n                      style: {\n                        fontSize: \"14px\",\n                      },\n                    },\n                    InputProps: {\n                      style: { height: \"27px\", fontSize: \"14px\" },\n                    },\n                  }}\n                  fullWidth={false}\n                  disabled={!addNew}\n                  label=\"OR Date\"\n                  onChange={(value: any) => {\n                    dispatch({\n                      type: \"UPDATE_FIELD\",\n                      field: \"Date\",\n                      value: value,\n                    });\n                  }}\n                  value={new Date(state.Date)}\n                  onKeyDown={(e: any) => {\n                    if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n                      saveCollectionButtonRef.current?.click();\n                    }\n                  }}\n                />\n                {paymentTypeLoading || isLoadingClientIdsModal ? (\n                  <LoadingButton\n                    loading={paymentTypeLoading || isLoadingClientIdsModal}\n                  />\n                ) : (\n                  <FormControl\n                    sx={{\n                      width: \"170px\",\n                      \".MuiFormLabel-root\": {\n                        fontSize: \"14px\",\n                        background: \"white\",\n                        zIndex: 99,\n                        padding: \"0 3px\",\n                      },\n                      \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n                    }}\n                    variant=\"outlined\"\n                    size=\"small\"\n                    disabled={!addNew}\n                  >\n                    <InputLabel htmlFor=\"client-id\">PN/Client ID</InputLabel>\n                    <OutlinedInput\n                      sx={{\n                        height: \"27px\",\n                        fontSize: \"14px\",\n                      }}\n                      inputRef={pnClientORRef}\n                      name=\"PNo\"\n                      value={state.PNo}\n                      onChange={handleInputChange}\n                      id=\"client-id\"\n                      onKeyDown={(e) => {\n                        if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n                          dispatch({\n                            type: \"UPDATE_FIELD\",\n                            field: \"isFao\",\n                            value: false,\n                          });\n                          return openCliendIDsModal(state.PNo);\n                        }\n                      }}\n                      endAdornment={\n                        <InputAdornment position=\"end\">\n                          <IconButton\n                            disabled={!addNew}\n                            onClick={() => {\n                              openCliendIDsModal(state.PNo);\n                              dispatch({\n                                type: \"UPDATE_FIELD\",\n                                field: \"isFao\",\n                                value: false,\n                              });\n                            }}\n                            edge=\"end\"\n                            color=\"secondary\"\n                          >\n                            <PersonSearchIcon />\n                          </IconButton>\n                        </InputAdornment>\n                      }\n                      label=\"PN/Client ID\"\n                    />\n                  </FormControl>\n                )}\n                <TextField\n                  required\n                  variant=\"outlined\"\n                  size=\"small\"\n                  label=\"Clients Name\"\n                  name=\"Name\"\n                  value={state.Name}\n                  onChange={handleInputChange}\n                  disabled={!addNew}\n                  InputProps={{\n                    readOnly: true,\n                    style: { height: \"27px\", fontSize: \"14px\" },\n                  }}\n                  onKeyDown={(e) => {\n                    if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n                      saveCollectionButtonRef.current?.click();\n                    }\n                  }}\n                  sx={{\n                    flex: 1,\n                    \".MuiFormLabel-root\": { fontSize: \"14px\" },\n                    \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n                  }}\n                />\n              </div>\n            </Box>\n          </form>\n        </div>\n        <div\n          style={{\n            position: \"relative\",\n            width: \"100%\",\n            overflow: \"auto\",\n            flex: 1,\n          }}\n        >\n          <div\n            style={{\n              position: \"absolute\",\n              width: \"100%\",\n              height: \"auto\",\n            }}\n          >\n            <fieldset\n              style={{\n                boxSizing: \"border-box\",\n                border: \"1px solid #cbd5e1\",\n                borderRadius: \"5px\",\n                position: \"relative\",\n                height: \"420px\",\n                display: \"flex\",\n                flexDirection: \"column\",\n              }}\n            >\n              <legend>Particulars (Debit)</legend>\n              <div style={{ display: \"flex\", marginBottom: \"10px\" }}>\n                <FormControl\n                  sx={{\n                    width: \"150px\",\n                    marginRight: \"10px\",\n                    minWidth: 150,\n                    \".MuiFormLabel-root\": {\n                      fontSize: \"14px\",\n                      background: \"white\",\n                      zIndex: 99,\n                      padding: \"0 3px\",\n                    },\n                    \".MuiFormLabel-root[data-shrink=false]\": { top: \"-1px\" },\n                  }}\n                >\n                  <InputLabel id=\"payment-check\">Payment Type</InputLabel>\n                  <Select\n                    inputRef={paymentTypeRef}\n                    disabled={!addNew}\n                    labelId=\"payment-check\"\n                    value={debitState.payamentType}\n                    onChange={handleDebitInputChange}\n                    autoWidth\n                    label=\"Payment Type\"\n                    size=\"small\"\n                    name=\"payamentType\"\n                    sx={{\n                      height: \"27px\",\n                      fontSize: \"14px\",\n                    }}\n                  >\n                    <MenuItem value={\"CHK\"}>Check</MenuItem>\n                    <MenuItem value={\"CSH\"}>Cash</MenuItem>\n                  </Select>\n                </FormControl>\n                {debitState.payamentType === \"CHK\" ? (\n                  <div style={{ display: \"flex\", gap: \"10px\" }}>\n                    <Button\n                      disabled={!addNew}\n                      startIcon={<AddIcon sx={{ width: 15, height: 15 }} />}\n                      variant=\"outlined\"\n                      sx={{\n                        height: \"30px\",\n                        fontSize: \"11px\",\n                      }}\n                      onClick={() => {\n                        const getLastCheck_No: any = debit[debit.length - 1];\n                        const newData = {\n                          CheckIdx: \"\",\n                          BankName: \"\",\n                          BankCode: \"\",\n                          Branch: \"\",\n                          Check_Date: new Date(),\n                          Check_No: incrementCheckNo(getLastCheck_No?.Check_No),\n                          Check_Amnt: \"\",\n                          Check_Remarks: \"\",\n                          CheckMode: \"add\",\n                        };\n                        setNewStateValue(modalDispatch, newData);\n                        flushSync(() => {\n                          setOpenPdcInputModal(true);\n                        });\n                        checkNoRef.current?.focus();\n                      }}\n                    >\n                      Add PDC Check\n                    </Button>\n                    <LoadingButton\n                      sx={{\n                        height: \"30px\",\n                        fontSize: \"11px\",\n                      }}\n                      loading={\n                        paymentTypeLoading || isLoadingModalSearchCheckList\n                      }\n                      disabled={!addNew}\n                      onClick={() => {\n                        mutateClientCheckedList({\n                          PNo: state.PNo,\n                          searchCheckedList: state.searchCheckedList,\n                        });\n                      }}\n                      startIcon={<AddIcon sx={{ width: 15, height: 15 }} />}\n                      variant=\"outlined\"\n                      color=\"success\"\n                    >\n                      Add Check From PDC Entry\n                    </LoadingButton>\n                  </div>\n                ) : (\n                  <div\n                    style={{\n                      display: \"flex\",\n                      gap: \"10px\",\n                      alignItems: \"center\",\n                    }}\n                  >\n                    <TextField\n                      inputRef={amountRef}\n                      disabled={!addNew || debitState.cashMode === \"\"}\n                      name=\"amount\"\n                      label=\"Amount\"\n                      size=\"small\"\n                      value={debitState.amount}\n                      onChange={handleDebitInputChange}\n                      placeholder=\"0.00\"\n                      InputProps={{\n                        inputComponent: NumericFormatCustom as any,\n                        style: { height: \"27px\", fontSize: \"14px\" },\n                      }}\n                      sx={{\n                        width: \"160px\",\n                        \".MuiFormLabel-root\": { fontSize: \"14px\" },\n                        \".MuiFormLabel-root[data-shrink=false]\": {\n                          top: \"-5px\",\n                        },\n                      }}\n                      onBlur={() => {\n                        debitDispatch({\n                          type: \"UPDATE_FIELD\",\n                          field: \"amount\",\n                          value: parseFloat(\n                            debitState.amount.replace(/,/g, \"\")\n                          ).toFixed(2),\n                        });\n                      }}\n                      onKeyDown={(e) => {\n                        if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n                          cashButtonSave.current?.click();\n                        }\n                      }}\n                    />\n                    {debitState.cashMode === \"\" ? (\n                      <Button\n                        sx={{\n                          height: \"30px\",\n                          fontSize: \"11px\",\n                        }}\n                        variant=\"outlined\"\n                        onClick={() => {\n                          debitDispatch({\n                            type: \"UPDATE_FIELD\",\n                            field: \"cashID\",\n                            value: \"\",\n                          });\n                          debitDispatch({\n                            type: \"UPDATE_FIELD\",\n                            field: \"cashMode\",\n                            value: \"add\",\n                          });\n                        }}\n                      >\n                        Add Cash\n                      </Button>\n                    ) : (\n                      <LoadingButton\n                        sx={{\n                          height: \"30px\",\n                          fontSize: \"11px\",\n                        }}\n                        ref={cashButtonSave}\n                        loading={paymentTypeLoading}\n                        variant=\"outlined\"\n                        color=\"success\"\n                        disabled={!addNew}\n                        onClick={() => {\n                          if (\n                            parseFloat(debitState.amount.replace(/,/g, \"\")) <=\n                            0 ||\n                            isNaN(\n                              parseFloat(debitState.amount.replace(/,/g, \"\"))\n                            )\n                          ) {\n                            amountRef.current?.focus();\n                            return Swal.fire({\n                              position: \"center\",\n                              icon: \"warning\",\n                              title: \"Please provide amount!\",\n                              showConfirmButton: false,\n                              timer: 1500,\n                            });\n                          }\n                          let temp_id = \"\";\n                          debitState.amount = parseFloat(\n                            debitState.amount.replace(/,/g, \"\")\n                          ).toLocaleString(\"en-US\", {\n                            minimumFractionDigits: 2,\n                            maximumFractionDigits: 2,\n                          });\n                          myAxios\n                            .post(\n                              `/task/accounting/get-drcode-drtitle-from-collection`,\n                              { code: debitState.payamentType },\n                              {\n                                headers: {\n                                  \"Content-Type\": \"application/json\",\n                                  Authorization: `Bearer ${user?.accessToken}`,\n                                },\n                              }\n                            )\n                            .then((res) => {\n                              const { Acct_Code, Acct_Title } =\n                                res?.data.data[0];\n                              setDebit((d: any) => {\n                                temp_id = generateID(\n                                  d.length > 0\n                                    ? (d[d.length - 1] as any).temp_id\n                                    : \"0\"\n                                );\n\n                                if (debitState.cashMode === \"edit\") {\n                                  d = d.filter(\n                                    (itms: any) =>\n                                      itms.temp_id !== debitState.cashID\n                                  );\n                                  temp_id = debitState.cashID;\n                                }\n\n                                const data = {\n                                  Payment: \"Cash\",\n                                  Amount: debitState.amount,\n                                  Check_No: \"\",\n                                  Check_Date: \"\",\n                                  Bank_Branch: \"\",\n                                  Acct_Code,\n                                  Acct_Title,\n                                  Deposit_Slip: \"\",\n                                  Cntr: \"\",\n                                  Remarks: \"\",\n                                  TC: debitState.payamentType,\n                                  Bank: \"\",\n                                  BankName: \"\",\n                                  Check_Remarks: \"\",\n                                  Branch: \"\",\n                                  temp_id,\n                                };\n\n                                d = [...d, data];\n                                d.sort((a: any, b: any) => {\n                                  const idA = parseInt(a.temp_id, 10);\n                                  const idB = parseInt(b.temp_id, 10);\n                                  if (idA < idB) {\n                                    return -1;\n                                  }\n                                  if (idA > idB) {\n                                    return 1;\n                                  }\n                                  return 0;\n                                });\n                                return d;\n                              });\n                              debitDispatch({\n                                type: \"UPDATE_FIELD\",\n                                field: \"amount\",\n                                value: parseFloat(\n                                  \"0\".replace(/,/g, \"\")\n                                ).toFixed(2),\n                              });\n                              debitDispatch({\n                                type: \"UPDATE_FIELD\",\n                                field: \"cashID\",\n                                value: \"\",\n                              });\n                              debitDispatch({\n                                type: \"UPDATE_FIELD\",\n                                field: \"cashMode\",\n                                value: \"add\",\n                              });\n                              tableDebit.current?.resetTableSelected();\n                            });\n                        }}\n                      >\n                        Submit\n                      </LoadingButton>\n                    )}\n                  </div>\n                )}\n              </div>\n              <UpwardTable\n                isLoading={loadingAddNew || loadingCollectionDataSearch}\n                ref={tableDebit}\n                rows={debit}\n                column={debitColumn}\n                width={width}\n                height={height}\n                dataReadOnly={true}\n                onSelectionChange={(selectedRow) => {\n                  const rowSelected = selectedRow[0];\n                  if (selectedRow.length > 0) {\n                    DebitSelectedChange(rowSelected);\n                  } else {\n                    modalDispatch({\n                      type: \"UPDATE_FIELD\",\n                      field: \"CheckIdx\",\n                      value: \"\",\n                    });\n                    modalDispatch({\n                      type: \"UPDATE_FIELD\",\n                      field: \"CheckMode\",\n                      value: \"\",\n                    });\n                    debitDispatch({\n                      type: \"UPDATE_FIELD\",\n                      field: \"cashID\",\n                      value: \"\",\n                    });\n                    debitDispatch({\n                      type: \"UPDATE_FIELD\",\n                      field: \"cashMode\",\n                      value: \"\",\n                    });\n                    debitDispatch({\n                      type: \"UPDATE_FIELD\",\n                      field: \"amount\",\n                      value: \"0.00\",\n                    });\n                  }\n                }}\n                onKeyDown={(row, key) => {\n                  if (key === \"Delete\" || key === \"Backspace\") {\n                    const rowSelected = row[0];\n                    Swal.fire({\n                      title: \"Are you sure?\",\n                      text: `You won't to delete this?`,\n                      icon: \"warning\",\n                      showCancelButton: true,\n                      confirmButtonColor: \"#3085d6\",\n                      cancelButtonColor: \"#d33\",\n                      confirmButtonText: \"Yes, delete it!\",\n                    }).then((result) => {\n                      if (result.isConfirmed) {\n                        return setDebit((d) => {\n                          d = d.filter((item: any) => {\n                            return item.temp_id !== rowSelected.temp_id;\n                          });\n                          return d;\n                        });\n                      }\n                    });\n                  }\n                }}\n                inputsearchselector=\".manok\"\n              />\n              <div style={{ width: \"100%\", marginTop: \"20px\" }}>\n                <DebitFooterComponent />\n              </div>\n              {/* <div\n                style={{\n                  marginTop: \"10px\",\n                  width: \"100%\",\n                  position: \"relative\",\n                }}\n              >\n                <Box\n                  style={{\n                    height: \"320px\",\n                    width: \"100%\",\n                    overflowX: \"scroll\",\n                    position: \"absolute\",\n                  //  paddingLeft:\"70px\"\n                  }}\n                >\n               \n\n\n                  {/* <Table\n                    ref={tableDebit}\n                    isLoading={loadingAddNew || loadingCollectionDataSearch}\n                    columns={debitColumn}\n                    rows={debit}\n                    table_id={\"temp_id\"}\n                    isSingleSelection={true}\n                    isRowFreeze={false}\n                    dataSelection={(selection, data, code) => {\n                      const rowSelected = data.filter(\n                        (item: any) => item.temp_id === selection[0]\n                      )[0];\n                      if (\n                        rowSelected === undefined ||\n                        rowSelected.length <= 0\n                      ) {\n                        modalDispatch({\n                          type: \"UPDATE_FIELD\",\n                          field: \"CheckIdx\",\n                          value: \"\",\n                        });\n                        modalDispatch({\n                          type: \"UPDATE_FIELD\",\n                          field: \"CheckMode\",\n                          value: \"\",\n                        });\n                        debitDispatch({\n                          type: \"UPDATE_FIELD\",\n                          field: \"cashID\",\n                          value: \"\",\n                        });\n                        debitDispatch({\n                          type: \"UPDATE_FIELD\",\n                          field: \"cashMode\",\n                          value: \"\",\n                        });\n                        debitDispatch({\n                          type: \"UPDATE_FIELD\",\n                          field: \"amount\",\n                          value: \"0.00\",\n                        });\n                        return;\n                      }\n                      DebitSelectedChange(rowSelected, code);\n\n\n                    }}\n                    footerChildren={() => {\n                      return <DebitFooterComponent />;\n                    }}\n                    footerPaginationPosition={\"left-right\"}\n                    showFooterSelectedCount={false}\n                  /> \n                </Box>\n              </div> */}\n            </fieldset>\n            <br />\n            <fieldset\n              style={{\n                boxSizing: \"border-box\",\n                border: \"1px solid #cbd5e1\",\n                borderRadius: \"5px\",\n                position: \"relative\",\n                height: \"460px\",\n                display: \"flex\",\n                flexDirection: \"column\",\n              }}\n            >\n              <legend>Payment Breakdown (Credit)</legend>\n              <div\n                style={{\n                  display: \"flex\",\n                  gap: \"10px\",\n                  flexDirection: \"column\",\n                  marginBottom: \"10px\"\n                }}\n              >\n                <div style={{ display: \"flex\", gap: \"10px\" }}>\n                  {paymentTypeLoading ? (\n                    <LoadingButton loading={paymentTypeLoading} />\n                  ) : (\n                    <Autocomplete\n                      freeSolo\n                      options={debitState.transaction_desc}\n                      value={creditState.transaction}\n                      onChange={(e, v: any) => {\n                        if (v) {\n                          creditDispatch({\n                            type: \"UPDATE_FIELD\",\n                            field: \"Code\",\n                            value: v.Acct_Code,\n                          });\n                          creditDispatch({\n                            type: \"UPDATE_FIELD\",\n                            field: \"Title\",\n                            value: v.Acct_Title,\n                          });\n                          creditDispatch({\n                            type: \"UPDATE_FIELD\",\n                            field: \"TC\",\n                            value: v.Code,\n                          });\n                          creditDispatch({\n                            type: \"UPDATE_FIELD\",\n                            field: \"transaction\",\n                            value: v.label,\n                          });\n                        } else {\n                          creditDispatch({\n                            type: \"UPDATE_FIELD\",\n                            field: \"Code\",\n                            value: \"\",\n                          });\n                          creditDispatch({\n                            type: \"UPDATE_FIELD\",\n                            field: \"Title\",\n                            value: \"\",\n                          });\n                          creditDispatch({\n                            type: \"UPDATE_FIELD\",\n                            field: \"TC\",\n                            value: \"\",\n                          });\n                          creditDispatch({\n                            type: \"UPDATE_FIELD\",\n                            field: \"transaction\",\n                            value: \"\",\n                          });\n                        }\n                      }}\n                      onInput={(e: any) => {\n                        creditDispatch({\n                          type: \"UPDATE_FIELD\",\n                          field: \"transaction\",\n                          value: e.target.value,\n                        });\n                      }}\n                      renderInput={(params) => (\n                        <TextField\n                          {...params}\n                          // inputRef={(input) => {\n                          //   creditTransactionRef = input;\n                          // }}\n                          InputProps={{\n                            ...params.InputProps,\n                            inputRef: creditTransactionRef,\n                            style: { height: \"27px\", fontSize: \"14px\" },\n                          }}\n                          label=\"Transaction\"\n                        />\n                      )}\n                      sx={{\n                        flex: 1,\n                        \".MuiFormLabel-root\": {\n                          fontSize: \"14px\",\n                        },\n                        \".MuiInputBase-input\": {\n                          width: \"100% !important\",\n                        },\n                        \".MuiFormLabel-root[data-shrink=false]\": {\n                          top: \"-5px\",\n                        },\n                        \".MuiAutocomplete-input \": {\n                          position: \"absolute\",\n                        },\n                      }}\n                      size=\"small\"\n                      disabled={!addNew}\n                    />\n                  )}\n                  <TextField\n                    disabled={!addNew}\n                    name=\"amount\"\n                    label=\"Amount\"\n                    size=\"small\"\n                    value={creditState.amount}\n                    onChange={handleCreditInputChange}\n                    placeholder=\"0.00\"\n                    InputProps={{\n                      inputComponent: NumericFormatCustom as any,\n                      inputRef: creditAmountRef,\n                      style: { height: \"27px\", fontSize: \"14px\" },\n                    }}\n                    onBlur={() => {\n                      creditDispatch({\n                        type: \"UPDATE_FIELD\",\n                        field: \"amount\",\n                        value: parseFloat(\n                          creditState.amount.replace(/,/g, \"\")\n                        ).toFixed(2),\n                      });\n                    }}\n                    onKeyDown={(e) => {\n                      if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n                        const timeout = setTimeout(() => {\n                          creditSaveButton.current?.click();\n                          clearTimeout(timeout);\n                        }, 100);\n                      }\n                    }}\n                    sx={{\n                      width: \"160px\",\n                      \".MuiFormLabel-root\": { fontSize: \"14px\" },\n                      \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n                    }}\n                  />\n                  <FormControl\n                    sx={{\n                      width: \"150px\",\n                      \".MuiFormLabel-root\": {\n                        fontSize: \"14px\",\n                        background: \"white\",\n                        zIndex: 99,\n                        padding: \"0 3px\",\n                      },\n                      \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n                    }}\n                    variant=\"outlined\"\n                    size=\"small\"\n                    disabled={!addNew}\n                  >\n                    <InputLabel htmlFor=\"fao\">FAO</InputLabel>\n                    <OutlinedInput\n                      sx={{\n                        height: \"27px\",\n                        fontSize: \"14px\",\n                      }}\n                      inputRef={creditFaoRef}\n                      name=\"FAO_Name\"\n                      value={creditState.FAO_Name}\n                      onChange={handleCreditInputChange}\n                      id=\"fao\"\n                      onKeyDown={(e) => {\n                        if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n                          dispatch({\n                            type: \"UPDATE_FIELD\",\n                            field: \"isFao\",\n                            value: true,\n                          });\n                          return openCliendIDsModal(creditState.FAO_Name);\n                        }\n                      }}\n                      endAdornment={\n                        <InputAdornment position=\"end\">\n                          <IconButton\n                            disabled={!addNew}\n                            onClick={() => {\n                              dispatch({\n                                type: \"UPDATE_FIELD\",\n                                field: \"isFao\",\n                                value: true,\n                              });\n                              openCliendIDsModal(creditState.FAO_Name);\n                            }}\n                            edge=\"end\"\n                            color=\"secondary\"\n                          >\n                            <PersonSearchIcon />\n                          </IconButton>\n                        </InputAdornment>\n                      }\n                      label=\"FAO\"\n                    />\n                  </FormControl>\n                  <TextField\n                    disabled={!addNew}\n                    name=\"remarks\"\n                    label=\"Remarks\"\n                    size=\"small\"\n                    value={creditState.remarks ?? \"\"}\n                    onChange={handleCreditInputChange}\n                    onKeyDown={(e) => {\n                      if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n                        const timeout = setTimeout(() => {\n                          creditSaveButton.current?.click();\n                          clearTimeout(timeout);\n                        }, 100);\n                      }\n                    }}\n                    InputProps={{\n                      style: { height: \"27px\", fontSize: \"14px\" },\n                    }}\n                    sx={{\n                      width: \"160px\",\n                      \".MuiFormLabel-root\": { fontSize: \"14px\" },\n                      \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n                    }}\n                  />\n                </div>\n                <div\n                  style={{\n                    display: \"flex\",\n                    gap: \"10px\",\n                    justifyContent: \"space-between\",\n                  }}\n                >\n                  <div\n                    style={{\n                      display: \"flex\",\n                      alignItems: \"center\",\n                      columnGap: \"10px\",\n                    }}\n                  >\n                    <RadioGroup\n                      value={creditState.option}\n                      row\n                      aria-labelledby=\"option\"\n                      name=\"option\"\n                      onChange={handleCreditInputChange}\n                      sx={{\n                        height: \"27px\",\n                        display: \"flex\",\n                        alignItems: \"center\",\n                        margin: \"auto\",\n                        width: \"170px\",\n                        \"& .MuiSvgIcon-root\": {\n                          height: 15,\n                          width: 15,\n                        },\n                        \"& .MuiTypography-root \": {\n                          fontSize: \"14px !important\",\n                        },\n                        \"& .MuiFormControlLabel-root  \": {\n                          height: \"27px\",\n                        },\n                      }}\n                    >\n                      <FormControlLabel\n                        disabled={!addNew || creditState.creditMode === \"\"}\n                        value=\"Vat\"\n                        control={<Radio size=\"small\" />}\n                        label=\"VAT\"\n                      />\n                      <FormControlLabel\n                        disabled={!addNew || creditState.creditMode === \"\"}\n                        value=\"nonVAT\"\n                        control={<Radio size=\"small\" />}\n                        label=\"Non-VAT\"\n                      />\n                    </RadioGroup>\n                    <TextField\n                      disabled={!addNew || creditState.creditMode === \"\"}\n                      name=\"invoice\"\n                      label=\"Invoice\"\n                      size=\"small\"\n                      value={creditState.invoice}\n                      onChange={handleCreditInputChange}\n                      InputProps={{\n                        inputRef: creditInvoiceRef,\n                        style: { height: \"27px\", fontSize: \"14px\" },\n                      }}\n                      sx={{\n                        width: \"300px\",\n                        \".MuiFormLabel-root\": { fontSize: \"14px\" },\n                        \".MuiFormLabel-root[data-shrink=false]\": {\n                          top: \"-5px\",\n                        },\n                      }}\n                      onKeyDown={(e) => {\n                        if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n                          const timeout = setTimeout(() => {\n                            creditSaveButton.current?.click();\n                            clearTimeout(timeout);\n                          }, 100);\n                        }\n                      }}\n                    />\n                    {creditState.creditMode === \"\" ? (\n                      <Button\n                        sx={{\n                          height: \"30px\",\n                          fontSize: \"11px\",\n                        }}\n                        variant=\"outlined\"\n                        onClick={() => {\n                          Object.entries(initialStateCredit).forEach(\n                            ([field, value]) => {\n                              creditDispatch({\n                                type: \"UPDATE_FIELD\",\n                                field,\n                                value,\n                              });\n                            }\n                          );\n                        }}\n                      >\n                        NEW\n                      </Button>\n                    ) : (\n                      <Button\n                        disabled={!addNew || creditState.creditMode === \"\"}\n\n                        ref={creditSaveButton}\n                        sx={{\n                          height: \"30px\",\n                          fontSize: \"11px\",\n                        }}\n                        color=\"success\"\n                        variant=\"outlined\"\n                        onClick={() => {\n                          if (\n                            creditState.transaction === \"\" ||\n                            creditState.transaction === null ||\n                            creditState.transaction === undefined\n                          ) {\n                            return CustomSwalAlertWarning(\n                              \"Please select a transaction!\",\n                              () => {\n                                wait(300).then(() => {\n                                  creditTransactionRef.current?.focus();\n                                });\n                              }\n                            );\n                          }\n\n                          if (\n                            debitState.transaction_desc.filter(\n                              (item: any) =>\n                                item.label === creditState.transaction\n                            ).length <= 0\n                          ) {\n                            return CustomSwalAlertWarning(\n                              \"Transaction not yet defined!\",\n                              () => {\n                                wait(300).then(() => {\n                                  creditTransactionRef.current?.focus();\n                                });\n                              }\n                            );\n                          }\n                          if (\n                            parseFloat(creditState.amount.replace(/,/g, \"\")) <=\n                            0 ||\n                            isNaN(\n                              parseFloat(creditState.amount.replace(/,/g, \"\"))\n                            )\n                          ) {\n                            return CustomSwalAlertWarning(\n                              \"Please provide amount!\",\n                              () => {\n                                wait(300).then(() => {\n                                  creditAmountRef.current?.focus();\n                                });\n                              }\n                            );\n                          }\n                          if (creditState.FAO_ID === \"\") {\n                            return CustomSwalAlertWarning(\n                              \"Please provide FAO!\",\n                              () => {\n                                wait(300).then(() => {\n                                  creditFaoRef.current?.focus();\n                                });\n                              }\n                            );\n                          }\n                          if (creditState.invoice === \"\") {\n                            return CustomSwalAlertWarning(\n                              \"Please provide invoice!\",\n                              () => {\n                                wait(300).then(() => {\n                                  creditInvoiceRef.current?.focus();\n                                });\n                              }\n                            );\n                          }\n\n                          if (creditState.invoice.length >= 200) {\n                            return CustomSwalAlertWarning(\n                              \"Invoice is too long!\",\n                              () => { }\n                            );\n                          }\n                          if (creditState.FAO_ID.length >= 200) {\n                            return CustomSwalAlertWarning(\n                              \"ID is too long!\",\n                              () => { }\n                            );\n                          }\n                          if (creditState.remarks.length >= 200) {\n                            return CustomSwalAlertWarning(\n                              \"Remarks is too long!\",\n                              () => { }\n                            );\n                          }\n                          if (creditState.amount.length >= 200) {\n                            return CustomSwalAlertWarning(\n                              \"Amount is too long!\",\n                              () => { }\n                            );\n                          }\n\n                          function onSaveTransaction() {\n                            creditState.amount = parseFloat(\n                              creditState.amount\n                            ).toLocaleString(\"en-US\", {\n                              style: \"decimal\",\n                              minimumFractionDigits: 2,\n                              maximumFractionDigits: 2,\n                            });\n                            const temp_id =\n                              parseInt(\n                                credit.length <= 0\n                                  ? \"0\"\n                                  : (credit[credit.length - 1] as any).temp_id\n                              ) + 1;\n\n                            const creditData = {\n                              transaction: creditState.transaction,\n                              amount: creditState.amount,\n                              Remarks: creditState.remarks,\n                              Code: creditState.Code,\n                              Title: creditState.Title,\n                              TC: creditState.TC,\n                              Account_No: creditState.FAO_ID,\n                              Name: creditState.FAO_Name,\n                              VATType: creditState.option,\n                              invoiceNo: creditState.invoice,\n                            };\n                            setCredit((d: any) => {\n                              if (creditState.creditMode === \"add\") {\n                                d = [...d, { temp_id, ...creditData }];\n                                return d;\n                              } else {\n                                const data = d.map((obj: any) => {\n                                  if (obj.temp_id === creditState.creditId) {\n                                    obj = { ...obj, ...creditData };\n                                  }\n                                  return obj;\n                                });\n                                return data;\n                              }\n                            });\n                            if (creditState.option === \"Vat\") {\n                              const taxableAmt =\n                                parseFloat(\n                                  creditState.amount.replace(/,/g, \"\")\n                                ) / 1.12;\n                              const inputTax = taxableAmt * 0.12;\n                              const newD = debitState.transaction_desc.filter(\n                                (item: any) => item.label === \"Output Tax\"\n                              )[0];\n                              const creditDataVat = {\n                                temp_id: temp_id + 1,\n                                transaction: \"Output Tax\",\n                                amount: inputTax.toFixed(2),\n                                Remarks: creditState.remarks,\n                                Code: newD.Acct_Code,\n                                Title: newD.Acct_Title,\n                                TC: newD.Code,\n                                Account_No: creditState.FAO_ID,\n                                Name: creditState.FAO_Name,\n                                VATType: creditState.option,\n                                invoiceNo: creditState.invoice,\n                              };\n                              setCredit((d: any) => {\n                                d = [...d, creditDataVat];\n                                return d;\n                              });\n                            }\n                            Swal.fire({\n                              text:\n                                creditState.creditMode === \"edit\"\n                                  ? \"Update Successfully\"\n                                  : \"Create Successfully\",\n                              icon: \"success\",\n                              showCancelButton: false,\n                              timer: 1500,\n                            }).then(() => {\n                              setNewStateValue(\n                                creditDispatch,\n                                initialStateCredit\n                              );\n                              tableCredit.current.resetTableSelected();\n                            });\n                          }\n                          if (creditState.creditMode === \"edit\") {\n                            return Swal.fire({\n                              title: \"Are you sure?\",\n                              text: `You won't to update this?`,\n                              icon: \"warning\",\n                              showCancelButton: true,\n                              confirmButtonColor: \"#3085d6\",\n                              cancelButtonColor: \"#d33\",\n                              confirmButtonText: \"Yes, update it!\",\n                            }).then((result) => {\n                              if (result.isConfirmed) {\n                                return onSaveTransaction();\n                              }\n                            });\n                          } else {\n                            onSaveTransaction();\n                          }\n                        }}\n                      >\n                        Save\n                      </Button>\n                    )}\n                  </div>\n                </div>\n              </div>\n              <UpwardTable\n                isLoading={loadingAddNew || loadingCollectionDataSearch}\n                ref={tableCredit}\n                rows={credit}\n                column={creditColumn}\n                width={width}\n                height={height}\n                dataReadOnly={true}\n                onSelectionChange={(selectedRow) => {\n                  const rowSelected = selectedRow[0];\n                  if (selectedRow.length > 0) {\n                    const updateData = {\n                      creditMode: \"edit\",\n                      creditId: rowSelected.temp_id,\n                      transaction: rowSelected.transaction,\n                      amount: rowSelected.amount,\n                      remarks: rowSelected.Remarks,\n                      Code: rowSelected.Code,\n                      Title: rowSelected.Title,\n                      TC: rowSelected.TC,\n                      FAO_ID: rowSelected.Account_No,\n                      FAO_Name: rowSelected.Name,\n                      option: rowSelected.VATType,\n                      invoice: rowSelected.invoiceNo,\n                    };\n                    setNewStateValue(creditDispatch, updateData);\n                  } else {\n                    Object.entries(initialStateCredit).forEach(\n                      ([field, value]) => {\n                        creditDispatch({\n                          type: \"UPDATE_FIELD\",\n                          field,\n                          value,\n                        });\n                      }\n                    );\n                  }\n                }}\n                onKeyDown={(row, key) => {\n                  if (key === \"Delete\" || key === \"Backspace\") {\n                    const rowSelected = row[0];\n                    Swal.fire({\n                      title: \"Are you sure?\",\n                      text: `You won't to delete this?`,\n                      icon: \"warning\",\n                      showCancelButton: true,\n                      confirmButtonColor: \"#3085d6\",\n                      cancelButtonColor: \"#d33\",\n                      confirmButtonText: \"Yes, delete it!\",\n                    }).then((result) => {\n                      if (result.isConfirmed) {\n                        return setCredit((d) => {\n                          d = d.filter((item: any) => {\n                            return item.temp_id !== rowSelected.temp_id;\n                          });\n                          return d;\n                        });\n                      }\n                    });\n                  }\n                }}\n                inputsearchselector=\".manok\"\n              />\n              <div style={{ width: \"100%\", marginTop: \"10px\" }}>\n                <CreditFooterComponent />\n              </div>\n              {/* <div\n                style={{\n                  marginTop: \"10px\",\n                  width: \"100%\",\n                  position: \"relative\",\n                }}\n              >\n                <Box\n                  style={{\n                    height: \"410px\",\n                    width: \"100%\",\n                    overflowX: \"scroll\",\n                    position: \"absolute\",\n                  }}\n                >\n                  <Table\n                    ref={tableCredit}\n                    isLoading={loadingAddNew || loadingCollectionDataSearch}\n                    columns={creditColumn}\n                    rows={credit}\n                    table_id={\"temp_id\"}\n                    isSingleSelection={true}\n                    isRowFreeze={false}\n                    dataSelection={(selection, data, code) => {\n                      const rowSelected = data.filter(\n                        (item: any) => item.temp_id === selection[0]\n                      )[0];\n                      if (\n                        rowSelected === undefined ||\n                        rowSelected.length <= 0\n                      ) {\n                        Object.entries(initialStateCredit).forEach(\n                          ([field, value]) => {\n                            creditDispatch({\n                              type: \"UPDATE_FIELD\",\n                              field,\n                              value,\n                            });\n                          }\n                        );\n                        return;\n                      }\n                      const updateData = {\n                        creditMode: \"edit\",\n                        creditId: rowSelected.temp_id,\n                        transaction: rowSelected.transaction,\n                        amount: rowSelected.amount,\n                        remarks: rowSelected.Remarks,\n                        Code: rowSelected.Code,\n                        Title: rowSelected.Title,\n                        TC: rowSelected.TC,\n                        FAO_ID: rowSelected.Account_No,\n                        FAO_Name: rowSelected.Name,\n                        option: rowSelected.VATType,\n                        invoice: rowSelected.invoiceNo,\n                      };\n                      setNewStateValue(creditDispatch, updateData);\n\n                      if (code === \"Delete\" || code === \"Backspace\") {\n                        Swal.fire({\n                          title: \"Are you sure?\",\n                          text: `You won't to delete this?`,\n                          icon: \"warning\",\n                          showCancelButton: true,\n                          confirmButtonColor: \"#3085d6\",\n                          cancelButtonColor: \"#d33\",\n                          confirmButtonText: \"Yes, delete it!\",\n                        }).then((result) => {\n                          if (result.isConfirmed) {\n                            return setCredit((d) => {\n                              d = d.filter((item: any) => {\n                                return item.temp_id !== rowSelected.temp_id;\n                              });\n                              return d;\n                            });\n                          }\n                        });\n                      }\n                    }}\n                    footerChildren={() => {\n                      return <CreditFooterComponent />;\n                    }}\n                    footerPaginationPosition={\"left-right\"}\n                    showFooterSelectedCount={false}\n                  />\n                </Box>\n              </div> */}\n            </fieldset>\n          </div>\n        </div>\n        {ModalClientIDs}\n        {ModalSearchCollection}\n        {ModalSearchBanks}\n        {ModalSearchCheckList}\n        <Modal\n          open={openPdcInputModal}\n          onClose={() => {\n            setOpenPdcInputModal(false);\n            tableDebit.current?.resetTableSelected();\n          }}\n          aria-labelledby=\"modal-modal-title\"\n          aria-describedby=\"modal-modal-description\"\n        >\n          <Box\n            sx={{\n              position: \"absolute\" as \"absolute\",\n              top: \"50%\",\n              left: \"50%\",\n              transform: \"translate(-50%, -50%)\",\n              width: 700,\n              bgcolor: \"background.paper\",\n              p: 4,\n            }}\n          >\n            <Typography id=\"modal-modal-title\" variant=\"h6\" component=\"h2\">\n              Check Detail\n            </Typography>\n            <div\n              style={{\n                display: \"flex\",\n                columnGap: \"10px\",\n              }}\n            >\n              <div\n                style={{\n                  display: \"flex\",\n                  flexDirection: \"column\",\n                  gap: \"10px\",\n                }}\n              >\n                <TextField\n                  required\n                  variant=\"outlined\"\n                  size=\"small\"\n                  label=\"Check No.\"\n                  name=\"Check_No\"\n                  value={modalState.Check_No}\n                  onChange={handleModalInputChange}\n                  disabled={!addNew || modalState.CheckIdx !== \"\"}\n                  onKeyDown={(e: any) => {\n                    if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n                      const timeout = setTimeout(() => {\n                        checkModalSaveButton.current?.click();\n                        clearTimeout(timeout);\n                      }, 100);\n                    }\n                  }}\n                  InputProps={{\n                    style: { height: \"27px\", fontSize: \"14px\" },\n                    inputRef: checkNoRef,\n                  }}\n                  sx={{\n                    height: \"27px\",\n                    \".MuiFormLabel-root\": { fontSize: \"14px\" },\n                    \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n                  }}\n                />\n                {isLoadingModalSearchbanks ? (\n                  <LoadingButton loading={isLoadingModalSearchbanks} />\n                ) : (\n                  <FormControl\n                    sx={{\n                      width: \"100%\",\n                      \".MuiFormLabel-root\": {\n                        fontSize: \"14px\",\n                        background: \"white\",\n                        zIndex: 99,\n                        padding: \"0 3px\",\n                      },\n                      \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n                    }}\n                    fullWidth\n                    variant=\"outlined\"\n                    size=\"small\"\n                    disabled={!addNew}\n                  >\n                    <InputLabel htmlFor=\"label-input-id\">Bank</InputLabel>\n                    <OutlinedInput\n                      sx={{\n                        height: \"27px\",\n                        fontSize: \"14px\",\n                      }}\n                      inputRef={checkBankRef}\n                      disabled={!addNew}\n                      fullWidth\n                      label=\"Bank\"\n                      name=\"BankName\"\n                      value={modalState.BankName}\n                      onChange={handleModalInputChange}\n                      onKeyDown={(e) => {\n                        if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n                          return openModalSearchBanks(modalState.BankName);\n                        }\n                      }}\n                      id=\"label-input-id\"\n                      endAdornment={\n                        <InputAdornment position=\"end\">\n                          <IconButton\n                            disabled={!addNew}\n                            aria-label=\"search-client\"\n                            color=\"secondary\"\n                            edge=\"end\"\n                            onClick={() =>\n                              openModalSearchBanks(modalState.BankName)\n                            }\n                          >\n                            <PolicyIcon />\n                          </IconButton>\n                        </InputAdornment>\n                      }\n                    />\n                  </FormControl>\n                )}\n                <TextField\n                  required\n                  variant=\"outlined\"\n                  size=\"small\"\n                  label=\"Branch\"\n                  name=\"Branch\"\n                  value={modalState.Branch}\n                  onChange={handleModalInputChange}\n                  disabled={!addNew}\n                  onKeyDown={(e: any) => {\n                    if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n                      const timeout = setTimeout(() => {\n                        checkModalSaveButton.current?.click();\n                        clearTimeout(timeout);\n                      }, 100);\n                    }\n                  }}\n                  InputProps={{\n                    style: { height: \"27px\", fontSize: \"14px\" },\n                    inputRef: checkBranchRef,\n                  }}\n                  sx={{\n                    height: \"27px\",\n                    \".MuiFormLabel-root\": { fontSize: \"14px\" },\n                    \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n                  }}\n                />\n                <TextField\n                  required\n                  variant=\"outlined\"\n                  size=\"small\"\n                  label=\"Remarks\"\n                  name=\"Check_Remarks\"\n                  value={modalState.Check_Remarks}\n                  onChange={handleModalInputChange}\n                  disabled={!addNew}\n                  rows={4}\n                  multiline\n                  onKeyDown={(e: any) => {\n                    if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n                      const timeout = setTimeout(() => {\n                        checkModalSaveButton.current?.click();\n                        clearTimeout(timeout);\n                      }, 100);\n                    }\n                  }}\n                  InputProps={{\n                    style: { height: \"auto\", fontSize: \"14px\" },\n                  }}\n                  sx={{\n                    flex: 1,\n                    height: \"27px\",\n                    \".MuiFormLabel-root\": { fontSize: \"14px\" },\n                    \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n                  }}\n                />\n              </div>\n              <div\n                style={{\n                  display: \"flex\",\n                  gap: \"10px\",\n                  flexDirection: \"column\",\n                }}\n              >\n                <CustomDatePicker\n                  disabled={!addNew}\n                  label=\"Check Dated\"\n                  onChange={(value: any) => {\n                    modalDispatch({\n                      type: \"UPDATE_FIELD\",\n                      field: \"Check_Date\",\n                      value: value,\n                    });\n                  }}\n                  onKeyDown={(e: any) => {\n                    if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n                      const timeout = setTimeout(() => {\n                        checkModalSaveButton.current?.click();\n                        clearTimeout(timeout);\n                      }, 100);\n                    }\n                  }}\n                  value={new Date(modalState.Check_Date)}\n                  inputRef={checkDateRef}\n                  textField={{\n                    InputLabelProps: {\n                      style: {\n                        fontSize: \"14px\",\n                      },\n                    },\n                    InputProps: {\n                      style: { height: \"27px\", fontSize: \"14px\" },\n                    },\n                  }}\n                />\n                <TextField\n                  required\n                  variant=\"outlined\"\n                  size=\"small\"\n                  label=\"Amount\"\n                  name=\"Check_Amnt\"\n                  value={modalState.Check_Amnt}\n                  onChange={handleModalInputChange}\n                  onKeyDown={(e) => {\n                    if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n                      const timeout = setTimeout(() => {\n                        checkModalSaveButton.current?.click();\n                        clearTimeout(timeout);\n                      }, 100);\n                    }\n                  }}\n                  disabled={!addNew}\n                  placeholder=\"0.00\"\n                  InputProps={{\n                    style: { height: \"27px\", fontSize: \"14px\" },\n                    inputComponent: NumericFormatCustom as any,\n                    inputRef: checkAmountRef,\n                  }}\n                  sx={{\n                    flex: 1,\n                    height: \"27px\",\n                    \".MuiFormLabel-root\": { fontSize: \"14px\" },\n                    \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n                  }}\n                  onBlur={() => {\n                    modalDispatch({\n                      type: \"UPDATE_FIELD\",\n                      field: \"Check_Amnt\",\n                      value: parseFloat(\n                        modalState.Check_Amnt.replace(/,/g, \"\")\n                      ).toFixed(2),\n                    });\n                  }}\n                />\n              </div>\n            </div>\n            <div\n              style={{\n                display: \"flex\",\n                justifyContent: \"flex-end\",\n                alignItems: \"flex-end\",\n                gap: \"20px\",\n              }}\n            >\n              <Button\n                ref={checkModalSaveButton}\n                action={checkModalSaveActionButtonRef}\n                color=\"success\"\n                variant=\"contained\"\n                autoFocus={modalState.CheckIdx !== \"\"}\n                onClick={() => {\n                  if (modalState.Check_No === \"\") {\n                    setOpenPdcInputModal(false);\n                    return CustomSwalAlertWarning(\n                      \"Please provide check!\",\n                      (d) => {\n                        flushSync(() => {\n                          setOpenPdcInputModal(true);\n                        });\n                        checkNoRef.current?.focus();\n                      }\n                    );\n                  }\n                  if (\n                    parseFloat(modalState.Check_Amnt.replace(/,/g, \"\")) <= 0 ||\n                    isNaN(parseFloat(modalState.Check_Amnt.replace(/,/g, \"\")))\n                  ) {\n                    setOpenPdcInputModal(false);\n                    return CustomSwalAlertWarning(\n                      \"Please provide check amount!\",\n                      (d) => {\n                        flushSync(() => {\n                          setOpenPdcInputModal(true);\n                        });\n                        checkAmountRef.current?.focus();\n                      }\n                    );\n                  }\n                  if (modalState.BankName === \"\") {\n                    setOpenPdcInputModal(false);\n                    return CustomSwalAlertWarning(\n                      \"Please provide bank!\",\n                      (d) => {\n                        flushSync(() => {\n                          setOpenPdcInputModal(true);\n                        });\n                        checkBankRef.current?.focus();\n                      }\n                    );\n                  }\n                  if (modalState.Branch === \"\") {\n                    setOpenPdcInputModal(false);\n                    return CustomSwalAlertWarning(\n                      \"Please provide branch!\",\n                      (d) => {\n                        flushSync(() => {\n                          setOpenPdcInputModal(true);\n                        });\n                        checkBranchRef.current?.focus();\n                      }\n                    );\n                  }\n                  if (modalState.BankName.length >= 200) {\n                    setOpenPdcInputModal(false);\n                    return CustomSwalAlertWarning(\n                      \"Bank Name is too long!\",\n                      (d) => {\n                        flushSync(() => {\n                          setOpenPdcInputModal(true);\n                        });\n                        checkBankRef.current?.focus();\n                      }\n                    );\n                  }\n                  if (modalState.Branch.length >= 200) {\n                    setOpenPdcInputModal(false);\n                    return CustomSwalAlertWarning(\n                      \"Branch is too long!\",\n                      (d) => {\n                        flushSync(() => {\n                          setOpenPdcInputModal(true);\n                        });\n                        checkBranchRef.current?.focus();\n                      }\n                    );\n                  }\n                  if (modalState.Check_No.length >= 200) {\n                    setOpenPdcInputModal(false);\n                    return CustomSwalAlertWarning(\n                      \"Check No is too long!\",\n                      (d) => {\n                        flushSync(() => {\n                          setOpenPdcInputModal(true);\n                        });\n                        checkBranchRef.current?.focus();\n                      }\n                    );\n                  }\n                  if (modalState.Check_Amnt.length >= 200) {\n                    setOpenPdcInputModal(false);\n                    return CustomSwalAlertWarning(\n                      \"Check Ammount is too long!\",\n                      (d) => {\n                        flushSync(() => {\n                          setOpenPdcInputModal(true);\n                        });\n                        checkBranchRef.current?.focus();\n                      }\n                    );\n                  }\n\n                  modalState.Check_Amnt = parseFloat(\n                    modalState.Check_Amnt.replace(/,/g, \"\")\n                  ).toLocaleString(\"en-US\", {\n                    minimumFractionDigits: 2,\n                    maximumFractionDigits: 2,\n                  });\n\n                  function addPDCCheck() {\n                    let temp_id = \"\";\n                    myAxios\n                      .post(\n                        `/task/accounting/get-drcode-drtitle-from-collection`,\n                        { code: debitState.payamentType },\n                        {\n                          headers: {\n                            \"Content-Type\": \"application/json\",\n                            Authorization: `Bearer ${user?.accessToken}`,\n                          },\n                        }\n                      )\n                      .then((res) => {\n                        const { Acct_Code, Acct_Title } = res?.data.data[0];\n                        setDebit((d: any) => {\n                          temp_id = generateID(\n                            d.length > 0\n                              ? (d[d.length - 1] as any).temp_id\n                              : \"0\"\n                          );\n\n                          if (modalState.CheckMode === \"edit\") {\n                            d = d.filter(\n                              (itms: any) =>\n                                itms.temp_id !== modalState.CheckIdx.toString()\n                            );\n                            temp_id = modalState.CheckIdx.toString();\n                          }\n\n                          const data = {\n                            Payment: \"Check\",\n                            Amount: modalState.Check_Amnt,\n                            Check_No: modalState.Check_No,\n                            Check_Date: new Date(\n                              modalState.Check_Date\n                            ).toLocaleDateString(\"en-US\", {\n                              month: \"2-digit\",\n                              day: \"2-digit\",\n                              year: \"numeric\",\n                            }),\n                            Bank_Branch: `${modalState.BankName} / ${modalState.Branch}`,\n                            Acct_Code,\n                            Acct_Title,\n                            Deposit_Slip: \"\",\n                            Cntr: \"\",\n                            Remarks: modalState.Check_Remarks,\n                            TC: debitState.payamentType,\n                            temp_id: temp_id,\n                            Bank: modalState.BankCode,\n                            BankName: modalState.BankName,\n                            Check_Remarks: modalState.Check_Remarks,\n                            Branch: modalState.Branch,\n                          };\n                          d = [...d, data];\n                          d.sort((a: any, b: any) => {\n                            const idA = parseInt(a.temp_id, 10);\n                            const idB = parseInt(b.temp_id, 10);\n                            if (idA < idB) {\n                              return -1;\n                            }\n                            if (idA > idB) {\n                              return 1;\n                            }\n                            return 0;\n                          });\n\n                          return d;\n                        });\n                      });\n                  }\n                  if (modalState.CheckMode === \"edit\") {\n                    flushSync(() => {\n                      setOpenPdcInputModal(false);\n                    });\n                    return Swal.fire({\n                      title:\n                        \"Are you sure? You want to Update this \" +\n                        modalState.Check_No +\n                        \" Check No.\",\n                      text: \"You won't be able to revert this!\",\n                      icon: \"warning\",\n                      showCancelButton: true,\n                      confirmButtonColor: \"#3085d6\",\n                      cancelButtonColor: \"#d33\",\n                      confirmButtonText: \"Yes, update it!\",\n                      focusConfirm: true,\n                    }).then((result) => {\n                      if (result.isConfirmed) {\n                        addPDCCheck();\n                        Swal.fire({\n                          text: \"Update Successfully\",\n                          icon: \"success\",\n                          showCancelButton: false,\n                          timer: 1500,\n                          didClose() {\n                            flushSync(() => {\n                              setOpenPdcInputModal(true);\n                            });\n                            checkModalSaveActionButtonRef.current?.focusVisible();\n                            tableDebit.current?.resetTableSelected();\n                          },\n                        });\n                      }\n                    });\n                  } else {\n                    if (\n                      debit.filter(\n                        (item: any) => item.Check_No === modalState.Check_No\n                      ).length > 0\n                    ) {\n                      flushSync(() => {\n                        setOpenPdcInputModal(false);\n                      });\n                      return Swal.fire({\n                        text: `${modalState.Check_No} is already Exist!`,\n                        icon: \"warning\",\n                        showCancelButton: false,\n                        timer: 1500,\n                      }).then(() => {\n                        setOpenPdcInputModal(false);\n                      });\n                    }\n\n                    addPDCCheck();\n                    modalDispatch({\n                      type: \"UPDATE_FIELD\",\n                      field: \"Check_No\",\n                      value: incrementCheckNo(modalState.Check_No),\n                    });\n                    flushSync(() => {\n                      setOpenPdcInputModal(false);\n                    });\n                    Swal.fire({\n                      text: \"Create New Check Successfully\",\n                      icon: \"success\",\n                      showCancelButton: false,\n                      timer: 1500,\n                      didClose() {\n                        flushSync(() => {\n                          setOpenPdcInputModal(false);\n                        });\n                        checkModalSaveActionButtonRef.current?.focusVisible();\n                        tableDebit.current?.resetTableSelected();\n                      },\n                    });\n                    return;\n                  }\n                }}\n              >\n                Save\n              </Button>\n              <Button\n                color=\"warning\"\n                variant=\"contained\"\n                onClick={() => {\n                  setOpenPdcInputModal(false);\n                  tableDebit.current?.resetTableSelected();\n                }}\n              >\n                Cancel\n              </Button>\n              {modalState.CheckIdx !== \"\" && (\n                <Button\n                  color=\"error\"\n                  variant=\"contained\"\n                  onClick={() => {\n                    flushSync(() => {\n                      setOpenPdcInputModal(false);\n                    });\n                    DebitDeleteRow({\n                      Check_No: modalState.Check_No,\n                      temp_id: modalState.CheckIdx,\n                    });\n                  }}\n                >\n                  Delete\n                </Button>\n              )}\n            </div>\n          </Box>\n        </Modal>\n      </CollectionContext.Provider>\n      {loadingAddNew || isLoadingModalSearchCollection && <div className=\"loading-component\"><div className=\"loader\"></div></div>}\n\n    </div>\n  );\n}\nexport function setNewStateValue(dispatch: any, obj: any) {\n  Object.entries(obj).forEach(([field, value]) => {\n    dispatch({ type: \"UPDATE_FIELD\", field, value });\n  });\n}\nfunction DebitFooterComponent() {\n  const { debit } = useContext(CollectionContext);\n  return (\n    <Box\n      sx={{\n        display: \"flex\",\n        justifyContent: \"flex-end\",\n      }}\n    >\n      <strong style={{ fontSize: \"14px\" }}>\n        Total:{\" \"}\n        {debit\n          .reduce(\n            (sum, obj) => sum + parseFloat(obj.Amount.replace(/,/g, \"\")),\n            0\n          )\n          .toLocaleString(\"en-US\", {\n            minimumFractionDigits: 2,\n            maximumFractionDigits: 2,\n          })}\n      </strong>\n    </Box>\n  );\n}\nfunction CreditFooterComponent() {\n  const { credit } = useContext(CollectionContext);\n  return (\n    <Box\n      sx={{\n        px: 2,\n        py: 1,\n        display: \"flex\",\n        justifyContent: \"flex-end\",\n      }}\n    >\n      <strong style={{ fontSize: \"14px\" }}>\n        Total:{\" \"}\n        {credit\n          .reduce(\n            (sum, obj) => sum + parseFloat(obj.amount.replace(/,/g, \"\")),\n            0\n          )\n          .toLocaleString(\"en-US\", {\n            minimumFractionDigits: 2,\n            maximumFractionDigits: 2,\n          })}\n      </strong>\n    </Box>\n  );\n}\nfunction generateID(prevID: string) {\n  const nextID = parseInt(prevID, 10) + 1;\n  return String(nextID).padStart(3, \"0\");\n}\n","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getFormGroupUtilityClass(slot) {\n  return generateUtilityClass('MuiFormGroup', slot);\n}\nconst formGroupClasses = generateUtilityClasses('MuiFormGroup', ['root', 'row', 'error']);\nexport default formGroupClasses;","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"row\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base/composeClasses';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport { getFormGroupUtilityClass } from './formGroupClasses';\nimport useFormControl from '../FormControl/useFormControl';\nimport formControlState from '../FormControl/formControlState';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    row,\n    error\n  } = ownerState;\n  const slots = {\n    root: ['root', row && 'row', error && 'error']\n  };\n  return composeClasses(slots, getFormGroupUtilityClass, classes);\n};\nconst FormGroupRoot = styled('div', {\n  name: 'MuiFormGroup',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.row && styles.row];\n  }\n})(({\n  ownerState\n}) => _extends({\n  display: 'flex',\n  flexDirection: 'column',\n  flexWrap: 'wrap'\n}, ownerState.row && {\n  flexDirection: 'row'\n}));\n\n/**\n * `FormGroup` wraps controls such as `Checkbox` and `Switch`.\n * It provides compact row layout.\n * For the `Radio`, you should be using the `RadioGroup` component instead of this one.\n */\nconst FormGroup = /*#__PURE__*/React.forwardRef(function FormGroup(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiFormGroup'\n  });\n  const {\n      className,\n      row = false\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const muiFormControl = useFormControl();\n  const fcs = formControlState({\n    props,\n    muiFormControl,\n    states: ['error']\n  });\n  const ownerState = _extends({}, props, {\n    row,\n    error: fcs.error\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(FormGroupRoot, _extends({\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? FormGroup.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * Display group of elements in a compact row.\n   * @default false\n   */\n  row: PropTypes.bool,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default FormGroup;"],"names":["React","undefined","_excluded","props","ref","actions","children","defaultValue","nameProp","name","onChange","valueProp","value","other","_objectWithoutPropertiesLoose","rootRef","_useControlled","useControlled","controlled","default","_useControlled2","_slicedToArray","setValueState","focus","input","current","querySelector","handleRef","useForkRef","useId","contextValue","event","target","_jsx","RadioGroupContext","Provider","FormGroup","_extends","role","createSvgIcon","d","RadioButtonIconRoot","styled","position","display","RadioButtonIconBackground","RadioButtonUncheckedIcon","transform","RadioButtonIconDot","RadioButtonCheckedIcon","_ref","theme","ownerState","left","transition","transitions","create","easing","easeIn","duration","shortest","checked","easeOut","_props$checked","_props$classes","classes","fontSize","_jsxs","className","root","background","dot","getRadioUtilityClass","slot","generateUtilityClass","generateUtilityClasses","RadioRoot","SwitchBase","shouldForwardProp","prop","rootShouldForwardProp","overridesResolver","styles","concat","capitalize","color","vars","palette","text","secondary","disableRipple","backgroundColor","action","activeChannel","mainChannel","hoverOpacity","alpha","active","main","_defineProperty","radioClasses","disabled","defaultCheckedIcon","RadioButtonIcon","defaultIcon","inProps","_defaultIcon$props$fo","_defaultCheckedIcon$p","a","b","useThemeProps","checkedProp","_props$checkedIcon","checkedIcon","_props$color","_props$icon","icon","onChangeProp","_props$size","size","slots","composeClasses","useUtilityClasses","radioGroup","createChainedFunction","String","type","clsx","_mutationFn","link","uniqueId","queryKey","responseDataKey","columns","_ref$onSelected","onSelected","_ref$onRemoveSelected","onRemoveSelected","_ref$onSuccess","onSuccess","searchRef","onCellKeyDown","onCloseFunction","isRowSelectable","_useContext","useContext","AuthContext","myAxios","user","_useState","useState","_useState2","openSearchCollection","setOpenSearchCollection","_useState3","_useState4","rows","setRows","_useMutation","useMutation","mutationKey","mutationFn","_x","_asyncToGenerator","_regeneratorRuntime","mark","_callee","variables","wrap","_context","prev","next","get","queryWithVariable","headers","Authorization","accessToken","abrupt","sent","stop","apply","arguments","res","response","data","isLoading","mutate","openModal","search","length","flushSync","queryExtraBySearch","then","success","alert","message","closeModal","_searchRef$current","ModalComponent","ModalWithTable","showModal","onCloseModal","_searchRef$current2","onClickCloseIcon","_searchRef$current3","searchOnChange","e","onSearchKeyEnter","height","onSelectionChange","rowSelectionModel","selectedIDs","Set","selectedRowData","filter","row","has","toString","id","CollectionContext","createContext","debit","credit","initialState","ORNo","PNo","IDNo","Date","Name","Remarks","creditUpdateMode","creditCheckIdx","creditCheckID","PDC_Status","Deposit_Slip","DateDeposit","OR_No","searchCheckedList","bank_transaction","isFao","mode","initialStateDeposit","cashID","cashMode","payamentType","amount","transaction_desc","debitHasSelected","initialStateCredit","creditMode","creditId","transaction","FAO_Name","FAO_ID","remarks","option","invoice","Code","Title","TC","modalInitialState","CheckIdx","BankName","BankCode","Branch","Check_Date","Check_No","Check_Amnt","Check_Remarks","CheckMode","reducer","state","_objectSpread","field","addCollectionQueryKey","queryMutationKeyCollectionDataSearch","debitColumn","headerName","flex","width","hide","creditColumn","queryKeyPaymentType","queryKeyNewORNumber","Collections","_queryFn","_queryFn2","_mutationFn2","_mutationFn3","_creditState$remarks","setCredit","setDebit","_useState5","_useState6","openPdcInputModal","setOpenPdcInputModal","_useUrlParams","useUrlParams","searchParams","setSearchParams","_useReducer","useReducer","_useReducer2","dispatch","_useReducer3","_useReducer4","debitState","debitDispatch","_useReducer5","_useReducer6","creditState","creditDispatch","_useReducer7","_useReducer8","modalState","modalDispatch","_useState7","_useState8","save","setSave","_useState9","_useState10","addNew","setAddNew","_useState11","_useState12","hasSelected","setHasSelected","cashButtonSave","useRef","checkModalSaveButton","checkModalSaveActionButtonRef","creditSaveButton","saveCollectionButtonRef","pdcSearchInput","collectionSearchInput","bankSearchInput","checkListSearchInput","checkNoRef","checkBankRef","checkBranchRef","checkAmountRef","checkDateRef","paymentTypeRef","amountRef","creditTransactionRef","creditAmountRef","creditFaoRef","creditInvoiceRef","pnClientORRef","queryClient","useQueryClient","tableDebit","tableCredit","_useQueryModalTable","useQueryModalTable","url","queryUrlName","_selectedRowData$0$Na","_selectedRowData$0$Na2","ID","closeCliendIDsModal","ModalClientIDs","openCliendIDsModal","isLoadingClientIdsModal","_useQueryModalTable2","mutateCollectionDataSearch","ModalSearchCollection","openModalSearchCollection","closeModalSearchCollection","isLoadingModalSearchCollection","_useQueryModalTable3","Bank","Bank_Code","closeModalSearchBanks","ModalSearchBanks","openModalSearchBanks","isLoadingModalSearchbanks","_useMutationModalTabl","useMutationModalTable","items","map","includes","post","code","_res$data","console","log","_res$data$data$","Acct_Code","Acct_Title","lastID","parseInt","temp_id","_toConsumableArray","Payment","Amount","Bank_Branch","Cntr","closeModalSearchCheckList","openModalSearchCheckList","params","ModalSearchCheckList","isLoadingModalSearchCheckList","mutateClientCheckedList","_useQuery","useQuery","queryFn","refetchOnWindowFocus","transactionDesc","paymentTypeLoading","_useQuery2","_callee2","_context2","_response$data","_response$data2","collectionID","NewORNoLoading","refetchNewOR","refetch","_callee3","_context3","dataCollection","collection","OR_Date","Date_OR","ClientID","ID_No","selectedSearchState","Short","isValidDate","dateString","date","isNaN","trim","i","Debit","push","toLocaleDateString","DRCode","DRTitle","SlipCode","DRRemarks","Purpose","Credit","CRCode","CRTitle","CRLoanID","CRLoanName","CRVatType","CRInvoiceNo","CRRemarks","Account_No","VATType","CRVATType","invoiceNo","setNewStateValue","loadingCollectionDataSearch","_useMutation2","_x2","_callee4","_context4","invalidateQueries","Swal","title","showConfirmButton","timer","loadingAddNew","_useMutation3","_x3","_callee5","_context5","data1","localStorage","removeItem","setItem","JSON","stringify","department","window","open","printOR","mutataPrint","isLoadingPrint","handleInputChange","_e$target","handleDebitInputChange","_e$target2","handleCreditInputChange","_e$target3","handleModalInputChange","_e$target4","CustomSwalAlertWarning","label","cb","showCancelButton","innerWidth","innerHeight","style","flexDirection","Box","sx","alignItems","columnGap","breakpoints","down","marginBottom","LoadingButton","loading","TextField","onKeyDown","preventDefault","InputProps","top","Button","variant","startIcon","AddIcon","onClick","set","wait","_paymentTypeRef$curre","_creditTransactionRef","reduce","sum","obj","parseFloat","replace","newState","codeCondfirmationAlert","isUpdate","userCodeConfirmation","saveCondfirmationAlert","isConfirm","SaveIcon","CircularProgress","green","marginTop","marginLeft","CloseIcon","confirmButtonColor","cancelButtonColor","confirmButtonText","result","isConfirmed","rowGap","gap","padding","FormControl","zIndex","required","InputLabel","htmlFor","OutlinedInput","readOnly","_saveCollectionButton","click","endAdornment","InputAdornment","IconButton","edge","RestartAltIcon","CustomDatePicker","textField","InputLabelProps","fullWidth","_saveCollectionButton2","inputRef","PersonSearchIcon","_saveCollectionButton3","overflow","boxSizing","border","borderRadius","marginRight","minWidth","Select","labelId","autoWidth","MenuItem","_checkNoRef$current","getLastCheck_No","newData","incrementCheckNo","placeholder","inputComponent","NumericFormatCustom","onBlur","toFixed","_cashButtonSave$curre","_amountRef$current","toLocaleString","minimumFractionDigits","maximumFractionDigits","_tableDebit$current2","_res$data$data$2","generateID","itms","sort","idA","idB","resetTableSelected","UpwardTable","column","dataReadOnly","selectedRow","rowSelected","_checkModalSaveAction","focusVisible","DebitSelectedChange","key","item","inputsearchselector","DebitFooterComponent","Autocomplete","freeSolo","options","v","onInput","renderInput","timeout","setTimeout","_creditSaveButton$cur","clearTimeout","_creditSaveButton$cur2","justifyContent","RadioGroup","margin","FormControlLabel","control","Radio","_creditSaveButton$cur3","Object","entries","forEach","_ref3","_ref4","_creditTransactionRef2","_creditTransactionRef3","_creditAmountRef$curr","_creditFaoRef$current","_creditInvoiceRef$cur","onSaveTransaction","creditData","inputTax","newD","creditDataVat","updateData","_ref5","_ref6","CreditFooterComponent","Modal","onClose","_tableDebit$current3","bgcolor","p","Typography","component","_checkModalSaveButton","PolicyIcon","_checkModalSaveButton2","multiline","_checkModalSaveButton3","_checkModalSaveButton4","_checkModalSaveButton5","autoFocus","_checkNoRef$current2","_checkAmountRef$curre","_checkBankRef$current","_checkBranchRef$curre","_checkBankRef$current2","_checkBranchRef$curre2","_checkBranchRef$curre3","_checkBranchRef$curre4","addPDCCheck","_res$data$data$3","month","day","year","focusConfirm","didClose","_checkModalSaveAction2","_tableDebit$current4","_checkModalSaveAction3","_tableDebit$current5","_tableDebit$current6","_tableDebit$current","_ref7","_ref8","px","py","prevID","nextID","padStart","getFormGroupUtilityClass","FormGroupRoot","flexWrap","_props$row","muiFormControl","useFormControl","fcs","formControlState","states","error"],"sourceRoot":""}