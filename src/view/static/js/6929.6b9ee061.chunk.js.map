{"version":3,"file":"static/js/6929.6b9ee061.chunk.js","mappings":"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","sources":["components/UpwardFields.tsx","feautures/Admin/Task/Accounting/Deposit.tsx","../node_modules/@mui/icons-material/Autorenew.js","../node_modules/@mui/icons-material/Search.js"],"sourcesContent":["import { HtmlHTMLAttributes, InputHTMLAttributes, useId, ReactNode, useState, LegacyRef, HTMLInputTypeAttribute, TextareaHTMLAttributes, CSSProperties, forwardRef, useImperativeHandle } from \"react\";\nimport \"../style/design.css\";\nimport { AnyMxRecord } from \"dns\";\n\n\ninterface TextInputProps {\n  input: InputHTMLAttributes<HTMLInputElement>;\n  label: HtmlHTMLAttributes<HTMLLabelElement>;\n  inputRef?: React.RefObject<HTMLInputElement>;\n  icon?: ReactNode; // New prop for the icon\n  iconPosition?: 'start' | 'end'; // New prop to choose icon position\n  onIconClick?: React.MouseEventHandler<HTMLDivElement> | undefined,\n  disableIcon?: boolean\n  containerStyle?: CSSProperties\n}\n\ninterface TextAreaPrps {\n  textarea: TextareaHTMLAttributes<HTMLTextAreaElement>\n  label: HtmlHTMLAttributes<HTMLLabelElement>;\n  _inputRef: LegacyRef<HTMLTextAreaElement>\n  icon?: ReactNode; // New prop for the icon\n  iconPosition?: 'start' | 'end'; // New prop to choose icon position\n  onIconClick?: React.MouseEventHandler<HTMLDivElement> | undefined,\n  disableIcon?: boolean\n  containerStyle?:CSSProperties\n}\n\ninterface TextFormatedInputProps extends TextInputProps {\n  onChange?: React.ChangeEventHandler<HTMLInputElement> | undefined\n  onBlur?: React.ChangeEventHandler<HTMLInputElement> | undefined\n}\nexport function TextFormatedInput({\n  input,\n  label,\n  inputRef,\n  icon,\n  iconPosition = 'end', // Default position is 'end'\n  disableIcon = false,\n  onIconClick = (e) => { },\n  onChange = (e) => { },\n  onBlur = (e) =>{},\n  containerStyle\n}: TextFormatedInputProps) {\n  // const [inputValue, setInputValue] = useState('');\n  const id = useId();\n\n\n  // Helper function to format numbers with commas\n  const formatNumber = (value: string) => {\n    if (!value) return value;\n\n    // Split the value into integer and decimal parts\n    const parts = value.split('.');\n\n    // Add commas to the integer part only\n    parts[0] = parts[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n\n    // Join the integer and decimal parts if decimal exists\n    return parts.join('.');\n  };\n\n  // Helper function to remove commas\n  const unformatNumber = (value: string) => {\n    return value.replace(/,/g, '');\n  };\n\n  // Function to ensure two decimal places\n  const ensureTwoDecimals = (value: string) => {\n    // If the value has no decimal part, append '.00'\n    if (!value.includes('.')) {\n      if (value === '') {\n        return '0.00';\n      } else {\n\n        return value + '.00';\n      }\n    }\n\n    // If the value has one decimal place, append '0'\n    const parts = value.split('.');\n    if (parts[1].length === 1) {\n      return value + '0';\n    }\n\n    // If it already has two decimal places, return as is\n    return value;\n  };\n\n  const handleChange = (e: any) => {\n    let value = e.target.value;\n\n    // Remove commas for processing\n    value = unformatNumber(value);\n\n    // Allow only numbers, commas, and one decimal point\n    const regex = /^-?\\d+(,\\d{3})*(\\.\\d*)?$/;\n\n    // Remove commas for processing\n    value = unformatNumber(value);\n\n    // Check if the value is valid\n    if (value === '' || regex.test(value)) {\n      // Set the formatted value back in the input field\n      //setInputValue(formatNumber(value));\n      e.target.value = formatNumber(value)\n\n    } else {\n      const numbers = value.match(/\\d+/g);\n      if (numbers) {\n        const newV = numbers.join('')\n        e.target.value = formatNumber(newV)\n      } else {\n        e.target.value = \"0\"\n      }\n    }\n  };\n\n  const handleBlur = (e: any) => {\n    let value = unformatNumber(e.target.value);\n\n    // Ensure the value has two decimal places\n    value = ensureTwoDecimals(value);\n\n    // Set the value with commas and .00 (if needed)\n    // setInputValue(formatNumber(value));\n    e.target.value = formatNumber(value)\n  };\n\n  return (\n    <div\n      style={{\n        display: 'flex',\n        alignItems: 'center',\n        position: 'relative',\n        ...containerStyle // Enable absolute positioning for icon\n      }}\n    >\n      <label {...label} htmlFor={id}>\n        {label.title}\n      </label>\n      {icon && iconPosition === 'start' && (\n        <div style={{ position: 'absolute', left: '8px', zIndex: 1 }}>\n          {icon}\n        </div>\n      )}\n      <input\n        ref={inputRef}\n        id={id}\n        {...input}\n        type=\"text\"\n        style={{\n          height: '100%',\n          textAlign: \"right\",\n          ...input.style,\n        }}\n        onChange={(e) => {\n          handleChange(e)\n          onChange(e)\n        }}\n        onBlur={(e) => {\n          handleBlur(e)\n          onBlur(e)\n        }}  // Add .00 on blur\n\n      />\n      {icon && iconPosition === 'end' && (\n        <div onClick={onIconClick}\n          style={{\n            position: 'absolute',\n            right: '2px',\n            top: \"50%\",\n            transform: \"translateY(-50%)\",\n            zIndex: 1,\n            cursor: disableIcon ? \"none\" : \"pointer\",\n            display: \"flex\",\n            alignItems: \"center\",\n            justifyContent: \"center\",\n            background: \"white\",\n            pointerEvents: disableIcon ? \"none\" : \"auto\"\n          }}>\n          {icon}\n        </div>\n\n      )\n      }\n    </div >\n  );\n}\n\n\nexport function TextInput({\n  input,\n  label,\n  inputRef,\n  icon,\n  iconPosition = 'end', // Default position is 'end'\n  disableIcon = false,\n  containerStyle,\n  onIconClick = (e) => { }\n}: TextInputProps) {\n  const id = useId();\n\n\n  return (\n    <div\n      style={{\n        display: 'flex',\n        alignItems: 'center',\n        position: 'relative',\n        ...containerStyle\n      }}\n    >\n      <label {...label} htmlFor={id}>\n        {label.title}\n      </label>\n      {icon && iconPosition === 'start' && (\n        <div style={{ position: 'absolute', left: '8px', zIndex: 1 }}>\n          {icon}\n        </div>\n      )}\n      <input\n        ref={inputRef}\n        id={id}\n        {...input}\n        style={{\n          height: '100%',\n          ...input.style,\n        }}\n      />\n      {icon && iconPosition === 'end' && (\n        <div onClick={onIconClick}\n          style={{\n            position: 'absolute',\n            right: '2px',\n            top: \"50%\",\n            transform: \"translateY(-50%)\",\n            zIndex: 1,\n            cursor: disableIcon ? \"none\" : \"pointer\",\n            display: \"flex\",\n            alignItems: \"center\",\n            justifyContent: \"center\",\n            background: \"white\",\n            pointerEvents: disableIcon ? \"none\" : \"auto\",\n          }}>\n          {icon}\n        </div>\n\n      )\n      }\n    </div >\n  );\n}\n\n\n\nexport function TextAreaInput({\n  textarea,\n  label,\n  _inputRef,\n  icon,\n  iconPosition = 'end', // Default position is 'end'\n  disableIcon = false,\n  onIconClick = (e) => { },\n  containerStyle\n}: TextAreaPrps) {\n  const id = useId();\n\n  return (\n    <div\n      style={{\n        display: 'flex',\n        alignItems: 'center',\n        position: 'relative', \n        ...containerStyle// Enable absolute positioning for icon\n      }}\n    >\n      <label {...label} htmlFor={id}>\n        {label.title}\n      </label>\n      {icon && iconPosition === 'start' && (\n        <div style={{ position: 'absolute', left: '8px', zIndex: 1 }}>\n          {icon}\n        </div>\n      )}\n      <textarea\n        ref={_inputRef}\n        id={id}\n        {...textarea}\n        style={{\n          height: '100%',\n          ...textarea.style,\n        }}\n\n      />\n      {icon && iconPosition === 'end' && (\n        <div onClick={onIconClick}\n          style={{\n            position: 'absolute',\n            right: '2px',\n            top: \"50%\",\n            transform: \"translateY(-50%)\",\n            zIndex: 1,\n            cursor: disableIcon ? \"none\" : \"pointer\",\n            display: \"flex\",\n            alignItems: \"center\",\n            justifyContent: \"center\",\n            background: \"white\",\n            pointerEvents: disableIcon ? \"none\" : \"auto\"\n          }}>\n          {icon}\n        </div>\n\n      )\n      }\n    </div >\n  );\n}\n\nexport const SelectInput = forwardRef(({\n  select,\n  label,\n  selectRef,\n  datasource = [],\n  values = \"\",\n  display = \"\",\n  containerStyle\n}: {\n  selectRef?: React.RefObject<HTMLSelectElement>;\n  labelRef?: React.RefObject<HTMLLabelElement>;\n  select: InputHTMLAttributes<HTMLSelectElement>;\n  label: HtmlHTMLAttributes<HTMLLabelElement>;\n  datasource: Array<any>;\n  values: string;\n  display: string;\n  containerStyle?: React.CSSProperties | undefined\n}, ref: any) => {\n\n\n  const [_datasource, _setDataSource] = useState(datasource)\n  const id = useId();\n\n  useImperativeHandle(ref, () => ({\n    setDataSource: (_dataSource: any) => {\n      _setDataSource(_dataSource)\n    },\n    getDataSource: () => {\n      return _datasource\n    }\n  }))\n\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        height: \"18px\",\n        alignItems: \"center\",\n        ...containerStyle\n      }}\n    >\n      <label {...label} htmlFor={id}>\n        {label.title}\n      </label>\n      <select\n        {...select}\n        ref={selectRef}\n        className={`select ${select.className}`}\n        style={{\n          height: \"18px\",\n          ...select.style,\n        }}\n      >\n        {_datasource.map((itm, idx) => {\n          return (\n            <option key={idx} value={itm[values]}>\n              {itm[display]}\n            </option>\n          );\n        })}\n      </select>\n    </div>\n  );\n})\n\nexport function ButtonField({\n  buttonRetRef,\n  button,\n  tooltipText = \"\",\n  children,\n  disabled = false,\n}: {\n  buttonRetRef?: React.RefObject<HTMLButtonElement>;\n  button: HtmlHTMLAttributes<HTMLButtonElement>;\n  tooltipText: string;\n  children: React.ReactNode;\n  disabled?: boolean;\n}) {\n  return (\n    <div className=\"tooltip\">\n      <button\n        disabled={disabled}\n        {...button}\n        ref={buttonRetRef}\n        style={{ ...button.style, background: !disabled ? \"transparent\" : \"#f1f1f1\" }}\n        className=\"tooltip-button\"\n      >\n        {children}\n      </button>\n      {!disabled && <span className=\"tooltip-text\">{tooltipText}</span>}\n    </div>\n  );\n}\n","import {\n  useState,\n  createContext,\n  useContext,\n  CSSProperties,\n  useEffect,\n  useRef,\n  forwardRef,\n  Fragment,\n  useImperativeHandle,\n} from \"react\";\nimport { useMutation, useQuery } from \"react-query\";\nimport { AuthContext } from \"../../../../components/AuthContext\";\nimport {\n  Button,\n} from \"@mui/material\";\nimport useQueryModalTable from \"../../../../hooks/useQueryModalTable\";\nimport LoadingButton from \"@mui/lab/LoadingButton\";\nimport AddIcon from \"@mui/icons-material/Add\";\nimport SaveIcon from \"@mui/icons-material/Save\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport Swal from \"sweetalert2\";\nimport { wait } from \"@testing-library/user-event/dist/utils\";\nimport {\n  codeCondfirmationAlert,\n  saveCondfirmationAlert,\n} from \"../../../../lib/confirmationAlert\";\nimport { TextInput } from \"../../../../components/UpwardFields\";\nimport { format } from 'date-fns'\nimport AutorenewIcon from '@mui/icons-material/Autorenew';\nimport AccountBalanceIcon from '@mui/icons-material/AccountBalance';\nimport '../../../../style/laoding.css'\nimport PageHelmet from \"../../../../components/Helmet\";\nimport SearchIcon from '@mui/icons-material/Search';\n\n\nconst defaultCashBreakDown = [\n  { value1: \"1,000.00\", value2: \"\", value3: \"0.00\" },\n  { value1: \"500.00\", value2: \"\", value3: \"0.00\" },\n  { value1: \"200.00\", value2: \"\", value3: \"0.00\" },\n  { value1: \"100.00\", value2: \"\", value3: \"0.00\" },\n  { value1: \"50.00\", value2: \"\", value3: \"0.00\" },\n  { value1: \"20.00\", value2: \"\", value3: \"0.00\" },\n  { value1: \"10.00\", value2: \"\", value3: \"0.00\" },\n  { value1: \"5.00\", value2: \"\", value3: \"0.00\" },\n  { value1: \"2.00\", value2: \"\", value3: \"0.00\" },\n  { value1: \"1.00\", value2: \"\", value3: \"0.00\" },\n  { value1: \".50\", value2: \"\", value3: \"0.00\" },\n  { value1: \".25\", value2: \"\", value3: \"0.00\" },\n  { value1: \".10\", value2: \"\", value3: \"0.00\" },\n  { value1: \".05\", value2: \"\", value3: \"0.00\" },\n  { value1: \".01\", value2: \"\", value3: \"0.00\" },\n];\nconst buttons = [\n  {\n    title: \"Cash Collection\",\n    index: 0,\n  },\n  {\n    title: \"Check Collection\",\n    index: 1,\n  },\n  {\n    title: \"Selected Collection\",\n    index: 2,\n  },\n  {\n    title: \"Collection for Deposit\",\n    index: 3,\n  },\n];\nconst cashColumns = [\n  {\n    key: \"OR_No\",\n    label: \"OR No.\",\n    width: 270,\n  },\n  {\n    key: \"OR_Date\",\n    label: \"OR Date\",\n    width: 270,\n  },\n  {\n    key: \"Amount\",\n    label: \"Amount\",\n    width: 200,\n    type: \"number\",\n    cellClassName: \"super-app-theme--cell\",\n  },\n  {\n    key: \"Client_Name\",\n    label: \"Client Name\",\n    flex: 1,\n    width: 540,\n  },\n  {\n    key: \"DRCode\",\n    label: \"DRCode\",\n    hide: true,\n  },\n  {\n    key: \"ID_No\",\n    label: \"ID_No\",\n    hide: true,\n  },\n  {\n    key: \"Short\",\n    label: \"Short\",\n    hide: true,\n  },\n  {\n    key: \"Temp_OR\",\n    label: \"Temp_OR\",\n    hide: true,\n  },\n];\n\nexport const reducer = (state: any, action: any) => {\n  switch (action.type) {\n    case \"UPDATE_FIELD\":\n      return {\n        ...state,\n        [action.field]: action.value,\n      };\n    default:\n      return state;\n  }\n};\n\nconst DepositContext = createContext<any>({\n  cashCollection: [],\n  setCashCollection: () => { },\n  checkCollection: [],\n  setCheckCollection: () => { },\n  selectedCollection: [],\n  setSelectedCollection: () => { },\n  collectionForDeposit: [],\n  setCollectionForDeposit: () => { },\n  tableRows: [],\n  updateTableRowsInput: () => { },\n  LoadingCashTable: false,\n  LoadingCheckTable: false,\n  setTotal: () => { },\n  total: \"0.00\",\n  TotalCashForDeposit: \"0.00\",\n  loadingSearchByDepositSlip: false,\n});\n\nexport default function Deposit() {\n  const cashTable = useRef<any>(null)\n  const checkTable = useRef<any>(null)\n  const selectedTable = useRef<any>(null)\n  const collectionCheckTable = useRef<any>(null)\n\n  const depositSearch = useRef<HTMLInputElement>(null)\n  const inputSearchRef = useRef<HTMLInputElement>(null)\n  const refSlipCode = useRef<HTMLInputElement>(null)\n  const refDateDepo = useRef<HTMLInputElement>(null)\n  const refBankAcctCode = useRef<HTMLInputElement>(null)\n  const refBankAcctName = useRef<HTMLInputElement>(null)\n\n  const bankDepositSearch = useRef<HTMLInputElement>(null)\n  const _refTempSlipCode = useRef<string>(\"\")\n\n  const refBankAcctCodeTag = useRef('')\n  const refBankAcctNameTag = useRef('')\n  const refAcctID = useRef('')\n  const refAcctName = useRef('')\n  const refClassification = useRef('')\n  const refSubAccount = useRef('')\n  const refShortName = useRef('')\n\n  const { myAxios, user } = useContext(AuthContext);\n  const { currentStepIndex, goTo } = useMultipleComponent([0, 1, 2, 3,]);\n  const [cashCollection, setCashCollection] = useState<any>([])\n  const [checkCollection, setCheckCollection] = useState<any>([])\n  const [selectedRows, setSelectedRows] = useState<any>([])\n  const [collectionForDeposit, setCollectionForDeposit] = useState<any>([]);\n  const [tableRowsInputValue, setTableRowsInputValue] =\n    useState<Array<{ value1: string; value2: string; value3: string }>>(\n      defaultCashBreakDown\n    );\n\n  const [selectedRowsCashIndex, setSelectedRowsCashIndex] = useState<any>([])\n  const [selectedRowsCheckedIndex, setSelectedRowsCheckedIndex] = useState<any>([])\n\n  const [depositMode, setDepositMode] = useState('')\n  const [total, setTotal] = useState(\"0.00\");\n\n  const disabledFields = depositMode === \"\";\n\n  const TotalCashForDeposit = selectedRows\n    .reduce((accumulator: number, currentValue: any) => {\n      const dd =\n        currentValue.Check_No || currentValue.Check_No !== \"\"\n          ? 0\n          : parseFloat(currentValue.Amount.replace(/,/g, \"\"));\n      return accumulator + dd;\n    }, 0.0)\n    .toLocaleString(\"en-US\", {\n      minimumFractionDigits: 2,\n      maximumFractionDigits: 2,\n    });\n  const updateTableRowsInput = (\n    fields: { value1: string; value2: string; value3: string },\n    idx: number\n  ) => {\n    setTableRowsInputValue((d) => {\n      return d.map((item, index) => {\n        if (idx === index) {\n          item = { ...item, ...fields };\n        }\n        return item;\n      });\n    });\n  };\n  const { isLoading: LoadingDepositSlipCode, refetch: RefetchDepositSlipCode } =\n    useQuery({\n      queryKey: \"deposit-slipcode\",\n      queryFn: async () =>\n        await myAxios.get(`/task/accounting/get-deposit-slipcode`, {\n          headers: {\n            Authorization: `Bearer ${user?.accessToken}`,\n          },\n        }),\n      refetchOnWindowFocus: false,\n      onSuccess: (data) => {\n        const response = data as any;\n        wait(100).then(() => {\n          if (refSlipCode.current) {\n            refSlipCode.current.value = response.data.slipcode[0].collectionID\n            _refTempSlipCode.current = response.data.slipcode[0].collectionID\n          }\n\n        })\n      },\n    });\n  const {\n    ModalComponent: ModalDepostitBanks,\n    openModal: openDepositBanks,\n    isLoading: isLoadingDepostitBanks,\n    closeModal: closeDepositBanks,\n  } = useQueryModalTable({\n    link: {\n      url: \"/task/accounting/getBanks\",\n      queryUrlName: \"bankDepositSearch\",\n    },\n    columns: [\n      { field: \"Account_Type\", headerName: \"Account_Type\", width: 200 },\n      { field: \"Account_No\", headerName: \"Account_No\", width: 170 },\n      {\n        field: \"Account_Name\",\n        headerName: \"Account_Name\",\n        flex: 1,\n      },\n    ],\n    queryKey: \"bank-deposit\",\n    uniqueId: \"Account_No\",\n    responseDataKey: \"banks\",\n    onSelected: (selectedRowData) => {\n      if (selectedRowData.length > 0) {\n        if (refBankAcctCode.current)\n          refBankAcctCode.current.value = selectedRowData[0].Account_No\n        if (refBankAcctName.current)\n          refBankAcctName.current.value = selectedRowData[0].Account_Name\n\n        refBankAcctCodeTag.current = selectedRowData[0]?.IDNo\n        refBankAcctNameTag.current = selectedRowData[0]?.Desc\n        refAcctID.current = selectedRowData[0]?.Account_ID\n        refAcctName.current = selectedRowData[0]?.Short\n        refShortName.current = selectedRowData[0]?.client_name\n        refClassification.current = selectedRowData[0]?.Sub_Acct\n        refSubAccount.current = selectedRowData[0]?.ShortName\n\n        closeDepositBanks();\n      }\n    },\n    searchRef: bankDepositSearch,\n  });\n  const { mutate: addDepositMutation, isLoading: addDepositMutationLoading } =\n    useMutation({\n      mutationKey: \"add-deposit\",\n      mutationFn: async (variables: any) => {\n        return await myAxios.post(\"/task/accounting/add-deposit\", variables, {\n          headers: {\n            Authorization: `Bearer ${user?.accessToken}`,\n          },\n        });\n      },\n      onSuccess: (res) => {\n        const resposnse = res as any;\n        if (resposnse.data.success) {\n          wait(100).then(() => {\n            resetTables()\n            resetRefs()\n            setTableRowsInputValue(defaultCashBreakDown);\n            setSelectedRows([]);\n            setCollectionForDeposit([]);\n            setSelectedRowsCashIndex([])\n            setSelectedRowsCheckedIndex([])\n\n            refetchCashCollection()\n            refetchCheckCollection()\n            RefetchDepositSlipCode();\n            setDepositMode('')\n            goTo(0)\n\n          })\n\n\n          return Swal.fire({\n            position: \"center\",\n            icon: \"success\",\n            title: resposnse.data.message,\n            timer: 1500,\n          })\n        }\n        return Swal.fire({\n          position: \"center\",\n          icon: \"warning\",\n          title: resposnse.data.message,\n          timer: 1500,\n        });\n      },\n    });\n  const {\n    mutate: updateDepositMutation,\n    isLoading: updateDepositMutationLoading,\n  } = useMutation({\n    mutationKey: \"update-deposit\",\n    mutationFn: async (variables: any) => {\n      return await myAxios.post(\"/task/accounting/update-deposit\", variables, {\n        headers: {\n          Authorization: `Bearer ${user?.accessToken}`,\n        },\n      });\n    },\n    onSuccess: (res) => {\n      const resposnse = res as any;\n      if (resposnse.data.success) {\n        wait(100).then(() => {\n          resetTables()\n          resetRefs()\n          setTableRowsInputValue(defaultCashBreakDown);\n          setSelectedRows([]);\n          setCollectionForDeposit([]);\n          setSelectedRowsCashIndex([])\n          setSelectedRowsCheckedIndex([])\n\n          refetchCashCollection()\n          refetchCheckCollection()\n          RefetchDepositSlipCode();\n          setDepositMode('')\n          goTo(0)\n\n\n        })\n        return Swal.fire({\n          position: \"center\",\n          icon: \"success\",\n          title: resposnse.data.message,\n          timer: 1500,\n        });\n      }\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: resposnse.data.message,\n        timer: 1500,\n      });\n    },\n  });\n  const { mutate: searchByDepositSlip, isLoading: loadingSearchByDepositSlip } =\n    useMutation({\n      mutationKey: \"search-deposit-cash-check\",\n      mutationFn: async (variables: any) => {\n        return await myAxios.post(\n          \"/task/accounting/search-cash-check\",\n          variables,\n          {\n            headers: {\n              Authorization: `Bearer ${user?.accessToken}`,\n            },\n          }\n        );\n      },\n      onSuccess: (res) => {\n        const obj = res.data.data.obj\n        const cash = res.data.data.cash\n        const check = res.data.data.checks\n        const cash_breakdown = res.data.data.cash_breakdown\n\n        setCashCollection([])\n        setCheckCollection([])\n        setSelectedRows([])\n        setCollectionForDeposit([])\n        setTableRowsInputValue([])\n        wait(100).then(() => {\n          collectionCheckTable.current.resetTable()\n          selectedTable.current.resetTable()\n          cashTable.current.resetTable()\n          checkTable.current.resetTable()\n\n          if (refBankAcctCode.current)\n            refBankAcctCode.current.value = obj.refBankAcctCode\n          if (refBankAcctName.current)\n            refBankAcctName.current.value = obj.refBankAcctName\n          if (refDateDepo.current)\n            refDateDepo.current.value = format(new Date(obj.refDate), \"yyyy-MM-dd\")\n\n          refBankAcctCodeTag.current = obj?.refBankAcctCodeTag\n          refBankAcctNameTag.current = obj?.refBankAcctNameTag\n          refAcctID.current = obj?.refAcctID\n          refAcctName.current = obj?.refAcctName\n          refShortName.current = obj?.client_name\n          refClassification.current = obj?.refClassification\n          refSubAccount.current = obj?.refSubAccount\n\n          cashTable.current.setDataFormated(cash)\n          checkTable.current.setDataFormated(check)\n          setCashCollection(cash)\n          setCheckCollection(check)\n          setTableRowsInputValue(cash_breakdown)\n\n\n\n          setTimeout(() => {\n            cash.forEach((d: any, idx: number) => {\n              if (refSlipCode.current && d.SlipCode === refSlipCode.current.value) {\n                const row = cashTable.current.parentElement().querySelector(`.tr-row-${idx}`);\n                const col = row.querySelectorAll('td')[0]\n                const checkbox = col.querySelector('input') as HTMLInputElement\n                if (checkbox) {\n                  checkbox.click()\n                }\n              }\n            });\n\n            check.forEach((d: any, idx: number) => {\n              if (refSlipCode.current && d.SlipCode === refSlipCode.current.value) {\n                const row = checkTable.current.parentElement().querySelector(`.tr-row-${idx}`);\n                const col = row.querySelectorAll('td')[0]\n                const checkbox = col.querySelector('input') as HTMLInputElement\n                if (checkbox) {\n                  checkbox.click()\n                }\n              }\n            });\n\n          }, 200)\n\n        })\n        setDepositMode('edit')\n\n      },\n    });\n  const {\n    ModalComponent: ModalDeposit,\n    openModal: openDeposit,\n    isLoading: isLoadingDeposit,\n    closeModal: closeDeposit,\n  } = useQueryModalTable({\n    link: {\n      url: \"/task/accounting/search-deposit\",\n      queryUrlName: \"searchDeposit\",\n    },\n    columns: [\n      { field: \"Date\", headerName: \"Date\", width: 150 },\n      { field: \"SlipCode\", headerName: \"Slip Code\", width: 170 },\n      {\n        field: \"BankAccount\",\n        headerName: \"Bank Account\",\n        width: 170,\n      },\n      {\n        field: \"AccountName\",\n        headerName: \"Account Name\",\n        flex: 1,\n      },\n    ],\n    queryKey: \"deposit-search\",\n    uniqueId: \"SlipCode\",\n    responseDataKey: \"deposit\",\n    onSelected: (selectedRowData) => {\n      const SlipCode = selectedRowData[0].SlipCode;\n      searchByDepositSlip({ SlipCode });\n\n      wait(100).then(() => {\n        if (refSlipCode.current) {\n          refSlipCode.current.value = SlipCode\n        }\n      })\n\n      closeDeposit();\n    },\n    onCloseFunction: (value: any) => {\n      if (inputSearchRef.current) {\n        inputSearchRef.current.value = \"\"\n      }\n    },\n    searchRef: depositSearch,\n  });\n  const { isLoading: loadingCashCollection, refetch: refetchCashCollection } =\n    useQuery({\n      queryKey: \"get-cash-collection\",\n      queryFn: async () =>\n        await myAxios.get(`/task/accounting/get-cash-collection`, {\n          headers: {\n            Authorization: `Bearer ${user?.accessToken}`,\n          },\n        }),\n      onSuccess: (data) => {\n        const response = data as any;\n        if (depositMode === 'edit') {\n          setCashCollection((d: any) => {\n            const filteredData = d.filter((itm: any) => {\n              return refSlipCode.current && itm.SlipCode === refSlipCode.current.value\n            })\n            return [...response.data.cash, ...filteredData]\n          })\n        } else {\n          setCashCollection(response.data.cash)\n          wait(100).then(() => {\n            cashTable.current.setDataFormated(response.data.cash)\n          })\n        }\n      },\n    });\n  const { isLoading: loadingCheckCollection, refetch: refetchCheckCollection } =\n    useQuery({\n      queryKey: \"get-check-collection\",\n      queryFn: async () =>\n        await myAxios.get(`/task/accounting/get-check-collection`, {\n          headers: {\n            Authorization: `Bearer ${user?.accessToken}`,\n          },\n        }),\n      onSuccess: (data) => {\n        const response = data as any;\n        if (depositMode === 'edit') {\n          setCashCollection((d: any) => {\n            const filteredData = d.filter((itm: any) => {\n              return refSlipCode.current && itm.SlipCode === refSlipCode.current.value\n            })\n            return [...response.data.check, ...filteredData]\n          })\n        } else {\n          setCheckCollection(response.data.check)\n          wait(100).then(() => {\n            checkTable.current.setDataFormated(response.data.check)\n          })\n        }\n\n      },\n    });\n  const handleOnSave = (e: any) => {\n    e.preventDefault();\n    if (refBankAcctCode.current && refBankAcctCode.current?.value.length >= 200) {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: \"Bank Account is too long!\",\n        timer: 1500,\n      });\n    }\n    if (refBankAcctCode.current && refBankAcctCode.current?.value === \"\") {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: \"Please provide bank account\",\n        timer: 1500,\n      }).then((result) => {\n        wait(350).then(() => {\n          openDepositBanks();\n        });\n      });\n    }\n    if (selectedRows.length <= 0) {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: \"No selected collection to be deposit\",\n        timer: 1500,\n      });\n    }\n    if (TotalCashForDeposit.trim() !== total.trim()) {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: \"Cash breakdown is not balance\",\n        timer: 1500,\n      });\n    }\n    const state = {\n      depositSlip: refSlipCode.current?.value,\n      depositdate: refDateDepo.current?.value,\n      BankAcctCode: refBankAcctCode.current?.value,\n      BankAcctName: refBankAcctName.current?.value,\n      BankAcctCodeTag: refBankAcctCodeTag.current,\n      BankAcctNameTag: refBankAcctNameTag.current,\n      AcctID: refAcctID.current,\n      AcctName: refAcctName.current,\n      Classification: refClassification.current,\n      SubAccount: refSubAccount.current,\n      ShortName: refShortName.current,\n    }\n    if (depositMode === \"edit\") {\n      codeCondfirmationAlert({\n        isUpdate: true,\n        cb: (userCodeConfirmation) => {\n\n          updateDepositMutation({\n            ...state,\n            userCodeConfirmation,\n            selectedCollection: JSON.stringify(selectedRows),\n            tableRowsInputValue: JSON.stringify(tableRowsInputValue),\n          });\n        },\n      });\n    } else {\n      saveCondfirmationAlert({\n        isConfirm: () => {\n          addDepositMutation({\n            ...state,\n            selectedCollection: JSON.stringify(selectedRows),\n            tableRowsInputValue: JSON.stringify(tableRowsInputValue),\n          });\n        },\n      });\n    }\n  };\n  function resetRefs() {\n\n    if (refBankAcctCode.current) {\n      refBankAcctCode.current.value = ''\n    }\n    if (refBankAcctName.current) {\n      refBankAcctName.current.value = ''\n    }\n    if (bankDepositSearch.current)\n      bankDepositSearch.current.value = ''\n    refBankAcctCodeTag.current = ''\n    refBankAcctNameTag.current = ''\n    refAcctID.current = ''\n    refAcctName.current = ''\n    refClassification.current = ''\n    refSubAccount.current = ''\n    refShortName.current = ''\n  }\n  function resetTables() {\n    cashTable.current.resetTable()\n    checkTable.current.resetTable()\n    selectedTable.current.resetTable()\n    collectionCheckTable.current.resetTable()\n  }\n\n  return (\n    <>\n      <PageHelmet title=\"Deposit\" />\n      <div\n        style={{\n          display: \"flex\",\n          flexDirection: \"column\",\n          width: \"100%\",\n          height: \"100%\",\n          flex: 1,\n          padding: \"5px\",\n          background: \"#F1F1F1\"\n        }}\n      >\n        <div\n          style={{\n            display: \"flex\",\n            alignItems: \"center\",\n            columnGap: \"5px\",\n            marginBottom: \"10px\"\n          }}\n        >\n          {isLoadingDeposit ? (\n            <LoadingButton loading={isLoadingDeposit} />\n          ) : (\n            <TextInput\n              label={{\n                title: \"Search: \",\n                style: {\n                  fontSize: \"12px\",\n                  fontWeight: \"bold\",\n                  width: \"50px\",\n                },\n              }}\n              input={{\n                className: \"search-input-up-on-key-down\",\n                type: \"search\",\n                onKeyDown: (e) => {\n                  if (e.key === \"Enter\" || e.key === \"NumpadEnter\") {\n                    e.preventDefault();\n                    openDeposit(inputSearchRef.current?.value);\n                  }\n                  if (e.key === \"ArrowDown\") {\n                    e.preventDefault();\n                    const datagridview = document.querySelector(\n                      \".grid-container\"\n                    ) as HTMLDivElement;\n                    datagridview.focus();\n                  }\n                },\n                style: { width: \"500px\" },\n              }}\n              icon={<SearchIcon sx={{ fontSize: \"18px\" }} />}\n              onIconClick={(e) => {\n                e.preventDefault()\n                if (inputSearchRef.current)\n                  openDeposit(inputSearchRef.current.value);\n              }}\n              inputRef={inputSearchRef}\n            />\n          )}\n          {disabledFields && (\n            <Button\n              sx={{\n                height: \"22px\",\n                fontSize: \"11px\",\n              }}\n              variant=\"contained\"\n              startIcon={<AddIcon sx={{ width: 15, height: 15 }} />}\n              id=\"entry-header-save-button\"\n              onClick={() => {\n                setDepositMode(\"add\")\n\n              }}\n            >\n              New\n            </Button>\n          )}\n          <LoadingButton\n            sx={{\n              height: \"22px\",\n              fontSize: \"11px\",\n            }}\n            id=\"save-entry-header\"\n            color=\"primary\"\n            variant=\"contained\"\n            type=\"submit\"\n            onClick={handleOnSave}\n            disabled={disabledFields}\n            startIcon={<SaveIcon sx={{ width: 15, height: 15 }} />}\n            loading={updateDepositMutationLoading || addDepositMutationLoading}\n          >\n            Save\n          </LoadingButton>\n          {!disabledFields && (\n            <Button\n              sx={{\n                height: \"22px\",\n                fontSize: \"11px\",\n              }}\n              variant=\"contained\"\n              startIcon={<CloseIcon sx={{ width: 15, height: 15 }} />}\n              color=\"error\"\n              onClick={() => {\n                Swal.fire({\n                  title: \"Are you sure?\",\n                  text: \"You won't be able to revert this!\",\n                  icon: \"warning\",\n                  showCancelButton: true,\n                  confirmButtonColor: \"#3085d6\",\n                  cancelButtonColor: \"#d33\",\n                  confirmButtonText: \"Yes, cancel it!\",\n                }).then((result) => {\n                  if (result.isConfirmed) {\n                    wait(100).then(() => {\n                      resetTables()\n                      resetRefs()\n                      setTableRowsInputValue(defaultCashBreakDown);\n                      setSelectedRows([]);\n                      setCollectionForDeposit([]);\n                      setSelectedRowsCashIndex([])\n                      setSelectedRowsCheckedIndex([])\n\n                      refetchCashCollection()\n                      refetchCheckCollection()\n                      RefetchDepositSlipCode();\n                      setDepositMode('')\n                      goTo(0)\n                    })\n                  }\n                });\n              }}\n            >\n              Cancel\n            </Button>\n          )}\n        </div>\n        <form\n          onKeyDown={(e) => {\n            if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n              e.preventDefault();\n              return;\n            }\n          }}\n          style={{\n            display: \"flex\",\n            gap: \"10px\",\n\n          }}\n        >\n          {LoadingDepositSlipCode ? \"Loading...\" : <TextInput\n            label={{\n              title: \"Slip Code: \",\n              style: {\n                fontSize: \"12px\",\n                fontWeight: \"bold\",\n                width: \"70px\",\n              },\n            }}\n            input={{\n              disabled: disabledFields,\n              className: \"search-input-up-on-key-down\",\n              type: \"text\",\n              style: { width: \"200px\" },\n            }}\n            inputRef={refSlipCode}\n            icon={<AutorenewIcon sx={{ fontSize: \"18px\" }} />}\n            onIconClick={(e) => {\n              e.preventDefault()\n              RefetchDepositSlipCode()\n            }}\n          />}\n          <TextInput\n            label={{\n              title: \"Deposit Date: \",\n              style: {\n                fontSize: \"12px\",\n                fontWeight: \"bold\",\n                width: \"80px\",\n              },\n            }}\n            input={{\n              defaultValue: format(new Date(), \"yyyy-MM-dd\"),\n              className: \"search-input-up-on-key-down\",\n              type: \"date\",\n              style: { width: \"200px\" },\n              disabled: disabledFields\n            }}\n            inputRef={refDateDepo}\n          />\n\n          {isLoadingDepostitBanks ? (\n            \"Loading...\"\n          ) : (\n            <TextInput\n              label={{\n                title: \"Bank Account: \",\n                style: {\n                  fontSize: \"12px\",\n                  fontWeight: \"bold\",\n                  width: \"100px\",\n                },\n              }}\n              input={{\n                className: \"search-input-up-on-key-down\",\n                type: \"text\",\n                style: { width: \"200px\" },\n                onKeyDown: (e) => {\n                  if (e.key === \"Enter\" || e.key === \"NumpadEnter\") {\n                    e.preventDefault();\n                    openDepositBanks(refBankAcctCode.current?.value)\n                  }\n\n                },\n                disabled: disabledFields\n              }}\n              inputRef={refBankAcctCode}\n              icon={<AccountBalanceIcon sx={{ fontSize: \"18px\", color: disabledFields ? \"gray\" : \"black\" }} />}\n              onIconClick={(e) => {\n                e.preventDefault()\n                openDepositBanks(refBankAcctCode.current?.value)\n              }}\n              disableIcon={disabledFields}\n            />)}\n\n          <TextInput\n            label={{\n              title: \"Account Name: \",\n              style: {\n                fontSize: \"12px\",\n                fontWeight: \"bold\",\n                width: \"100px\",\n              },\n            }}\n            input={{\n              className: \"search-input-up-on-key-down\",\n              type: \"text\",\n              style: { width: \"200px\" },\n              readOnly: true,\n              disabled: disabledFields\n\n            }}\n\n\n            inputRef={refBankAcctName}\n          />\n          <button\n            // ref={submitButton}\n            style={{ display: \"none\" }}\n            type=\"submit\"\n          ></button>\n        </form>\n        <br />\n        <div>\n          <div style={{ display: \"flex\" }}>\n            {buttons.map((item, idx) => {\n              return (\n                <button\n                  key={idx}\n                  disabled={disabledFields}\n                  style={{\n                    border: \"1px solid #c0c0c0\",\n                    outline: \"none\",\n                    backgroundColor: currentStepIndex === idx ? \"#c0c0c0\" : \"rgba(51, 51, 51, 0.05)\",\n                    borderWidth: \"0\",\n                    color: \"black\",\n                    cursor: \"pointer\",\n                    display: \"inline-block\",\n                    fontFamily: `\"Haas Grot Text R Web\", \"Helvetica Neue\", Helvetica, Arial, sans-serif`,\n                    fontSize: \"14px\",\n                    fontWeight: \"500\",\n                    lineHeight: \"20px\",\n                    listStyle: \"none\",\n                    margin: \"0\",\n                    padding: \"10px 12px\",\n                    textAlign: \"center\",\n                    verticalAlign: \"baseline\",\n                    whiteSpace: \"nowrap\",\n                    userSelect: \"none\",\n                    touchAction: \"manipulation\",\n                    position: \"relative\",\n                    overflow: \"hidden\",\n                    borderRadius: \"0px\",\n                  }}\n                  onClick={() => {\n                    if (idx === 0) {\n                      refetchCashCollection()\n                    } else if (idx === 1) {\n                      refetchCheckCollection()\n                    }\n                    goTo(idx)\n                  }}\n                >\n                  <span\n                    style={{\n                      position: \"absolute\",\n                      top: 0,\n                      bottom: 0,\n                      left: 0,\n                      right: 0,\n                      background: \"rgba(206, 214, 211, 0.18)\",\n                      transition: \"all 200ms\",\n                      transform: slideAnimation(currentStepIndex, idx),\n                    }}\n                  ></span>\n                  {item.title}\n                </button>\n              );\n            })}\n          </div>\n        </div>\n        <DepositContext.Provider\n          value={{\n            cashCollection,\n            setCashCollection,\n            checkCollection,\n            setCheckCollection,\n            selectedRows,\n            setSelectedRows,\n            collectionForDeposit,\n            setCollectionForDeposit,\n            total,\n            setTotal,\n            TotalCashForDeposit,\n            tableRows: tableRowsInputValue,\n            setTableRowsInputValue,\n            updateTableRowsInput,\n            loadingCheckCollection,\n            loadingCashCollection,\n            selectedRowsCashIndex,\n            setSelectedRowsCashIndex,\n            selectedRowsCheckedIndex,\n            setSelectedRowsCheckedIndex,\n            cashTable,\n            checkTable,\n            selectedTable,\n            collectionCheckTable,\n            refetchCheckCollection,\n            refetchCashCollection,\n            disabledFields\n          }}\n        >\n          <div\n            style={{\n              display: \"flex\",\n              flexDirection: \"column\",\n              flex: 1,\n            }}\n            id=\"concatiner\"\n          >\n            <div style={{ display: currentStepIndex === 0 ? \"block\" : \"none\" }}>\n              <CashCollection />\n            </div>\n            <div style={{ display: currentStepIndex === 1 ? \"block\" : \"none\" }}>\n              <CheckCollection />\n            </div>\n            <div style={{ display: currentStepIndex === 2 ? \"block\" : \"none\" }}>\n              <SelectedCollection />\n            </div>\n            <div style={{ display: currentStepIndex === 3 ? \"block\" : \"none\" }}>\n              <CollectionForDeposit />\n            </div>\n          </div>\n        </DepositContext.Provider>\n        {ModalDepostitBanks}\n        {ModalDeposit}\n        {(loadingSearchByDepositSlip || updateDepositMutationLoading || addDepositMutationLoading) && <div className=\"loading-component\"><div className=\"loader\"></div></div>}\n        <style>\n\n          {`\n            #upward-cutom-table tr td{\n            border-right:1px solid #f1f5f9 !important;\n            }\n\n            #upward-cutom-table tr:nth-child(odd) td {\n            background-color: #ffffff !important;\n            }\n            #upward-cutom-table tr:nth-child(even) td {\n            background-color: #f5f5f5 !important;\n            }\n            #upward-cutom-table tr.selected td {\n            background-color: #0076d7 !important;\n            color: #ffffff !important;\n            border-right:1px solid white !important;\n              border-bottom:1px solid white !important;\n            }\n\n            #upward-cutom-table tr.selected td input {\n            color: #ffffff !important;\n            }\n\n            `}\n        </style>\n      </div>\n    </>\n\n  );\n}\nfunction slideAnimation(activeButton: number, idx: number) {\n  if (activeButton === idx) {\n    return \"translateX(100%)\";\n  } else {\n    return \"translateX(0%)\";\n  }\n}\nfunction CashCollection() {\n  const {\n    cashCollection,\n    setSelectedRows,\n    cashTable,\n    disabledFields\n  } = useContext(DepositContext);\n\n\n\n  return (\n    <div\n      style={{\n        flex: 1,\n        marginTop: \"10px\",\n        width: \"100%\",\n        position: \"relative\",\n      }}\n    >\n      <DepositTable\n        disbaleTable={disabledFields}\n        ref={cashTable}\n        columns={cashColumns}\n        rows={cashCollection}\n        getSelectedItem={(rowItm: any, colItm: any, rowIdx: any, colIdx: any) => {\n          const rowSelected = rowItm;\n          setSelectedRows((d: any) => {\n            const newSelected: any = {\n              Deposit: \"Cash\",\n              Check_No: \"\",\n              Check_Date: \"\",\n              Bank: \"\",\n              Amount: rowSelected[2],\n              Name: rowSelected[3],\n              RowIndex: d.length + 1,\n              DRCode: rowSelected[4],\n              ORNo: rowSelected[0],\n              DRRemarks: \"\",\n              IDNo: rowSelected[5],\n              TempOR: rowSelected[7],\n              Short: rowSelected[6],\n            };\n\n            d = [...d, newSelected];\n            return d;\n          });\n\n\n        }}\n      />\n    </div>\n  );\n}\nfunction CheckCollection() {\n  const {\n    checkCollection,\n    setSelectedRows,\n    checkTable,\n    setCollectionForDeposit,\n    disabledFields\n  } = useContext(DepositContext)\n  const checkColumns = [\n    {\n      key: \"OR_No\",\n      label: \"OR No.\",\n      width: 170,\n    },\n    {\n      key: \"OR_Date\",\n      label: \"OR Date\",\n      width: 170,\n    },\n    {\n      key: \"Check_No\",\n      label: \"Check No\",\n      width: 170,\n    },\n    {\n      key: \"Check_Date\",\n      label: \"Check Date\",\n      width: 170,\n    },\n    {\n      key: \"Amount\",\n      label: \"Amount\",\n      width: 160,\n      align: \"right\",\n      type: \"number\"\n    },\n    {\n      key: \"Bank_Branch\",\n      label: \"Bank/Branch\",\n      width: 300,\n    },\n    {\n      key: \"Client_Name\",\n      label: \"Client Name\",\n      width: 300,\n    },\n    {\n      key: \"Temp_OR\",\n      hide: true,\n    },\n    {\n      key: \"DRCode\",\n      hide: true,\n    },\n    {\n      key: \"DRRemarks\",\n      hide: true,\n    },\n    {\n      key: \"ID_No\",\n      hide: true,\n    },\n    {\n      key: \"Short\",\n      hide: true,\n    },\n    {\n      key: \"SlipCode\",\n      hide: true,\n    },\n  ];\n\n\n  return (\n    <div\n      style={{\n        marginTop: \"10px\",\n        width: \"100%\",\n        position: \"relative\",\n        flex: 1,\n      }}\n    >\n\n      <DepositTable\n        disbaleTable={disabledFields}\n        ref={checkTable}\n        columns={checkColumns}\n        rows={checkCollection}\n        getSelectedItem={(rowItm: any, colItm: any, rowIdx: any, colIdx: any) => {\n          const rowSelected = rowItm;\n          setSelectedRows((d: any) => {\n            const newSelected: any = {\n              Deposit: \"Check\",//0\n              Check_No: rowSelected[2],//1\n              Check_Date: rowSelected[3],//2\n              Bank: rowSelected[5],//3\n              Amount: rowSelected[4],//4\n              Name: rowSelected[6],//5\n              DRCode: rowSelected[8],//7\n              ORNo: rowSelected[0],//8\n              DRRemarks: rowSelected[9],//9\n              IDNo: rowSelected[10],//10\n              TempOR: rowSelected[7],//11\n              Short: rowSelected[11],//12\n            };\n            d = [...d, newSelected];\n            return d;\n          });\n\n          setCollectionForDeposit((d: any) => {\n            const newSelectedCheckForDeposit: any = {\n              Bank: rowSelected[5],\n              Check_No: rowSelected[2],\n              Amount: rowSelected[4],\n              TempOR: rowSelected[7],\n            };\n            d = [...d, newSelectedCheckForDeposit];\n            return d;\n          });\n\n        }}\n      />\n    </div>\n  );\n\n\n\n}\nfunction SelectedCollection() {\n  const {\n    setSelectedRows,\n    selectedRows,\n    selectedTable,\n    cashTable,\n    checkTable,\n    setCollectionForDeposit,\n    collectionForDeposit,\n    collectionCheckTable\n  } = useContext(DepositContext);\n\n  const selectedCollectionColumns = [\n    { key: \"Deposit\", label: \"Deposit\", width: 170 },\n    { key: \"Check_No\", label: \"Check No\", width: 170 },\n    {\n      key: \"Check_Date\",\n      label: \"Check Date\",\n      width: 170,\n    },\n    { key: \"Bank\", label: \"Bank/Branch\", width: 200 },\n    {\n      key: \"Amount\", label: \"Amount\", width: 170, type: \"number\"\n    },\n    { key: \"Name\", label: \"Client Name\", width: 400 },\n    // hide\n    { key: \"DRCode\", label: \"DRCode\", hide: true },\n    { key: \"ORNo\", label: \"ORNo\", hide: true },\n    { key: \"DRRemarks\", label: \"DRRemarks\", hide: true },\n    { key: \"IDNo\", label: \"IDNo\", hide: true },\n    { key: \"TempOR\", label: \"TempOR\", hide: true },\n    { key: \"Short\", label: \"Short\", hide: true },\n  ];\n\n  return (\n    <div\n      style={{\n        marginTop: \"10px\",\n        width: \"100%\",\n        position: \"relative\",\n        flex: 1,\n      }}\n    >\n      <DepositTableSelected\n        ref={selectedTable}\n        columns={selectedCollectionColumns}\n        rows={selectedRows}\n        getSelectedItem={(rowItm: any, colItm: any, rowIdx: any, colIdx: any) => {\n          const rowSelected = rowItm;\n          const selectedData = selectedTable.current.getData()\n\n          if (rowSelected[0] === 'Cash') {\n            const cashData = cashTable.current.getData()\n            const getSelectedRow = cashTable.current.getSelectedRow()\n            const rowIdx = cashData.findIndex((itm: any) => itm[7] === rowSelected[10])\n            const index = getSelectedRow.indexOf(rowIdx);\n            if (index !== -1) {\n              getSelectedRow.splice(index, 1);\n            }\n            cashTable.current.setSelectedRow(getSelectedRow)\n          } else {\n            const cashData = checkTable.current.getData()\n            const getSelectedRow = checkTable.current.getSelectedRow()\n            const rowIdx = cashData.findIndex((itm: any) => itm[7] === rowSelected[10])\n            const index = getSelectedRow.indexOf(rowIdx);\n            if (index !== -1) {\n              getSelectedRow.splice(index, 1);\n            }\n            checkTable.current.setSelectedRow(getSelectedRow)\n          }\n\n          setSelectedRows((d: any) => {\n            if (d.length === 1 && d[0].TempOR === rowSelected[10]) {\n              return []\n            }\n            return d.filter((itm: any) => itm.TempOR !== rowSelected[10])\n          })\n\n\n\n          const newData = (d: any) => {\n            if (d.length === 1 && d[0].TempOR === rowSelected[10]) {\n              return []\n            }\n            return d.filter((item: any) => item.TempOR !== rowSelected[10]);\n          }\n          const dd = newData(collectionForDeposit)\n          setCollectionForDeposit(dd);\n\n          const columns = collectionCheckTable.current?.getColumns()\n          collectionCheckTable.current?.setData(dd.map((itm: any) => {\n            return columns.map((col: any) => itm[col.key])\n          }))\n\n\n          if (selectedData.length === 1 && selectedData[0][10] === rowSelected[10]) {\n            return selectedTable.current.setData([])\n          } else {\n            const newSelectedData = selectedData.filter((itm: any) => {\n              return itm[10] !== rowSelected[10]\n            })\n            selectedTable.current.setData(newSelectedData)\n          }\n\n\n\n        }}\n      />\n    </div>\n  );\n\n\n}\nfunction CollectionForDeposit() {\n  const {\n    collectionForDeposit,\n    tableRows,\n    total,\n    setTotal,\n    TotalCashForDeposit,\n    collectionCheckTable\n  } = useContext(DepositContext);\n\n  useEffect(() => {\n    setTotal(\n      tableRows\n        ?.reduce((accumulator: any, currentValue: any) => {\n          return (\n            accumulator + parseFloat(currentValue.value3.replace(/,/g, \"\"))\n          );\n        }, 0.0)\n        .toLocaleString(\"en-US\", {\n          minimumFractionDigits: 2,\n          maximumFractionDigits: 2,\n        })\n    );\n  }, [tableRows, setTotal]);\n\n\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        gap: \"10px\",\n        height: \"auto \",\n      }}\n    >\n      <fieldset\n        style={{\n          flexDirection: \"column\",\n          gap: \"10px\",\n          border: \"1px solid #cbd5e1\",\n          borderRadius: \"5px\",\n          width: \"70%\",\n          position: \"relative\",\n        }}\n      >\n        <legend>Checks</legend>\n        <DepositTableSelected\n          isTableSelectable={false}\n          ref={collectionCheckTable}\n          width=\"100%\"\n          columns={[\n            {\n              key: \"Bank\",\n              label: \"Bank/Branch\",\n              width: 170,\n            },\n            {\n              key: \"Check_No\",\n              label: \"Check No\",\n              width: 170,\n            },\n            {\n              key: \"Amount\",\n              label: \"Amount\",\n              width: 300,\n              type: \"number\"\n\n            },\n          ]}\n          rows={collectionForDeposit}\n          getSelectedItem={(rowItm: any, colItm: any, rowIdx: any, colIdx: any) => {\n          }}\n        />\n      </fieldset>\n      <fieldset\n        style={{\n          flexDirection: \"column\",\n          gap: \"10px\",\n          border: \"1px solid #cbd5e1\",\n          borderRadius: \"5px\",\n          alignSelf: \"flex-end\",\n          display: \"flex\",\n          width: \"30%\",\n        }}\n      >\n        <legend\n          style={{\n            color: total === TotalCashForDeposit ? \"green\" : \"#ec4899\",\n          }}\n        >\n          Cash ( {TotalCashForDeposit} )\n        </legend>\n        <table\n          id=\"cash-breakdown-table\"\n          style={{\n            border: \"2px solid black\",\n            borderCollapse: \"collapse\",\n            width: \"100%\",\n            background: \"white\"\n          }}\n        >\n\n          <thead>\n            <tr\n              style={{\n                borderBottom: \"2px solid black\",\n                fontSize: \"14px\",\n              }}\n            >\n              <th\n                style={{\n                  borderRight: \"2px solid black\",\n                }}\n              >\n                Denominations\n              </th>\n              <th\n                style={{\n                  borderRight: \"2px solid black\",\n                }}\n              >\n                QTY\n              </th>\n              <th\n                style={{\n                  borderRight: \"2px solid black\",\n                }}\n              >\n                Amount\n              </th>\n            </tr>\n          </thead>\n          <tbody>\n            {tableRows?.map((items: any, idx: number) => {\n              return <TrComponent\n                key={idx}\n                value1={items.value1}\n                value2={items.value2}\n                value3={items.value3}\n                idx={idx}\n              />\n            })}\n          </tbody>\n          <tfoot>\n            <tr\n              style={{\n                borderTop: \"2px solid black\",\n                height: \"auto\",\n              }}\n            >\n              <td colSpan={3}>\n                <div\n                  style={{\n                    display: \"flex\",\n                    justifyContent: \"flex-end\",\n                  }}\n                >\n                  <div\n                    style={{\n                      display: \"flex\",\n                      alignItems: \"center\",\n                      width: \"100%\",\n                      textAlign: \"right\",\n                      justifyContent: \"flex-end\",\n                      columnGap: \"5px\"\n                    }}\n                  >\n                    <span style={{ fontSize: \"12px\", fontWeight: \"bold\" }}>\n                      Total Cash Deposit:\n                    </span>\n                    <input\n                      style={{\n                        fontWeight: \"bold\",\n                        border: \"1px solid black\",\n                        textAlign: \"right\",\n                        fontSize: \"13px\",\n                        width: \"180px\",\n                      }}\n                      value={total}\n                      onChange={(e) => {\n                        setTotal(e.target.value);\n                      }}\n                      readOnly={true}\n                    />\n                  </div>\n                </div>\n              </td>\n            </tr>\n          </tfoot>\n        </table>\n      </fieldset>\n\n\n    </div>\n  );\n}\nfunction TrComponent({ value1, value2, value3, idx }: any) {\n  const { updateTableRowsInput } = useContext(DepositContext);\n\n  const [input1, setInput1] = useState(value1);\n  const [input2, setInput2] = useState(value2);\n  const [input3, setInput3] = useState(value3);\n  const InputStyle: CSSProperties = {\n    textAlign: \"right\",\n    height: \"18px\",\n    borderRight: \"none\",\n    borderLeft: \"none\",\n    borderTop: \"none\",\n    outline: \"none\",\n    borderBottom: \"1px solid #cbd5e1\",\n    padding: \"0 8px\",\n    width: \"100%\",\n    fontSize: \"13px\",\n    margin: \"0 !important\",\n\n  };\n\n  return (\n    <tr  >\n      <td\n        style={{\n          borderRight: \"2px solid black\",\n          margin: \"0\",\n          padding: \"0\",\n          height: \"15px\"\n\n        }}\n      >\n        <input\n          disabled={true}\n          className={`row-${idx} col-0`}\n          type=\"text\"\n          style={InputStyle}\n          value={input1}\n          onChange={(e) => setInput1(e.target.value)}\n          readOnly={true}\n        />\n      </td>\n      <td\n        style={{\n          borderRight: \"2px solid black\",\n          overflow: \"hidden\",\n          margin: 0,\n          padding: \"0 !important\",\n          height: \"15px\"\n\n        }}\n      >\n        <input\n          className={`row-${idx} col-1`}\n          style={InputStyle}\n          value={input2}\n          onChange={(e) => {\n            let input1Value = input1;\n            setInput2(e.target.value);\n            if (input1.includes(\",\")) {\n              input1Value = input1.replace(/,/g, \"\").toString();\n            }\n            const valueFor3 = (\n              parseFloat(input1Value) *\n              (isNaN(parseInt(e.target.value)) ? 0 : parseInt(e.target.value))\n            ).toLocaleString(\"en-US\", {\n              minimumFractionDigits: 2,\n              maximumFractionDigits: 2,\n            });\n            setInput3(valueFor3);\n\n            updateTableRowsInput(\n              {\n                value1,\n                value2: e.target.value,\n                value3: valueFor3,\n              },\n              idx\n            );\n          }}\n          onKeyDown={(e) => {\n            if (e.code === 'Enter' || e.code === 'NumpadEnter') {\n              e.preventDefault()\n              const nextInput = document.querySelector(`#cash-breakdown-table td .row-${idx + 1}.col-1`) as HTMLInputElement\n              if (nextInput) {\n                nextInput.focus()\n              }\n            }\n          }}\n        />\n      </td>\n      <td\n        style={{\n          borderRight: \"2px solid black\",\n          margin: \"0\",\n          padding: \"0 !important\",\n          height: \"15px\"\n        }}\n      >\n        <input\n          disabled={true}\n          className={`row-${idx} col-2`}\n          type=\"text\"\n          style={InputStyle}\n          value={input3}\n          onChange={(e) => setInput3(e.target.value)}\n          readOnly={true}\n\n        />\n      </td>\n    </tr>\n  );\n}\nconst DepositTable = forwardRef(({\n  columns,\n  rows,\n  height = \"400px\",\n  width = \"calc(100vw - 40px)\",\n  getSelectedItem,\n  disbaleTable = false\n\n}: any, ref) => {\n  const parentElementRef = useRef<any>(null)\n  const [data, setData] = useState([])\n  const [column, setColumn] = useState([])\n  const [selectedRow, setSelectedRow] = useState<Array<any>>([])\n  const [selectedRowIndex, setSelectedRowIndex] = useState<any>(0)\n\n  const totalRowWidth = column.reduce((a: any, b: any) => a + b.width, 0)\n\n\n  useEffect(() => {\n    if (columns.length > 0) {\n      setColumn(columns.filter((itm: any) => !itm.hide))\n    }\n  }, [columns])\n\n  useEffect(() => {\n    if (rows.length > 0) {\n      setData(rows.map((itm: any) => {\n        return columns.map((col: any) => itm[col.key])\n      }))\n    }\n  }, [rows, columns])\n\n  useImperativeHandle(ref, () => ({\n    getData: () => {\n      return data\n    },\n    setData: (newData: any) => {\n      setData(newData)\n    },\n    setSelectedRow: (rowIdx: any) => {\n      setSelectedRow(rowIdx)\n    },\n    getSelectedRow: (rowIdx: any) => {\n      return selectedRow\n    },\n    getColumns: () => {\n      return columns\n    },\n    resetTable: () => {\n      setData([])\n      setSelectedRow([])\n    },\n    setDataFormated: (newData: any) => {\n      setData(newData.map((itm: any) => {\n        return columns.map((col: any) => itm[col.key])\n      }))\n    },\n    parentElement: () => {\n      return parentElementRef.current\n    },\n  }))\n\n\n  return (\n    <Fragment>\n      <div ref={parentElementRef}\n        style={{\n          width,\n          height,\n          overflow: \"auto\",\n          position: \"relative\",\n          pointerEvents: disbaleTable ? \"none\" : \"auto\",\n          border: disbaleTable ? \"2px solid #8c8f8e\" : '2px solid #c0c0c0',\n          boxShadow: `inset -2px -2px 0 #ffffff, \n                        inset 2px 2px 0 #808080`\n        }}>\n        <div style={{ position: \"absolute\", width: `${totalRowWidth}px`, height: \"auto\" }}>\n          <table id=\"upward-cutom-table\" style={{ borderCollapse: \"collapse\", width: \"100%\", position: \"relative\" }}>\n            <thead >\n              <tr>\n                <th style={{ width: '30px', border: \"none\", position: \"sticky\", top: 0, zIndex: 1, background: \"#f0f0f0\" }}\n                ></th>\n                {\n                  column.map((colItm: any, idx: number) => {\n                    return (\n                      <th\n                        key={idx}\n                        style={{\n                          width: colItm.width,\n                          borderRight: \"1px solid #e2e8f0\",\n                          position: \"sticky\",\n                          top: 0,\n                          zIndex: 1,\n                          background: \"#f0f0f0\",\n                          fontSize: \"12px\",\n                          padding: \"0px 5px\",\n                          textAlign: colItm.type === 'number' ? \"center\" : \"left\"\n                        }}\n                      >{colItm.label}</th>\n                    )\n                  })\n                }\n              </tr>\n            </thead>\n            <tbody>\n              {\n                data?.map((rowItm: any, rowIdx: number) => {\n                  return (\n                    <tr\n                      key={rowIdx}\n                      className={`tr-row-${rowIdx} row ${selectedRow.includes(rowIdx) || (selectedRowIndex === rowIdx) ? \"selected\" : \"\"}`}\n\n                    >\n                      <td style={{\n                        position: \"relative\",\n                        border: \"none\",\n                        cursor: \"pointer\",\n                        padding: 0,\n                        margin: 0,\n                        background: selectedRow.includes(rowIdx) ? \"#bae6fd\" : \"\",\n                      }}\n                      >\n                        <div style={{\n                          width: \"18px\",\n                          height: \"18px\",\n                          position: \"relative\",\n                          display: \"flex\",\n                          alignItems: \"center\",\n                          justifyContent: \"center\"\n                        }}>\n                          <input\n                            className=\"check-input\"\n                            style={{\n                              cursor: \"pointer\",\n                              background: \"transparent\"\n                            }}\n                            readOnly={true}\n                            type=\"checkbox\"\n                            checked={selectedRow.includes(rowIdx)}\n                            onClick={() => {\n                              if (selectedRow.includes(rowIdx)) {\n                                return\n                              }\n\n                              setSelectedRow((d: any) => {\n                                return [...d, rowIdx]\n                              })\n\n                              if (getSelectedItem) {\n                                getSelectedItem(rowItm, null, rowIdx, null)\n                              }\n                            }}\n                          />\n\n                        </div>\n\n                      </td>\n\n                      {\n                        column.map((colItm: any, colIdx: number) => {\n                          return (\n                            <td\n                              onDoubleClick={() => {\n                                if (selectedRow.includes(rowIdx)) {\n                                  return\n                                }\n\n                                setSelectedRow((d: any) => {\n                                  return [...d, rowIdx]\n                                })\n                                if (getSelectedItem) {\n                                  getSelectedItem(rowItm, colItm, rowIdx, colIdx)\n                                }\n                              }}\n                              onClick={() => {\n                                setSelectedRowIndex(rowIdx)\n                              }}\n                              key={colIdx}\n                              style={{\n                                border: \"none\",\n                                fontSize: \"12px\",\n                                padding: \"0px 5px\",\n                                cursor: \"pointer\",\n                                height: \"20px\",\n                                userSelect: \"none\",\n                              }}\n                            >{\n                                <input\n                                  readOnly={true}\n                                  value={rowItm[colIdx]}\n                                  style={{\n\n                                    width: colItm.width,\n                                    pointerEvents: \"none\",\n                                    border: \"none\",\n                                    background: \"transparent\",\n                                    userSelect: \"none\",\n                                    height: \"100%\",\n                                    textAlign: colItm.type === 'number' ? \"right\" : \"left\"\n\n                                  }} />\n                              }</td>\n                          )\n                        })\n                      }\n                    </tr>\n                  )\n                })\n              }\n            </tbody>\n          </table>\n        </div>\n      </div>\n    </Fragment>\n  )\n})\nconst DepositTableSelected = forwardRef(({\n  columns,\n  rows,\n  height = \"400px\",\n  getSelectedItem,\n  disbaleTable = false,\n  isTableSelectable = true\n}: any, ref) => {\n  const parentElementRef = useRef<any>(null)\n  const [data, setData] = useState([])\n  const [column, setColumn] = useState([])\n  const [selectedRow, setSelectedRow] = useState<any>(0)\n  const totalRowWidth = column.reduce((a: any, b: any) => a + b.width, 0)\n\n\n  useEffect(() => {\n    if (columns.length > 0) {\n      setColumn(columns.filter((itm: any) => !itm.hide))\n    }\n  }, [columns])\n\n  useEffect(() => {\n    if (rows.length > 0) {\n      setData(rows.map((itm: any) => {\n        return columns.map((col: any) => itm[col.key])\n      }))\n    }\n  }, [rows, columns])\n\n  useImperativeHandle(ref, () => ({\n    getData: () => {\n      return data\n    },\n    setData: (newData: any) => {\n      setData(newData)\n    },\n    getColumns: () => {\n      return columns\n    },\n    resetTable: () => {\n      setData([])\n      setSelectedRow(0)\n    },\n    setDataFormated: (newData: any) => {\n      setData(newData.map((itm: any) => {\n        return columns.map((col: any) => itm[col.key])\n      }))\n    }\n  }))\n\n\n\n\n\n  return (\n    <Fragment>\n      <div\n        ref={parentElementRef}\n        style={{\n          width: \"100%\",\n          height,\n          overflow: \"auto\",\n          position: \"relative\",\n          pointerEvents: disbaleTable ? \"none\" : \"auto\",\n          border: disbaleTable ? \"2px solid #8c8f8e\" : '2px solid #c0c0c0',\n          boxShadow: `inset -2px -2px 0 #ffffff, \n                      inset 2px 2px 0 #808080`,\n          background: \"#dcdcdc\"\n\n\n        }}>\n        <div style={{ position: \"absolute\", width: `${totalRowWidth}px`, height: \"auto\" }}>\n          <table id=\"upward-cutom-table\" style={{ borderCollapse: \"collapse\", width: \"100%\", position: \"relative\" }}>\n            <thead >\n              <tr style={{\n                background: \"#f0f0f0\",\n              }}>\n                <th style={{\n                  width: '30px',\n                  border: \"none\",\n                  position: \"sticky\",\n                  top: 0,\n                  zIndex: 1,\n                  background: \"#f0f0f0\"\n                }}\n                ></th>\n                {\n                  column.map((colItm: any, idx: number) => {\n                    return (\n                      <th\n                        key={idx}\n                        style={{\n                          width: colItm.width,\n                          borderRight: \"1px solid #e2e8f0\",\n                          position: \"sticky\",\n                          top: 0,\n                          zIndex: 1,\n                          fontSize: \"12px\",\n                          padding: \"0px 5px\",\n                          background: \"#f0f0f0\",\n                          textAlign: colItm.type === 'number' ? \"center\" : \"left\"\n\n                        }}\n                      >{colItm.label}</th>\n                    )\n                  })\n                }\n              </tr>\n            </thead>\n            <tbody>\n              {\n                data?.map((rowItm: any, rowIdx: number) => {\n                  return (\n                    <tr\n                      key={rowIdx}\n                      className={`tr-row-${rowIdx} row ${(selectedRow === rowIdx) ? \"selected\" : \"\"}`}\n                    >\n                      <td style={{\n                        position: \"relative\",\n                        border: \"none\",\n                        cursor: \"pointer\",\n                        background: selectedRow === rowIdx ? \"#0076d\" : \"\",\n                        padding: 0,\n                        margin: 0,\n\n                      }}>\n                        <div style={{\n                          width: \"18px\",\n                          height: \"18px\",\n                          position: \"relative\",\n                          display: \"flex\",\n                          alignItems: \"center\",\n                          justifyContent: \"center\"\n                        }}>\n                          <input\n                            style={{\n                              cursor: \"pointer\",\n                              margin: \"0px !important\",\n                              position: \"absolute\",\n                            }}\n                            readOnly={true}\n                            checked={false}\n                            type=\"checkbox\"\n                            onClick={() => {\n                              if (!isTableSelectable) {\n                                return\n                              }\n\n                              if (getSelectedItem) {\n                                getSelectedItem(rowItm, null, rowIdx, null)\n                              }\n                              setSelectedRow(null)\n\n                            }}\n                          />\n                        </div>\n\n                      </td>\n\n                      {\n                        column.map((colItm: any, colIdx: number) => {\n                          return (\n                            <td\n                              onDoubleClick={() => {\n                                if (!isTableSelectable) {\n                                  return\n                                }\n                                if (getSelectedItem) {\n                                  getSelectedItem(rowItm, null, rowIdx, null)\n                                }\n                                setSelectedRow(null)\n\n                              }}\n                              onClick={() => {\n                                setSelectedRow(rowIdx)\n                              }}\n                              key={colIdx}\n                              style={{\n                                border: \"none\",\n                                fontSize: \"12px\",\n                                padding: \"0px 5px\",\n                                cursor: \"pointer\",\n                                height: \"20px\",\n                                userSelect: \"none\",\n                              }}\n                            >{\n                                <input\n                                  readOnly={true}\n                                  value={rowItm[colIdx]}\n                                  style={{\n                                    width: colItm.width,\n                                    pointerEvents: \"none\",\n                                    border: \"none\",\n                                    background: \"transparent\",\n                                    userSelect: \"none\",\n                                    height: \"100%\",\n                                    textAlign: colItm.type === 'number' ? \"right\" : \"left\"\n\n                                  }} />\n                              }</td>\n                          )\n                        })\n                      }\n                    </tr>\n                  )\n                })\n              }\n            </tbody>\n          </table>\n        </div>\n      </div>\n    </Fragment>\n  )\n})\nfunction useMultipleComponent(steps: any) {\n  const [currentStepIndex, setCurrentStepIndex] = useState(0);\n\n\n  function goTo(index: number) {\n    // Ensure the index is within bounds\n    if (index >= 0 && index < steps.length) {\n      setCurrentStepIndex(index);\n    }\n  }\n\n  return {\n    goTo,\n    currentStepIndex,\n  };\n}\n\n\n\n","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 6v3l4-4-4-4v3c-4.42 0-8 3.58-8 8 0 1.57.46 3.03 1.24 4.26L6.7 14.8c-.45-.83-.7-1.79-.7-2.8 0-3.31 2.69-6 6-6zm6.76 1.74L17.3 9.2c.44.84.7 1.79.7 2.8 0 3.31-2.69 6-6 6v-3l-4 4 4 4v-3c4.42 0 8-3.58 8-8 0-1.57-.46-3.03-1.24-4.26z\"\n}), 'Autorenew');\nexports.default = _default;","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z\"\n}), 'Search');\nexports.default = _default;"],"names":["TextFormatedInput","_ref","input","label","inputRef","icon","_ref$iconPosition","iconPosition","_ref$disableIcon","disableIcon","_ref$onIconClick","onIconClick","e","_ref$onChange","onChange","_ref$onBlur","onBlur","containerStyle","id","useId","formatNumber","value","parts","split","replace","join","unformatNumber","_jsxs","style","_objectSpread","display","alignItems","position","children","_jsx","htmlFor","title","left","zIndex","ref","type","height","textAlign","target","test","numbers","match","newV","handleChange","includes","length","ensureTwoDecimals","handleBlur","onClick","right","top","transform","cursor","justifyContent","background","pointerEvents","TextInput","_ref2","_ref2$iconPosition","_ref2$disableIcon","_ref2$onIconClick","TextAreaInput","_ref3","textarea","_inputRef","_ref3$iconPosition","_ref3$disableIcon","_ref3$onIconClick","SelectInput","forwardRef","_ref4","select","selectRef","_ref4$datasource","datasource","_ref4$values","values","_ref4$display","_useState","useState","_useState2","_slicedToArray","_datasource","_setDataSource","useImperativeHandle","setDataSource","_dataSource","getDataSource","className","concat","map","itm","idx","ButtonField","_ref5","buttonRetRef","button","_ref5$tooltipText","tooltipText","_ref5$disabled","disabled","defaultCashBreakDown","value1","value2","value3","buttons","index","cashColumns","key","width","cellClassName","flex","hide","reducer","state","action","_defineProperty","field","DepositContext","createContext","cashCollection","setCashCollection","checkCollection","setCheckCollection","selectedCollection","setSelectedCollection","collectionForDeposit","setCollectionForDeposit","tableRows","updateTableRowsInput","LoadingCashTable","LoadingCheckTable","setTotal","total","TotalCashForDeposit","loadingSearchByDepositSlip","Deposit","_queryFn","_mutationFn","_mutationFn2","_mutationFn3","_queryFn2","_queryFn3","cashTable","useRef","checkTable","selectedTable","collectionCheckTable","depositSearch","inputSearchRef","refSlipCode","refDateDepo","refBankAcctCode","refBankAcctName","bankDepositSearch","_refTempSlipCode","refBankAcctCodeTag","refBankAcctNameTag","refAcctID","refAcctName","refClassification","refSubAccount","refShortName","_useContext","useContext","AuthContext","myAxios","user","_useMultipleComponent","steps","_useState39","_useState40","currentStepIndex","setCurrentStepIndex","goTo","useMultipleComponent","_useState3","_useState4","_useState5","_useState6","selectedRows","setSelectedRows","_useState7","_useState8","_useState9","_useState10","tableRowsInputValue","setTableRowsInputValue","_useState11","_useState12","selectedRowsCashIndex","setSelectedRowsCashIndex","_useState13","_useState14","selectedRowsCheckedIndex","setSelectedRowsCheckedIndex","_useState15","_useState16","depositMode","setDepositMode","_useState17","_useState18","disabledFields","reduce","accumulator","currentValue","Check_No","parseFloat","Amount","toLocaleString","minimumFractionDigits","maximumFractionDigits","_useQuery","useQuery","queryKey","queryFn","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","get","headers","Authorization","accessToken","abrupt","sent","stop","apply","arguments","refetchOnWindowFocus","onSuccess","data","response","wait","then","current","slipcode","collectionID","LoadingDepositSlipCode","isLoading","RefetchDepositSlipCode","refetch","_useQueryModalTable","useQueryModalTable","link","url","queryUrlName","columns","headerName","uniqueId","responseDataKey","onSelected","selectedRowData","_selectedRowData$","_selectedRowData$2","_selectedRowData$3","_selectedRowData$4","_selectedRowData$5","_selectedRowData$6","_selectedRowData$7","Account_No","Account_Name","IDNo","Desc","Account_ID","Short","client_name","Sub_Acct","ShortName","closeDepositBanks","searchRef","ModalDepostitBanks","ModalComponent","openDepositBanks","openModal","isLoadingDepostitBanks","closeModal","_useMutation","useMutation","mutationKey","mutationFn","_x","_callee2","variables","_context2","post","res","resposnse","success","resetTables","resetRefs","refetchCashCollection","refetchCheckCollection","Swal","message","timer","addDepositMutation","mutate","addDepositMutationLoading","_useMutation2","_x2","_callee3","_context3","updateDepositMutation","updateDepositMutationLoading","_useMutation3","_x3","_callee4","_context4","obj","cash","check","checks","cash_breakdown","resetTable","format","Date","refDate","setDataFormated","setTimeout","forEach","d","SlipCode","checkbox","parentElement","querySelector","querySelectorAll","click","searchByDepositSlip","_useQueryModalTable2","closeDeposit","onCloseFunction","ModalDeposit","openDeposit","isLoadingDeposit","_useQuery2","_callee5","_context5","filteredData","filter","_toConsumableArray","loadingCashCollection","_useQuery3","_callee6","_context6","loadingCheckCollection","_Fragment","PageHelmet","flexDirection","padding","columnGap","marginBottom","LoadingButton","loading","fontSize","fontWeight","onKeyDown","_inputSearchRef$curre","preventDefault","document","focus","SearchIcon","sx","Button","variant","startIcon","AddIcon","color","_refBankAcctCode$curr","_refBankAcctCode$curr2","_refSlipCode$current","_refDateDepo$current","_refBankAcctCode$curr3","_refBankAcctName$curr","result","trim","depositSlip","depositdate","BankAcctCode","BankAcctName","BankAcctCodeTag","BankAcctNameTag","AcctID","AcctName","Classification","SubAccount","codeCondfirmationAlert","isUpdate","cb","userCodeConfirmation","JSON","stringify","saveCondfirmationAlert","isConfirm","SaveIcon","CloseIcon","text","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","isConfirmed","code","gap","AutorenewIcon","defaultValue","_refBankAcctCode$curr4","AccountBalanceIcon","_refBankAcctCode$curr5","readOnly","item","border","outline","backgroundColor","borderWidth","fontFamily","lineHeight","listStyle","margin","verticalAlign","whiteSpace","userSelect","touchAction","overflow","borderRadius","bottom","transition","slideAnimation","Provider","fields","CashCollection","CheckCollection","SelectedCollection","CollectionForDeposit","activeButton","_useContext2","marginTop","DepositTable","disbaleTable","rows","getSelectedItem","rowItm","colItm","rowIdx","colIdx","rowSelected","newSelected","Check_Date","Bank","Name","RowIndex","DRCode","ORNo","DRRemarks","TempOR","_useContext3","align","newSelectedCheckForDeposit","_useContext4","DepositTableSelected","_collectionCheckTable","_collectionCheckTable2","selectedData","getData","cashData","getSelectedRow","findIndex","indexOf","splice","setSelectedRow","dd","getColumns","setData","col","newSelectedData","_useContext5","useEffect","isTableSelectable","alignSelf","borderCollapse","borderBottom","borderRight","items","TrComponent","borderTop","colSpan","_useState19","_useState20","input1","setInput1","_useState21","_useState22","input2","setInput2","_useState23","_useState24","input3","setInput3","InputStyle","borderLeft","input1Value","toString","valueFor3","isNaN","parseInt","nextInput","_ref2$height","_ref2$width","_ref2$disbaleTable","parentElementRef","_useState25","_useState26","_useState27","_useState28","column","setColumn","_useState29","_useState30","selectedRow","_useState31","_useState32","selectedRowIndex","setSelectedRowIndex","totalRowWidth","a","b","newData","Fragment","boxShadow","checked","onDoubleClick","_ref3$height","_ref3$disbaleTable","_ref3$isTableSelectab","_useState33","_useState34","_useState35","_useState36","_useState37","_useState38","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx"],"sourceRoot":""}