{"version":3,"file":"static/js/5334.8b04bc04.chunk.js","mappings":"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","sources":["feautures/Admin/Task/Accounting/ChekPostponement.tsx","hooks/useMultipleComponent.tsx"],"sourcesContent":["import React, { useContext, useRef, useReducer, useState } from \"react\";\nimport {\n  FormControl,\n  InputLabel,\n  Select,\n  MenuItem,\n  Button,\n  InputAdornment,\n  IconButton,\n  OutlinedInput,\n  TextField,\n  Box,\n  Autocomplete,\n} from \"@mui/material\";\nimport LoadingButton from \"@mui/lab/LoadingButton\";\nimport Swal from \"sweetalert2\";\nimport { AuthContext } from \"../../../../components/AuthContext\";\nimport { useMutation, useQuery } from \"react-query\";\nimport Table from \"../../../../components/Table\";\nimport useMultipleComponent from \"../../../../hooks/useMultipleComponent\";\nimport RestartAltIcon from \"@mui/icons-material/RestartAlt\";\nimport CustomDatePicker from \"../../../../components/DatePicker\";\nimport { differenceInDays } from \"date-fns\";\nimport { setNewStateValue } from \"./PostDateChecks\";\nimport { NumericFormatCustom } from \"../../../../components/NumberFormat\";\nimport { addDays } from \"date-fns\";\nimport PageHelmet from \"../../../../components/Helmet\";\n\nconst requestInitialState = {\n  RPCD: \"\",\n  PNNo: \"\",\n  branch: \"\",\n  client: \"\",\n  check_no: \"\",\n  check_date: \"\",\n  bank: \"\",\n  amount: \"\",\n  new_check_date: new Date(),\n  check_reason: \"\",\n  requestMode: \"\",\n  rowMode: \"\",\n  rowId: \"\",\n  holdingFee: \"\",\n  penaltyCharge: \"\",\n  surplus: \"\",\n  deductedTo: \"\",\n  total: \"\",\n  paidVia: \"\",\n  paidInfo: \"\",\n  paidDate: new Date(),\n};\nconst approvedInitialState = {\n  RPCD: \"\",\n  PNNo: \"\",\n  branch: \"\",\n  client: \"\",\n  check_no: \"\",\n  check_date: \"\",\n  bank: \"\",\n  amount: \"\",\n  new_check_date: new Date(),\n  check_reason: \"\",\n  requestMode: \"\",\n  rowMode: \"\",\n  rowId: \"\",\n  holdingFee: \"\",\n  penaltyCharge: \"\",\n  surplus: \"\",\n  deductedTo: \"\",\n  total: \"\",\n  paidVia: \"\",\n  paidInfo: \"\",\n  paidDate: new Date(),\n  Requested_By: \"\",\n  Requested_Date: \"\",\n};\nconst reducer = (state: any, action: any) => {\n  switch (action.type) {\n    case \"UPDATE_FIELD\":\n      return {\n        ...state,\n        [action.field]: action.value,\n      };\n    default:\n      return state;\n  }\n};\nexport default function ChekPostponement() {\n  const { user } = useContext(AuthContext);\n\n  const { currentStepIndex, step, goTo } = useMultipleComponent([\n    <ChekPostponementRequest />,\n    <ChekPostponementApproved />,\n  ]);\n\n  const style: any = (idx: number) => ({\n    border: \"none\",\n    outline: \"none\",\n    backgroundColor: \"rgba(51, 51, 51, 0.05)\",\n    borderWidth: \"0\",\n    color: currentStepIndex === idx ? \"#7e22ce\" : \"#333333\",\n    cursor: \"pointer\",\n    display: \"inline-block\",\n    fontFamily: `\"Haas Grot Text R Web\", \"Helvetica Neue\", Helvetica, Arial, sans-serif`,\n    fontSize: \"14px\",\n    fontWeight: \"500\",\n    lineHeight: \"20px\",\n    listStyle: \"none\",\n    margin: \"0\",\n    padding: \"10px 12px\",\n    textAlign: \"center\",\n    transition: \"all 200ms\",\n    verticalAlign: \"baseline\",\n    whiteSpace: \"nowrap\",\n    userSelect: \"none\",\n    touchAction: \"manipulation\",\n    position: \"relative\",\n    overflow: \"hidden\",\n  });\n\n  return (\n    <>\n      <PageHelmet title=\"Check Posponement\" />\n      <div\n        style={{\n          width: \"100%\",\n          height: \"auto\",\n          maxHeight: \"100%\",\n          display: \"flex\",\n          flexDirection: \"column\",\n        }}\n      >\n        <div style={{ display: \"flex\" }}>\n          <button style={{ ...style(0) }} onClick={() => goTo(0)}>\n            <span\n              style={{\n                position: \"absolute\",\n                top: 0,\n                bottom: 0,\n                left: 0,\n                right: 0,\n                background: \"rgba(206, 214, 211, 0.18)\",\n                transition: \"all 200ms\",\n                transform: slideAnimation(currentStepIndex, 0),\n              }}\n            ></span>\n            Chek Postponement Request\n          </button>\n          {user?.userAccess === \"ADMIN\" && (\n            <button style={{ ...style(1) }} onClick={() => goTo(1)}>\n              <span\n                style={{\n                  position: \"absolute\",\n                  top: 0,\n                  bottom: 0,\n                  left: 0,\n                  right: 0,\n                  background: \"rgba(206, 214, 211, 0.18)\",\n                  transition: \"all 200ms\",\n                  transform: slideAnimation(currentStepIndex, 1),\n                }}\n              ></span>\n              Chek Postponement Approved\n            </button>\n          )}\n        </div>\n        <br />\n        {step}\n      </div>\n    </>\n\n  );\n}\nconst checkSelectedColumns = [\n  { field: \"Check_No\", headerName: \"Check No\", width: 170 },\n  { field: \"Bank\", headerName: \"Bank\", width: 170 },\n  { field: \"Check_Amnt\", headerName: \"Amount\", width: 170, type: \"number\" },\n  { field: \"Check_Date\", headerName: \"Old Deposit Date\", width: 170 },\n  { field: \"New_Check_Date\", headerName: \"New Deposit Date\", width: 170 },\n  { field: \"DateDiff\", headerName: \"Date Difference\", width: 170 },\n  { field: \"Reason\", headerName: \"Reason\", width: 170 },\n  { field: \"temp_id\", headerName: \" \", hide: true },\n  { field: \"Status\", headerName: \"Status\", width: 170 },\n];\n\nfunction calculateDifference(startDate: any, endDate: any) {\n  const differenceInDaysValue = differenceInDays(\n    new Date(endDate),\n    new Date(startDate)\n  );\n  return Math.abs(differenceInDaysValue);\n}\n\nfunction ChekPostponementRequest() {\n  const { myAxios, user } = useContext(AuthContext);\n  const [stateRequest, dispatchRequest] = useReducer(\n    reducer,\n    requestInitialState\n  );\n  const [pnnoClients, setPNNoClients] = useState<Array<any>>([]);\n  const [checkList, setCheckList] = useState<Array<any>>([]);\n  const [checkSelected, setCheckSelected] = useState([]);\n  const [rcpnList, setRCPNList] = useState([]);\n  const table = useRef<any>(null);\n  const datePickerRef1 = useRef<HTMLElement>(null);\n  const datePickerRef2 = useRef<HTMLElement>(null);\n\n  const { isLoading: loadingSearchPNNoClients } = useQuery({\n    queryKey: \"pullout-request-search-pnno-client_name\",\n    queryFn: async () =>\n      await myAxios.get(\n        `/task/accounting/check-postponement/reqeust/search-pnno-client`,\n        {\n          headers: {\n            Authorization: `Bearer ${user?.accessToken}`,\n          },\n        }\n      ),\n    refetchOnWindowFocus: false,\n    onSuccess: (data) => {\n      const response = data as any;\n      setPNNoClients(response.data.pnnoClients);\n    },\n  });\n  const {\n    isLoading: loadingChekPostponementRequest,\n    refetch: refetchChekPostponementRequest,\n  } = useQuery({\n    queryKey: \"pullout-request-id\",\n    queryFn: async () =>\n      await myAxios.get(`/task/accounting/check-postponement/reqeust/get-id`, {\n        headers: {\n          Authorization: `Bearer ${user?.accessToken}`,\n        },\n      }),\n    refetchOnWindowFocus: false,\n    onSuccess: (data) => {\n      const response = data as any;\n      dispatchRequest({\n        type: \"UPDATE_FIELD\",\n        field: \"RPCD\",\n        value: response.data.id[0].pullout_request,\n      });\n    },\n  });\n\n  const { mutate: mutateGetChecksList, isLoading: isLoadingGetChecksList } =\n    useMutation({\n      mutationKey: \"get-check-list\",\n      mutationFn: async (variable: any) =>\n        await myAxios.post(\n          \"/task/accounting/check-postponement/selected-pn-no-checklist\",\n          variable,\n          {\n            headers: {\n              Authorization: `Bearer ${user?.accessToken}`,\n            },\n          }\n        ),\n      onSuccess(res) {\n        setCheckList(res.data.selectedChecks);\n      },\n    });\n\n  const {\n    mutate: mutateGetRCPNSelectedDatails,\n    isLoading: isLoadingGetRCPNSelectedDatails,\n  } = useMutation({\n    mutationKey: \"get-rcpn-selected-datails\",\n    mutationFn: async (variable: any) =>\n      await myAxios.post(\n        \"/task/accounting/check-postponement/request/get-rcpn-selected-datails\",\n        variable,\n        {\n          headers: {\n            Authorization: `Bearer ${user?.accessToken}`,\n          },\n        }\n      ),\n    onSuccess(res) {\n      const data = res.data.rcpnDetails;\n      const itm = data[0];\n\n      setNewStateValue(dispatchRequest, itm);\n      const checkList = res.data.rcpnDetails.map((itm: any) => {\n        const DateDiff = calculateDifference(itm.Check_Date, itm.NewCheckDate);\n\n        return {\n          temp_id: itm.temp_id,\n          Bank: itm.Bank,\n          Check_Amnt: itm.Check_Amnt,\n          Check_Date: itm.Check_Date,\n          Check_No: itm.Check_No,\n          New_Check_Date: itm.NewCheckDate,\n          Reason: itm.reason,\n          DateDiff,\n          Status: itm.Status,\n        };\n      });\n\n      const newObj = {\n        RPCD: itm.RPCDNo,\n        PNNo: itm.PNNo,\n        branch: itm.ClientBranch,\n        client: itm.Name,\n        check_no: \"\",\n        check_date: \"\",\n        bank: \"\",\n        amount: \"\",\n        new_check_date: new Date(),\n        check_reason: \"\",\n        requestMode: \"edit\",\n        rowMode: \"\",\n        rowId: \"\",\n        holdingFee: itm.HoldingFees,\n        penaltyCharge: itm.PenaltyCharge,\n        surplus: itm.Surplus,\n        deductedTo: itm.Deducted_to,\n        total: (\n          parseFloat(itm.HoldingFees) +\n          parseFloat(itm.PenaltyCharge) +\n          parseFloat(itm.Surplus)\n        ).toLocaleString(\"en-US\", {\n          minimumFractionDigits: 2,\n          maximumFractionDigits: 2,\n        }),\n        paidVia: itm.PaidVia,\n        paidInfo: itm.PaidInfo,\n        paidDate: new Date(itm.PaidDate),\n      };\n      setNewStateValue(dispatchRequest, newObj);\n      setCheckSelected(checkList);\n      mutateGetChecksList({\n        PNNo: itm.PNo,\n      });\n    },\n  });\n\n  const { mutate: mutateGetRCPNList, isLoading: isLoadingGetRCPNList } =\n    useMutation({\n      mutationKey: \"get-rcpn-list\",\n      mutationFn: async (variable: any) =>\n        await myAxios.post(\n          \"/task/accounting/check-postponement/request/get-rcpn-list\",\n          variable,\n          {\n            headers: {\n              Authorization: `Bearer ${user?.accessToken}`,\n            },\n          }\n        ),\n      onSuccess(res) {\n        setRCPNList(res.data.rcpn);\n      },\n    });\n\n  function handleCheckAdd() {\n    if (stateRequest.check_no === \"\") {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"error\",\n        title: \"Please provide check no!\",\n        showConfirmButton: false,\n        timer: 1500,\n      });\n    }\n    if (stateRequest.check_date === \"\") {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"error\",\n        title: \"Please provide check date!\",\n        showConfirmButton: false,\n        timer: 1500,\n      });\n    }\n    if (stateRequest.bank === \"\") {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"error\",\n        title: \"Please provide bank!\",\n        showConfirmButton: false,\n        timer: 1500,\n      });\n    }\n    if (stateRequest.amount === \"\") {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"error\",\n        title: \"Please provide amount!\",\n        showConfirmButton: false,\n        timer: 1500,\n      });\n    }\n    if (stateRequest.check_reason === \"\") {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"error\",\n        title: \"Please provide reason!\",\n        showConfirmButton: false,\n        timer: 1500,\n      });\n    }\n    const DateDiff = calculateDifference(\n      stateRequest.check_date,\n      stateRequest.new_check_date\n    );\n\n    if (DateDiff > 15 || DateDiff < 0) {\n      return Swal.fire({\n        timer: 2500,\n        title: \"Invalid Date\",\n        icon: \"warning\",\n        position: \"center\",\n      });\n    }\n\n    setCheckSelected((d: any) => {\n      let temp_id =\n        d.length > 0 ? incrementTempId(d[d.length - 1].temp_id) : \"000\";\n      if (stateRequest.rowMode === \"update\") {\n        d = d.filter((items: any) => items.temp_id !== stateRequest.rowId);\n        temp_id = stateRequest.rowId;\n      }\n      const data = {\n        Check_No: stateRequest.check_no,\n        Bank: stateRequest.bank,\n        Check_Amnt: stateRequest.amount,\n        Check_Date: stateRequest.check_date,\n        New_Check_Date: new Date(\n          stateRequest.new_check_date\n        ).toLocaleDateString(\"en-US\", {\n          month: \"2-digit\",\n          day: \"2-digit\",\n          year: \"numeric\",\n        }),\n        DateDiff,\n        Reason: stateRequest.check_reason,\n        temp_id,\n      };\n      d = [...d, data];\n      return d;\n    });\n    setNewStateValue(dispatchRequest, {\n      ...stateRequest,\n      ...{\n        check_no: \"\",\n        check_date: \"\",\n        bank: \"\",\n        amount: \"\",\n        new_check_date: new Date(),\n        check_reason: \"\",\n        rowMode: \"\",\n        rowId: \"\",\n      },\n    });\n\n    function incrementTempId(str: string) {\n      let num = parseInt(str, 10);\n      num++;\n      return num.toString().padStart(str.length, \"0\");\n    }\n  }\n\n  const { mutate: mutateSave, isLoading: isLoadingSave } = useMutation({\n    mutationKey: \"check-postponement-save\",\n    mutationFn: async (variable: any) =>\n      await myAxios.post(\"/task/accounting/check-postponement/save\", variable, {\n        headers: {\n          Authorization: `Bearer ${user?.accessToken}`,\n        },\n      }),\n    onSuccess(res) {\n      if (res.data.success) {\n        setNewStateValue(dispatchRequest, requestInitialState);\n        refetchChekPostponementRequest();\n        setCheckSelected([]);\n        return Swal.fire({\n          position: \"center\",\n          icon: \"success\",\n          title: res.data.message,\n          timer: 1500,\n        });\n      }\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: res.data.message,\n        timer: 1500,\n      });\n    },\n  });\n\n  const handleInputChange = (e: any) => {\n    const { name, value } = e.target;\n    dispatchRequest({ type: \"UPDATE_FIELD\", field: name, value });\n  };\n\n  function handleOnSave() {\n    if (stateRequest.PNNo === \"\") {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"error\",\n        title: \"Please provide policy no!\",\n        showConfirmButton: false,\n        timer: 1500,\n      });\n    }\n    if (stateRequest.branch === \"\") {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"error\",\n        title: \"Please provide branch!\",\n        showConfirmButton: false,\n        timer: 1500,\n      });\n    }\n    if (stateRequest.client === \"\") {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"error\",\n        title: \"Please provide client name!\",\n        showConfirmButton: false,\n        timer: 1500,\n      });\n    }\n\n    if (stateRequest.paidVia === \"\") {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"error\",\n        title: \"Please provide how do be paid!\",\n        showConfirmButton: false,\n        timer: 1500,\n      });\n    }\n\n    if (stateRequest.paidInfo === \"\") {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"error\",\n        title: \"Please provide name of bank and branch!\",\n        showConfirmButton: false,\n        timer: 1500,\n      });\n    }\n    if (checkSelected.length <= 0) {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"error\",\n        title: \"Check Table is Empty!\",\n        showConfirmButton: false,\n        timer: 1500,\n      });\n    }\n    if (isNaN(parseFloat(stateRequest.holdingFee))) {\n      stateRequest.holdingFee = \"0.00\";\n    }\n    if (isNaN(parseFloat(stateRequest.penaltyCharge))) {\n      stateRequest.penaltyCharge = \"0.00\";\n    }\n    if (isNaN(parseFloat(stateRequest.surplus))) {\n      stateRequest.surplus = \"0.00\";\n    }\n    Swal.fire({\n      title: \"Are you sure?\",\n      text: \"You want to save it\",\n      icon: \"warning\",\n      showCancelButton: true,\n      confirmButtonColor: \"#3085d6\",\n      cancelButtonColor: \"#d33\",\n      confirmButtonText: \"Yes, save it!\",\n    }).then((result) => {\n      if (result.isConfirmed) {\n        if (checkSelected.length <= 0) {\n          return Swal.fire({\n            position: \"center\",\n            icon: \"warning\",\n            title: \"Check list is empty\",\n            timer: 3000,\n          });\n        }\n        mutateSave({\n          ...stateRequest,\n          checkSelected: JSON.stringify(checkSelected),\n        });\n      }\n    });\n  }\n\n  function FeeAndChargersTotal(value: any, list: Array<string>) {\n    let total = 0;\n    list.forEach((item) => {\n      let itemState = stateRequest[item];\n      if (isNaN(parseFloat(itemState.replace(/,/g, \"\")))) {\n        itemState = \"0\";\n      }\n      total = total + parseFloat(itemState.replace(/,/g, \"\"));\n    });\n    if (isNaN(parseFloat(value.replace(/,/g, \"\")))) {\n      value = \"0\";\n    }\n    dispatchRequest({\n      type: \"UPDATE_FIELD\",\n      field: \"total\",\n      value: (total + parseFloat(value.replace(/,/g, \"\"))).toFixed(2),\n    });\n  }\n  function FooterTotal() {\n    return (\n      <Box\n        sx={{\n          px: 2,\n          py: 1,\n          display: \"flex\",\n          justifyContent: \"flex-end\",\n          borderTop: \"2px solid #e2e8f0\",\n        }}\n      >\n        <strong>\n          Total:{\" \"}\n          {checkSelected\n            .reduce(\n              (sum: any, obj: any) =>\n                sum + parseFloat(obj.Check_Amnt.replace(/,/g, \"\")),\n              0\n            )\n            .toLocaleString(\"en-US\", {\n              style: \"decimal\",\n              minimumFractionDigits: 2,\n              maximumFractionDigits: 2,\n            })}\n        </strong>\n      </Box>\n    );\n  }\n\n  return (\n\n    <Box sx={{ width: \"100%\", height: \"100%\" }}>\n      <div style={{ display: \"flex\", justifyContent: \"flex-start\", gap: \"5px\", marginBottom: \"10px\" }}>\n        {stateRequest.requestMode === \"\" && (\n          <Button\n            sx={{\n              height: \"30px\",\n              fontSize: \"11px\",\n            }}\n            variant=\"contained\"\n            size=\"small\"\n            color=\"primary\"\n            onClick={() => {\n              dispatchRequest({\n                type: \"UPDATE_FIELD\",\n                field: \"requestMode\",\n                value: \"add\",\n              });\n            }}\n          >\n            New\n          </Button>\n        )}\n        {stateRequest.requestMode === \"\" && (\n          <Button\n            sx={{\n              height: \"30px\",\n              fontSize: \"11px\",\n            }}\n            variant=\"contained\"\n            size=\"small\"\n            color=\"secondary\"\n            onClick={() => {\n              mutateGetRCPNList({});\n              dispatchRequest({\n                type: \"UPDATE_FIELD\",\n                field: \"requestMode\",\n                value: \"edit\",\n              });\n              dispatchRequest({\n                type: \"UPDATE_FIELD\",\n                field: \"RPCD\",\n                value: \"\",\n              });\n            }}\n          >\n            Edit\n          </Button>\n        )}\n        {stateRequest.requestMode !== \"\" && (\n          <LoadingButton\n            disabled={stateRequest.requestMode === \"\"}\n            sx={{\n              height: \"30px\",\n              fontSize: \"11px\",\n            }}\n            variant=\"contained\"\n            size=\"small\"\n            color=\"success\"\n            onClick={handleOnSave}\n            loading={isLoadingSave}\n          >\n            Save\n          </LoadingButton>\n        )}\n        {stateRequest.requestMode !== \"\" && (\n          <Button\n            sx={{\n              height: \"30px\",\n              fontSize: \"11px\",\n            }}\n            variant=\"contained\"\n            size=\"small\"\n            color=\"error\"\n            onClick={() => {\n              Swal.fire({\n                title: \"Are you sure?\",\n                text: \"You won't be able to revert this!\",\n                icon: \"warning\",\n                showCancelButton: true,\n                confirmButtonColor: \"#3085d6\",\n                cancelButtonColor: \"#d33\",\n                confirmButtonText: \"Yes, cancel it!\",\n              }).then((result) => {\n                if (result.isConfirmed) {\n                  setNewStateValue(dispatchRequest, requestInitialState);\n                  refetchChekPostponementRequest();\n                  setCheckSelected([]);\n                }\n              });\n            }}\n          >\n            Cancel\n          </Button>\n        )}\n      </div>\n      <fieldset\n        style={{\n          paddingLeft: \"10px\",\n          paddingRight: \"10px\",\n          paddingTop: \"10px\",\n          paddingBottom: \"20px\",\n          border: \"1px solid #cbd5e1\",\n          borderRadius: \"5px\",\n        }}\n      >\n        <legend style={{ fontSize: \"14px\" }}>Account Information</legend>\n        <Box sx={{ display: \"flex\", gap: \"10px\", flexWrap: \"wrap\" }}>\n          {stateRequest.requestMode !== \"edit\" && (\n            <React.Fragment>\n              {loadingChekPostponementRequest ? (\n                <LoadingButton loading={loadingChekPostponementRequest} />\n              ) : (\n                <FormControl\n                  variant=\"outlined\"\n                  size=\"small\"\n                  disabled={stateRequest.requestMode === \"\"}\n                  sx={{\n                    width: \"170px\",\n                    \".MuiFormLabel-root\": {\n                      fontSize: \"14px\",\n                      background: \"white\",\n                      zIndex: 99,\n                      padding: \"0 3px\",\n                    },\n                    \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n                  }}\n                >\n                  <InputLabel htmlFor=\"pullout-req-id\">RCP NO.</InputLabel>\n                  <OutlinedInput\n                    sx={{\n                      height: \"27px\",\n                      fontSize: \"14px\",\n                    }}\n                    disabled={stateRequest.requestMode === \"\"}\n                    fullWidth\n                    label=\"RPCD No.\"\n                    name=\"RPCD\"\n                    value={stateRequest.RPCD}\n                    onChange={handleInputChange}\n                    onKeyDown={(e) => {\n                      if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n                        e.preventDefault();\n                        return handleOnSave();\n                      }\n                    }}\n                    readOnly={user?.department !== \"UCSMI\"}\n                    id=\"pullout-req-id\"\n                    endAdornment={\n                      <InputAdornment position=\"end\">\n                        <IconButton\n                          disabled={stateRequest.requestMode === \"\"}\n                          color=\"secondary\"\n                          edge=\"end\"\n                          onClick={() => {\n                            refetchChekPostponementRequest();\n                          }}\n                        >\n                          <RestartAltIcon />\n                        </IconButton>\n                      </InputAdornment>\n                    }\n                  />\n                </FormControl>\n              )}\n            </React.Fragment>\n          )}\n\n          {stateRequest.requestMode === \"edit\" && (\n            <Autocomplete\n              loading={isLoadingGetRCPNList}\n              freeSolo\n              options={rcpnList.map((itm: any) => itm.RPCDNo)}\n              value={stateRequest.RPCD}\n              onChange={(e, v: any) => {\n                if (v) {\n                  dispatchRequest({\n                    type: \"UPDATE_FIELD\",\n                    field: \"RPCD\",\n                    value: v,\n                  });\n                  mutateGetRCPNSelectedDatails({ RPCDNo: v });\n                }\n              }}\n              onInput={(e: any) => {\n                dispatchRequest({\n                  type: \"UPDATE_FIELD\",\n                  field: \"RPCD\",\n                  value: e.target.value,\n                });\n              }}\n              onBlur={(e) => {\n                dispatchRequest({\n                  type: \"UPDATE_FIELD\",\n                  field: \"RPCD\",\n                  value: stateRequest.RPCD,\n                });\n                mutateGetRCPNSelectedDatails({ RPCDNo: stateRequest.RPCD });\n              }}\n              renderInput={(params) => (\n                <TextField\n                  {...params}\n                  InputProps={{\n                    ...params.InputProps,\n                    style: { height: \"27px\", fontSize: \"14px\" },\n                  }}\n                  label=\"RPCD No.\"\n                />\n              )}\n              sx={{\n                flex: 1,\n                \".MuiFormLabel-root\": {\n                  fontSize: \"14px\",\n                },\n                \".MuiInputBase-input\": {\n                  width: \"100% !important\",\n                },\n                \".MuiFormLabel-root[data-shrink=false]\": {\n                  top: \"-5px\",\n                },\n                \".MuiAutocomplete-input \": {\n                  position: \"absolute\",\n                },\n              }}\n              size=\"small\"\n            />\n          )}\n\n          <Autocomplete\n            loading={loadingSearchPNNoClients}\n            disabled={stateRequest.requestMode !== \"add\"}\n            freeSolo\n            options={pnnoClients.map((itm: any) => itm.PNo)}\n            value={stateRequest.PNNo}\n            onChange={(e, v: any) => {\n              if (v) {\n                const options = pnnoClients;\n                const find = options.find((itm) => itm.PNo === v);\n                if (find !== undefined) {\n                  dispatchRequest({\n                    type: \"UPDATE_FIELD\",\n                    field: \"PNNo\",\n                    value: find.PNo,\n                  });\n                  dispatchRequest({\n                    type: \"UPDATE_FIELD\",\n                    field: \"client\",\n                    value: find.Name,\n                  });\n                  dispatchRequest({\n                    type: \"UPDATE_FIELD\",\n                    field: \"branch\",\n                    value: find.branch_name,\n                  });\n\n                  mutateGetChecksList({\n                    PNNo: find.PNo,\n                  });\n                  setNewStateValue(dispatchRequest, {\n                    check_date: \"\",\n                    new_check_date: new Date(),\n                    bank: \"\",\n                    amount: \"\",\n                    check_no: \"\",\n                  });\n                }\n              }\n            }}\n            onInput={(e: any) => {\n              dispatchRequest({\n                type: \"UPDATE_FIELD\",\n                field: \"PNNo\",\n                value: e.target.value,\n              });\n            }}\n            onBlur={(e) => {\n              const options = pnnoClients;\n              const find = options.find((itm) => itm.PNo === stateRequest.PNNo);\n              if (find !== undefined) {\n                dispatchRequest({\n                  type: \"UPDATE_FIELD\",\n                  field: \"PNNo\",\n                  value: find.PNo,\n                });\n                dispatchRequest({\n                  type: \"UPDATE_FIELD\",\n                  field: \"client\",\n                  value: find.Name,\n                });\n                dispatchRequest({\n                  type: \"UPDATE_FIELD\",\n                  field: \"branch\",\n                  value: find.branch_name,\n                });\n                mutateGetChecksList({\n                  PNNo: find.PNo,\n                });\n                setNewStateValue(dispatchRequest, {\n                  check_date: \"\",\n                  new_check_date: new Date(),\n                  bank: \"\",\n                  amount: \"\",\n                  check_no: \"\",\n                });\n              }\n            }}\n            renderOption={(props, option, attr) => {\n              return (\n                <li {...props} key={attr.index}>\n                  {option}\n                </li>\n              );\n            }}\n            renderInput={(params) => (\n              <TextField\n                {...params}\n                InputProps={{\n                  ...params.InputProps,\n                  style: { height: \"27px\", fontSize: \"14px\" },\n                }}\n                label=\"PN No.\"\n                disabled={stateRequest.requestMode !== \"add\"}\n              />\n            )}\n            sx={{\n              flex: 1,\n              \".MuiFormLabel-root\": {\n                fontSize: \"14px\",\n              },\n              \".MuiInputBase-input\": {\n                width: \"100% !important\",\n              },\n              \".MuiFormLabel-root[data-shrink=false]\": {\n                top: \"-5px\",\n              },\n              \".MuiAutocomplete-input \": {\n                position: \"absolute\",\n              },\n            }}\n            size=\"small\"\n          />\n          <TextField\n            disabled={stateRequest.requestMode !== \"add\"}\n            variant=\"outlined\"\n            size=\"small\"\n            label=\"Branch\"\n            name=\"branch\"\n            value={stateRequest.branch}\n            onChange={handleInputChange}\n            InputProps={{\n              style: { height: \"27px\", fontSize: \"14px\" },\n              readOnly: true,\n            }}\n            sx={{\n              width: \"250px\",\n              height: \"27px\",\n              \".MuiFormLabel-root\": { fontSize: \"14px\" },\n              \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n            }}\n            onKeyDown={(e) => {\n              if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n                e.preventDefault();\n                return handleOnSave();\n              }\n            }}\n          />\n          <Autocomplete\n            loading={loadingSearchPNNoClients}\n            disabled={stateRequest.requestMode !== \"add\"}\n            freeSolo\n            options={pnnoClients.map((itm: any) => itm.Name)}\n            value={stateRequest.client}\n            onChange={(e, v: any) => {\n              if (v) {\n                const options = pnnoClients;\n                const find = options.find((itm) => itm.Name === v);\n                if (find !== undefined) {\n                  dispatchRequest({\n                    type: \"UPDATE_FIELD\",\n                    field: \"PNNo\",\n                    value: find.PNo,\n                  });\n                  dispatchRequest({\n                    type: \"UPDATE_FIELD\",\n                    field: \"client\",\n                    value: find.Name,\n                  });\n                  dispatchRequest({\n                    type: \"UPDATE_FIELD\",\n                    field: \"branch\",\n                    value: find.branch_name,\n                  });\n                  mutateGetChecksList({\n                    PNNo: find.PNo,\n                  });\n\n                  setNewStateValue(dispatchRequest, {\n                    check_date: \"\",\n                    new_check_date: new Date(),\n                    bank: \"\",\n                    amount: \"\",\n                    check_no: \"\",\n                  });\n                }\n              }\n            }}\n            onInput={(e: any) => {\n              dispatchRequest({\n                type: \"UPDATE_FIELD\",\n                field: \"client\",\n                value: e.target.value,\n              });\n            }}\n            onBlur={(e) => {\n              const options = pnnoClients;\n              const find = options.find(\n                (itm) => itm.Name === stateRequest.client\n              );\n              if (find !== undefined) {\n                dispatchRequest({\n                  type: \"UPDATE_FIELD\",\n                  field: \"PNNo\",\n                  value: find.PNo,\n                });\n                dispatchRequest({\n                  type: \"UPDATE_FIELD\",\n                  field: \"client\",\n                  value: find.Name,\n                });\n                dispatchRequest({\n                  type: \"UPDATE_FIELD\",\n                  field: \"branch\",\n                  value: find.branch_name,\n                });\n\n                dispatchRequest({\n                  type: \"UPDATE_FIELD\",\n                  field: \"check_no\",\n                  value: find.Check_No,\n                });\n\n                mutateGetChecksList({\n                  PNNo: find.PNo,\n                });\n                setNewStateValue(dispatchRequest, {\n                  check_date: \"\",\n                  new_check_date: new Date(),\n                  bank: \"\",\n                  amount: \"\",\n                  check_no: \"\",\n                });\n              }\n            }}\n            renderOption={(props, option, attr) => {\n              return (\n                <li {...props} key={attr.index}>\n                  {option}\n                </li>\n              );\n            }}\n            renderInput={(params) => (\n              <TextField\n                {...params}\n                InputProps={{\n                  ...params.InputProps,\n                  style: { height: \"27px\", fontSize: \"14px\" },\n                }}\n                label=\"Account Name\"\n                disabled={stateRequest.requestMode !== \"add\"}\n              />\n            )}\n            sx={{\n              flex: 1,\n              \".MuiFormLabel-root\": {\n                fontSize: \"14px\",\n              },\n              \".MuiInputBase-input\": {\n                width: \"100% !important\",\n              },\n              \".MuiFormLabel-root[data-shrink=false]\": {\n                top: \"-5px\",\n              },\n              \".MuiAutocomplete-input \": {\n                position: \"absolute\",\n              },\n            }}\n            size=\"small\"\n          />\n        </Box>\n      </fieldset>\n      <fieldset\n        style={{\n          paddingLeft: \"10px\",\n          paddingRight: \"10px\",\n          paddingTop: \"10px\",\n          paddingBottom: \"20px\",\n          border: \"1px solid #cbd5e1\",\n          borderRadius: \"5px\",\n        }}\n      >\n        <legend style={{ fontSize: \"14px\" }}>Check Details</legend>\n        <Box sx={{ display: \"flex\", gap: \"10px\", flexWrap: \"wrap\" }}>\n          <Autocomplete\n            loading={isLoadingGetChecksList}\n            freeSolo\n            options={checkList.map((itm: any) => itm.Check_No)}\n            value={stateRequest.check_no}\n            onChange={(e, v: any) => {\n              if (v) {\n                const options = checkList;\n                const find = options.find((itm) => itm.Check_No === v);\n                if (find !== undefined) {\n                  const newDate = addDays(new Date(find.Check_Date), 7);\n\n                  dispatchRequest({\n                    type: \"UPDATE_FIELD\",\n                    field: \"check_no\",\n                    value: find.Check_No,\n                  });\n                  dispatchRequest({\n                    type: \"UPDATE_FIELD\",\n                    field: \"check_date\",\n                    value: find.Check_Date,\n                  });\n                  dispatchRequest({\n                    type: \"UPDATE_FIELD\",\n                    field: \"bank\",\n                    value: find.Bank,\n                  });\n                  dispatchRequest({\n                    type: \"UPDATE_FIELD\",\n                    field: \"amount\",\n                    value: find.Check_Amnt,\n                  });\n                  dispatchRequest({\n                    type: \"UPDATE_FIELD\",\n                    field: \"new_check_date\",\n                    value: newDate,\n                  });\n                }\n              }\n            }}\n            onInput={(e: any) => {\n              dispatchRequest({\n                type: \"UPDATE_FIELD\",\n                field: \"check_no\",\n                value: e.target.value,\n              });\n            }}\n            onBlur={(e) => {\n              const options = checkList;\n              const find = options.find(\n                (itm) => itm.Check_No === stateRequest.check_no\n              );\n              if (find !== undefined) {\n                const newDate = addDays(new Date(find.Check_Date), 7);\n\n                dispatchRequest({\n                  type: \"UPDATE_FIELD\",\n                  field: \"check_no\",\n                  value: find.Check_No,\n                });\n                dispatchRequest({\n                  type: \"UPDATE_FIELD\",\n                  field: \"check_date\",\n                  value: find.Check_Date,\n                });\n                dispatchRequest({\n                  type: \"UPDATE_FIELD\",\n                  field: \"bank\",\n                  value: find.Bank,\n                });\n                dispatchRequest({\n                  type: \"UPDATE_FIELD\",\n                  field: \"amount\",\n                  value: find.Check_Amnt,\n                });\n                dispatchRequest({\n                  type: \"UPDATE_FIELD\",\n                  field: \"new_check_date\",\n                  value: newDate,\n                });\n              }\n            }}\n            renderOption={(props, option, attr) => {\n              return (\n                <li {...props} key={attr.index}>\n                  {option}\n                </li>\n              );\n            }}\n            renderInput={(params) => (\n              <TextField\n                {...params}\n                InputProps={{\n                  ...params.InputProps,\n                  style: { height: \"27px\", fontSize: \"14px\" },\n                }}\n                label=\"Check No.\"\n              />\n            )}\n            sx={{\n              flex: 1,\n              \".MuiFormLabel-root\": {\n                fontSize: \"14px\",\n              },\n              \".MuiInputBase-input\": {\n                width: \"100% !important\",\n              },\n              \".MuiFormLabel-root[data-shrink=false]\": {\n                top: \"-5px\",\n              },\n              \".MuiAutocomplete-input \": {\n                position: \"absolute\",\n              },\n            }}\n            size=\"small\"\n          />\n          <TextField\n            variant=\"outlined\"\n            size=\"small\"\n            label=\"Date\"\n            name=\"check_date\"\n            disabled={stateRequest.requestMode === \"\"}\n            value={stateRequest.check_date}\n            onChange={handleInputChange}\n            InputProps={{\n              style: { height: \"27px\", fontSize: \"14px\" },\n              readOnly: true,\n            }}\n            sx={{\n              width: \"250px\",\n              height: \"27px\",\n              \".MuiFormLabel-root\": { fontSize: \"14px\" },\n              \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n            }}\n            onKeyDown={(e) => {\n              if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n                e.preventDefault();\n                return handleCheckAdd();\n              }\n            }}\n          />\n          <TextField\n            fullWidth\n            variant=\"outlined\"\n            size=\"small\"\n            label=\"Bank\"\n            name=\"bank\"\n            disabled={stateRequest.requestMode === \"\"}\n            value={stateRequest.bank}\n            onChange={handleInputChange}\n            InputProps={{\n              style: { height: \"27px\", fontSize: \"14px\" },\n              readOnly: true,\n            }}\n            sx={{\n              flex: 1,\n              minWidth: \"300px\",\n              height: \"27px\",\n              \".MuiFormLabel-root\": { fontSize: \"14px\" },\n              \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n            }}\n            onKeyDown={(e) => {\n              if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n                e.preventDefault();\n                return handleCheckAdd();\n              }\n            }}\n          />\n          <TextField\n            fullWidth\n            variant=\"outlined\"\n            size=\"small\"\n            label=\"Amount\"\n            name=\"amount\"\n            disabled={stateRequest.requestMode === \"\"}\n            value={stateRequest.amount}\n            onChange={handleInputChange}\n            InputProps={{\n              style: { height: \"27px\", fontSize: \"14px\" },\n              readOnly: true,\n            }}\n            onKeyDown={(e) => {\n              if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n                e.preventDefault();\n                return handleCheckAdd();\n              }\n            }}\n            sx={{\n              flex: 1,\n              minWidth: \"300px\",\n              height: \"27px\",\n              \".MuiFormLabel-root\": { fontSize: \"14px\" },\n              \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n            }}\n          />\n          <CustomDatePicker\n            disabled={stateRequest.requestMode === \"\"}\n            fullWidth={false}\n            label=\"New Date\"\n            onChange={(value: any) => {\n              dispatchRequest({\n                type: \"UPDATE_FIELD\",\n                field: \"new_check_date\",\n                value: value,\n              });\n            }}\n            value={new Date(stateRequest.new_check_date)}\n            onKeyDown={(e: any) => {\n              if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n                const timeout = setTimeout(() => {\n                  datePickerRef1.current?.querySelector(\"button\")?.click();\n                  clearTimeout(timeout);\n                }, 150);\n              }\n            }}\n            datePickerRef={datePickerRef1}\n            textField={{\n              InputLabelProps: {\n                style: {\n                  fontSize: \"14px\",\n                },\n              },\n              InputProps: {\n                style: { height: \"27px\", fontSize: \"14px\" },\n              },\n            }}\n          />\n          <div\n            style={{\n              display: \"flex\",\n              columnGap: \"10px\",\n              alignItems: \"center\",\n            }}\n          >\n            <TextField\n              disabled={stateRequest.requestMode === \"\"}\n              fullWidth\n              variant=\"outlined\"\n              size=\"small\"\n              label=\"Reason\"\n              name=\"check_reason\"\n              value={stateRequest.check_reason}\n              onChange={handleInputChange}\n              InputProps={{\n                style: { height: \"27px\", fontSize: \"14px\" },\n              }}\n              sx={{\n                flex: 1,\n                minWidth: \"300px\",\n                height: \"25px\",\n                \".MuiFormLabel-root\": { fontSize: \"14px\" },\n                \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n              }}\n              onKeyDown={(e) => {\n                if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n                  e.preventDefault();\n                  return handleCheckAdd();\n                }\n              }}\n            />\n            <Button\n              variant=\"contained\"\n              color=\"success\"\n              onClick={() => handleCheckAdd()}\n              sx={{\n                height: \"30px\",\n                fontSize: \"11px\",\n              }}\n              disabled={stateRequest.requestMode === \"\"}\n            >\n              {stateRequest.rowMode === \"update\" ? \"Update Check\" : \"Add Check\"}\n            </Button>\n          </div>\n        </Box>\n      </fieldset>\n      <div\n        style={{\n          marginTop: \"10px\",\n          width: \"100%\",\n          position: \"relative\",\n          height: \"420px\",\n        }}\n      >\n        <Box\n          style={{\n            height: \"400px\",\n            width: \"100%\",\n            overflowX: \"scroll\",\n            position: \"absolute\",\n          }}\n        >\n          <Table\n            ref={table}\n            isLoading={isLoadingGetRCPNSelectedDatails}\n            columns={checkSelectedColumns}\n            rows={checkSelected}\n            table_id={\"temp_id\"}\n            isSingleSelection={true}\n            isRowFreeze={false}\n            dataSelection={(selection, data, code) => {\n              const rowSelected = data.filter(\n                (item: any) => item.temp_id === selection[0]\n              )[0];\n              if (rowSelected === undefined) {\n                setNewStateValue(dispatchRequest, {\n                  ...stateRequest,\n                  ...{\n                    check_no: \"\",\n                    check_date: \"\",\n                    bank: \"\",\n                    amount: \"\",\n                    new_check_date: new Date(),\n                    check_reason: \"\",\n                    rowMode: \"\",\n                    rowId: \"\",\n                  },\n                });\n                return;\n              }\n\n              if (code === \"Delete\" || code === \"Backspace\") {\n                Swal.fire({\n                  title: `Are you sure you want to delete?`,\n                  text: \"You won't be able to revert this!\",\n                  icon: \"warning\",\n                  showCancelButton: true,\n                  confirmButtonColor: \"#3085d6\",\n                  cancelButtonColor: \"#d33\",\n                  confirmButtonText: \"Yes, delete it!\",\n                }).then((result) => {\n                  if (result.isConfirmed) {\n                    return setCheckSelected((d) => {\n                      return d.filter(\n                        (items: any) => items.temp_id !== selection[0]\n                      );\n                    });\n                  }\n                });\n                setNewStateValue(dispatchRequest, {\n                  ...stateRequest,\n                  ...{\n                    check_no: \"\",\n                    check_date: \"\",\n                    bank: \"\",\n                    amount: \"\",\n                    new_check_date: new Date(),\n                    check_reason: \"\",\n                    rowMode: \"\",\n                    rowId: \"\",\n                  },\n                });\n                return;\n              }\n              setNewStateValue(dispatchRequest, {\n                ...stateRequest,\n                ...{\n                  check_no: rowSelected.Check_No,\n                  check_date: rowSelected.Check_Date,\n                  bank: rowSelected.Bank,\n                  amount: rowSelected.Check_Amnt,\n                  new_check_date: rowSelected.New_Check_Date,\n                  check_reason: rowSelected.Reason,\n                  rowMode: \"update\",\n                  rowId: rowSelected.temp_id,\n                },\n              });\n            }}\n            getCellClassName={(params) => {\n              if (params.field === \"Status\" && params.value === \"APPROVED\") {\n                return \"approved\";\n              } else if (\n                params.field === \"Status\" &&\n                params.value === \"PENDING\"\n              ) {\n                return \"pending\";\n              } else if (\n                params.field === \"Status\" &&\n                params.value === \"DISAPPROVED\"\n              ) {\n                return \"disapproved\";\n              } else {\n                return \"\";\n              }\n            }}\n            footerChildren={() => <FooterTotal />}\n            footerPaginationPosition=\"left-right\"\n            showFooterSelectedCount={false}\n          />\n        </Box>\n      </div>\n      <fieldset\n        style={{\n          paddingLeft: \"10px\",\n          paddingRight: \"10px\",\n          paddingTop: \"10px\",\n          paddingBottom: \"20px\",\n          border: \"1px solid #cbd5e1\",\n          borderRadius: \"5px\",\n        }}\n      >\n        <legend style={{ fontSize: \"14px\" }}>Fees and Charges</legend>\n        <Box\n          sx={{\n            display: \"grid\",\n            gap: \"10px\",\n            gridTemplateColumns: \"repeat(4,1fr)\",\n          }}\n        >\n          <TextField\n            onKeyDown={(e) => {\n              if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n                e.preventDefault();\n                return handleOnSave();\n              }\n            }}\n            disabled={stateRequest.requestMode === \"\"}\n            variant=\"outlined\"\n            size=\"small\"\n            label=\"Holding Fee\"\n            name=\"holdingFee\"\n            placeholder=\"0.00\"\n            value={stateRequest.holdingFee}\n            onChange={(e) => {\n              handleInputChange(e);\n              FeeAndChargersTotal(e.target.value, [\"penaltyCharge\", \"surplus\"]);\n            }}\n            InputProps={{\n              inputComponent: NumericFormatCustom as any,\n              style: { height: \"27px\", fontSize: \"14px\" },\n            }}\n            sx={{\n              flex: 1,\n              height: \"27px\",\n              \".MuiFormLabel-root\": { fontSize: \"14px\" },\n              \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n            }}\n            onBlur={() => {\n              dispatchRequest({\n                type: \"UPDATE_FIELD\",\n                field: \"holdingFee\",\n                value: parseFloat(\n                  stateRequest.holdingFee.replace(/,/g, \"\")\n                ).toFixed(2),\n              });\n            }}\n          />\n          <TextField\n            onKeyDown={(e) => {\n              if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n                e.preventDefault();\n                return handleOnSave();\n              }\n            }}\n            disabled={stateRequest.requestMode === \"\"}\n            variant=\"outlined\"\n            size=\"small\"\n            label=\"Penalty Charge\"\n            name=\"penaltyCharge\"\n            value={stateRequest.penaltyCharge}\n            onChange={(e) => {\n              handleInputChange(e);\n              FeeAndChargersTotal(e.target.value, [\"holdingFee\", \"surplus\"]);\n            }}\n            placeholder=\"0.00\"\n            InputProps={{\n              inputComponent: NumericFormatCustom as any,\n              style: { height: \"27px\", fontSize: \"14px\" },\n            }}\n            sx={{\n              flex: 1,\n              height: \"27px\",\n              \".MuiFormLabel-root\": { fontSize: \"14px\" },\n              \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n            }}\n            onBlur={() => {\n              dispatchRequest({\n                type: \"UPDATE_FIELD\",\n                field: \"penaltyCharge\",\n                value: parseFloat(\n                  stateRequest.penaltyCharge.replace(/,/g, \"\")\n                ).toFixed(2),\n              });\n            }}\n          />\n          <TextField\n            onKeyDown={(e) => {\n              if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n                e.preventDefault();\n                return handleOnSave();\n              }\n            }}\n            disabled={stateRequest.requestMode === \"\"}\n            variant=\"outlined\"\n            size=\"small\"\n            label=\"Surplus\"\n            name=\"surplus\"\n            placeholder=\"0.00\"\n            value={stateRequest.surplus}\n            onChange={(e) => {\n              handleInputChange(e);\n              FeeAndChargersTotal(e.target.value, [\n                \"holdingFee\",\n                \"penaltyCharge\",\n              ]);\n            }}\n            InputProps={{\n              inputComponent: NumericFormatCustom as any,\n              style: { height: \"27px\", fontSize: \"14px\" },\n            }}\n            sx={{\n              flex: 1,\n              height: \"27px\",\n              \".MuiFormLabel-root\": { fontSize: \"14px\" },\n              \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n            }}\n            onBlur={() => {\n              dispatchRequest({\n                type: \"UPDATE_FIELD\",\n                field: \"surplus\",\n                value: parseFloat(\n                  stateRequest.surplus.replace(/,/g, \"\")\n                ).toFixed(2),\n              });\n            }}\n          />\n          <TextField\n            onKeyDown={(e) => {\n              if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n                e.preventDefault();\n                return handleOnSave();\n              }\n            }}\n            disabled={stateRequest.requestMode === \"\"}\n            variant=\"outlined\"\n            size=\"small\"\n            label=\"Deducted to:\"\n            name=\"deductedTo\"\n            value={stateRequest.deductedTo}\n            onChange={handleInputChange}\n            InputProps={{\n              style: { height: \"27px\", fontSize: \"14px\" },\n            }}\n            sx={{\n              flex: 1,\n              height: \"27px\",\n              \".MuiFormLabel-root\": { fontSize: \"14px\" },\n              \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n            }}\n          />\n          <FormControl\n            disabled={stateRequest.requestMode === \"\"}\n            size=\"small\"\n            variant=\"outlined\"\n            sx={{\n              flex: 1,\n              \".MuiFormLabel-root\": {\n                fontSize: \"14px\",\n                background: \"white\",\n                zIndex: 99,\n                padding: \"0 3px\",\n              },\n              \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n            }}\n          >\n            <InputLabel id=\"label-selection-reason\">How to be paid</InputLabel>\n            <Select\n              labelId=\"label-selection-reason\"\n              autoWidth\n              sx={{\n                height: \"27px\",\n                fontSize: \"14px\",\n              }}\n              name=\"paidVia\"\n              value={stateRequest.paidVia}\n              onChange={handleInputChange}\n              readOnly={stateRequest.requestMode === \"\"}\n            >\n              <MenuItem value=\"\"></MenuItem>\n              <MenuItem value=\"Over The Counter\">Over The Counter</MenuItem>\n              <MenuItem value={\"direct deposit\"}>Direct Deposit</MenuItem>\n            </Select>\n          </FormControl>\n          <TextField\n            onKeyDown={(e) => {\n              if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n                e.preventDefault();\n                return handleOnSave();\n              }\n            }}\n            disabled={stateRequest.requestMode === \"\"}\n            variant=\"outlined\"\n            size=\"small\"\n            label=\"Name of Bank & Branch\"\n            name=\"paidInfo\"\n            value={stateRequest.paidInfo}\n            onChange={handleInputChange}\n            InputProps={{\n              style: { height: \"27px\", fontSize: \"14px\" },\n              readOnly: stateRequest.requestMode === \"edit\",\n            }}\n            sx={{\n              flex: 1,\n              gridColumn: \"2 / span 2\",\n\n              height: \"27px\",\n              \".MuiFormLabel-root\": { fontSize: \"14px\" },\n              \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n            }}\n          />\n          <CustomDatePicker\n            disabled={stateRequest.requestMode === \"\"}\n            fullWidth={false}\n            label=\"Date & Time of Deposit\"\n            onChange={(value: any) => {\n              dispatchRequest({\n                type: \"UPDATE_FIELD\",\n                field: \"paidDate\",\n                value: value,\n              });\n            }}\n            value={new Date(stateRequest.paidDate)}\n            onKeyDown={(e: any) => {\n              if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n                const timeout = setTimeout(() => {\n                  datePickerRef2.current?.querySelector(\"button\")?.click();\n                  clearTimeout(timeout);\n                }, 150);\n              }\n            }}\n            datePickerRef={datePickerRef2}\n            textField={{\n              InputLabelProps: {\n                style: {\n                  fontSize: \"14px\",\n                },\n              },\n              InputProps: {\n                style: { height: \"27px\", fontSize: \"14px\" },\n              },\n            }}\n          />\n          <TextField\n            disabled={stateRequest.requestMode === \"\"}\n            variant=\"outlined\"\n            size=\"small\"\n            label=\"total\"\n            name=\"total\"\n            value={stateRequest.total}\n            onChange={handleInputChange}\n            InputProps={{\n              style: { height: \"27px\", fontSize: \"14px\" },\n              inputComponent: NumericFormatCustom as any,\n              readOnly: true,\n            }}\n            sx={{\n              flex: 1,\n              height: \"27px\",\n              \".MuiFormLabel-root\": { fontSize: \"14px\" },\n              \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n            }}\n            onKeyDown={(e) => {\n              if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n                e.preventDefault();\n                return handleOnSave();\n              }\n            }}\n          />\n        </Box>\n      </fieldset>\n    </Box>\n\n  );\n\n}\nfunction ChekPostponementApproved() {\n  const { myAxios, user } = useContext(AuthContext);\n  const [stateApproved, dispatchApproved] = useReducer(\n    reducer,\n    approvedInitialState\n  );\n  const [rcpnList, setRCPNList] = useState([]);\n  const [checkSelected, setCheckSelected] = useState([]);\n  const datePickerRef = useRef<HTMLElement>(null);\n  const table = useRef<any>(null);\n  const handleInputChange = (e: any) => {\n    const { name, value } = e.target;\n    dispatchApproved({ type: \"UPDATE_FIELD\", field: name, value });\n  };\n\n  const { isLoading: isLoadingGetRCPNList, refetch } = useQuery({\n    queryKey: \"get-rcpn-list\",\n    queryFn: async () =>\n      await myAxios.get(\n        \"/task/accounting/check-postponement/request/get-rcpn-list\",\n        {\n          headers: {\n            Authorization: `Bearer ${user?.accessToken}`,\n          },\n        }\n      ),\n    onSuccess(res) {\n      setRCPNList(res.data.rcpn);\n    },\n    refetchOnWindowFocus: false,\n  });\n\n  const {\n    mutate: mutateGetRCPNSelectedDatails,\n    isLoading: isLoadingGetRCPNSelectedDatails,\n  } = useMutation({\n    mutationKey: \"get-rcpn-selected-datails\",\n    mutationFn: async (variable: any) =>\n      await myAxios.post(\n        \"/task/accounting/check-postponement/request/get-rcpn-selected-datails\",\n        variable,\n        {\n          headers: {\n            Authorization: `Bearer ${user?.accessToken}`,\n          },\n        }\n      ),\n    onSuccess(res) {\n      const data = res.data.rcpnDetails;\n      const itm = data[0];\n\n      const checkList = res.data.rcpnDetails.map((itm: any) => {\n        const DateDiff = calculateDifference(itm.Check_Date, itm.NewCheckDate);\n\n        return {\n          temp_id: itm.temp_id,\n          Bank: itm.Bank,\n          Check_Amnt: itm.Check_Amnt,\n          Check_Date: itm.Check_Date,\n          Check_No: itm.Check_No,\n          New_Check_Date: itm.NewCheckDate,\n          Reason: itm.reason,\n          DateDiff,\n          Status: itm.Status,\n        };\n      });\n      console.log(itm);\n      const newObj = {\n        RPCD: itm.RPCDNo,\n        PNNo: itm.PNNo,\n        branch: itm.ClientBranch,\n        client: itm.Name,\n        check_no: \"\",\n        check_date: \"\",\n        bank: \"\",\n        amount: \"\",\n        new_check_date: new Date(),\n        check_reason: \"\",\n        requestMode: \"edit\",\n        rowMode: \"\",\n        rowId: \"\",\n        holdingFee: itm.HoldingFees,\n        penaltyCharge: itm.PenaltyCharge,\n        surplus: itm.Surplus,\n        deductedTo: itm.Deducted_to,\n        total: (\n          parseFloat(itm.HoldingFees) +\n          parseFloat(itm.PenaltyCharge) +\n          parseFloat(itm.Surplus)\n        ).toLocaleString(\"en-US\", {\n          minimumFractionDigits: 2,\n          maximumFractionDigits: 2,\n        }),\n        paidVia: itm.PaidVia,\n        paidInfo: itm.PaidInfo,\n        paidDate: new Date(itm.PaidDate),\n        Requested_By: itm.Requested_By,\n        Requested_Date: itm.Requested_Date,\n      };\n      setNewStateValue(dispatchApproved, newObj);\n      setCheckSelected(checkList);\n    },\n  });\n\n  //=======================\n  const { mutate: mutateApprovedRequest, isLoading: isLoadingApprovedRequest } =\n    useMutation({\n      mutationKey: \"approved-request\",\n      mutationFn: async (variable: any) =>\n        await myAxios.post(\n          \"/task/accounting/check-postponement/approved-request\",\n          variable,\n          {\n            headers: {\n              Authorization: `Bearer ${user?.accessToken}`,\n            },\n          }\n        ),\n      onSuccess(res) {\n        if (res.data.success) {\n          setNewStateValue(dispatchApproved, approvedInitialState);\n          setCheckSelected([]);\n          return Swal.fire({\n            position: \"center\",\n            icon: \"success\",\n            title: res.data.message,\n            timer: 1500,\n          });\n        }\n        return Swal.fire({\n          position: \"center\",\n          icon: \"warning\",\n          title: res.data.message,\n          timer: 1500,\n        });\n      },\n    });\n  const {\n    mutate: mutateDisApprovedRequest,\n    isLoading: isLoadingDisApprovedRequest,\n  } = useMutation({\n    mutationKey: \"approved-request\",\n    mutationFn: async (variable: any) =>\n      await myAxios.post(\n        \"/task/accounting/check-postponement/approved-request\",\n        variable,\n        {\n          headers: {\n            Authorization: `Bearer ${user?.accessToken}`,\n          },\n        }\n      ),\n    onSuccess(res) {\n      if (res.data.success) {\n        setNewStateValue(dispatchApproved, approvedInitialState);\n        setCheckSelected([]);\n        refetch();\n        return Swal.fire({\n          position: \"center\",\n          icon: \"success\",\n          title: res.data.message,\n          timer: 1500,\n        });\n      }\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: res.data.message,\n        timer: 1500,\n      });\n    },\n  });\n\n  function FooterTotal() {\n    return (\n      <Box\n        sx={{\n          px: 2,\n          py: 1,\n          display: \"flex\",\n          justifyContent: \"flex-end\",\n          borderTop: \"2px solid #e2e8f0\",\n        }}\n      >\n        <strong>\n          Total:{\" \"}\n          {checkSelected\n            .reduce(\n              (sum: any, obj: any) =>\n                sum + parseFloat(obj.Check_Amnt.replace(/,/g, \"\")),\n              0\n            )\n            .toLocaleString(\"en-US\", {\n              style: \"decimal\",\n              minimumFractionDigits: 2,\n              maximumFractionDigits: 2,\n            })}\n        </strong>\n      </Box>\n    );\n  }\n\n  return (\n    <Box sx={{ width: \"100%\", height: \"100%\" }}>\n      <div style={{ display: \"flex\", justifyContent: \"flex-end\", gap: \"5px\" }}>\n        <LoadingButton\n          disabled={checkSelected.length <= 0}\n          loading={isLoadingApprovedRequest}\n          sx={{\n            height: \"30px\",\n            fontSize: \"11px\",\n          }}\n          variant=\"contained\"\n          size=\"small\"\n          color=\"success\"\n          onClick={() => {\n            Swal.fire({\n              title: `Are you sure you want to approved ${stateApproved.RPCD}?`,\n              html: `<p>You want to <span style=\"color:green\">Approved</span> <strong>${stateApproved.RPCD}</strong></p><p>Enter Code.</p>`,\n              input: \"text\",\n              inputAttributes: {\n                autocapitalize: \"off\",\n              },\n              showCancelButton: true,\n              confirmButtonText: \"Confirm\",\n              confirmButtonColor: \"green\",\n              showLoaderOnConfirm: true,\n              preConfirm: async (code) => {\n                try {\n                  const selected = JSON.stringify(\n                    table.current.getSelectedRows()\n                  );\n                  console.log(selected);\n                  mutateApprovedRequest({\n                    ...stateApproved,\n                    checkSelected: JSON.stringify(checkSelected),\n                    code,\n                    isApproved: true,\n                  });\n                } catch (error) {\n                  Swal.showValidationMessage(`\n                    Request failed: ${error}\n                  `);\n                }\n              },\n              allowOutsideClick: () => !Swal.isLoading(),\n            }).then((result) => {\n              if (result.isDismissed || result.dismiss || result.isDenied) {\n                setNewStateValue(dispatchApproved, approvedInitialState);\n                setCheckSelected([]);\n              }\n            });\n          }}\n        >\n          Approved Request\n        </LoadingButton>\n        <LoadingButton\n          disabled={checkSelected.length <= 0}\n          loading={isLoadingDisApprovedRequest}\n          sx={{\n            height: \"30px\",\n            fontSize: \"11px\",\n          }}\n          variant=\"contained\"\n          size=\"small\"\n          color=\"error\"\n          onClick={() => {\n            Swal.fire({\n              title: `Are you sure you want to disapproved ${stateApproved.RPCD}?`,\n              html: `<p>You want to <span style=\"color:red\">DisAprroved</span> <strong>${stateApproved.RPCD}</strong></p><p>Enter Code.</p>`,\n              input: \"text\",\n              inputAttributes: {\n                autocapitalize: \"off\",\n              },\n              showCancelButton: true,\n              confirmButtonText: \"Confirm\",\n              confirmButtonColor: \"green\",\n              showLoaderOnConfirm: true,\n              preConfirm: async (code) => {\n                try {\n                  mutateDisApprovedRequest({\n                    ...stateApproved,\n                    checkSelected: JSON.stringify(checkSelected),\n                    code,\n                    isApproved: false,\n                  });\n                } catch (error) {\n                  Swal.showValidationMessage(`\n                    Request failed: ${error}\n                  `);\n                }\n              },\n              allowOutsideClick: () => !Swal.isLoading(),\n            }).then((result) => {\n              if (result.isDismissed || result.dismiss || result.isDenied) {\n                setNewStateValue(dispatchApproved, approvedInitialState);\n                setCheckSelected([]);\n              }\n            });\n          }}\n        >\n          Disapproved Request\n        </LoadingButton>\n      </div>\n      <fieldset\n        style={{\n          paddingLeft: \"10px\",\n          paddingRight: \"10px\",\n          paddingTop: \"10px\",\n          paddingBottom: \"20px\",\n          border: \"1px solid #cbd5e1\",\n          borderRadius: \"5px\",\n        }}\n      >\n        <legend style={{ fontSize: \"14px\" }}>Account Information</legend>\n        <Box sx={{ display: \"flex\", gap: \"10px\", flexWrap: \"wrap\" }}>\n          <Autocomplete\n            loading={isLoadingGetRCPNList}\n            freeSolo\n            options={rcpnList.map((itm: any) => itm.RPCDNo)}\n            value={stateApproved.RPCD}\n            onChange={(e, v: any) => {\n              if (v) {\n                dispatchApproved({\n                  type: \"UPDATE_FIELD\",\n                  field: \"RPCD\",\n                  value: v,\n                });\n                mutateGetRCPNSelectedDatails({ RPCDNo: v });\n              }\n            }}\n            onInput={(e: any) => {\n              dispatchApproved({\n                type: \"UPDATE_FIELD\",\n                field: \"RPCD\",\n                value: e.target.value,\n              });\n            }}\n            onBlur={(e) => {\n              dispatchApproved({\n                type: \"UPDATE_FIELD\",\n                field: \"RPCD\",\n                value: stateApproved.RPCD,\n              });\n              mutateGetRCPNSelectedDatails({ RPCDNo: stateApproved.RPCD });\n            }}\n            renderInput={(params) => (\n              <TextField\n                {...params}\n                InputProps={{\n                  ...params.InputProps,\n                  style: { height: \"27px\", fontSize: \"14px\" },\n                }}\n                label=\"RPCD No.\"\n              />\n            )}\n            sx={{\n              flex: 1,\n              \".MuiFormLabel-root\": {\n                fontSize: \"14px\",\n              },\n              \".MuiInputBase-input\": {\n                width: \"100% !important\",\n              },\n              \".MuiFormLabel-root[data-shrink=false]\": {\n                top: \"-5px\",\n              },\n              \".MuiAutocomplete-input \": {\n                position: \"absolute\",\n              },\n            }}\n            size=\"small\"\n          />\n          <TextField\n            variant=\"outlined\"\n            size=\"small\"\n            label=\"Branch\"\n            name=\"PNNo\"\n            value={stateApproved.PNNo}\n            onChange={handleInputChange}\n            InputProps={{\n              style: { height: \"27px\", fontSize: \"14px\" },\n              readOnly: true,\n            }}\n            sx={{\n              width: \"250px\",\n              height: \"27px\",\n              \".MuiFormLabel-root\": { fontSize: \"14px\" },\n              \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n            }}\n          />\n          <TextField\n            variant=\"outlined\"\n            size=\"small\"\n            label=\"Branch\"\n            name=\"branch\"\n            value={stateApproved.branch}\n            onChange={handleInputChange}\n            InputProps={{\n              style: { height: \"27px\", fontSize: \"14px\" },\n              readOnly: true,\n            }}\n            sx={{\n              width: \"250px\",\n              height: \"27px\",\n              \".MuiFormLabel-root\": { fontSize: \"14px\" },\n              \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n            }}\n          />\n          <TextField\n            fullWidth\n            variant=\"outlined\"\n            size=\"small\"\n            label=\"Account Name\"\n            name=\"client\"\n            value={stateApproved.client}\n            onChange={handleInputChange}\n            InputProps={{\n              style: { height: \"27px\", fontSize: \"14px\" },\n              readOnly: true,\n            }}\n            sx={{\n              flex: 1,\n              minWidth: \"300px\",\n              height: \"27px\",\n              \".MuiFormLabel-root\": { fontSize: \"14px\" },\n              \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n            }}\n          />\n        </Box>\n      </fieldset>\n      <div\n        style={{\n          marginTop: \"10px\",\n          width: \"100%\",\n          position: \"relative\",\n          height: \"420px\",\n        }}\n      >\n        <Box\n          style={{\n            height: \"400px\",\n            width: \"100%\",\n            overflowX: \"scroll\",\n            position: \"absolute\",\n          }}\n        >\n          <Table\n            ref={table}\n            isLoading={isLoadingGetRCPNSelectedDatails}\n            columns={checkSelectedColumns}\n            rows={checkSelected}\n            table_id={\"temp_id\"}\n            isSingleSelection={true}\n            isRowFreeze={false}\n            getCellClassName={(params) => {\n              if (params.field === \"Status\" && params.value === \"APPROVED\") {\n                return \"approved\";\n              } else if (\n                params.field === \"Status\" &&\n                params.value === \"PENDING\"\n              ) {\n                return \"pending\";\n              } else if (\n                params.field === \"Status\" &&\n                params.value === \"DISAPPROVED\"\n              ) {\n                return \"disapproved\";\n              } else {\n                return \"\";\n              }\n            }}\n            footerChildren={() => <FooterTotal />}\n            footerPaginationPosition=\"left-right\"\n            showFooterSelectedCount={false}\n          />\n        </Box>\n      </div>\n      <fieldset\n        style={{\n          paddingLeft: \"10px\",\n          paddingRight: \"10px\",\n          paddingTop: \"10px\",\n          paddingBottom: \"20px\",\n          border: \"1px solid #cbd5e1\",\n          borderRadius: \"5px\",\n        }}\n      >\n        <legend style={{ fontSize: \"14px\" }}>Fees and Charges</legend>\n        <Box\n          sx={{\n            display: \"grid\",\n            gap: \"10px\",\n            gridTemplateColumns: \"repeat(4,1fr)\",\n          }}\n        >\n          <TextField\n            variant=\"outlined\"\n            size=\"small\"\n            label=\"Holding Fee\"\n            name=\"holdingFee\"\n            placeholder=\"0.00\"\n            value={stateApproved.holdingFee}\n            onChange={handleInputChange}\n            InputProps={{\n              inputComponent: NumericFormatCustom as any,\n              style: { height: \"27px\", fontSize: \"14px\" },\n              readOnly: true,\n            }}\n            sx={{\n              flex: 1,\n              height: \"27px\",\n              \".MuiFormLabel-root\": { fontSize: \"14px\" },\n              \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n            }}\n            onBlur={() => {\n              dispatchApproved({\n                type: \"UPDATE_FIELD\",\n                field: \"holdingFee\",\n                value: parseFloat(\n                  stateApproved.holdingFee.replace(/,/g, \"\")\n                ).toFixed(2),\n              });\n            }}\n          />\n          <TextField\n            variant=\"outlined\"\n            size=\"small\"\n            label=\"Penalty Charge\"\n            name=\"penaltyCharge\"\n            value={stateApproved.penaltyCharge}\n            onChange={handleInputChange}\n            placeholder=\"0.00\"\n            InputProps={{\n              inputComponent: NumericFormatCustom as any,\n              style: { height: \"27px\", fontSize: \"14px\" },\n              readOnly: true,\n            }}\n            sx={{\n              flex: 1,\n              height: \"27px\",\n              \".MuiFormLabel-root\": { fontSize: \"14px\" },\n              \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n            }}\n            onBlur={() => {\n              dispatchApproved({\n                type: \"UPDATE_FIELD\",\n                field: \"penaltyCharge\",\n                value: parseFloat(\n                  stateApproved.penaltyCharge.replace(/,/g, \"\")\n                ).toFixed(2),\n              });\n            }}\n          />\n          <TextField\n            variant=\"outlined\"\n            size=\"small\"\n            label=\"Surplus\"\n            name=\"surplus\"\n            placeholder=\"0.00\"\n            value={stateApproved.surplus}\n            onChange={handleInputChange}\n            InputProps={{\n              inputComponent: NumericFormatCustom as any,\n              style: { height: \"27px\", fontSize: \"14px\" },\n              readOnly: true,\n            }}\n            sx={{\n              flex: 1,\n              height: \"27px\",\n              \".MuiFormLabel-root\": { fontSize: \"14px\" },\n              \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n            }}\n            onBlur={() => {\n              dispatchApproved({\n                type: \"UPDATE_FIELD\",\n                field: \"surplus\",\n                value: parseFloat(\n                  stateApproved.surplus.replace(/,/g, \"\")\n                ).toFixed(2),\n              });\n            }}\n          />\n          <TextField\n            variant=\"outlined\"\n            size=\"small\"\n            label=\"Deducted to:\"\n            name=\"deductedTo\"\n            value={stateApproved.deductedTo}\n            onChange={handleInputChange}\n            InputProps={{\n              style: { height: \"27px\", fontSize: \"14px\" },\n              readOnly: true,\n            }}\n            sx={{\n              flex: 1,\n              height: \"27px\",\n              \".MuiFormLabel-root\": { fontSize: \"14px\" },\n              \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n            }}\n          />\n          <FormControl\n            size=\"small\"\n            variant=\"outlined\"\n            sx={{\n              flex: 1,\n              \".MuiFormLabel-root\": {\n                fontSize: \"14px\",\n                background: \"white\",\n                zIndex: 99,\n                padding: \"0 3px\",\n              },\n              \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n            }}\n          >\n            <InputLabel id=\"label-selection-reason\">How to be paid</InputLabel>\n            <Select\n              labelId=\"label-selection-reason\"\n              autoWidth\n              sx={{\n                height: \"27px\",\n                fontSize: \"14px\",\n              }}\n              name=\"paidVia\"\n              value={stateApproved.paidVia}\n              onChange={handleInputChange}\n              readOnly={true}\n            >\n              <MenuItem value=\"\"></MenuItem>\n              <MenuItem value=\"Over The Counter\">Over The Counter</MenuItem>\n              <MenuItem value={\"direct deposit\"}>Direct Deposit</MenuItem>\n            </Select>\n          </FormControl>\n          <TextField\n            variant=\"outlined\"\n            size=\"small\"\n            label=\"Name of Bank & Branch\"\n            name=\"paidInfo\"\n            value={stateApproved.paidInfo}\n            onChange={handleInputChange}\n            InputProps={{\n              style: { height: \"27px\", fontSize: \"14px\" },\n              readOnly: true,\n            }}\n            sx={{\n              flex: 1,\n              gridColumn: \"2 / span 2\",\n\n              height: \"27px\",\n              \".MuiFormLabel-root\": { fontSize: \"14px\" },\n              \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n            }}\n          />\n          <CustomDatePicker\n            readOnly={true}\n            fullWidth={false}\n            label=\"Date & Time of Deposit\"\n            onChange={(value: any) => {\n              dispatchApproved({\n                type: \"UPDATE_FIELD\",\n                field: \"paidDate\",\n                value: value,\n              });\n            }}\n            value={new Date(stateApproved.paidDate)}\n            onKeyDown={(e: any) => {\n              if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n                const timeout = setTimeout(() => {\n                  datePickerRef.current?.querySelector(\"button\")?.click();\n                  clearTimeout(timeout);\n                }, 150);\n              }\n            }}\n            datePickerRef={datePickerRef}\n            textField={{\n              InputLabelProps: {\n                style: {\n                  fontSize: \"14px\",\n                },\n              },\n              InputProps: {\n                style: { height: \"27px\", fontSize: \"14px\" },\n              },\n            }}\n          />\n          <TextField\n            variant=\"outlined\"\n            size=\"small\"\n            label=\"total\"\n            name=\"total\"\n            value={stateApproved.total}\n            onChange={handleInputChange}\n            InputProps={{\n              style: { height: \"27px\", fontSize: \"14px\" },\n              inputComponent: NumericFormatCustom as any,\n              readOnly: true,\n            }}\n            sx={{\n              flex: 1,\n              height: \"27px\",\n              \".MuiFormLabel-root\": { fontSize: \"14px\" },\n              \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n            }}\n          />\n        </Box>\n      </fieldset>\n    </Box>\n  );\n}\nfunction slideAnimation(activeButton: number, idx: number) {\n  if (activeButton === idx) {\n    return \"translateX(100%)\";\n  } else {\n    return \"translateX(0%)\";\n  }\n}\n","import { useState, ReactElement } from \"react\";\n\nexport default function useMultipleComponent(steps: ReactElement[]) {\n  const [currentStepIndex, setCurrentStepIndex] = useState(0);\n\n  function next() {\n    setCurrentStepIndex((i) => {\n      if (i >= steps.length - 1) {\n        return i;\n      }\n      return i + 1;\n    });\n  }\n  function back() {\n    setCurrentStepIndex((i) => {\n      if (i <= 0) {\n        return i;\n      }\n      return i + 1;\n    });\n  }\n  function goTo(index: number) {\n    setCurrentStepIndex(index);\n  }\n  \n  return {\n    step: steps[currentStepIndex],\n    goTo,\n    back,\n    next,\n    isFirstStep: currentStepIndex !== 0,\n    isLastStep: currentStepIndex === steps.length - 1,\n    currentStepIndex,\n  };\n}\n"],"names":["requestInitialState","RPCD","PNNo","branch","client","check_no","check_date","bank","amount","new_check_date","Date","check_reason","requestMode","rowMode","rowId","holdingFee","penaltyCharge","surplus","deductedTo","total","paidVia","paidInfo","paidDate","approvedInitialState","Requested_By","Requested_Date","reducer","state","action","type","_objectSpread","_defineProperty","field","value","ChekPostponement","user","useContext","AuthContext","_useMultipleComponent","useMultipleComponent","_jsx","ChekPostponementRequest","ChekPostponementApproved","currentStepIndex","step","goTo","style","idx","border","outline","backgroundColor","borderWidth","color","cursor","display","fontFamily","fontSize","fontWeight","lineHeight","listStyle","margin","padding","textAlign","transition","verticalAlign","whiteSpace","userSelect","touchAction","position","overflow","_jsxs","_Fragment","children","PageHelmet","title","width","height","maxHeight","flexDirection","onClick","top","bottom","left","right","background","transform","slideAnimation","userAccess","checkSelectedColumns","headerName","hide","calculateDifference","startDate","endDate","differenceInDaysValue","differenceInDays","Math","abs","_queryFn","_queryFn2","_mutationFn","_mutationFn2","_mutationFn3","_mutationFn4","_useContext2","myAxios","_useReducer","useReducer","_useReducer2","_slicedToArray","stateRequest","dispatchRequest","_useState","useState","_useState2","pnnoClients","setPNNoClients","_useState3","_useState4","checkList","setCheckList","_useState5","_useState6","checkSelected","setCheckSelected","_useState7","_useState8","rcpnList","setRCPNList","table","useRef","datePickerRef1","datePickerRef2","_useQuery","useQuery","queryKey","queryFn","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","get","headers","Authorization","concat","accessToken","abrupt","sent","stop","apply","arguments","refetchOnWindowFocus","onSuccess","data","loadingSearchPNNoClients","isLoading","_useQuery2","_callee2","_context2","id","pullout_request","loadingChekPostponementRequest","refetchChekPostponementRequest","refetch","_useMutation","useMutation","mutationKey","mutationFn","_x","_callee3","variable","_context3","post","res","selectedChecks","mutateGetChecksList","mutate","isLoadingGetChecksList","_useMutation2","_x2","_callee4","_context4","itm","rcpnDetails","setNewStateValue","map","DateDiff","Check_Date","NewCheckDate","temp_id","Bank","Check_Amnt","Check_No","New_Check_Date","Reason","reason","Status","newObj","RPCDNo","ClientBranch","Name","HoldingFees","PenaltyCharge","Surplus","Deducted_to","parseFloat","toLocaleString","minimumFractionDigits","maximumFractionDigits","PaidVia","PaidInfo","PaidDate","PNo","mutateGetRCPNSelectedDatails","isLoadingGetRCPNSelectedDatails","_useMutation3","_x3","_callee5","_context5","rcpn","mutateGetRCPNList","isLoadingGetRCPNList","handleCheckAdd","Swal","icon","showConfirmButton","timer","d","length","str","num","parseInt","toString","padStart","incrementTempId","filter","items","toLocaleDateString","month","day","year","_toConsumableArray","_useMutation4","_x4","_callee6","_context6","success","message","mutateSave","isLoadingSave","handleInputChange","e","_e$target","target","name","handleOnSave","isNaN","text","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","then","result","isConfirmed","JSON","stringify","FeeAndChargersTotal","list","forEach","item","itemState","replace","toFixed","FooterTotal","Box","sx","px","py","justifyContent","borderTop","reduce","sum","obj","gap","marginBottom","Button","variant","size","LoadingButton","disabled","loading","paddingLeft","paddingRight","paddingTop","paddingBottom","borderRadius","flexWrap","React","FormControl","zIndex","InputLabel","htmlFor","OutlinedInput","fullWidth","label","onChange","onKeyDown","code","preventDefault","readOnly","department","endAdornment","InputAdornment","IconButton","edge","RestartAltIcon","Autocomplete","freeSolo","options","v","onInput","onBlur","renderInput","params","TextField","InputProps","flex","find","undefined","branch_name","renderOption","props","option","attr","_createElement","key","index","newDate","addDays","minWidth","CustomDatePicker","timeout","setTimeout","_datePickerRef1$curre","_datePickerRef1$curre2","current","querySelector","click","clearTimeout","datePickerRef","textField","InputLabelProps","columnGap","alignItems","marginTop","overflowX","Table","ref","columns","rows","table_id","isSingleSelection","isRowFreeze","dataSelection","selection","rowSelected","getCellClassName","footerChildren","footerPaginationPosition","showFooterSelectedCount","gridTemplateColumns","placeholder","inputComponent","NumericFormatCustom","Select","labelId","autoWidth","MenuItem","gridColumn","_datePickerRef2$curre","_datePickerRef2$curre2","_queryFn3","_mutationFn5","_mutationFn6","_mutationFn7","_useContext3","_useReducer3","_useReducer4","stateApproved","dispatchApproved","_useState9","_useState10","_useState11","_useState12","_e$target2","_useQuery3","_callee7","_context7","_useMutation5","_x5","_callee8","_context8","console","log","_useMutation6","_x6","_callee9","_context9","mutateApprovedRequest","isLoadingApprovedRequest","_useMutation7","_x7","_callee10","_context10","mutateDisApprovedRequest","isLoadingDisApprovedRequest","_preConfirm","html","input","inputAttributes","autocapitalize","showLoaderOnConfirm","preConfirm","_x8","_callee11","selected","_context11","getSelectedRows","isApproved","error","allowOutsideClick","isDismissed","dismiss","isDenied","_preConfirm2","_x9","_callee12","_context12","_datePickerRef$curren","_datePickerRef$curren2","activeButton","steps","setCurrentStepIndex","back","i","isFirstStep","isLastStep"],"sourceRoot":""}