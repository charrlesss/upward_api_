{"version":3,"file":"static/js/3147.62bb462a.chunk.js","mappings":"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","sources":["feautures/Admin/Task/Accounting/ReturnCheck.tsx","../node_modules/@mui/icons-material/Autorenew.js"],"sourcesContent":["import { Button } from \"@mui/material\";\nimport { SelectInput, TextInput } from \"../../../../components/UpwardFields\";\nimport { wait } from \"../../../../lib/wait\";\nimport Swal from \"sweetalert2\";\nimport AddIcon from \"@mui/icons-material/Add\";\nimport SaveIcon from \"@mui/icons-material/Save\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport SearchIcon from \"@mui/icons-material/Search\";\nimport {\n  useRef,\n  useState,\n  forwardRef,\n  useImperativeHandle,\n  useContext,\n  useEffect,\n} from \"react\";\nimport AutorenewIcon from \"@mui/icons-material/Autorenew\";\nimport { format } from \"date-fns\";\nimport {\n  DataGridViewReact,\n  useUpwardTableModalSearchSafeMode,\n} from \"../../../../components/DataGridViewReact\";\nimport { useMutation, useQuery } from \"react-query\";\nimport { AuthContext } from \"../../../../components/AuthContext\";\nimport { Loading } from \"../../../../components/Loading\";\nimport {\n  codeCondfirmationAlert,\n  saveCondfirmationAlert,\n} from \"../../../../lib/confirmationAlert\";\n\nexport default function ReturnCheck() {\n  const { user, myAxios } = useContext(AuthContext);\n  const [mode, setMode] = useState(\"\");\n  const returnCheckComponentRef = useRef<any>(null);\n  const inputSearchRef = useRef<HTMLInputElement>(null);\n  const refNoRef = useRef<HTMLInputElement>(null);\n  const refDate = useRef<HTMLInputElement>(null);\n  const refExp = useRef<HTMLInputElement>(null);\n\n  const {\n    isLoading: isLoadingReturnChecksSave,\n    mutate: mutateReturnChecksSave,\n  } = useMutation({\n    mutationKey: \"save\",\n    mutationFn: async (variable: any) =>\n      await myAxios.post(`/task/accounting/return-checks/save`, variable, {\n        headers: {\n          Authorization: `Bearer ${user?.accessToken}`,\n        },\n      }),\n    onSuccess(res) {\n      if (res.data.success) {\n        resetReturnChecks();\n        return Swal.fire({\n          position: \"center\",\n          icon: \"success\",\n          title: res.data.message,\n          showConfirmButton: false,\n          timer: 1500,\n        });\n      }\n      Swal.fire({\n        position: \"center\",\n        icon: \"error\",\n        title: res.data.message,\n        showConfirmButton: false,\n        timer: 1500,\n      });\n    },\n  });\n\n  const {\n    isLoading: isLoadingReturnChecksUpdate,\n    mutate: mutateReturnChecksUpdate,\n  } = useMutation({\n    mutationKey: \"save\",\n    mutationFn: async (variable: any) =>\n      await myAxios.post(`/task/accounting/return-checks/update`, variable, {\n        headers: {\n          Authorization: `Bearer ${user?.accessToken}`,\n        },\n      }),\n    onSuccess(res) {\n      if (res.data.success) {\n        resetReturnChecks();\n        return Swal.fire({\n          position: \"center\",\n          icon: \"success\",\n          title: res.data.message,\n          showConfirmButton: false,\n          timer: 1500,\n        });\n      }\n      Swal.fire({\n        position: \"center\",\n        icon: \"error\",\n        title: res.data.message,\n        showConfirmButton: false,\n        timer: 1500,\n      });\n    },\n  });\n  const { isLoading: isLoadingReturnChecksID, refetch } = useQuery({\n    queryKey: \"generate-id\",\n    queryFn: async () =>\n      await myAxios.get(`/task/accounting/return-checks/generate-id`, {\n        headers: {\n          Authorization: `Bearer ${user?.accessToken}`,\n        },\n      }),\n    refetchOnWindowFocus: false,\n    onSuccess(res) {\n      wait(100).then(() => {\n        if (refNoRef.current) {\n          refNoRef.current.value = res.data.newRefCode;\n        }\n      });\n    },\n  });\n\n  const {\n    isLoading: isLoadingReturnChecksSearchSelectedSave,\n    mutate: mutateReturnChecksSearchSelectedSave,\n  } = useMutation({\n    mutationKey: \"selected-search\",\n    mutationFn: async (variable: any) =>\n      await myAxios.post(\n        `/task/accounting/return-checks/return-checks-search-selected`,\n        variable,\n        {\n          headers: {\n            Authorization: `Bearer ${user?.accessToken}`,\n          },\n        }\n      ),\n    onSuccess(res) {\n      const data1 = JSON.parse(res.data.data1);\n      const data2 = JSON.parse(res.data.data2);\n      console.log(data1);\n      if (data1.length > 0) {\n        if (refNoRef.current) {\n          refNoRef.current.value = data1[0].RC_No;\n        }\n        if (refDate.current) {\n          refDate.current.value = format(\n            new Date(data1[0].RC_Date),\n            \"yyyy-MM-dd\"\n          );\n        }\n        if (refExp.current) {\n          refExp.current.value = data1[0].Explanation;\n        }\n        const newSelectedCheck: any = [];\n\n        for (let index = 0; index < data1.length; index++) {\n          newSelectedCheck.push([\n            data1[index].ORNum,\n            format(new Date(data1[index].Date_Collect), \"MM/dd/yyy\"),\n            data1[index].SlipCode,\n            format(new Date(data1[index].Date_Deposit), \"MM/dd/yyy\"),\n            data1[index].Check_No,\n            format(new Date(data1[index].Check_Date), \"MM/dd/yyy\"),\n            formatNumber(\n              parseFloat(data1[index].Amount.toString().replace(/,/g, \"\"))\n            ),\n            data1[index].Bank,\n            data1[index].BankAccnt,\n            data1[index].Reason,\n            format(new Date(data1[index].Date_Return), \"MM/dd/yyy\"),\n          ]);\n        }\n\n        returnCheckComponentRef.current.refSelectedCheckToBeReturned.current.table.current.setData(\n          newSelectedCheck\n        );\n        if (returnCheckComponentRef.current.tssAmountRef.current) {\n          returnCheckComponentRef.current.tssAmountRef.current.value = `Total Amount:   ${formatNumber(\n            getSum(data1, \"Amount\")\n          )}`;\n        }\n\n        if (data2.length > 0) {\n          const newAccoutningEntry: any = [];\n          for (let index = 0; index < data2.length; index++) {\n            newAccoutningEntry.push([\n              data2[index].GL_Acct,\n              data2[index].cGL_Acct,\n              formatNumber(\n                parseFloat(data2[index].Debit.toString().replace(/,/g, \"\"))\n              ),\n              formatNumber(\n                parseFloat(data2[index].Credit.toString().replace(/,/g, \"\"))\n              ),\n              data2[index].ID_No,\n              data2[index].cID_No,\n              data2[index].Sub_Acct,\n              data2[index].cSub_Acct,\n              data2[index].Check_No,\n              data2[index].Check_Bank,\n              format(new Date(data2[index].Check_Date), \"MM/dd/yyy\"),\n              format(new Date(data2[index].Check_Return), \"MM/dd/yyy\"),\n              data2[index].Check_Reason,\n              data2[index].Check_No,\n              format(new Date(data2[index].Check_Deposit), \"MM/dd/yyy\"),\n              format(new Date(data2[index].Check_Collect), \"MM/dd/yyy\"),\n            ]);\n          }\n          returnCheckComponentRef.current.refAccountingEntry.current.table.current.setData(\n            newAccoutningEntry\n          );\n\n          if (\n            returnCheckComponentRef.current.refAccountingEntry.current.debitRef\n              .current\n          ) {\n            returnCheckComponentRef.current.refAccountingEntry.current.debitRef.current.value =\n              formatNumber(getSum(data2, \"Debit\"));\n          }\n\n          if (\n            returnCheckComponentRef.current.refAccountingEntry.current.creditRef\n              .current\n          ) {\n            returnCheckComponentRef.current.refAccountingEntry.current.creditRef.current.value =\n              formatNumber(getSum(data2, \"Credit\"));\n          }\n        }\n\n        setMode(\"update\");\n      }\n    },\n  });\n  const {\n    UpwardTableModalSearch: SearchReturnCheckUpwardTableModalSearch,\n    openModal: searchReturnCheckCreditOpenModal,\n    closeModal: searchReturnCheckCreditCloseModal,\n  } = useUpwardTableModalSearchSafeMode({\n    link: \"/task/accounting/return-checks/return-checks-search\",\n    column: [\n      { key: \"RefDate\", label: \"Ref. Date\", width: 120 },\n      { key: \"RefNo\", label: \"Ref. No.\", width: 100 },\n      { key: \"Explanation\", label: \"Explanation\", width: 200 },\n    ],\n    getSelectedItem: async (rowItm: any, _: any, rowIdx: any, __: any) => {\n      if (rowItm) {\n        wait(100).then(() => {\n          mutateReturnChecksSearchSelectedSave({ RefNo: rowItm[1] });\n        });\n        searchReturnCheckCreditCloseModal();\n      }\n    },\n  });\n\n  const handleOnSave = () => {\n    // tabRef.current.test();\n    if (refExp.current?.value === \"\") {\n      alert(\"Pease provide an explanation\");\n      refExp.current?.focus();\n      return;\n    }\n    const dgvSelChecks =\n      returnCheckComponentRef.current.refSelectedCheckToBeReturned.current.table.current.getData();\n    const dgvAccountingEntry =\n      returnCheckComponentRef.current.refAccountingEntry.current.table.current.getData();\n\n    if (dgvSelChecks.length <= 0) {\n      alert(\"Please provide return entry\");\n      return;\n    }\n    if (mode === \"add\") {\n      saveCondfirmationAlert({\n        isConfirm: () => {\n          mutateReturnChecksSave({\n            dgvSelChecks,\n            dgvAccountingEntry,\n            refNo: refNoRef.current?.value,\n            date: refDate.current?.value,\n            explanation: refExp.current?.value,\n            mode,\n          });\n        },\n      });\n    } else {\n      codeCondfirmationAlert({\n        isUpdate: true,\n        cb: (userCodeConfirmation) => {\n          mutateReturnChecksUpdate({\n            dgvSelChecks,\n            dgvAccountingEntry,\n            refNo: refNoRef.current?.value,\n            date: refDate.current?.value,\n            explanation: refExp.current?.value,\n            mode,\n            userCodeConfirmation,\n          });\n        },\n      });\n    }\n  };\n\n  function resetReturnChecks() {\n    setMode(\"\");\n    refetch();\n    if (refDate.current) {\n      refDate.current.value = format(new Date(), \"yyyy-MM-dd\");\n    }\n    if (refExp.current) {\n      refExp.current.value = \"Returned Checks\";\n    }\n\n    returnCheckComponentRef.current.refSelectCheck.current.table.current.resetCheckBox();\n    returnCheckComponentRef.current.refSelectCheck.current.table.current.setSelectedRow(\n      null\n    );\n    returnCheckComponentRef.current.refSelectCheck.current.table.current.setData(\n      []\n    );\n    returnCheckComponentRef.current.refSelectCheck.current.refetchList();\n\n    returnCheckComponentRef.current.refSelectedCheckToBeReturned.current.table.current.resetCheckBox();\n    returnCheckComponentRef.current.refSelectedCheckToBeReturned.current.table.current.setSelectedRow(\n      null\n    );\n    returnCheckComponentRef.current.refSelectedCheckToBeReturned.current.table.current.setData(\n      []\n    );\n\n    returnCheckComponentRef.current.refAccountingEntry.current.table.current.resetCheckBox();\n    returnCheckComponentRef.current.refAccountingEntry.current.table.current.setSelectedRow(\n      null\n    );\n    returnCheckComponentRef.current.refAccountingEntry.current.table.current.setData(\n      []\n    );\n\n    if (\n      returnCheckComponentRef.current.refAccountingEntry.current.debitRef\n        .current\n    ) {\n      returnCheckComponentRef.current.refAccountingEntry.current.debitRef.current.value =\n        \"0.00\";\n    }\n\n    if (\n      returnCheckComponentRef.current.refAccountingEntry.current.creditRef\n        .current\n    ) {\n      returnCheckComponentRef.current.refAccountingEntry.current.creditRef.current.value =\n        \"0.00\";\n    }\n\n    returnCheckComponentRef.current.tssAmountRef.current.value = `Total Amount:   0.00`;\n  }\n\n  return (\n    <>\n      {(isLoadingReturnChecksSave ||\n        isLoadingReturnChecksID ||\n        isLoadingReturnChecksSearchSelectedSave ||\n        isLoadingReturnChecksUpdate) && <Loading />}\n      <div\n        style={{\n          display: \"flex\",\n          flexDirection: \"column\",\n          width: \"100%\",\n          height: \"100%\",\n          flex: 1,\n          padding: \"5px\",\n          background: \"#F1F1F1\",\n        }}\n      >\n        <div\n          style={{\n            display: \"flex\",\n            alignItems: \"center\",\n            columnGap: \"5px\",\n            marginBottom: \"10px\",\n          }}\n        >\n          <TextInput\n            label={{\n              title: \"Search: \",\n              style: {\n                fontSize: \"12px\",\n                fontWeight: \"bold\",\n                width: \"50px\",\n              },\n            }}\n            input={{\n              className: \"search-input-up-on-key-down\",\n              type: \"search\",\n              onKeyDown: (e) => {\n                if (e.key === \"Enter\" || e.key === \"NumpadEnter\") {\n                  e.preventDefault();\n                  searchReturnCheckCreditOpenModal(e.currentTarget.value);\n                }\n              },\n              style: { width: \"500px\" },\n            }}\n            icon={<SearchIcon sx={{ fontSize: \"18px\" }} />}\n            onIconClick={(e) => {\n              e.preventDefault();\n              if (inputSearchRef.current)\n                searchReturnCheckCreditOpenModal(inputSearchRef.current.value);\n            }}\n            inputRef={inputSearchRef}\n          />\n          {mode === \"\" && (\n            <Button\n              sx={{\n                height: \"22px\",\n                fontSize: \"11px\",\n              }}\n              variant=\"contained\"\n              startIcon={<AddIcon sx={{ width: 15, height: 15 }} />}\n              id=\"entry-header-save-button\"\n              onClick={() => {\n                setMode(\"add\");\n              }}\n            >\n              New\n            </Button>\n          )}\n          {mode !== \"\" && (\n            <Button\n              sx={{\n                height: \"22px\",\n                fontSize: \"11px\",\n              }}\n              id=\"save-entry-header\"\n              color=\"primary\"\n              variant=\"contained\"\n              type=\"submit\"\n              startIcon={<SaveIcon sx={{ width: 15, height: 15 }} />}\n              onClick={handleOnSave}\n            >\n              Save\n            </Button>\n          )}\n          <Button\n            sx={{\n              height: \"22px\",\n              fontSize: \"11px\",\n            }}\n            disabled={mode === \"\"}\n            variant=\"contained\"\n            startIcon={<CloseIcon sx={{ width: 15, height: 15 }} />}\n            color=\"error\"\n            onClick={() => {\n              Swal.fire({\n                title: \"Are you sure?\",\n                text: \"You won't be able to revert this!\",\n                icon: \"warning\",\n                showCancelButton: true,\n                confirmButtonColor: \"#3085d6\",\n                cancelButtonColor: \"#d33\",\n                confirmButtonText: \"Yes, cancel it!\",\n              }).then((result) => {\n                if (result.isConfirmed) {\n                  wait(100).then(() => {\n                    resetReturnChecks();\n                  });\n                }\n              });\n            }}\n          >\n            Cancel\n          </Button>\n        </div>\n        <div\n          style={{\n            display: \"flex\",\n            width: \"100%\",\n            padding: \"10px 40px\",\n            flexDirection: \"column\",\n            rowGap: \"10px\",\n            border: \"1px solid #64748b\",\n            marginBottom: \"10px\",\n          }}\n        >\n          <div\n            style={{\n              display: \"flex\",\n              columnGap: \"200px\",\n            }}\n          >\n            <TextInput\n              label={{\n                title: \"Ref No.: \",\n                style: {\n                  fontSize: \"12px\",\n                  fontWeight: \"bold\",\n                  width: \"100px\",\n                },\n              }}\n              input={{\n                disabled: mode === \"\",\n                // readOnly: true,\n                className: \"ref_no\",\n                type: \"text\",\n                style: { width: \"200px\" },\n                defaultValue: \"\",\n              }}\n              inputRef={refNoRef}\n              icon={<AutorenewIcon sx={{ fontSize: \"18px\" }} />}\n              onIconClick={(e) => {\n                e.preventDefault();\n                // RefetchDepositSlipCode();\n              }}\n            />\n            <TextInput\n              label={{\n                title: \"Date : \",\n                style: {\n                  fontSize: \"12px\",\n                  fontWeight: \"bold\",\n                  width: \"70px\",\n                },\n              }}\n              input={{\n                disabled: mode === \"\",\n                defaultValue: format(new Date(), \"yyyy-MM-dd\"),\n                className: \"date\",\n                type: \"date\",\n                style: { width: \"200px\" },\n              }}\n              inputRef={refDate}\n            />\n          </div>\n          <TextInput\n            label={{\n              title: \"Explanation : \",\n              style: {\n                fontSize: \"12px\",\n                fontWeight: \"bold\",\n                width: \"100px\",\n              },\n            }}\n            input={{\n              disabled: mode === \"\",\n              className: \"exp\",\n              type: \"text\",\n              style: { width: \"670px\" },\n              defaultValue: \"Returned Checks\",\n            }}\n            inputRef={refExp}\n          />\n        </div>\n        <TabPage ref={returnCheckComponentRef} mode={mode} />\n      </div>\n      <SearchReturnCheckUpwardTableModalSearch />\n    </>\n  );\n}\n\nconst TabPage = forwardRef(({ mode }: any, ref) => {\n  const [activeTab, setActiveTab] = useState(0);\n  const [buttonPosition, setButtonPosition] = useState<any>({});\n  const buttonsRef = useRef<Array<HTMLButtonElement | null>>([]);\n  const refSelectCheck = useRef<any>(null);\n  const refSelectedCheckToBeReturned = useRef<any>(null);\n  const refAccountingEntry = useRef<any>(null);\n  const tssAmountRef = useRef<HTMLInputElement>(null);\n  const chkFndRef = useRef<HTMLInputElement>(null);\n\n  const tabs = [\n    {\n      id: 0,\n      label: \"Select Check\",\n      content: (\n        <SelectCheck\n          ref={refSelectCheck}\n          refSelectedCheckToBeReturned={refSelectedCheckToBeReturned}\n          refAccountingEntry={refAccountingEntry}\n          tssAmountRef={tssAmountRef}\n          chkFndRef={chkFndRef}\n          mode={mode}\n        />\n      ),\n    },\n    {\n      id: 1,\n      label: \"Selected Check To Be Returned\",\n      content: (\n        <SelectedCheckToBeReturned\n          ref={refSelectedCheckToBeReturned}\n          refAccountingEntry={refAccountingEntry}\n        />\n      ),\n    },\n    {\n      id: 2,\n      label: \"Accounting Entry\",\n      content: <AccountingEntry ref={refAccountingEntry} />,\n    },\n  ];\n\n  useEffect(() => {\n    setButtonPosition(buttonsRef.current[0]?.getBoundingClientRect());\n  }, []);\n\n  useImperativeHandle(ref, () => ({\n    test: () => {\n      refSelectCheck.current.test();\n      refSelectedCheckToBeReturned.current.test();\n      refAccountingEntry.current.test();\n    },\n    refSelectCheck,\n    refSelectedCheckToBeReturned,\n    refAccountingEntry,\n    tssAmountRef,\n  }));\n\n  return (\n    <div\n      style={{\n        flex: 1,\n        display: \"flex\",\n        flexDirection: \"column\",\n      }}\n    >\n      {/* Tab Buttons */}\n      <div style={{ display: \"flex\" }}>\n        {tabs.map((tab, index) => (\n          <button\n            ref={(el) => (buttonsRef.current[index] = el)}\n            key={tab.id}\n            onClick={(el) => {\n              setActiveTab(tab.id);\n              setButtonPosition(el.currentTarget.getBoundingClientRect());\n            }}\n            style={{\n              width: \"auto\",\n              fontSize: \"11px\",\n              padding: \"10px\",\n              cursor: \"pointer\",\n              backgroundColor: activeTab === tab.id ? \"white\" : \"transparent\",\n              color: activeTab === tab.id ? \"#0074cc\" : \"#000\",\n              border: \"none\",\n              borderRight:\n                activeTab === tab.id\n                  ? tab.id === 0\n                    ? \"none\"\n                    : \"1px solid #0074cc\"\n                  : tab.id === 0\n                  ? \"none\"\n                  : \"1px solid #64748b\",\n              borderLeft:\n                activeTab === tab.id\n                  ? tab.id === 2\n                    ? \"none\"\n                    : \"1px solid #0074cc\"\n                  : tab.id === 2\n                  ? \"none\"\n                  : \"1px solid #64748b\",\n              borderTop:\n                activeTab === tab.id\n                  ? \"1px solid #0074cc\"\n                  : \"1px solid #64748b\",\n\n              // borderBottom:\n              //   activeTab === tab.id ? \"2px solid #007BFF\" : \"2px solid #ccc\",\n              textTransform: \"uppercase\",\n              fontWeight: \"bold\",\n            }}\n          >\n            {tab.label}\n          </button>\n        ))}\n      </div>\n\n      {/* Render All Tab Contents */}\n      <div\n        style={{\n          padding: \"7px\",\n          flex: 1,\n          display: \"flex\",\n          // borderTop: \"2px solid #007BFF\",\n          position: \"relative\",\n          flexDirection: \"column\",\n        }}\n      >\n        <div\n          style={{\n            position: \"absolute\",\n            top: \"-2px\",\n            left: 0,\n            width: `${(buttonPosition?.left as number) - 5 || 0}px`,\n            height: \"1px\",\n            background: \"#64748b\",\n          }}\n        ></div>\n        <div\n          style={{\n            position: \"absolute\",\n            top: \"-2px\",\n            right: 0,\n            left: `${(buttonPosition?.right as number) - 5 || 0}px`,\n            height: \"1px\",\n            background: \"#64748b\",\n          }}\n        ></div>\n        {tabs.map((tab) => (\n          <div\n            key={tab.id}\n            style={{\n              display: activeTab === tab.id ? \"flex\" : \"none\", // Show only the active tab\n              flex: 1,\n              flexDirection: \"column\",\n            }}\n          >\n            {tab.content}\n          </div>\n        ))}\n        <div\n          style={{\n            display: \"flex\",\n            justifyContent: \"space-between\",\n            paddingTop: \"5px\",\n          }}\n        >\n          <input\n            ref={chkFndRef}\n            readOnly={true}\n            defaultValue={\"0.00\"}\n            style={{\n              textAlign: \"left\",\n              fontWeight: \"bold\",\n              width: \"200px\",\n              border: \"none\",\n            }}\n          />\n          <input\n            ref={tssAmountRef}\n            readOnly={true}\n            defaultValue={\"0.00\"}\n            style={{\n              textAlign: \"right\",\n              fontWeight: \"bold\",\n              width: \"200px\",\n              border: \"none\",\n            }}\n          />\n        </div>\n      </div>\n    </div>\n  );\n});\nconst columnsSelectCheck = [\n  { key: \"Deposit_Slip\", label: \"Deposit_Slip\", width: 100 },\n  { key: \"Depo_Date\", label: \"Depo_Date\", width: 130 },\n  {\n    key: \"Check_No\",\n    label: \"Check_No\",\n    width: 200,\n  },\n  {\n    key: \"Check_Date\",\n    label: \"Check_Date\",\n    width: 200,\n  },\n  {\n    key: \"Amount\",\n    label: \"Amount\",\n    width: 200,\n  },\n  {\n    key: \"Bank\",\n    label: \"Bank\",\n    width: 200,\n  },\n  {\n    key: \"Official_Receipt\",\n    label: \"Official_Receipt\",\n    width: 100,\n  },\n  {\n    key: \"Date_OR\",\n    label: \"Date_OR\",\n    width: 100,\n  },\n  {\n    key: \"BankAccount\",\n    label: \"BankAccount\",\n    width: 0,\n    hide: true,\n  },\n  {\n    key: \"_formatted_date\",\n    label: \"_formatted_date\",\n    width: 0,\n    hide: true,\n  },\n];\nconst columnsSelectedCheckToBeReturned = [\n  { key: \"ORNo\", label: \"OR No.\", width: 80 },\n  { key: \"ORDate\", label: \"OR Date\", width: 130 },\n  {\n    key: \"DepoSlip\",\n    label: \"Depo Slip\",\n    width: 130,\n  },\n  {\n    key: \"DepoDate\",\n    label: \"Depo Date\",\n    width: 130,\n  },\n  {\n    key: \"CheckNo\",\n    label: \"Check No.\",\n    width: 130,\n  },\n  {\n    key: \"CheckDate\",\n    label: \"Check Date\",\n    width: 130,\n  },\n  {\n    key: \"Amount\",\n    label: \"Amount\",\n    width: 130,\n  },\n  {\n    key: \"Bank\",\n    label: \"Bank/Branch\",\n    width: 100,\n  },\n  {\n    key: \"BankAccount\",\n    label: \"Bank Account\",\n    width: 200,\n  },\n  {\n    key: \"Reason\",\n    label: \"Reason\",\n    width: 200,\n  },\n  {\n    key: \"ReturnDate\",\n    label: \"Return Date\",\n    width: 200,\n  },\n];\nconst columnsAccountingEntry = [\n  { key: \"Code\", label: \"Code\", width: 80 },\n  { key: \"AccountName\", label: \"Account Name\", width: 130 },\n  {\n    key: \"Debit\",\n    label: \"Debit\",\n    width: 130,\n  },\n  {\n    key: \"Credit\",\n    label: \"Credit\",\n    width: 130,\n  },\n  {\n    key: \"IDNo\",\n    label: \"ID No.\",\n    width: 130,\n  },\n  {\n    key: \"Identity\",\n    label: \"Identity\",\n    width: 130,\n  },\n  {\n    key: \"SubAcct\",\n    label: \"Sub Acct\",\n    width: 130,\n  },\n  {\n    key: \"SubAcctName\",\n    label: \"Sub Acct Name\",\n    width: 130,\n  },\n  {\n    key: \"CheckNo\",\n    label: \"Check No\",\n    width: 100,\n  },\n  {\n    key: \"Bank\",\n    label: \"Bank/Branch\",\n    width: 200,\n  },\n  {\n    key: \"CheckDate\",\n    label: \"Check Date\",\n    width: 100,\n  },\n  {\n    key: \"CheckReturn\",\n    label: \"Check Return\",\n    width: 100,\n  },\n  {\n    key: \"CheckReason\",\n    label: \"Check Reason\",\n    width: 200,\n  },\n  {\n    key: \"PK\",\n    label: \"PK\",\n    width: 100,\n  },\n  {\n    key: \"DateDeposit\",\n    label: \"Date Deposit\",\n    width: 100,\n  },\n  {\n    key: \"DateCollection\",\n    label: \"Date Collection\",\n    width: 100,\n  },\n];\nconst SelectCheck = forwardRef(\n  (\n    {\n      refAccountingEntry,\n      refSelectedCheckToBeReturned,\n      tssAmountRef,\n      chkFndRef,\n      mode,\n    }: any,\n    ref\n  ) => {\n    const { user, myAxios } = useContext(AuthContext);\n    const searchSelectCheckRef = useRef<HTMLInputElement>(null);\n    const table = useRef<any>(null);\n    const modalReturnCheckEntriesRef = useRef<any>(null);\n\n    const { isLoading: isLoadingCheckSelected, mutate: mutateCheckSelected } =\n      useMutation({\n        mutationKey: \"load-details\",\n        mutationFn: async (variable: any) =>\n          await myAxios.post(`/task/accounting/get-check-list`, variable, {\n            headers: {\n              Authorization: `Bearer ${user?.accessToken}`,\n            },\n          }),\n        onSuccess(res) {\n          table.current.setDataFormated(res.data.checkList);\n          if (chkFndRef.current) {\n            chkFndRef.current.value = `Check Found: Top ${res.data.checkList.length}`;\n          }\n        },\n      });\n    const mutateCheckSelectedRef = useRef<any>(mutateCheckSelected);\n    useEffect(() => {\n      mutateCheckSelectedRef.current({\n        search: searchSelectCheckRef.current?.value,\n      });\n    }, []);\n    useImperativeHandle(ref, () => ({\n      test: () => {\n        alert(\"qweqweqweqwe1\");\n      },\n      refetchList: () => {\n        mutateCheckSelectedRef.current({\n          search: \"\",\n        });\n      },\n      table,\n    }));\n\n    return (\n      <div\n        style={{\n          display: \"flex\",\n          flex: 1,\n          flexDirection: \"column\",\n          rowGap: \"10px\",\n        }}\n      >\n        {isLoadingCheckSelected && <Loading />}\n        <TextInput\n          label={{\n            title: \"Search: \",\n            style: {\n              fontSize: \"12px\",\n              fontWeight: \"bold\",\n              width: \"50px\",\n            },\n          }}\n          input={{\n            className: \"search-input-up-on-key-down\",\n            type: \"search\",\n            onKeyDown: (e) => {\n              if (e.key === \"Enter\" || e.key === \"NumpadEnter\") {\n                e.preventDefault();\n                mutateCheckSelectedRef.current({\n                  search: e.currentTarget.value,\n                });\n              }\n            },\n            onChange: (e) => {\n              if (e.target.value === \"\") {\n                mutateCheckSelectedRef.current({\n                  search: \"\",\n                });\n              }\n            },\n            style: { width: \"100%\" },\n          }}\n          icon={<SearchIcon sx={{ fontSize: \"18px\" }} />}\n          onIconClick={(e) => {\n            e.preventDefault();\n            if (searchSelectCheckRef.current)\n              mutateCheckSelectedRef.current({\n                search: searchSelectCheckRef.current?.value,\n              });\n          }}\n          inputRef={searchSelectCheckRef}\n        />\n        <div\n          style={{\n            display: \"flex\",\n            flex: 1,\n          }}\n        >\n          <DataGridViewReact\n            disbaleTable={mode === \"\"}\n            ref={table}\n            columns={columnsSelectCheck}\n            rows={[]}\n            containerStyle={{\n              height: \"auto\",\n              flex: 1,\n            }}\n            getSelectedItem={(rowItm: any) => {\n              if (rowItm) {\n                wait(100).then(() => {\n                  const selectedChecks =\n                    refSelectedCheckToBeReturned.current.getSelectedCheck();\n                  if (selectedChecks.includes(rowItm[2])) {\n                    alert(`Check ${rowItm[2]} already exist!`);\n                    table.current.setSelectedRow(null);\n                    table.current.resetCheckBox();\n                    return;\n                  }\n                  modalReturnCheckEntriesRef.current.showModal();\n                  modalReturnCheckEntriesRef.current.setRefs({\n                    checkNo: rowItm[2],\n                    amount: rowItm[4],\n                  });\n                  modalReturnCheckEntriesRef.current.mutateEntries({\n                    ORNo: rowItm[6],\n                    Account_No: rowItm[8],\n                  });\n                  modalReturnCheckEntriesRef.current.selectItem(rowItm);\n                });\n              } else {\n                wait(100).then(() => {});\n              }\n            }}\n            onKeyDown={(rowItm: any, rowIdx: any, e: any) => {\n              if (e.code === \"Delete\" || e.code === \"Backspace\") {\n                const isConfim = window.confirm(\n                  `Are you sure you want to delete?`\n                );\n                if (isConfim) {\n                  return;\n                }\n              }\n            }}\n          />\n        </div>\n        <ModalReturnCheckEntries\n          ref={modalReturnCheckEntriesRef}\n          handleConfirm={(\n            e: any,\n            itm: Array<any>,\n            state: any,\n            tableData: Array<any>,\n            columns: Array<any>,\n            ref: any\n          ) => {\n            if (state.lblTextRef !== state.refAmount) {\n              return alert(\"Debit must equal to Credit!\");\n            }\n\n            const retDebit = tableData;\n            const RetReason =\n              ref.refReturnReason.current?.selectedIndex === 2\n                ? \"AC\"\n                : ref.refReturnReason.current?.value;\n            const RetDateRet = ref.refDateReturned.current?.value;\n            const retCredit: any = [];\n            retCredit[0] = state.refAccountID;\n            retCredit[1] = state.refAccountName;\n            retCredit[2] = state.refAmount;\n            retCredit[3] = state.refAcronym;\n            retCredit[4] = state.refSubAccount;\n            retCredit[5] = state.refAccountId;\n\n            // SelectedCheckToBeReturned\n            const newSelectedData = [\n              ...refSelectedCheckToBeReturned.current.table.current.getData(),\n              [\n                itm[6],\n                itm[7],\n                itm[0],\n                itm[1],\n                itm[2],\n                itm[3],\n                itm[4],\n                itm[5],\n                itm[8],\n                RetReason,\n                format(new Date(RetDateRet), \"MM/dd/yyyy\"),\n              ],\n            ];\n\n            refSelectedCheckToBeReturned.current.table.current.setData(\n              newSelectedData\n            );\n\n            if (tssAmountRef.current) {\n              tssAmountRef.current.value = `Total Amount:   ${formatNumber(\n                newSelectedData.reduce((total: number, row: any) => {\n                  total += parseFloat(row[6].replace(/,/g, \"\"));\n                  return total;\n                }, 0)\n              )}`;\n            }\n            let newSelectedDataAccountingEntry: any = [];\n            for (let i = 0; i < retDebit.length; i++) {\n              newSelectedDataAccountingEntry = [\n                ...refAccountingEntry.current.table.current.getData(),\n                [\n                  retDebit[i][0],\n                  retDebit[i][1],\n                  retDebit[i][2],\n                  \"0.00\",\n                  retDebit[i][3],\n                  retDebit[i][4],\n                  retDebit[i][5],\n                  retDebit[i][6],\n                  itm[2],\n                  itm[5],\n                  itm[3],\n                  format(new Date(RetDateRet), \"MM/dd/yyyy\"),\n                  RetReason,\n                  itm[2],\n                  itm[1],\n                  itm[7],\n                ],\n              ];\n            }\n            newSelectedDataAccountingEntry = [\n              ...newSelectedDataAccountingEntry,\n              [\n                retCredit[0],\n                retCredit[1],\n                \"0.00\",\n                retCredit[2],\n                retCredit[5],\n                \"\",\n                retCredit[3],\n                retCredit[4],\n                itm[2],\n                itm[5],\n                itm[3],\n                format(new Date(RetDateRet), \"MM/dd/yyyy\"),\n                RetReason,\n                itm[2],\n                itm[1],\n                itm[7],\n              ],\n            ];\n\n            refAccountingEntry.current.table.current.setData(\n              newSelectedDataAccountingEntry\n            );\n\n            const reformatData = newSelectedDataAccountingEntry.map(\n              (itm: any) => {\n                return {\n                  debit: itm[2],\n                  credit: itm[3],\n                };\n              }\n            );\n            if (refAccountingEntry.current.debitRef.current) {\n              refAccountingEntry.current.debitRef.current.value = formatNumber(\n                getSum(reformatData, \"debit\")\n              );\n            }\n\n            if (refAccountingEntry.current.creditRef.current) {\n              refAccountingEntry.current.creditRef.current.value = formatNumber(\n                getSum(reformatData, \"credit\")\n              );\n            }\n\n            // AccountingEntry\n          }}\n          handleCancel={(e: any) => {\n            table.current.setSelectedRow(null);\n            table.current.resetCheckBox();\n          }}\n        />\n      </div>\n    );\n  }\n);\nconst SelectedCheckToBeReturned = forwardRef(\n  ({ refAccountingEntry }: any, ref) => {\n    const table = useRef<any>(null);\n\n    useImperativeHandle(ref, () => ({\n      test: () => {\n        alert(\"qweqweqweqwe2\");\n      },\n      table,\n      getSelectedCheck: () => {\n        const checkList = table.current.getData();\n        if (checkList.length > 0) {\n          return checkList.map((itm: any) => {\n            return itm[4];\n          });\n        }\n        return [];\n      },\n    }));\n\n    return (\n      <div\n        style={{\n          display: \"flex\",\n          flex: 1,\n        }}\n      >\n        <DataGridViewReact\n          ref={table}\n          columns={columnsSelectedCheckToBeReturned}\n          rows={[]}\n          containerStyle={{\n            height: \"auto\",\n            flex: 1,\n          }}\n          getSelectedItem={(rowItm: any) => {\n            if (rowItm) {\n              wait(100).then(() => {});\n            } else {\n              wait(100).then(() => {});\n            }\n          }}\n          onKeyDown={(rowItm: any, rowIdx: any, e: any) => {\n            if (e.code === \"Delete\" || e.code === \"Backspace\") {\n              const isConfim = window.confirm(\n                `Are you sure you want to delete?`\n              );\n              if (isConfim) {\n                const data = table.current.getData();\n                data.splice(rowIdx, 1);\n                const accountingEntryData =\n                  refAccountingEntry.current.table.current.getData();\n                const deleteIndex = [];\n                for (\n                  let index = 0;\n                  index < accountingEntryData.length;\n                  index++\n                ) {\n                  if (rowItm[4] === accountingEntryData[index][8]) {\n                    deleteIndex.push(index);\n                  }\n                }\n\n                table.current.setData(data);\n                refAccountingEntry.current.table.current.setData(\n                  removeIndices(accountingEntryData, deleteIndex)\n                );\n\n                return;\n              }\n            }\n          }}\n        />\n      </div>\n    );\n  }\n);\n\nconst AccountingEntry = forwardRef((props: any, ref) => {\n  const table = useRef<any>(null);\n  const debitRef = useRef<HTMLInputElement>(null);\n  const creditRef = useRef<HTMLInputElement>(null);\n  useImperativeHandle(ref, () => ({\n    test: () => {\n      alert(\"qweqweqweqwe3\");\n    },\n    table,\n    debitRef,\n    creditRef,\n  }));\n\n  return (\n    <>\n      <div\n        style={{\n          display: \"flex\",\n          flex: 1,\n        }}\n      >\n        <DataGridViewReact\n          ref={table}\n          columns={columnsAccountingEntry}\n          rows={[]}\n          containerStyle={{\n            height: \"auto\",\n            flex: 1,\n          }}\n          getSelectedItem={(rowItm: any) => {\n            if (rowItm) {\n              wait(100).then(() => {});\n            } else {\n              wait(100).then(() => {});\n            }\n          }}\n          onKeyDown={(rowItm: any, rowIdx: any, e: any) => {\n            if (e.code === \"Delete\" || e.code === \"Backspace\") {\n              const isConfim = window.confirm(\n                `Are you sure you want to delete?`\n              );\n              if (isConfim) {\n                return;\n              }\n            }\n          }}\n        />\n      </div>\n      <div\n        style={{\n          display: \"flex\",\n          width: \"100%\",\n          justifyContent: \"flex-end\",\n          padding: \"5px 0\",\n          columnGap: \"5px\",\n        }}\n      >\n        <span\n          style={{ fontSize: \"13px\", fontWeight: \"bold\", marginRight: \"10px\" }}\n        >\n          Total:\n        </span>\n        <input\n          ref={debitRef}\n          readOnly={true}\n          defaultValue={\"0.00\"}\n          style={{\n            textAlign: \"right\",\n            fontWeight: \"bold\",\n            width: \"140px\",\n            border: \"none\",\n          }}\n        />\n        <input\n          ref={creditRef}\n          readOnly={true}\n          defaultValue={\"0.00\"}\n          style={{\n            textAlign: \"right\",\n            fontWeight: \"bold\",\n            width: \"140px\",\n            border: \"none\",\n          }}\n        />\n      </div>\n    </>\n  );\n});\nconst ModalReturnCheckEntries = forwardRef(\n  ({ handleConfirm, handleCancel, hasSelectedRow }: any, ref) => {\n\n    const modalRef = useRef<HTMLDivElement>(null);\n    const isMoving = useRef(false);\n    const offset = useRef({ x: 0, y: 0 });\n\n\n\n    const { user, myAxios } = useContext(AuthContext);\n    const table = useRef<any>(null);\n    const [showModal, setShowModal] = useState(false);\n    const [handleDelayClose, setHandleDelayClose] = useState(false);\n    const [selectedItem, setSelectedItem] = useState([]);\n    const [blick, setBlick] = useState(false);\n    const [checkNo, setcheckNo] = useState(\"\");\n    // return details\n    const refReturnReason = useRef<HTMLSelectElement>(null);\n    const refDateReturned = useRef<HTMLInputElement>(null);\n\n    // credit entry\n    const refAccountName = useRef<HTMLInputElement>(null);\n    const refAmount = useRef<HTMLInputElement>(null);\n    const refAccountId = useRef<HTMLInputElement>(null);\n    const refSubAccount = useRef<HTMLInputElement>(null);\n\n    const refAccountID = useRef(\"\");\n    const refAcronym = useRef(\"\");\n\n    const lblTextRef = useRef<HTMLInputElement>(null);\n\n    const { isLoading: isLoadingEntries, mutate: mutateEntries } = useMutation({\n      mutationKey: \"load-details\",\n      mutationFn: async (variable: any) =>\n        await myAxios.post(\n          `/task/accounting//return-check/load-entries`,\n          variable,\n          {\n            headers: {\n              Authorization: `Bearer ${user?.accessToken}`,\n            },\n          }\n        ),\n      onSuccess(res) {\n        const dt1 = res.data.dt1;\n        const dt2 = res.data.dt2;\n        if (dt1.length > 0) {\n          if (refAccountId.current) {\n            refAccountId.current.value = dt1[0].IDNo;\n          }\n          if (refAccountName.current) {\n            refAccountName.current.value = dt1[0].Short;\n          }\n          if (refSubAccount.current) {\n            refSubAccount.current.value = \"Head Office\";\n          }\n          refAcronym.current = \"HO\";\n          refAccountID.current = dt1[0].Account_ID;\n        }\n\n        if (dt2.length > 0) {\n          const data = dt2.map((itm: any) => {\n            return {\n              CRCode: itm.CRCode,\n              CRTitle: itm.CRTitle,\n              Credit: itm.Credit,\n              CRLoanID: itm.CRLoanID,\n              CRLoanName: itm.CRLoanName,\n              SAcctCode: itm.SubAcct,\n              SAcctName: itm.ShortName,\n            };\n          });\n          table.current.setDataFormated(data);\n        }\n\n        if (lblTextRef.current)\n          lblTextRef.current.value = formatNumber(getSum(dt2, \"Debit\"));\n      },\n    });\n\n    const closeDelay = () => {\n      setHandleDelayClose(true);\n      setTimeout(() => {\n        setShowModal(false);\n        setHandleDelayClose(false);\n        handleCancel();\n      }, 100);\n    };\n\n    useImperativeHandle(ref, () => ({\n      showModal: () => {\n        setShowModal(true);\n      },\n      clsoeModal: () => {\n        setShowModal(false);\n      },\n      getRefs: () => {\n        const refs = {};\n        return refs;\n      },\n      selectItem: (itm: any) => {\n        setSelectedItem(itm);\n      },\n      setRefs: (props: any) => {\n        setcheckNo(props.checkNo);\n        wait(100).then(() => {\n          if (refAmount.current) refAmount.current.value = props.amount;\n          if (refReturnReason.current) refReturnReason.current.value = \"DAIF\";\n        });\n      },\n      mutateEntries: (variables: string) => {\n        mutateEntries(variables);\n      },\n      closeDelay,\n    }));\n\n    const columns = [\n      { key: \"CRCode\", label: \"Code\", width: 90 },\n      { key: \"CRTitle\", label: \"Account Name\", width: 200 },\n      {\n        key: \"Credit\",\n        label: \"Amount\",\n        width: 110,\n      },\n      {\n        key: \"CRLoanID\",\n        label: \"ID No\",\n        width: 200,\n      },\n      {\n        key: \"CRLoanName\",\n        label: \"Identity\",\n        width: 200,\n      },\n      {\n        key: \"SAcctCode\",\n        label: \"Sub Account\",\n        width: 100,\n      },\n      {\n        key: \"SAcctName\",\n        label: \"Sub Account Name\",\n        width: 200,\n      },\n    ];\n\n    const handleMouseDown = (e: any) => {\n      if (!modalRef.current) return;\n\n      isMoving.current = true;\n      offset.current = {\n        x: e.clientX - modalRef.current.offsetLeft,\n        y: e.clientY - modalRef.current.offsetTop,\n      };\n\n      document.addEventListener(\"mousemove\", handleMouseMove);\n      document.addEventListener(\"mouseup\", handleMouseUp);\n    };\n\n    // Move modal with mouse\n    const handleMouseMove = (e: any) => {\n      if (!isMoving.current || !modalRef.current) return;\n\n      modalRef.current.style.left = `${e.clientX - offset.current.x}px`;\n      modalRef.current.style.top = `${e.clientY - offset.current.y}px`;\n    };\n\n    // Stop moving when releasing mouse\n    const handleMouseUp = () => {\n      isMoving.current = false;\n      document.removeEventListener(\"mousemove\", handleMouseMove);\n      document.removeEventListener(\"mouseup\", handleMouseUp);\n    };\n\n    return showModal ? (\n      <>\n        {isLoadingEntries && <Loading />}\n        <div\n          style={{\n            position: \"fixed\",\n            top: 0,\n            bottom: 0,\n            left: 0,\n            right: 0,\n            background: \"transparent\",\n            zIndex: \"88\",\n          }}\n          onClick={() => {\n            setBlick(true);\n            setTimeout(() => {\n              setBlick(false);\n            }, 250);\n          }}\n        ></div>\n        <div\n        ref={modalRef}\n          style={{\n            height: blick ? \"402px\" : \"400px\",\n            width: blick ? \"60.3%\" : \"60%\",\n            border: \"1px solid #64748b\",\n            position: \"absolute\",\n            left: \"50%\",\n            top: \"35%\",\n            transform: \"translate(-50%, -75%)\",\n            display: \"flex\",\n            flexDirection: \"column\",\n            zIndex: handleDelayClose ? -100 : 100,\n            opacity: handleDelayClose ? 0 : 1,\n            transition: \"all 150ms\",\n            boxShadow: \"3px 6px 32px -7px rgba(0,0,0,0.75)\",\n          }}\n        >\n          <div\n            style={{\n              height: \"22px\",\n              background: \"white\",\n              display: \"flex\",\n              justifyContent: \"space-between\",\n              padding: \"5px\",\n              position: \"relative\",\n              alignItems: \"center\",\n              cursor: \"grab\",\n\n            }}\n            onMouseDown={handleMouseDown}\n          >\n            <span style={{ fontSize: \"13px\", fontWeight: \"bold\" }}>\n              Return Detail and Accounting Entry (Check No.: {checkNo})\n            </span>\n            <button\n              className=\"btn-check-exit-modal\"\n              style={{\n                padding: \"0 5px\",\n                borderRadius: \"0px\",\n                background: \"white\",\n                color: \"black\",\n                height: \"22px\",\n                position: \"absolute\",\n                top: 0,\n                right: 0,\n              }}\n              onClick={() => {\n                closeDelay();\n              }}\n            >\n              <CloseIcon sx={{ fontSize: \"22px\" }} />\n            </button>\n          </div>\n          <div\n            style={{\n              flex: 1,\n              background: \"#F1F1F1\",\n              padding: \"5px\",\n              display: \"flex\",\n              flexDirection: \"column\",\n            }}\n          >\n            <div\n              style={{\n                display: \"flex\",\n                columnGap: \"5px\",\n                height: \"auto\",\n              }}\n            >\n              <div\n                style={{\n                  height: \"auto\",\n                  display: \"flex\",\n                  flexDirection: \"column\",\n                  padding: \"10px\",\n                  rowGap: \"20px\",\n                }}\n              >\n                <div\n                  style={{\n                    height: \"auto\",\n                    padding: \"10px\",\n                    display: \"flex\",\n                    width: \"100%\",\n                    border: \"1px solid #64748b\",\n                    position: \"relative\",\n                  }}\n                >\n                  <span\n                    style={{\n                      position: \"absolute\",\n                      top: \"-15px\",\n                      left: \"20px\",\n                      background: \"#F1F1F1\",\n                      padding: \"0 5px\",\n                      fontSize: \"14px\",\n                      fontWeight: \"bold\",\n                    }}\n                  >\n                    Return Detail\n                  </span>\n                  <div\n                    style={{\n                      display: \"flex\",\n                      columnGap: \"50px\",\n                    }}\n                  >\n                    <SelectInput\n                      containerStyle={{ width: \"100%\" }}\n                      label={{\n                        title: \"Return Reason : \",\n                        style: {\n                          fontSize: \"12px\",\n                          fontWeight: \"bold\",\n                          width: \"100px\",\n                        },\n                      }}\n                      selectRef={refReturnReason}\n                      select={{\n                        style: { flex: 1, height: \"22px\" },\n                        defaultValue: \"\",\n                      }}\n                      datasource={[\n                        { key: \"DAIF\", value: \"DAIF\" },\n                        { key: \"DAUD\", value: \"DAUD\" },\n                        { key: \"Account Closed\", value: \"Account Closed\" },\n                        { key: \"SPO\", value: \"SPO\" },\n                        {\n                          key: \"Account under Garnishment\",\n                          value: \"Account under Garnishment\",\n                        },\n                        {\n                          key: \"Unauthorized Signature\",\n                          value: \"Unauthorized Signature\",\n                        },\n                      ]}\n                      values={\"value\"}\n                      display={\"key\"}\n                    />\n                    {/* <TextInput\n                      label={{\n                        title: \"Return Reason : \",\n                        style: {\n                          fontSize: \"12px\",\n                          fontWeight: \"bold\",\n                          width: \"100px\",\n                        },\n                      }}\n                      input={{\n                        className: \"ref_no\",\n                        type: \"text\",\n                        style: { width: \"200px\" },\n                      }}\n                      inputRef={refReturnReason}\n                    /> */}\n                    <TextInput\n                      label={{\n                        title: \"Return Date : \",\n                        style: {\n                          fontSize: \"12px\",\n                          fontWeight: \"bold\",\n                          width: \"100px\",\n                        },\n                      }}\n                      input={{\n                        defaultValue: format(new Date(), \"yyyy-MM-dd\"),\n                        className: \"date\",\n                        type: \"date\",\n                        style: { width: \"200px\" },\n                      }}\n                      inputRef={refDateReturned}\n                    />\n                  </div>\n                </div>\n                <div\n                  style={{\n                    height: \"auto\",\n                    padding: \"10px\",\n                    display: \"flex\",\n                    width: \"100%\",\n                    border: \"1px solid #64748b\",\n                    position: \"relative\",\n                  }}\n                >\n                  <span\n                    style={{\n                      position: \"absolute\",\n                      top: \"-15px\",\n                      left: \"20px\",\n                      background: \"#F1F1F1\",\n                      padding: \"0 5px\",\n                      fontSize: \"14px\",\n                      fontWeight: \"bold\",\n                    }}\n                  >\n                    Credit Entry\n                  </span>\n                  <div\n                    style={{\n                      display: \"flex\",\n                      flexDirection: \"column\",\n                      rowGap: \"10px\",\n                      height: \"auto\",\n                    }}\n                  >\n                    <div\n                      style={{\n                        display: \"flex\",\n                        columnGap: \"50px\",\n                      }}\n                    >\n                      <TextInput\n                        label={{\n                          title: \"Account Name : \",\n                          style: {\n                            fontSize: \"12px\",\n                            fontWeight: \"bold\",\n                            width: \"100px\",\n                          },\n                        }}\n                        input={{\n                          readOnly: true,\n                          className: \"ref_no\",\n                          type: \"text\",\n                          style: { width: \"200px\" },\n                        }}\n                        inputRef={refAccountName}\n                      />\n                      <TextInput\n                        label={{\n                          title: \"Account ID : \",\n                          style: {\n                            fontSize: \"12px\",\n                            fontWeight: \"bold\",\n                            width: \"100px\",\n                          },\n                        }}\n                        input={{\n                          readOnly: true,\n                          className: \"account-id\",\n                          type: \"text\",\n                          style: { width: \"200px\" },\n                        }}\n                        inputRef={refAccountId}\n                      />\n                    </div>\n                    <div\n                      style={{\n                        display: \"flex\",\n                        columnGap: \"50px\",\n                      }}\n                    >\n                      <TextInput\n                        label={{\n                          title: \"Amount : \",\n                          style: {\n                            fontSize: \"12px\",\n                            fontWeight: \"bold\",\n                            width: \"100px\",\n                          },\n                        }}\n                        input={{\n                          readOnly: true,\n                          className: \"ref_no\",\n                          type: \"text\",\n                          style: { width: \"200px\" },\n                        }}\n                        inputRef={refAmount}\n                      />\n                      <TextInput\n                        label={{\n                          title: \"Sub Account : \",\n                          style: {\n                            fontSize: \"12px\",\n                            fontWeight: \"bold\",\n                            width: \"100px\",\n                          },\n                        }}\n                        input={{\n                          readOnly: true,\n                          className: \"sub-account\",\n                          type: \"text\",\n                          style: { width: \"200px\" },\n                        }}\n                        inputRef={refSubAccount}\n                      />\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div\n                style={{\n                  width: \"100px\",\n                  display: \"flex\",\n                  flexDirection: \"column\",\n                  alignItems: \"center\",\n                  justifyContent: \"center\",\n                  rowGap: \"20px\",\n                  height: \"auto\",\n                }}\n              >\n                <BlinkingButton\n                  style={{\n                    width: \"80px\",\n                    height: \"50px\",\n                    border: \"1px solid #153002\",\n                    fontSize: \"12px\",\n                    padding: 0,\n                    margin: 0,\n                    boxSizing: \"border-box\",\n                    background: \"#8fbc8b\",\n                    color: \"black\",\n                    display: \"flex\",\n                    flexDirection: \"column\",\n                    justifyContent: \"center\",\n                    alignItems: \"center\",\n                    fontFamily: \"arial\",\n                    cursor: \"pointer\",\n                    position: \"relative\",\n                  }}\n                  onClick={(e: any) => {\n                    const data = table.current.getData();\n                    const state = {\n                      refReturnReason: refReturnReason.current?.value,\n                      refDateReturned: refDateReturned.current?.value,\n                      refAccountName: refAccountName.current?.value,\n                      refAmount: refAmount.current?.value,\n                      refAccountId: refAccountId.current?.value,\n                      refSubAccount: refSubAccount.current?.value,\n                      refAccountID: refAccountID.current,\n                      refAcronym: refAcronym.current,\n                      lblTextRef: lblTextRef.current?.value,\n                    };\n                    const ref = {\n                      refReturnReason,\n                      refDateReturned,\n                      refAccountName,\n                      refAmount,\n                      refAccountId,\n                      refSubAccount,\n                      refAccountID,\n                      refAcronym,\n                      lblTextRef,\n                    };\n                    handleConfirm(e, selectedItem, state, data, columns, ref);\n                    closeDelay();\n                  }}\n                >\n                  <span\n                    style={{\n                      position: \"absolute\",\n                      top: \"2px\",\n                    }}\n                  >\n                    <svg\n                      xmlns=\"http://www.w3.org/2000/svg\"\n                      width=\"22px\"\n                      height=\"22px\"\n                      viewBox=\"0 0 24 24\"\n                      fill=\"none\"\n                    >\n                      <path\n                        d=\"M8.5 12.5L10.5 14.5L15.5 9.5\"\n                        stroke=\"white\"\n                        strokeWidth=\"1.5\"\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                      />\n                      <path\n                        d=\"M7 3.33782C8.47087 2.48697 10.1786 2 12 2C17.5228 2 22 6.47715 22 12C22 17.5228 17.5228 22 12 22C6.47715 22 2 17.5228 2 12C2 10.1786 2.48697 8.47087 3.33782 7\"\n                        stroke=\"#a5e15b\"\n                        strokeWidth=\"1.5\"\n                        strokeLinecap=\"round\"\n                      />\n                    </svg>\n                  </span>\n                  <span\n                    style={{\n                      position: \"absolute\",\n                      top: \"25px\",\n                    }}\n                  >\n                    Accept\n                  </span>\n                </BlinkingButton>\n                <BlinkingButton\n                  style={{\n                    width: \"80px\",\n                    height: \"50px\",\n                    border: \"1px solid #153002\",\n                    fontSize: \"12px\",\n                    padding: 0,\n                    margin: 0,\n                    boxSizing: \"border-box\",\n                    background: \"#8fbc8b\",\n                    color: \"black\",\n                    display: \"flex\",\n                    flexDirection: \"column\",\n                    justifyContent: \"center\",\n                    alignItems: \"center\",\n                    fontFamily: \"arial\",\n                    cursor: \"pointer\",\n                    position: \"relative\",\n                  }}\n                  onClick={(e: any) => {\n                    handleCancel(e);\n                    closeDelay();\n                  }}\n                >\n                  <span\n                    style={{\n                      position: \"absolute\",\n                      top: \"2px\",\n                    }}\n                  >\n                    <svg\n                      xmlns=\"http://www.w3.org/2000/svg\"\n                      fill=\"red\"\n                      width=\"21px\"\n                      height=\"21px\"\n                      viewBox=\"0 0 36 36\"\n                      version=\"1.1\"\n                      preserveAspectRatio=\"xMidYMid meet\"\n                    >\n                      <title>ban-line</title>\n                      <path\n                        className=\"clr-i-outline clr-i-outline-path-1\"\n                        d=\"M18,2A16,16,0,1,0,34,18,16,16,0,0,0,18,2ZM4,18A13.93,13.93,0,0,1,7.43,8.85L27.15,28.57A14,14,0,0,1,4,18Zm24.57,9.15L8.85,7.43A14,14,0,0,1,28.57,27.15Z\"\n                      />\n                      <rect\n                        x=\"0\"\n                        y=\"0\"\n                        width=\"36\"\n                        height=\"36\"\n                        fillOpacity=\"0\"\n                      />\n                    </svg>\n                  </span>\n                  <span\n                    style={{\n                      position: \"absolute\",\n                      top: \"25px\",\n                    }}\n                  >\n                    Cancel\n                  </span>\n                </BlinkingButton>\n              </div>\n            </div>\n            <div\n              style={{\n                flex: 1,\n              }}\n            >\n              <DataGridViewReact\n                ref={table}\n                columns={columns}\n                rows={[]}\n                containerStyle={{\n                  height: \"200px\",\n                  flex: 1,\n                }}\n                getSelectedItem={(rowItm: any) => {\n                  if (rowItm) {\n                    wait(100).then(() => {});\n                  } else {\n                    wait(100).then(() => {});\n                  }\n                }}\n                onKeyDown={(rowItm: any, rowIdx: any, e: any) => {\n                  if (e.code === \"Delete\" || e.code === \"Backspace\") {\n                    const isConfim = window.confirm(\n                      `Are you sure you want to delete?`\n                    );\n                    if (isConfim) {\n                      return;\n                    }\n                  }\n                }}\n              />\n            </div>\n            <input\n              style={{\n                width: \"100%\",\n                textAlign: \"right\",\n                fontWeight: \"bold\",\n                paddingRight: \"10px\",\n              }}\n              ref={lblTextRef}\n              defaultValue={\"0.00\"}\n              readOnly\n            />\n          </div>\n          <style>\n            {`\n              .btn-check-exit-modal:hover{\n                background:red !important;\n                color:white !important;\n              }\n            `}\n          </style>\n        </div>\n      </>\n    ) : null;\n  }\n);\nconst BlinkingButton = ({ onClick, style, children }: any) => {\n  const uniClass = `btn-${Date.now()}-${Math.random()\n    .toString(36)\n    .substr(2, 9)}`;\n  const [isBlinking, setIsBlinking] = useState(false);\n\n  const handleClick = (e: any) => {\n    setIsBlinking(true); // Start blinking\n    setTimeout(() => setIsBlinking(false), 200); // Stop blinking after 1 second\n    onClick(e);\n  };\n  return (\n    <>\n      <button\n        className={`${uniClass} ${isBlinking ? \"blinking\" : \"\"}`}\n        onClick={handleClick}\n        style={style}\n      >\n        {children}\n      </button>\n      <style>\n        {`\n        .${uniClass} {\n          padding: 10px 20px;\n          font-size: 16px;\n          color: white;\n          border: ${isBlinking ? \"2px solid #153002 !important\" : \"none \"};\n          border-radius: 5px;\n          cursor: pointer;\n          transition: background-color 0.3s ease;\n\n        }\n\n        .${uniClass}:hover {\n          background-color:rgb(145, 177, 142) !important;\n        }\n\n        /* Blink animation */\n        @keyframes blink {\n          0% {\n            opacity: 1;\n          }\n          50% {\n            opacity: 0.5;\n          }\n          100% {\n            opacity: 1;\n          }\n        }\n\n        .blinking {\n          animation: blink 0.5s linear infinite;\n        }\n                `}\n      </style>\n    </>\n  );\n};\nexport function formatNumber(num: number) {\n  return (num || 0).toLocaleString(\"en-US\", {\n    minimumFractionDigits: 2,\n    maximumFractionDigits: 2,\n  });\n}\nexport function getSum(data: Array<any>, key: string): number {\n  if (data.length <= 0) {\n    return 0;\n  }\n  return data.reduce((total: number, row: any) => {\n    total += parseFloat(row[key].toString().replace(/,/g, \"\"));\n    return total;\n  }, 0);\n}\nfunction removeIndices(arr: any, indices: any) {\n  const toRemove = new Set(indices); // Use Set for faster lookup\n  return arr.filter((_: any, index: any) => !toRemove.has(index));\n}\n","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 6v3l4-4-4-4v3c-4.42 0-8 3.58-8 8 0 1.57.46 3.03 1.24 4.26L6.7 14.8c-.45-.83-.7-1.79-.7-2.8 0-3.31 2.69-6 6-6zm6.76 1.74L17.3 9.2c.44.84.7 1.79.7 2.8 0 3.31-2.69 6-6 6v-3l-4 4 4 4v-3c4.42 0 8-3.58 8-8 0-1.57-.46-3.03-1.24-4.26z\"\n}), 'Autorenew');\nexports.default = _default;"],"names":["ReturnCheck","_mutationFn","_mutationFn2","_queryFn","_mutationFn3","_getSelectedItem","_useContext","useContext","AuthContext","user","myAxios","_useState","useState","_useState2","_slicedToArray","mode","setMode","returnCheckComponentRef","useRef","inputSearchRef","refNoRef","refDate","refExp","_useMutation","useMutation","mutationKey","mutationFn","_x","_asyncToGenerator","_regeneratorRuntime","mark","_callee","variable","wrap","_context","prev","next","post","headers","Authorization","concat","accessToken","abrupt","sent","stop","apply","arguments","onSuccess","res","data","success","resetReturnChecks","Swal","position","icon","title","message","showConfirmButton","timer","isLoadingReturnChecksSave","isLoading","mutateReturnChecksSave","mutate","_useMutation2","_x2","_callee2","_context2","isLoadingReturnChecksUpdate","mutateReturnChecksUpdate","_useQuery","useQuery","queryKey","queryFn","_callee3","_context3","get","refetchOnWindowFocus","wait","then","current","value","newRefCode","isLoadingReturnChecksID","refetch","_useMutation3","_x3","_callee4","_context4","data1","JSON","parse","data2","console","log","length","RC_No","format","Date","RC_Date","Explanation","newSelectedCheck","index","push","ORNum","Date_Collect","SlipCode","Date_Deposit","Check_No","Check_Date","formatNumber","parseFloat","Amount","toString","replace","Bank","BankAccnt","Reason","Date_Return","refSelectedCheckToBeReturned","table","setData","tssAmountRef","getSum","newAccoutningEntry","GL_Acct","cGL_Acct","Debit","Credit","ID_No","cID_No","Sub_Acct","cSub_Acct","Check_Bank","Check_Return","Check_Reason","Check_Deposit","Check_Collect","refAccountingEntry","debitRef","creditRef","isLoadingReturnChecksSearchSelectedSave","mutateReturnChecksSearchSelectedSave","_useUpwardTableModalS","useUpwardTableModalSearchSafeMode","link","column","key","label","width","getSelectedItem","_x4","_x5","_x6","_x7","_callee5","rowItm","_","rowIdx","__","_context5","RefNo","searchReturnCheckCreditCloseModal","SearchReturnCheckUpwardTableModalSearch","UpwardTableModalSearch","searchReturnCheckCreditOpenModal","openModal","closeModal","refSelectCheck","resetCheckBox","setSelectedRow","refetchList","_jsxs","_Fragment","children","_jsx","Loading","style","display","flexDirection","height","flex","padding","background","alignItems","columnGap","marginBottom","TextInput","fontSize","fontWeight","input","className","type","onKeyDown","e","preventDefault","currentTarget","SearchIcon","sx","onIconClick","inputRef","Button","variant","startIcon","AddIcon","id","onClick","color","SaveIcon","_refExp$current","_refExp$current2","alert","focus","dgvSelChecks","getData","dgvAccountingEntry","saveCondfirmationAlert","isConfirm","_refNoRef$current","_refDate$current","_refExp$current3","refNo","date","explanation","codeCondfirmationAlert","isUpdate","cb","userCodeConfirmation","_refNoRef$current2","_refDate$current2","_refExp$current4","disabled","CloseIcon","text","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","result","isConfirmed","rowGap","border","defaultValue","AutorenewIcon","TabPage","ref","forwardRef","_ref","_useState3","_useState4","activeTab","setActiveTab","_useState5","_useState6","buttonPosition","setButtonPosition","buttonsRef","chkFndRef","tabs","content","SelectCheck","SelectedCheckToBeReturned","AccountingEntry","useEffect","_buttonsRef$current$","getBoundingClientRect","useImperativeHandle","test","map","tab","el","cursor","backgroundColor","borderRight","borderLeft","borderTop","textTransform","top","left","right","justifyContent","paddingTop","readOnly","textAlign","columnsSelectCheck","hide","columnsSelectedCheckToBeReturned","columnsAccountingEntry","_ref2","_mutationFn4","_useContext2","searchSelectCheckRef","modalReturnCheckEntriesRef","_useMutation4","_x8","_callee6","_context6","setDataFormated","checkList","isLoadingCheckSelected","mutateCheckSelected","mutateCheckSelectedRef","_searchSelectCheckRef","search","onChange","target","_searchSelectCheckRef2","DataGridViewReact","disbaleTable","columns","rows","containerStyle","getSelectedCheck","includes","showModal","setRefs","checkNo","amount","mutateEntries","ORNo","Account_No","selectItem","code","window","confirm","ModalReturnCheckEntries","handleConfirm","itm","state","tableData","_ref$refReturnReason$","_ref$refReturnReason$2","_ref$refDateReturned$","lblTextRef","refAmount","retDebit","RetReason","refReturnReason","selectedIndex","RetDateRet","refDateReturned","retCredit","refAccountID","refAccountName","refAcronym","refSubAccount","refAccountId","newSelectedData","_toConsumableArray","reduce","total","row","newSelectedDataAccountingEntry","i","reformatData","debit","credit","handleCancel","_ref3","splice","accountingEntryData","deleteIndex","arr","indices","toRemove","Set","filter","has","removeIndices","props","marginRight","_ref4","_mutationFn5","modalRef","hasSelectedRow","isMoving","offset","x","y","_useContext3","_useState7","_useState8","setShowModal","_useState9","_useState10","handleDelayClose","setHandleDelayClose","_useState11","_useState12","selectedItem","setSelectedItem","_useState13","_useState14","blick","setBlick","_useState15","_useState16","setcheckNo","_useMutation5","_x9","_callee7","_context7","dt1","dt2","IDNo","Short","Account_ID","CRCode","CRTitle","CRLoanID","CRLoanName","SAcctCode","SubAcct","SAcctName","ShortName","isLoadingEntries","closeDelay","setTimeout","clsoeModal","getRefs","variables","handleMouseMove","clientX","clientY","handleMouseUp","document","removeEventListener","bottom","zIndex","transform","opacity","transition","boxShadow","onMouseDown","offsetLeft","offsetTop","addEventListener","borderRadius","SelectInput","selectRef","select","datasource","values","BlinkingButton","margin","boxSizing","fontFamily","_refReturnReason$curr","_refDateReturned$curr","_refAccountName$curre","_refAmount$current","_refAccountId$current","_refSubAccount$curren","_lblTextRef$current","xmlns","viewBox","fill","d","stroke","strokeWidth","strokeLinecap","strokeLinejoin","version","preserveAspectRatio","fillOpacity","paddingRight","_ref5","uniClass","now","Math","random","substr","_useState17","_useState18","isBlinking","setIsBlinking","num","toLocaleString","minimumFractionDigits","maximumFractionDigits","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx"],"sourceRoot":""}