{"version":3,"file":"static/js/7303.8e1e0122.chunk.js","mappings":"iUAGe,SAASA,EAAgBC,GAY/B,IAXPC,EAAKD,EAALC,MACAC,EAAIF,EAAJE,KACAC,EAAQH,EAARG,SACAC,EAAKJ,EAALI,MACAC,EAASL,EAATK,UACAC,EAAQN,EAARM,SACAC,EAAaP,EAAbO,cACAC,EAASR,EAATQ,UACAC,EAAST,EAATS,UAASC,EAAAV,EACTW,SAAAA,OAAQ,IAAAD,EAAG,QAAOA,EACfE,GAAIC,EAAAA,EAAAA,GAAAb,EAAAc,GAEP,OACEC,EAAAA,EAAAA,KAACC,EAAAA,EAAoB,CAACC,YAAaC,EAAAA,EAAeC,UAChDJ,EAAAA,EAAAA,KAACK,EAAAA,GAAUC,EAAAA,EAAAA,GAAA,CACXC,mBAAoB,CAACC,MAAO,SAC1BnB,MAAOA,EACPD,SAAUA,EACVqB,IAAKjB,EACLkB,UAAW,CACThB,WAASY,EAAAA,EAAAA,GAAA,CACPK,KAAM,QACNzB,MAAAA,EACAC,KAAAA,EACAG,UAAAA,EACAC,SAAUA,EACVE,UAAAA,GAEGC,IAGPkB,gBAAiB,CACfC,GAAI,CACFL,MAAO,UAGXK,GAAI,CACFjB,SAAAA,EACAkB,SAAU,CAAEC,YAAa,SACzB,qBAAsB,CAAEC,SAAU,QAClC,wCAAyC,CACvCC,IAAK,UAGLpB,KAIZ,C,kDCvCA,IAVmB,SAAHZ,GAA2C,IAADiC,EAAAjC,EAApCkC,MAAAA,OAAK,IAAAD,EAAG,GAAEA,EAE5B,OACIE,EAAAA,EAAAA,MAACC,EAAAA,EAAM,CAAAjB,SAAA,EACHJ,EAAAA,EAAAA,KAAA,SAAAI,SAAQe,KACRnB,EAAAA,EAAAA,KAAA,QAAMsB,IAAI,OAAOC,KAAK,YAAYC,KAAI,GAAAC,OAJ/BC,yBAI0C,iBAG7D,C,8MCyBMC,EAAQ,CACZC,SAAU,WACVX,IAAK,MACLY,KAAM,MACNC,UAAW,wBACXC,MAAO,MACPC,QAAS,mBACTC,UAAW,GACXC,EAAG,EACHC,OAAQ,QAGK,SAASC,EAAcnD,GAmBZ,IAlBxBoD,EAAMpD,EAANoD,OACAC,EAASrD,EAATqD,UAEAC,GADQtD,EAARuD,SACOvD,EAAPsD,SACAE,EAAiBxD,EAAjBwD,kBAEAC,GADOzD,EAAP0D,QACI1D,EAAJyD,MACAE,EAAE3D,EAAF2D,GACAC,EAAY5D,EAAZ4D,aACAC,EAAS7D,EAAT6D,UACAC,EAAgB9D,EAAhB8D,iBACAC,EAAc/D,EAAd+D,eAAc9B,EAAAjC,EACdkC,MAAAA,OAAK,IAAAD,EAAG,GAAEA,EACV+B,EAAShE,EAATgE,UACaC,GAAAjE,EAAbkE,cAAalE,EACbmE,kBAAAA,OAAgB,IAAAF,EAAG,WAAQ,EAACA,EAC5BG,EAAepE,EAAfoE,gBACAC,EAAgBrE,EAAhBqE,iBAEMC,EAASC,IAEf,OACExD,EAAAA,EAAAA,KAACyD,EAAAA,EAAK,CACJC,KAAMZ,EACNa,QAASd,EACT,kBAAgB,oBAChB,mBAAiB,0BAAyBzC,UAE1CgB,EAAAA,EAAAA,MAACwC,EAAAA,EAAG,CAAC/C,GAAIc,EAAMvB,SAAA,EACbJ,EAAAA,EAAAA,KAAC6D,EAAAA,EAAU,CAACjB,GAAG,oBAAoBkB,QAAQ,KAAKC,UAAU,KAAKC,GAAI,EAAE5D,SAClEe,KAEHnB,EAAAA,EAAAA,KAACiE,EAAAA,EAAS,CACRtD,KAAK,QACLzB,MAAM,SACN2B,GAAI,CAAEqD,aAAc,QACpBzE,WAAS,EACTL,SAAU4D,EACVmB,WAAY,CACV5E,SAAU0D,GAEZ3D,UAAW,SAAC8E,GAC2C,IAADC,EAArC,UAAXD,EAAEE,MAA+B,gBAAXF,EAAEE,OAC1BF,EAAEG,iBACFnB,EAA0B,OAATH,QAAS,IAATA,GAAkB,QAAToB,EAATpB,EAAWuB,eAAO,IAAAH,OAAT,EAATA,EAAoBhF,QAEvCoF,EACEL,EACAb,EACS,OAATN,QAAS,IAATA,OAAS,EAATA,EAAWuB,QAEf,KAEFxE,EAAAA,EAAAA,KAAA,OACE0E,UAAS,GAAAjD,OAAK8B,EAAM,mCACpB5B,MAAO,CAAEC,SAAU,WAAYS,OAAO,GAADZ,OAAKY,EAAS,GAAE,OAAOjC,UAE5DJ,EAAAA,EAAAA,KAAC2E,EAAAA,EAAK,CACJC,mBAAmB,EACnBC,aAAa,EACbtC,QAASA,EACTD,UAAWA,EACXwC,cAAe,SAACC,EAAWC,EAAMV,GAC/B7B,EAAkBsC,EAAWC,EAC/B,EACAC,SAAUrC,EACVF,KAAMA,EACNW,gBAAiBA,EACjBC,iBAAkBA,OAItBtD,EAAAA,EAAAA,KAAA,OAAK2B,MAAO,CAAEC,SAAU,WAAYX,IAAK,OAAQiE,MAAO,QAAS9E,UAC/DJ,EAAAA,EAAAA,KAACmF,EAAAA,EAAU,CACT,aAAW,gBACX3E,MAAM,YACN4E,QAASrC,EAAiB3C,UAE1BJ,EAAAA,EAAAA,KAACqF,EAAAA,EAAS,YAMtB,CAEO,SAAS7B,IAGd,MADoB,QADC8B,KAAKC,MAAsB,IAAhBD,KAAKE,SAGvC,CAyBO,SAASf,EACdL,EACAM,EACAe,GAEA,IAAMlC,EAASmB,EACf,GAAe,cAAXN,EAAEE,KAAsB,CAAC,IAADoB,EACpBhD,EAAOiD,SAASC,iBAAiB,IAADnE,OAAK8B,EAAM,sBACjDa,EAAEG,iBACK,QAAPmB,EAAAhD,EAAK,UAAE,IAAAgD,GAAPA,EAASG,UAAUC,IAAI,kBAhC3B,SAAwBpB,EAAmBe,GACzC,IAAMM,EAAiBJ,SAASK,cAAc,IAADvE,OACvCiD,EAAS,sBAETuB,EAA2B,OAAdF,QAAc,IAAdA,OAAc,EAAdA,EAAgBC,cAAc,SACvC,OAAVC,QAAU,IAAVA,GAAAA,EAAYC,QACZ,IAAMC,EAAQ,IAAIC,WAAW,aAAc,CACzCC,SAAS,EACTC,YAAY,EACZC,KAAMC,SAEM,OAAdT,QAAc,IAAdA,GAAAA,EAAgBU,cAAcN,GACpB,OAAVF,QAAU,IAAVA,GAAAA,EAAYS,iBAAiB,WAAW,SAACC,GACxB,YAAXA,EAAGC,MACLD,EAAGpC,iBACHkB,EAAGS,SAEU,YAAXS,EAAGC,MACS,OAAdb,QAAc,IAAdA,GAAAA,EAAgBF,UAAUgB,OAAO,kBAErC,GACF,CAYIC,CAAepC,EAAWe,GAC1B/C,EAAKqE,SAAQ,SAACtB,EAAIuB,GAChBvB,EAAGiB,iBAAiB,WAAW,SAACC,GAC9B,GAAe,YAAXA,EAAGC,IAAmB,CAAC,IAADK,EAAAC,EACxB,GAAIF,GAAO,EACT,OAMF,OAHAL,EAAGpC,iBACM,QAAT0C,EAAAvE,EAAKsE,UAAI,IAAAC,GAATA,EAAWpB,UAAUgB,OAAO,uBACf,QAAbK,EAAAxE,EAAKsE,EAAM,UAAE,IAAAE,GAAbA,EAAerB,UAAUC,IAAI,kBAE/B,CACA,GAAe,cAAXa,EAAGC,IAAqB,CAAC,IAADO,EAAAC,EAE1B,GADAT,EAAGpC,iBACCyC,GAAOtE,EAAK2E,OAAS,EACvB,OAEO,QAATF,EAAAzE,EAAKsE,UAAI,IAAAG,GAATA,EAAWtB,UAAUgB,OAAO,kBACf,QAAbO,EAAA1E,EAAKsE,EAAM,UAAE,IAAAI,GAAbA,EAAevB,UAAUC,IAAI,iBAC/B,CACF,GACF,GACF,CACF,C,iIC9LawB,EAAsBC,EAAAA,YAGjC,SAA6BC,EAAO/G,GACpC,IAAQrB,EAAuBoI,EAAvBpI,SAAaqI,GAAK3H,EAAAA,EAAAA,GAAK0H,EAAKzH,GAEpC,OACEC,EAAAA,EAAAA,KAAC0H,EAAAA,IAAapH,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACRmH,GAAK,IACTE,YAAalH,EACbmH,cAAe,SAACC,GACdzI,EAAS,CACP0I,OAAQ,CACN3I,KAAMqI,EAAMrI,KACZE,MAAOwI,EAAOxI,QAGpB,EACA0I,eAAe,EACfC,mBAAiB,EACjBC,sBAAoB,IAI1B,G,yKCeMC,GAAeC,EAAAA,EAAAA,eASlB,CACDzF,KAAM,GACN0F,kBAAmB,GACnBC,eAAgB,kBAAMrI,EAAAA,EAAAA,KAAA,SAAW,EACjCsI,yBAA0B,aAC1BC,yBAAyB,IAErB5D,GAAQ6D,EAAAA,EAAAA,aACZ,SAAAvJ,EAoBEwB,GACI,IAnBF6B,EAASrD,EAATqD,UACAC,EAAOtD,EAAPsD,QACAG,EAAIzD,EAAJyD,KACAuC,EAAQhG,EAARgG,SACAL,EAAiB3F,EAAjB2F,kBACAC,EAAW5F,EAAX4F,YACAC,EAAa7F,EAAb6F,cAAa2D,EAAAxJ,EACbyJ,sBAAAA,OAAqB,IAAAD,EAAGE,EAAqBF,EAC7CpF,EAAepE,EAAfoE,gBACAC,EAAgBrE,EAAhBqE,iBAAgBsF,EAAA3J,EAChB4J,kBAAAA,OAAiB,IAAAD,GAAOA,EAAAE,EAAA7J,EACxBoJ,eAAAA,OAAc,IAAAS,EAAG,SACfV,EACA1F,GAAgB,OACb1C,EAAAA,EAAAA,KAAA,SAAW,EAAA8I,EAAAC,EAAA9J,EAChBqJ,yBAAAA,OAAwB,IAAAS,EAAG,aAAYA,EAAAC,EAAA/J,EACvCsJ,wBAAAA,OAAuB,IAAAS,GAAOA,EAIhCC,GAAwCC,EAAAA,EAAAA,UAAc,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAlDI,EAAYF,EAAA,GAAEG,EAAeH,EAAA,GAgBpC,SAAS1G,EAAkBsC,EAAgBC,EAAWV,GAChDQ,GACFA,EAAcC,EAAWC,EAAMV,EAEnC,EAlBAiF,EAAAA,EAAAA,qBAAoB9I,GAAK,iBAAO,CAC9B+I,gBAAiB,WACfF,EAAgB,GAClB,EACAG,gBAAiB,WACf,OAAO/G,EAAKgH,QAAO,SAACC,GAAS,OACf,OAAZN,QAAY,IAAZA,OAAY,EAAZA,EAAcO,SAASD,EAAK1E,GAAU,GAE1C,EACAqE,gBAAiB,SAACtE,GAChBsE,EAAgBtE,EAClB,EACD,IAOD,IAAI6E,EAA0B,GAE9B,OACE7J,EAAAA,EAAAA,KAACkI,EAAa4B,SAAQ,CACpBzK,MAAO,CACLkJ,wBAAAA,EACAD,yBAAAA,EACAF,kBAAmBiB,EACnB3G,KAAAA,EACA2F,eAAAA,GACAjI,UAEFJ,EAAAA,EAAAA,KAAC+J,EAAAA,GAAQ,CACPC,MAAO,CACLC,eAAgBC,EAAAA,EAChBC,OAAQzB,GAEV0B,aAAc,CACZC,WAAY,CAAEC,gBAAiB,CAAEC,SAAU,MAE7CC,QAASlI,EACTmI,SAAU,SAACC,GAAG,OAAKA,EAAIzF,EAAS,EAChC1C,QAASA,EAAQmH,QAAO,SAACiB,GAAQ,OAAMA,EAAIC,IAAI,IAC/ClI,KAAMA,EACNmI,wBAAwB,EACxBC,0BAA0B,EAC1BjC,kBAAmBA,EACnBT,kBAAmBiB,EACnB0B,UAAW,GACXC,mBAAoB,GACpBC,gBAAiB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,KACtCpK,IAAEP,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CACA,UAAW,CACTE,MAAO,WAET,WAAY,CACVA,MAAO,WAET,cAAe,CACbA,MAAO,SAET,aAAc,CACZA,MAAO,UAET,iBAAkB,CAChBA,MAAO,OAET,YAAa,CACXA,MAAO,OAET,wCAAyC,CACvCA,MAAO,QACP,sBAAuB,CACrB0K,KAAM,YAGV,oBAAqB,CACnBC,WAAY,UACZ3K,MAAO,QACP,sBAAuB,CACrB0K,KAAM,UAGV,2BAA4B,CAC1BC,WAAY,UACZ3K,MAAO,QACP,sBAAuB,CACrB0K,KAAM,UAGV,2BAA4B,CAC1BC,WAAY,UACZ3K,MAAO,QACP,sBAAuB,CACrB0K,KAAM,UAGV,gCAAiC,CAC/BE,QAAS,iBAGR,CACD,+BAAgC,CAC9BD,WAAY,UACZ3K,MAAO,QACPQ,SAAU,QAGZ,gGACE,CACEqK,QAASzG,GAAqBC,EAAc,OAAS,QACrDqG,KAAM,SAEV,qFACE,CACEG,QAASzG,GAAqBC,EAAc,OAAS,WAGxD,CACD7D,SAAU,GACVsK,WAAY,IACZ,+BAAgC,CAC9BjJ,OAAQ,OACRN,MAAO,QAET,mCAAoC,CAClCM,OAAQ,OACRN,MAAO,UAQbwJ,0BAA2B,SAACxG,GAC1B,GAAIF,EAAa,CACf,GAAIE,EAAUsC,QAAU,EAAG,OAE3B,GADAwC,EAAc9E,EACVsE,EAAaO,SAASC,EAAYA,EAAYxC,OAAS,IACzD,OAKF,OAHAiC,EAAgBvE,QAEhBtC,EAAkB,CAACsC,EAAUA,EAAUsC,OAAS,IAAK3E,EAAM,KAE7D,CAEA,IAAKmC,GAAeD,EAClB,GAAIyE,IAA4B,OAAZA,QAAY,IAAZA,OAAY,EAAZA,EAAchC,QAAS,EAAG,CAC5C,IAAMmE,EAAe,IAAIC,IAAIpC,GAC7BC,EACEvE,EAAU2E,QAAO,SAACgC,GAAM,OAAMF,EAAaG,IAAID,EAAE,IAErD,MACEpC,EAAgBvE,QAGlBuE,EAAgBvE,GAGlBtC,EAAkB,CAACsC,EAAUA,EAAUsC,OAAS,IAAK3E,EAAM,KAC7D,EACAS,cAAe,SAACyI,EAAShF,GAEvB,GADmB,CAAC,cAAe,QAAS,SAAU,aACtCgD,SAAShD,EAAItC,MAI7B,OADAsC,EAAIrC,iBACa,UAAbqC,EAAItC,MAAiC,gBAAbsC,EAAItC,KAC1BM,IAAsBC,EACjByE,GAAgB,SAACtE,GACtB,OAAIA,GAAQA,EAAKqC,OAAS,GAAKrC,EAAK,KAAO4G,EAAGC,QAAQjJ,IACpDH,EAAkB,GAAIC,EAAMkE,EAAItC,MACzB,KAET7B,EAAkB,CAACmJ,EAAGC,QAAQjJ,IAAKF,EAAMkE,EAAItC,MACtC,CAACsH,EAAGC,QAAQjJ,IACrB,SAEA0G,GAAgB,SAACtE,GACf,OACEA,IACCH,GACDG,EAAKqC,OAAS,GACdrC,EAAK4E,SAASgC,EAAGC,QAAQjJ,KAEzBoC,EAAOA,EAAK0E,QAAO,SAACC,GAAS,OAAKA,IAASiC,EAAGC,QAAQjJ,EAAE,IACxDH,EAAkB,GAAIC,EAAMkE,EAAItC,MACzBU,GAGPA,GACAH,GACAG,EAAKqC,OAAS,GACdrC,EAAK4E,SAASgC,EAAGC,QAAQjJ,IAElBoC,GAETvC,EAAkB,CAACmJ,EAAGC,QAAQjJ,IAAKF,EAAMkE,EAAItC,MACvC,GAAN7C,QAAAqK,EAAAA,EAAAA,GAAW9G,GAAI,CAAE4G,EAAGC,QAAQjJ,KAC9B,IAIa,WAAbgE,EAAItC,MAAkC,cAAbsC,EAAItC,MAC/BgF,EAAgB,CAACsC,EAAGC,QAAQjJ,KACrBH,EAAkB,CAACmJ,EAAGC,QAAQjJ,IAAKF,EAAMkE,EAAItC,YAFtD,CAIF,EACAyH,uBAAqB,EACrB1I,gBAAiBA,EACjBC,iBAAkBA,KAI1B,IAIF,SAAS0I,EAAUC,GAIoD,IAHrEC,EAAID,EAAJC,KACAC,EAAYF,EAAZE,aACAzH,EAASuH,EAATvH,UAEM0H,GAASC,EAAAA,EAAAA,KACTC,GAAYC,EAAAA,EAAAA,GAAgBH,EAAQI,EAAAA,IAE1C,OACExM,EAAAA,EAAAA,KAACyM,EAAAA,EAAa,CACZ3I,QAAQ,WACRtD,MAAM,UACNkE,UAAWA,EACXgI,MAAOJ,EACPJ,KAAMA,EAAO,EACb9M,SAAU,SAAC+G,EAAOwG,GAChBR,EAAahG,EAAcwG,EAAU,EACvC,GAGN,CAEA,SAASC,EAAiBpF,GACxB,OAAOxH,EAAAA,EAAAA,KAAC6M,EAAAA,GAAcvM,EAAAA,EAAAA,GAAA,CAACwM,iBAAkBd,GAAgBxE,GAC3D,CACA,SAASmB,EACPnB,GAEA,IAAAuF,GAMIC,EAAAA,EAAAA,YAAW9E,GALbE,EAAiB2E,EAAjB3E,kBACAG,EAAuBwE,EAAvBxE,wBACAD,EAAwByE,EAAxBzE,yBACAD,EAAc0E,EAAd1E,eACA3F,EAAIqK,EAAJrK,KAEF,OACEtB,EAAAA,EAAAA,MAACwC,EAAAA,EAAG,CACF/C,GAAI,CACFoM,UAAW,OACX5B,QAAS,OACTtJ,MAAO,OACPmL,eAAgB,gBAChBC,GAAI,EACJC,WAAY,SACZC,cAC+B,eAA7B/E,EAA4C,cAAgB,OAC9DlI,SAAA,EAEFJ,EAAAA,EAAAA,KAAC4M,GAAgBtM,EAAAA,EAAAA,GAAA,GAAKkH,KACtBpG,EAAAA,EAAAA,MAACwC,EAAAA,EAAG,CACF/C,GAAI,CACFwK,QAAS,OACT6B,eAC+B,eAA7B5E,EACI,aACA,WACNgF,KAAM,EACNF,WAAY,UACZhN,SAAA,CAEDmI,IACCnH,EAAAA,EAAAA,MAAA,OAAAhB,SAAA,CAAK,YAA2B,OAAjBgI,QAAiB,IAAjBA,OAAiB,EAAjBA,EAAmBf,WAEpCrH,EAAAA,EAAAA,KAAA,OAAAI,SAAMiI,EAAeD,EAAmB1F,UAIhD,CApEA,K,ydC5Re,SAAS6K,IAAwB,IAADC,EAC7CT,GASIC,EAAAA,EAAAA,YAAWS,GARbC,EAAKX,EAALW,MACAC,EAAiBZ,EAAjBY,kBACAC,EAAiBb,EAAjBa,kBACAC,EAAOd,EAAPc,QACAC,EAAIf,EAAJe,KACAC,EAAehB,EAAfgB,gBACAC,EAAWjB,EAAXiB,YACAC,EAAQlB,EAARkB,SAEIC,GAAWC,EAAAA,EAAAA,QAAoB,MAC/BC,GAAgBD,EAAAA,EAAAA,QAAoB,MACpCE,GAAoBF,EAAAA,EAAAA,QAAoB,MACxCG,GAAuBH,EAAAA,EAAAA,QAAyB,MAChDI,GAAsBJ,EAAAA,EAAAA,QAAyB,MACrDK,GAKIC,EAAAA,EAAAA,GAAmB,CACrBC,KAAM,CACJC,IAAK,+BACLC,aAAc,gBAEhBrM,QAAS,CACP,CAAEsM,MAAO,kBAAmBC,WAAY,KAAM/M,MAAO,KACrD,CAAE8M,MAAO,WAAYC,WAAY,aAAcxB,KAAM,GACrD,CACEuB,MAAO,aACPC,WAAY,UACZ/M,MAAO,MAGXS,SAAU,cACVuM,SAAU,kBACVC,gBAAiB,UACjBC,WAAY,SAACC,GACXtB,EAAkBsB,EAAgB,GAAGC,gBAAiB,aACtDvB,EAAkBsB,EAAgB,GAAGE,SAAU,eAC/CxB,EAAkBsB,EAAgB,GAAGG,QAAS,kBAC9CzB,EAAkBsB,EAAgB,GAAGI,aAAc,gBACnDC,GACF,EACApM,cAAe,SAACyI,EAAShF,GACN,UAAbA,EAAItC,MAAiC,gBAAbsC,EAAItC,OAC9BsJ,EAAkBhC,EAAGlB,IAAIyE,gBAAiB,aAC1CvB,EAAkBhC,EAAGlB,IAAI0E,SAAU,eACnCxB,EAAkBhC,EAAGlB,IAAI2E,QAAS,kBAClCzB,EAAkBhC,EAAGlB,IAAI4E,aAAc,gBACvCC,IAEJ,EACAtM,UAAWqL,IArCKkB,EAAchB,EAA9BiB,eACWC,EAAkBlB,EAA7BmB,UACWC,EAAuBpB,EAAlClM,UACYiN,EAAmBf,EAA/BqB,WAoCFC,GAKIrB,EAAAA,EAAAA,GAAmB,CACrBC,KAAM,CACJC,IAAK,8BACLC,aAAc,eAEhBrM,QAAS,CACP,CAAEsM,MAAO,iBAAkBC,WAAY,KAAM/M,MAAO,KACpD,CAAE8M,MAAO,WAAYC,WAAY,aAAcxB,KAAM,GACrD,CACEuB,MAAO,aACPC,WAAY,UACZ/M,MAAO,MAGXS,SAAU,aACVuM,SAAU,iBACVC,gBAAiB,SACjBC,WAAY,SAACC,GACXtB,EAAkBsB,EAAgB,GAAGa,eAAgB,YACrDnC,EAAkBsB,EAAgB,GAAGE,SAAU,cAC/CY,GACF,EACA7M,cAAe,SAACyI,EAAShF,GACN,UAAbA,EAAItC,MAAiC,gBAAbsC,EAAItC,OAC9BsJ,EAAkBhC,EAAGlB,IAAIqF,eAAgB,YACzCnC,EAAkBhC,EAAGlB,IAAI0E,SAAU,cACnCY,IAEJ,EACA/M,UAAWsL,IAjCK0B,EAAYH,EAA5BL,eACWS,EAAgBJ,EAA3BH,UACWQ,EAAqBL,EAAhCxN,UACY0N,EAAiBF,EAA7BD,WAgCFO,GAAmEC,EAAAA,EAAAA,UAAS,CAC1E7N,SAAU,yBACV8N,QAAQ,WAAD,OAAA9C,EAAAA,IAAA+C,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAE,SAAAC,IAAA,OAAAF,EAAAA,EAAAA,KAAAG,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACDjD,EAAQkD,IAAI,oDAAqD,CACrEC,QAAS,CACPC,cAAc,UAADxP,OAAgB,OAAJqM,QAAI,IAAJA,OAAI,EAAJA,EAAMoD,gBAEjC,cAAAN,EAAAO,OAAA,SAAAP,EAAAQ,MAAA,wBAAAR,EAAAS,OAAA,GAAAX,EAAA,MAAAY,MAAA,KAAAC,UAAA,IAPQC,EAAapB,EAAnBpL,KAAgCyM,EAAsBrB,EAAjC9N,UAS7B,SAASoP,EAAqBtN,GACb,gBAAXA,EAAEE,MAAqC,UAAXF,EAAEE,MAChC0J,GAEJ,CAEA,OACE5M,EAAAA,EAAAA,MAAA,OAAAhB,SAAA,EACEgB,EAAAA,EAAAA,MAAA,OACEO,MAAO,CACL0J,QAAS,OACTsG,IAAK,OACLtE,cAAe,UACfjN,SAAA,EAEFgB,EAAAA,EAAAA,MAAA,OACEO,MACE,CACE0J,QAAS,OACT4B,UAAW,OACXK,KAAM,EACNsE,UAAW,cAEdxR,SAAA,EAEDJ,EAAAA,EAAAA,KAAA,OACE2B,MAAO,CACLkQ,SAAU,EACVC,WAAY,EACZC,UAAW,OACX3R,UAEFgB,EAAAA,EAAAA,MAAA,YACEO,MACE,CACE2L,KAAM,EACNjC,QAAS,OACTgC,cAAe,SACfsE,IAAK,OACLvG,QAAS,OACT4G,OAAQ,oBACRC,aAAc,MACdL,UAAW,cAEdxR,SAAA,EAEDJ,EAAAA,EAAAA,KAAA,UAAQ2B,MAAO,CAAEnB,MAAO,WAAYJ,SAAC,yBACrCgB,EAAAA,EAAAA,MAAA,OACEO,MAAO,CACL0J,QAAS,OACTsG,IAAK,OACLE,SAAU,EACVxE,cAAe,UACfjN,SAAA,CAEDwP,GACC5P,EAAAA,EAAAA,KAACkS,EAAAA,EAAa,CAAC1H,QAASoF,KAExBxO,EAAAA,EAAAA,MAAC+Q,EAAAA,EAAW,CACVrO,QAAQ,WACRnD,KAAK,QACLyR,SAAUrE,EACVlN,GAAI,CACFkB,MAAO,QACP,qBAAsB,CACpBf,SAAU,OACVmK,WAAY,QACZkH,OAAQ,GACRjH,QAAS,SAEX,wCAAyC,CAAEnK,IAAK,SAChDb,SAAA,EAEFJ,EAAAA,EAAAA,KAACsS,EAAAA,EAAU,CAACC,QAAQ,kBAAiBnS,SAAC,eACtCJ,EAAAA,EAAAA,KAACwS,EAAAA,EAAa,CACZ3R,GAAI,CACFwB,OAAQ,OACRrB,SAAU,QAEZoR,SAAUrE,EACVtO,WAAS,EACTP,MAAM,YACNC,KAAK,YACLE,MAAOqO,EAAM+E,UACbrT,SAAUuO,EACVrO,UAAW,SAAC8E,GACV,GAAe,UAAXA,EAAEE,MAA+B,gBAAXF,EAAEE,KAE1B,OADAF,EAAEG,iBACKmL,EAAmBhC,EAAM+E,UAEpC,EACA7P,GAAG,kBACH8P,cACE1S,EAAAA,EAAAA,KAAC2S,EAAAA,EAAc,CAAC/Q,SAAS,MAAKxB,UAC5BJ,EAAAA,EAAAA,KAACmF,EAAAA,EACC,CACAiN,SAAUrE,EACV,aAAW,gBACXvN,MAAM,YACNoS,KAAK,MACLxN,QAAS,WACPsK,EAAmBhC,EAAM+E,UAC3B,EAAErS,UAEFJ,EAAAA,EAAAA,KAAC6S,EAAAA,EAAgB,cAQ7B7S,EAAAA,EAAAA,KAACiE,EAAAA,EAAS,CACRxE,WAAS,EACT2S,SAAUrE,EACVjK,QAAQ,WACRnD,KAAK,QACLzB,MAAM,cACNC,KAAK,cACLE,MAAOqO,EAAMoF,YACb1T,SAAUuO,EACVxJ,WAAY,CACVxC,MAAO,CAAEU,OAAQ,OAAQrB,SAAU,QACnC+R,UAAU,GAEZlS,GAAI,CACFyM,KAAM,EACNjL,OAAQ,OACR,qBAAsB,CAAErB,SAAU,QAClC,wCAAyC,CAAEC,IAAK,eAItDjB,EAAAA,EAAAA,KAACiE,EAAAA,EAAS,CACRvB,KAAM,EACN0P,SAAUrE,EACVjK,QAAQ,WACRnD,KAAK,QACLzB,MAAM,iBACN8T,WAAS,EACT7T,KAAK,iBACLE,MAAOqO,EAAMuF,eACb7T,SAAUuO,EACVxJ,WAAY,CACVxC,MAAO,CAAEU,OAAQ,QAASrB,SAAU,QACpC+R,UAAU,GAEZlS,GAAI,CACFyM,KAAM,EACNjL,OAAQ,QACR,qBAAsB,CAAErB,SAAU,QAClC,wCAAyC,CAAEC,IAAK,iBAKxDjB,EAAAA,EAAAA,KAAA,OACE2B,MAAO,CACLkQ,SAAU,EACVC,WAAY,EACZC,UAAW,OACX3R,UAEFgB,EAAAA,EAAAA,MAAA,YACEO,MACE,CACE0L,cAAe,MACfsE,IAAK,OACLvG,QAAS,OACT4G,OAAQ,oBACRC,aAAc,MACd5P,OAAQ,OACRiL,KAAM,EACN4F,SAAU,QAEb9S,SAAA,EAEDJ,EAAAA,EAAAA,KAAA,UAAQ2B,MAAO,CAAEnB,MAAO,WAAYJ,SAAC,sBACpC+P,GACCnQ,EAAAA,EAAAA,KAACkS,EAAAA,EAAa,CAAC1H,QAAS2F,KAExB/O,EAAAA,EAAAA,MAAC+Q,EAAAA,EAAW,CACVrO,QAAQ,WACRnD,KAAK,QACLyR,SAAUrE,EACVlN,GAAI,CACFkB,MAAO,QACP,qBAAsB,CACpBf,SAAU,OACVmK,WAAY,QACZkH,OAAQ,GACRjH,QAAS,SAEX,wCAAyC,CAAEnK,IAAK,SAChDb,SAAA,EAEFJ,EAAAA,EAAAA,KAACsS,EAAAA,EAAU,CAACC,QAAQ,iBAAgBnS,SAAC,cACrCJ,EAAAA,EAAAA,KAACwS,EAAAA,EAAa,CACZ3R,GAAI,CACFwB,OAAQ,OACRrB,SAAU,QAEZoR,SAAUrE,EACV7O,MAAM,WACNC,KAAK,WACLE,MAAOqO,EAAMyF,SACb/T,SAAUuO,EACVrO,UAAW,SAAC8E,GACV,GAAe,UAAXA,EAAEE,MAA+B,gBAAXF,EAAEE,KAE1B,OADAF,EAAEG,iBACK2L,EAAiBxC,EAAMyF,SAElC,EACAvQ,GAAG,iBACH8P,cACE1S,EAAAA,EAAAA,KAAC2S,EAAAA,EAAc,CAAC/Q,SAAS,MAAKxB,UAC5BJ,EAAAA,EAAAA,KAACmF,EAAAA,EACC,CACAiN,SAAUrE,EACV,aAAW,gBACXvN,MAAM,YACNoS,KAAK,MACLxN,QAAS,WACP8K,EAAiBxC,EAAMyF,SACzB,EAAE/S,UAEFJ,EAAAA,EAAAA,KAAC6S,EAAAA,EAAgB,cAO7B7S,EAAAA,EAAAA,KAACiE,EAAAA,EAAS,CACRxE,WAAS,EACT2S,SAAUrE,EACVjK,QAAQ,WACRnD,KAAK,QACLzB,MAAM,aACNC,KAAK,aACLE,MAAOqO,EAAM0F,WACbhU,SAAUuO,EACVxJ,WAAY,CACVxC,MAAO,CAAEU,OAAQ,OAAQrB,SAAU,QACnC+R,UAAU,GAEZlS,GAAI,CACFyM,KAAM,EACNjL,OAAQ,OACR,qBAAsB,CAAErB,SAAU,QAClC,wCAAyC,CAAEC,IAAK,QAChDoS,UAAW,WAGfrT,EAAAA,EAAAA,KAACiE,EAAAA,EAAS,CACRmO,SAAUrE,EACVtO,WAAS,EACTqE,QAAQ,WACRnD,KAAK,QACLzB,MAAM,eACN8T,WAAS,EACT7T,KAAK,eACLE,MAAOqO,EAAM4B,aACblQ,SAAUuO,EACVxJ,WAAY,CACVxC,MAAO,CAAEU,OAAQ,OAAQrB,SAAU,QACnC+R,UAAU,GAEZlS,GAAI,CACFkB,MAAO,OACPM,OAAQ,OACR,qBAAsB,CAAErB,SAAU,QAClC,wCAAyC,CAAEC,IAAK,QAChDoS,UAAW,mBAMrBjS,EAAAA,EAAAA,MAAA,OACEO,MACE,CACE0J,QAAS,OACT4B,UAAW,OACXK,KAAM,EACNsE,UAAW,cAEdxR,SAAA,EAEDJ,EAAAA,EAAAA,KAAA,OACE2B,MAAO,CACLkQ,SAAU,EACVC,WAAY,EACZC,UAAW,OACX3R,UAEFgB,EAAAA,EAAAA,MAAA,YACEO,MAAO,CACLgQ,IAAK,OACLtG,QAAS,OACTgC,cAAe,MACfjC,QAAS,OACT4G,OAAQ,oBACRC,aAAc,MACd/N,aAAc,QACd9D,SAAA,EAEFJ,EAAAA,EAAAA,KAAA,UAAQ2B,MAAO,CAAEnB,MAAO,WAAYJ,SAAC,eACpCqR,GACCzR,EAAAA,EAAAA,KAACkS,EAAAA,EAAa,CAAC1H,QAASiH,KAExBrQ,EAAAA,EAAAA,MAAC+Q,EAAAA,EAAW,CACVxR,KAAK,QACLlB,WAAS,EACT2S,SAAUrE,EACVlN,GAAI,CACF,qBAAsB,CACpBG,SAAU,OACVmK,WAAY,QACZkH,OAAQ,GACRjH,QAAS,SAEX,wCAAyC,CAAEnK,IAAK,SAChDb,SAAA,EAEFJ,EAAAA,EAAAA,KAACsS,EAAAA,EAAU,CAAC1P,GAAG,gBAAexC,SAAC,aAC/BJ,EAAAA,EAAAA,KAACsT,EAAAA,EAAM,CACLC,QAAQ,gBACRlU,MAAOqO,EAAM8F,cACbtU,MAAM,UACNC,KAAK,gBACLC,SAAUuO,EACV9M,GAAI,CACFwB,OAAQ,OACRrB,SAAU,QACVZ,SAED,CACC,CAAEqT,QAAS,KAAIhS,QAAAqK,EAAAA,EAAAA,GACC,OAAb0F,QAAa,IAAbA,OAAa,EAAbA,EAAexM,KAAK0O,iBACvBC,KAAI,SAACC,EAAY5M,GACjB,OACEhH,EAAAA,EAAAA,KAAC6T,EAAAA,EAAQ,CAAWxU,MAAOuU,EAAMH,QAAQrT,SACtCwT,EAAMH,SADMzM,EAInB,UAINhH,EAAAA,EAAAA,KAACiE,EAAAA,EAAS,CACRxE,WAAS,EACTqE,QAAQ,WACRnD,KAAK,QACLzB,MAAM,YACNC,KAAK,WACLE,MAAOqO,EAAMoG,SACb1U,SAAUuO,EACVxJ,WAAY,CACVxC,MAAO,CAAEU,OAAQ,OAAQrB,SAAU,SAErCH,GAAI,CACFkB,MAAO,OACPM,OAAQ,OACR,qBAAsB,CAAErB,SAAU,QAClC,wCAAyC,CAAEC,IAAK,iBAKxDjB,EAAAA,EAAAA,KAAA,OACE2B,MAAO,CACLkQ,SAAU,EACVC,WAAY,EACZC,UAAW,OACX3R,UAEFgB,EAAAA,EAAAA,MAAA,YACEO,MAAO,CACLkQ,SAAU,EACVxG,QAAS,OACTgC,cAAe,MACfsE,IAAK,OACLoC,SAAU,WACV3I,QAAS,OACT4G,OAAQ,oBACRC,aAAc,OACd7R,SAAA,EAEFJ,EAAAA,EAAAA,KAAA,UAAQ2B,MAAO,CAAEnB,MAAO,WAAYJ,SAAC,yBAErCJ,EAAAA,EAAAA,KAAChB,EAAAA,EAAgB,CACfoT,SAAUrE,EACV7O,MAAM,YACNE,SAAU,SAACgF,GACTwJ,EAAkBxJ,EAAG,YACrB,IAAM4P,EAAU,IAAIC,KAAK7P,GACnB8P,GAAqBC,EAAAA,EAAAA,GAASH,EAAS,GAC7CpG,EAAkBsG,EAAoB,SACxC,EACA7U,MAAO,IAAI4U,KAAKvG,EAAM0G,UACtB1U,UAAW,CACTkB,gBAAiB,CACfe,MAAO,CACLX,SAAU,SAGdmD,WAAY,CACVxC,MAAO,CAAEU,OAAQ,OAAQrB,SAAU,UAGvC1B,UAAW,SAAC8E,GACV,GAAe,UAAXA,EAAEE,MAA+B,gBAAXF,EAAEE,KAC1B,IAAM+P,EAAUC,YAAW,WAAO,IAADC,EAAAC,EACf,QAAhBD,EAAArG,EAAS1J,eAAO,IAAA+P,GAAyB,QAAzBC,EAAhBD,EAAkBvO,cAAc,iBAAS,IAAAwO,GAAzCA,EAA2CC,QAC3CC,aAAaL,EACf,GAAG,IAEP,EACA7U,cAAe0O,KAEjBlO,EAAAA,EAAAA,KAAChB,EAAAA,EAAgB,CACfoT,SAAUrE,EACV7O,MAAM,UACNE,SAAU,SAACgF,GACTwJ,EAAkBxJ,EAAG,SACvB,EACA/E,MAAO,IAAI4U,KAAKvG,EAAMiH,QACtBjV,UAAW,CACTkB,gBAAiB,CACfe,MAAO,CACLX,SAAU,SAGdmD,WAAY,CACVxC,MAAO,CAAEU,OAAQ,OAAQrB,SAAU,UAGvC1B,UAAW,SAAC8E,GACV,GAAe,UAAXA,EAAEE,MAA+B,gBAAXF,EAAEE,KAC1B,IAAM+P,EAAUC,YAAW,WAAO,IAADM,EAAAC,EACV,QAArBD,EAAAxG,EAAc5J,eAAO,IAAAoQ,GAAyB,QAAzBC,EAArBD,EAAuB5O,cAAc,iBAAS,IAAA6O,GAA9CA,EAAgDJ,QAChDC,aAAaL,EACf,GAAG,IAEP,EACA7U,cAAe4O,KAEjBpO,EAAAA,EAAAA,KAAChB,EAAAA,EAAgB,CACfE,MAAM,cACNC,KAAK,aACLC,SAAU,SAACgF,GACTwJ,EAAkBxJ,EAAG,aACvB,EACA/E,MAAO,IAAI4U,KAAKvG,EAAMoH,YACtB1C,SAAUrE,EACVrO,UAAW,CACTkB,gBAAiB,CACfe,MAAO,CACLX,SAAU,SAGdmD,WAAY,CACVxC,MAAO,CAAEU,OAAQ,OAAQrB,SAAU,UAGvC1B,UAAW,SAAC8E,GACV,GAAe,UAAXA,EAAEE,MAA+B,gBAAXF,EAAEE,KAC1B,IAAM+P,EAAUC,YAAW,WAAO,IAADS,EAAAC,EACN,QAAzBD,EAAA1G,EAAkB7J,eAAO,IAAAuQ,GACE,QADFC,EAAzBD,EACI/O,cAAc,iBAAS,IAAAgP,GAD3BA,EAEIP,QACJC,aAAaL,EACf,GAAG,IAEP,EACA7U,cAAe6O,aAKvBjN,EAAAA,EAAAA,MAAA,OACEO,MACE,CACE0J,QAAS,OACT4B,UAAW,OACXK,KAAM,EACNsE,UAAW,cAEdxR,SAAA,EAEDJ,EAAAA,EAAAA,KAAA,OACE2B,MAAO,CACL2L,KAAM,EACNuE,SAAU,EACVC,WAAY,EACZC,UAAW,OACX3R,UAEFgB,EAAAA,EAAAA,MAAA,YACEO,MAAO,CACL2L,KAAM,EACNjC,QAAS,OACTgC,cAAe,SACfsE,IAAK,OACLoC,SAAU,WACV3I,QAAS,OACT4G,OAAQ,oBACRC,aAAc,MACd5P,OAAQ,QACRjC,SAAA,EAEFJ,EAAAA,EAAAA,KAAA,UAAQ2B,MAAO,CAAEnB,MAAO,UAAW6B,OAAQ,WAC3CrC,EAAAA,EAAAA,KAACiE,EAAAA,EAAS,CACRmO,SAAUrE,EACVkH,UAAQ,EACRnR,QAAQ,WACRnD,KAAK,QACLzB,MAAM,cACNC,KAAK,aACLE,MAAOqO,EAAMwH,WACb9V,SAAUuO,EACVwH,YAAY,OACZC,OAAQ,WACNnH,EAAS,CACP1M,KAAM,eACNsN,MAAO,aACPxP,MAAOgW,WAAW3H,EAAMwH,YAAYI,QAAQ,IAEhD,EACAnR,WAAY,CACVxC,MAAO,CAAEU,OAAQ,OAAQrB,SAAU,QACnCuU,eAAgBjO,EAAAA,GAElBzG,GAAI,CACFkB,MAAO,OACPM,OAAQ,OACR,qBAAsB,CAAErB,SAAU,QAClC,wCAAyC,CAAEC,IAAK,YAGpDjB,EAAAA,EAAAA,KAACiE,EAAAA,EAAS,CACRmO,SAAUrE,EACVjK,QAAQ,WACRnD,KAAK,QACLzB,MAAM,sBACNC,KAAK,oBACLE,MAAOqO,EAAM8H,kBACbpW,SAAUuO,EACVxJ,WAAY,CACVxC,MAAO,CAAEU,OAAQ,OAAQrB,SAAU,SAErCH,GAAI,CACFkB,MAAO,OACPM,OAAQ,OACR,qBAAsB,CAAErB,SAAU,QAClC,wCAAyC,CAAEC,IAAK,YAGpDjB,EAAAA,EAAAA,KAACiE,EAAAA,EAAS,CACRmO,SAAUrE,EACVjK,QAAQ,WACRnD,KAAK,QACLzB,MAAM,UACNC,KAAK,UACLE,MAAOqO,EAAM2B,QACbjQ,SAAUuO,EACVxJ,WAAY,CACVxC,MAAO,CAAEU,OAAQ,OAAQrB,SAAU,SAErCH,GAAI,CACFkB,MAAO,OACPM,OAAQ,OACR,qBAAsB,CAAErB,SAAU,QAClC,wCAAyC,CAAEC,IAAK,YAGpDjB,EAAAA,EAAAA,KAACiE,EAAAA,EAAS,CACRmO,SAAUrE,EACVjK,QAAQ,WACRnD,KAAK,QACLzB,MAAM,aACNC,KAAK,YACLE,MAAOqO,EAAM+H,UACbrW,SAAUuO,EACVxJ,WAAY,CACVxC,MAAO,CAAEU,OAAQ,OAAQrB,SAAU,SAErCH,GAAI,CACFkB,MAAO,OACPM,OAAQ,OACR,qBAAsB,CAAErB,SAAU,QAClC,wCAAyC,CAAEC,IAAK,YAGpDjB,EAAAA,EAAAA,KAACiE,EAAAA,EAAS,CACRmO,SAAUrE,EACVjK,QAAQ,WACRnD,KAAK,QACLzB,MAAM,aACNC,KAAK,YACLE,MAAOqO,EAAMgI,UACbtW,SAAUuO,EACVxJ,WAAY,CACVxC,MAAO,CAAEU,OAAQ,OAAQrB,SAAU,SAErCH,GAAI,CACFkB,MAAO,OACPM,OAAQ,OACR,qBAAsB,CAAErB,SAAU,QAClC,wCAAyC,CAAEC,IAAK,iBAMxDjB,EAAAA,EAAAA,KAAA,OACE2B,MAAO,CACLkQ,SAAU,EACVC,WAAY,EACZC,UAAW,OACX3R,UAEFgB,EAAAA,EAAAA,MAAA,YACEO,MAAO,CACL0J,QAAS,OACTgC,cAAe,SACfsI,OAAQ,OACRvK,QAAS,OACT4G,OAAQ,oBACRC,aAAc,OACd7R,SAAA,EAEFJ,EAAAA,EAAAA,KAAA,UAAAI,SAAQ,cACRJ,EAAAA,EAAAA,KAAA,OACE2B,MAAO,CACL0J,QAAS,OACT6B,eAAgB,WAChB9B,QAAS,OACThL,UAEFJ,EAAAA,EAAAA,KAAC4V,EAAAA,EAAM,CACLxD,SAAUrE,EACVpN,KAAK,QACLmD,QAAQ,YACRtD,MAAM,UACN4E,QAAS,WACP4I,GACF,EAAE5N,SACH,eAKHJ,EAAAA,EAAAA,KAACiE,EAAAA,EAAS,CACRmO,SAAUrE,EACVkH,UAAQ,EACRnR,QAAQ,WACRnD,KAAK,QACLzB,MAAM,cACNC,KAAK,aACLE,MAAOqO,EAAMmI,WACbzW,SAAUuO,EACVrO,UAAWoS,EACXyD,YAAY,OACZC,OAAQ,WACNnH,EAAS,CACP1M,KAAM,eACNsN,MAAO,aACPxP,MAAOgW,WAAW3H,EAAMmI,YAAYP,QAAQ,IAEhD,EACAnR,WAAY,CACVxC,MAAO,CAAEU,OAAQ,OAAQrB,SAAU,QACnCuU,eAAgBjO,EAAAA,GAElBzG,GAAI,CACFkB,MAAO,OACPM,OAAQ,OACR,qBAAsB,CAAErB,SAAU,QAClC,wCAAyC,CAAEC,IAAK,YAGpDjB,EAAAA,EAAAA,KAACiE,EAAAA,EAAS,CACRmO,SAAUrE,EACVkH,UAAQ,EACRnR,QAAQ,WACRnD,KAAK,QACLzB,MAAM,MACNC,KAAK,MACLE,MAAOqO,EAAMoI,IACb1W,SAAUuO,EACVrO,UAAWoS,EACXyD,YAAY,OACZhR,WAAY,CACVxC,MAAO,CAAEU,OAAQ,OAAQrB,SAAU,QACnCuU,eAAgBjO,EAAAA,GAElBzG,GAAI,CACFkB,MAAO,OACPM,OAAQ,OACR,qBAAsB,CAAErB,SAAU,QAClC,wCAAyC,CAAEC,IAAK,SAElDmU,OAAQ,WACNnH,EAAS,CACP1M,KAAM,eACNsN,MAAO,MACPxP,MAAOgW,WAAW3H,EAAMoI,KAAKR,QAAQ,IAEzC,KAEFtV,EAAAA,EAAAA,KAACiE,EAAAA,EAAS,CACRmO,SAAUrE,EACVkH,UAAQ,EACRnR,QAAQ,WACRnD,KAAK,QACLzB,MAAM,YACNC,KAAK,WACLE,MAAOqO,EAAMqI,SACb3W,SAAUuO,EACVrO,UAAWoS,EACXyD,YAAY,OACZhR,WAAY,CACVxC,MAAO,CAAEU,OAAQ,OAAQrB,SAAU,QACnCuU,eAAgBjO,EAAAA,GAElBzG,GAAI,CACFkB,MAAO,OACPM,OAAQ,OACR,qBAAsB,CAAErB,SAAU,QAClC,wCAAyC,CAAEC,IAAK,SAElDmU,OAAQ,WACNnH,EAAS,CACP1M,KAAM,eACNsN,MAAO,WACPxP,MAAOgW,WAAW3H,EAAMqI,UAAUT,QAAQ,IAE9C,KAEFlU,EAAAA,EAAAA,MAAA,OACEO,MAAO,CAAE0J,QAAS,OAAQsG,IAAK,MAAO/P,SAAU,YAAaxB,SAAA,EAE7DJ,EAAAA,EAAAA,KAACiE,EAAAA,EAAS,CACRmO,SAAUrE,EACVkH,UAAQ,EACRnR,QAAQ,WACRnD,KAAK,QACLxB,KAAK,qBACLE,MAAOqO,EAAMsI,mBACb5W,SAAUuO,EACVrO,UAAWoS,EACXyD,YAAY,OACZhR,WAAY,CACVxC,MAAO,CAAEU,OAAQ,OAAQrB,SAAU,QACnCuU,eAAgBjO,EAAAA,GAElBzG,GAAI,CACFkB,MAAO,OACPM,OAAQ,OACR,qBAAsB,CAAErB,SAAU,QAClC,wCAAyC,CAAEC,IAAK,SAElDmU,OAAQ,WACNnH,EAAS,CACP1M,KAAM,eACNsN,MAAO,qBACPxP,MAAOgW,WAAW3H,EAAMsI,oBAAoBV,QAAQ,IAExD,KAEFtV,EAAAA,EAAAA,KAACiE,EAAAA,EAAS,CACRmO,SAAUrE,EACVkH,UAAQ,EACRnR,QAAQ,WACRnD,KAAK,QACLzB,MAAM,gBACNC,KAAK,cACLE,MAAOqO,EAAMuI,YACb7W,SAAUuO,EACVrO,UAAWoS,EACXyD,YAAY,OACZhR,WAAY,CACVxC,MAAO,CAAEU,OAAQ,OAAQrB,SAAU,QACnCuU,eAAgBjO,EAAAA,GAElBzG,GAAI,CACFkB,MAAO,OACPM,OAAQ,OACR,qBAAsB,CAAErB,SAAU,QAClC,wCAAyC,CAAEC,IAAK,SAElDmU,OAAQ,WACNnH,EAAS,CACP1M,KAAM,eACNsN,MAAO,cACPxP,MAAOgW,WAAW3H,EAAMuI,aAAaX,QAAQ,IAEjD,QAGJtV,EAAAA,EAAAA,KAACkW,EAAAA,EAAO,CAAC1V,MAAM,eACfR,EAAAA,EAAAA,KAACiE,EAAAA,EAAS,CACRmO,SAAUrE,EACVkH,UAAQ,EACRnR,QAAQ,WACRnD,KAAK,QACLzB,MAAM,YACNC,KAAK,WACLE,MAAOqO,EAAMyI,SACb/W,SAAUuO,EACVwH,YAAY,OACZhR,WAAY,CACVxC,MAAO,CAAEU,OAAQ,OAAQrB,SAAU,QACnCuU,eAAgBjO,EAAAA,GAElBzG,GAAI,CACFkB,MAAO,OACPM,OAAQ,OACR,qBAAsB,CAAErB,SAAU,QAClC,wCAAyC,CAAEC,IAAK,SAElDmU,OAAQ,WACNnH,EAAS,CACP1M,KAAM,eACNsN,MAAO,WACPxP,MAAOgW,WAAW3H,EAAMyI,UAAUb,QAAQ,IAE9C,eAMT9F,EACAS,IAGP,C,0BCp6BM7F,EAAe,CACnBgM,YAAa,KAEb3D,UAAW,GACXK,YAAa,GACbG,eAAgB,GAEhBE,SAAU,GACVC,WAAY,GACZiD,UAAW,OACX/G,aAAc,GAEdkE,cAAe,GACfM,SAAU,GAGVM,SAAU,IAAIH,KACdU,QAAQR,EAAAA,EAAAA,GAAS,IAAIF,KAAQ,GAC7Ba,WAAY,IAAIb,KAGhBiB,WAAY,GACZM,kBAAmB,GACnBnG,QAAS,GACToG,UAAW,OACXC,UAAW,OAGXG,WAAY,OACZC,IAAK,OACLC,SAAU,OACVC,mBAAoB,OACpBC,YAAa,OACbE,SAAU,OAEVG,aAAc,IAEVC,EAAU,SAAC7I,EAAY8I,GAC3B,MACO,iBADCA,EAAOjV,MAEGjB,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACToN,GAAK,IAAA+I,EAAAA,EAAAA,GAAA,GACPD,EAAO3H,MAAQ2H,EAAOnX,QAIlBqO,CAEb,EACaD,GAAatF,EAAAA,EAAAA,eAAmB,CAAC,GAExCuO,EAAuB,aACvBC,EAA4B,UAC5BC,EAA2B,SAC3BC,EAAmB,aACnBC,EAA4B,aAC5BC,EAAuB,aAEd,SAASC,IAAa,IAADxJ,EAAAyJ,EAAAC,EAAAC,EAAAC,EAAAC,EAClCC,GAA0BC,EAAAA,EAAAA,YAAWhB,EAASnM,GAAaoN,GAAApO,EAAAA,EAAAA,GAAAkO,EAAA,GAApD5J,EAAK8J,EAAA,GAAEvJ,EAAQuJ,EAAA,GACtBzK,GAA0BC,EAAAA,EAAAA,YAAWyK,EAAAA,GAA7B5J,EAAOd,EAAPc,QAASC,EAAIf,EAAJe,KACjB7E,GAAoCC,EAAAA,EAAAA,UAAgC,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAhEyO,EAAUvO,EAAA,GAAEwO,EAAaxO,EAAA,GAChCyO,GAAkC1O,EAAAA,EAAAA,UAAgC,IAAG2O,IAAAzO,EAAAA,EAAAA,GAAAwO,EAAA,GAA9DE,GAASD,GAAA,GAAEE,GAAYF,GAAA,GAC9BG,IAA4B9O,EAAAA,EAAAA,UAAS,IAAG+O,IAAA7O,EAAAA,EAAAA,GAAA4O,GAAA,GAAjCE,GAAMD,GAAA,GAAEE,GAASF,GAAA,GACxBG,IAAkClP,EAAAA,EAAAA,WAAS,GAAMmP,IAAAjP,EAAAA,EAAAA,GAAAgP,GAAA,GAA1CE,GAASD,GAAA,GAAEE,GAAYF,GAAA,GACxBG,IAA0BrK,EAAAA,EAAAA,QAAyB,MAEnDsK,IAAcC,EAAAA,EAAAA,kBACd3K,GAAyC,KAAvBL,EAAM4I,aAExBqC,IAAexK,EAAAA,EAAAA,QAA0B,MACzCyK,IAAkBzK,EAAAA,EAAAA,QAA0B,MAC5C0K,IAAkB1K,EAAAA,EAAAA,QAA0B,MAElDiC,IAAiEC,EAAAA,EAAAA,UAAS,CACxE7N,SAAU,kBACV8N,QAAQ,WAAD,OAAA9C,EAAAA,IAAA+C,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAE,SAAAC,IAAA,OAAAF,EAAAA,EAAAA,KAAAG,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACDjD,EAAQkD,IAAI,mCAAoC,CACpDC,QAAS,CACPC,cAAc,UAADxP,OAAgB,OAAJqM,QAAI,IAAJA,OAAI,EAAJA,EAAMoD,gBAEjC,cAAAN,EAAAO,OAAA,SAAAP,EAAAQ,MAAA,wBAAAR,EAAAS,OAAA,GAAAX,EAAA,MAAAY,MAAA,KAAAC,UAAA,IAPQuH,GAAc1I,GAApBpL,KAAiC+T,GAAmB3I,GAA9B9N,UAU9BkM,IAKIC,EAAAA,EAAAA,GAAmB,CACrBC,KAAM,CACJC,IAAK,qCACLC,aAAc,mBAEhBrM,QAAS,CACP,CAAEsM,MAAO,aAAcC,WAAY,OAAQ/M,MAAO,KAClD,CAAE8M,MAAO,WAAYC,WAAY,YAAa/M,MAAO,KACrD,CACE8M,MAAO,UACPC,WAAY,UACZ/M,MAAO,KAET,CACE8M,MAAO,kBACPC,WAAY,YACZxB,KAAM,IAGV9K,SAAU,oBACVuM,SAAU,WACVC,gBAAiB,YACjBC,WAAY,SAACC,GACX8J,GAAiB9J,GACjB+J,IACF,EACA9V,cAAe,SAACyI,EAAShF,GACN,UAAbA,EAAItC,MAAiC,gBAAbsC,EAAItC,OAC9B0U,GAAiB,CAACpN,EAAGlB,MACrBuO,KAEJ,EACAC,UAAWC,QAAQC,IACnBnW,UAAWuV,KArCKa,GAAoB7K,GAApCiB,eACW6J,GAAwB9K,GAAnCmB,UACW4J,GAA6B/K,GAAxClM,UACY2W,GAAyBzK,GAArCqB,WAqCF2J,IAA6CC,EAAAA,EAAAA,aAAY,CACvDC,YAAa5C,EACb6C,WAAW,SAADC,GAAA,OAAA3C,EAAAA,IAAA1G,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAE,SAAAoJ,EAAOC,GAAc,OAAAtJ,EAAAA,EAAAA,KAAAG,MAAA,SAAAoJ,GAAA,cAAAA,EAAAlJ,KAAAkJ,EAAAjJ,MAAA,UACJ,WAAvBpD,EAAM4I,aAAyB,CAAAyD,EAAAjJ,KAAA,eAAAiJ,EAAAjJ,KAAA,EACpBjD,EAAQmM,KACnB,qCACAF,EACA,CACE9I,QAAS,CACPC,cAAc,UAADxP,OAAgB,OAAJqM,QAAI,IAAJA,OAAI,EAAJA,EAAMoD,gBAGnC,KAAD,EAMA,KAAD,SAAA6I,EAAA5I,OAAA,SAAA4I,EAAA3I,MANC,cAAA2I,EAAAjJ,KAAA,EAEUjD,EAAQmM,KAAK,kCAAmCF,EAAW,CACtE9I,QAAS,CACPC,cAAc,UAADxP,OAAgB,OAAJqM,QAAI,IAAJA,OAAI,EAAJA,EAAMoD,gBAEjC,wBAAA6I,EAAA1I,OAAA,GAAAwI,EAAA,MACHvI,MAAA,KAAAC,UAAA,EACD2H,UAAU,SAADe,GAAA,OAAA/C,EAAAA,IAAA3G,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAE,SAAAyJ,EAAOC,GAAG,OAAA3J,EAAAA,EAAAA,KAAAG,MAAA,SAAAyJ,GAAA,cAAAA,EAAAvJ,KAAAuJ,EAAAtJ,MAAA,WACfqJ,EAAInV,KAAKqV,QAAQ,CAADD,EAAAtJ,KAAA,eAAAsJ,EAAAtJ,KAAA,EACZwJ,KAAmB,KAAD,EACe,OAAvCC,GAAmBnQ,GAAc,GAAMgQ,EAAAjJ,OAAA,SAChCqJ,IAAAA,KAAU,CACf5Y,SAAU,SACV6Y,KAAM,UACNtZ,MAAOgZ,EAAInV,KAAK0V,QAChBC,mBAAmB,EACnBC,MAAO,QACP,OAEJJ,IAAAA,KAAU,CACR5Y,SAAU,SACV6Y,KAAM,QACNtZ,MAAOgZ,EAAInV,KAAK0V,QAChBC,mBAAmB,EACnBC,MAAO,OACN,wBAAAR,EAAA/I,OAAA,GAAA6I,EAAA,MACJ5I,MAAA,KAAAC,UAAA,IAvCKsJ,GAAMrB,GAANqB,OAAmBC,GAAatB,GAAxBlX,UA0ChByY,IAA2DtB,EAAAA,EAAAA,aAAY,CACrEC,YAAa3C,EACb4C,WAAW,SAADqB,GAAA,OAAA7D,EAAAA,IAAA5G,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAE,SAAAwK,EAAOnB,GAAc,OAAAtJ,EAAAA,EAAAA,KAAAG,MAAA,SAAAuK,GAAA,cAAAA,EAAArK,KAAAqK,EAAApK,MAAA,cAAAoK,EAAApK,KAAA,EAClBjD,EAAQmM,KACnB,qCACAF,EACA,CACE9I,QAAS,CACPC,cAAc,UAADxP,OAAgB,OAAJqM,QAAI,IAAJA,OAAI,EAAJA,EAAMoD,gBAGnC,KAAD,SAAAgK,EAAA/J,OAAA,SAAA+J,EAAA9J,MAAA,wBAAA8J,EAAA7J,OAAA,GAAA4J,EAAA,MACF3J,MAAA,KAAAC,UAAA,EACD2H,UAAU,SAADiC,GAAA,OAAA/D,EAAAA,IAAA7G,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAE,SAAA2K,EAAOjB,GAAG,OAAA3J,EAAAA,EAAAA,KAAAG,MAAA,SAAA0K,GAAA,cAAAA,EAAAxK,KAAAwK,EAAAvK,MAAA,WACfqJ,EAAInV,KAAKqV,QAAQ,CAADgB,EAAAvK,KAAA,eAAAuK,EAAAvK,KAAA,EACZwJ,KAAmB,KAAD,EACe,OAAvCC,GAAmBnQ,GAAc,GAAMiR,EAAAlK,OAAA,SAChCqJ,IAAAA,KAAU,CACf5Y,SAAU,SACV6Y,KAAM,UACNtZ,MAAOgZ,EAAInV,KAAK0V,QAChBC,mBAAmB,EACnBC,MAAO,QACP,OAGJJ,IAAAA,KAAU,CACR5Y,SAAU,SACV6Y,KAAM,QACNtZ,MAAOgZ,EAAInV,KAAK0V,QAChBC,mBAAmB,EACnBC,MAAO,OACN,wBAAAS,EAAAhK,OAAA,GAAA+J,EAAA,MACJ9J,MAAA,KAAAC,UAAA,IAjCa+J,GAAYP,GAApBF,OAAiCU,GAAaR,GAAxBzY,UAoCxBkZ,IAA2BC,EAAAA,EAAAA,cAAY,WAC3C/N,EAAM+H,UAAgC,KAApB/H,EAAM+H,UAAmB,IAAM/H,EAAM+H,UACvD/H,EAAMgI,UAAgC,KAApBhI,EAAMgI,UAAmB,IAAMhI,EAAMgI,UACvDhI,EAAMmI,WAAkC,KAArBnI,EAAMmI,WAAoB,IAAMnI,EAAMmI,WACzDnI,EAAMoI,IAAoB,KAAdpI,EAAMoI,IAAa,IAAMpI,EAAMoI,IAC3CpI,EAAMqI,SAA8B,KAAnBrI,EAAMqI,SAAkB,IAAMrI,EAAMqI,SACrDrI,EAAMsI,mBACyB,KAA7BtI,EAAMsI,mBAA4B,IAAMtI,EAAMsI,mBAChDtI,EAAMuI,YAAoC,KAAtBvI,EAAMuI,YAAqB,IAAMvI,EAAMuI,YAC3DvI,EAAMyI,SAA8B,KAAnBzI,EAAMyI,SAAkB,IAAMzI,EAAMyI,QACvD,GAAG,CAACzI,IAEEgO,IAAeD,EAAAA,EAAAA,cAAY,WAC/B,MACwB,KAAtB/N,EAAMoF,aACgB,OAAtBpF,EAAMoF,kBACgB6I,IAAtBjO,EAAMoF,YAEC0H,IAAAA,KACL,oCACA,kCACA,SAIoB,KAApB9M,EAAM+E,WAAwC,OAApB/E,EAAM+E,UAC3B+H,IAAAA,KACL,gCACA,kCACA,SAGwB,KAAxB9M,EAAM8F,eAAgD,OAAxB9F,EAAM8F,cAC/BgH,IAAAA,KACL,yCACA,gCACA,SAGmB,KAAnB9M,EAAMoG,UAAsC,OAAnBpG,EAAMoG,SAC1B0G,IAAAA,KACL,qCACA,kCACA,cAIuB,WAAvB9M,EAAM4I,cACRsF,EAAAA,EAAAA,GAAuB,CACrBC,UAAU,EACVC,GAAI,SAACC,GACHP,KACAX,IAAMva,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EAAIoN,GAAK,IAAEqO,qBAAAA,IACrB,KAGFC,EAAAA,EAAAA,GAAuB,CACrBC,UAAW,WACTT,KACAX,GAAOnN,EACT,IAGN,GAAG,CAAC8N,GAA0B9N,EAAOmN,MAErCqB,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAgB,SAAChW,GAMlB,IAADiW,EAIwDC,EAIMC,EAZvC,KAAvB5O,EAAM4I,cACU,SAAfnQ,EAAM7B,MACU,UAAf6B,EAAM7B,MACS,gBAAf6B,EAAM7B,OAER6B,EAAM5B,iBACc,QAApB6X,EAAAzD,GAAanU,eAAO,IAAA4X,GAApBA,EAAsB3H,SAEG,KAAvB/G,EAAM4I,cAAsC,WAAfnQ,EAAM7B,OACrC6B,EAAM5B,iBACiB,QAAvB8X,EAAAzD,GAAgBpU,eAAO,IAAA6X,GAAvBA,EAAyB5H,SAEA,WAAvB/G,EAAM4I,cAA4C,WAAfnQ,EAAM7B,OAC3C6B,EAAM5B,iBACiB,QAAvB+X,EAAAzD,GAAgBrU,eAAO,IAAA8X,GAAvBA,EAAyB7H,QAE7B,EAEA,OADA9O,SAASe,iBAAiB,UAAWyV,GAC9B,WACLxW,SAAS4W,oBAAoB,UAAWJ,EAC1C,CACF,GAAG,CAACT,GAAchO,EAAM4I,eAExB,IAAM3I,GAAoB,SAACvJ,GACzB,IAAAoY,EAAwBpY,EAAE0D,OAAlB3I,EAAIqd,EAAJrd,KAAME,EAAKmd,EAALnd,MACd4O,EAAS,CAAE1M,KAAM,eAAgBsN,MAAO1P,EAAME,MAAAA,GAChD,EAIMuO,GAAoB,SAACvO,EAAYF,GACrC8O,EAAS,CAAE1M,KAAM,eAAgBsN,MAAO1P,EAAME,MAAAA,GAChD,EA4BA,SAASkb,GAAmBkC,GAAuC,IAA5BC,EAAiBnL,UAAAlK,OAAA,QAAAsU,IAAApK,UAAA,IAAAA,UAAA,GACtDkL,EAAKE,UAAYjP,EAAMiP,UACvBF,EAAKG,YAAclP,EAAMkP,YACzBH,EAAKI,cAAgBnP,EAAMmP,cAC3BJ,EAAKK,cAAgBpP,EAAMoP,cACtBJ,IACHD,EAAKnG,aAAe5I,EAAM4I,cAE5ByG,OAAOC,QAAQP,GAAM1V,SAAQ,SAAA9H,GAAmB,IAADgN,GAAA7C,EAAAA,EAAAA,GAAAnK,EAAA,GAAhB2H,EAAGqF,EAAA,GAAE5M,EAAK4M,EAAA,GACvC2B,GAAkBvO,EAAOuH,EAC3B,GACF,CAAC,SAEc0T,KAAgB,OAAAjD,EAAAA,IAAA9G,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAA/B,SAAAwM,IAAA,OAAAzM,EAAAA,EAAAA,KAAAG,MAAA,SAAAuM,GAAA,cAAAA,EAAArM,KAAAqM,EAAApM,MAAA,cAAAoM,EAAA/L,OAAA,SACSgM,QAAQC,IAAI,CACjB3E,GAAY4E,kBAAkB3G,GAC9B+B,GAAY4E,kBAAkB1G,GAC9B8B,GAAY4E,kBAAkBzG,GAC9B6B,GAAY4E,kBAAkBxG,GAC9B4B,GAAY4E,kBAAkBvG,GAC9B2B,GAAY4E,kBAAkBtG,MAC9B,wBAAAmG,EAAA7L,OAAA,GAAA4L,EAAA,MACH3L,MAAA,KAAAC,UAAA,CACD,SAASyH,GAAiB9J,GACxB,IAAAoO,EAwBIpO,EAAgB,GAvBlB4E,EAAQwJ,EAARxJ,SACAL,EAAO6J,EAAP7J,QACA8J,EAAUD,EAAVC,WACAC,EAAQF,EAARE,SACAC,EAAQH,EAARG,SACAC,EAAIJ,EAAJI,KACAC,EAAOL,EAAPK,QACA7I,EAAUwI,EAAVxI,WACA8I,EAAYN,EAAZM,aACAC,EAAOP,EAAPO,QACAC,EAAQR,EAARQ,SACAC,EAAeT,EAAfS,gBACAC,EAAcV,EAAdU,eACA3O,EAAOiO,EAAPjO,QACA4O,EAAMX,EAANW,OACAC,EAAMZ,EAANY,OACAhJ,EAAUoI,EAAVpI,WACAiJ,EAAWb,EAAXa,YACA7O,EAAYgO,EAAZhO,aACA8O,EAAGd,EAAHc,IACAC,EAAQf,EAARe,SACAC,EAAOhB,EAAPgB,QACAC,EAAQjB,EAARiB,SAEF3Q,GAAkB+P,EAAS,eAC3B/P,GAAkB8P,EAAM,aACxB9P,GAAkBmQ,EAAiB,eACnCnQ,GAAkByB,EAAS,kBAE3BzB,GAAkBiQ,EAAS,YAC3BjQ,GAAkBoQ,EAAgB,cAClCpQ,GAAkBkQ,EAAU,aAC5BlQ,GAAkB0B,EAAc,gBAEhC1B,GAAkB6F,EAAS,iBAC3B7F,GAAkBkG,EAAU,YAE5BlG,GAAkB2P,EAAY,YAC9B3P,GAAkB4P,EAAU,UAC5B5P,GAAkBkH,EAAY,cAE9BlH,GAAkB6P,EAAU,qBAE5B7P,GAAkB6P,EAAU,qBAC5B7P,GAAkBsH,EAAY,cAC9BtH,GAAkBuQ,EAAa,WAE/BvQ,GAAkBqQ,EAAQ,aAC1BrQ,GAAkBsQ,EAAQ,aAC1B/E,QAAQC,IAAIlK,GAEZtB,GAAkB4Q,GAAanJ,WAAWuI,IAAgB,cAC1DhQ,GAAkB4Q,GAAanJ,WAAW+I,IAAO,OACjDxQ,GAAkB4Q,GAAanJ,WAAWgJ,IAAY,YACtDzQ,GAAkB4Q,GAAanJ,WAAWiJ,IAAW,eACrD1Q,GAAkB4Q,GAAanJ,WAAWkJ,IAAY,YAEtD3Q,GAAkB,SAAU,eAC9B,CAGA,SAAS4Q,GAAaC,GACpB,OAAQA,GAAO,GAAGC,eAAe,QAAS,CACxCC,sBAAuB,EACvBC,sBAAuB,GAE3B,CA2BA,OAdA1C,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAgB,SAAChW,IAChBA,EAAM0Y,SAAW1Y,EAAM2Y,UAA0B,MAAd3Y,EAAMS,MAC5CT,EAAM5B,iBACNmX,KAEJ,EAGA,OADAlV,OAAOE,iBAAiB,UAAWyV,GAC5B,WACL3V,OAAO+V,oBAAoB,UAAWJ,EACxC,CACF,GAAG,CAACT,MAGFta,EAAAA,EAAAA,MAAA2d,EAAAA,SAAA,CAAA3e,SAAA,EACEJ,EAAAA,EAAAA,KAACgf,EAAAA,EAAU,CAAC7d,MAAM,gBAElBC,EAAAA,EAAAA,MAACqM,EAAW3D,SAAQ,CAClBzK,MAAO,CACLqO,MAAAA,EACAC,kBAAAA,GACAC,kBAAAA,GACA0K,UAAAA,GACAC,aAAAA,GACAb,WAAAA,EACAC,cAAAA,EACA9J,QAAAA,EACAC,KAAAA,EACAgK,UAAAA,GACAC,aAAAA,GACA/J,YAjKR,WACEwN,KACA,IAGMyD,EAHwB5J,WAAW3H,EAAMsI,oBAGD,IACxCkJ,EAAkB7J,WAAW3H,EAAMmI,YAEzCjI,IALsB,IAKasR,GAAiB5J,QAAQ,GAAI,OAChE1H,IALsB,KAKasR,GAAiB5J,QAAQ,GAAI,YAChE1H,IACGqR,EAAgBC,GAAiB5J,QAAQ,GAC1C,eAEF1H,GAAkBsR,EAAgB5J,QAAQ,GAAI,cAC9C1H,IAEIyH,WAAW6J,EAAgB5J,QAAQ,IACnCD,YAfkB,IAeU6J,GAAiB5J,QAAQ,IACrDD,YAfkB,KAeU6J,GAAiB5J,QAAQ,IACrDD,YAAY4J,EAAgBC,GAAiB5J,QAAQ,KACrDA,QAAQ,GACV,WAEJ,EA0IQvH,gBAAAA,GACAE,SAAAA,EACAkR,QA7CR,SAAiBhZ,GAEE,KAAfuH,EAAM0R,MACU,UAAfjZ,EAAM7B,MAAmC,gBAAf6B,EAAM7B,OAEjC6B,EAAM5B,iBACNmX,KAEJ,GAsCQtb,SAAA,EAEFJ,EAAAA,EAAAA,KAAC4D,EAAAA,EAAG,CACF/C,GAAI,SAACwe,GAAK,OAAA5I,EAAAA,EAAAA,GAAA,CACRpL,QAAS,OACT+B,WAAY,SACZH,UAAW,OACX/I,aAAc,QACbmb,EAAMC,YAAYC,KAAK,MAAQ,CAC9BlS,cAAe,SACfD,WAAY,aACZE,KAAM,GACP,EACAlN,UAGHJ,EAAAA,EAAAA,KAAA,OACE2B,MAAO,CACL0J,QAAS,OACT+B,WAAY,SACZH,UAAW,QACX7M,UAEFgB,EAAAA,EAAAA,MAAA,OACEO,MAAO,CACL0J,QAAS,OACT+B,WAAY,SACZH,UAAW,OACX7M,SAAA,CAEsB,KAAvBsN,EAAM4I,eACLtW,EAAAA,EAAAA,KAAC4V,EAAAA,EAAM,CACL/U,GAAI,CACFwB,OAAQ,OACRrB,SAAU,QAEZP,IAAKkY,GACL7U,QAAQ,YACR0b,WAAWxf,EAAAA,EAAAA,KAACyf,EAAAA,EAAO,IACnBra,QAAS,WACPwI,GAAkB,MAAO,eAC3B,EAAExN,SACH,SAIHJ,EAAAA,EAAAA,KAACkS,EAAAA,EAAa,CACZ1H,QAASsQ,GACTja,GAAI,CACFwB,OAAQ,OACRrB,SAAU,QAEZR,MAAM,UACNsD,QAAQ,YACRvC,KAAK,SACL6D,QAASsW,GACTtJ,SAAiC,KAAvB1E,EAAM4I,aAChBkJ,WAAWxf,EAAAA,EAAAA,KAAC0f,EAAAA,EAAQ,IAAItf,SACzB,SAIuB,KAAvBsN,EAAM4I,eACLtW,EAAAA,EAAAA,KAAC4V,EAAAA,EAAM,CACL/U,GAAI,CACFwB,OAAQ,OACRrB,SAAU,QAEZP,IAAKmY,GACL9U,QAAQ,YACR0b,WAAWxf,EAAAA,EAAAA,KAACqF,EAAAA,EAAS,IACrB7E,MAAM,QACN4E,QAAS,WACPoV,IAAAA,KAAU,CACRrZ,MAAO,gBACPwe,KAAM,oCACNlF,KAAM,UACNmF,kBAAkB,EAClBC,mBAAoB,UACpBC,kBAAmB,OACnBC,kBAAmB,oBAClBC,MAAK,SAACC,GACHA,EAAOC,cACTtS,GAAkB,GAAI,gBACtB2M,GAAmBnQ,GAAc,GAErC,GACF,EAAEhK,SACH,YAIHJ,EAAAA,EAAAA,KAACkS,EAAAA,EAAa,CACZ1H,QAAS+Q,GACT9a,IAAKoY,GACLjW,GAAG,oBACHkB,QAAQ,YACRjD,GAAI,CACFwB,OAAQ,OACRrB,SAAU,OACVmf,gBAAiBC,EAAAA,EAAK,KACtB,UAAW,CACTD,gBAAiBC,EAAAA,EAAK,OAG1BhO,SAAiC,WAAvB1E,EAAM4I,aAChBkJ,WAAWxf,EAAAA,EAAAA,KAACqgB,EAAAA,EAAU,IACtBjb,QAAS,YACPwW,EAAAA,EAAAA,GAAuB,CACrBC,UAAU,EACVC,GAAI,SAACC,GACHT,GAAa,CACX9H,cAAe9F,EAAM8F,cACrBM,SAAUpG,EAAMoG,SAChBwM,WAAY5S,EAAM4S,WAClBvE,qBAAAA,GAEJ,GAEJ,EAAE3b,SACH,mBAMPgB,EAAAA,EAAAA,MAAA,OAAKO,MAAO,CAAEuC,aAAc,MAAOmH,QAAS,OAAQsG,IAAK,QAASvR,SAAA,CAC/DmZ,IACCvZ,EAAAA,EAAAA,KAACkS,EAAAA,EAAa,CAAC1H,QAAS+O,MAExBvZ,EAAAA,EAAAA,KAACiE,EAAAA,EAAS,CACR/E,MAAM,SACNyB,KAAK,QACLxB,KAAK,SACLE,MAAO6Y,GACP9Y,SAAU,SAACgF,GACT+T,GAAU/T,EAAE0D,OAAOzI,MACrB,EACAC,UAAW,SAAC8E,GACK,UAAXA,EAAEE,MAA+B,gBAAXF,EAAEE,OAC1BF,EAAEG,iBACF+U,GAAyBpB,IAE7B,EACA/T,WAAY,CACVxC,MAAO,CAAEU,OAAQ,OAAQrB,SAAU,SAErCH,GAAI,CACFkB,MAAO,QACPM,OAAQ,OACR,qBAAsB,CAAErB,SAAU,QAClC,wCAAyC,CAAEC,IAAK,WAIrD8X,IACC/Y,EAAAA,EAAAA,KAACkS,EAAAA,EAAa,CAAC1H,QAASuO,MAExB3X,EAAAA,EAAAA,MAAC+Q,EAAAA,EAAW,CACVxR,KAAK,QACLE,GAAI,SAACwe,GAAK,MAAM,CACdtd,MAAO,QACP,qBAAsB,CACpBf,SAAU,OACVmK,WAAY,QACZkH,OAAQ,GACRjH,QAAS,SAEX,wCAAyC,CAAEnK,IAAK,QACjD,EAAEb,SAAA,EAEHJ,EAAAA,EAAAA,KAACsS,EAAAA,EAAU,CAAC1P,GAAG,aAAYxC,SAAC,iBAC5BJ,EAAAA,EAAAA,KAACsT,EAAAA,EAAM,CACLzS,GAAI,CACFwB,OAAQ,OACRrB,SAAU,QAEZL,KAAK,QACL4S,QAAQ,aACRrU,MAAM,aACNC,KAAK,cACLE,MAAOqO,EAAM0I,YACbhX,SAAU,SAACgF,GACTuJ,GAAkBvJ,EACpB,EAAEhE,UAEc,OAAd0Y,SAAc,IAAdA,QAAc,EAAdA,GAAgB9T,KAAKoR,aAAazC,KAClC,SAACC,EAAY5M,GACX,OACEhH,EAAAA,EAAAA,KAAC6T,EAAAA,EAAQ,CAAWxU,MAAOuU,EAAM2M,QAAQC,OAAOpgB,SAC7CwT,EAAM2M,SADMvZ,EAInB,aAMVhH,EAAAA,EAAAA,KAACuN,EAAoB,IACpB8L,QAIT,C,gICvrBsC,SA8BvBoH,EAAkB7G,EAAAK,EAAAe,GAAA,OAAA0F,EAAAA,IAAAnQ,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAjC,SAAAC,EACE7C,EACAC,EACAY,GAAuC,IAAAwJ,EAAAyI,EAAApP,UAAA,OAAAf,EAAAA,EAAAA,KAAAG,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACpB,OAAnBoH,EAAcyI,EAAAtZ,OAAA,QAAAsU,IAAAgF,EAAA,GAAAA,EAAA,GAAG,GAAE/P,EAAAO,OAAA,SAEZtD,EAAQkD,IAAI,GAADtP,OAAQ,OAAJiN,QAAI,IAAJA,OAAI,EAAJA,EAAMC,IAAG,KAAAlN,OAAQ,OAAJiN,QAAI,IAAJA,OAAI,EAAJA,EAAME,aAAY,KAAAnN,OAAIyW,GAAU,CACjElH,QAAS,CACPC,cAAc,UAADxP,OAAgB,OAAJqM,QAAI,IAAJA,OAAI,EAAJA,EAAMoD,iBAEjC,wBAAAN,EAAAS,OAAA,GAAAX,EAAA,MACHY,MAAA,KAAAC,UAAA,CAsID,IApI2B,SAAHtS,GAeU,IAAD2hB,EAAApT,EAd/BkB,EAAIzP,EAAJyP,KACAK,EAAQ9P,EAAR8P,SACAvM,EAAQvD,EAARuD,SACAwM,EAAe/P,EAAf+P,gBACAzM,EAAOtD,EAAPsD,QAAOse,EAAA5hB,EACPgQ,WAAAA,OAAU,IAAA4R,EAAG,WAAO,EAACA,EAAAC,EAAA7hB,EACrB8hB,iBAAAA,OAAgB,IAAAD,EAAG,WAAO,EAACA,EAAAE,EAAA/hB,EAC3Bia,UAAAA,OAAS,IAAA8H,EAAG,WAAO,EAACA,EACpB/d,EAAShE,EAATgE,UACAE,EAAalE,EAAbkE,cAAa8d,EAAAhiB,EACbiiB,gBAAAA,OAAe,IAAAD,EAAG,WAAO,EAACA,EAAAE,EAAAliB,EAC1BmiB,eAAAA,OAAc,IAAAD,EAAGV,EAAkBU,EACnC9d,EAAepE,EAAfoE,gBACAC,EAAgBrE,EAAhBqE,iBAEAyJ,GAA0BC,EAAAA,EAAAA,YAAWyK,EAAAA,GAA7B5J,EAAOd,EAAPc,QAASC,EAAIf,EAAJe,KACjB7E,GAA6BC,EAAAA,EAAAA,WAAS,GAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAArCoY,EAAIlY,EAAA,GAAEmY,EAAYnY,EAAA,GACzByO,GAAwB1O,EAAAA,EAAAA,UAAgC,IAAG2O,GAAAzO,EAAAA,EAAAA,GAAAwO,EAAA,GAApDlV,EAAImV,EAAA,GAAElV,EAAOkV,EAAA,GAAwC,SAC7C0J,IAAkB,OAAAX,EAAAA,IAAArQ,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAjC,SAAAoJ,IAAA,IAAA3B,EAAAsJ,EAAAjQ,UAAA,OAAAf,EAAAA,EAAAA,KAAAG,MAAA,SAAAoJ,GAAA,cAAAA,EAAAlJ,KAAAkJ,EAAAjJ,MAAA,OAAqD,OAAnBoH,EAAcsJ,EAAAna,OAAA,QAAAsU,IAAA6F,EAAA,GAAAA,EAAA,GAAG,GAAEzH,EAAAjJ,KAAA,EACtCsQ,EAAevT,EAASC,EAAMY,EAAMwJ,GAAQ,KAAD,SAAA6B,EAAA5I,OAAA,SAAA4I,EAAA3I,MAAA,wBAAA2I,EAAA1I,OAAA,GAAAwI,EAAA,MACzDvI,MAAA,KAAAC,UAAA,CACD,IAAAnB,GAA+BC,EAAAA,EAAAA,UAAS,CACtC7N,SAAUA,EACV8N,QAAQ,WAAD,OAAA9C,EAAAA,IAAA+C,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAE,SAAAyJ,IAAA,OAAA1J,EAAAA,EAAAA,KAAAG,MAAA,SAAAyJ,GAAA,cAAAA,EAAAvJ,KAAAuJ,EAAAtJ,MAAA,cAAAsJ,EAAAtJ,KAAA,EAAkByQ,IAAoB,cAAAnH,EAAAjJ,OAAA,SAAAiJ,EAAAhJ,MAAA,wBAAAgJ,EAAA/I,OAAA,GAAA6I,EAAA,MAAA5I,MAAA,KAAAC,UAAA,EAC/C2H,UAAW,SAACiB,GACV,IAAMsH,EAAWtH,EACjBxX,EAAQ8e,EAASzc,KAAKgK,IACtBkK,EAAUuI,EACZ,EACAC,sBAAsB,IARhBpf,EAAS8N,EAAT9N,UAAWqf,EAAOvR,EAAPuR,QAmGnB,MAAO,CACLN,KAAAA,EACA3e,KAAAA,EACAJ,UAAAA,EACAqN,UA5FgB,WAA0B,IAAzBuI,EAAc3G,UAAAlK,OAAA,QAAAsU,IAAApK,UAAA,GAAAA,UAAA,GAAG,IAClCqQ,EAAAA,EAAAA,YAAU,WACRN,GAAa,EACf,IACa,OAATre,QAAS,IAATA,GAAAA,EAAWuB,UACbvB,EAAUuB,QAAQnF,MAAQ6Y,EAC1BqJ,EAAmBrJ,GAAQ8H,MAAK,SAAC7F,GAC/B,GAAQ,OAAHA,QAAG,IAAHA,IAAAA,EAAKnV,KAAKqV,QACb,OAAOwH,MAAM,WAADpgB,OAAe,OAAH0Y,QAAG,IAAHA,OAAG,EAAHA,EAAKnV,KAAK0V,UAGpC/X,EADiBwX,EACAnV,KAAKgK,IACT,OAAT/L,QAAS,IAATA,GAAAA,EAAWuB,SAASvB,EAAUuB,QAAQ0B,OAC5C,IAEJ,EA8EE2J,WA5EiB,WAEK,IAADxL,GADrBid,GAAa,GACTJ,IACFA,EAAyB,OAATje,QAAS,IAATA,GAAkB,QAAToB,EAATpB,EAAWuB,eAAO,IAAAH,OAAT,EAATA,EAAoBhF,MAExC,EAwEEoQ,gBArEAzP,EAAAA,EAAAA,KAACoC,EAAAA,GAAc,CACbkB,iBAAkBA,EAClBL,UAAWA,EACXH,UAAWue,EACXxe,aAAc,WAEU,IAADif,GADrBR,GAAa,GACTJ,IACFA,EAAyB,OAATje,QAAS,IAATA,GAAkB,QAAT6e,EAAT7e,EAAWuB,eAAO,IAAAsd,OAAT,EAATA,EAAoBziB,MAExC,EACA0D,iBAAkB,WAEM,IAADgf,GADrBT,GAAa,GACTJ,IACFA,EAAyB,OAATje,QAAS,IAATA,GAAkB,QAAT8e,EAAT9e,EAAWuB,eAAO,IAAAud,OAAT,EAATA,EAAoB1iB,MAExC,EACA2D,eAAgB,SAACoB,GAaf,EAEFhB,iBAAkB,SAAC/D,GACjBkiB,EAAmBliB,GAAO2gB,MAAK,SAAC7F,GAC9B,GAAQ,OAAHA,QAAG,IAAHA,IAAAA,EAAKnV,KAAKqV,QACb,OAAOwH,MAAM,WAADpgB,OAAe,OAAH0Y,QAAG,IAAHA,OAAG,EAAHA,EAAKnV,KAAK0V,UAGpC/X,EADiBwX,EACAnV,KAAKgK,GACxB,GACF,EACA7L,cAAeA,EACfd,OAAQ,IACRC,UAAWA,EACXE,SAAUA,EACVD,QAASA,EACTE,kBAAmB,SAAC2F,EAAmBpD,GACrC,GAAIoD,EAAkBf,QAAU,EAC9B,OAAO0Z,EAAiB/b,GAE1B,IAAMgd,EAAc,IAAIvW,IAAIrD,GACtB8G,EAAkBlK,EAAK0E,QAAO,SAACgB,GACnC,OAAOsX,EAAYrW,IAAIjB,EAAIqE,GAAUkT,WACvC,IACI/S,EAAgB7H,QAAU,GAC9B4H,EAAWC,EAAiBlK,EAC9B,EACApC,GAAImM,EACJrM,KAAMA,EACNC,QAASA,EACTU,gBAAiBA,IAWnBse,QAAAA,EAEJ,C,6HCpLO,SAAS/F,EAAuBpU,GAMnC,IAAD0a,EACD1H,IAAAA,KAAU,CACRrZ,MAAM,gBACNghB,KAAW,OAAL3a,QAAK,IAALA,GAAAA,EAAOmY,KACJ,OAALnY,QAAK,IAALA,OAAK,EAALA,EAAOmY,KACPnY,EAAMqU,SAAQ,6CAEd,wCACJpB,KAAM,UACN2H,MAAO,OACPC,gBAAiB,CACfC,eAAgB,OAElB1C,kBAAkB,EAClBG,kBAAmB,OACnBF,mBAAoB,QACpB0C,qBAAqB,EACrBC,WAAW,SAAD5I,GAAA,OAAAsI,EAAAA,IAAA3R,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAE,SAAAC,EAAOqL,GAAoB,OAAAvL,EAAAA,EAAAA,KAAAG,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACrC,IACEtJ,EAAMsU,GAAGC,EACX,CAAE,MAAO0G,GACPjI,IAAAA,sBAA2B,iCAAD/Y,OACJghB,EAAK,gBAE7B,CAAC,wBAAA7R,EAAAS,OAAA,GAAAX,EAAA,MACFY,MAAA,KAAAC,UAAA,EACDmR,kBAAmB,kBAAOlI,IAAAA,WAAgB,IACzCwF,MAAK,SAACC,GACP,GAAIA,EAAOC,aACL1Y,EAAMyU,UACR,OAAOzU,EAAMyU,YAGbzU,EAAMmb,YACRnb,EAAMmb,YAEV,GACF,CAEO,SAAS3G,EAAuBxU,GAKrCgT,IAAAA,KAAU,CACRrZ,MAAO,gBACPwe,KAAW,OAALnY,QAAK,IAALA,GAAAA,EAAOmY,KAAY,OAALnY,QAAK,IAALA,OAAK,EAALA,EAAOmY,KAAO,sCAClClF,KAAM,UACNmF,kBAAkB,EAClBC,mBAAoB,UACpBC,kBAAmB,OACnBC,kBAAmB,kBAClBC,MAAK,SAACC,GACP,GAAIA,EAAOC,aACL1Y,EAAMyU,UACR,OAAOzU,EAAMyU,YAGbzU,EAAMmb,YACRnb,EAAMmb,YAEV,GACF,C,4BCnEIC,EAAyBC,EAAQ,OAIrCC,EAAQ,OAAU,EAClB,IAAIC,EAAiBH,EAAuBC,EAAQ,QAChDG,EAAcH,EAAQ,OACtBI,GAAW,EAAIF,EAAeG,UAAuB,EAAIF,EAAYG,KAAK,OAAQ,CACpFC,EAAG,wCACD,OACJN,EAAQ,EAAUG,C,4BCVdL,EAAyBC,EAAQ,OAIrCC,EAAQ,OAAU,EAClB,IAAIC,EAAiBH,EAAuBC,EAAQ,QAChDG,EAAcH,EAAQ,OACtBI,GAAW,EAAIF,EAAeG,UAAuB,EAAIF,EAAYG,KAAK,OAAQ,CACpFC,EAAG,kFACD,UACJN,EAAQ,EAAUG,C,4BCVdL,EAAyBC,EAAQ,OAIrCC,EAAQ,OAAU,EAClB,IAAIC,EAAiBH,EAAuBC,EAAQ,QAChDG,EAAcH,EAAQ,OACtBI,GAAW,EAAIF,EAAeG,SAAS,EAAc,EAAIF,EAAYG,KAAK,SAAU,CACtFE,GAAI,KACJC,GAAI,IACJC,EAAG,KACF,MAAmB,EAAIP,EAAYG,KAAK,OAAQ,CACjDC,EAAG,kQACF,MAAO,gBACVN,EAAQ,EAAUG,C,4BCddL,EAAyBC,EAAQ,OAIrCC,EAAQ,OAAU,EAClB,IAAIC,EAAiBH,EAAuBC,EAAQ,QAChDG,EAAcH,EAAQ,OACtBI,GAAW,EAAIF,EAAeG,UAAuB,EAAIF,EAAYG,KAAK,OAAQ,CACpFC,EAAG,mJACD,QACJN,EAAQ,EAAUG,C,qBCGlB,IAhBa,CACX,GAAI,UACJ,IAAK,UACL,IAAK,UACL,IAAK,UACL,IAAK,UACL,IAAK,UACL,IAAK,UACL,IAAK,UACL,IAAK,UACL,IAAK,UACLO,KAAM,UACNC,KAAM,UACNC,KAAM,UACNC,KAAM,U","sources":["components/DatePicker.tsx","components/Helmet.tsx","components/ModalWithTable.tsx","components/NumberFormat.tsx","components/Table.tsx","feautures/Admin/Task/Production/Policies/PolicyComponent/CGL/CGLPolicyComponent/CGLPolicyInformation.tsx","feautures/Admin/Task/Production/Policies/PolicyComponent/CGL/CGLPolicy.tsx","hooks/useQueryModalTable.tsx","lib/confirmationAlert.ts","../node_modules/@mui/icons-material/Add.js","../node_modules/@mui/icons-material/Delete.js","../node_modules/@mui/icons-material/PersonSearch.js","../node_modules/@mui/icons-material/Save.js","../node_modules/@mui/material/colors/pink.js"],"sourcesContent":["import { LocalizationProvider } from \"@mui/x-date-pickers/LocalizationProvider\";\nimport { AdapterDateFns } from \"@mui/x-date-pickers/AdapterDateFns\";\nimport { DatePicker } from \"@mui/x-date-pickers\";\nexport default function CustomDatePicker({\n  label,\n  name,\n  onChange,\n  value,\n  onKeyDown,\n  inputRef,\n  datePickerRef,\n  fullWidth,\n  textField,\n  minWidth = \"200px\",\n  ...rest\n}: any) {\n  return (\n    <LocalizationProvider dateAdapter={AdapterDateFns}>\n      <DatePicker\n      floatingLabelStyle={{color: \"black\" }}\n        value={value}\n        onChange={onChange}\n        ref={datePickerRef}\n        slotProps={{\n          textField: {\n            size: \"small\",\n            label,\n            name,\n            onKeyDown,\n            inputRef: inputRef,\n            fullWidth,\n\n            ...textField,\n          },\n        }}\n        InputLabelProps={{\n          sx: {\n            color: \"black\",\n          },\n        }}\n        sx={{\n          minWidth,\n          fieldset: { borderColor: \"black\" },\n          \".MuiFormLabel-root\": { fontSize: \"14px\" },\n          \".MuiFormLabel-root[data-shrink=false]\": {\n            top: \"-5px\",\n          },\n        }}\n        {...rest}\n      />\n    </LocalizationProvider>\n  );\n}\n","\r\nimport { Helmet } from \"react-helmet\";\r\n\r\nconst PageHelmet = ({ title = '' }: { title: string }) => {\r\n    const imgUrl = process.env.REACT_APP_IMAGE_URL;\r\n    return (\r\n        <Helmet>\r\n            <title>{title}</title>\r\n            <link rel=\"icon\" type=\"image/png\" href={`${imgUrl}/logo.png`} />\r\n        </Helmet>\r\n    );\r\n};\r\n\r\nexport default PageHelmet;","import React from \"react\";\nimport {\n  GridRowSelectionModel,\n  GridRowParams,\n  GridCellParams,\n  GridTreeNode,\n} from \"@mui/x-data-grid\";\nimport { Modal, Box, Typography, IconButton, TextField } from \"@mui/material\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport Table from \"./Table\";\n\ninterface ModalWithTableParams {\n  height: number;\n  isLoading: boolean;\n  queryKey: string;\n  columns: Array<any>;\n  onSelectionChange: (rowSelectionModel: Array<any>, data: Array<any>) => void;\n  setRows: React.Dispatch<React.SetStateAction<GridRowSelectionModel>>;\n  rows: GridRowSelectionModel;\n  id: string;\n  onCloseModal: () => void;\n  onClickCloseIcon: () => void;\n  showModal: boolean;\n  searchOnChange:\n  | React.ChangeEventHandler<HTMLInputElement | HTMLTextAreaElement>\n  | undefined;\n  title?: string;\n  searchRef?: React.RefObject<HTMLInputElement>;\n  onCellKeyDown?: any;\n  onSearchKeyEnter?: (search: string) => void;\n  isRowSelectable?: ((params: GridRowParams<any>) => boolean) | undefined;\n  getCellClassName?:\n  | ((params: GridCellParams<any, any, any, GridTreeNode>) => string)\n  | undefined;\n}\n\nconst style = {\n  position: \"absolute\" as \"absolute\",\n  top: \"50%\",\n  left: \"50%\",\n  transform: \"translate(-50%, -50%)\",\n  width: \"70%\",\n  bgcolor: \"background.paper\",\n  boxShadow: 24,\n  p: 4,\n  heigth: \"auto\",\n};\n\nexport default function ModalWithTable({\n  height,\n  isLoading,\n  queryKey,\n  columns,\n  onSelectionChange,\n  setRows,\n  rows,\n  id,\n  onCloseModal,\n  showModal,\n  onClickCloseIcon,\n  searchOnChange,\n  title = \"\",\n  searchRef,\n  onCellKeyDown,\n  onSearchKeyEnter = () => { },\n  isRowSelectable,\n  getCellClassName,\n}: ModalWithTableParams) {\n  const mainId = generateRandomClass();\n\n  return (\n    <Modal\n      open={showModal}\n      onClose={onCloseModal}\n      aria-labelledby=\"modal-modal-title\"\n      aria-describedby=\"modal-modal-description\"\n    >\n      <Box sx={style}>\n        <Typography id=\"modal-modal-title\" variant=\"h6\" component=\"h2\" mb={2}>\n          {title}\n        </Typography>\n        <TextField\n          size=\"small\"\n          label=\"Search\"\n          sx={{ marginBottom: \"10px\" }}\n          fullWidth\n          onChange={searchOnChange}\n          InputProps={{\n            inputRef: searchRef,\n          }}\n          onKeyDown={(e) => {\n            if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n              e.preventDefault();\n              onSearchKeyEnter(searchRef?.current?.value as string);\n            }\n            keyBoardSelectionTable(\n              e,\n              mainId,\n              searchRef?.current as HTMLInputElement\n            );\n          }}\n        />\n        <div\n          className={`${mainId} main-table-selection-container`}\n          style={{ position: \"relative\", height: `${height + 20}px` }}\n        >\n          <Table\n            isSingleSelection={true}\n            isRowFreeze={false}\n            columns={columns}\n            isLoading={isLoading}\n            dataSelection={(selection, data, code) => {\n              onSelectionChange(selection, data);\n            }}\n            table_id={id}\n            rows={rows}\n            isRowSelectable={isRowSelectable}\n            getCellClassName={getCellClassName}\n          />\n        </div>\n\n        <div style={{ position: \"absolute\", top: \"10px\", right: \"10px\" }}>\n          <IconButton\n            aria-label=\"search-client\"\n            color=\"secondary\"\n            onClick={onClickCloseIcon}\n          >\n            <CloseIcon />\n          </IconButton>\n        </div>\n      </Box>\n    </Modal>\n  );\n}\n\nexport function generateRandomClass() {\n  const randomNumber = Math.floor(Math.random() * 10000);\n  const randomClass = \"main-\" + randomNumber;\n  return randomClass;\n}\n\nfunction keyBoardUpDown(className: string, el: HTMLElement) {\n  const firstRowParent = document.querySelector(\n    `.${className} .MuiDataGrid-row`\n  );\n  const firstInput = firstRowParent?.querySelector(\"input\");\n  firstInput?.focus();\n  const event = new MouseEvent(\"mouseenter\", {\n    bubbles: true,\n    cancelable: true,\n    view: window,\n  });\n  firstRowParent?.dispatchEvent(event);\n  firstInput?.addEventListener(\"keydown\", (es: any) => {\n    if (es.key === \"ArrowUp\") {\n      es.preventDefault();\n      el.focus();\n    }\n    if (es.key === \"ArrowUp\") {\n      firstRowParent?.classList.remove(\"hover-keyboard\");\n    }\n  });\n}\n\nexport function keyBoardSelectionTable(\n  e: React.KeyboardEvent<HTMLDivElement>,\n  className: string,\n  el: HTMLElement\n) {\n  const mainId = className;\n  if (e.code === \"ArrowDown\") {\n    const rows = document.querySelectorAll(`.${mainId} .MuiDataGrid-row`);\n    e.preventDefault();\n    rows[0]?.classList.add(\"hover-keyboard\");\n    keyBoardUpDown(className, el);\n    rows.forEach((el, idx) => {\n      el.addEventListener(\"keydown\", (es: any) => {\n        if (es.key === \"ArrowUp\") {\n          if (idx <= 0) {\n            return;\n          }\n\n          es.preventDefault();\n          rows[idx]?.classList.remove(\"hover-keyboard\");\n          rows[idx - 1]?.classList.add(\"hover-keyboard\");\n          return;\n        }\n        if (es.key === \"ArrowDown\") {\n          es.preventDefault();\n          if (idx >= rows.length - 1) {\n            return;\n          }\n          rows[idx]?.classList.remove(\"hover-keyboard\");\n          rows[idx + 1]?.classList.add(\"hover-keyboard\");\n        }\n      });\n    });\n  }\n}\n","import React from \"react\";\nimport { NumericFormat, NumericFormatProps } from \"react-number-format\";\n\ninterface CustomProps {\n  onChange: (event: { target: { name: string; value: string } }) => void;\n  name: string;\n}\n\nexport const NumericFormatCustom = React.forwardRef<\n  NumericFormatProps,\n  CustomProps\n>(function NumericFormatCustom(props, ref) {\n  const { onChange, ...other } = props;\n\n  return (\n    <NumericFormat\n      {...other}\n      getInputRef={ref}\n      onValueChange={(values) => {\n        onChange({\n          target: {\n            name: props.name,\n            value: values.value,\n          },\n        });\n      }}\n      allowNegative={false}\n      thousandSeparator\n      valueIsNumericString\n      //   prefix=\"$\"\n    />\n  );\n});\n","import {\n  useState,\n  useContext,\n  createContext,\n  ReactElement,\n  forwardRef,\n  useImperativeHandle,\n} from \"react\";\nimport { Box, LinearProgress } from \"@mui/material\";\nimport {\n  DataGrid,\n  GridSlotsComponentsProps,\n  gridPageCountSelector,\n  GridPagination,\n  useGridApiContext,\n  useGridSelector,\n  GridRowSelectionModel,\n  GridColDef,\n  GridRowParams,\n  GridCellParams,\n  GridTreeNode,\n} from \"@mui/x-data-grid\";\nimport { TablePaginationProps } from \"@mui/material/TablePagination\";\nimport MuiPagination from \"@mui/material/Pagination\";\n\ninterface TableProps {\n  isLoading: boolean;\n  columns: Array<any>;\n  rows: Array<any>;\n  table_id: string;\n  isSingleSelection: boolean;\n  isRowFreeze: boolean;\n  dataSelection?: (selection: any, data: any, code: string | null) => void;\n  CustomFooterComponent?: any;\n  isRowSelectable?: ((params: GridRowParams<any>) => boolean) | undefined;\n  getCellClassName?:\n    | ((params: GridCellParams<any, any, any, GridTreeNode>) => string)\n    | undefined;\n  footerChildren?: (\n    rowSelectionModel: GridRowSelectionModel,\n    rows: Array<any>\n  ) => ReactElement;\n  footerPaginationPosition?: string;\n  showFooterSelectedCount?: boolean;\n  checkboxSelection?: boolean | undefined;\n}\n\nconst TableContext = createContext<{\n  rowSelectionModel: GridRowSelectionModel;\n  rows: Array<any>;\n  footerPaginationPosition?: string;\n  showFooterSelectedCount?: boolean;\n  footerChildren: (\n    rowSelectionModel: GridRowSelectionModel,\n    rows: Array<any>\n  ) => ReactElement;\n}>({\n  rows: [],\n  rowSelectionModel: [],\n  footerChildren: () => <div></div>,\n  footerPaginationPosition: \"right-left\",\n  showFooterSelectedCount: true,\n});\nconst Table = forwardRef(\n  (\n    {\n      isLoading,\n      columns,\n      rows,\n      table_id,\n      isSingleSelection,\n      isRowFreeze,\n      dataSelection,\n      CustomFooterComponent = DefaultooterComponent,\n      isRowSelectable,\n      getCellClassName,\n      checkboxSelection = true,\n      footerChildren = (\n        rowSelectionModel: GridRowSelectionModel,\n        rows: Array<any>\n      ) => <div></div>,\n      footerPaginationPosition = \"right-left\",\n      showFooterSelectedCount = true,\n    }: TableProps,\n    ref\n  ) => {\n    const [selectedRows, setSelectedRows] = useState<any>([]);\n\n    useImperativeHandle(ref, () => ({\n      removeSelection: () => {\n        setSelectedRows([]);\n      },\n      getSelectedRows: () => {\n        return rows.filter((item: any) =>\n          selectedRows?.includes(item[table_id])\n        );\n      },\n      setSelectedRows: (data: Array<any>) => {\n        setSelectedRows(data);\n      },\n    }));\n\n    function onSelectionChange(selection: any, data: any, code: string | null) {\n      if (dataSelection) {\n        dataSelection(selection, data, code);\n      }\n    }\n    let freezeArray: Array<any> = [];\n\n    return (\n      <TableContext.Provider\n        value={{\n          showFooterSelectedCount,\n          footerPaginationPosition,\n          rowSelectionModel: selectedRows,\n          rows,\n          footerChildren,\n        }}\n      >\n        <DataGrid\n          slots={{\n            loadingOverlay: LinearProgress,\n            footer: CustomFooterComponent,\n          }}\n          initialState={{\n            pagination: { paginationModel: { pageSize: 35 } },\n          }}\n          loading={isLoading}\n          getRowId={(row) => row[table_id]}\n          columns={columns.filter((col: any) => !col.hide) as GridColDef<any>[]}\n          rows={rows}\n          showCellVerticalBorder={true}\n          showColumnVerticalBorder={true}\n          checkboxSelection={checkboxSelection}\n          rowSelectionModel={selectedRows}\n          rowHeight={25}\n          columnHeaderHeight={35}\n          pageSizeOptions={[10, 20, 35, 50, 75, 100]}\n          sx={{\n            \"& .cash\": {\n              color: \"#ec4899\",\n            },\n            \"& .check\": {\n              color: \"#0891b2\",\n            },\n            \"& .approved\": {\n              color: \"green\",\n            },\n            \"& .pending\": {\n              color: \"orange\",\n            },\n            \"& .disapproved\": {\n              color: \"red\",\n            },\n            \"& .normal\": {\n              color: \"red\",\n            },\n            \"& .MuiDataGrid-row.Mui-selected:hover\": {\n              color: \"black\",\n              \"& .MuiSvgIcon-root \": {\n                fill: \"#3b82f6\",\n              },\n            },\n            \"& .hover-keyboard\": {\n              background: \"#2563eb\",\n              color: \"white\",\n              \"& .MuiSvgIcon-root \": {\n                fill: \"white\",\n              },\n            },\n            \"& .MuiDataGrid-row:hover\": {\n              background: \"#2563eb\",\n              color: \"white\",\n              \"& .MuiSvgIcon-root \": {\n                fill: \"white\",\n              },\n            },\n            \"& .MuiDataGrid-row.hover\": {\n              background: \"#2563eb\",\n              color: \"white\",\n              \"& .MuiSvgIcon-root \": {\n                fill: \"white\",\n              },\n            },\n            \"& .MuiTablePagination-root p \": {\n              padding: \"0 !important\",\n            },\n\n            ...{\n              \"& .MuiDataGrid-columnHeaders\": {\n                background: \"#64748b\",\n                color: \"white\",\n                fontSize: \"14px\",\n                // borderBottomColor: \"#38bdf8\",\n              },\n              \"& .MuiDataGrid-columnHeaderCheckbox .MuiDataGrid-columnHeaderTitleContainer .MuiSvgIcon-root \":\n                {\n                  display: isSingleSelection || isRowFreeze ? \"none\" : \"block\",\n                  fill: \"white\",\n                },\n              \"& .MuiDataGrid-columnHeaderCheckbox .MuiDataGrid-columnHeaderTitleContainer input \":\n                {\n                  display: isSingleSelection || isRowFreeze ? \"none\" : \"block\",\n                },\n            },\n            ...{\n              fontSize: 13,\n              fontWeight: 500,\n              \"& .MuiDataGrid-checkboxInput\": {\n                height: \"27px\",\n                width: \"27px\",\n              },\n              \"& .MuiDataGrid-checkboxInput svg\": {\n                height: \"20px\",\n                width: \"20px\",\n              },\n            },\n          }}\n          // onRowDoubleClick={(e, r) => {\n          //   console.log(e, r);\n          // }}\n\n          onRowSelectionModelChange={(selection) => {\n            if (isRowFreeze) {\n              if (selection.length <= 0) return;\n              freezeArray = selection;\n              if (selectedRows.includes(freezeArray[freezeArray.length - 1]))\n                return;\n\n              setSelectedRows(selection);\n\n              onSelectionChange([selection[selection.length - 1]], rows, null);\n              return;\n            }\n\n            if (!isRowFreeze && isSingleSelection) {\n              if (selectedRows && selectedRows?.length > 0) {\n                const selectionSet = new Set(selectedRows);\n                setSelectedRows(\n                  selection.filter((s: any) => !selectionSet.has(s))\n                );\n              } else {\n                setSelectedRows(selection);\n              }\n            } else {\n              setSelectedRows(selection);\n            }\n\n            onSelectionChange([selection[selection.length - 1]], rows, null);\n          }}\n          onCellKeyDown={(__: any, key: any) => {\n            const keyFinding = [\"NumpadEnter\", \"Enter\", \"Delete\", \"Backspace\"];\n            if (!keyFinding.includes(key.code)) {\n              return;\n            }\n            key.preventDefault();\n            if (key.code === \"Enter\" || key.code === \"NumpadEnter\") {\n              if (isSingleSelection && !isRowFreeze) {\n                return setSelectedRows((data: any) => {\n                  if (data && data.length > 0 && data[0] === __.rowNode.id) {\n                    onSelectionChange([], rows, key.code);\n                    return [];\n                  }\n                  onSelectionChange([__.rowNode.id], rows, key.code);\n                  return [__.rowNode.id];\n                });\n              } else {\n                setSelectedRows((data: any) => {\n                  if (\n                    data &&\n                    !isRowFreeze &&\n                    data.length > 0 &&\n                    data.includes(__.rowNode.id)\n                  ) {\n                    data = data.filter((item: any) => item !== __.rowNode.id);\n                    onSelectionChange([], rows, key.code);\n                    return data;\n                  }\n                  if (\n                    data &&\n                    isRowFreeze &&\n                    data.length > 0 &&\n                    data.includes(__.rowNode.id)\n                  ) {\n                    return data;\n                  }\n                  onSelectionChange([__.rowNode.id], rows, key.code);\n                  return [...data, __.rowNode.id];\n                });\n              }\n              return;\n            }\n            if (key.code === \"Delete\" || key.code === \"Backspace\") {\n              setSelectedRows([__.rowNode.id]);\n              return onSelectionChange([__.rowNode.id], rows, key.code);\n            }\n          }}\n          disableVirtualization\n          isRowSelectable={isRowSelectable}\n          getCellClassName={getCellClassName}\n        />\n      </TableContext.Provider>\n    );\n  }\n);\n\nexport default Table;\nfunction Pagination({\n  page,\n  onPageChange,\n  className,\n}: Pick<TablePaginationProps, \"page\" | \"onPageChange\" | \"className\">) {\n  const apiRef = useGridApiContext();\n  const pageCount = useGridSelector(apiRef, gridPageCountSelector);\n\n  return (\n    <MuiPagination\n      variant=\"outlined\"\n      color=\"primary\"\n      className={className}\n      count={pageCount}\n      page={page + 1}\n      onChange={(event, newPage) => {\n        onPageChange(event as any, newPage - 1);\n      }}\n    />\n  );\n}\n\nfunction CustomPagination(props: any) {\n  return <GridPagination ActionsComponent={Pagination} {...props} />;\n}\nfunction DefaultooterComponent(\n  props: NonNullable<GridSlotsComponentsProps[\"footer\"]>\n) {\n  const {\n    rowSelectionModel,\n    showFooterSelectedCount,\n    footerPaginationPosition,\n    footerChildren,\n    rows,\n  } = useContext(TableContext);\n  return (\n    <Box\n      sx={{\n        columnGap: \"50px\",\n        display: \"flex\",\n        width: \"100%\",\n        justifyContent: \"space-between\",\n        px: 3,\n        alignItems: \"center\",\n        flexDirection:\n          footerPaginationPosition === \"right-left\" ? \"row-reverse\" : \"row\",\n      }}\n    >\n      <CustomPagination {...props} />\n      <Box\n        sx={{\n          display: \"flex\",\n          justifyContent:\n            footerPaginationPosition === \"right-left\"\n              ? \"flex-start\"\n              : \"flex-end\",\n          flex: 1,\n          alignItems: \"center\",\n        }}\n      >\n        {showFooterSelectedCount && (\n          <div>Selected:{rowSelectionModel?.length}</div>\n        )}\n        <div>{footerChildren(rowSelectionModel, rows)}</div>\n      </Box>\n    </Box>\n  );\n}\n","import { useContext, useRef, CSSProperties } from \"react\";\nimport {\n  IconButton,\n  TextField,\n  FormControl,\n  InputLabel,\n  Select,\n  MenuItem,\n  Button,\n  Divider,\n  InputAdornment,\n  OutlinedInput,\n} from \"@mui/material\";\nimport PersonSearchIcon from \"@mui/icons-material/PersonSearch\";\nimport CustomDatePicker from \"../../../../../../../../components/DatePicker\";\nimport { CGLContext } from \"../CGLPolicy\";\nimport { NumericFormatCustom } from \"../../../../../../../../components/NumberFormat\";\nimport { LoadingButton } from \"@mui/lab\";\nimport { useQuery } from \"react-query\";\nimport useQueryModalTable from \"../../../../../../../../hooks/useQueryModalTable\";\nimport { addYears } from \"date-fns\";\n\nexport default function CGLPolicyInformation() {\n  const {\n    state,\n    handleInputChange,\n    customInputchange,\n    myAxios,\n    user,\n    isAddOrEditMode,\n    computation,\n    dispatch,\n  } = useContext(CGLContext);\n  const dateFrom = useRef<HTMLElement>(null);\n  const dateToDateRef = useRef<HTMLElement>(null);\n  const dateIssuedDateRef = useRef<HTMLElement>(null);\n  const searchClientInputRef = useRef<HTMLInputElement>(null);\n  const searchAgentInputRef = useRef<HTMLInputElement>(null);\n  const {\n    ModalComponent: ModalClientIDs,\n    openModal: openCliendIDsModal,\n    isLoading: isLoadingClientIdsModal,\n    closeModal: closeCliendIDsModal,\n  } = useQueryModalTable({\n    link: {\n      url: \"/task/production/get-clients\",\n      queryUrlName: \"clientSearch\",\n    },\n    columns: [\n      { field: \"entry_client_id\", headerName: \"ID\", width: 130 },\n      { field: \"fullname\", headerName: \"First Name\", flex: 1 },\n      {\n        field: \"entry_type\",\n        headerName: \"ID Type\",\n        width: 150,\n      },\n    ],\n    queryKey: \"get-clients\",\n    uniqueId: \"entry_client_id\",\n    responseDataKey: \"clients\",\n    onSelected: (selectedRowData) => {\n      customInputchange(selectedRowData[0].entry_client_id, \"client_id\");\n      customInputchange(selectedRowData[0].fullname, \"client_name\");\n      customInputchange(selectedRowData[0].address, \"client_address\");\n      customInputchange(selectedRowData[0].sale_officer, \"sale_officer\");\n      closeCliendIDsModal();\n    },\n    onCellKeyDown: (__: any, key: any) => {\n      if (key.code === \"Enter\" || key.code === \"NumpadEnter\") {\n        customInputchange(__.row.entry_client_id, \"client_id\");\n        customInputchange(__.row.fullname, \"client_name\");\n        customInputchange(__.row.address, \"client_address\");\n        customInputchange(__.row.sale_officer, \"sale_officer\");\n        closeCliendIDsModal();\n      }\n    },\n    searchRef: searchClientInputRef,\n  });\n  const {\n    ModalComponent: ModalAgentId,\n    openModal: openModalAgentId,\n    isLoading: isLoadingModalAgentId,\n    closeModal: closeModalAgentId,\n  } = useQueryModalTable({\n    link: {\n      url: \"/task/production/get-agents\",\n      queryUrlName: \"agentSearch\",\n    },\n    columns: [\n      { field: \"entry_agent_id\", headerName: \"ID\", width: 130 },\n      { field: \"fullname\", headerName: \"First Name\", flex: 1 },\n      {\n        field: \"entry_type\",\n        headerName: \"ID Type\",\n        width: 150,\n      },\n    ],\n    queryKey: \"get-agents\",\n    uniqueId: \"entry_agent_id\",\n    responseDataKey: \"agents\",\n    onSelected: (selectedRowData) => {\n      customInputchange(selectedRowData[0].entry_agent_id, \"agent_id\");\n      customInputchange(selectedRowData[0].fullname, \"agent_name\");\n      closeModalAgentId();\n    },\n    onCellKeyDown: (__: any, key: any) => {\n      if (key.code === \"Enter\" || key.code === \"NumpadEnter\") {\n        customInputchange(__.row.entry_agent_id, \"agent_id\");\n        customInputchange(__.row.fullname, \"agent_name\");\n        closeModalAgentId();\n      }\n    },\n    searchRef: searchAgentInputRef,\n  });\n  const { data: policyAccount, isLoading: isLoadingPolicyAccount } = useQuery({\n    queryKey: \"bond-policy-account-ss\",\n    queryFn: async () =>\n      await myAxios.get(`/task/production/policy-accounts-by-line?Line=CGL`, {\n        headers: {\n          Authorization: `Bearer ${user?.accessToken}`,\n        },\n      }),\n  });\n  function onKeyDownComputation(e: any) {\n    if (e.code === \"NumpadEnter\" || e.code === \"Enter\") {\n      computation();\n    }\n  }\n\n  return (\n    <div>\n      <div\n        style={{\n          display: \"flex\",\n          gap: \"20px\",\n          flexDirection: \"column\",\n        }}\n      >\n        <div\n          style={\n            {\n              display: \"flex\",\n              columnGap: \"10px\",\n              flex: 1,\n              boxSizing: \"border-box\",\n            } as any\n          }\n        >\n          <div\n            style={{\n              flexGrow: 0,\n              flexShrink: 0,\n              flexBasis: \"50%\",\n            }}\n          >\n            <fieldset\n              style={\n                {\n                  flex: 1,\n                  display: \"flex\",\n                  flexDirection: \"column\",\n                  gap: \"10px\",\n                  padding: \"15px\",\n                  border: \"1px solid #cbd5e1\",\n                  borderRadius: \"5px\",\n                  boxSizing: \"border-box\",\n                } as CSSProperties\n              }\n            >\n              <legend style={{ color: \"#065f46\" }}>Insurer Information</legend>\n              <div\n                style={{\n                  display: \"flex\",\n                  gap: \"10px\",\n                  flexGrow: 1,\n                  flexDirection: \"column\",\n                }}\n              >\n                {isLoadingClientIdsModal ? (\n                  <LoadingButton loading={isLoadingClientIdsModal} />\n                ) : (\n                  <FormControl\n                    variant=\"outlined\"\n                    size=\"small\"\n                    disabled={isAddOrEditMode}\n                    sx={{\n                      width: \"170px\",\n                      \".MuiFormLabel-root\": {\n                        fontSize: \"14px\",\n                        background: \"white\",\n                        zIndex: 99,\n                        padding: \"0 3px\",\n                      },\n                      \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n                    }}\n                  >\n                    <InputLabel htmlFor=\"client-id-field\">Client ID</InputLabel>\n                    <OutlinedInput\n                      sx={{\n                        height: \"27px\",\n                        fontSize: \"14px\",\n                      }}\n                      disabled={isAddOrEditMode}\n                      fullWidth\n                      label=\"Client ID\"\n                      name=\"client_id\"\n                      value={state.client_id}\n                      onChange={handleInputChange}\n                      onKeyDown={(e) => {\n                        if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n                          e.preventDefault();\n                          return openCliendIDsModal(state.client_id);\n                        }\n                      }}\n                      id=\"client-id-field\"\n                      endAdornment={\n                        <InputAdornment position=\"end\">\n                          <IconButton\n                            // ref={reloadIDButtonRef}\n                            disabled={isAddOrEditMode}\n                            aria-label=\"search-client\"\n                            color=\"secondary\"\n                            edge=\"end\"\n                            onClick={() => {\n                              openCliendIDsModal(state.client_id);\n                            }}\n                          >\n                            <PersonSearchIcon />\n                          </IconButton>\n                        </InputAdornment>\n                      }\n                    />\n                  </FormControl>\n                )}\n\n                <TextField\n                  fullWidth\n                  disabled={isAddOrEditMode}\n                  variant=\"outlined\"\n                  size=\"small\"\n                  label=\"Client Name\"\n                  name=\"client_name\"\n                  value={state.client_name}\n                  onChange={handleInputChange}\n                  InputProps={{\n                    style: { height: \"27px\", fontSize: \"14px\" },\n                    readOnly: true,\n                  }}\n                  sx={{\n                    flex: 1,\n                    height: \"27px\",\n                    \".MuiFormLabel-root\": { fontSize: \"14px\" },\n                    \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n                  }}\n                />\n              </div>\n              <TextField\n                rows={5}\n                disabled={isAddOrEditMode}\n                variant=\"outlined\"\n                size=\"small\"\n                label=\"Client Address\"\n                multiline\n                name=\"client_address\"\n                value={state.client_address}\n                onChange={handleInputChange}\n                InputProps={{\n                  style: { height: \"100px\", fontSize: \"14px\" },\n                  readOnly: true,\n                }}\n                sx={{\n                  flex: 1,\n                  height: \"100px\",\n                  \".MuiFormLabel-root\": { fontSize: \"14px\" },\n                  \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n                }}\n              />\n            </fieldset>\n          </div>\n          <div\n            style={{\n              flexGrow: 0,\n              flexShrink: 0,\n              flexBasis: \"50%\",\n            }}\n          >\n            <fieldset\n              style={\n                {\n                  flexDirection: \"row\",\n                  gap: \"10px\",\n                  padding: \"15px\",\n                  border: \"1px solid #cbd5e1\",\n                  borderRadius: \"5px\",\n                  height: \"100%\",\n                  flex: 1,\n                  flexWrap: \"wrap\",\n                } as CSSProperties\n              }\n            >\n              <legend style={{ color: \"#065f46\" }}>Agent Information</legend>\n              {isLoadingModalAgentId ? (\n                <LoadingButton loading={isLoadingModalAgentId} />\n              ) : (\n                <FormControl\n                  variant=\"outlined\"\n                  size=\"small\"\n                  disabled={isAddOrEditMode}\n                  sx={{\n                    width: \"170px\",\n                    \".MuiFormLabel-root\": {\n                      fontSize: \"14px\",\n                      background: \"white\",\n                      zIndex: 99,\n                      padding: \"0 3px\",\n                    },\n                    \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n                  }}\n                >\n                  <InputLabel htmlFor=\"AGENT-id-field\">Agent ID</InputLabel>\n                  <OutlinedInput\n                    sx={{\n                      height: \"27px\",\n                      fontSize: \"14px\",\n                    }}\n                    disabled={isAddOrEditMode}\n                    label=\"Agent ID\"\n                    name=\"agent_id\"\n                    value={state.agent_id}\n                    onChange={handleInputChange}\n                    onKeyDown={(e) => {\n                      if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n                        e.preventDefault();\n                        return openModalAgentId(state.agent_id);\n                      }\n                    }}\n                    id=\"AGENT-id-field\"\n                    endAdornment={\n                      <InputAdornment position=\"end\">\n                        <IconButton\n                          // ref={reloadIDButtonRef}\n                          disabled={isAddOrEditMode}\n                          aria-label=\"search-client\"\n                          color=\"secondary\"\n                          edge=\"end\"\n                          onClick={() => {\n                            openModalAgentId(state.agent_id);\n                          }}\n                        >\n                          <PersonSearchIcon />\n                        </IconButton>\n                      </InputAdornment>\n                    }\n                  />\n                </FormControl>\n              )}\n              <TextField\n                fullWidth\n                disabled={isAddOrEditMode}\n                variant=\"outlined\"\n                size=\"small\"\n                label=\"Agent Name\"\n                name=\"agent_name\"\n                value={state.agent_name}\n                onChange={handleInputChange}\n                InputProps={{\n                  style: { height: \"27px\", fontSize: \"14px\" },\n                  readOnly: true,\n                }}\n                sx={{\n                  flex: 1,\n                  height: \"27px\",\n                  \".MuiFormLabel-root\": { fontSize: \"14px\" },\n                  \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n                  marginTop: \"10px\",\n                }}\n              />\n              <TextField\n                disabled={isAddOrEditMode}\n                fullWidth\n                variant=\"outlined\"\n                size=\"small\"\n                label=\"Sale Officer\"\n                multiline\n                name=\"sale_officer\"\n                value={state.sale_officer}\n                onChange={handleInputChange}\n                InputProps={{\n                  style: { height: \"27px\", fontSize: \"14px\" },\n                  readOnly: true,\n                }}\n                sx={{\n                  width: \"100%\",\n                  height: \"27px\",\n                  \".MuiFormLabel-root\": { fontSize: \"14px\" },\n                  \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n                  marginTop: \"10px\",\n                }}\n              />\n            </fieldset>\n          </div>\n        </div>\n        <div\n          style={\n            {\n              display: \"flex\",\n              columnGap: \"10px\",\n              flex: 1,\n              boxSizing: \"border-box\",\n            } as any\n          }\n        >\n          <div\n            style={{\n              flexGrow: 0,\n              flexShrink: 0,\n              flexBasis: \"50%\",\n            }}\n          >\n            <fieldset\n              style={{\n                gap: \"10px\",\n                display: \"flex\",\n                flexDirection: \"row\",\n                padding: \"15px\",\n                border: \"1px solid #cbd5e1\",\n                borderRadius: \"5px\",\n                marginBottom: \"10px\",\n              }}\n            >\n              <legend style={{ color: \"#065f46\" }}>CGL Policy</legend>\n              {isLoadingPolicyAccount ? (\n                <LoadingButton loading={isLoadingPolicyAccount} />\n              ) : (\n                <FormControl\n                  size=\"small\"\n                  fullWidth\n                  disabled={isAddOrEditMode}\n                  sx={{\n                    \".MuiFormLabel-root\": {\n                      fontSize: \"14px\",\n                      background: \"white\",\n                      zIndex: 99,\n                      padding: \"0 3px\",\n                    },\n                    \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n                  }}\n                >\n                  <InputLabel id=\"PolicyAccount\">Account</InputLabel>\n                  <Select\n                    labelId=\"PolicyAccount\"\n                    value={state.PolicyAccount}\n                    label=\"Account\"\n                    name=\"PolicyAccount\"\n                    onChange={handleInputChange}\n                    sx={{\n                      height: \"27px\",\n                      fontSize: \"14px\",\n                    }}\n                  >\n                    {[\n                      { Account: \"\" },\n                      ...policyAccount?.data.policyAccounts,\n                    ].map((items: any, idx: number) => {\n                      return (\n                        <MenuItem key={idx} value={items.Account}>\n                          {items.Account}\n                        </MenuItem>\n                      );\n                    })}\n                  </Select>\n                </FormControl>\n              )}\n              <TextField\n                fullWidth\n                variant=\"outlined\"\n                size=\"small\"\n                label=\"Policy No\"\n                name=\"PolicyNo\"\n                value={state.PolicyNo}\n                onChange={handleInputChange}\n                InputProps={{\n                  style: { height: \"27px\", fontSize: \"14px\" },\n                }}\n                sx={{\n                  width: \"100%\",\n                  height: \"27px\",\n                  \".MuiFormLabel-root\": { fontSize: \"14px\" },\n                  \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n                }}\n              />\n            </fieldset>\n          </div>\n          <div\n            style={{\n              flexGrow: 0,\n              flexShrink: 0,\n              flexBasis: \"50%\",\n            }}\n          >\n            <fieldset\n              style={{\n                flexGrow: 1,\n                display: \"flex\",\n                flexDirection: \"row\",\n                gap: \"10px\",\n                gridArea: \"content4\",\n                padding: \"15px\",\n                border: \"1px solid #cbd5e1\",\n                borderRadius: \"5px\",\n              }}\n            >\n              <legend style={{ color: \"#065f46\" }}>Period of Insurance</legend>\n\n              <CustomDatePicker\n                disabled={isAddOrEditMode}\n                label=\"Date From\"\n                onChange={(e: any) => {\n                  customInputchange(e, \"DateFrom\");\n                  const newDate = new Date(e);\n                  const newDatePlusOneYear = addYears(newDate, 1);\n                  customInputchange(newDatePlusOneYear, \"DateTo\");\n                }}\n                value={new Date(state.DateFrom)}\n                textField={{\n                  InputLabelProps: {\n                    style: {\n                      fontSize: \"14px\",\n                    },\n                  },\n                  InputProps: {\n                    style: { height: \"27px\", fontSize: \"14px\" },\n                  },\n                }}\n                onKeyDown={(e: any) => {\n                  if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n                    const timeout = setTimeout(() => {\n                      dateFrom.current?.querySelector(\"button\")?.click();\n                      clearTimeout(timeout);\n                    }, 150);\n                  }\n                }}\n                datePickerRef={dateFrom}\n              />\n              <CustomDatePicker\n                disabled={isAddOrEditMode}\n                label=\"Date To\"\n                onChange={(e: any) => {\n                  customInputchange(e, \"DateTo\");\n                }}\n                value={new Date(state.DateTo)}\n                textField={{\n                  InputLabelProps: {\n                    style: {\n                      fontSize: \"14px\",\n                    },\n                  },\n                  InputProps: {\n                    style: { height: \"27px\", fontSize: \"14px\" },\n                  },\n                }}\n                onKeyDown={(e: any) => {\n                  if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n                    const timeout = setTimeout(() => {\n                      dateToDateRef.current?.querySelector(\"button\")?.click();\n                      clearTimeout(timeout);\n                    }, 150);\n                  }\n                }}\n                datePickerRef={dateToDateRef}\n              />\n              <CustomDatePicker\n                label=\"Date Issued\"\n                name=\"DateIssued\"\n                onChange={(e: any) => {\n                  customInputchange(e, \"DateIssued\");\n                }}\n                value={new Date(state.DateIssued)}\n                disabled={isAddOrEditMode}\n                textField={{\n                  InputLabelProps: {\n                    style: {\n                      fontSize: \"14px\",\n                    },\n                  },\n                  InputProps: {\n                    style: { height: \"27px\", fontSize: \"14px\" },\n                  },\n                }}\n                onKeyDown={(e: any) => {\n                  if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n                    const timeout = setTimeout(() => {\n                      dateIssuedDateRef.current\n                        ?.querySelector(\"button\")\n                        ?.click();\n                      clearTimeout(timeout);\n                    }, 150);\n                  }\n                }}\n                datePickerRef={dateIssuedDateRef}\n              />\n            </fieldset>\n          </div>\n        </div>\n        <div\n          style={\n            {\n              display: \"flex\",\n              columnGap: \"10px\",\n              flex: 1,\n              boxSizing: \"border-box\",\n            } as any\n          }\n        >\n          <div\n            style={{\n              flex: 1,\n              flexGrow: 1,\n              flexShrink: 1,\n              flexBasis: \"50%\",\n            }}\n          >\n            <fieldset\n              style={{\n                flex: 1,\n                display: \"flex\",\n                flexDirection: \"column\",\n                gap: \"10px\",\n                gridArea: \"content4\",\n                padding: \"15px\",\n                border: \"1px solid #cbd5e1\",\n                borderRadius: \"5px\",\n                height: \"100%\",\n              }}\n            >\n              <legend style={{ color: \"#065f46\", height: \"20px\" }}></legend>\n              <TextField\n                disabled={isAddOrEditMode}\n                required\n                variant=\"outlined\"\n                size=\"small\"\n                label=\"Sum Insured\"\n                name=\"sumInsured\"\n                value={state.sumInsured}\n                onChange={handleInputChange}\n                placeholder=\"0.00\"\n                onBlur={() => {\n                  dispatch({\n                    type: \"UPDATE_FIELD\",\n                    field: \"sumInsured\",\n                    value: parseFloat(state.sumInsured).toFixed(2),\n                  });\n                }}\n                InputProps={{\n                  style: { height: \"27px\", fontSize: \"14px\" },\n                  inputComponent: NumericFormatCustom as any,\n                }}\n                sx={{\n                  width: \"100%\",\n                  height: \"27px\",\n                  \".MuiFormLabel-root\": { fontSize: \"14px\" },\n                  \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n                }}\n              />\n              <TextField\n                disabled={isAddOrEditMode}\n                variant=\"outlined\"\n                size=\"small\"\n                label=\"Premises Operations\"\n                name=\"premisisOperation\"\n                value={state.premisisOperation}\n                onChange={handleInputChange}\n                InputProps={{\n                  style: { height: \"27px\", fontSize: \"14px\" },\n                }}\n                sx={{\n                  width: \"100%\",\n                  height: \"27px\",\n                  \".MuiFormLabel-root\": { fontSize: \"14px\" },\n                  \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n                }}\n              />\n              <TextField\n                disabled={isAddOrEditMode}\n                variant=\"outlined\"\n                size=\"small\"\n                label=\"Address\"\n                name=\"address\"\n                value={state.address}\n                onChange={handleInputChange}\n                InputProps={{\n                  style: { height: \"27px\", fontSize: \"14px\" },\n                }}\n                sx={{\n                  width: \"100%\",\n                  height: \"27px\",\n                  \".MuiFormLabel-root\": { fontSize: \"14px\" },\n                  \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n                }}\n              />\n              <TextField\n                disabled={isAddOrEditMode}\n                variant=\"outlined\"\n                size=\"small\"\n                label=\"BL Premium\"\n                name=\"blPremium\"\n                value={state.blPremium}\n                onChange={handleInputChange}\n                InputProps={{\n                  style: { height: \"27px\", fontSize: \"14px\" },\n                }}\n                sx={{\n                  width: \"100%\",\n                  height: \"27px\",\n                  \".MuiFormLabel-root\": { fontSize: \"14px\" },\n                  \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n                }}\n              />\n              <TextField\n                disabled={isAddOrEditMode}\n                variant=\"outlined\"\n                size=\"small\"\n                label=\"PD Premium\"\n                name=\"pdPremium\"\n                value={state.pdPremium}\n                onChange={handleInputChange}\n                InputProps={{\n                  style: { height: \"27px\", fontSize: \"14px\" },\n                }}\n                sx={{\n                  width: \"100%\",\n                  height: \"27px\",\n                  \".MuiFormLabel-root\": { fontSize: \"14px\" },\n                  \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n                }}\n              />\n            </fieldset>\n          </div>\n\n          <div\n            style={{\n              flexGrow: 0,\n              flexShrink: 0,\n              flexBasis: \"50%\",\n            }}\n          >\n            <fieldset\n              style={{\n                display: \"flex\",\n                flexDirection: \"column\",\n                rowGap: \"10px\",\n                padding: \"15px\",\n                border: \"1px solid #cbd5e1\",\n                borderRadius: \"5px\",\n              }}\n            >\n              <legend>Premiums</legend>\n              <div\n                style={{\n                  display: \"flex\",\n                  justifyContent: \"flex-end\",\n                  padding: \"5px\",\n                }}\n              >\n                <Button\n                  disabled={isAddOrEditMode}\n                  size=\"small\"\n                  variant=\"contained\"\n                  color=\"primary\"\n                  onClick={() => {\n                    computation();\n                  }}\n                >\n                  Compute\n                </Button>\n              </div>\n\n              <TextField\n                disabled={isAddOrEditMode}\n                required\n                variant=\"outlined\"\n                size=\"small\"\n                label=\"Net Premium\"\n                name=\"netPremium\"\n                value={state.netPremium}\n                onChange={handleInputChange}\n                onKeyDown={onKeyDownComputation}\n                placeholder=\"0.00\"\n                onBlur={() => {\n                  dispatch({\n                    type: \"UPDATE_FIELD\",\n                    field: \"netPremium\",\n                    value: parseFloat(state.netPremium).toFixed(2),\n                  });\n                }}\n                InputProps={{\n                  style: { height: \"27px\", fontSize: \"14px\" },\n                  inputComponent: NumericFormatCustom as any,\n                }}\n                sx={{\n                  width: \"100%\",\n                  height: \"27px\",\n                  \".MuiFormLabel-root\": { fontSize: \"14px\" },\n                  \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n                }}\n              />\n              <TextField\n                disabled={isAddOrEditMode}\n                required\n                variant=\"outlined\"\n                size=\"small\"\n                label=\"Vat\"\n                name=\"vat\"\n                value={state.vat}\n                onChange={handleInputChange}\n                onKeyDown={onKeyDownComputation}\n                placeholder=\"0.00\"\n                InputProps={{\n                  style: { height: \"27px\", fontSize: \"14px\" },\n                  inputComponent: NumericFormatCustom as any,\n                }}\n                sx={{\n                  width: \"100%\",\n                  height: \"27px\",\n                  \".MuiFormLabel-root\": { fontSize: \"14px\" },\n                  \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n                }}\n                onBlur={() => {\n                  dispatch({\n                    type: \"UPDATE_FIELD\",\n                    field: \"vat\",\n                    value: parseFloat(state.vat).toFixed(2),\n                  });\n                }}\n              />\n              <TextField\n                disabled={isAddOrEditMode}\n                required\n                variant=\"outlined\"\n                size=\"small\"\n                label=\"Doc Stamp\"\n                name=\"docStamp\"\n                value={state.docStamp}\n                onChange={handleInputChange}\n                onKeyDown={onKeyDownComputation}\n                placeholder=\"0.00\"\n                InputProps={{\n                  style: { height: \"27px\", fontSize: \"14px\" },\n                  inputComponent: NumericFormatCustom as any,\n                }}\n                sx={{\n                  width: \"100%\",\n                  height: \"27px\",\n                  \".MuiFormLabel-root\": { fontSize: \"14px\" },\n                  \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n                }}\n                onBlur={() => {\n                  dispatch({\n                    type: \"UPDATE_FIELD\",\n                    field: \"docStamp\",\n                    value: parseFloat(state.docStamp).toFixed(2),\n                  });\n                }}\n              />\n              <div\n                style={{ display: \"flex\", gap: \"5px\", position: \"relative\" }}\n              >\n                <TextField\n                  disabled={isAddOrEditMode}\n                  required\n                  variant=\"outlined\"\n                  size=\"small\"\n                  name=\"localGovTaxPercent\"\n                  value={state.localGovTaxPercent}\n                  onChange={handleInputChange}\n                  onKeyDown={onKeyDownComputation}\n                  placeholder=\"0.00\"\n                  InputProps={{\n                    style: { height: \"27px\", fontSize: \"14px\" },\n                    inputComponent: NumericFormatCustom as any,\n                  }}\n                  sx={{\n                    width: \"80px\",\n                    height: \"27px\",\n                    \".MuiFormLabel-root\": { fontSize: \"14px\" },\n                    \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n                  }}\n                  onBlur={() => {\n                    dispatch({\n                      type: \"UPDATE_FIELD\",\n                      field: \"localGovTaxPercent\",\n                      value: parseFloat(state.localGovTaxPercent).toFixed(2),\n                    });\n                  }}\n                />\n                <TextField\n                  disabled={isAddOrEditMode}\n                  required\n                  variant=\"outlined\"\n                  size=\"small\"\n                  label=\"Local Gov Tax\"\n                  name=\"localGovTax\"\n                  value={state.localGovTax}\n                  onChange={handleInputChange}\n                  onKeyDown={onKeyDownComputation}\n                  placeholder=\"0.00\"\n                  InputProps={{\n                    style: { height: \"27px\", fontSize: \"14px\" },\n                    inputComponent: NumericFormatCustom as any,\n                  }}\n                  sx={{\n                    width: \"100%\",\n                    height: \"27px\",\n                    \".MuiFormLabel-root\": { fontSize: \"14px\" },\n                    \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n                  }}\n                  onBlur={() => {\n                    dispatch({\n                      type: \"UPDATE_FIELD\",\n                      field: \"localGovTax\",\n                      value: parseFloat(state.localGovTax).toFixed(2),\n                    });\n                  }}\n                />\n              </div>\n              <Divider color=\"secondary\" />\n              <TextField\n                disabled={isAddOrEditMode}\n                required\n                variant=\"outlined\"\n                size=\"small\"\n                label=\"Total Due\"\n                name=\"totalDue\"\n                value={state.totalDue}\n                onChange={handleInputChange}\n                placeholder=\"0.00\"\n                InputProps={{\n                  style: { height: \"27px\", fontSize: \"14px\" },\n                  inputComponent: NumericFormatCustom as any,\n                }}\n                sx={{\n                  width: \"100%\",\n                  height: \"27px\",\n                  \".MuiFormLabel-root\": { fontSize: \"14px\" },\n                  \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n                }}\n                onBlur={() => {\n                  dispatch({\n                    type: \"UPDATE_FIELD\",\n                    field: \"totalDue\",\n                    value: parseFloat(state.totalDue).toFixed(2),\n                  });\n                }}\n              />\n            </fieldset>\n          </div>\n        </div>\n      </div>\n      {ModalClientIDs}\n      {ModalAgentId}\n    </div>\n  );\n}\n","import {\n  createContext,\n  useContext,\n  useReducer,\n  useEffect,\n  useState,\n  useRef,\n  useCallback,\n} from \"react\";\nimport { Box, Button, TextField } from \"@mui/material\";\nimport { pink } from \"@mui/material/colors\";\nimport AddIcon from \"@mui/icons-material/Add\";\nimport { AuthContext } from \"../../../../../../../components/AuthContext\";\nimport { useQuery, useMutation, useQueryClient } from \"react-query\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport SaveIcon from \"@mui/icons-material/Save\";\nimport Swal from \"sweetalert2\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\nimport { GridRowSelectionModel } from \"@mui/x-data-grid\";\nimport { FormControl, InputLabel, Select, MenuItem } from \"@mui/material\";\nimport CGLPolicyInformation from \"./CGLPolicyComponent/CGLPolicyInformation\";\nimport useQueryModalTable from \"../../../../../../../hooks/useQueryModalTable\";\nimport { LoadingButton } from \"@mui/lab\";\nimport {\n  codeCondfirmationAlert,\n  saveCondfirmationAlert,\n} from \"../../../../../../../lib/confirmationAlert\";\nimport { addYears } from \"date-fns\";\nimport PageHelmet from \"../../../../../../../components/Helmet\";\n\nconst initialState = {\n  sub_account: \"HO\",\n  //insurer info\n  client_id: \"\",\n  client_name: \"\",\n  client_address: \"\",\n  //agent info\n  agent_id: \"\",\n  agent_name: \"\",\n  agent_com: \"0.00\",\n  sale_officer: \"\",\n  //Vehicle policy\n  PolicyAccount: \"\",\n  PolicyNo: \"\",\n\n  //Period Insurance\n  DateFrom: new Date(),\n  DateTo: addYears(new Date(), 1),\n  DateIssued: new Date(),\n\n  //\n  sumInsured: \"\",\n  premisisOperation: \"\",\n  address: \"\",\n  blPremium: \"0.00\",\n  pdPremium: \"0.00\",\n\n  //calculation\n  netPremium: \"0.00\",\n  vat: \"0.00\",\n  docStamp: \"0.00\",\n  localGovTaxPercent: \"0.75\",\n  localGovTax: \"0.00\",\n  totalDue: \"0.00\",\n  // extra\n  cglActioMode: \"\",\n};\nconst reducer = (state: any, action: any) => {\n  switch (action.type) {\n    case \"UPDATE_FIELD\":\n      const newState = {\n        ...state,\n        [action.field]: action.value,\n      };\n      return newState;\n    default:\n      return state;\n  }\n};\nexport const CGLContext = createContext<any>({});\n\nconst queryKeySearchPolicy = \"cgl-search\";\nconst queryKeySearchClientEntry = \"clients\";\nconst queryKeySearchAgentEntry = \"agents\";\nconst queryKeyNeedData = \"cgl-policy\";\nconst queryKeyAddOrUpdatePolicy = \"cgl-policy\";\nconst queryKeyDeletePolicy = \"cgl-policy\";\n\nexport default function CGLPolicy() {\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const { myAxios, user } = useContext(AuthContext);\n  const [clientRows, setClientRows] = useState<GridRowSelectionModel>([]);\n  const [agentRows, setAgentRows] = useState<GridRowSelectionModel>([]);\n  const [search, setSearch] = useState(\"\");\n  const [Mortgagee, setMortgagee] = useState(false);\n  const searchCglPolicyInputRef = useRef<HTMLInputElement>(null);\n\n  const queryClient = useQueryClient();\n  const isAddOrEditMode = state.cglActioMode === \"\";\n\n  const newButtonRef = useRef<HTMLButtonElement>(null);\n  const cancelButtonRef = useRef<HTMLButtonElement>(null);\n  const deleteButtonRef = useRef<HTMLButtonElement>(null);\n\n  const { data: dataSubAccount, isLoading: isLoadingSubAccount } = useQuery({\n    queryKey: \"get-sub_account\",\n    queryFn: async () =>\n      await myAxios.get(`/task/production/get-sub_account`, {\n        headers: {\n          Authorization: `Bearer ${user?.accessToken}`,\n        },\n      }),\n  });\n\n  const {\n    ModalComponent: ModalSearchCGLPolicy,\n    openModal: openModalSearchCGLPolicy,\n    isLoading: isLoadingModalSearchCGLPolicy,\n    closeModal: closeModalSearchCGLPolicy,\n  } = useQueryModalTable({\n    link: {\n      url: \"/task/production/search-cgl-policy\",\n      queryUrlName: \"searchCglPolicy\",\n    },\n    columns: [\n      { field: \"DateIssued\", headerName: \"Date\", width: 200 },\n      { field: \"PolicyNo\", headerName: \"Policy No\", width: 250 },\n      {\n        field: \"Account\",\n        headerName: \"Account\",\n        width: 170,\n      },\n      {\n        field: \"client_fullname\",\n        headerName: \"Full Name\",\n        flex: 1,\n      },\n    ],\n    queryKey: \"search-cgl-policy\",\n    uniqueId: \"PolicyNo\",\n    responseDataKey: \"cglPolicy\",\n    onSelected: (selectedRowData) => {\n      onSearchSelected(selectedRowData);\n      closeModalSearchCGLPolicy();\n    },\n    onCellKeyDown: (__: any, key: any) => {\n      if (key.code === \"Enter\" || key.code === \"NumpadEnter\") {\n        onSearchSelected([__.row]);\n        closeModalSearchCGLPolicy();\n      }\n    },\n    onSuccess: console.log,\n    searchRef: searchCglPolicyInputRef,\n  });\n\n  const { mutate, isLoading: loadingAddNew } = useMutation({\n    mutationKey: queryKeyAddOrUpdatePolicy,\n    mutationFn: async (variables: any) => {\n      if (state.cglActioMode === \"delete\") {\n        return await myAxios.post(\n          \"/task/production/update-cgl-policy\",\n          variables,\n          {\n            headers: {\n              Authorization: `Bearer ${user?.accessToken}`,\n            },\n          }\n        );\n      }\n      return await myAxios.post(\"/task/production/add-cgl-policy\", variables, {\n        headers: {\n          Authorization: `Bearer ${user?.accessToken}`,\n        },\n      });\n    },\n    onSuccess: async (res) => {\n      if (res.data.success) {\n        await updateQueryByKey();\n        backToDefaultState(initialState, true);\n        return Swal.fire({\n          position: \"center\",\n          icon: \"success\",\n          title: res.data.message,\n          showConfirmButton: false,\n          timer: 1500,\n        });\n      }\n      Swal.fire({\n        position: \"center\",\n        icon: \"error\",\n        title: res.data.message,\n        showConfirmButton: false,\n        timer: 1500,\n      });\n    },\n  });\n\n  const { mutate: mutateDelete, isLoading: loadingDelete } = useMutation({\n    mutationKey: queryKeyDeletePolicy,\n    mutationFn: async (variables: any) => {\n      return await myAxios.post(\n        \"/task/production/delete-cgl-policy\",\n        variables,\n        {\n          headers: {\n            Authorization: `Bearer ${user?.accessToken}`,\n          },\n        }\n      );\n    },\n    onSuccess: async (res) => {\n      if (res.data.success) {\n        await updateQueryByKey();\n        backToDefaultState(initialState, true);\n        return Swal.fire({\n          position: \"center\",\n          icon: \"success\",\n          title: res.data.message,\n          showConfirmButton: false,\n          timer: 1500,\n        });\n      }\n\n      Swal.fire({\n        position: \"center\",\n        icon: \"error\",\n        title: res.data.message,\n        showConfirmButton: false,\n        timer: 1500,\n      });\n    },\n  });\n\n  const setDefaultValueForNumber = useCallback(() => {\n    state.blPremium = state.blPremium === \"\" ? \"0\" : state.blPremium;\n    state.pdPremium = state.pdPremium === \"\" ? \"0\" : state.pdPremium;\n    state.netPremium = state.netPremium === \"\" ? \"0\" : state.netPremium;\n    state.vat = state.vat === \"\" ? \"0\" : state.vat;\n    state.docStamp = state.docStamp === \"\" ? \"0\" : state.docStamp;\n    state.localGovTaxPercent =\n      state.localGovTaxPercent === \"\" ? \"0\" : state.localGovTaxPercent;\n    state.localGovTax = state.localGovTax === \"\" ? \"0\" : state.localGovTax;\n    state.totalDue = state.totalDue === \"\" ? \"0\" : state.totalDue;\n  }, [state]);\n\n  const handleOnSave = useCallback(() => {\n    if (\n      state.client_name === \"\" ||\n      state.client_name === null ||\n      state.client_name === undefined\n    ) {\n      return Swal.fire(\n        \"Unable to save! Invalid Client ID\",\n        \"you missed the Client Id Field?\",\n        \"error\"\n      );\n    }\n\n    if (state.client_id === \"\" || state.client_id === null) {\n      return Swal.fire(\n        \"Unable to save! Invalid IDNo.\",\n        \"you missed the Client Id Field?\",\n        \"error\"\n      );\n    }\n    if (state.PolicyAccount === \"\" || state.PolicyAccount === null) {\n      return Swal.fire(\n        \"Unable to save! Please select Account.\",\n        \"you missed the Account Field?\",\n        \"error\"\n      );\n    }\n    if (state.PolicyNo === \"\" || state.PolicyNo === null) {\n      return Swal.fire(\n        \"Unable to save! Invalid Policy No.\",\n        \"you missed the Policy No Field?\",\n        \"error\"\n      );\n    }\n\n    if (state.cglActioMode === \"delete\") {\n      codeCondfirmationAlert({\n        isUpdate: true,\n        cb: (userCodeConfirmation) => {\n          setDefaultValueForNumber();\n          mutate({ ...state, userCodeConfirmation });\n        },\n      });\n    } else {\n      saveCondfirmationAlert({\n        isConfirm: () => {\n          setDefaultValueForNumber();\n          mutate(state);\n        },\n      });\n    }\n  }, [setDefaultValueForNumber, state, mutate]);\n\n  useEffect(() => {\n    const handleKeyDown = (event: any) => {\n      if (\n        state.cglActioMode === \"\" &&\n        (event.code === \"KeyN\" ||\n          event.code === \"Enter\" ||\n          event.code === \"NumpadEnter\")\n      ) {\n        event.preventDefault();\n        newButtonRef.current?.click();\n      }\n      if (state.cglActioMode !== \"\" && event.code === \"Escape\") {\n        event.preventDefault();\n        cancelButtonRef.current?.click();\n      }\n      if (state.cglActioMode === \"delete\" && event.code === \"Delete\") {\n        event.preventDefault();\n        deleteButtonRef.current?.click();\n      }\n    };\n    document.addEventListener(\"keydown\", handleKeyDown);\n    return () => {\n      document.removeEventListener(\"keydown\", handleKeyDown);\n    };\n  }, [handleOnSave, state.cglActioMode]);\n\n  const handleInputChange = (e: any) => {\n    const { name, value } = e.target;\n    dispatch({ type: \"UPDATE_FIELD\", field: name, value });\n  };\n\n  // cglActioMode\n\n  const customInputchange = (value: any, name: string) => {\n    dispatch({ type: \"UPDATE_FIELD\", field: name, value });\n  };\n\n  function computation() {\n    setDefaultValueForNumber();\n    const inpLocalGovTaxPercent = parseFloat(state.localGovTaxPercent);\n    const VatPercentage = 12 / 100;\n    const DocPercentage = 12.5 / 100;\n    const LOGPercentage = inpLocalGovTaxPercent / 100;\n    const NewTotalPremium = parseFloat(state.netPremium);\n\n    customInputchange((VatPercentage * NewTotalPremium).toFixed(2), \"vat\");\n    customInputchange((DocPercentage * NewTotalPremium).toFixed(2), \"docStamp\");\n    customInputchange(\n      (LOGPercentage * NewTotalPremium).toFixed(2),\n      \"localGovTax\"\n    );\n    customInputchange(NewTotalPremium.toFixed(2), \"netPremium\");\n    customInputchange(\n      (\n        parseFloat(NewTotalPremium.toFixed(2)) +\n        parseFloat((VatPercentage * NewTotalPremium).toFixed(2)) +\n        parseFloat((DocPercentage * NewTotalPremium).toFixed(2)) +\n        parseFloat((LOGPercentage * NewTotalPremium).toFixed(2))\n      ).toFixed(2),\n      \"totalDue\"\n    );\n  }\n\n  function backToDefaultState(json: any, resetAll: boolean = false) {\n    json.form_type = state.form_type;\n    json.form_action = state.form_action;\n    json.prem_text_one = state.prem_text_one;\n    json.prem_text_two = state.prem_text_two;\n    if (!resetAll) {\n      json.cglActioMode = state.cglActioMode;\n    }\n    Object.entries(json).forEach(([key, value]) => {\n      customInputchange(value, key);\n    });\n  }\n\n  async function updateQueryByKey() {\n    return Promise.all([\n      queryClient.invalidateQueries(queryKeySearchPolicy),\n      queryClient.invalidateQueries(queryKeySearchClientEntry),\n      queryClient.invalidateQueries(queryKeySearchAgentEntry),\n      queryClient.invalidateQueries(queryKeyNeedData),\n      queryClient.invalidateQueries(queryKeyAddOrUpdatePolicy),\n      queryClient.invalidateQueries(queryKeyDeletePolicy),\n    ]);\n  }\n  function onSearchSelected(selectedRowData: any) {\n    const {\n      PolicyNo,\n      Account,\n      PeriodFrom,\n      PeriodTo,\n      Location,\n      IDNo,\n      SubAcct,\n      DateIssued,\n      TotalPremium,\n      AgentID,\n      AgentCom,\n      client_fullname,\n      agent_fullname,\n      address,\n      LimitA,\n      LimitB,\n      sumInsured,\n      cgl_address,\n      sale_officer,\n      Vat,\n      DocStamp,\n      LGovTax,\n      TotalDue\n    } = selectedRowData[0];\n    customInputchange(SubAcct, \"sub_account\");\n    customInputchange(IDNo, \"client_id\");\n    customInputchange(client_fullname, \"client_name\");\n    customInputchange(address, \"client_address\");\n\n    customInputchange(AgentID, \"agent_id\");\n    customInputchange(agent_fullname, \"agent_name\");\n    customInputchange(AgentCom, \"agent_com\");\n    customInputchange(sale_officer, \"sale_officer\");\n\n    customInputchange(Account, \"PolicyAccount\");\n    customInputchange(PolicyNo, \"PolicyNo\");\n\n    customInputchange(PeriodFrom, \"DateFrom\");\n    customInputchange(PeriodTo, \"DateTo\");\n    customInputchange(DateIssued, \"DateIssued\");\n\n    customInputchange(Location, \"premisisOperation\");\n\n    customInputchange(Location, \"premisisOperation\");\n    customInputchange(sumInsured, \"sumInsured\");\n    customInputchange(cgl_address, \"address\");\n\n    customInputchange(LimitA, \"blPremium\");\n    customInputchange(LimitB, \"pdPremium\");\n    console.log(selectedRowData)\n\n    customInputchange(formatNumber(parseFloat(TotalPremium)), \"netPremium\");\n    customInputchange(formatNumber(parseFloat(Vat)), \"vat\");\n    customInputchange(formatNumber(parseFloat(DocStamp)), \"docStamp\");\n    customInputchange(formatNumber(parseFloat(LGovTax)), \"localGovTax\");\n    customInputchange(formatNumber(parseFloat(TotalDue)), \"totalDue\");\n\n    customInputchange(\"delete\", \"cglActioMode\");\n  }\n\n\n  function formatNumber(num: number) {\n    return (num || 0).toLocaleString(\"en-US\", {\n      minimumFractionDigits: 2,\n      maximumFractionDigits: 2,\n    })\n  }\n\n  function keySave(event: any) {\n    if (\n      state.mode !== \"\" &&\n      (event.code === \"Enter\" || event.code === \"NumpadEnter\")\n    ) {\n      event.preventDefault();\n      handleOnSave();\n    }\n  }\n\n\n  useEffect(() => {\n    const handleKeyDown = (event: any) => {\n      if ((event.ctrlKey || event.metaKey) && event.key === 's') {\n        event.preventDefault();\n        handleOnSave();\n      }\n    };\n\n    window.addEventListener('keydown', handleKeyDown);\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [handleOnSave]);\n\n  return (\n    <>\n      <PageHelmet title=\"CGL Policy\" />\n\n      <CGLContext.Provider\n        value={{\n          state,\n          handleInputChange,\n          customInputchange,\n          Mortgagee,\n          setMortgagee,\n          clientRows,\n          setClientRows,\n          myAxios,\n          user,\n          agentRows,\n          setAgentRows,\n          computation,\n          isAddOrEditMode,\n          dispatch,\n          keySave,\n        }}\n      >\n        <Box\n          sx={(theme) => ({\n            display: \"flex\",\n            alignItems: \"center\",\n            columnGap: \"20px\",\n            marginBottom: \"10px\",\n            [theme.breakpoints.down(\"sm\")]: {\n              flexDirection: \"column\",\n              alignItems: \"flex-start\",\n              flex: 1,\n            },\n          })}\n        >\n\n          <div\n            style={{\n              display: \"flex\",\n              alignItems: \"center\",\n              columnGap: \"20px\",\n            }}\n          >\n            <div\n              style={{\n                display: \"flex\",\n                alignItems: \"center\",\n                columnGap: \"5px\",\n              }}\n            >\n              {state.cglActioMode === \"\" && (\n                <Button\n                  sx={{\n                    height: \"30px\",\n                    fontSize: \"11px\",\n                  }}\n                  ref={newButtonRef}\n                  variant=\"contained\"\n                  startIcon={<AddIcon />}\n                  onClick={() => {\n                    customInputchange(\"add\", \"cglActioMode\");\n                  }}\n                >\n                  New\n                </Button>\n              )}\n              <LoadingButton\n                loading={loadingAddNew}\n                sx={{\n                  height: \"30px\",\n                  fontSize: \"11px\",\n                }}\n                color=\"primary\"\n                variant=\"contained\"\n                type=\"submit\"\n                onClick={handleOnSave}\n                disabled={state.cglActioMode === \"\"}\n                startIcon={<SaveIcon />}\n              >\n                Save\n              </LoadingButton>\n\n              {state.cglActioMode !== \"\" && (\n                <Button\n                  sx={{\n                    height: \"30px\",\n                    fontSize: \"11px\",\n                  }}\n                  ref={cancelButtonRef}\n                  variant=\"contained\"\n                  startIcon={<CloseIcon />}\n                  color=\"error\"\n                  onClick={() => {\n                    Swal.fire({\n                      title: \"Are you sure?\",\n                      text: \"You won't be able to revert this!\",\n                      icon: \"warning\",\n                      showCancelButton: true,\n                      confirmButtonColor: \"#3085d6\",\n                      cancelButtonColor: \"#d33\",\n                      confirmButtonText: \"Yes, cancel it!\",\n                    }).then((result) => {\n                      if (result.isConfirmed) {\n                        customInputchange(\"\", \"cglActioMode\");\n                        backToDefaultState(initialState, true);\n                      }\n                    });\n                  }}\n                >\n                  Cancel\n                </Button>\n              )}\n              <LoadingButton\n                loading={loadingDelete}\n                ref={deleteButtonRef}\n                id=\"save-entry-header\"\n                variant=\"contained\"\n                sx={{\n                  height: \"30px\",\n                  fontSize: \"11px\",\n                  backgroundColor: pink[500],\n                  \"&:hover\": {\n                    backgroundColor: pink[600],\n                  },\n                }}\n                disabled={state.cglActioMode !== \"delete\"}\n                startIcon={<DeleteIcon />}\n                onClick={() => {\n                  codeCondfirmationAlert({\n                    isUpdate: false,\n                    cb: (userCodeConfirmation) => {\n                      mutateDelete({\n                        PolicyAccount: state.PolicyAccount,\n                        PolicyNo: state.PolicyNo,\n                        policyType: state.policyType,\n                        userCodeConfirmation,\n                      });\n                    },\n                  });\n                }}\n              >\n                Delete\n              </LoadingButton>\n            </div>\n          </div>\n        </Box>\n        <div style={{ marginBottom: \"5px\", display: \"flex\", gap: \"10px\" }}>\n          {isLoadingModalSearchCGLPolicy ? (\n            <LoadingButton loading={isLoadingModalSearchCGLPolicy} />\n          ) : (\n            <TextField\n              label=\"Search\"\n              size=\"small\"\n              name=\"search\"\n              value={search}\n              onChange={(e: any) => {\n                setSearch(e.target.value);\n              }}\n              onKeyDown={(e) => {\n                if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n                  e.preventDefault();\n                  openModalSearchCGLPolicy(search);\n                }\n              }}\n              InputProps={{\n                style: { height: \"27px\", fontSize: \"14px\" },\n              }}\n              sx={{\n                width: \"300px\",\n                height: \"27px\",\n                \".MuiFormLabel-root\": { fontSize: \"14px\" },\n                \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n              }}\n            />\n          )}\n          {isLoadingSubAccount ? (\n            <LoadingButton loading={isLoadingSubAccount} />\n          ) : (\n            <FormControl\n              size=\"small\"\n              sx={(theme) => ({\n                width: \"150px\",\n                \".MuiFormLabel-root\": {\n                  fontSize: \"14px\",\n                  background: \"white\",\n                  zIndex: 99,\n                  padding: \"0 3px\",\n                },\n                \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n              })}\n            >\n              <InputLabel id=\"subAccount\">Sub Account</InputLabel>\n              <Select\n                sx={{\n                  height: \"27px\",\n                  fontSize: \"14px\",\n                }}\n                size=\"small\"\n                labelId=\"subAccount\"\n                label=\"subAccount\"\n                name=\"sub_account\"\n                value={state.sub_account}\n                onChange={(e) => {\n                  handleInputChange(e);\n                }}\n              >\n                {(dataSubAccount?.data.sub_account).map(\n                  (items: any, idx: number) => {\n                    return (\n                      <MenuItem key={idx} value={items.Acronym.trim()}>\n                        {items.Acronym}\n                      </MenuItem>\n                    );\n                  }\n                )}\n              </Select>\n            </FormControl>\n          )}\n        </div>\n        <CGLPolicyInformation />\n        {ModalSearchCGLPolicy}\n      </CGLContext.Provider>\n    </>\n  );\n}\n","import { useContext, useState } from \"react\";\nimport { useQuery } from \"react-query\";\nimport { AuthContext, User } from \"../components/AuthContext\";\nimport {\n  GridRowSelectionModel,\n  GridCellParams,\n  GridTreeNode,\n} from \"@mui/x-data-grid\";\nimport ModalWithTable from \"../components/ModalWithTable\";\nimport { flushSync } from \"react-dom\";\nimport { AxiosResponse, AxiosInstance } from \"axios\";\nimport { GridRowParams } from \"@mui/x-data-grid\";\ninterface QueryModalTableParamsType {\n  link?: {\n    url: string;\n    queryUrlName: string;\n  };\n  uniqueId: string;\n  queryKey: string;\n  responseDataKey: string;\n  columns: Array<any>;\n  onSelected?: (selectedRowData: Array<any>, data: Array<any>) => void;\n  onRemoveSelected?: (data: Array<any>) => void;\n  onSuccess?: (data: any) => void;\n  searchRef?: React.RefObject<HTMLInputElement>;\n  onCellKeyDown?: any;\n  onCloseFunction?: (search: any) => void;\n  CustomizeAxios?: (\n    myAxios: AxiosInstance,\n    user: User | null,\n    link: QueryModalTableParamsType[\"link\"],\n    search?: string\n  ) => Promise<AxiosResponse<any, any>>;\n  isRowSelectable?: ((params: GridRowParams<any>) => boolean) | undefined;\n  getCellClassName?:\n    | ((params: GridCellParams<any, any, any, GridTreeNode>) => string)\n    | undefined;\n}\n\nasync function CustomizeAxiosFunc(\n  myAxios: AxiosInstance,\n  user: User | null,\n  link: QueryModalTableParamsType[\"link\"],\n  search: string = \"\"\n) {\n  return myAxios.get(`${link?.url}?${link?.queryUrlName}=${search}`, {\n    headers: {\n      Authorization: `Bearer ${user?.accessToken}`,\n    },\n  });\n}\n\nconst useQueryModalTable = ({\n  link,\n  uniqueId,\n  queryKey,\n  responseDataKey,\n  columns,\n  onSelected = () => {},\n  onRemoveSelected = () => {},\n  onSuccess = () => {},\n  searchRef,\n  onCellKeyDown,\n  onCloseFunction = () => {},\n  CustomizeAxios = CustomizeAxiosFunc,\n  isRowSelectable,\n  getCellClassName,\n}: QueryModalTableParamsType) => {\n  const { myAxios, user } = useContext(AuthContext);\n  const [show, setShowModal] = useState(false);\n  const [rows, setRows] = useState<GridRowSelectionModel>([]);\n  async function customizeAxiostool(search: string = \"\") {\n    return await CustomizeAxios(myAxios, user, link, search);\n  }\n  const { isLoading, refetch } = useQuery({\n    queryKey: queryKey,\n    queryFn: async () => await customizeAxiostool(),\n    onSuccess: (res) => {\n      const response = res as any;\n      setRows(response.data[responseDataKey]);\n      onSuccess(response);\n    },\n    refetchOnWindowFocus: false,\n  });\n\n  const openModal = (search: string = \"\") => {\n    flushSync(() => {\n      setShowModal(true);\n    });\n    if (searchRef?.current) {\n      searchRef.current.value = search;\n      customizeAxiostool(search).then((res: any) => {\n        if (!res?.data.success) {\n          return alert(`Error : ${res?.data.message}`);\n        }\n        const response = res as any;\n        setRows(response.data[responseDataKey]);\n        if (searchRef?.current) searchRef.current.focus();\n      });\n    }\n  };\n\n  const closeModal = () => {\n    setShowModal(false);\n    if (onCloseFunction) {\n      onCloseFunction(searchRef?.current?.value);\n    }\n  };\n\n  const ModalComponent = (\n    <ModalWithTable\n      getCellClassName={getCellClassName}\n      searchRef={searchRef}\n      showModal={show}\n      onCloseModal={() => {\n        setShowModal(false);\n        if (onCloseFunction) {\n          onCloseFunction(searchRef?.current?.value);\n        }\n      }}\n      onClickCloseIcon={() => {\n        setShowModal(false);\n        if (onCloseFunction) {\n          onCloseFunction(searchRef?.current?.value);\n        }\n      }}\n      searchOnChange={(e) => {\n        // myAxios\n        //   .get(`${link.url}?${link.queryUrlName}=${e.target.value}`, {\n        //     headers: {\n        //       Authorization: `Bearer ${user?.accessToken}`,\n        //     },\n        //   })\n        //   .then((res: any) => {\n        //     if (!res?.data.success) {\n        //       return alert(`Error : ${res?.data.message}`);\n        //     }\n        //     const response = res as any;\n        //     setRows(response.data[responseDataKey]);\n        //   });\n      }}\n      onSearchKeyEnter={(value) => {\n        customizeAxiostool(value).then((res: any) => {\n          if (!res?.data.success) {\n            return alert(`Error : ${res?.data.message}`);\n          }\n          const response = res as any;\n          setRows(response.data[responseDataKey]);\n        });\n      }}\n      onCellKeyDown={onCellKeyDown}\n      height={300}\n      isLoading={isLoading}\n      queryKey={queryKey}\n      columns={columns}\n      onSelectionChange={(rowSelectionModel, data) => {\n        if (rowSelectionModel.length <= 0) {\n          return onRemoveSelected(data);\n        }\n        const selectedIDs = new Set(rowSelectionModel);\n        const selectedRowData = data.filter((row: any) => {\n          return selectedIDs.has(row[uniqueId].toString());\n        });\n        if (selectedRowData.length <= 0) return;\n        onSelected(selectedRowData, data);\n      }}\n      id={uniqueId}\n      rows={rows}\n      setRows={setRows}\n      isRowSelectable={isRowSelectable}\n    />\n  );\n\n  return {\n    show,\n    rows,\n    isLoading,\n    openModal,\n    closeModal,\n    ModalComponent,\n    refetch,\n  };\n};\n\nexport default useQueryModalTable;\n","import Swal from \"sweetalert2\";\n\nexport function codeCondfirmationAlert(props: {\n  cb: (userCodeConfirmation: string) => void;\n  isUpdate: boolean;\n  isConfirm?: () => void;\n  isDeclined?: () => void;\n  text?: string;\n}) {\n  Swal.fire({\n    title: `Are you sure!`,\n    html: props?.text\n      ? props?.text\n      : props.isUpdate\n      ? `Are you sure you want to make this change?`\n      : \"Are you sure you want to delete this?\",\n    icon: \"warning\",\n    input: \"text\",\n    inputAttributes: {\n      autocapitalize: \"off\",\n    },\n    showCancelButton: true,\n    confirmButtonText: \"Save\",\n    confirmButtonColor: \"green\",\n    showLoaderOnConfirm: true,\n    preConfirm: async (userCodeConfirmation) => {\n      try {\n        props.cb(userCodeConfirmation);\n      } catch (error) {\n        Swal.showValidationMessage(`\n            Request failed: ${error}\n          `);\n      }\n    },\n    allowOutsideClick: () => !Swal.isLoading(),\n  }).then((result) => {\n    if (result.isConfirmed) {\n      if (props.isConfirm) {\n        return props.isConfirm();\n      }\n    }\n    if (props.isDeclined) {\n      props.isDeclined();\n    }\n  });\n}\n\nexport function saveCondfirmationAlert(props: {\n  isConfirm?: () => void;\n  isDeclined?: () => void;\n  text?: string;\n}) {\n  Swal.fire({\n    title: \"Are you sure?\",\n    text: props?.text ? props?.text : \"Do you want to proceed with saving?\",\n    icon: \"warning\",\n    showCancelButton: true,\n    confirmButtonColor: \"#3085d6\",\n    cancelButtonColor: \"#d33\",\n    confirmButtonText: \"Yes, save it!\",\n  }).then((result) => {\n    if (result.isConfirmed) {\n      if (props.isConfirm) {\n        return props.isConfirm();\n      }\n    }\n    if (props.isDeclined) {\n      props.isDeclined();\n    }\n  });\n}\n","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\"\n}), 'Add');\nexports.default = _default;","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\"\n}), 'Delete');\nexports.default = _default;","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)([/*#__PURE__*/(0, _jsxRuntime.jsx)(\"circle\", {\n  cx: \"10\",\n  cy: \"8\",\n  r: \"4\"\n}, \"0\"), /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M10.35 14.01C7.62 13.91 2 15.27 2 18v2h9.54c-2.47-2.76-1.23-5.89-1.19-5.99zm9.08 4.01c.36-.59.57-1.28.57-2.02 0-2.21-1.79-4-4-4s-4 1.79-4 4 1.79 4 4 4c.74 0 1.43-.22 2.02-.57L20.59 22 22 20.59l-2.57-2.57zM16 18c-1.1 0-2-.9-2-2s.9-2 2-2 2 .9 2 2-.9 2-2 2z\"\n}, \"1\")], 'PersonSearch');\nexports.default = _default;","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M17 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V7l-4-4zm-5 16c-1.66 0-3-1.34-3-3s1.34-3 3-3 3 1.34 3 3-1.34 3-3 3zm3-10H5V5h10v4z\"\n}), 'Save');\nexports.default = _default;","const pink = {\n  50: '#fce4ec',\n  100: '#f8bbd0',\n  200: '#f48fb1',\n  300: '#f06292',\n  400: '#ec407a',\n  500: '#e91e63',\n  600: '#d81b60',\n  700: '#c2185b',\n  800: '#ad1457',\n  900: '#880e4f',\n  A100: '#ff80ab',\n  A200: '#ff4081',\n  A400: '#f50057',\n  A700: '#c51162'\n};\nexport default pink;"],"names":["CustomDatePicker","_ref","label","name","onChange","value","onKeyDown","inputRef","datePickerRef","fullWidth","textField","_ref$minWidth","minWidth","rest","_objectWithoutProperties","_excluded","_jsx","LocalizationProvider","dateAdapter","AdapterDateFns","children","DatePicker","_objectSpread","floatingLabelStyle","color","ref","slotProps","size","InputLabelProps","sx","fieldset","borderColor","fontSize","top","_ref$title","title","_jsxs","Helmet","rel","type","href","concat","process","style","position","left","transform","width","bgcolor","boxShadow","p","heigth","ModalWithTable","height","isLoading","columns","queryKey","onSelectionChange","rows","setRows","id","onCloseModal","showModal","onClickCloseIcon","searchOnChange","searchRef","_ref$onSearchKeyEnter","onCellKeyDown","onSearchKeyEnter","isRowSelectable","getCellClassName","mainId","generateRandomClass","Modal","open","onClose","Box","Typography","variant","component","mb","TextField","marginBottom","InputProps","e","_searchRef$current","code","preventDefault","current","keyBoardSelectionTable","className","Table","isSingleSelection","isRowFreeze","dataSelection","selection","data","table_id","right","IconButton","onClick","CloseIcon","Math","floor","random","el","_rows$","document","querySelectorAll","classList","add","firstRowParent","querySelector","firstInput","focus","event","MouseEvent","bubbles","cancelable","view","window","dispatchEvent","addEventListener","es","key","remove","keyBoardUpDown","forEach","idx","_rows$idx","_rows","_rows$idx2","_rows2","length","NumericFormatCustom","React","props","other","NumericFormat","getInputRef","onValueChange","values","target","allowNegative","thousandSeparator","valueIsNumericString","TableContext","createContext","rowSelectionModel","footerChildren","footerPaginationPosition","showFooterSelectedCount","forwardRef","_ref$CustomFooterComp","CustomFooterComponent","DefaultooterComponent","_ref$checkboxSelectio","checkboxSelection","_ref$footerChildren","_ref$footerPagination","_ref$showFooterSelect","_useState","useState","_useState2","_slicedToArray","selectedRows","setSelectedRows","useImperativeHandle","removeSelection","getSelectedRows","filter","item","includes","freezeArray","Provider","DataGrid","slots","loadingOverlay","LinearProgress","footer","initialState","pagination","paginationModel","pageSize","loading","getRowId","row","col","hide","showCellVerticalBorder","showColumnVerticalBorder","rowHeight","columnHeaderHeight","pageSizeOptions","fill","background","padding","display","fontWeight","onRowSelectionModelChange","selectionSet","Set","s","has","__","rowNode","_toConsumableArray","disableVirtualization","Pagination","_ref2","page","onPageChange","apiRef","useGridApiContext","pageCount","useGridSelector","gridPageCountSelector","MuiPagination","count","newPage","CustomPagination","GridPagination","ActionsComponent","_useContext","useContext","columnGap","justifyContent","px","alignItems","flexDirection","flex","CGLPolicyInformation","_queryFn","CGLContext","state","handleInputChange","customInputchange","myAxios","user","isAddOrEditMode","computation","dispatch","dateFrom","useRef","dateToDateRef","dateIssuedDateRef","searchClientInputRef","searchAgentInputRef","_useQueryModalTable","useQueryModalTable","link","url","queryUrlName","field","headerName","uniqueId","responseDataKey","onSelected","selectedRowData","entry_client_id","fullname","address","sale_officer","closeCliendIDsModal","ModalClientIDs","ModalComponent","openCliendIDsModal","openModal","isLoadingClientIdsModal","closeModal","_useQueryModalTable2","entry_agent_id","closeModalAgentId","ModalAgentId","openModalAgentId","isLoadingModalAgentId","_useQuery","useQuery","queryFn","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","get","headers","Authorization","accessToken","abrupt","sent","stop","apply","arguments","policyAccount","isLoadingPolicyAccount","onKeyDownComputation","gap","boxSizing","flexGrow","flexShrink","flexBasis","border","borderRadius","LoadingButton","FormControl","disabled","zIndex","InputLabel","htmlFor","OutlinedInput","client_id","endAdornment","InputAdornment","edge","PersonSearchIcon","client_name","readOnly","multiline","client_address","flexWrap","agent_id","agent_name","marginTop","Select","labelId","PolicyAccount","Account","policyAccounts","map","items","MenuItem","PolicyNo","gridArea","newDate","Date","newDatePlusOneYear","addYears","DateFrom","timeout","setTimeout","_dateFrom$current","_dateFrom$current$que","click","clearTimeout","DateTo","_dateToDateRef$curren","_dateToDateRef$curren2","DateIssued","_dateIssuedDateRef$cu","_dateIssuedDateRef$cu2","required","sumInsured","placeholder","onBlur","parseFloat","toFixed","inputComponent","premisisOperation","blPremium","pdPremium","rowGap","Button","netPremium","vat","docStamp","localGovTaxPercent","localGovTax","Divider","totalDue","sub_account","agent_com","cglActioMode","reducer","action","_defineProperty","queryKeySearchPolicy","queryKeySearchClientEntry","queryKeySearchAgentEntry","queryKeyNeedData","queryKeyAddOrUpdatePolicy","queryKeyDeletePolicy","CGLPolicy","_mutationFn","_onSuccess","_mutationFn2","_onSuccess2","_updateQueryByKey","_useReducer","useReducer","_useReducer2","AuthContext","clientRows","setClientRows","_useState3","_useState4","agentRows","setAgentRows","_useState5","_useState6","search","setSearch","_useState7","_useState8","Mortgagee","setMortgagee","searchCglPolicyInputRef","queryClient","useQueryClient","newButtonRef","cancelButtonRef","deleteButtonRef","dataSubAccount","isLoadingSubAccount","onSearchSelected","closeModalSearchCGLPolicy","onSuccess","console","log","ModalSearchCGLPolicy","openModalSearchCGLPolicy","isLoadingModalSearchCGLPolicy","_useMutation","useMutation","mutationKey","mutationFn","_x","_callee2","variables","_context2","post","_x2","_callee3","res","_context3","success","updateQueryByKey","backToDefaultState","Swal","icon","message","showConfirmButton","timer","mutate","loadingAddNew","_useMutation2","_x3","_callee4","_context4","_x4","_callee5","_context5","mutateDelete","loadingDelete","setDefaultValueForNumber","useCallback","handleOnSave","undefined","codeCondfirmationAlert","isUpdate","cb","userCodeConfirmation","saveCondfirmationAlert","isConfirm","useEffect","handleKeyDown","_newButtonRef$current","_cancelButtonRef$curr","_deleteButtonRef$curr","removeEventListener","_e$target","json","resetAll","form_type","form_action","prem_text_one","prem_text_two","Object","entries","_callee6","_context6","Promise","all","invalidateQueries","_selectedRowData$","PeriodFrom","PeriodTo","Location","IDNo","SubAcct","TotalPremium","AgentID","AgentCom","client_fullname","agent_fullname","LimitA","LimitB","cgl_address","Vat","DocStamp","LGovTax","TotalDue","formatNumber","num","toLocaleString","minimumFractionDigits","maximumFractionDigits","ctrlKey","metaKey","_Fragment","PageHelmet","LOGPercentage","NewTotalPremium","keySave","mode","theme","breakpoints","down","startIcon","AddIcon","SaveIcon","text","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","then","result","isConfirmed","backgroundColor","pink","DeleteIcon","policyType","Acronym","trim","CustomizeAxiosFunc","_CustomizeAxiosFunc","_args","_customizeAxiostool","_ref$onSelected","_ref$onRemoveSelected","onRemoveSelected","_ref$onSuccess","_ref$onCloseFunction","onCloseFunction","_ref$CustomizeAxios","CustomizeAxios","show","setShowModal","customizeAxiostool","_args2","response","refetchOnWindowFocus","refetch","flushSync","alert","_searchRef$current2","_searchRef$current3","selectedIDs","toString","_preConfirm","html","input","inputAttributes","autocapitalize","showLoaderOnConfirm","preConfirm","error","allowOutsideClick","isDeclined","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d","cx","cy","r","A100","A200","A400","A700"],"sourceRoot":""}