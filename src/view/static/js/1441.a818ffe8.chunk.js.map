{"version":3,"file":"static/js/1441.a818ffe8.chunk.js","mappings":"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","sources":["components/DatePicker.tsx","components/NumberFormat.tsx","feautures/Admin/Task/Accounting/PettyCash.tsx","../node_modules/@mui/icons-material/PersonSearch.js","../node_modules/@mui/icons-material/RestartAlt.js"],"sourcesContent":["import { LocalizationProvider } from \"@mui/x-date-pickers/LocalizationProvider\";\nimport { AdapterDateFns } from \"@mui/x-date-pickers/AdapterDateFns\";\nimport { DatePicker } from \"@mui/x-date-pickers\";\nexport default function CustomDatePicker({\n  label,\n  name,\n  onChange,\n  value,\n  onKeyDown,\n  inputRef,\n  datePickerRef,\n  fullWidth,\n  textField,\n  minWidth = \"200px\",\n  ...rest\n}: any) {\n  return (\n    <LocalizationProvider dateAdapter={AdapterDateFns}>\n      <DatePicker\n      floatingLabelStyle={{color: \"black\" }}\n        value={value}\n        onChange={onChange}\n        ref={datePickerRef}\n        slotProps={{\n          textField: {\n            size: \"small\",\n            label,\n            name,\n            onKeyDown,\n            inputRef: inputRef,\n            fullWidth,\n\n            ...textField,\n          },\n        }}\n        InputLabelProps={{\n          sx: {\n            color: \"black\",\n          },\n        }}\n        sx={{\n          minWidth,\n          fieldset: { borderColor: \"black\" },\n          \".MuiFormLabel-root\": { fontSize: \"14px\" },\n          \".MuiFormLabel-root[data-shrink=false]\": {\n            top: \"-5px\",\n          },\n        }}\n        {...rest}\n      />\n    </LocalizationProvider>\n  );\n}\n","import React from \"react\";\nimport { NumericFormat, NumericFormatProps } from \"react-number-format\";\n\ninterface CustomProps {\n  onChange: (event: { target: { name: string; value: string } }) => void;\n  name: string;\n}\n\nexport const NumericFormatCustom = React.forwardRef<\n  NumericFormatProps,\n  CustomProps\n>(function NumericFormatCustom(props, ref) {\n  const { onChange, ...other } = props;\n\n  return (\n    <NumericFormat\n      {...other}\n      getInputRef={ref}\n      onValueChange={(values) => {\n        onChange({\n          target: {\n            name: props.name,\n            value: values.value,\n          },\n        });\n      }}\n      allowNegative={false}\n      thousandSeparator\n      valueIsNumericString\n      //   prefix=\"$\"\n    />\n  );\n});\n","import { useReducer, useContext, useState, useRef } from \"react\";\nimport {\n  TextField,\n  Button,\n  FormControl,\n  InputAdornment,\n  IconButton,\n  InputLabel,\n  OutlinedInput,\n  Autocomplete,\n  MenuItem,\n  Select,\n  Box,\n} from \"@mui/material\";\nimport CustomDatePicker from \"../../../../components/DatePicker\";\nimport LoadingButton from \"@mui/lab/LoadingButton\";\nimport AddIcon from \"@mui/icons-material/Add\";\nimport SaveIcon from \"@mui/icons-material/Save\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport Swal from \"sweetalert2\";\nimport { AuthContext } from \"../../../../components/AuthContext\";\nimport RestartAltIcon from \"@mui/icons-material/RestartAlt\";\nimport { useMutation, useQuery, QueryClient } from \"react-query\";\nimport { NumericFormatCustom } from \"../../../../components/NumberFormat\";\nimport useQueryModalTable from \"../../../../hooks/useQueryModalTable\";\nimport PersonSearchIcon from \"@mui/icons-material/PersonSearch\";\nimport { wait } from \"../../../../lib/wait\";\nimport { GridRowSelectionModel } from \"@mui/x-data-grid\";\nimport Table from \"../../../../components/Table\";\nimport {\n  codeCondfirmationAlert,\n  saveCondfirmationAlert,\n} from \"../../../../lib/confirmationAlert\";\nimport ManageAccountsIcon from \"@mui/icons-material/ManageAccounts\";\nimport PageHelmet from \"../../../../components/Helmet\";\n\nconst initialState = {\n  sub_refNo: \"\",\n  refNo: \"\",\n  datePetty: new Date(),\n  payee: \"\",\n  explanation: \"\",\n  transactionPurpose: \"\",\n  transactionCode: \"\",\n  transactionTitle: \"\",\n  transactionShort: \"\",\n  clientName: \"\",\n  clientID: \"\",\n  amount: \"\",\n  invoice: \"\",\n  option: \"non-vat\",\n  search: \"\",\n  pettyCashMode: \"\",\n};\nexport const reducer = (state: any, action: any) => {\n  switch (action.type) {\n    case \"UPDATE_FIELD\":\n      return {\n        ...state,\n        [action.field]: action.value,\n      };\n    default:\n      return state;\n  }\n};\nconst selectedCollectionColumns = [\n  { field: \"purpose\", headerName: \"Purpose\", flex: 1, minWidth: 400 },\n  { field: \"amount\", headerName: \"Amount\", minWidth: 170 },\n  {\n    field: \"usage\",\n    headerName: \"Usage\",\n    flex: 1,\n    minWidth: 300,\n  },\n  { field: \"accountID\", headerName: \"Account ID\", flex: 1, minWidth: 300 },\n  { field: \"sub_account\", headerName: \"Sub Account\", minWidth: 80 },\n  { field: \"clientID\", headerName: \"ID No\", minWidth: 100 },\n  // hide\n  { field: \"clientName\", headerName: \"Name\", flex: 1, minWidth: 300 },\n  { field: \"accountCode\", headerName: \"Accoount Code\", minWidth: 200 },\n  {\n    field: \"accountShort\",\n    headerName: \"Account Short\",\n    flex: 1,\n    minWidth: 200,\n  },\n  { field: \"vatType\", headerName: \"Vat Type\", flex: 1, minWidth: 100 },\n  { field: \"invoice\", headerName: \"Invoice\", flex: 1, minWidth: 100 },\n  { field: \"TempID\", headerName: \"TempId\", hide: true },\n];\n\nexport const chartColumn = [\n  { field: \"Acct_Code\", headerName: \"Code\", flex: 1 },\n  { field: \"Acct_Title\", headerName: \"Title\", flex: 1 },\n  { field: \"Short\", headerName: \"Short Name\", flex: 1 },\n];\n\nexport default function PettyCash() {\n  const refParent = useRef<HTMLDivElement>(null);\n  const { myAxios, user } = useContext(AuthContext);\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const [editTransaction, setEditTransaction] = useState({\n    edit: false,\n    updateId: \"\",\n  });\n  const [pettyCash, setPettyCash] = useState<GridRowSelectionModel>([]);\n  const datePickerRef = useRef<HTMLElement>(null);\n  const reloadIDButtonRef = useRef<HTMLButtonElement>(null);\n  const payeeInputRef = useRef<HTMLInputElement>(null);\n  const explanationInputRef = useRef<HTMLInputElement>(null);\n  const invoiceInputRef = useRef<HTMLInputElement>(null);\n  let creditTransactionRef = useRef<HTMLInputElement>(null);\n  const amountRef = useRef<HTMLInputElement>(null);\n  const pdcSearchInput = useRef<HTMLInputElement>(null);\n  const queryClient = new QueryClient();\n  const isDisableField = state.pettyCashMode === \"\";\n  const table = useRef<any>(null);\n  const chartAccountSearchRef = useRef<HTMLInputElement>(null);\n\n\n  const dateRef = useRef<HTMLInputElement>(null);\n  const accountRef = useRef<HTMLInputElement>(null);\n  const usageRef = useRef<HTMLInputElement>(null);\n  const vatRef = useRef<HTMLInputElement>(null);\n  const invoiceRef = useRef<HTMLInputElement>(null);\n\n  const {\n    isLoading: loadingPettyCashIdGenerator,\n    refetch: refetchettyCashIdGenerator,\n  } = useQuery({\n    queryKey: \"petty-cash-id-generator\",\n    queryFn: async () =>\n      await myAxios.get(`/task/accounting/get-petty-cash-id`, {\n        headers: {\n          Authorization: `Bearer ${user?.accessToken}`,\n        },\n      }),\n    refetchOnWindowFocus: false,\n    onSuccess: (data) => {\n      const response = data as any;\n      dispatch({\n        type: \"UPDATE_FIELD\",\n        field: \"refNo\",\n        value: response.data.pettyCashId[0].petty_cash_id,\n      });\n      dispatch({\n        type: \"UPDATE_FIELD\",\n        field: \"sub_refNo\",\n        value: response.data.pettyCashId[0].petty_cash_id,\n      });\n    },\n  });\n  const {\n    isLoading: loadingAddUpdatePettyCash,\n    mutate: mutateAddUpdatePettyCash,\n  } = useMutation({\n    mutationKey: \"add-update-petty-cash\",\n    mutationFn: async (variables: any) =>\n      await myAxios.post(`/task/accounting/add-petty-cash`, variables, {\n        headers: {\n          Authorization: `Bearer ${user?.accessToken}`,\n        },\n      }),\n    onSuccess: (data) => {\n      const response = data as any;\n      if (response.data.success) {\n        initialState.pettyCashMode = \"\";\n        setNewStateValue(dispatch, initialState);\n        refetchettyCashIdGenerator();\n        setPettyCash([]);\n        queryClient.invalidateQueries(\"petty-cash-search\");\n        return Swal.fire({\n          position: \"center\",\n          icon: \"success\",\n          title: response.data.message,\n          timer: 1500,\n        });\n      }\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: response.data.message,\n        timer: 1500,\n      });\n    },\n  });\n  const {\n    isLoading: isLoadingLoadSelectedPettyCash,\n    mutate: mutateLoadSelectedPettyCash,\n  } = useMutation({\n    mutationKey: \"load-selected-petty-cash\",\n    mutationFn: async (variables: any) =>\n      await myAxios.post(\n        `/task/accounting/load-selected-petty-cash`,\n        variables,\n        {\n          headers: {\n            Authorization: `Bearer ${user?.accessToken}`,\n          },\n        }\n      ),\n    onSuccess: (data) => {\n      const response = data as any;\n      const loadPettyCash = response.data.loadSelectedPettyCash;\n\n      setNewStateValue(dispatch, {\n        ...state,\n        ...{\n          sub_refNo: loadPettyCash[0].PC_No,\n          refNo: loadPettyCash[0].PC_No,\n          datePetty: loadPettyCash[0].PC_Date,\n          payee: loadPettyCash[0].Payee,\n          explanation: loadPettyCash[0].Explanation,\n          pettyCashMode: \"edit\",\n        },\n      });\n      setPettyCash(loadPettyCash);\n    },\n  });\n\n  const {\n    ModalComponent: ModalChartAccount,\n    openModal: openChartAccount,\n    isLoading: isLoadingChartAccount,\n    closeModal: closeChartAccount,\n  } = useQueryModalTable({\n    link: {\n      url: \"/reference/get-chart-accounts\",\n      queryUrlName: \"chartAccountSearch\",\n    },\n    columns: chartColumn,\n    queryKey: \"get-chart-accounts\",\n    uniqueId: \"Acct_Code\",\n    responseDataKey: \"chartAccount\",\n    onSelected: (selectedRowData) => {\n      dispatch({\n        type: \"UPDATE_FIELD\",\n        field: \"transactionCode\",\n        value: selectedRowData[0].Acct_Code,\n      });\n      dispatch({\n        type: \"UPDATE_FIELD\",\n        field: \"transactionTitle\",\n        value: selectedRowData[0].Acct_Title,\n      });\n      dispatch({\n        type: \"UPDATE_FIELD\",\n        field: \"transactionShort\",\n        value: selectedRowData[0].Short,\n      });\n      closeChartAccount();\n      wait(200).then(() => {\n        usageRef.current?.focus()\n      })\n    },\n\n    searchRef: chartAccountSearchRef,\n  });\n\n  const {\n    ModalComponent: ModalClientIDs,\n    openModal: openCliendIDsModal,\n    isLoading: isLoadingClientIdsModal,\n    closeModal: closeCliendIDsModal,\n  } = useQueryModalTable({\n    link: {\n      url: \"/task/accounting/search-pdc-policy-id\",\n      queryUrlName: \"searchPdcPolicyIds\",\n    },\n    columns: [\n      { field: \"Type\", headerName: \"Type\", width: 130 },\n      { field: \"IDNo\", headerName: \"ID No.\", width: 200 },\n      {\n        field: \"Name\",\n        headerName: \"Name\",\n        flex: 1,\n      },\n      {\n        field: \"ID\",\n        headerName: \"ID\",\n        flex: 1,\n        hide: true,\n      },\n    ],\n    queryKey: \"collection-polidy-ids\",\n    uniqueId: \"IDNo\",\n    responseDataKey: \"clientsId\",\n    onSelected: (selectedRowData, data) => {\n      dispatch({\n        type: \"UPDATE_FIELD\",\n        field: \"clientName\",\n        value: selectedRowData[0].Name,\n      });\n      dispatch({\n        type: \"UPDATE_FIELD\",\n        field: \"clientID\",\n        value: selectedRowData[0].IDNo,\n      });\n      closeCliendIDsModal();\n      wait(200).then(() => {\n        vatRef.current?.focus()\n      })\n    },\n    searchRef: pdcSearchInput,\n  });\n  const {\n    ModalComponent: ModalSearchPettyCash,\n    openModal: openModalSearchPettyCash,\n    isLoading: isLoadingModalSearchPettyCash,\n    closeModal: closeModalSearchPettyCash,\n  } = useQueryModalTable({\n    link: {\n      url: \"/task/accounting/search-petty-cash\",\n      queryUrlName: \"searchPettyCash\",\n    },\n    columns: [\n      { field: \"PC_Date\", headerName: \"Type\", width: 130 },\n      { field: \"PC_No\", headerName: \"ID No.\", width: 200 },\n      {\n        field: \"Payee\",\n        headerName: \"Name\",\n        flex: 1,\n      },\n      {\n        field: \"Explanation\",\n        headerName: \"ID\",\n        flex: 1,\n      },\n      {\n        field: \"Explanation\",\n        headerName: \"ID\",\n        flex: 1,\n        hide: true,\n      },\n    ],\n    queryKey: \"petty-cash-search\",\n    uniqueId: \"PC_No\",\n    responseDataKey: \"searchPettyCash\",\n    onSelected: (selectedRowData) => {\n      mutateLoadSelectedPettyCash({ PC_No: selectedRowData[0].PC_No });\n      dispatch({\n        type: \"UPDATE_FIELD\",\n        field: \"pettyCashMode\",\n        value: \"edit\",\n      });\n      closeModalSearchPettyCash();\n    },\n    onCloseFunction: (value: any) => {\n      dispatch({ type: \"UPDATE_FIELD\", field: \"search\", value });\n    },\n    searchRef: pdcSearchInput,\n  });\n  const handleInputChange = (e: any) => {\n    const { name, value } = e.target;\n    dispatch({ type: \"UPDATE_FIELD\", field: name, value });\n  };\n  function handleOnSave() {\n    if (state.payee.length >= 200) {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: \"Payee is too long!\",\n        timer: 1500,\n      });\n    }\n    if (state.invoice.length >= 200) {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: \"Invoice is too long!\",\n        timer: 1500,\n      });\n    }\n    if (state.amount.length >= 200) {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: \"Amount is too long!\",\n        timer: 1500,\n      });\n    }\n    if (state.clientID.length >= 200) {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: \"Usage is too long!\",\n        timer: 1500,\n      });\n    }\n    if (state.payee === \"\") {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: \"Please provide payee!\",\n        timer: 1500,\n      }).then((result) => {\n        wait(300).then(() => {\n          payeeInputRef.current?.focus();\n        });\n      });\n    }\n    if (state.explanation === \"\") {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: \"Please provide explanation!\",\n        timer: 1500,\n      }).then((result) => {\n        wait(300).then(() => {\n          explanationInputRef.current?.focus();\n        });\n      });\n    }\n    if (pettyCash.length <= 0) {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: \"Please provide transaction entry!\",\n        timer: 1500,\n      });\n    }\n    if (state.pettyCashMode === \"edit\") {\n      codeCondfirmationAlert({\n        isUpdate: true,\n        cb: (userCodeConfirmation) => {\n          mutateAddUpdatePettyCash({\n            refNo: state.refNo,\n            datePetty: state.datePetty,\n            payee: state.payee,\n            explanation: state.explanation,\n            hasSelected: state.pettyCashMode === \"edit\",\n            pettyCash,\n            userCodeConfirmation,\n          });\n        },\n      });\n    } else {\n      saveCondfirmationAlert({\n        isConfirm: () => {\n          mutateAddUpdatePettyCash({\n            refNo: state.refNo,\n            datePetty: state.datePetty,\n            payee: state.payee,\n            explanation: state.explanation,\n            hasSelected: state.pettyCashMode === \"edit\",\n            pettyCash,\n          });\n        },\n      });\n    }\n  }\n  function handleAddTransaction() {\n    if (state.transactionCode === \"\") {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: \"Please provide transaction\",\n        timer: 1500,\n      }).then(() => {\n        wait(300).then(() => {\n          creditTransactionRef.current?.focus();\n        });\n      });\n    }\n    if (state.clientID === \"\") {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: \"Please provide usage\",\n        timer: 1500,\n      }).then(() => {\n        wait(300).then(() => {\n          openCliendIDsModal();\n        });\n      });\n    }\n    if (state.amount === \"\" || parseFloat(state.amount.replace(/,/g, \"\")) < 1) {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: \"Please provide proper amount\",\n        timer: 1500,\n      }).then(() => {\n        wait(300).then(() => {\n          amountRef.current?.focus();\n        });\n      });\n    }\n    setPettyCash((d) => {\n      let FirstTempId = \"\";\n      if (editTransaction.edit) {\n        FirstTempId = editTransaction.updateId;\n      } else {\n        FirstTempId = generateID(\n          d.length > 0 ? (d[d.length - 1] as any).TempID : \"000\"\n        );\n      }\n\n      const addPettyCashTransaction: Array<any> = [];\n      d = d.filter((item: any) => item.TempID !== FirstTempId);\n\n      addPettyCashTransaction.push({\n        purpose: state.transactionPurpose,\n        amount: parseFloat(state.amount).toLocaleString(\"en-US\", {\n          style: \"decimal\",\n          minimumFractionDigits: 2,\n          maximumFractionDigits: 2,\n        }),\n        usage: `${state.clientName} > ${state.clientID} > HO`,\n        accountID: `${state.transactionShort} > ${state.transactionCode}`,\n        sub_account: \"HO\",\n        clientID: state.clientID,\n        clientName: state.clientName,\n        accountCode: state.transactionCode,\n        accountShort: state.transactionShort,\n        vatType: state.option.toUpperCase(),\n        invoice: state.invoice,\n        TempID: FirstTempId,\n      });\n\n      if (state.transactionPurpose !== \"Input Tax\" && state.option === \"vat\") {\n        const SecondTempId = generateID((d[d.length - 1] as any).TempID);\n        const taxableAmount = parseFloat(state.amount.replace(/,/g, \"\")) / 1.12;\n        const inputTax = taxableAmount * 0.12;\n        addPettyCashTransaction.push({\n          purpose: state.transactionPurpose,\n          amount: parseFloat(inputTax.toFixed(2)).toLocaleString(\"en-US\", {\n            style: \"decimal\",\n            minimumFractionDigits: 2,\n            maximumFractionDigits: 2,\n          }),\n          usage: `${state.clientName} > ${state.clientID} > HO`,\n          accountID: `${state.transactionShort} > ${state.transactionCode}`,\n          sub_account: \"HO\",\n          clientID: state.clientID,\n          clientName: state.clientName,\n          accountCode: \"1.06.02\",\n          accountShort: \"Input Tax\",\n          vatType: state.option.toUpperCase(),\n          invoice: state.invoice,\n          TempID: SecondTempId,\n        });\n      }\n\n      function generateID(lastItem: any) {\n        const numericPart = (parseInt(lastItem.match(/\\d+/)[0]) + 1)\n          .toString()\n          .padStart(3, \"0\");\n        return numericPart;\n      }\n\n      d = [...d, ...addPettyCashTransaction];\n      return d;\n    });\n    initialState.datePetty = state.datePetty;\n    initialState.payee = state.payee;\n    initialState.explanation = state.explanation;\n    initialState.pettyCashMode = state.pettyCashMode;\n    initialState.sub_refNo = state.sub_refNo;\n    initialState.refNo = state.refNo;\n    setNewStateValue(dispatch, initialState);\n    setEditTransaction({ edit: false, updateId: \"\" });\n  }\n\n  return (\n    <>\n      <PageHelmet title=\"Petty Cash\" />\n\n      <div\n        style={{\n          display: \"flex\",\n          flexDirection: \"column\",\n          width: \"100%\",\n          height: \"100%\",\n          flex: 1,\n        }}\n      >\n        <div\n          style={{\n            display: \"flex\",\n            alignItems: \"center\",\n            columnGap: \"5px\",\n          }}\n        >\n          {isLoadingModalSearchPettyCash ? (\n            <LoadingButton loading={isLoadingModalSearchPettyCash} />\n          ) : (\n            <TextField\n              label=\"Search\"\n              size=\"small\"\n              name=\"search\"\n              value={state.search}\n              onChange={handleInputChange}\n              onKeyDown={(e) => {\n                if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n                  e.preventDefault();\n                  return openModalSearchPettyCash(\n                    (e.target as HTMLInputElement).value\n                  );\n                }\n              }}\n              InputProps={{\n                style: { height: \"27px\", fontSize: \"14px\" },\n              }}\n              sx={{\n                width: \"300px\",\n                height: \"27px\",\n                \".MuiFormLabel-root\": { fontSize: \"14px\" },\n                \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n              }}\n            />\n          )}\n          {state.pettyCashMode === \"\" && (\n            <Button\n              sx={{\n                height: \"30px\",\n                fontSize: \"11px\",\n              }}\n              variant=\"contained\"\n              startIcon={<AddIcon sx={{ width: 15, height: 15 }} />}\n              id=\"entry-header-save-button\"\n              onClick={() => {\n                dispatch({\n                  type: \"UPDATE_FIELD\",\n                  field: \"pettyCashMode\",\n                  value: \"add\",\n                });\n              }}\n            >\n              New\n            </Button>\n          )}\n          <LoadingButton\n            sx={{\n              height: \"30px\",\n              fontSize: \"11px\",\n            }}\n            id=\"save-entry-header\"\n            color=\"primary\"\n            variant=\"contained\"\n            type=\"submit\"\n            onClick={handleOnSave}\n            disabled={state.pettyCashMode === \"\"}\n            startIcon={<SaveIcon sx={{ width: 15, height: 15 }} />}\n            loading={loadingAddUpdatePettyCash}\n          >\n            {state.pettyCashMode === \"edit\" ? \"Update\" : \"Save\"}\n          </LoadingButton>\n          {state.pettyCashMode !== \"\" && (\n            <Button\n              sx={{\n                height: \"30px\",\n                fontSize: \"11px\",\n              }}\n              variant=\"contained\"\n              startIcon={<CloseIcon sx={{ width: 15, height: 15 }} />}\n              color=\"error\"\n              onClick={() => {\n                Swal.fire({\n                  title: \"Are you sure?\",\n                  text: \"You won't be able to revert this!\",\n                  icon: \"warning\",\n                  showCancelButton: true,\n                  confirmButtonColor: \"#3085d6\",\n                  cancelButtonColor: \"#d33\",\n                  confirmButtonText: \"Yes, cancel it!\",\n                }).then((result) => {\n                  if (result.isConfirmed) {\n                    initialState.pettyCashMode = \"\";\n                    setNewStateValue(dispatch, initialState);\n                    refetchettyCashIdGenerator();\n                    setPettyCash([]);\n                  }\n                });\n              }}\n            >\n              Cancel\n            </Button>\n          )}\n        </div>\n        <fieldset\n          style={{\n            border: \"1px solid #cbd5e1\",\n            borderRadius: \"5px\",\n            position: \"relative\",\n            width: \"100%\",\n            height: \"auto\",\n            display: \"flex\",\n            marginTop: \"10px\",\n            gap: \"10px\",\n            padding: \"15px\",\n          }}\n        >\n          {loadingPettyCashIdGenerator ? (\n            <LoadingButton loading={loadingPettyCashIdGenerator} />\n          ) : (\n            <FormControl\n              sx={{\n                width: \"160px\",\n                \".MuiFormLabel-root\": {\n                  fontSize: \"14px\",\n                  background: \"white\",\n                  zIndex: 99,\n                  padding: \"0 3px\",\n                },\n                \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n              }}\n              variant=\"outlined\"\n              size=\"small\"\n              disabled={isDisableField}\n            >\n              <InputLabel htmlFor=\"return-check-id-field\">Ref. No.</InputLabel>\n              <OutlinedInput\n\n                sx={{\n                  height: \"27px\",\n                  fontSize: \"14px\",\n                }}\n                disabled={isDisableField}\n                label=\"Ref. No.\"\n                name=\"refNo\"\n                value={state.refNo}\n                onChange={handleInputChange}\n                onKeyDown={(e) => {\n                  if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n                    e.preventDefault();\n                    // return handleOnSave();\n                    dateRef.current?.focus()\n                  }\n                }}\n                readOnly={user?.department !== \"UCSMI\"}\n                id=\"return-check-id-field\"\n                endAdornment={\n                  <InputAdornment position=\"end\">\n                    <IconButton\n                      ref={reloadIDButtonRef}\n                      disabled={isDisableField}\n                      aria-label=\"search-client\"\n                      color=\"secondary\"\n                      edge=\"end\"\n                      onClick={() => {\n                        refetchettyCashIdGenerator();\n                      }}\n                    >\n                      <RestartAltIcon />\n                    </IconButton>\n                  </InputAdornment>\n                }\n              />\n            </FormControl>\n          )}\n          <CustomDatePicker\n            fullWidth={false}\n            disabled={isDisableField}\n            label=\"Date\"\n            onChange={(value: any) => {\n              dispatch({\n                type: \"UPDATE_FIELD\",\n                field: \"datePetty\",\n                value: value,\n              });\n            }}\n            value={new Date(state.datePetty)}\n            onKeyDown={(e: any) => {\n              if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n                // const timeout = setTimeout(() => {\n                //   datePickerRef.current?.querySelector(\"button\")?.click();\n                //   clearTimeout(timeout);\n                // }, 150);\n                payeeInputRef.current?.focus()\n              }\n            }}\n            inputRef={dateRef}\n            textField={{\n              InputLabelProps: {\n                style: {\n                  fontSize: \"14px\",\n                },\n              },\n              InputProps: {\n                style: { height: \"27px\", fontSize: \"14px\" },\n              },\n            }}\n            datePickerRef={datePickerRef}\n          />\n          <TextField\n            disabled={isDisableField}\n            label=\"Payee\"\n            size=\"small\"\n            name=\"payee\"\n            value={state.payee}\n            onChange={handleInputChange}\n            onKeyDown={(e) => {\n              if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n                e.preventDefault();\n                explanationInputRef.current?.focus()\n              }\n            }}\n            InputProps={{\n              style: { height: \"27px\", fontSize: \"14px\", width: \"280px\" },\n            }}\n            sx={{\n              \".MuiFormLabel-root\": { fontSize: \"14px\" },\n              \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n            }}\n            inputRef={payeeInputRef}\n          />\n          <TextField\n            disabled={isDisableField}\n            label=\"Explanation\"\n            size=\"small\"\n            name=\"explanation\"\n            value={state.explanation}\n            onChange={handleInputChange}\n            onKeyDown={(e) => {\n              if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n                e.preventDefault();\n                // return handleOnSave();\n                accountRef.current?.focus()\n              }\n            }}\n            InputProps={{\n              style: { height: \"27px\", fontSize: \"14px\" },\n            }}\n            sx={{\n              flex: 1,\n              \".MuiFormLabel-root\": { fontSize: \"14px\" },\n              \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n            }}\n            inputRef={explanationInputRef}\n          />\n        </fieldset>\n        <fieldset\n          style={{\n            border: \"1px solid #cbd5e1\",\n            borderRadius: \"5px\",\n            position: \"relative\",\n            width: \"100%\",\n            height: \"auto\",\n            marginTop: \"10px\",\n            padding: \"15px\",\n          }}\n        >\n          <div\n            style={{\n              display: \"flex\",\n              gap: \"10px\",\n            }}\n          >\n\n\n            {isLoadingChartAccount ? (\n              <LoadingButton loading={isLoadingChartAccount} />\n            ) : (\n              <FormControl\n                variant=\"outlined\"\n                size=\"small\"\n                disabled={isDisableField}\n                sx={{\n                  width: \"350px\",\n                  \".MuiFormLabel-root\": {\n                    fontSize: \"14px\",\n                    background: \"white\",\n                    zIndex: 99,\n                    padding: \"0 3px\",\n                  },\n                  \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n                }}\n              >\n                <InputLabel htmlFor=\"chart-account-id\">Account</InputLabel>\n                <OutlinedInput\n                  inputRef={accountRef}\n                  sx={{\n                    height: \"27px\",\n                    fontSize: \"14px\",\n                  }}\n                  disabled={isDisableField}\n                  fullWidth\n                  label=\"Account\"\n                  name=\"transactionTitle\"\n                  value={state.transactionTitle}\n                  onChange={handleInputChange}\n                  onKeyDown={(e) => {\n                    if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n                      e.preventDefault();\n                      return openChartAccount(state.transactionTitle);\n                    }\n                  }}\n                  id=\"chart-account-id\"\n                  endAdornment={\n                    <InputAdornment position=\"end\">\n                      <IconButton\n                        disabled={isDisableField}\n                        aria-label=\"search-client\"\n                        color=\"secondary\"\n                        edge=\"end\"\n                        onClick={() => {\n                          openChartAccount(state.transactionTitle);\n                        }}\n                      >\n                        <ManageAccountsIcon />\n                      </IconButton>\n                    </InputAdornment>\n                  }\n                />\n              </FormControl>\n            )}\n\n            {isLoadingClientIdsModal ? (\n              <LoadingButton loading={isLoadingClientIdsModal} />\n            ) : (\n              <FormControl\n                sx={{\n                  minWidth: \"400px\",\n                  \".MuiFormLabel-root\": {\n                    fontSize: \"14px\",\n                    background: \"white\",\n                    zIndex: 99,\n                    padding: \"0 3px\",\n                  },\n                  \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n                }}\n                variant=\"outlined\"\n                size=\"small\"\n                disabled={isDisableField}\n              >\n                <InputLabel htmlFor=\"client-list\">Usage</InputLabel>\n                <OutlinedInput\n                  sx={{\n                    height: \"27px\",\n                    fontSize: \"14px\",\n                  }}\n                  inputRef={usageRef}\n                  disabled={isDisableField}\n                  label=\"Usage\"\n                  name=\"clientName\"\n                  value={state.clientName}\n                  onChange={handleInputChange}\n                  onKeyDown={(e) => {\n                    if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n                      e.preventDefault();\n                      return openCliendIDsModal(state.clientName);\n                    }\n                  }}\n                  id=\"client-list\"\n                  endAdornment={\n                    <InputAdornment position=\"end\">\n                      <IconButton\n                        ref={reloadIDButtonRef}\n                        disabled={isDisableField}\n                        color=\"secondary\"\n                        edge=\"end\"\n                        onClick={() => {\n                          openCliendIDsModal(state.clientName);\n                        }}\n                      >\n                        <PersonSearchIcon />\n                      </IconButton>\n                    </InputAdornment>\n                  }\n                />\n              </FormControl>\n            )}\n            <Select\n              labelId=\"label-selection-reason\"\n              value={state.option}\n              name=\"option\"\n              onChange={handleInputChange}\n              disabled={isDisableField}\n              autoWidth\n              sx={{\n                height: \"27px\",\n                fontSize: \"14px\",\n                width: \"200px\",\n              }}\n              inputRef={vatRef}\n            >\n              <MenuItem onKeyDown={(e) => {\n                if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n                  e.preventDefault();\n                  wait(200).then(() => {\n                    amountRef.current?.focus()\n                  })\n                }\n              }} value=\"vat\">VAT</MenuItem>\n              <MenuItem onKeyDown={(e) => {\n                if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n                  e.preventDefault();\n                  wait(200).then(() => {\n                    amountRef.current?.focus()\n                  })\n                }\n              }} value={\"non-vat\"}>NON-VAT</MenuItem>\n            </Select>\n          </div>\n          <div\n            style={{\n              display: \"flex\",\n              gap: \"10px\",\n              marginTop: \"10px\",\n            }}\n          >\n            <TextField\n              sx={{\n                \".MuiFormLabel-root\": { fontSize: \"14px\" },\n                \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n              }}\n              disabled={isDisableField}\n              name=\"amount\"\n              label=\"Amount\"\n              size=\"small\"\n              value={state.amount}\n              onChange={handleInputChange}\n              placeholder=\"0.00\"\n              InputProps={{\n                inputComponent: NumericFormatCustom as any,\n                inputRef: amountRef,\n                style: { height: \"27px\", fontSize: \"14px\", width: \"200px\" },\n              }}\n              onBlur={() => {\n                dispatch({\n                  type: \"UPDATE_FIELD\",\n                  field: \"amount\",\n                  value: parseFloat(state.amount.replace(/,/g, \"\")).toFixed(2),\n                });\n              }}\n              onKeyDown={(e) => {\n                if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n                  e.preventDefault();\n                  invoiceRef.current?.focus()\n                }\n              }}\n            />\n            <TextField\n              sx={{\n                \".MuiFormLabel-root\": { fontSize: \"14px\" },\n                \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n              }}\n              InputProps={{\n                inputRef: invoiceRef,\n                style: { height: \"27px\", fontSize: \"14px\", width: \"300px\" },\n              }}\n              disabled={isDisableField}\n              label=\"Invoice\"\n              size=\"small\"\n              name=\"invoice\"\n              value={state.invoice}\n              onChange={handleInputChange}\n              onKeyDown={(e: any) => {\n                if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n                  e.preventDefault();\n                  return handleAddTransaction();\n                }\n              }}\n              inputRef={invoiceInputRef}\n            />\n            <Button\n              disabled={isDisableField}\n              color=\"success\"\n              variant=\"contained\"\n              style={{ gridArea: \"button\", height: \"27px\", fontSize: \"14px\" }}\n              startIcon={<AddIcon />}\n              onClick={() => {\n                handleAddTransaction();\n              }}\n            >\n              {editTransaction.edit ? \"Update Transaction\" : \"add Transaction\"}\n            </Button>\n          </div>\n        </fieldset>\n        <div\n          ref={refParent}\n          style={{\n            marginTop: \"10px\",\n            width: \"100%\",\n            position: \"relative\",\n            flex: 1,\n          }}\n        >\n          <Box\n            style={{\n              height: `${refParent.current?.getBoundingClientRect().height}px`,\n              width: \"100%\",\n              overflowX: \"scroll\",\n              position: \"absolute\",\n            }}\n          >\n            <Table\n              ref={table}\n              isLoading={\n                loadingAddUpdatePettyCash || isLoadingLoadSelectedPettyCash\n              }\n              columns={selectedCollectionColumns}\n              rows={pettyCash}\n              table_id={\"TempID\"}\n              isSingleSelection={true}\n              isRowFreeze={false}\n              dataSelection={(selection, data, code) => {\n                const rowSelected = data.filter(\n                  (item: any) => item.TempID === selection[0]\n                )[0];\n                if (rowSelected === undefined || rowSelected.length <= 0) {\n                  setEditTransaction({\n                    edit: false,\n                    updateId: \"\",\n                  });\n                  setNewStateValue(dispatch, {\n                    ...state,\n                    ...{\n                      transactionPurpose: \"\",\n                      transactionCode: \"\",\n                      transactionTitle: \"\",\n                      transactionShort: \"\",\n                      clientName: \"\",\n                      clientID: \"\",\n                      amount: \"\",\n                      invoice: \"\",\n                      option: \"non-vat\",\n                    },\n                  });\n                  return;\n                }\n\n                if (code === \"Delete\" || code === \"Backspace\") {\n                  Swal.fire({\n                    title: \"Are you sure?\",\n                    text: `You won't to delete this Check No. ${rowSelected.Check_No}`,\n                    icon: \"warning\",\n                    showCancelButton: true,\n                    confirmButtonColor: \"#3085d6\",\n                    cancelButtonColor: \"#d33\",\n                    confirmButtonText: \"Yes, delete it!\",\n                  }).then((result) => {\n                    if (result.isConfirmed) {\n                      return setPettyCash((dt) => {\n                        return dt.filter(\n                          (item: any) => item.TempID !== selection[0]\n                        );\n                      });\n                    }\n                    table.current?.removeSelection();\n                  });\n                  return;\n                }\n                setNewStateValue(dispatch, {\n                  ...state,\n                  ...{\n                    transactionPurpose: rowSelected.purpose,\n                    transactionCode: rowSelected.accountCode,\n                    transactionTitle: rowSelected.purpose,\n                    transactionShort: rowSelected.DRShort,\n                    clientName: rowSelected.clientName,\n                    clientID: rowSelected.clientID,\n                    amount: rowSelected.amount,\n                    invoice: rowSelected.invoice,\n                    option: rowSelected.vatType.toLowerCase(),\n                  },\n                });\n                setEditTransaction({\n                  edit: true,\n                  updateId: rowSelected.TempID,\n                });\n              }}\n            />\n          </Box>\n        </div>\n        {ModalClientIDs}\n        {ModalSearchPettyCash}\n        {ModalChartAccount}\n      </div>\n    </>\n\n  );\n}\n\nfunction setNewStateValue(dispatch: any, obj: any) {\n  Object.entries(obj).forEach(([field, value]) => {\n    dispatch({ type: \"UPDATE_FIELD\", field, value });\n  });\n}\n","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)([/*#__PURE__*/(0, _jsxRuntime.jsx)(\"circle\", {\n  cx: \"10\",\n  cy: \"8\",\n  r: \"4\"\n}, \"0\"), /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M10.35 14.01C7.62 13.91 2 15.27 2 18v2h9.54c-2.47-2.76-1.23-5.89-1.19-5.99zm9.08 4.01c.36-.59.57-1.28.57-2.02 0-2.21-1.79-4-4-4s-4 1.79-4 4 1.79 4 4 4c.74 0 1.43-.22 2.02-.57L20.59 22 22 20.59l-2.57-2.57zM16 18c-1.1 0-2-.9-2-2s.9-2 2-2 2 .9 2 2-.9 2-2 2z\"\n}, \"1\")], 'PersonSearch');\nexports.default = _default;","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 5V2L8 6l4 4V7c3.31 0 6 2.69 6 6 0 2.97-2.17 5.43-5 5.91v2.02c3.95-.49 7-3.85 7-7.93 0-4.42-3.58-8-8-8zm-6 8c0-1.65.67-3.15 1.76-4.24L6.34 7.34C4.9 8.79 4 10.79 4 13c0 4.08 3.05 7.44 7 7.93v-2.02c-2.83-.48-5-2.94-5-5.91z\"\n}), 'RestartAlt');\nexports.default = _default;"],"names":["CustomDatePicker","_ref","label","name","onChange","value","onKeyDown","inputRef","datePickerRef","fullWidth","textField","_ref$minWidth","minWidth","rest","_objectWithoutProperties","_excluded","_jsx","LocalizationProvider","dateAdapter","AdapterDateFns","children","DatePicker","_objectSpread","floatingLabelStyle","color","ref","slotProps","size","InputLabelProps","sx","fieldset","borderColor","fontSize","top","NumericFormatCustom","React","props","other","NumericFormat","getInputRef","onValueChange","values","target","allowNegative","thousandSeparator","valueIsNumericString","initialState","sub_refNo","refNo","datePetty","Date","payee","explanation","transactionPurpose","transactionCode","transactionTitle","transactionShort","clientName","clientID","amount","invoice","option","search","pettyCashMode","reducer","state","action","type","_defineProperty","field","selectedCollectionColumns","headerName","flex","hide","chartColumn","PettyCash","_queryFn","_mutationFn","_mutationFn2","_refParent$current","refParent","useRef","_useContext","useContext","AuthContext","myAxios","user","_useReducer","useReducer","_useReducer2","_slicedToArray","dispatch","_useState","useState","edit","updateId","_useState2","editTransaction","setEditTransaction","_useState3","_useState4","pettyCash","setPettyCash","reloadIDButtonRef","payeeInputRef","explanationInputRef","invoiceInputRef","creditTransactionRef","amountRef","pdcSearchInput","queryClient","QueryClient","isDisableField","table","chartAccountSearchRef","dateRef","accountRef","usageRef","vatRef","invoiceRef","_useQuery","useQuery","queryKey","queryFn","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","get","headers","Authorization","concat","accessToken","abrupt","sent","stop","apply","arguments","refetchOnWindowFocus","onSuccess","data","response","pettyCashId","petty_cash_id","loadingPettyCashIdGenerator","isLoading","refetchettyCashIdGenerator","refetch","_useMutation","useMutation","mutationKey","mutationFn","_x","_callee2","variables","_context2","post","success","setNewStateValue","invalidateQueries","Swal","position","icon","title","message","timer","loadingAddUpdatePettyCash","mutateAddUpdatePettyCash","mutate","_useMutation2","_x2","_callee3","_context3","loadPettyCash","loadSelectedPettyCash","PC_No","PC_Date","Payee","Explanation","isLoadingLoadSelectedPettyCash","mutateLoadSelectedPettyCash","_useQueryModalTable","useQueryModalTable","link","url","queryUrlName","columns","uniqueId","responseDataKey","onSelected","selectedRowData","Acct_Code","Acct_Title","Short","closeChartAccount","wait","then","_usageRef$current","current","focus","searchRef","ModalChartAccount","ModalComponent","openChartAccount","openModal","isLoadingChartAccount","closeModal","_useQueryModalTable2","width","Name","IDNo","closeCliendIDsModal","_vatRef$current","ModalClientIDs","openCliendIDsModal","isLoadingClientIdsModal","_useQueryModalTable3","closeModalSearchPettyCash","onCloseFunction","ModalSearchPettyCash","openModalSearchPettyCash","isLoadingModalSearchPettyCash","handleInputChange","e","_e$target","handleAddTransaction","_creditTransactionRef","parseFloat","replace","_amountRef$current","d","FirstTempId","generateID","length","TempID","addPettyCashTransaction","filter","item","push","purpose","toLocaleString","style","minimumFractionDigits","maximumFractionDigits","usage","accountID","sub_account","accountCode","accountShort","vatType","toUpperCase","SecondTempId","inputTax","toFixed","lastItem","parseInt","match","toString","padStart","_toConsumableArray","_jsxs","_Fragment","PageHelmet","display","flexDirection","height","alignItems","columnGap","LoadingButton","loading","TextField","code","preventDefault","InputProps","Button","variant","startIcon","AddIcon","id","onClick","result","_payeeInputRef$curren","_explanationInputRef$","codeCondfirmationAlert","isUpdate","cb","userCodeConfirmation","hasSelected","saveCondfirmationAlert","isConfirm","disabled","SaveIcon","CloseIcon","text","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","isConfirmed","border","borderRadius","marginTop","gap","padding","FormControl","background","zIndex","InputLabel","htmlFor","OutlinedInput","_dateRef$current","readOnly","department","endAdornment","InputAdornment","IconButton","edge","RestartAltIcon","_payeeInputRef$curren2","_explanationInputRef$2","_accountRef$current","ManageAccountsIcon","PersonSearchIcon","Select","labelId","autoWidth","MenuItem","_amountRef$current2","_amountRef$current3","placeholder","inputComponent","onBlur","_invoiceRef$current","gridArea","Box","getBoundingClientRect","overflowX","Table","rows","table_id","isSingleSelection","isRowFreeze","dataSelection","selection","rowSelected","undefined","DRShort","toLowerCase","Check_No","_table$current","dt","removeSelection","obj","Object","entries","forEach","_ref2","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","cx","cy","r"],"sourceRoot":""}