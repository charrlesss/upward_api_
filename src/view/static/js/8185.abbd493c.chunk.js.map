{"version":3,"file":"static/js/8185.abbd493c.chunk.js","mappings":"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","sources":["components/Helmet.tsx","components/UpwardFields.tsx","components/UpwardTable.tsx","hooks/useUpwardTableModal.tsx","feautures/Admin/Task/Accounting/PostDateChecks.tsx"],"sourcesContent":["\r\nimport { Helmet } from \"react-helmet\";\r\n\r\nconst PageHelmet = ({ title = '' }: { title: string }) => {\r\n    const imgUrl = process.env.REACT_APP_IMAGE_URL;\r\n    return (\r\n        <Helmet>\r\n            <title>{title}</title>\r\n            <link rel=\"icon\" type=\"image/png\" href={`${imgUrl}/logo.png`} />\r\n        </Helmet>\r\n    );\r\n};\r\n\r\nexport default PageHelmet;","import { HtmlHTMLAttributes, InputHTMLAttributes, useId, ReactNode, useState, LegacyRef, HTMLInputTypeAttribute, TextareaHTMLAttributes } from \"react\";\nimport \"../style/design.css\";\n\n\ninterface TextInputProps {\n  input: InputHTMLAttributes<HTMLInputElement>;\n  label: HtmlHTMLAttributes<HTMLLabelElement>;\n  inputRef?: React.RefObject<HTMLInputElement>;\n  icon?: ReactNode; // New prop for the icon\n  iconPosition?: 'start' | 'end'; // New prop to choose icon position\n  onIconClick?: React.MouseEventHandler<HTMLDivElement> | undefined,\n  disableIcon?: boolean\n}\n\ninterface TextAreaPrps {\n  textarea: TextareaHTMLAttributes<HTMLTextAreaElement>\n  label: HtmlHTMLAttributes<HTMLLabelElement>;\n  _inputRef: LegacyRef<HTMLTextAreaElement>\n  icon?: ReactNode; // New prop for the icon\n  iconPosition?: 'start' | 'end'; // New prop to choose icon position\n  onIconClick?: React.MouseEventHandler<HTMLDivElement> | undefined,\n  disableIcon?: boolean\n}\n\ninterface TextFormatedInputProps extends TextInputProps {\n  onChange?: React.ChangeEventHandler<HTMLInputElement> | undefined\n}\nexport function TextFormatedInput({\n  input,\n  label,\n  inputRef,\n  icon,\n  iconPosition = 'end', // Default position is 'end'\n  disableIcon = false,\n  onIconClick = (e) => { },\n  onChange = (e) => { }\n}: TextFormatedInputProps) {\n  // const [inputValue, setInputValue] = useState('');\n  const id = useId();\n\n\n  // Helper function to format numbers with commas\n  const formatNumber = (value: string) => {\n    if (!value) return value;\n\n    // Split the value into integer and decimal parts\n    const parts = value.split('.');\n\n    // Add commas to the integer part only\n    parts[0] = parts[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n\n    // Join the integer and decimal parts if decimal exists\n    return parts.join('.');\n  };\n\n  // Helper function to remove commas\n  const unformatNumber = (value: string) => {\n    return value.replace(/,/g, '');\n  };\n\n  // Function to ensure two decimal places\n  const ensureTwoDecimals = (value: string) => {\n    // If the value has no decimal part, append '.00'\n    if (!value.includes('.')) {\n      if (value === '') {\n        return '0.00';\n      } else {\n\n        return value + '.00';\n      }\n    }\n\n    // If the value has one decimal place, append '0'\n    const parts = value.split('.');\n    if (parts[1].length === 1) {\n      return value + '0';\n    }\n\n    // If it already has two decimal places, return as is\n    return value;\n  };\n\n  const handleChange = (e: any) => {\n    let value = e.target.value;\n\n    // Remove commas for processing\n    value = unformatNumber(value);\n\n    // Allow only numbers, commas, and one decimal point\n    const regex = /^-?\\d+(,\\d{3})*(\\.\\d*)?$/;\n\n    // Remove commas for processing\n    value = unformatNumber(value);\n\n    // Check if the value is valid\n    if (value === '' || regex.test(value)) {\n      // Set the formatted value back in the input field\n\n      //setInputValue(formatNumber(value));\n      e.target.value = formatNumber(value)\n\n    }\n  };\n\n  const handleBlur = (e: any) => {\n    let value = unformatNumber(e.target.value);\n\n    // Ensure the value has two decimal places\n    value = ensureTwoDecimals(value);\n\n    // Set the value with commas and .00 (if needed)\n    // setInputValue(formatNumber(value));\n    e.target.value = formatNumber(value)\n  };\n\n  return (\n    <div\n      style={{\n        display: 'flex',\n        alignItems: 'center',\n        position: 'relative', // Enable absolute positioning for icon\n      }}\n    >\n      <label {...label} htmlFor={id}>\n        {label.title}\n      </label>\n      {icon && iconPosition === 'start' && (\n        <div style={{ position: 'absolute', left: '8px', zIndex: 1 }}>\n          {icon}\n        </div>\n      )}\n      <input\n        ref={inputRef}\n        id={id}\n        {...input}\n        type=\"text\"\n        style={{\n          height: '100%',\n          ...input.style,\n        }}\n        onChange={(e) => {\n          handleChange(e)\n          onChange(e)\n        }}\n        onBlur={(e) => {\n          handleBlur(e)\n        }}  // Add .00 on blur\n\n      />\n      {icon && iconPosition === 'end' && (\n        <div onClick={onIconClick}\n          style={{\n            position: 'absolute',\n            right: '2px',\n            top: \"50%\",\n            transform: \"translateY(-50%)\",\n            zIndex: 1,\n            cursor: disableIcon ? \"none\" : \"pointer\",\n            display: \"flex\",\n            alignItems: \"center\",\n            justifyContent: \"center\",\n            background: \"white\",\n            pointerEvents: disableIcon ? \"none\" : \"auto\"\n          }}>\n          {icon}\n        </div>\n\n      )\n      }\n    </div >\n  );\n}\n\n\nexport function TextInput({\n  input,\n  label,\n  inputRef,\n  icon,\n  iconPosition = 'end', // Default position is 'end'\n  disableIcon = false,\n  onIconClick = (e) => { }\n}: TextInputProps) {\n  const id = useId();\n\n  return (\n    <div\n      style={{\n        display: 'flex',\n        alignItems: 'center',\n        position: 'relative', // Enable absolute positioning for icon\n      }}\n    >\n      <label {...label} htmlFor={id}>\n        {label.title}\n      </label>\n      {icon && iconPosition === 'start' && (\n        <div style={{ position: 'absolute', left: '8px', zIndex: 1 }}>\n          {icon}\n        </div>\n      )}\n      <input\n        ref={inputRef}\n        id={id}\n        {...input}\n        style={{\n          height: '100%',\n          ...input.style,\n        }}\n      />\n      {icon && iconPosition === 'end' && (\n        <div onClick={onIconClick}\n          style={{\n            position: 'absolute',\n            right: '2px',\n            top: \"50%\",\n            transform: \"translateY(-50%)\",\n            zIndex: 1,\n            cursor: disableIcon ? \"none\" : \"pointer\",\n            display: \"flex\",\n            alignItems: \"center\",\n            justifyContent: \"center\",\n            background: \"white\",\n            pointerEvents: disableIcon ? \"none\" : \"auto\"\n          }}>\n          {icon}\n        </div>\n\n      )\n      }\n    </div >\n  );\n}\n\n\n\nexport function TextAreaInput({\n  textarea,\n  label,\n  _inputRef,\n  icon,\n  iconPosition = 'end', // Default position is 'end'\n  disableIcon = false,\n  onIconClick = (e) => { }\n}: TextAreaPrps) {\n  const id = useId();\n\n  return (\n    <div\n      style={{\n        display: 'flex',\n        alignItems: 'center',\n        position: 'relative', // Enable absolute positioning for icon\n      }}\n    >\n      <label {...label} htmlFor={id}>\n        {label.title}\n      </label>\n      {icon && iconPosition === 'start' && (\n        <div style={{ position: 'absolute', left: '8px', zIndex: 1 }}>\n          {icon}\n        </div>\n      )}\n      <textarea\n        ref={_inputRef}\n        id={id}\n        {...textarea}\n        style={{\n          height: '100%',\n          ...textarea.style,\n        }}\n\n      />\n      {icon && iconPosition === 'end' && (\n        <div onClick={onIconClick}\n          style={{\n            position: 'absolute',\n            right: '2px',\n            top: \"50%\",\n            transform: \"translateY(-50%)\",\n            zIndex: 1,\n            cursor: disableIcon ? \"none\" : \"pointer\",\n            display: \"flex\",\n            alignItems: \"center\",\n            justifyContent: \"center\",\n            background: \"white\",\n            pointerEvents: disableIcon ? \"none\" : \"auto\"\n          }}>\n          {icon}\n        </div>\n\n      )\n      }\n    </div >\n  );\n}\n\n\nexport function SelectInput({\n  select,\n  label,\n  selectRef,\n  datasource = [],\n  values = \"\",\n  display = \"\",\n  containerStyle\n}: {\n  selectRef?: React.RefObject<HTMLSelectElement>;\n  labelRef?: React.RefObject<HTMLLabelElement>;\n  select: InputHTMLAttributes<HTMLSelectElement>;\n  label: HtmlHTMLAttributes<HTMLLabelElement>;\n  datasource: Array<any>;\n  values: string;\n  display: string;\n  containerStyle?: React.CSSProperties | undefined\n}) {\n  const id = useId();\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        height: \"18px\",\n        alignItems: \"center\",\n        ...containerStyle\n      }}\n    >\n      <label {...label} htmlFor={id}>\n        {label.title}\n      </label>\n      <select\n        {...select}\n        ref={selectRef}\n        className={`select ${select.className}`}\n        style={{\n          height: \"18px\",\n          ...select.style,\n        }}\n      >\n        {datasource.map((itm, idx) => {\n          return (\n            <option key={idx} value={itm[values]}>\n              {itm[display]}\n            </option>\n          );\n        })}\n      </select>\n    </div>\n  );\n}\n\nexport function ButtonField({\n  buttonRetRef,\n  button,\n  tooltipText = \"\",\n  children,\n  disabled = false,\n}: {\n  buttonRetRef?: React.RefObject<HTMLButtonElement>;\n  button: HtmlHTMLAttributes<HTMLButtonElement>;\n  tooltipText: string;\n  children: React.ReactNode;\n  disabled?: boolean;\n}) {\n  return (\n    <div className=\"tooltip\">\n      <button\n        disabled={disabled}\n        {...button}\n        ref={buttonRetRef}\n        style={{ ...button.style, background: !disabled ? \"transparent\" : \"#f1f1f1\" }}\n        className=\"tooltip-button\"\n      >\n        {children}\n      </button>\n      {!disabled && <span className=\"tooltip-text\">{tooltipText}</span>}\n    </div>\n  );\n}\n","import React, {\n  useState,\n  useRef,\n  useEffect,\n  forwardRef,\n  useImperativeHandle,\n} from \"react\";\nimport \"../style/datagridview.css\";\nimport { Pagination } from \"@mui/material\";\ninterface UpwardTablePropsType {\n  rows: Array<any>;\n  column: Array<any>;\n  width: number;\n  height: number;\n  dataReadOnly: boolean;\n  onSelectionChange?: (row: Array<any>, rowIndex: number) => void;\n  onKeyDown?: (row: Array<any>, key: string, rowIndex: number) => void;\n  isMultipleSelect?: boolean;\n  freeze?: boolean;\n  inputsearchselector?: string;\n  isRowSelectable?: boolean;\n  unSelectable?: (row: any) => boolean;\n  isLoading?: boolean,\n  onRightClick?: (rowSelected: any, event: any) => any\n}\nconst UpwardTable = forwardRef(\n  (\n    {\n      rows,\n      column,\n      width,\n      height,\n      dataReadOnly,\n      onSelectionChange = () => { },\n      isMultipleSelect = false,\n      freeze = false,\n      onKeyDown,\n      inputsearchselector = \".search-input-up-on-key-down\",\n      isRowSelectable = true,\n      unSelectable = () => false,\n      isLoading,\n      onRightClick\n    }: UpwardTablePropsType,\n    UpwardTableRef\n  ) => {\n    const [pages, setPages] = useState<Array<any>>([])\n    const [pageNumber, setPageNumber] = useState(0)\n    const onSelectionChangeRef = useRef(onSelectionChange);\n    const onKeyDownRef = useRef(onKeyDown);\n    const [columns, setColumns] = useState(column.filter((itm) => !itm.hide));\n    const [hoveredColumn, setHoveredColumn] = useState(null);\n    const [selectedRows, setSelectedRows] = useState<Array<number>>([0]);\n    const [lastSelectedRowIndex, setLastSelectedRowIndex] = useState(0);\n    const [selectedItems, setSelectedItems] = useState<Array<number>>([]);\n    const divRef = useRef<HTMLDivElement>(null);\n    const [_clickTimeout, _setClickTimeout] = useState(null);\n\n\n    useEffect(() => {\n      const _pages = formatArrayIntoChunks(rows, 100)\n      setPages(_pages)\n    }, [rows])\n\n    const startResize = (index: any, e: any) => {\n      e.preventDefault();\n      e.stopPropagation();\n\n      const startX = e.clientX;\n      const startWidth = columns[index].width;\n\n      const doDrag = (moveEvent: any) => {\n        const newWidth = startWidth + (moveEvent.clientX - startX);\n        const updatedColumns = [...columns];\n        updatedColumns[index].width = newWidth > 50 ? newWidth : 50; // Set minimum column width\n        setColumns(updatedColumns);\n      };\n\n      const stopDrag = () => {\n        document.removeEventListener(\"mousemove\", doDrag);\n        document.removeEventListener(\"mouseup\", stopDrag);\n      };\n\n      document.addEventListener(\"mousemove\", doDrag);\n      document.addEventListener(\"mouseup\", stopDrag);\n    };\n    const handleMouseEnter = (index: any) => {\n      setHoveredColumn(index); // Set the hovered column index\n    };\n    const handleMouseLeave = () => {\n      setHoveredColumn(null); // Reset hovered column index\n    };\n    const handleRowClick = (\n      rowIndex: any,\n      event: React.MouseEvent<HTMLDivElement, MouseEvent>\n    ) => {\n      function getIndexAndData(selectedRowData: Array<any>) {\n        const filterSelectrowData = selectedRowData.map((d, idx) => {\n          if (!unSelectable(d)) {\n            return { idx, data: d };\n          }\n          return null;\n        });\n        const removeNullValue = filterSelectrowData.filter((d) => d !== null);\n        const data = removeNullValue.map((itm: any) => itm.data);\n        const newSelectedRowsFiltered = removeNullValue.map(\n          (itm: any) => itm.idx\n        );\n        return { newSelectedRowsFiltered, data };\n      }\n\n      if (!isMultipleSelect) {\n        // Single selection mode\n        setSelectedRows([rowIndex]);\n      } else {\n        // Multiple selection mode\n        if (event.shiftKey && lastSelectedRowIndex !== null) {\n          // Shift + Click: Select range between last clicked row and current clicked row\n          const rangeStart = Math.min(lastSelectedRowIndex, rowIndex);\n          const rangeEnd = Math.max(lastSelectedRowIndex, rowIndex);\n          const newSelectedRows: Array<number> = [];\n          for (let i = rangeStart; i <= rangeEnd; i++) {\n            if (!selectedRows.includes(i)) {\n              newSelectedRows.push(i);\n            }\n          }\n\n          let selectedItemsParams: Array<number> = [\n            ...selectedItems,\n            ...newSelectedRows,\n          ];\n\n          setSelectedRows([...selectedRows, ...newSelectedRows]);\n          const selectedRowData = rows.filter((d, idx) =>\n            selectedItemsParams.includes(idx)\n          );\n          const { newSelectedRowsFiltered } =\n            getIndexAndData(selectedRowData);\n\n          setSelectedItems(newSelectedRowsFiltered);\n          // onSelectionChangeRef.current(data, rowIndex);\n        } else if (event.ctrlKey || event.metaKey) {\n          // Ctrl (or Cmd on macOS) + Click: Toggle row selection\n          if (selectedRows.includes(rowIndex) && !freeze) {\n            setSelectedRows(selectedRows.filter((i) => i !== rowIndex));\n            setSelectedItems((d) => {\n              d = d.filter((i) => i !== rowIndex);\n              return d;\n            });\n            let selectedItemsParams: Array<number> = selectedItems.filter(\n              (i) => i !== rowIndex\n            );\n\n            setSelectedItems(selectedItemsParams);\n            // onSelectionChangeRef.current(selectedRowData, rowIndex);\n          } else {\n            setSelectedRows([...selectedRows, rowIndex]);\n            setSelectedItems((d) => {\n              d.push(rowIndex);\n              return d;\n            });\n            let selectedItemsParams: Array<number> = [\n              ...selectedItems,\n              rowIndex,\n            ];\n\n            setSelectedItems(selectedItemsParams);\n            // onSelectionChangeRef.current(selectedRowData, rowIndex);\n          }\n        } else {\n          // Regular click in multiple selection mode: Single click to select a row\n          setSelectedRows([rowIndex]);\n        }\n      }\n      setLastSelectedRowIndex(rowIndex); // Update the last selected index\n    };\n    const handleRowDoubleClick = (\n      rowIndex: any,\n      event: React.MouseEvent<HTMLDivElement, MouseEvent>\n    ) => {\n      const row = rows[rowIndex];\n      if (unSelectable(row)) return;\n      if (!isRowSelectable) return;\n\n\n      let selectedItemsParams: Array<number> = [];\n      if (isMultipleSelect) {\n        selectedItemsParams = [...selectedItems, ...selectedRows];\n      } else {\n        selectedItemsParams = [rowIndex];\n      }\n\n\n      if (selectedItems.includes(rowIndex) && !freeze) {\n        selectedItemsParams = selectedItems.filter((i) => i !== rowIndex);\n        setSelectedItems(selectedItemsParams);\n        onSelectionChangeRef.current([], rowIndex);\n        return;\n      }\n\n      setSelectedItems(selectedItemsParams);\n      onSelectionChangeRef.current([row], rowIndex);\n    };\n    const handleKeyDown = (e: any) => {\n\n      if (e.key === \"ArrowDown\") {\n        e.preventDefault();\n        setSelectedRows((prevIndex: any) => {\n          if (prevIndex[prevIndex.length - 1] === null) return [0];\n          if (prevIndex[prevIndex.length - 1] >= rows.length - 1) {\n            return [rows.length - 1];\n          }\n          const newPrevIndex = prevIndex[prevIndex.length - 1] + 1;\n          const row = document.querySelector(`.row-${newPrevIndex}`);\n          row?.querySelector(\"input\")?.focus();\n\n          row?.scrollIntoView({ block: \"end\", behavior: \"smooth\" });\n          return [newPrevIndex];\n        });\n      } else if (e.key === \"ArrowUp\") {\n        e.preventDefault();\n\n        if (selectedRows[selectedRows.length - 1] === 0) {\n          const input = document.querySelector(\n            inputsearchselector\n          ) as HTMLInputElement;\n          if (input && input.tagName === \"INPUT\") {\n            input?.focus();\n          } else if (input && input.tagName === \"DIV\") {\n            const divInput = document.querySelector(\n              `${inputsearchselector} input`\n            ) as HTMLInputElement;\n\n            divInput?.focus();\n          }\n        }\n\n        setSelectedRows((prevIndex: any) => {\n          if (prevIndex[prevIndex.length - 1] === 0) return [0];\n          const newPrevIndex = prevIndex[prevIndex.length - 1] - 1;\n          const row = document.querySelector(`.row-${newPrevIndex}`);\n\n          row?.scrollIntoView({ block: \"end\", behavior: \"smooth\" });\n          row?.querySelector(\"input\")?.focus();\n          return [newPrevIndex];\n        });\n      }\n\n    };\n    const handleRowKeyDown = (e: any) => {\n      e.stopPropagation()\n\n      if (e.key === \"Enter\" || e.key === \"NumpadEnter\") {\n        e.preventDefault();\n        if (!isRowSelectable) return;\n\n        let selectedItemsParams: Array<number> = [];\n        const rowIndex = selectedRows[selectedRows.length - 1];\n        if (isMultipleSelect) {\n          selectedItemsParams = [...selectedItems, ...selectedRows];\n        } else {\n          selectedItemsParams = [rowIndex];\n        }\n        const row = rows[selectedItemsParams[selectedItemsParams.length - 1]];\n        if (unSelectable(row)) {\n          return;\n        }\n\n        if (selectedItems.includes(rowIndex) && !freeze) {\n          selectedItemsParams = selectedItems.filter((i) => i !== rowIndex);\n          setSelectedItems(selectedItemsParams);\n          onSelectionChangeRef.current([], rowIndex);\n          return;\n        }\n\n        setSelectedItems(selectedItemsParams);\n        onSelectionChangeRef.current([row], rowIndex);\n      } else if (e.key === \"Delete\" || e.key === \"Backspace\") {\n        if (!isRowSelectable) return;\n        const rowIndex = selectedRows[selectedRows.length - 1];\n\n        const selectedRowData = rows.filter((d, idx) =>\n          selectedRows.includes(idx)\n        );\n\n        if (onKeyDownRef?.current) {\n          onKeyDownRef?.current(selectedRowData, e.key, rowIndex);\n        }\n      }\n    }\n    useImperativeHandle(UpwardTableRef, () => ({\n      resetTableSelected: () => {\n        setSelectedRows([0]);\n        setLastSelectedRowIndex(0);\n        setSelectedItems([]);\n        if (rows.length > 0) {\n          const row = document.querySelector(`.row-${0}`);\n          row?.scrollIntoView({ block: \"end\", behavior: \"smooth\" });\n        }\n      },\n      getSelectedIndex: () => {\n        return selectedItems[0];\n      },\n      getSelectedRows: () => {\n        return rows.filter((d, idx) => selectedItems.includes(idx));\n      },\n      getFirstColumn: () => {\n        return rows.filter((d, idx) => selectedItems.includes(idx));\n      },\n      getParentElement: () => {\n        return divRef.current\n      },\n      getSelectedRowsOnClick: () => {\n        return selectedRows[0];\n      },\n      setSelectRows: (indx: number) => {\n        return setSelectedItems([indx])\n      },\n    }));\n\n    const handleRightClick = (event: any, rowIndex: number) => {\n      event.preventDefault();\n      const rowSelected = rows[rowIndex]\n      if (onRightClick) {\n        onRightClick(rowSelected, event)\n      }\n    };\n\n\n\n    return (\n      <div\n        style={{\n          display: \"flex\",\n          justifyContent: \"center\",\n        }}\n        onKeyDown={handleKeyDown}\n      >\n        <div>\n          <div className=\"table-frame-color\">\n            <div\n              style={{\n                display: \"flex\",\n                flexDirection: \"column\",\n                width: `${width - 10}px        `,\n                height: `${height - 135}px`,\n                minHeight: \"270px\"\n              }}\n              className=\"table-frame\"\n            >\n              <div className=\"table-panel\">\n                <div ref={divRef} className={`grid-container `} tabIndex={-1}>\n                  <div\n                    className=\"grid-row grid-header\"\n                    style={{\n                      position: \"sticky\",\n                      zIndex: \"10\",\n                      top: \"-1px\",\n                      background: \"white\",\n                    }}\n                  >\n                    {columns.map((col: any, index: number) => (\n                      <div\n                        key={index}\n                        className={`grid-cell header-cell ${hoveredColumn === index ? `highlight-column` : \"\"\n                          }`} // Add the class if hovered\n                        style={{ width: col.width, height: \"20px\", }}\n                      >\n                        <input\n                          style={{ fontWeight: \"bold\" }}\n                          defaultValue={col.headerName}\n                          readOnly\n                          onChange={(e) => { }}\n                        />\n                        <div\n                          className=\"resize-handle\"\n                          onMouseDown={(e) => startResize(index, e)}\n                          onMouseEnter={(e) => {\n                            e.preventDefault();\n                            handleMouseEnter(index);\n                          }} // On hover\n                          onMouseLeave={(e) => {\n                            e.preventDefault();\n                            handleMouseLeave();\n                          }} // On mouse leave\n                        />\n                      </div>\n                    ))}\n                  </div>\n                  {pages[pageNumber]?.map((row: any, rowIndex: any) => (\n                    <div\n                      className={`grid-row row-${rowIndex}`} // Highlight selected row\n                      key={rowIndex}\n                      onClick={(e) => handleRowClick(rowIndex, e)}\n                      onDoubleClick={(e) => {\n                        // e.stopPropagation()\n\n                        if (_clickTimeout) {\n                          clearTimeout(_clickTimeout);\n                          _setClickTimeout(null);\n                        }\n\n                        const timeoutId: any = setTimeout(() => {\n                          handleRowDoubleClick(rowIndex, e)\n                        }, 200);\n\n                        _setClickTimeout(timeoutId);\n\n\n\n                      }}\n                      onKeyDown={(e) => {\n\n                        // e.stopPropagation()\n\n                        if (_clickTimeout) {\n                          clearTimeout(_clickTimeout);\n                          _setClickTimeout(null);\n                        }\n\n                        const timeoutId: any = setTimeout(() => {\n                          handleRowKeyDown(e)\n                        }, 200);\n\n                        _setClickTimeout(timeoutId);\n\n\n                      }}\n                      onContextMenu={(e) => handleRightClick(e, rowIndex)}\n                    >\n                      {columns.map((col: any, colIndex: number) => (\n                        <div\n                          key={colIndex}\n                          style={{ width: col.width }}\n                          className={`grid-cell ${hoveredColumn === colIndex ? `highlight-column` : \"\"} row-${rowIndex} col-${colIndex}`}\n                        >\n                          <input\n                            value={row[col.field]}\n                            onChange={(e) => { }}\n                            readOnly={dataReadOnly}\n                            className={`${selectedRows.includes(rowIndex)\n                              ? \"selected-row\"\n                              : \"\"\n                              } ${selectedItems.includes(rowIndex)\n                                ? \"selected-items\"\n                                : \"\"\n                              }\n                          ${col.type === \"number\" ? \"number\" : \"text\"}\n                          `}\n                          />\n                          <div\n                            className=\"resize-handle\"\n                            onMouseDown={(e) => {\n                              e.preventDefault();\n                              startResize(colIndex, e);\n                            }}\n                            onMouseEnter={(e) => {\n                              e.preventDefault();\n                              handleMouseEnter(colIndex);\n                            }} // On hover\n                            onMouseLeave={(e) => {\n                              e.preventDefault();\n                              handleMouseLeave();\n                            }} // On mouse leave\n                          />\n                        </div>\n                      ))}\n                    </div>\n                  ))}\n                </div>\n              </div>\n            </div>\n\n            {isLoading && <div className=\"table-loading\">\n              <div className=\"loader\"></div>\n            </div>}\n          </div>\n          <div className=\"table-panel-footer\" >\n            <div>Records : {rows?.length}</div>\n            <div><Pagination count={pages.length} onChange={(e, value) => {\n              setPageNumber(value - 1)\n            }} />\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n);\nfunction formatArrayIntoChunks(arr: Array<any>, chunkSize = 100) {\n  let result = [];\n\n  for (let i = 0; i < arr.length; i += chunkSize) {\n    // Use slice to create chunks of 'chunkSize'\n    result.push(arr.slice(i, i + chunkSize));\n  }\n  return result;\n}\nexport { UpwardTable, };\n","import { useEffect, useRef, useState, useId } from \"react\";\nimport \"../style/upwardtablemodel.css\";\nimport { TextInput } from \"../components/UpwardFields\";\nimport { UpwardTable } from \"../components/UpwardTable\";\nimport { throttle } from \"lodash\";\nimport { AxiosInstance } from \"axios\";\nimport { User } from \"../components/AuthContext\";\nimport { useMutation } from \"react-query\";\nimport { wait } from \"../lib/wait\";\nimport { IconButton, Modal } from '@mui/material'\nimport CloseIcon from \"@mui/icons-material/Close\";\n\n\ninterface UseUpwardTableModalProps {\n  myAxios: AxiosInstance;\n  user: User | null;\n  column: Array<any>;\n  link: {\n    url: string;\n    queryUrlName: string;\n  };\n  onSelectionChange: (selectedRow: any) => void;\n  onModalClose?: () => void;\n  responseDataKey: string;\n}\nexport const useUpwardTableModal = ({\n  myAxios,\n  user,\n  column,\n  link,\n  onSelectionChange,\n  responseDataKey,\n  onModalClose = () => { },\n}: UseUpwardTableModalProps) => {\n  const id = useId();\n  const inputSearchRef = useRef<HTMLInputElement>(null);\n  const tableRef = useRef<any>(null);\n  const parentRef = useRef<any>(null);\n  const [show, setShowModal] = useState(false);\n  const [rows, setRows] = useState([]);\n  const { isLoading, mutate } = useMutation({\n    mutationKey: id,\n    mutationFn: async (variable: any) =>\n      await myAxios.get(\n        `${link?.url}?${link?.queryUrlName}=${variable.search}`,\n        {\n          headers: {\n            Authorization: `Bearer ${user?.accessToken}`,\n          },\n        }\n      ),\n    onSuccess: (res) => {\n      const response = res as any;\n      setRows(response.data[responseDataKey]);\n    },\n  });\n  const performSearch = (query: string) => {\n    if (query === \"\") {\n      mutate({ search: query });\n    }\n  };\n  // Throttle the search function to limit it to once every 500ms\n  const throttledSearch = throttle((query) => performSearch(query), 500)\n\n  const openModal = (search: string) => {\n    mutate({ search: search });\n    setShowModal(true);\n    setTimeout(() => {\n      if (inputSearchRef.current) {\n        inputSearchRef.current.value = search;\n      }\n      inputSearchRef.current?.focus();\n    }, 150);\n  };\n  const closeModal = () => {\n    setShowModal(false);\n    onModalClose();\n  };\n\n  const width = 460;\n  const height = 530;\n\n  useEffect(() => {\n    if (show && parentRef.current) {\n      wait(1050).then(() => {\n        parentRef.current?.focus();\n      })\n    }\n  }, [show, parentRef]);\n\n  const ModalComponent = (\n    <Modal\n      open={show}\n      onClose={() => {\n        setShowModal(false);\n      }}\n      aria-labelledby=\"modal-modal-title\"\n      aria-describedby=\"modal-modal-description\"\n    >\n      <div style={{\n        position: \"absolute\",\n        top: \"50%\",\n        left: \"50%\",\n        transform: \"translate(-50%, -50%)\",\n        width: \"auto\",\n        background: \"#fff\",\n        paddingTop: \"30px\",\n        paddingBottom: \"20px\",\n        paddingLeft: \"10px\",\n        paddingRight: \"10px\"\n      }}>\n        <div >\n          <TextInput\n            label={{ style: { display: \"none\" } }}\n            input={{\n              className: \"search-input-up-on-key-down\",\n              type: \"text\",\n              style: { width: \"100%\", marginBottom: \"20px\" },\n              onChange: (e) => {\n                e.preventDefault();\n                throttledSearch(e.currentTarget.value);\n              },\n              onKeyDown: (e) => {\n                if (e.key === \"Enter\" || e.key === \"NumpadEnter\") {\n                  e.preventDefault();\n                  mutate({ search: (e.target as any).value });\n                }\n                if (e.key === \"ArrowDown\") {\n                  e.preventDefault();\n                  const datagridview = tableRef.current.getParentElement().querySelector(\n                    `.grid-container .row-0.col-0 input`\n                  ) as HTMLDivElement;\n                  setTimeout(() => {\n                    if (datagridview)\n                      datagridview.focus();\n                  }, 100)\n                }\n              },\n            }}\n            inputRef={inputSearchRef}\n          />\n          <UpwardTable\n            ref={tableRef}\n            rows={rows}\n            column={column.filter((itm) => !itm.hide)}\n            width={width}\n            height={height}\n            dataReadOnly={true}\n            onSelectionChange={onSelectionChange}\n          />\n\n          <IconButton\n            style={{\n              position: \"absolute\",\n              top: \"5px\",\n              right: \"10px\",\n            }}\n            aria-label=\"search-client\"\n            onClick={closeModal}\n          >\n            <CloseIcon style={{ fontSize: \"15px\" }} />\n          </IconButton>\n\n\n        </div>\n      </div>\n\n    </Modal>\n\n  );\n\n  return {\n    Modal: ModalComponent,\n    openModal,\n    closeModal,\n    isLoading,\n  };\n};\n","import React, { useContext, useState, useRef, useEffect, useCallback, forwardRef, useImperativeHandle } from \"react\";\nimport {\n  Box,\n  Typography,\n  Button,\n  IconButton,\n  Modal,\n  MenuItem,\n  Menu,\n} from \"@mui/material\";\nimport AddIcon from \"@mui/icons-material/Add\";\nimport { useMutation, useQuery } from \"react-query\";\nimport Swal from \"sweetalert2\";\nimport SaveIcon from \"@mui/icons-material/Save\";\nimport { AuthContext } from \"../../../../components/AuthContext\";\nimport PersonSearchIcon from \"@mui/icons-material/PersonSearch\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport { flushSync } from \"react-dom\";\nimport { LoadingButton } from \"@mui/lab\";\nimport RestartAltIcon from \"@mui/icons-material/RestartAlt\";\nimport DownloadIcon from \"@mui/icons-material/Download\";\nimport {\n  codeCondfirmationAlert,\n  saveCondfirmationAlert,\n} from \"../../../../lib/confirmationAlert\";\nimport DriveFolderUploadIcon from \"@mui/icons-material/DriveFolderUpload\";\nimport { DisplayFile, checkFile } from \"../Claims/Claims\";\nimport ReactDOMServer from \"react-dom/server\";\nimport { grey } from \"@mui/material/colors\";\nimport { useUpwardTableModal } from \"../../../../hooks/useUpwardTableModal\";\nimport { TextAreaInput, TextInput } from \"../../../../components/UpwardFields\";\nimport AccountBalanceIcon from '@mui/icons-material/AccountBalance';\nimport { NumericFormat } from \"react-number-format\";\nimport { format } from \"date-fns\";\nimport PageHelmet from \"../../../../components/Helmet\";\nimport { wait } from \"@testing-library/user-event/dist/utils\";\nimport SearchIcon from '@mui/icons-material/Search';\n\n\n\nexport const reducer = (state: any, action: any) => {\n  switch (action.type) {\n    case \"UPDATE_FIELD\":\n      return {\n        ...state,\n        [action.field]: action.value,\n      };\n    default:\n      return state;\n  }\n};\nexport const pdcColumn = [\n  { key: \"Check_No\", label: \"Check No.\", width: 150 },\n  { key: \"Check_Date\", label: \"Check Date\", width: 150 },\n  { key: \"Check_Amnt\", label: \"Amount\", width: 150, type: \"number\" },\n  { key: \"BankName\", label: \"Bank\", width: 200 },\n  { key: \"Branch\", label: \"Branch\", width: 200 },\n  {\n    key: \"Check_Remarks\",\n    label: \"Checked Remarks\",\n    width: 350,\n  },\n  { key: \"Deposit_Slip\", label: \"Deposit Slip\", width: 150 },\n  { key: \"DateDeposit\", label: \"Date Deposit\", width: 150 },\n  { key: \"OR_No\", label: \"OR Num\", width: 150 },\n  { key: \"BankCode\", label: \"Bank Code\", width: 150, hide: true },\n];\nexport const pdcSearchColumn = [\n  { field: \"Date\", headerName: \"Date Received\", width: 160 },\n  { field: \"Ref_No\", headerName: \"Ref No.\", width: 160 },\n  {\n    field: \"Name\",\n    headerName: \"Name\",\n    flex: 1,\n  },\n];\nexport const pdcBanksColumn = [\n  { field: \"Bank_Code\", headerName: \"Code\", width: 130 },\n  { field: \"Bank\", headerName: \"Bank Name\", flex: 1 },\n];\nconst queryKey = \"pdc\";\n\nexport default function PostDateChecks() {\n  const tableRef = useRef<any>(null);\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\n  const open = Boolean(anchorEl);\n  const handleClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n    setAnchorEl(event.currentTarget);\n  };\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n  const [isDragging, setIsDragging] = useState(false);\n  const [selectedFiles, setSelectedFiles] = useState<Array<File>>([]);\n  const [openPdcInputModal, setOpenPdcInputModal] = useState(false);\n  const [showModal, setShowModal] = useState(false);\n\n\n\n  const searchInputRef = useRef<HTMLInputElement>(null);\n\n  const [hasSelectedRow, setHasSelectedRow] = useState(null)\n  const [pdcMode, setPdcMode] = useState('')\n\n  const { myAxios, user } = useContext(AuthContext);\n  const searchRef = useRef<HTMLInputElement>(null);\n\n  // pdc form save button\n  const fileInputRef = useRef<HTMLInputElement>(null);\n  const savePDCButtonRef = useRef<HTMLButtonElement>(null);\n\n\n  //check modal refs\n\n  const checkModalSaveButton = useRef<HTMLButtonElement>(null);\n  const checkModalSaveButtonActionRef = useRef<any>(null);\n  // search modal auto focus on load\n\n\n  // modal \n  const _checknoRef = useRef<HTMLInputElement>(null);\n  const _bankRef = useRef<HTMLInputElement>(null);\n  const _branchRef = useRef<HTMLInputElement>(null);\n  const _remarksRef = useRef<HTMLTextAreaElement>(null);\n  const _chekdateRef = useRef<HTMLInputElement>(null);\n  const _amountRef = useRef<HTMLInputElement>(null);\n  const _checkcountRef = useRef<HTMLInputElement>(null);\n  const _bankCode = useRef('');\n  const _slipCodeRef = useRef('');\n  const _slipDateRef = useRef('');\n  const _checkOR = useRef('');\n\n  const addRefButton = useRef<HTMLButtonElement>(null);\n\n\n  const subRefNoRef = useRef('');\n  const PNoRef = useRef('');\n  const subAccountRef = useRef('');\n\n  const refNoRef = useRef<HTMLInputElement>(null);\n  const dateRef = useRef<HTMLInputElement>(null);\n  const remakrsRef = useRef<HTMLTextAreaElement>(null);\n  const pnRef = useRef<HTMLInputElement>(null);\n  const branchRef = useRef<HTMLInputElement>(null);\n  const clientnameRef = useRef<HTMLTextAreaElement>(null);\n\n\n  const { isLoading: newRefNumberLoading, refetch: refetchNewRefNumber } =\n    useQuery({\n      queryKey: \"new-ref-number\",\n      queryFn: async () => {\n        return await myAxios.get(\"/task/accounting/pdc-new-ref-number\", {\n          headers: {\n            Authorization: `Bearer ${user?.accessToken}`,\n          },\n        });\n      },\n      refetchOnWindowFocus: false,\n      onSuccess: (res) => {\n        const response = res as any;\n        wait(100).then(() => {\n          subRefNoRef.current = response.data.RefNo[0].pdcID\n          if (refNoRef.current) {\n            refNoRef.current.value = response.data.RefNo[0].pdcID\n          }\n        })\n\n      },\n    });\n\n  const { mutate, isLoading: loadingAddNew } = useMutation({\n    mutationKey: queryKey,\n    mutationFn: async (variables: any) => {\n      if (pdcMode === \"update\") {\n        delete variables.mode;\n        return await myAxios.post(\"/task/accounting/update-pdc\", variables, {\n          headers: {\n            Authorization: `Bearer ${user?.accessToken}`,\n          },\n        });\n      }\n      delete variables.mode;\n      return await myAxios.post(\"/task/accounting/add-pdc\", variables, {\n        headers: {\n          Authorization: `Bearer ${user?.accessToken}`,\n        },\n      });\n    },\n    onSuccess: (res) => {\n      if (res.data.success) {\n        resetPDC()\n        return Swal.fire({\n          position: \"center\",\n          icon: \"success\",\n          title: res.data.message,\n          showConfirmButton: false,\n          timer: 1500,\n        });\n      }\n\n      Swal.fire({\n        position: \"center\",\n        icon: \"error\",\n        title: res.data.message,\n        showConfirmButton: false,\n        timer: 1500,\n      });\n    },\n  });\n  //selecte search\n\n  const { mutate: mutateSelectedSearch, isLoading: isLoadingSelectedSearch } =\n    useMutation({\n      mutationKey: queryKey,\n      mutationFn: async (variables: any) =>\n        await myAxios.post(\"/task/accounting/get-search-pdc-check\", variables, {\n          headers: {\n            Authorization: `Bearer ${user?.accessToken}`,\n          },\n        }),\n      onSuccess: async (res) => {\n        if (!res?.data.success) {\n          return alert(`Error : ${res?.data.message}`);\n        }\n\n        const response = res as any;\n        const Ref_No = response.data.getSearchPDCCheck[0].Ref_No;\n        if (response.data.upload[0]) {\n          const uploadFiles = JSON.parse(response.data.upload[0]?.upload);\n          const newObjContainerBasic = await formatDataToDocument(\n            uploadFiles,\n            `${process.env.REACT_APP_IMAGE_URL}pdc/${Ref_No}`\n          );\n          const fileSelected = await Promise.all(newObjContainerBasic);\n          setSelectedFiles(fileSelected);\n        }\n        async function formatDataToDocument(\n          dataDocument: Array<any>,\n          url: string\n        ) {\n          const newObjContainer: Array<any> = [];\n          for (let index = 0; index < dataDocument.length; index++) {\n            const basicItem = dataDocument[index];\n            const mainURL = `${url}/${basicItem.uniqueFilename}`;\n            const response = await fetch(mainURL);\n            const blob = await response.blob();\n            const file = new File([blob], basicItem.fileName, {\n              type: basicItem.fileType,\n            });\n            const reader = new FileReader();\n            newObjContainer.push(\n              new Promise((resolve, reject) => {\n                reader.onload = function (event) {\n                  resolve(file);\n                };\n                reader.onerror = function (event) {\n                  reject(new Error(\"Error reading file: \" + file.name));\n                };\n                reader.readAsDataURL(file);\n              })\n            );\n          }\n          return newObjContainer;\n        }\n\n        tableRef.current.setDataFormated(response.data.getSearchPDCCheck)\n\n        if (refNoRef.current) {\n          refNoRef.current.value = response.data.getSearchPDCCheck[0].Ref_No\n        }\n        if (clientnameRef.current) {\n          clientnameRef.current.value = response.data.getSearchPDCCheck[0].Name\n        }\n        if (dateRef.current) {\n          dateRef.current.value = response.data.getSearchPDCCheck[0].Date\n        }\n        if (pnRef.current) {\n          pnRef.current.value = response.data.getSearchPDCCheck[0].PNo\n        }\n        if (branchRef.current) {\n          branchRef.current.value = response.data.getSearchPDCCheck[0].Acronym\n        }\n        if (remakrsRef.current) {\n          remakrsRef.current.value = response.data.getSearchPDCCheck[0].Remarks\n        }\n        PNoRef.current = response.data.getSearchPDCCheck[0].IDNo\n        subAccountRef.current = response.data.getSearchPDCCheck[0].sub_account\n\n\n\n      },\n    });\n\n  // policy ids search table modal\n  const {\n    Modal: ModalSearchPdcIDs,\n    closeModal: closeModalSearchPdcIDs,\n    openModal: openModalSearchPdcIDs,\n    isLoading: isLoadingModalSearchPdcIDs,\n  } = useUpwardTableModal({\n    myAxios,\n    user,\n    link: {\n      url: \"/task/accounting/search-pdc-policy-id\",\n      queryUrlName: \"searchPdcPolicyIds\",\n    },\n    column: [\n      { field: \"Type\", headerName: \"Type\", width: 130 },\n      { field: \"IDNo\", headerName: \"ID No.\", width: 200 },\n      { field: \"chassis\", headerName: \"Chassis No.\", width: 200, hide: true },\n      {\n        field: \"Name\",\n        headerName: \"Name\",\n        width: 350,\n      },\n      {\n        field: \"ID\",\n        headerName: \"ID\",\n        width: 300,\n        hide: true,\n      },\n      {\n        field: \"client_id\",\n        headerName: \"client_id\",\n        width: 200,\n        hide: true,\n      },\n    ],\n    onSelectionChange: (selectedRow: any) => {\n      if (selectedRow.length > 0) {\n\n        wait(100).then(() => {\n          PNoRef.current = selectedRow[0].IDNo\n          subAccountRef.current = selectedRow[0].sub_account\n          if (pnRef.current) {\n            pnRef.current.value = selectedRow[0].client_id\n          }\n          if (clientnameRef.current) {\n            clientnameRef.current.value = selectedRow[0].Name\n          }\n          if (branchRef.current) {\n            branchRef.current.value = selectedRow[0].Acronym\n          }\n          if (remakrsRef.current) {\n            remakrsRef.current.value = selectedRow[0].Remarks || \"\"\n          }\n        })\n\n        closeModalSearchPdcIDs();\n\n      }\n    },\n\n    responseDataKey: \"clientsId\",\n  });\n\n  // bank search table modal\n  const {\n    Modal: ModalSearchBanks,\n    closeModal: closeModalSearchBanks,\n    openModal: openModalSearchBanks,\n    isLoading: isLoadingModalSearchbanks,\n  } = useUpwardTableModal({\n    myAxios,\n    user,\n    link: {\n      url: \"/task/accounting/search-pdc-banks\",\n      queryUrlName: \"searchPdcBanks\",\n    },\n    column: [\n      { field: \"Bank_Code\", headerName: \"Code\", width: 100 },\n      { field: \"Bank\", headerName: \"Bank Name\", width: 350 },\n    ],\n    onSelectionChange: (selectedRow: any) => {\n      if (selectedRow.length > 0) {\n        setTimeout(() => {\n          _bankCode.current = selectedRow[0].Bank_Code\n          if (_bankRef.current) {\n            _bankRef.current.value = selectedRow[0].Bank\n          }\n        }, 100)\n\n        closeModalSearchBanks();\n        setOpenPdcInputModal(true);\n        setTimeout(() => {\n          _branchRef.current?.focus()\n        }, 100);\n      }\n    },\n    onModalClose: () => {\n      setTimeout(() => {\n        setOpenPdcInputModal(true);\n      }, 100);\n    },\n    responseDataKey: \"pdcBanks\",\n  });\n  // pdc search table modal\n  const {\n    Modal: UpwardPDCModal,\n    closeModal: closeUpwardPDCModal,\n    openModal: openUpwardPDCModal,\n    isLoading: isLoadingModalSearchPDC,\n  } = useUpwardTableModal({\n    myAxios,\n    user,\n    column: [\n      { field: \"Date\", headerName: \"Date Received\", width: 90 },\n      { field: \"Ref_No\", headerName: \"Ref No.\", width: 80 },\n      {\n        field: \"Name\",\n        headerName: \"Name\",\n        width: 320,\n      },\n    ],\n    link: {\n      url: \"/task/accounting/search-pdc\",\n      queryUrlName: \"searchPDCInput\",\n    },\n    onSelectionChange: (selectedRow: any) => {\n      if (selectedRow.length > 0) {\n        mutateSelectedSearch({ ref_no: selectedRow[0].Ref_No });\n        setPdcMode('update')\n        closeUpwardPDCModal();\n        if (searchRef.current) {\n          searchRef.current?.focus();\n        }\n      }\n    },\n    responseDataKey: \"searchPDC\",\n  });\n\n  const handleOnSave = useCallback(async (e: any) => {\n    const pdcTableData = tableRef.current.getDataFormatted()\n\n    if (pnRef.current && pnRef.current.value === \"\") {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: \"Please provide loan information!\",\n        timer: 1500,\n      }).then(() => {\n        setTimeout(() => {\n          pnRef.current?.click();\n        }, 350);\n      });\n    }\n    if (pdcTableData.length <= 0) {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: \"Please provide entry!\",\n        timer: 1500,\n      }).then(() => {\n        setOpenPdcInputModal(true);\n      });\n    }\n\n    const filePromises: Array<any> = [];\n    function fileTransfer(filePromises: Array<any>) {\n      const files = selectedFiles;\n      if (files.length > 0) {\n        for (let i = 0; i < files.length; i++) {\n          const file = files[i];\n          const reader = new FileReader();\n          filePromises.push(\n            new Promise((resolve, reject) => {\n              reader.onload = function (event) {\n                resolve({\n                  datakey: \"pdc_file\",\n                  fileName: file.name,\n                  fileContent: event.target?.result,\n                  fileType: file.type,\n                  file,\n                });\n              };\n              reader.onerror = function (event) {\n                reject(new Error(\"Error reading file: \" + file.name));\n              };\n              reader.readAsDataURL(file);\n            })\n          );\n        }\n      }\n    }\n    fileTransfer(filePromises);\n    const fileToSave = await Promise.all(filePromises);\n    const stateSubmited = {\n      Ref_No: refNoRef.current?.value,\n      PNo: pnRef.current?.value,\n      IDNo: PNoRef.current,\n      Date: dateRef.current?.value,\n      Name: clientnameRef.current?.value,\n      Remarks: remakrsRef.current?.value,\n      Branch: branchRef.current?.value,\n      checks: JSON.stringify(pdcTableData),\n    };\n    if (pdcMode === \"update\") {\n      codeCondfirmationAlert({\n        isUpdate: true,\n        cb: (userCodeConfirmation) => {\n          mutate({ ...stateSubmited, userCodeConfirmation, fileToSave });\n        },\n      });\n    } else {\n      saveCondfirmationAlert({\n        isConfirm: () => {\n          mutate({ ...stateSubmited, fileToSave });\n        },\n      });\n    }\n  }, [mutate, selectedFiles, pdcMode])\n\n  const handleDragLeave = (e: React.DragEvent<HTMLDivElement>) => {\n    e.preventDefault();\n    setIsDragging(false);\n  };\n  const handleDragEnter = (e: React.DragEvent<HTMLDivElement>) => {\n    e.preventDefault();\n    setIsDragging(true);\n  };\n  const handleDrop = (e: React.DragEvent<HTMLDivElement>) => {\n    e.preventDefault();\n    const fileList = e.dataTransfer.files;\n    const files = Array.from(fileList);\n    const newFiles = [...selectedFiles, ...files];\n    setIsDragging(false);\n    if (checkFile(newFiles)) {\n      fileInputRef.current?.click();\n      return alert(\"file is not valid Extention!\");\n    } else {\n      setSelectedFiles(newFiles);\n    }\n  };\n  const clickPDCReceipt = () => {\n    const pdcTableData = tableRef.current.getDataFormatted()\n\n    flushSync(() => {\n      const state = {\n        Ref_No: refNoRef.current?.value,\n        PNo: pnRef.current?.value,\n        IDNo: PNoRef.current,\n        Date: dateRef.current?.value,\n        Name: clientnameRef.current?.value,\n        Remarks: remakrsRef.current?.value,\n        Branch: branchRef.current?.value,\n      };\n\n      localStorage.removeItem(\"printString\");\n      localStorage.setItem(\"dataString\", JSON.stringify(pdcTableData));\n      localStorage.setItem(\"paper-width\", \"8.5in\");\n      localStorage.setItem(\"paper-height\", \"11in\");\n      localStorage.setItem(\"module\", \"pdc\");\n      localStorage.setItem(\"state\", JSON.stringify(state));\n      localStorage.setItem(\n        \"column\",\n        JSON.stringify([\n          { datakey: \"Check_No\", header: \"CHECK NO\", width: \"80px\" },\n          { datakey: \"Check_Date\", header: \"DATE\", width: \"130px\" },\n          { datakey: \"BankName\", header: \"BANK\", width: \"240px\" },\n          { datakey: \"Check_Amnt\", header: \"AMOUNT\", width: \"70px\" },\n          { datakey: \"SEQ\", header: \"SEQ\", width: \"30px\" },\n        ])\n      );\n\n      localStorage.setItem(\n        \"title\",\n        user?.department === \"UMIS\"\n          ? \"UPWARD MANAGEMENT INSURANCE SERVICES\\n Post Date Checks Receipt\"\n          : \"UPWARD CONSULTANCY SERVICES AND MANAGEMENT INC.\\n Post Date Checks Receipt\"\n      );\n    });\n    window.open(\"/dashboard/print\", \"_blank\");\n  };\n  const clickPDCLabeling = () => {\n    let printString = () => {\n      return (\n        <div>\n          <p\n            style={{\n              color: \"#d1d5db\",\n              fontSize: \"11px\",\n              textAlign: \"center\",\n              padding: 0,\n              marginTop: \"8px\",\n              marginBottom: 0,\n            }}\n          >\n            UCSMI\n          </p>\n          <p\n            style={{\n              color: \"#d1d5db\",\n              fontSize: \"11px\",\n              textAlign: \"center\",\n              padding: 0,\n              margin: 0,\n            }}\n          >\n            {clientnameRef.current?.value}\n          </p>\n          <p\n            style={{\n              color: \"#d1d5db\",\n              fontSize: \"11px\",\n              textAlign: \"center\",\n              padding: 0,\n              margin: 0,\n            }}\n          >\n            {PNoRef.current}\n          </p>\n          <p\n            style={{\n              color: \"#d1d5db\",\n              fontSize: \"11px\",\n              textAlign: \"center\",\n              padding: 0,\n              margin: \"20px\",\n            }}\n          >\n            {refNoRef.current?.value}\n          </p>\n        </div>\n      );\n    };\n\n    flushSync(() => {\n      const elementString = ReactDOMServer.renderToString(printString());\n      localStorage.setItem(\"printString\", elementString);\n      localStorage.removeItem(\"dataString\");\n      localStorage.setItem(\"paper-width\", \"8.5in\");\n      localStorage.setItem(\"paper-height\", \"11in\");\n    });\n    window.open(\"/dashboard/print\", \"_blank\");\n  };\n\n  function resetPDC() {\n    setPdcMode('')\n    tableRef.current.setSelectedRow(null)\n    tableRef.current.setData([])\n    refetchNewRefNumber()\n\n    if (dateRef.current) {\n      dateRef.current.value = format(new Date(), \"yyyy-MM-dd\")\n    }\n    if (remakrsRef.current) {\n      remakrsRef.current.value = ''\n    }\n    if (pnRef.current) {\n      pnRef.current.value = ''\n    }\n    if (branchRef.current) {\n      branchRef.current.value = ''\n    }\n    if (clientnameRef.current) {\n      clientnameRef.current.value = ''\n    }\n\n\n\n  }\n  function formatNumber(num: number) {\n    return (num || 0).toLocaleString(\"en-US\", {\n      minimumFractionDigits: 2,\n      maximumFractionDigits: 2,\n    })\n  }\n  function handleCheckDetailsSave() {\n\n    function incrementStringNumbers(\n      str: string,\n      increment: number\n    ) {\n      let num = parseInt(str);\n      num = num + increment;\n      return num.toString().padStart(str.length, \"0\");\n    }\n    function incrementDate(dateString: any, i: number) {\n      const currentDate = new Date(\n        dateString\n      );\n      currentDate.setMonth(currentDate.getMonth() + i);\n\n      return format(currentDate, 'yyyy-MM-dd')\n    }\n    function isValidDate(dateString: string): boolean {\n      const date = new Date(dateString);\n      return date instanceof Date && !isNaN(date.getTime());\n    }\n\n    if (\n      _checknoRef.current &&\n      _bankRef.current &&\n      _branchRef.current &&\n      _remarksRef.current &&\n      _chekdateRef.current &&\n      _amountRef.current &&\n      _checkcountRef.current\n    ) {\n\n\n      const tableRows = tableRef.current.getDataFormatted()\n      const selectedIndex = tableRef.current.getSelectedRow()\n\n      const filteredChecks = tableRows.filter((itm: any) => {\n        return _checknoRef.current && _checknoRef.current.value === itm.Check_No\n      })\n\n\n      if (filteredChecks.length > 0 && selectedIndex === null) {\n        alert('check no. is already exist!')\n        _checknoRef.current.focus()\n        return\n      }\n      if (_checknoRef.current.value === '') {\n        alert('check no. is required!')\n        _checknoRef.current.focus()\n        return\n      } else if (_bankRef.current.value === '') {\n        alert('bank is required!')\n        _bankRef.current.focus()\n        return\n      } else if (_branchRef.current.value === '') {\n        alert('branch is required!')\n        _branchRef.current.focus()\n        return\n      } else if (!isValidDate(_chekdateRef.current.value)) {\n        alert('invalid date!')\n        _chekdateRef.current.focus()\n        return\n      } else if (parseFloat(_amountRef.current.value.replace(/,/g, '')) <= 0) {\n        alert('amount must be greater than 0!')\n        _amountRef.current.focus()\n        return\n      }\n\n\n\n      if (\n        _checknoRef.current &&\n        _bankRef.current &&\n        _branchRef.current &&\n        _remarksRef.current &&\n        _chekdateRef.current &&\n        _amountRef.current &&\n        _checkcountRef.current\n      ) {\n\n\n\n        if (selectedIndex) {\n          const selectedRow = tableRef.current.getData()\n          selectedRow[selectedIndex][0] = _checknoRef.current.value\n          selectedRow[selectedIndex][1] = _chekdateRef.current.value\n          selectedRow[selectedIndex][2] = _amountRef.current.value\n          selectedRow[selectedIndex][3] = _bankRef.current.value\n          selectedRow[selectedIndex][4] = _branchRef.current.value\n          selectedRow[selectedIndex][5] = _remarksRef.current.value\n          selectedRow[selectedIndex][6] = _slipCodeRef.current\n          selectedRow[selectedIndex][7] = _slipDateRef.current\n          selectedRow[selectedIndex][8] = _checkOR.current\n          selectedRow[selectedIndex][9] = _bankCode.current\n          tableRef.current.setData(selectedRow)\n          tableRef.current.setSelectedRow(null)\n          setHasSelectedRow(null)\n        } else {\n          const newData: any = []\n          for (\n            let i = 0;\n            i < parseInt(_checkcountRef.current.value);\n            i++\n          ) {\n            const data: any = {\n              Check_No: incrementStringNumbers(\n                _checknoRef.current.value,\n                i\n              ),\n              Check_Date: incrementDate(_chekdateRef.current.value, i),\n              Check_Amnt: _amountRef.current.value,\n              BankName: _bankRef.current.value,\n              BankCode: _bankCode.current,\n              Branch: _branchRef.current.value,\n              Check_Remarks: _remarksRef.current.value,\n              Deposit_Slip: _slipCodeRef.current,\n              DateDeposit: _slipDateRef.current,\n              OR_No: _checkOR.current,\n            };\n            newData.push(data)\n          }\n          tableRef.current.setDataFormated(newData)\n\n        }\n      }\n\n\n\n      setOpenPdcInputModal(false);\n    }\n\n  }\n\n\n  useEffect(() => {\n    const handleKeyDown = (event: any) => {\n      if ((event.ctrlKey || event.metaKey) && event.key === 's') {\n        event.preventDefault();\n        handleOnSave(event);\n      }\n    };\n\n    window.addEventListener('keydown', handleKeyDown);\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [handleOnSave]);\n\n  const isDisableField = pdcMode === \"\";\n\n\n\n\n  return (\n    <>\n      <PageHelmet title=\"PDC\" />\n      <div\n        style={{\n          width: \"100%\",\n          height: \"100%\",\n          flex: 1,\n          background: \"red\",\n          padding: \"10px\",\n          backgroundColor: \"#F1F1F1\",\n\n        }}\n      >\n\n        {ModalSearchBanks}\n        {UpwardPDCModal}\n        {ModalSearchPdcIDs}\n        <Box\n          sx={(theme) => ({\n            display: \"flex\",\n            alignItems: \"center\",\n            columnGap: \"20px\",\n            [theme.breakpoints.down(\"sm\")]: {\n              flexDirection: \"column\",\n              alignItems: \"flex-start\",\n              flex: 1,\n              marginBottom: \"15px\",\n            },\n          })}\n        >\n          <div\n            style={{\n              display: \"flex\",\n              alignItems: \"center\",\n              columnGap: \"5px\",\n              marginBottom: \"15px\",\n            }}\n          >\n            {isLoadingModalSearchPDC ? (\n              <LoadingButton loading={isLoadingModalSearchPDC} />\n            ) : (\n              <TextInput\n                label={{\n                  title: \"Search: \",\n                  style: {\n                    fontSize: \"12px\",\n                    fontWeight: \"bold\",\n                    width: \"50px\",\n                  },\n                }}\n                input={{\n                  className: \"search-input-up-on-key-down\",\n                  type: \"search\",\n                  onKeyDown: (e) => {\n                    if (e.key === \"Enter\" || e.key === \"NumpadEnter\") {\n                      e.preventDefault();\n                      openUpwardPDCModal(e.currentTarget.value);\n                    }\n                  },\n                  style: { width: \"500px\" },\n                }}\n\n                icon={<SearchIcon sx={{ fontSize: \"18px\" }} />}\n                onIconClick={(e) => {\n                  e.preventDefault()\n                  if (searchInputRef.current)\n                    openUpwardPDCModal(searchInputRef.current.value);\n\n                }}\n                inputRef={searchInputRef}\n              />\n            )}\n            {pdcMode === \"\" && (\n              <Button\n                sx={{\n                  height: \"30px\",\n                  fontSize: \"11px\",\n                }}\n                variant=\"contained\"\n                startIcon={<AddIcon sx={{ width: 15, height: 15 }} />}\n                id=\"entry-header-save-button\"\n                color=\"primary\"\n                onClick={() => {\n\n                  setPdcMode('add')\n                }}\n              >\n                New\n              </Button>\n            )}\n            <LoadingButton\n              sx={{\n                height: \"30px\",\n                fontSize: \"11px\",\n              }}\n              ref={savePDCButtonRef}\n              id=\"save-entry-header\"\n              color=\"success\"\n              variant=\"contained\"\n              type=\"submit\"\n              onClick={handleOnSave}\n              disabled={pdcMode === \"\"}\n              loading={loadingAddNew}\n              startIcon={<SaveIcon sx={{ width: 15, height: 15 }} />}\n            >\n              Save\n            </LoadingButton>\n            {(pdcMode === \"add\" || pdcMode === \"update\") && (\n              <Button\n                sx={{\n                  height: \"30px\",\n                  fontSize: \"11px\",\n                }}\n                variant=\"contained\"\n                startIcon={<CloseIcon sx={{ width: 15, height: 15 }} />}\n                onClick={() => {\n                  Swal.fire({\n                    title: \"Are you sure?\",\n                    text: \"You won't be able to revert this!\",\n                    icon: \"warning\",\n                    showCancelButton: true,\n                    confirmButtonColor: \"#3085d6\",\n                    cancelButtonColor: \"#d33\",\n                    confirmButtonText: \"Yes, cancel it!\",\n                  }).then((result) => {\n                    if (result.isConfirmed) {\n\n                    }\n                  });\n                }}\n                color=\"error\"\n              >\n                Cancel\n              </Button>\n            )}\n            <Button\n              sx={{\n                height: \"30px\",\n                fontSize: \"11px\",\n              }}\n              disabled={pdcMode === \"\"}\n              variant=\"contained\"\n              startIcon={<AddIcon sx={{ width: 15, height: 15 }} />}\n              onClick={() => {\n                flushSync(() => {\n                  setOpenPdcInputModal(true);\n                });\n\n                wait(100).then(() => {\n                  const tableRows = tableRef.current.getDataFormatted()\n                  const getLastCheck_No: any = tableRows[tableRows.length - 1];\n                  if (_checknoRef.current) {\n                    _checknoRef.current.value = incrementCheckNo(\n                      getLastCheck_No?.Check_No\n                    );\n                  }\n\n                  tableRef.current.setSelectedRow(null)\n                  setHasSelectedRow(null)\n                  _checknoRef.current?.focus();\n                })\n              }}\n              ref={addRefButton}\n            >\n              Add Check\n            </Button>\n            <div>\n              <Button\n                disabled={pdcMode !== \"update\"}\n                id=\"basic-button\"\n                aria-controls={open ? \"basic-menu\" : undefined}\n                aria-haspopup=\"true\"\n                aria-expanded={open ? \"true\" : undefined}\n                onClick={handleClick}\n                sx={{\n                  height: \"30px\",\n                  fontSize: \"11px\",\n                  color: \"white\",\n                  backgroundColor: grey[600],\n                  \"&:hover\": {\n                    backgroundColor: grey[700],\n                  },\n                }}\n              >\n                Print\n              </Button>\n              <Menu\n                id=\"basic-menu\"\n                anchorEl={anchorEl}\n                open={open}\n                onClose={handleClose}\n                MenuListProps={{\n                  \"aria-labelledby\": \"basic-button\",\n                }}\n              >\n                <MenuItem onClick={clickPDCReceipt}>PDC Receipt</MenuItem>\n                <MenuItem onClick={clickPDCLabeling}>PDC Labeling</MenuItem>\n              </Menu>\n            </div>\n          </div>\n        </Box>\n        <form\n          onKeyDown={(e) => {\n            if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n              e.preventDefault();\n              return;\n            }\n          }}\n          style={{\n            marginBottom: \"20px\",\n          }}\n        >\n          <Box\n            sx={(theme) => ({\n              display: \"flex\",\n              columnGap: \"15px\",\n              flexDirection: \"row\",\n              [theme.breakpoints.down(\"md\")]: {\n                flexDirection: \"column\",\n                rowGap: \"10px\",\n              },\n            })}\n          >\n            <Box\n              sx={{\n                display: \"flex\",\n                gap: \"10px\",\n                width: \"100%\",\n              }}\n            >\n              <fieldset\n                style={\n                  {\n                    flex: 1,\n                    display: \"flex\",\n                    flexDirection: \"column\",\n                    gap: \"10px\",\n                    padding: \"15px\",\n                    border: \"1px solid #cbd5e1\",\n                    borderRadius: \"5px\",\n                  } as any\n                }\n              >\n                <div\n                  style={{\n                    display: \"flex\",\n                    gap: \"15px\",\n                  }}\n                >\n                  {newRefNumberLoading ? (\n                    <LoadingButton loading={newRefNumberLoading} />\n                  ) : (\n\n                    <TextInput\n                      label={{\n                        title: \"Reference No.\",\n                        style: {\n                          fontSize: \"12px\",\n                          fontWeight: \"bold\",\n                          width: \"100px\",\n                        },\n                      }}\n                      input={{\n                        disabled: isDisableField,\n                        type: \"text\",\n                        style: { width: \"300px\" },\n                        onKeyDown: (e) => {\n                          if (e.key === \"Enter\" || e.key === \"NumpadEnter\") {\n                            e.preventDefault();\n                            dateRef.current?.focus()\n                          }\n                        }\n                      }}\n                      inputRef={refNoRef}\n                      icon={<RestartAltIcon sx={{ fontSize: \"18px\", color: isDisableField ? \"gray\" : \"black\" }} />}\n\n                      disableIcon={isDisableField}\n                    />\n\n                  )}\n\n                  <TextInput\n                    label={{\n                      title: \"Date : \",\n                      style: {\n                        fontSize: \"12px\",\n                        fontWeight: \"bold\",\n                        width: \"50px\",\n                      },\n                    }}\n                    input={{\n                      disabled: isDisableField,\n                      type: \"date\",\n                      defaultValue: format(new Date(), \"yyyy-MM-dd\"),\n                      style: { width: \"190px\" },\n                      onKeyDown: (e) => {\n                        if (e.code === \"NumpadEnter\" || e.code === 'Enter') {\n                          remakrsRef.current?.focus()\n                        }\n                      }\n                    }}\n                    inputRef={dateRef}\n                  />\n\n\n                </div>\n\n                <TextAreaInput\n                  label={{\n                    title: \"Remarks : \",\n                    style: {\n                      fontSize: \"12px\",\n                      fontWeight: \"bold\",\n                      width: \"100px\",\n                    },\n                  }}\n                  textarea={{\n                    rows: 2,\n                    disabled: isDisableField,\n                    style: { flex: 1 },\n                    onKeyDown: (e) => {\n                      e.stopPropagation()\n                      if ((e.code === \"NumpadEnter\" && !e.shiftKey) || (e.code === 'Enter' && !e.shiftKey)) {\n                        pnRef.current?.focus()\n                      }\n                    },\n\n                  }}\n                  _inputRef={remakrsRef}\n                />\n\n\n              </fieldset>\n              <fieldset\n                style={\n                  {\n                    flex: 1,\n                    display: \"flex\",\n                    gap: \"10px\",\n                    padding: \" 15px\",\n                    border: \"1px solid #cbd5e1\",\n                    borderRadius: \"5px\",\n                    flexDirection: \"column\",\n                  } as any\n                }\n              >\n                <div\n                  style={{ width: \"100%\", flex: 1, display: \"flex\", gap: \"15px\" }}\n                >\n                  {isLoadingModalSearchPdcIDs ? (\n                    <LoadingButton loading={isLoadingModalSearchPdcIDs} />\n                  ) : (\n                    <TextInput\n                      label={{\n                        title: \"PN/Client ID : \",\n                        style: {\n                          fontSize: \"12px\",\n                          fontWeight: \"bold\",\n                          width: \"100px\",\n                        },\n                      }}\n                      input={{\n                        disabled: isDisableField,\n                        type: \"text\",\n                        style: { width: \"250px\", height: \"22px\" },\n                        onKeyDown: (e) => {\n                          if (e.key === \"Enter\" || e.key === \"NumpadEnter\") {\n                            e.preventDefault();\n                            if (pnRef.current) {\n                              openModalSearchPdcIDs(pnRef.current.value)\n                            }\n                          }\n                        }\n                      }}\n                      inputRef={pnRef}\n                      icon={<PersonSearchIcon sx={{ fontSize: \"18px\", color: isDisableField ? \"gray\" : \"black\" }} />}\n                      onIconClick={(e) => {\n                        e.preventDefault()\n                        if (pnRef.current) {\n                          openModalSearchPdcIDs(pnRef.current.value)\n                        }\n                      }}\n                      disableIcon={isDisableField}\n                    />\n\n                  )}\n\n                  <TextInput\n                    label={{\n                      title: \"Branch : \",\n                      style: {\n                        fontSize: \"12px\",\n                        fontWeight: \"bold\",\n                        width: \"70px\",\n                      },\n                    }}\n                    input={{\n                      disabled: isDisableField,\n                      type: \"text\",\n                      style: { width: \"auto\", height: \"22px\" },\n                      onKeyDown: (e) => {\n                        if (e.code === \"NumpadEnter\" || e.code === 'Enter') {\n                          clientnameRef.current?.focus()\n                        }\n                      }\n                    }}\n                    inputRef={branchRef}\n                  />\n\n                </div>\n\n                <div\n                  style={{ width: \"100%\", display: \"flex\", columnGap: \"10px\" }}\n                >\n                  <TextAreaInput\n                    label={{\n                      title: \"Clients Name : \",\n                      style: {\n                        fontSize: \"12px\",\n                        fontWeight: \"bold\",\n                        width: \"100px\",\n                      },\n                    }}\n                    textarea={{\n                      rows: 2,\n                      disabled: isDisableField,\n                      style: { width: \"325px\" },\n                      onKeyDown: (e) => {\n                        e.stopPropagation()\n                        if ((e.code === \"NumpadEnter\" && !e.shiftKey) || (e.code === 'Enter' && !e.shiftKey)) {\n                          savePDCButtonRef.current?.click();\n                        }\n                      },\n\n                    }}\n                    _inputRef={clientnameRef}\n                  />\n                  <Button\n                    sx={{\n                      height: \"27px\",\n                      fontSize: \"11px\",\n                    }}\n                    disabled={pdcMode === \"\"}\n                    variant=\"contained\"\n                    startIcon={<DownloadIcon sx={{ width: 15, height: 15 }} />}\n                    onClick={() => {\n                      setShowModal(true);\n                    }}\n                  >\n                    Upload Check\n                  </Button>\n                </div>\n              </fieldset>\n            </Box>\n          </Box>\n        </form>\n        <PostDatedCheckTableSelected\n          disbaleTable={isDisableField}\n          ref={tableRef}\n          rows={[]}\n          columns={pdcColumn}\n          getSelectedItem={(rowSelected: any, _: any, RowIndex: any) => {\n            if (rowSelected) {\n              if (\n                (rowSelected[6] && rowSelected[6] !== \"\") ||\n                (rowSelected[7] && rowSelected[7] !== \"\") ||\n                (rowSelected[8] && rowSelected[8] !== \"\")\n              ) {\n                setHasSelectedRow(null)\n                tableRef.current.setSelectedRow(null)\n                return Swal.fire({\n                  position: \"center\",\n                  icon: \"warning\",\n                  title: `Unable to delete. Check No ${rowSelected[0]} is already ${rowSelected[8]} issued of OR!`,\n                  showConfirmButton: false,\n                  timer: 1500,\n                });\n              }\n              flushSync(() => {\n                setOpenPdcInputModal(true);\n              })\n              wait(100).then(() => {\n                if (\n                  _checknoRef.current &&\n                  _bankRef.current &&\n                  _branchRef.current &&\n                  _remarksRef.current &&\n                  _chekdateRef.current &&\n                  _amountRef.current\n                ) {\n                  _checknoRef.current.value = rowSelected[0]\n                  _chekdateRef.current.value = rowSelected[1]\n                  _amountRef.current.value = formatNumber(parseFloat(rowSelected[2].replace(/,/g, '')))\n                  _bankRef.current.value = rowSelected[3]\n                  _branchRef.current.value = rowSelected[4]\n                  _remarksRef.current.value = rowSelected[5]\n                  _slipCodeRef.current = rowSelected[6] || \"\"\n                  _slipDateRef.current = rowSelected[7] || \"\"\n                  _checkOR.current = rowSelected[8] || \"\"\n                  _bankCode.current = rowSelected[9]\n\n                  console.log(rowSelected[0])\n                  _bankRef.current.focus()\n                }\n              })\n\n              setHasSelectedRow(RowIndex)\n            } else {\n              setHasSelectedRow(null)\n            }\n          }}\n          onKeyDown={(rowSelected: any, RowIndex: any, e: any) => {\n            if (e.code === \"Delete\" || e.code === \"Backspace\") {\n\n              if (\n                (rowSelected[6] && rowSelected[6] !== \"\") ||\n                (rowSelected[7] && rowSelected[7] !== \"\") ||\n                (rowSelected[8] && rowSelected[8] !== \"\")\n              ) {\n                setHasSelectedRow(null)\n                tableRef.current.setSelectedRow(null)\n\n                return Swal.fire({\n                  position: \"center\",\n                  icon: \"warning\",\n                  title: `Unable to delete. Check No ${rowSelected[0]} is already ${rowSelected[8]} issued of OR!`,\n                  showConfirmButton: false,\n                  timer: 1500,\n                });\n              }\n\n\n              Swal.fire({\n                title: \"Are you sure?\",\n                text: `You won't to delete this Check No. ${rowSelected[0]}`,\n                icon: \"warning\",\n                showCancelButton: true,\n                confirmButtonColor: \"#3085d6\",\n                cancelButtonColor: \"#d33\",\n                confirmButtonText: \"Yes, delete it!\",\n              }).then((result) => {\n                if (result.isConfirmed) {\n                  setTimeout(() => {\n                    const newData = tableRef.current.getData()\n                    newData.splice(RowIndex, 1);\n                    tableRef.current.setData(newData)\n\n                    setHasSelectedRow(null)\n                    tableRef.current.setSelectedRow(null)\n                  }, 100)\n                }\n              });\n            }\n          }}\n        />\n\n        <Modal\n          open={openPdcInputModal}\n          onClose={() => {\n            setOpenPdcInputModal(false);\n            tableRef.current.setSelectedRow(null)\n            setHasSelectedRow(null)\n\n          }}\n          aria-labelledby=\"modal-modal-title\"\n          aria-describedby=\"modal-modal-description\"\n        >\n          <Box\n            sx={{\n              position: \"absolute\" as \"absolute\",\n              top: \"50%\",\n              left: \"50%\",\n              transform: \"translate(-50%, -50%)\",\n              width: \"auto\",\n              bgcolor: \"background.paper\",\n              p: 4,\n            }}\n          >\n            <Typography id=\"modal-modal-title\" variant=\"h6\" component=\"h2\">\n              Check Detail\n            </Typography>\n            <br />\n            <div\n              style={{\n                display: \"flex\",\n                columnGap: \"10px\",\n              }}\n            >\n              <div\n                style={{\n                  display: \"flex\",\n                  flexDirection: \"column\",\n                  gap: \"10px\",\n                }}\n              >\n                <TextInput\n                  label={{\n                    title: \"Check No : \",\n                    style: {\n                      fontSize: \"12px\",\n                      fontWeight: \"bold\",\n                      width: \"70px\",\n                    },\n                  }}\n                  input={{\n                    disabled: hasSelectedRow !== null,\n                    type: \"text\",\n                    style: { width: \"190px\" },\n                    onKeyDown: (e) => {\n                      if (e.code === \"NumpadEnter\" || e.code === 'Enter') {\n                        _bankRef.current?.focus()\n                      }\n                    },\n                  }}\n                  inputRef={_checknoRef}\n                />\n                {isLoadingModalSearchbanks ? (\n                  <LoadingButton loading={isLoadingModalSearchbanks} />\n                ) : (\n                  <TextInput\n                    label={{\n                      title: \"Bank : \",\n                      style: {\n                        fontSize: \"12px\",\n                        fontWeight: \"bold\",\n                        width: \"70px\",\n                      },\n                    }}\n                    input={{\n                      type: \"text\",\n                      style: { width: \"190px\" },\n                      onKeyDown: (e) => {\n                        if (e.code === \"NumpadEnter\" || e.code === 'Enter') {\n                          return openModalSearchBanks(\n                            e.currentTarget.value\n                          );\n                        }\n                      }\n                    }}\n                    icon={<AccountBalanceIcon sx={{ fontSize: \"18px\" }} />}\n                    onIconClick={(e) => {\n                      e.preventDefault()\n                      if (_bankRef.current) {\n                        openModalSearchBanks(\n                          _bankRef.current?.value\n                        );\n                      }\n                    }}\n                    inputRef={_bankRef}\n                  />\n                )}\n\n                <TextInput\n                  label={{\n                    title: \"Branch : \",\n                    style: {\n                      fontSize: \"12px\",\n                      fontWeight: \"bold\",\n                      width: \"70px\",\n                    },\n                  }}\n                  input={{\n                    type: \"text\",\n                    style: { width: \"190px\" },\n                    onKeyDown: (e) => {\n                      if (e.code === \"NumpadEnter\" || e.code === 'Enter') {\n                        _remarksRef.current?.focus()\n                      }\n                    },\n                  }}\n                  inputRef={_branchRef}\n                />\n                <TextAreaInput\n                  label={{\n                    title: \"Remarks : \",\n                    style: {\n                      fontSize: \"12px\",\n                      fontWeight: \"bold\",\n                      width: \"70px\",\n                    },\n                  }}\n                  textarea={{\n                    rows: 4,\n                    disabled: isDisableField,\n                    style: { flex: 1 },\n                    onKeyDown: (e) => {\n                      if (e.key === \"Enter\" && e.shiftKey) {\n                        return\n                      }\n                      if (e.code === \"NumpadEnter\" || e.code === 'Enter') {\n                        _chekdateRef.current?.focus()\n                      }\n                    },\n                  }}\n                  _inputRef={_remarksRef}\n                />\n              </div>\n              <div\n                style={{\n                  display: \"flex\",\n                  gap: \"10px\",\n                  flexDirection: \"column\",\n                }}\n              >\n\n                <TextInput\n                  label={{\n                    title: \"Check Dated : \",\n                    style: {\n                      fontSize: \"12px\",\n                      fontWeight: \"bold\",\n                      width: \"90px\",\n                    },\n                  }}\n                  input={{\n                    disabled: isDisableField,\n                    type: \"date\",\n                    style: { width: \"190px\" },\n                    defaultValue: new Date().toISOString().split(\"T\")[0],\n                    onKeyDown: (e) => {\n                      if (e.code === \"NumpadEnter\" || e.code === 'Enter') {\n                        _amountRef.current?.focus()\n                      }\n                    },\n                  }}\n                  inputRef={_chekdateRef}\n                />\n\n                <div style={{\n                  display: \"flex\"\n                }}>\n                  <label style={{\n                    fontSize: \"12px\",\n                    fontWeight: \"bold\",\n                    width: \"90px\",\n                  }}>Amount :</label>\n                  <NumericFormat\n                    style={{\n                      flex: 1\n                    }}\n                    value={_amountRef.current?.value ?? \"\"}\n                    getInputRef={_amountRef}\n                    allowNegative={false}\n                    thousandSeparator\n                    valueIsNumericString\n                    onKeyDown={(e) => {\n                      if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n                        let currentValue = _amountRef.current?.value as string;\n                        let numericValue = parseFloat(currentValue.replace(/,/g, ''));\n                        if (_amountRef.current) {\n                          if (isNaN(numericValue)) {\n                            _amountRef.current.value = \"0.00\";\n                          } else {\n                            if (!currentValue.includes(\".\")) {\n                              _amountRef.current.value = `${formatNumber(numericValue)}`;\n                            } else {\n                              _amountRef.current.value = formatNumber(numericValue);\n                            }\n                          }\n                        }\n                        _checkcountRef.current?.focus()\n                      }\n                    }}\n                  />\n                </div>\n                {hasSelectedRow === null && (\n                  <TextInput\n                    label={{\n                      title: \"Check Count : \",\n                      style: {\n                        fontSize: \"12px\",\n                        fontWeight: \"bold\",\n                        width: \"90px\",\n                      },\n                    }}\n                    input={{\n                      disabled: isDisableField,\n                      type: \"number\",\n                      style: { width: \"190px\" },\n                      onKeyDown: (e) => {\n                        if (e.code === \"NumpadEnter\" || e.code === 'Enter') {\n                          const timeout = setTimeout(() => {\n                            checkModalSaveButton.current?.click();\n                            clearTimeout(timeout);\n                          }, 100);\n                        }\n                      },\n                    }}\n                    inputRef={_checkcountRef}\n                  />\n                )}\n              </div>\n            </div>\n            <div\n              style={{\n                display: \"flex\",\n                justifyContent: \"flex-end\",\n                width: \"100%\",\n                marginTop: \"10px\",\n              }}\n            >\n              <div style={{ display: \"flex\", gap: \"10px\" }}>\n                <Button\n                  ref={checkModalSaveButton}\n                  action={checkModalSaveButtonActionRef}\n                  color=\"primary\"\n                  variant=\"contained\"\n                  autoFocus={hasSelectedRow !== null}\n                  onClick={() => {\n                    handleCheckDetailsSave()\n                  }}\n                  sx={{\n                    height: \"30px\",\n                    fontSize: \"11px\",\n                  }}\n                >\n                  {hasSelectedRow !== null ? \"Update\" : \"Save\"}\n                </Button>\n                <Button\n                  color=\"success\"\n                  variant=\"contained\"\n                  sx={{\n                    height: \"30px\",\n                    fontSize: \"11px\",\n                  }}\n                  onClick={() => {\n                    setOpenPdcInputModal(false);\n                    tableRef.current.setSelectedRow(null)\n                    setHasSelectedRow(null)\n                  }}\n                >\n                  Cancel\n                </Button>\n                <IconButton\n                  style={{\n                    position: \"absolute\",\n                    top: \"10px\",\n                    right: \"10px\",\n                  }}\n                  aria-label=\"search-client\"\n                  onClick={() => {\n                    tableRef.current.setSelectedRow(null)\n                    setHasSelectedRow(null)\n                    setOpenPdcInputModal(false);\n                  }}\n                >\n                  <CloseIcon />\n                </IconButton>\n              </div>\n            </div>\n          </Box>\n        </Modal>\n        <div\n          style={{\n            display: showModal ? \"flex\" : \"none\",\n            position: \"absolute\",\n            top: 0,\n            bottom: 0,\n            left: 0,\n            right: 0,\n            background: \"rgba(158, 155, 157, 0.31)\",\n            zIndex: \"999\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n          }}\n        >\n          <div\n            style={{\n              width: \"90%\",\n              height: \"90%\",\n            }}\n          >\n            <div\n              style={{\n                width: \"90%\",\n                height: \"90%\",\n                overflow: \"auto\",\n                background: \"white\",\n                padding: \"20px\",\n                margin: \"auto\",\n                zIndex: \"9929\",\n                boxShadow: \" -1px 1px 13px 6px rgba(0,0,0,0.54)\",\n                position: \"relative\",\n              }}\n            >\n              <div\n                style={{\n                  height: \"100%\",\n                  width: \"100%\",\n                  position: \"relative\",\n                  display: \"flex\",\n                  justifyContent: \"center\",\n                  alignItems: \"center\",\n                  flexDirection: \"column\",\n                }}\n              >\n                <IconButton\n                  sx={{\n                    position: \"absolute\",\n                    right: \"5px\",\n                    top: \"5px\",\n                  }}\n                  onClick={() => {\n                    setShowModal(false);\n                  }}\n                >\n                  <CloseIcon />\n                </IconButton>\n                <div\n                  style={{\n                    width: \"100%\",\n                    height: \"500px\",\n                    border: isDragging ? \"5px dashed green\" : \"5px dashed grey\",\n                    overflow: \"auto\",\n                    padding: \"10px\",\n                  }}\n                  onDragEnter={handleDragEnter}\n                  onDragOver={(e) => e.preventDefault()}\n                  onDragLeave={handleDragLeave}\n                  onDrop={handleDrop}\n                >\n                  <div\n                    id=\"upload-container\"\n                    style={{\n                      width: \"100%\",\n                      height: \"100%\",\n                      display: \"flex\",\n                      gap: \"10px\",\n                      flexWrap: \"wrap\",\n                    }}\n                    onDragEnter={handleDragEnter}\n                    onDragOver={(e) => e.preventDefault()}\n                    onDragLeave={handleDragLeave}\n                    onDrop={handleDrop}\n                  >\n                    {selectedFiles.map((itm, idx) => {\n                      return (\n                        <DisplayFile\n                          key={idx}\n                          itm={itm}\n                          selectedFiles={selectedFiles}\n                          setSelectedFiles={setSelectedFiles}\n                          fileInput={fileInputRef}\n                        />\n                      );\n                    })}\n                  </div>\n                  {selectedFiles.length <= 0 && (\n                    <div\n                      style={{\n                        position: \"absolute\",\n                        top: \"50%\",\n                        left: \"50%\",\n                        transform: \"translate(-50%,-50%)\",\n                        textAlign: \"center\",\n                      }}\n                    >\n                      <DriveFolderUploadIcon\n                        sx={{ fontSize: \"20em\", color: \"#64748b\" }}\n                      />\n                    </div>\n                  )}\n                  <input\n                    ref={fileInputRef}\n                    type=\"file\"\n                    multiple\n                    style={{ display: \"none\", background: \"white\" }}\n                    id=\"input-file\"\n                    onChange={(e) => {\n                      const fileList = e.target.files as FileList;\n                      const files = Array.from(fileList);\n                      const newFiles = [...selectedFiles, ...files];\n                      if (checkFile(newFiles)) {\n                        return alert(\"file is not valid Extention!\");\n                      }\n                      setSelectedFiles(newFiles);\n                    }}\n                  />\n                </div>\n                <div\n                  style={{\n                    width: \"100%\",\n                  }}\n                >\n                  <Button\n                    fullWidth\n                    onClick={() => {\n                      const inputFile = document.getElementById(\"input-file\");\n                      inputFile?.click();\n                    }}\n                  >\n                    CLick it to upload\n                  </Button>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        {(loadingAddNew ||\n          isLoadingSelectedSearch) && <div className=\"loading-component\"><div className=\"loader\"></div></div>}\n\n      </div>\n    </>\n  );\n}\n\n\nconst PostDatedCheckTableSelected = forwardRef(({\n  columns,\n  rows,\n  height = \"400px\",\n  getSelectedItem,\n  onKeyDown,\n  disbaleTable = false,\n  isTableSelectable = true\n}: any, ref) => {\n  const parentElementRef = useRef<any>(null)\n  const [data, setData] = useState([])\n  const [column, setColumn] = useState([])\n  const [selectedRow, setSelectedRow] = useState<any>(0)\n  const [selectedRowIndex, setSelectedRowIndex] = useState<any>(null)\n  const totalRowWidth = column.reduce((a: any, b: any) => a + b.width, 0)\n\n  useEffect(() => {\n    if (columns.length > 0) {\n      setColumn(columns.filter((itm: any) => !itm.hide))\n    }\n  }, [columns])\n\n  useEffect(() => {\n    if (rows.length > 0) {\n      setData(rows.map((itm: any) => {\n        return columns.map((col: any) => itm[col.key])\n      }))\n    }\n  }, [rows, columns])\n\n  useImperativeHandle(ref, () => ({\n    selectedRow: () => selectedRow,\n    getData: () => {\n      const newData = [...data];\n      return newData\n    },\n    setData: (newData: any) => {\n      setData(newData)\n    },\n    getColumns: () => {\n      return columns\n    },\n    resetTable: () => {\n      setData([])\n      setSelectedRow(0)\n    },\n    getSelectedRow: () => {\n      return selectedRowIndex\n    },\n    setSelectedRow: (value: any) => {\n      return setSelectedRowIndex(value)\n    },\n    setDataFormated: (newData: any) => {\n      setData(newData.map((itm: any) => {\n        return columns.map((col: any) => itm[col.key])\n      }))\n    },\n    getDataFormatted: () => {\n      const newData = [...data];\n      const newDataFormatted = newData.map((itm: any) => {\n        let newItm = {\n          Check_No: itm[0],\n          Check_Date: itm[1],\n          Check_Amnt: itm[2],\n          BankName: itm[3],\n          Branch: itm[4],\n          Check_Remarks: itm[5],\n          Deposit_Slip: itm[6],\n          DateDeposit: itm[7],\n          OR_No: itm[8],\n          BankCode: itm[9]\n\n        }\n        return newItm\n      })\n\n      return newDataFormatted\n    }\n  }))\n\n  return (\n    <div\n      ref={parentElementRef}\n      style={{\n        width: \"100%\",\n        height,\n        overflow: \"auto\",\n        position: \"relative\",\n        pointerEvents: disbaleTable ? \"none\" : \"auto\",\n        border: disbaleTable ? \"2px solid #8c8f8e\" : '2px solid #c0c0c0',\n        boxShadow: `inset -2px -2px 0 #ffffff, \n                      inset 2px 2px 0 #808080`\n\n      }}\n    >\n      <div style={{ position: \"absolute\", width: `${totalRowWidth}px`, height: \"auto\" }}>\n        <table style={{ borderCollapse: \"collapse\", width: \"100%\", position: \"relative\", background: \"white\" }}>\n          <thead >\n            <tr>\n              <th style={{\n                width: '30px',\n                border: \"1px solid black\",\n                position: \"sticky\",\n                top: 0,\n                zIndex: 1,\n                background: \"#f0f0f0\",\n\n              }}\n              ></th>\n              {\n                column.map((colItm: any, idx: number) => {\n                  return (\n                    <th\n                      key={idx}\n                      style={{\n                        width: colItm.width,\n                        border: \"1px solid black\",\n                        position: \"sticky\",\n                        top: 0,\n                        zIndex: 1,\n                        background: \"#f0f0f0\",\n                        fontSize: \"12px\",\n                        textAlign: \"left\",\n                        padding: \"0px 5px\",\n\n                      }}\n                    >{colItm.label}</th>\n                  )\n                })\n              }\n            </tr>\n          </thead>\n          <tbody>\n            {\n              data?.map((rowItm: any, rowIdx: number) => {\n                const selectedRowBg = selectedRow === rowIdx && selectedRowIndex === rowIdx ? \"#dedfe0\" : selectedRow === rowIdx ? \"#b6e4fc\" : selectedRowIndex === rowIdx ? \"#cbcfd4\" : \"\"\n                return (\n                  <tr key={rowIdx}>\n                    <td style={{\n                      position: \"relative\", borderBottom: \"1px solid black\",\n                      borderLeft: \"1px solid black\",\n                      borderTop: \"none\",\n                      borderRight: \"1px solid black\",\n                      cursor: \"pointer\",\n                      background: selectedRowBg,\n                    }}>\n                      <input\n                        style={{\n                          cursor: \"pointer\",\n                          height: \"10px\"\n                        }}\n                        readOnly={true}\n                        checked={selectedRowIndex === rowIdx}\n                        type=\"checkbox\"\n                        onClick={() => {\n                          if (!isTableSelectable) {\n                            return\n                          }\n                          setSelectedRowIndex(rowIdx)\n\n                          if (getSelectedItem) {\n                            getSelectedItem(rowItm, null, rowIdx, null)\n                          }\n                          setSelectedRow(null)\n\n                        }}\n\n                      />\n                    </td>\n\n                    {\n                      column.map((colItm: any, colIdx: number) => {\n                        return (\n                          <td\n                            className={`td row-${rowIdx} col-${colIdx}`}\n                            tabIndex={0}\n                            onDoubleClick={() => {\n                              if (!isTableSelectable) {\n                                return\n                              }\n                              if (selectedRowIndex === rowIdx) {\n                                setSelectedRowIndex(null)\n\n                                if (getSelectedItem) {\n                                  getSelectedItem(null, null, rowIdx, null)\n                                }\n                              } else {\n\n                                setSelectedRowIndex(rowIdx)\n                                if (getSelectedItem) {\n                                  getSelectedItem(rowItm, null, rowIdx, null)\n                                }\n                              }\n                              setSelectedRow(null)\n                            }}\n                            onClick={() => {\n                              setSelectedRow(rowIdx)\n                            }}\n\n                            onMouseEnter={(e) => {\n                              e.preventDefault()\n                              setSelectedRow(rowIdx)\n                            }}\n                            onMouseLeave={(e) => {\n                              e.preventDefault()\n                              setSelectedRow(null)\n                            }}\n                            onKeyDown={(e) => {\n                              if (onKeyDown) {\n                                onKeyDown(rowItm, rowIdx, e)\n                              }\n                              if (e.key === \"ArrowUp\") {\n                                setSelectedRow((prev: any) => {\n                                  const index = Math.max(prev - 1, 0)\n                                  const td = document.querySelector(`.td.row-${index}`) as HTMLTableDataCellElement\n                                  if (td) {\n                                    td.focus()\n                                  }\n                                  return index\n                                });\n                              } else if (e.key === \"ArrowDown\") {\n                                setSelectedRow((prev: any) => {\n                                  const index = Math.min(prev + 1, data.length - 1)\n                                  const td = document.querySelector(`.td.row-${index}`) as HTMLTableDataCellElement\n                                  if (td) {\n                                    td.focus()\n                                  }\n                                  return index\n                                });\n                              }\n                              if (e.code === 'Enter' || e.code === 'NumpadEnter') {\n                                e.preventDefault()\n\n                                if (!isTableSelectable) {\n                                  return\n                                }\n\n                                setSelectedRowIndex(rowIdx)\n                                if (getSelectedItem) {\n                                  getSelectedItem(rowItm, null, rowIdx, null)\n                                }\n                                setSelectedRow(null)\n                              }\n                            }}\n                            key={colIdx}\n                            style={{\n                              border: \"1px solid black\",\n                              background: selectedRowBg,\n                              fontSize: \"12px\",\n                              padding: \"0px 5px\",\n                              cursor: \"pointer\",\n                            }}\n                          >{\n                              <input\n                                readOnly={true}\n                                value={rowItm[colIdx]}\n                                style={{\n                                  width: colItm.width,\n                                  pointerEvents: \"none\",\n                                  border: \"none\",\n                                  background: \"transparent\",\n                                  userSelect: \"none\"\n                                }} />\n                            }</td>\n                        )\n                      })\n                    }\n                  </tr>\n                )\n              })\n            }\n          </tbody>\n        </table>\n      </div>\n    </div>\n  )\n})\n\n\n\nexport function setNewStateValue(dispatch: any, obj: any) {\n  Object.entries(obj).forEach(([field, value]) => {\n    dispatch({ type: \"UPDATE_FIELD\", field, value });\n  });\n}\nexport function incrementCheckNo(Check_No: string) {\n  if (Check_No) {\n    let incrementedNumber = (parseInt(Check_No) + 1).toString();\n    while (incrementedNumber.length < Check_No.length) {\n      incrementedNumber = \"0\" + incrementedNumber;\n    }\n    return incrementedNumber;\n  }\n\n  return \"001\";\n}\n"],"names":["_ref","_ref$title","title","_jsxs","Helmet","children","_jsx","rel","type","href","concat","process","TextFormatedInput","input","label","inputRef","icon","_ref$iconPosition","iconPosition","_ref$disableIcon","disableIcon","_ref$onIconClick","onIconClick","e","_ref$onChange","onChange","id","useId","formatNumber","value","parts","split","replace","join","unformatNumber","style","display","alignItems","position","_objectSpread","htmlFor","left","zIndex","ref","height","target","test","handleChange","onBlur","includes","length","ensureTwoDecimals","handleBlur","onClick","right","top","transform","cursor","justifyContent","background","pointerEvents","TextInput","_ref2","_ref2$iconPosition","_ref2$disableIcon","_ref2$onIconClick","TextAreaInput","_ref3","textarea","_inputRef","_ref3$iconPosition","_ref3$disableIcon","_ref3$onIconClick","SelectInput","_ref4","select","selectRef","_ref4$datasource","datasource","_ref4$values","values","_ref4$display","containerStyle","className","map","itm","idx","ButtonField","_ref5","buttonRetRef","button","_ref5$tooltipText","tooltipText","_ref5$disabled","disabled","UpwardTable","forwardRef","UpwardTableRef","_pages$pageNumber","rows","column","width","dataReadOnly","_ref$onSelectionChang","onSelectionChange","_ref$isMultipleSelect","isMultipleSelect","_ref$freeze","freeze","onKeyDown","_ref$inputsearchselec","inputsearchselector","_ref$isRowSelectable","isRowSelectable","_ref$unSelectable","unSelectable","isLoading","onRightClick","_useState","useState","_useState2","_slicedToArray","pages","setPages","_useState3","_useState4","pageNumber","setPageNumber","onSelectionChangeRef","useRef","onKeyDownRef","_useState5","filter","hide","_useState6","columns","setColumns","_useState7","_useState8","hoveredColumn","setHoveredColumn","_useState9","_useState10","selectedRows","setSelectedRows","_useState11","_useState12","lastSelectedRowIndex","setLastSelectedRowIndex","_useState13","_useState14","selectedItems","setSelectedItems","divRef","_useState15","_useState16","_clickTimeout","_setClickTimeout","useEffect","_pages","arr","chunkSize","arguments","undefined","result","i","push","slice","formatArrayIntoChunks","startResize","index","preventDefault","stopPropagation","startX","clientX","startWidth","doDrag","moveEvent","newWidth","updatedColumns","_toConsumableArray","document","addEventListener","stopDrag","removeEventListener","handleMouseEnter","handleMouseLeave","useImperativeHandle","resetTableSelected","row","querySelector","scrollIntoView","block","behavior","getSelectedIndex","getSelectedRows","d","getFirstColumn","getParentElement","current","getSelectedRowsOnClick","setSelectRows","indx","key","prevIndex","_row$querySelector","newPrevIndex","focus","tagName","divInput","_row$querySelector2","flexDirection","minHeight","tabIndex","col","fontWeight","defaultValue","headerName","readOnly","onMouseDown","onMouseEnter","onMouseLeave","rowIndex","event","shiftKey","rangeStart","Math","min","rangeEnd","max","newSelectedRows","selectedItemsParams","newSelectedRowsFiltered","selectedRowData","removeNullValue","data","getIndexAndData","ctrlKey","metaKey","handleRowClick","onDoubleClick","clearTimeout","timeoutId","setTimeout","handleRowDoubleClick","handleRowKeyDown","onContextMenu","rowSelected","handleRightClick","colIndex","field","Pagination","count","useUpwardTableModal","_mutationFn","myAxios","user","link","responseDataKey","_ref$onModalClose","onModalClose","inputSearchRef","tableRef","parentRef","show","setShowModal","setRows","_useMutation","useMutation","mutationKey","mutationFn","_x","_asyncToGenerator","_regeneratorRuntime","mark","_callee","variable","wrap","_context","prev","next","get","url","queryUrlName","search","headers","Authorization","accessToken","abrupt","sent","stop","apply","onSuccess","res","mutate","throttledSearch","throttle","query","performSearch","closeModal","wait","then","_parentRef$current","Modal","open","onClose","paddingTop","paddingBottom","paddingLeft","paddingRight","marginBottom","currentTarget","datagridview","IconButton","CloseIcon","fontSize","openModal","_inputSearchRef$curre","reducer","state","action","_defineProperty","pdcColumn","pdcSearchColumn","flex","pdcBanksColumn","queryKey","PostDateChecks","_queryFn","_mutationFn2","_onSuccess","_amountRef$current$va","_amountRef$current2","_React$useState","React","_React$useState2","anchorEl","setAnchorEl","Boolean","isDragging","setIsDragging","selectedFiles","setSelectedFiles","openPdcInputModal","setOpenPdcInputModal","showModal","searchInputRef","hasSelectedRow","setHasSelectedRow","pdcMode","setPdcMode","_useContext","useContext","AuthContext","searchRef","fileInputRef","savePDCButtonRef","checkModalSaveButton","checkModalSaveButtonActionRef","_checknoRef","_bankRef","_branchRef","_remarksRef","_chekdateRef","_amountRef","_checkcountRef","_bankCode","_slipCodeRef","_slipDateRef","_checkOR","addRefButton","subRefNoRef","PNoRef","subAccountRef","refNoRef","dateRef","remakrsRef","pnRef","branchRef","clientnameRef","_useQuery","useQuery","queryFn","refetchOnWindowFocus","response","RefNo","pdcID","newRefNumberLoading","refetchNewRefNumber","refetch","_callee2","variables","_context2","mode","post","success","setSelectedRow","setData","format","Date","resetPDC","Swal","message","showConfirmButton","timer","loadingAddNew","_useMutation2","_x2","_callee3","_context3","_x3","_callee5","_formatDataToDocument","Ref_No","_response$data$upload","uploadFiles","newObjContainerBasic","fileSelected","formatDataToDocument","_context6","_x4","_x5","_callee4","dataDocument","newObjContainer","_loop","_context5","basicItem","mainURL","blob","file","reader","_context4","uniqueFilename","fetch","File","fileName","fileType","FileReader","Promise","resolve","reject","onload","onerror","Error","name","readAsDataURL","delegateYield","alert","getSearchPDCCheck","upload","JSON","parse","all","setDataFormated","Name","PNo","Acronym","Remarks","IDNo","sub_account","mutateSelectedSearch","isLoadingSelectedSearch","_useUpwardTableModal","selectedRow","client_id","closeModalSearchPdcIDs","ModalSearchPdcIDs","openModalSearchPdcIDs","isLoadingModalSearchPdcIDs","_useUpwardTableModal2","Bank_Code","Bank","closeModalSearchBanks","_branchRef$current","ModalSearchBanks","openModalSearchBanks","isLoadingModalSearchbanks","_useUpwardTableModal3","_searchRef$current","ref_no","closeUpwardPDCModal","UpwardPDCModal","openUpwardPDCModal","isLoadingModalSearchPDC","handleOnSave","useCallback","_x6","_callee6","_refNoRef$current","_pnRef$current2","_dateRef$current","_clientnameRef$curren","_remakrsRef$current","_branchRef$current2","pdcTableData","filePromises","fileTransfer","fileToSave","stateSubmited","_context7","files","_loop2","_event$target","datakey","fileContent","getDataFormatted","_pnRef$current","click","Branch","checks","stringify","codeCondfirmationAlert","isUpdate","cb","userCodeConfirmation","saveCondfirmationAlert","isConfirm","handleDragLeave","handleDragEnter","handleDrop","_fileInputRef$current","fileList","dataTransfer","Array","from","newFiles","checkFile","num","toLocaleString","minimumFractionDigits","maximumFractionDigits","handleKeyDown","window","isDisableField","_Fragment","PageHelmet","padding","backgroundColor","Box","sx","theme","columnGap","breakpoints","down","LoadingButton","loading","SearchIcon","Button","variant","startIcon","AddIcon","color","SaveIcon","text","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","isConfirmed","flushSync","_checknoRef$current","tableRows","getLastCheck_No","incrementCheckNo","Check_No","grey","Menu","MenuListProps","MenuItem","_refNoRef$current2","_pnRef$current3","_dateRef$current2","_clientnameRef$curren2","_remakrsRef$current2","_branchRef$current3","localStorage","removeItem","setItem","header","department","elementString","ReactDOMServer","_clientnameRef$curren3","_refNoRef$current3","textAlign","marginTop","margin","printString","code","rowGap","gap","border","borderRadius","_dateRef$current3","RestartAltIcon","_remakrsRef$current3","_pnRef$current4","PersonSearchIcon","_clientnameRef$curren4","_savePDCButtonRef$cur","DownloadIcon","PostDatedCheckTableSelected","disbaleTable","getSelectedItem","_","RowIndex","parseFloat","console","log","newData","getData","splice","bgcolor","p","Typography","component","_bankRef$current","AccountBalanceIcon","_bankRef$current2","_remarksRef$current","_chekdateRef$current","toISOString","_amountRef$current","NumericFormat","getInputRef","allowNegative","thousandSeparator","valueIsNumericString","_amountRef$current3","_checkcountRef$curren","currentValue","numericValue","isNaN","timeout","_checkModalSaveButton","autoFocus","incrementStringNumbers","str","increment","parseInt","toString","padStart","incrementDate","dateString","currentDate","setMonth","getMonth","selectedIndex","getSelectedRow","date","getTime","isValidDate","Check_Date","Check_Amnt","BankName","BankCode","Check_Remarks","Deposit_Slip","DateDeposit","OR_No","handleCheckDetailsSave","bottom","overflow","boxShadow","onDragEnter","onDragOver","onDragLeave","onDrop","flexWrap","DisplayFile","fileInput","DriveFolderUploadIcon","multiple","fullWidth","inputFile","getElementById","_ref4$height","_ref4$disbaleTable","_ref4$isTableSelectab","isTableSelectable","parentElementRef","setColumn","_useState17","_useState18","_useState19","_useState20","selectedRowIndex","setSelectedRowIndex","totalRowWidth","reduce","a","b","getColumns","resetTable","borderCollapse","colItm","rowItm","rowIdx","selectedRowBg","borderBottom","borderLeft","borderTop","borderRight","checked","colIdx","td","userSelect","setNewStateValue","dispatch","obj","Object","entries","forEach","_ref6","incrementedNumber"],"sourceRoot":""}