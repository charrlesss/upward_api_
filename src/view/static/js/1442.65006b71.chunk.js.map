{"version":3,"file":"static/js/1442.65006b71.chunk.js","mappings":"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","sources":["components/Helmet.tsx","components/UpwardFields.tsx","lib/executeQueryFromClient.ts"],"sourcesContent":["\r\nimport { Helmet } from \"react-helmet\";\r\n\r\nconst PageHelmet = ({ title = '' }: { title: string }) => {\r\n    const imgUrl = process.env.REACT_APP_IMAGE_URL;\r\n    return (\r\n        <Helmet>\r\n            <title>{title}</title>\r\n            <link rel=\"icon\" type=\"image/png\" href={`${imgUrl}/logo.png`} />\r\n        </Helmet>\r\n    );\r\n};\r\n\r\nexport default PageHelmet;","import { HtmlHTMLAttributes, InputHTMLAttributes, useId, ReactNode, useState, LegacyRef, HTMLInputTypeAttribute, TextareaHTMLAttributes, CSSProperties } from \"react\";\nimport \"../style/design.css\";\n\n\ninterface TextInputProps {\n  input: InputHTMLAttributes<HTMLInputElement>;\n  label: HtmlHTMLAttributes<HTMLLabelElement>;\n  inputRef?: React.RefObject<HTMLInputElement>;\n  icon?: ReactNode; // New prop for the icon\n  iconPosition?: 'start' | 'end'; // New prop to choose icon position\n  onIconClick?: React.MouseEventHandler<HTMLDivElement> | undefined,\n  disableIcon?: boolean\n  containerStyle?: CSSProperties\n}\n\ninterface TextAreaPrps {\n  textarea: TextareaHTMLAttributes<HTMLTextAreaElement>\n  label: HtmlHTMLAttributes<HTMLLabelElement>;\n  _inputRef: LegacyRef<HTMLTextAreaElement>\n  icon?: ReactNode; // New prop for the icon\n  iconPosition?: 'start' | 'end'; // New prop to choose icon position\n  onIconClick?: React.MouseEventHandler<HTMLDivElement> | undefined,\n  disableIcon?: boolean\n}\n\ninterface TextFormatedInputProps extends TextInputProps {\n  onChange?: React.ChangeEventHandler<HTMLInputElement> | undefined\n}\nexport function TextFormatedInput({\n  input,\n  label,\n  inputRef,\n  icon,\n  iconPosition = 'end', // Default position is 'end'\n  disableIcon = false,\n  onIconClick = (e) => { },\n  onChange = (e) => { },\n  containerStyle\n}: TextFormatedInputProps) {\n  // const [inputValue, setInputValue] = useState('');\n  const id = useId();\n\n\n  // Helper function to format numbers with commas\n  const formatNumber = (value: string) => {\n    if (!value) return value;\n\n    // Split the value into integer and decimal parts\n    const parts = value.split('.');\n\n    // Add commas to the integer part only\n    parts[0] = parts[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n\n    // Join the integer and decimal parts if decimal exists\n    return parts.join('.');\n  };\n\n  // Helper function to remove commas\n  const unformatNumber = (value: string) => {\n    return value.replace(/,/g, '');\n  };\n\n  // Function to ensure two decimal places\n  const ensureTwoDecimals = (value: string) => {\n    // If the value has no decimal part, append '.00'\n    if (!value.includes('.')) {\n      if (value === '') {\n        return '0.00';\n      } else {\n\n        return value + '.00';\n      }\n    }\n\n    // If the value has one decimal place, append '0'\n    const parts = value.split('.');\n    if (parts[1].length === 1) {\n      return value + '0';\n    }\n\n    // If it already has two decimal places, return as is\n    return value;\n  };\n\n  const handleChange = (e: any) => {\n    let value = e.target.value;\n\n    // Remove commas for processing\n    value = unformatNumber(value);\n\n    // Allow only numbers, commas, and one decimal point\n    const regex = /^-?\\d+(,\\d{3})*(\\.\\d*)?$/;\n\n    // Remove commas for processing\n    value = unformatNumber(value);\n\n    // Check if the value is valid\n    if (value === '' || regex.test(value)) {\n      // Set the formatted value back in the input field\n\n      //setInputValue(formatNumber(value));\n      e.target.value = formatNumber(value)\n\n    }\n  };\n\n  const handleBlur = (e: any) => {\n    let value = unformatNumber(e.target.value);\n\n    // Ensure the value has two decimal places\n    value = ensureTwoDecimals(value);\n\n    // Set the value with commas and .00 (if needed)\n    // setInputValue(formatNumber(value));\n    e.target.value = formatNumber(value)\n  };\n\n  return (\n    <div\n      style={{\n        display: 'flex',\n        alignItems: 'center',\n        position: 'relative',\n        ...containerStyle // Enable absolute positioning for icon\n      }}\n    >\n      <label {...label} htmlFor={id}>\n        {label.title}\n      </label>\n      {icon && iconPosition === 'start' && (\n        <div style={{ position: 'absolute', left: '8px', zIndex: 1 }}>\n          {icon}\n        </div>\n      )}\n      <input\n        ref={inputRef}\n        id={id}\n        {...input}\n        type=\"text\"\n        style={{\n          height: '100%',\n          ...input.style,\n        }}\n        onChange={(e) => {\n          handleChange(e)\n          onChange(e)\n        }}\n        onBlur={(e) => {\n          handleBlur(e)\n        }}  // Add .00 on blur\n\n      />\n      {icon && iconPosition === 'end' && (\n        <div onClick={onIconClick}\n          style={{\n            position: 'absolute',\n            right: '2px',\n            top: \"50%\",\n            transform: \"translateY(-50%)\",\n            zIndex: 1,\n            cursor: disableIcon ? \"none\" : \"pointer\",\n            display: \"flex\",\n            alignItems: \"center\",\n            justifyContent: \"center\",\n            background: \"white\",\n            pointerEvents: disableIcon ? \"none\" : \"auto\"\n          }}>\n          {icon}\n        </div>\n\n      )\n      }\n    </div >\n  );\n}\n\n\nexport function TextInput({\n  input,\n  label,\n  inputRef,\n  icon,\n  iconPosition = 'end', // Default position is 'end'\n  disableIcon = false,\n  containerStyle,\n  onIconClick = (e) => { }\n}: TextInputProps) {\n  const id = useId();\n\n\n  return (\n    <div\n      style={{\n        display: 'flex',\n        alignItems: 'center',\n        position: 'relative',\n        ...containerStyle\n      }}\n    >\n      <label {...label} htmlFor={id}>\n        {label.title}\n      </label>\n      {icon && iconPosition === 'start' && (\n        <div style={{ position: 'absolute', left: '8px', zIndex: 1 }}>\n          {icon}\n        </div>\n      )}\n      <input\n        ref={inputRef}\n        id={id}\n        {...input}\n        style={{\n          height: '100%',\n          ...input.style,\n        }}\n      />\n      {icon && iconPosition === 'end' && (\n        <div onClick={onIconClick}\n          style={{\n            position: 'absolute',\n            right: '2px',\n            top: \"50%\",\n            transform: \"translateY(-50%)\",\n            zIndex: 1,\n            cursor: disableIcon ? \"none\" : \"pointer\",\n            display: \"flex\",\n            alignItems: \"center\",\n            justifyContent: \"center\",\n            background: \"white\",\n            pointerEvents: disableIcon ? \"none\" : \"auto\",\n          }}>\n          {icon}\n        </div>\n\n      )\n      }\n    </div >\n  );\n}\n\n\n\nexport function TextAreaInput({\n  textarea,\n  label,\n  _inputRef,\n  icon,\n  iconPosition = 'end', // Default position is 'end'\n  disableIcon = false,\n  onIconClick = (e) => { }\n}: TextAreaPrps) {\n  const id = useId();\n\n  return (\n    <div\n      style={{\n        display: 'flex',\n        alignItems: 'center',\n        position: 'relative', // Enable absolute positioning for icon\n      }}\n    >\n      <label {...label} htmlFor={id}>\n        {label.title}\n      </label>\n      {icon && iconPosition === 'start' && (\n        <div style={{ position: 'absolute', left: '8px', zIndex: 1 }}>\n          {icon}\n        </div>\n      )}\n      <textarea\n        ref={_inputRef}\n        id={id}\n        {...textarea}\n        style={{\n          height: '100%',\n          ...textarea.style,\n        }}\n\n      />\n      {icon && iconPosition === 'end' && (\n        <div onClick={onIconClick}\n          style={{\n            position: 'absolute',\n            right: '2px',\n            top: \"50%\",\n            transform: \"translateY(-50%)\",\n            zIndex: 1,\n            cursor: disableIcon ? \"none\" : \"pointer\",\n            display: \"flex\",\n            alignItems: \"center\",\n            justifyContent: \"center\",\n            background: \"white\",\n            pointerEvents: disableIcon ? \"none\" : \"auto\"\n          }}>\n          {icon}\n        </div>\n\n      )\n      }\n    </div >\n  );\n}\n\n\nexport function SelectInput({\n  select,\n  label,\n  selectRef,\n  datasource = [],\n  values = \"\",\n  display = \"\",\n  containerStyle\n}: {\n  selectRef?: React.RefObject<HTMLSelectElement>;\n  labelRef?: React.RefObject<HTMLLabelElement>;\n  select: InputHTMLAttributes<HTMLSelectElement>;\n  label: HtmlHTMLAttributes<HTMLLabelElement>;\n  datasource: Array<any>;\n  values: string;\n  display: string;\n  containerStyle?: React.CSSProperties | undefined\n}) {\n  const id = useId();\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        height: \"18px\",\n        alignItems: \"center\",\n        ...containerStyle\n      }}\n    >\n      <label {...label} htmlFor={id}>\n        {label.title}\n      </label>\n      <select\n        {...select}\n        ref={selectRef}\n        className={`select ${select.className}`}\n        style={{\n          height: \"18px\",\n          ...select.style,\n        }}\n      >\n        {datasource.map((itm, idx) => {\n          return (\n            <option key={idx} value={itm[values]}>\n              {itm[display]}\n            </option>\n          );\n        })}\n      </select>\n    </div>\n  );\n}\n\nexport function ButtonField({\n  buttonRetRef,\n  button,\n  tooltipText = \"\",\n  children,\n  disabled = false,\n}: {\n  buttonRetRef?: React.RefObject<HTMLButtonElement>;\n  button: HtmlHTMLAttributes<HTMLButtonElement>;\n  tooltipText: string;\n  children: React.ReactNode;\n  disabled?: boolean;\n}) {\n  return (\n    <div className=\"tooltip\">\n      <button\n        disabled={disabled}\n        {...button}\n        ref={buttonRetRef}\n        style={{ ...button.style, background: !disabled ? \"transparent\" : \"#f1f1f1\" }}\n        className=\"tooltip-button\"\n      >\n        {children}\n      </button>\n      {!disabled && <span className=\"tooltip-text\">{tooltipText}</span>}\n    </div>\n  );\n}\n","import { useContext } from \"react\";\r\nimport { AuthContext } from \"../components/AuthContext\"\r\n\r\n\r\n\r\nexport default function useExecuteQueryFromClient() {\r\n    const { myAxios, user } = useContext(AuthContext);\r\n\r\n\r\n    async function executeQueryToClient(query: string) {\r\n        return await myAxios.post('/execute-query', { query }, {\r\n            headers: {\r\n                Authorization: `Bearer ${user?.accessToken}`\r\n            }\r\n        })\r\n    }\r\n\r\n    return {\r\n        executeQueryToClient\r\n    }\r\n}\r\n\r\n"],"names":["_ref","_ref$title","title","_jsxs","Helmet","children","_jsx","rel","type","href","concat","process","TextFormatedInput","input","label","inputRef","icon","_ref$iconPosition","iconPosition","_ref$disableIcon","disableIcon","_ref$onIconClick","onIconClick","e","_ref$onChange","onChange","containerStyle","id","useId","formatNumber","value","parts","split","replace","join","unformatNumber","style","_objectSpread","display","alignItems","position","htmlFor","left","zIndex","ref","height","target","test","handleChange","onBlur","includes","length","ensureTwoDecimals","handleBlur","onClick","right","top","transform","cursor","justifyContent","background","pointerEvents","TextInput","_ref2","_ref2$iconPosition","_ref2$disableIcon","_ref2$onIconClick","TextAreaInput","_ref3","textarea","_inputRef","_ref3$iconPosition","_ref3$disableIcon","_ref3$onIconClick","SelectInput","_ref4","select","selectRef","_ref4$datasource","datasource","_ref4$values","values","_ref4$display","className","map","itm","idx","ButtonField","_ref5","buttonRetRef","button","_ref5$tooltipText","tooltipText","_ref5$disabled","disabled","useExecuteQueryFromClient","_executeQueryToClient","_useContext","useContext","AuthContext","myAxios","user","executeQueryToClient","_x","_asyncToGenerator","_regeneratorRuntime","mark","_callee","query","wrap","_context","prev","next","post","headers","Authorization","accessToken","abrupt","sent","stop","apply","arguments"],"sourceRoot":""}