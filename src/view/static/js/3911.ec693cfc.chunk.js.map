{"version":3,"file":"static/js/3911.ec693cfc.chunk.js","mappings":"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","sources":["feautures/LandingPage.tsx"],"sourcesContent":["import { useState, FormEvent, useContext } from \"react\";\nimport { Box, Button, TextField, Alert, FormHelperText } from \"@mui/material\";\nimport { useNavigate } from \"react-router-dom\";\nimport { AuthContext } from \"../components/AuthContext\";\nimport { useMutation } from \"react-query\";\nimport { wait } from \"../lib/wait\";\nimport { AxiosInstance } from \"axios\";\nimport Swal from \"sweetalert2\";\nimport IconButton from \"@mui/material/IconButton\";\nimport OutlinedInput from \"@mui/material/OutlinedInput\";\nimport InputLabel from \"@mui/material/InputLabel\";\nimport InputAdornment from \"@mui/material/InputAdornment\";\nimport FormControl from \"@mui/material/FormControl\";\nimport Visibility from \"@mui/icons-material/Visibility\";\nimport VisibilityOff from \"@mui/icons-material/VisibilityOff\";\nimport CircularProgress from \"@mui/material/CircularProgress\";\nimport { green } from \"@mui/material/colors\";\nimport \"../style/landingpage.css\";\n\nasync function Login(\n  myAxios: AxiosInstance,\n  username: string,\n  password: string\n) {\n  return await myAxios.post(\n    \"/login\",\n    {\n      username,\n      password,\n    },\n    { withCredentials: true }\n  );\n}\n\nexport default function LandingPage() {\n  const navigate = useNavigate();\n  const [errors, setErrors] = useState({\n    username: false,\n    password: false,\n    success: false,\n    message: \"\",\n  });\n  const { setUser, myAxios } = useContext(AuthContext);\n  const { mutate, isLoading } = useMutation({\n    mutationKey: \"login\",\n    mutationFn: async (variables: { username: string; password: string }) =>\n      wait(1200).then(\n        async () => await Login(myAxios, variables.username, variables.password)\n      ),\n    onSuccess: (res) => {\n      if (res.data.username) {\n        return setErrors({\n          username: true,\n          password: false,\n          success: false,\n          message: res.data.message,\n        });\n      }\n      if (res.data.password) {\n        return setErrors({\n          username: false,\n          password: true,\n          success: false,\n          message: res.data.message,\n        });\n      }\n      setErrors({\n        username: false,\n        password: false,\n        success: true,\n        message: res.data.message,\n      });\n      Swal.fire({\n        position: \"center\",\n        icon: \"success\",\n        title: res.data.message,\n        showConfirmButton: false,\n        timer: 800,\n      }).then(() => {\n        setUser(res.data.user);\n        myAxios\n          .post(\"/get-user-details\", {\n            department: res.data.user?.department,\n            userAccess: res.data.user?.userAccess,\n            is_admin: res.data.user?.is_master_admin,\n            ACCESS_TOKEN: res.data.user?.accessToken,\n            REFRESH_TOKEN: res.data.user?.refreshToken,\n            ...res.data?.cokie,\n          })\n          .then((res) => {\n            console.log(res);\n            window.location.href = \"myreport://run\";\n          });\n        if (res.data.user.is_master_admin) {\n          navigate(\"/master-admin-dashboard\");\n        } else {\n          navigate(\"/dashboard\");\n        }\n      });\n    },\n  });\n  const [showPassword, setShowPassword] = useState(false);\n  const handleClickShowPassword = () => setShowPassword((show) => !show);\n  const handleMouseDownPassword = (\n    event: React.MouseEvent<HTMLButtonElement>\n  ) => {\n    event.preventDefault();\n  };\n\n  async function onSubmit(e: FormEvent) {\n    e.preventDefault();\n    const formData = new FormData(e.currentTarget as HTMLFormElement);\n    mutate({\n      username: formData.get(\"username\") as string,\n      password: formData.get(\"password\") as string,\n    });\n  }\n\n  return (\n    <form className=\"main\" onSubmit={onSubmit}>\n      <div\n        style={{\n          width: \"400px\",\n          height: \"auto\",\n          display: \"flex\",\n          flexDirection: \"column\",\n          rowGap: \"15px\",\n          alignItems: \"center\",\n        }}\n      >\n        <img\n          alt=\"Upward Insurance\"\n          src={process.env.REACT_APP_IMAGE_URL + \"logo.png\"}\n          style={{ width: \"120px\", background: \"white\" }}\n        />\n        <h2\n          style={{\n            fontSize: \"20px\",\n            fontWeight: \"400\",\n            textAlign: \"center\",\n            color: \"rgb(14, 13, 13)\",\n          }}\n          className=\"text-color\"\n        >\n          LOGIN TO UPWARD INSURANCE\n        </h2>\n        <div\n          style={{\n            display: \"flex\",\n            flexDirection: \"column\",\n            rowGap: \"15px\",\n          }}\n        >\n          <div style={{ display: \"flex\", flexDirection: \"column\" }}>\n            <div\n              style={{\n                display: \"flex\",\n                flexDirection: \"column\",\n                width: \"100%\",\n              }}\n            >\n              <label\n                style={{\n                  fontSize: \"12px\",\n                  marginBottom: \"10px\",\n                  color: \"#535050\",\n                }}\n                htmlFor=\"username\"\n              >\n                USERNAME\n              </label>\n              <input\n                className=\"text-field\"\n                style={{\n                  borderRadius: \"5px\",\n                  border: \"none\",\n                  height: \"25px\",\n                  width: \"280px\",\n                  background: \"#FFFBFB\",\n                  padding: \"0px 5px\",\n                  outline: errors.username ? \"1px solid red\" : \"\",\n                }}\n                name=\"username\"\n                id=\"username\"\n                required={true}\n                onFocus={() => {\n                  setErrors({\n                    username: false,\n                    password: false,\n                    success: false,\n                    message: \"\",\n                  });\n                }}\n              />\n            </div>\n            {errors.username && (\n              <p className=\"text-field-error\">\n                {errors.message.toLocaleLowerCase()}\n              </p>\n            )}\n          </div>\n          <div style={{ display: \"flex\", flexDirection: \"column\" }}>\n            <div style={{ display: \"flex\", flexDirection: \"column\" }}>\n              <label\n                style={{\n                  fontSize: \"12px\",\n                  marginBottom: \"10px\",\n                  color: \"#535050\",\n                }}\n                htmlFor=\"password\"\n              >\n                PASSWORD\n              </label>\n              <input\n                className=\"text-field\"\n                style={{\n                  borderRadius: \"5px\",\n                  border: \"none\",\n                  height: \"25px\",\n                  width: \"280px\",\n                  background: \"#FFFBFB\",\n                  padding: \"0px 5px\",\n                  outline: errors.password ? \"1px solid red\" : \"\",\n                }}\n                type={showPassword ? \"text\" : \"password\"}\n                id=\"password\"\n                name=\"password\"\n                required={true}\n                onFocus={() => {\n                  setErrors({\n                    username: false,\n                    password: false,\n                    success: false,\n                    message: \"\",\n                  });\n                }}\n              />\n            </div>\n            {errors.password && (\n              <p className=\"text-field-error\">\n                {errors.message.toLocaleLowerCase()}\n              </p>\n            )}\n          </div>\n          <div\n            style={{\n              display: \"flex\",\n              flexDirection: \"row\",\n              columnGap: \"5px\",\n              alignItems: \"center\",\n            }}\n          >\n            <input\n              checked={showPassword}\n              id=\"show-password\"\n              className=\"text-field\"\n              style={{\n                border: \"none\",\n                background: \"#FFFBFB\",\n              }}\n              type=\"checkbox\"\n              onChange={(e) => {\n                setShowPassword(e.target.checked);\n              }}\n              onKeyDown={(e) => {\n                if (e.key === \"Enter\") {\n                  e.preventDefault();\n                  console.log(\"qwe\");\n                  setShowPassword((e) => !e);\n                }\n              }}\n            />\n            <label\n              style={{\n                fontSize: \"10px\",\n                color: \"#1f1e1e\",\n                padding: 0,\n                margin: 0,\n              }}\n              htmlFor=\"show-password\"\n            >\n              SHOW PASSWORD\n            </label>\n          </div>\n        </div>\n\n        <button\n          onClick={(e) => {\n            ripple(e);\n          }}\n          onKeyDown={(e) => {\n            if (e.key === \"Enter\" || e.key === \"NumEnter\") {\n              ripple(e);\n            }\n          }}\n          className={`button-save ripple-button `}\n          style={{\n            border: \"none\",\n            height: \"25px\",\n            width: \"290px\",\n            fontSize: \"12px\",\n            marginTop: \"15px\",\n            background: \"#09BBB0\",\n            color: \"#FFFBFB\",\n            position: \"relative\",\n            overflow: \"hidden\",\n            cursor: \"pointer\",\n          }}\n          type=\"submit\"\n        >\n          LOGIN\n        </button>\n      </div>\n      {isLoading && (\n        <div className=\"table-loading\">\n          <div className=\"loader\">\n            <img\n              alt=\"loader-gif\"\n              src={process.env.REACT_APP_IMAGE_URL + \"/image/loading.gif\"}\n            />\n          </div>\n        </div>\n      )}\n    </form>\n\n    // <Box\n    //   sx={{\n    //     display: \"flex\",\n    //     justifyContent: \"center\",\n    //     alignItems: \"center\",\n    //     height: \"100vh\",\n    //     width: \"100%\",\n    //   }}\n    // >\n    //   <Box\n    //     sx={(theme) => ({\n    //       boxSizing: \"border-box\",\n    //       width: \"400px\",\n    //       height: \"350px\",\n    //       padding: \"30px\",\n    //       borderRadius: \"3px\",\n    //       [theme.breakpoints.down(\"sm\")]: {\n    //         width: \"100%\",\n    //         padding: \"50px 15px\",\n    //         height: \"auto\",\n    //       },\n    //     })}\n    //   >\n    //     <Box\n    //       sx={{\n    //         display: \"flex\",\n    //         alignItems: \"center\",\n    //         justifyContent: \"center\",\n    //         marginBottom: \"30px\",\n    //         flexDirection: \"column\",\n    //       }}\n    //     >\n    //       <img\n    //         alt=\"Upward Insurance\"\n    //         src={process.env.REACT_APP_IMAGE_URL + \"logo.png\"}\n    //         style={{ width: \"120px\", height: \"120px\" }}\n    //       />\n    //       <h3\n    //         style={{\n    //           fontFamily: \"sans-serif\",\n    //           color: \"black\",\n    //           fontWeight: \"500\",\n    //           letterSpacing: \"1.5px\",\n    //         }}\n    //       >\n    //         LOGIN YOUR ACCOUNT\n    //       </h3>\n    //     </Box>\n    //     {errors.success && (\n    //       <Alert severity=\"success\" sx={{ marginBottom: \"20px\" }}>\n    //         {errors.message}\n    //       </Alert>\n    //     )}\n    //     <form onSubmit={onSubmit}>\n    //       <div style={{ marginBottom: \"15px\" }}>\n    //         <TextField\n    //           label=\"username\"\n    //           fullWidth\n    //           size=\"small\"\n    //           name=\"username\"\n    //           type=\"text\"\n    //           error={errors.username}\n    //           required\n    //           helperText={errors.username && errors.message}\n    //           onFocus={() =>\n    //             setErrors({\n    //               username: false,\n    //               password: false,\n    //               success: false,\n    //               message: \"\",\n    //             })\n    //           }\n    //         />\n    //       </div>\n    //       <div style={{ marginBottom: \"15px\" }}>\n    //         <FormControl\n    //           fullWidth\n    //           variant=\"outlined\"\n    //           size=\"small\"\n    //           error={errors.password}\n    //           required={true}\n    //           onFocus={() =>\n    //             setErrors({\n    //               username: false,\n    //               password: false,\n    //               success: false,\n    //               message: \"\",\n    //             })\n    //           }\n    //         >\n    //           <InputLabel htmlFor=\"outlined-adornment-password\">\n    //             password\n    //           </InputLabel>\n    //           <OutlinedInput\n    //             name=\"password\"\n    //             id=\"outlined-adornment-password\"\n    //             type={showPassword ? \"text\" : \"password\"}\n    //             endAdornment={\n    //               <InputAdornment position=\"end\">\n    //                 <IconButton\n    //                   aria-label=\"toggle password visibility\"\n    //                   onClick={handleClickShowPassword}\n    //                   onMouseDown={handleMouseDownPassword}\n    //                   edge=\"end\"\n    //                 >\n    //                   {showPassword ? <VisibilityOff /> : <Visibility />}\n    //                 </IconButton>\n    //               </InputAdornment>\n    //             }\n    //             label=\"password\"\n    //           />\n    //           {errors.password && (\n    //             <FormHelperText>{errors.message}</FormHelperText>\n    //           )}\n    //         </FormControl>\n    //       </div>\n    //       <Box sx={{ position: \"relative\", width: \"100%\" }}>\n    //         <Button\n    //           variant=\"contained\"\n    //           sx={{ width: \"100%\" }}\n    //           disabled={isLoading}\n    //           type=\"submit\"\n    //         >\n    //           Login\n    //         </Button>\n    //         {isLoading && (\n    //           <CircularProgress\n    //             size={24}\n    //             sx={{\n    //               color: green[500],\n    //               position: \"absolute\",\n    //               top: \"50%\",\n    //               left: \"50%\",\n    //               marginTop: \"-12px\",\n    //               marginLeft: \"-12px\",\n    //             }}\n    //           />\n    //         )}\n    //       </Box>\n    //     </form>\n    //   </Box>\n    // </Box>\n  );\n}\n\nfunction ripple(e: any) {\n  const button = e.currentTarget;\n  const rect = button.getBoundingClientRect();\n  const ripple = document.createElement(\"span\");\n\n  const size = Math.max(button.offsetWidth, button.offsetHeight);\n  const x = e.clientX - rect.left - size / 2;\n  const y = e.clientY - rect.top - size / 2;\n\n  ripple.style.width = ripple.style.height = `${size}px`;\n  ripple.style.left = `${x}px`;\n  ripple.style.top = `${y}px`;\n  ripple.classList.add(\"ripple\");\n\n  button.appendChild(ripple);\n\n  setTimeout(() => {\n    ripple.remove();\n  }, 600); // Remove after animation\n}\n"],"names":["Login","_x","_x2","_x3","_Login","_asyncToGenerator","_regeneratorRuntime","mark","_callee","myAxios","username","password","wrap","_context","prev","next","post","withCredentials","abrupt","sent","stop","apply","arguments","LandingPage","_mutationFn","_onSubmit","navigate","useNavigate","_useState","useState","success","message","_useState2","_slicedToArray","errors","setErrors","_useContext","useContext","AuthContext","setUser","_useMutation","useMutation","mutationKey","mutationFn","_x4","_callee3","variables","_context3","wait","then","_callee2","_context2","onSuccess","res","data","Swal","position","icon","title","showConfirmButton","timer","_res$data$user","_res$data$user2","_res$data$user3","_res$data$user4","_res$data$user5","_res$data","user","_objectSpread","department","userAccess","is_admin","is_master_admin","ACCESS_TOKEN","accessToken","REFRESH_TOKEN","refreshToken","cokie","console","log","window","location","href","mutate","isLoading","_useState3","_useState4","showPassword","setShowPassword","_jsxs","className","onSubmit","_x5","_callee4","e","formData","_context4","preventDefault","FormData","currentTarget","get","children","style","width","height","display","flexDirection","rowGap","alignItems","_jsx","alt","src","process","background","fontSize","fontWeight","textAlign","color","marginBottom","htmlFor","borderRadius","border","padding","outline","name","id","required","onFocus","toLocaleLowerCase","type","columnGap","checked","onChange","target","onKeyDown","key","margin","onClick","ripple","marginTop","overflow","cursor","button","rect","getBoundingClientRect","document","createElement","size","Math","max","offsetWidth","offsetHeight","x","clientX","left","y","clientY","top","concat","classList","add","appendChild","setTimeout","remove"],"sourceRoot":""}