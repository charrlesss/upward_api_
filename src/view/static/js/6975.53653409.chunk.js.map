{"version":3,"file":"static/js/6975.53653409.chunk.js","mappings":"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","sources":["components/DatePicker.tsx","components/ModalWithTable.tsx","components/NumberFormat.tsx","components/Table.tsx","feautures/Admin/Task/Production/Policies/PolicyComponent/PA/PAPolicyComponent/PAPolicyInformation.tsx","feautures/Admin/Task/Production/Policies/PolicyComponent/PA/PAPolicy.tsx","hooks/useQueryModalTable.tsx","lib/confirmationAlert.ts","../node_modules/@mui/icons-material/Add.js","../node_modules/@mui/icons-material/Delete.js","../node_modules/@mui/icons-material/PersonSearch.js","../node_modules/@mui/icons-material/Save.js","../node_modules/@mui/material/colors/pink.js"],"sourcesContent":["import { LocalizationProvider } from \"@mui/x-date-pickers/LocalizationProvider\";\nimport { AdapterDateFns } from \"@mui/x-date-pickers/AdapterDateFns\";\nimport { DatePicker } from \"@mui/x-date-pickers\";\nexport default function CustomDatePicker({\n  label,\n  name,\n  onChange,\n  value,\n  onKeyDown,\n  inputRef,\n  datePickerRef,\n  fullWidth,\n  textField,\n  minWidth = \"200px\",\n  ...rest\n}: any) {\n  return (\n    <LocalizationProvider dateAdapter={AdapterDateFns}>\n      <DatePicker\n      floatingLabelStyle={{color: \"black\" }}\n        value={value}\n        onChange={onChange}\n        ref={datePickerRef}\n        slotProps={{\n          textField: {\n            size: \"small\",\n            label,\n            name,\n            onKeyDown,\n            inputRef: inputRef,\n            fullWidth,\n\n            ...textField,\n          },\n        }}\n        InputLabelProps={{\n          sx: {\n            color: \"black\",\n          },\n        }}\n        sx={{\n          minWidth,\n          fieldset: { borderColor: \"black\" },\n          \".MuiFormLabel-root\": { fontSize: \"14px\" },\n          \".MuiFormLabel-root[data-shrink=false]\": {\n            top: \"-5px\",\n          },\n        }}\n        {...rest}\n      />\n    </LocalizationProvider>\n  );\n}\n","import React from \"react\";\nimport {\n  GridRowSelectionModel,\n  GridRowParams,\n  GridCellParams,\n  GridTreeNode,\n} from \"@mui/x-data-grid\";\nimport { Modal, Box, Typography, IconButton, TextField } from \"@mui/material\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport Table from \"./Table\";\n\ninterface ModalWithTableParams {\n  height: number;\n  isLoading: boolean;\n  queryKey: string;\n  columns: Array<any>;\n  onSelectionChange: (rowSelectionModel: Array<any>, data: Array<any>) => void;\n  setRows: React.Dispatch<React.SetStateAction<GridRowSelectionModel>>;\n  rows: GridRowSelectionModel;\n  id: string;\n  onCloseModal: () => void;\n  onClickCloseIcon: () => void;\n  showModal: boolean;\n  searchOnChange:\n  | React.ChangeEventHandler<HTMLInputElement | HTMLTextAreaElement>\n  | undefined;\n  title?: string;\n  searchRef?: React.RefObject<HTMLInputElement>;\n  onCellKeyDown?: any;\n  onSearchKeyEnter?: (search: string) => void;\n  isRowSelectable?: ((params: GridRowParams<any>) => boolean) | undefined;\n  getCellClassName?:\n  | ((params: GridCellParams<any, any, any, GridTreeNode>) => string)\n  | undefined;\n}\n\nconst style = {\n  position: \"absolute\" as \"absolute\",\n  top: \"50%\",\n  left: \"50%\",\n  transform: \"translate(-50%, -50%)\",\n  width: \"70%\",\n  bgcolor: \"background.paper\",\n  boxShadow: 24,\n  p: 4,\n  heigth: \"auto\",\n};\n\nexport default function ModalWithTable({\n  height,\n  isLoading,\n  queryKey,\n  columns,\n  onSelectionChange,\n  setRows,\n  rows,\n  id,\n  onCloseModal,\n  showModal,\n  onClickCloseIcon,\n  searchOnChange,\n  title = \"\",\n  searchRef,\n  onCellKeyDown,\n  onSearchKeyEnter = () => { },\n  isRowSelectable,\n  getCellClassName,\n}: ModalWithTableParams) {\n  const mainId = generateRandomClass();\n\n  return (\n    <Modal\n      open={showModal}\n      onClose={onCloseModal}\n      aria-labelledby=\"modal-modal-title\"\n      aria-describedby=\"modal-modal-description\"\n    >\n      <Box sx={style}>\n        <Typography id=\"modal-modal-title\" variant=\"h6\" component=\"h2\" mb={2}>\n          {title}\n        </Typography>\n        <TextField\n          size=\"small\"\n          label=\"Search\"\n          sx={{ marginBottom: \"10px\" }}\n          fullWidth\n          onChange={searchOnChange}\n          InputProps={{\n            inputRef: searchRef,\n          }}\n          onKeyDown={(e) => {\n            if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n              e.preventDefault();\n              onSearchKeyEnter(searchRef?.current?.value as string);\n            }\n            keyBoardSelectionTable(\n              e,\n              mainId,\n              searchRef?.current as HTMLInputElement\n            );\n          }}\n        />\n        <div\n          className={`${mainId} main-table-selection-container`}\n          style={{ position: \"relative\", height: `${height + 20}px` }}\n        >\n          <Table\n            isSingleSelection={true}\n            isRowFreeze={false}\n            columns={columns}\n            isLoading={isLoading}\n            dataSelection={(selection, data, code) => {\n              onSelectionChange(selection, data);\n            }}\n            table_id={id}\n            rows={rows}\n            isRowSelectable={isRowSelectable}\n            getCellClassName={getCellClassName}\n          />\n        </div>\n\n        <div style={{ position: \"absolute\", top: \"10px\", right: \"10px\" }}>\n          <IconButton\n            aria-label=\"search-client\"\n            color=\"secondary\"\n            onClick={onClickCloseIcon}\n          >\n            <CloseIcon />\n          </IconButton>\n        </div>\n      </Box>\n    </Modal>\n  );\n}\n\nexport function generateRandomClass() {\n  const randomNumber = Math.floor(Math.random() * 10000);\n  const randomClass = \"main-\" + randomNumber;\n  return randomClass;\n}\n\nfunction keyBoardUpDown(className: string, el: HTMLElement) {\n  const firstRowParent = document.querySelector(\n    `.${className} .MuiDataGrid-row`\n  );\n  const firstInput = firstRowParent?.querySelector(\"input\");\n  firstInput?.focus();\n  const event = new MouseEvent(\"mouseenter\", {\n    bubbles: true,\n    cancelable: true,\n    view: window,\n  });\n  firstRowParent?.dispatchEvent(event);\n  firstInput?.addEventListener(\"keydown\", (es: any) => {\n    if (es.key === \"ArrowUp\") {\n      es.preventDefault();\n      el.focus();\n    }\n    if (es.key === \"ArrowUp\") {\n      firstRowParent?.classList.remove(\"hover-keyboard\");\n    }\n  });\n}\n\nexport function keyBoardSelectionTable(\n  e: React.KeyboardEvent<HTMLDivElement>,\n  className: string,\n  el: HTMLElement\n) {\n  const mainId = className;\n  if (e.code === \"ArrowDown\") {\n    const rows = document.querySelectorAll(`.${mainId} .MuiDataGrid-row`);\n    e.preventDefault();\n    rows[0]?.classList.add(\"hover-keyboard\");\n    keyBoardUpDown(className, el);\n    rows.forEach((el, idx) => {\n      el.addEventListener(\"keydown\", (es: any) => {\n        if (es.key === \"ArrowUp\") {\n          if (idx <= 0) {\n            return;\n          }\n\n          es.preventDefault();\n          rows[idx]?.classList.remove(\"hover-keyboard\");\n          rows[idx - 1]?.classList.add(\"hover-keyboard\");\n          return;\n        }\n        if (es.key === \"ArrowDown\") {\n          es.preventDefault();\n          if (idx >= rows.length - 1) {\n            return;\n          }\n          rows[idx]?.classList.remove(\"hover-keyboard\");\n          rows[idx + 1]?.classList.add(\"hover-keyboard\");\n        }\n      });\n    });\n  }\n}\n","import React from \"react\";\nimport { NumericFormat, NumericFormatProps } from \"react-number-format\";\n\ninterface CustomProps {\n  onChange: (event: { target: { name: string; value: string } }) => void;\n  name: string;\n}\n\nexport const NumericFormatCustom = React.forwardRef<\n  NumericFormatProps,\n  CustomProps\n>(function NumericFormatCustom(props, ref) {\n  const { onChange, ...other } = props;\n\n  return (\n    <NumericFormat\n      {...other}\n      getInputRef={ref}\n      onValueChange={(values) => {\n        onChange({\n          target: {\n            name: props.name,\n            value: values.value,\n          },\n        });\n      }}\n      allowNegative={false}\n      thousandSeparator\n      valueIsNumericString\n      //   prefix=\"$\"\n    />\n  );\n});\n","import {\n  useState,\n  useContext,\n  createContext,\n  ReactElement,\n  forwardRef,\n  useImperativeHandle,\n} from \"react\";\nimport { Box, LinearProgress } from \"@mui/material\";\nimport {\n  DataGrid,\n  GridSlotsComponentsProps,\n  gridPageCountSelector,\n  GridPagination,\n  useGridApiContext,\n  useGridSelector,\n  GridRowSelectionModel,\n  GridColDef,\n  GridRowParams,\n  GridCellParams,\n  GridTreeNode,\n} from \"@mui/x-data-grid\";\nimport { TablePaginationProps } from \"@mui/material/TablePagination\";\nimport MuiPagination from \"@mui/material/Pagination\";\n\ninterface TableProps {\n  isLoading: boolean;\n  columns: Array<any>;\n  rows: Array<any>;\n  table_id: string;\n  isSingleSelection: boolean;\n  isRowFreeze: boolean;\n  dataSelection?: (selection: any, data: any, code: string | null) => void;\n  CustomFooterComponent?: any;\n  isRowSelectable?: ((params: GridRowParams<any>) => boolean) | undefined;\n  getCellClassName?:\n    | ((params: GridCellParams<any, any, any, GridTreeNode>) => string)\n    | undefined;\n  footerChildren?: (\n    rowSelectionModel: GridRowSelectionModel,\n    rows: Array<any>\n  ) => ReactElement;\n  footerPaginationPosition?: string;\n  showFooterSelectedCount?: boolean;\n  checkboxSelection?: boolean | undefined;\n}\n\nconst TableContext = createContext<{\n  rowSelectionModel: GridRowSelectionModel;\n  rows: Array<any>;\n  footerPaginationPosition?: string;\n  showFooterSelectedCount?: boolean;\n  footerChildren: (\n    rowSelectionModel: GridRowSelectionModel,\n    rows: Array<any>\n  ) => ReactElement;\n}>({\n  rows: [],\n  rowSelectionModel: [],\n  footerChildren: () => <div></div>,\n  footerPaginationPosition: \"right-left\",\n  showFooterSelectedCount: true,\n});\nconst Table = forwardRef(\n  (\n    {\n      isLoading,\n      columns,\n      rows,\n      table_id,\n      isSingleSelection,\n      isRowFreeze,\n      dataSelection,\n      CustomFooterComponent = DefaultooterComponent,\n      isRowSelectable,\n      getCellClassName,\n      checkboxSelection = true,\n      footerChildren = (\n        rowSelectionModel: GridRowSelectionModel,\n        rows: Array<any>\n      ) => <div></div>,\n      footerPaginationPosition = \"right-left\",\n      showFooterSelectedCount = true,\n    }: TableProps,\n    ref\n  ) => {\n    const [selectedRows, setSelectedRows] = useState<any>([]);\n\n    useImperativeHandle(ref, () => ({\n      removeSelection: () => {\n        setSelectedRows([]);\n      },\n      getSelectedRows: () => {\n        return rows.filter((item: any) =>\n          selectedRows?.includes(item[table_id])\n        );\n      },\n      setSelectedRows: (data: Array<any>) => {\n        setSelectedRows(data);\n      },\n    }));\n\n    function onSelectionChange(selection: any, data: any, code: string | null) {\n      if (dataSelection) {\n        dataSelection(selection, data, code);\n      }\n    }\n    let freezeArray: Array<any> = [];\n\n    return (\n      <TableContext.Provider\n        value={{\n          showFooterSelectedCount,\n          footerPaginationPosition,\n          rowSelectionModel: selectedRows,\n          rows,\n          footerChildren,\n        }}\n      >\n        <DataGrid\n          slots={{\n            loadingOverlay: LinearProgress,\n            footer: CustomFooterComponent,\n          }}\n          initialState={{\n            pagination: { paginationModel: { pageSize: 35 } },\n          }}\n          loading={isLoading}\n          getRowId={(row) => row[table_id]}\n          columns={columns.filter((col: any) => !col.hide) as GridColDef<any>[]}\n          rows={rows}\n          showCellVerticalBorder={true}\n          showColumnVerticalBorder={true}\n          checkboxSelection={checkboxSelection}\n          rowSelectionModel={selectedRows}\n          rowHeight={25}\n          columnHeaderHeight={35}\n          pageSizeOptions={[10, 20, 35, 50, 75, 100]}\n          sx={{\n            \"& .cash\": {\n              color: \"#ec4899\",\n            },\n            \"& .check\": {\n              color: \"#0891b2\",\n            },\n            \"& .approved\": {\n              color: \"green\",\n            },\n            \"& .pending\": {\n              color: \"orange\",\n            },\n            \"& .disapproved\": {\n              color: \"red\",\n            },\n            \"& .normal\": {\n              color: \"red\",\n            },\n            \"& .MuiDataGrid-row.Mui-selected:hover\": {\n              color: \"black\",\n              \"& .MuiSvgIcon-root \": {\n                fill: \"#3b82f6\",\n              },\n            },\n            \"& .hover-keyboard\": {\n              background: \"#2563eb\",\n              color: \"white\",\n              \"& .MuiSvgIcon-root \": {\n                fill: \"white\",\n              },\n            },\n            \"& .MuiDataGrid-row:hover\": {\n              background: \"#2563eb\",\n              color: \"white\",\n              \"& .MuiSvgIcon-root \": {\n                fill: \"white\",\n              },\n            },\n            \"& .MuiDataGrid-row.hover\": {\n              background: \"#2563eb\",\n              color: \"white\",\n              \"& .MuiSvgIcon-root \": {\n                fill: \"white\",\n              },\n            },\n            \"& .MuiTablePagination-root p \": {\n              padding: \"0 !important\",\n            },\n\n            ...{\n              \"& .MuiDataGrid-columnHeaders\": {\n                background: \"#64748b\",\n                color: \"white\",\n                fontSize: \"14px\",\n                // borderBottomColor: \"#38bdf8\",\n              },\n              \"& .MuiDataGrid-columnHeaderCheckbox .MuiDataGrid-columnHeaderTitleContainer .MuiSvgIcon-root \":\n                {\n                  display: isSingleSelection || isRowFreeze ? \"none\" : \"block\",\n                  fill: \"white\",\n                },\n              \"& .MuiDataGrid-columnHeaderCheckbox .MuiDataGrid-columnHeaderTitleContainer input \":\n                {\n                  display: isSingleSelection || isRowFreeze ? \"none\" : \"block\",\n                },\n            },\n            ...{\n              fontSize: 13,\n              fontWeight: 500,\n              \"& .MuiDataGrid-checkboxInput\": {\n                height: \"27px\",\n                width: \"27px\",\n              },\n              \"& .MuiDataGrid-checkboxInput svg\": {\n                height: \"20px\",\n                width: \"20px\",\n              },\n            },\n          }}\n          // onRowDoubleClick={(e, r) => {\n          //   console.log(e, r);\n          // }}\n\n          onRowSelectionModelChange={(selection) => {\n            if (isRowFreeze) {\n              if (selection.length <= 0) return;\n              freezeArray = selection;\n              if (selectedRows.includes(freezeArray[freezeArray.length - 1]))\n                return;\n\n              setSelectedRows(selection);\n\n              onSelectionChange([selection[selection.length - 1]], rows, null);\n              return;\n            }\n\n            if (!isRowFreeze && isSingleSelection) {\n              if (selectedRows && selectedRows?.length > 0) {\n                const selectionSet = new Set(selectedRows);\n                setSelectedRows(\n                  selection.filter((s: any) => !selectionSet.has(s))\n                );\n              } else {\n                setSelectedRows(selection);\n              }\n            } else {\n              setSelectedRows(selection);\n            }\n\n            onSelectionChange([selection[selection.length - 1]], rows, null);\n          }}\n          onCellKeyDown={(__: any, key: any) => {\n            const keyFinding = [\"NumpadEnter\", \"Enter\", \"Delete\", \"Backspace\"];\n            if (!keyFinding.includes(key.code)) {\n              return;\n            }\n            key.preventDefault();\n            if (key.code === \"Enter\" || key.code === \"NumpadEnter\") {\n              if (isSingleSelection && !isRowFreeze) {\n                return setSelectedRows((data: any) => {\n                  if (data && data.length > 0 && data[0] === __.rowNode.id) {\n                    onSelectionChange([], rows, key.code);\n                    return [];\n                  }\n                  onSelectionChange([__.rowNode.id], rows, key.code);\n                  return [__.rowNode.id];\n                });\n              } else {\n                setSelectedRows((data: any) => {\n                  if (\n                    data &&\n                    !isRowFreeze &&\n                    data.length > 0 &&\n                    data.includes(__.rowNode.id)\n                  ) {\n                    data = data.filter((item: any) => item !== __.rowNode.id);\n                    onSelectionChange([], rows, key.code);\n                    return data;\n                  }\n                  if (\n                    data &&\n                    isRowFreeze &&\n                    data.length > 0 &&\n                    data.includes(__.rowNode.id)\n                  ) {\n                    return data;\n                  }\n                  onSelectionChange([__.rowNode.id], rows, key.code);\n                  return [...data, __.rowNode.id];\n                });\n              }\n              return;\n            }\n            if (key.code === \"Delete\" || key.code === \"Backspace\") {\n              setSelectedRows([__.rowNode.id]);\n              return onSelectionChange([__.rowNode.id], rows, key.code);\n            }\n          }}\n          disableVirtualization\n          isRowSelectable={isRowSelectable}\n          getCellClassName={getCellClassName}\n        />\n      </TableContext.Provider>\n    );\n  }\n);\n\nexport default Table;\nfunction Pagination({\n  page,\n  onPageChange,\n  className,\n}: Pick<TablePaginationProps, \"page\" | \"onPageChange\" | \"className\">) {\n  const apiRef = useGridApiContext();\n  const pageCount = useGridSelector(apiRef, gridPageCountSelector);\n\n  return (\n    <MuiPagination\n      variant=\"outlined\"\n      color=\"primary\"\n      className={className}\n      count={pageCount}\n      page={page + 1}\n      onChange={(event, newPage) => {\n        onPageChange(event as any, newPage - 1);\n      }}\n    />\n  );\n}\n\nfunction CustomPagination(props: any) {\n  return <GridPagination ActionsComponent={Pagination} {...props} />;\n}\nfunction DefaultooterComponent(\n  props: NonNullable<GridSlotsComponentsProps[\"footer\"]>\n) {\n  const {\n    rowSelectionModel,\n    showFooterSelectedCount,\n    footerPaginationPosition,\n    footerChildren,\n    rows,\n  } = useContext(TableContext);\n  return (\n    <Box\n      sx={{\n        columnGap: \"50px\",\n        display: \"flex\",\n        width: \"100%\",\n        justifyContent: \"space-between\",\n        px: 3,\n        alignItems: \"center\",\n        flexDirection:\n          footerPaginationPosition === \"right-left\" ? \"row-reverse\" : \"row\",\n      }}\n    >\n      <CustomPagination {...props} />\n      <Box\n        sx={{\n          display: \"flex\",\n          justifyContent:\n            footerPaginationPosition === \"right-left\"\n              ? \"flex-start\"\n              : \"flex-end\",\n          flex: 1,\n          alignItems: \"center\",\n        }}\n      >\n        {showFooterSelectedCount && (\n          <div>Selected:{rowSelectionModel?.length}</div>\n        )}\n        <div>{footerChildren(rowSelectionModel, rows)}</div>\n      </Box>\n    </Box>\n  );\n}\n","import { useContext, CSSProperties, useRef } from \"react\";\nimport { PAContext } from \"../PAPolicy\";\nimport {\n  IconButton,\n  TextField,\n  FormControl,\n  InputLabel,\n  Select,\n  MenuItem,\n  Button,\n  Divider,\n  OutlinedInput,\n  InputAdornment,\n} from \"@mui/material\";\nimport PersonSearchIcon from \"@mui/icons-material/PersonSearch\";\nimport CustomDatePicker from \"../../../../../../../../components/DatePicker\";\nimport { NumericFormatCustom } from \"../../../../../../../../components/NumberFormat\";\nimport { LoadingButton } from \"@mui/lab\";\nimport { useQuery } from \"react-query\";\nimport useQueryModalTable from \"../../../../../../../../hooks/useQueryModalTable\";\nimport { addYears } from \"date-fns\";\n\nexport default function PAPolicyInformation() {\n  const {\n    state,\n    handleInputChange,\n    customInputchange,\n    myAxios,\n    user,\n    isAddOrEditMode,\n    computation,\n    dispatch,\n  } = useContext(PAContext);\n\n  const searchClientInputRef = useRef<HTMLInputElement>(null);\n  const searchAgentInputRef = useRef<HTMLInputElement>(null);\n  const dateFrom = useRef<HTMLElement>(null);\n  const dateToDateRef = useRef<HTMLElement>(null);\n  const dateIssuedDateRef = useRef<HTMLElement>(null);\n\n  const {\n    ModalComponent: ModalClientIDs,\n    openModal: openCliendIDsModal,\n    isLoading: isLoadingClientIdsModal,\n    closeModal: closeCliendIDsModal,\n  } = useQueryModalTable({\n    link: {\n      url: \"/task/production/get-clients\",\n      queryUrlName: \"clientSearch\",\n    },\n    columns: [\n      { field: \"entry_client_id\", headerName: \"ID\", width: 130 },\n      { field: \"fullname\", headerName: \"First Name\", flex: 1 },\n      {\n        field: \"entry_type\",\n        headerName: \"ID Type\",\n        width: 150,\n      },\n    ],\n    queryKey: \"get-clients\",\n    uniqueId: \"entry_client_id\",\n    responseDataKey: \"clients\",\n    onSelected: (selectedRowData) => {\n      customInputchange(selectedRowData[0].entry_client_id, \"client_id\");\n      customInputchange(selectedRowData[0].fullname, \"client_name\");\n      customInputchange(selectedRowData[0].address, \"client_address\");\n      customInputchange(selectedRowData[0].sale_officer, \"sale_officer\");\n      closeCliendIDsModal();\n    },\n    onCellKeyDown: (__: any, key: any) => {\n      if (key.code === \"Enter\" || key.code === \"NumpadEnter\") {\n        customInputchange(__.row.entry_client_id, \"client_id\");\n        customInputchange(__.row.fullname, \"client_name\");\n        customInputchange(__.row.address, \"client_address\");\n        customInputchange(__.row[0].sale_officer, \"sale_officer\");\n        closeCliendIDsModal();\n      }\n    },\n    searchRef: searchClientInputRef,\n  });\n\n  const {\n    ModalComponent: ModalAgentId,\n    openModal: openModalAgentId,\n    isLoading: isLoadingModalAgentId,\n    closeModal: closeModalAgentId,\n  } = useQueryModalTable({\n    link: {\n      url: \"/task/production/get-agents\",\n      queryUrlName: \"agentSearch\",\n    },\n    columns: [\n      { field: \"entry_agent_id\", headerName: \"ID\", width: 130 },\n      { field: \"fullname\", headerName: \"First Name\", flex: 1 },\n      {\n        field: \"entry_type\",\n        headerName: \"ID Type\",\n        width: 150,\n      },\n    ],\n    queryKey: \"get-agents\",\n    uniqueId: \"entry_agent_id\",\n    responseDataKey: \"agents\",\n    onSelected: (selectedRowData) => {\n      customInputchange(selectedRowData[0].entry_agent_id, \"agent_id\");\n      customInputchange(selectedRowData[0].fullname, \"agent_name\");\n      closeModalAgentId();\n    },\n    onCellKeyDown: (__: any, key: any) => {\n      if (key.code === \"Enter\" || key.code === \"NumpadEnter\") {\n        customInputchange(__.row.entry_agent_id, \"agent_id\");\n        customInputchange(__.row.fullname, \"agent_name\");\n        closeModalAgentId();\n      }\n    },\n    searchRef: searchAgentInputRef,\n  });\n  const { data: policyAccount, isLoading: isLoadingPolicyAccount } = useQuery({\n    queryKey: \"bond-policy-account-ss\",\n    queryFn: async () =>\n      await myAxios.get(`/task/production/policy-accounts-by-line?Line=PA`, {\n        headers: {\n          Authorization: `Bearer ${user?.accessToken}`,\n        },\n      }),\n  });\n\n  function onKeyDownComputation(e: any) {\n    if (e.code === \"NumpadEnter\" || e.code === \"Enter\") {\n      computation();\n    }\n  }\n\n  return (\n    <div>\n      <div\n        style={{\n          display: \"flex\",\n          gap: \"10px\",\n          flexDirection: \"column\",\n        }}\n      >\n        <div\n          style={{\n            display: \"flex\",\n            gap: \"10px\",\n          }}\n        >\n          <div\n            style={\n              {\n                display: \"flex\",\n                columnGap: \"10px\",\n                flex: 1,\n                boxSizing: \"border-box\",\n              } as any\n            }\n          >\n            <fieldset\n              style={\n                {\n                  flex: 1,\n                  display: \"flex\",\n                  flexDirection: \"column\",\n                  gap: \"10px\",\n                  padding: \"15px\",\n                  border: \"1px solid #cbd5e1\",\n                  borderRadius: \"5px\",\n                } as CSSProperties\n              }\n            >\n              <legend style={{ color: \"#065f46\" }}>Insurer Information</legend>\n              <div\n                style={{\n                  display: \"flex\",\n                  gap: \"10px\",\n                  flexDirection: \"column\",\n                }}\n              >\n                {isLoadingClientIdsModal ? (\n                  <LoadingButton loading={isLoadingClientIdsModal} />\n                ) : (\n                  <FormControl\n                    variant=\"outlined\"\n                    size=\"small\"\n                    disabled={isAddOrEditMode}\n                    sx={{\n                      width: \"170px\",\n                      \".MuiFormLabel-root\": {\n                        fontSize: \"14px\",\n                        background: \"white\",\n                        zIndex: 99,\n                        padding: \"0 3px\",\n                      },\n                      \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n                    }}\n                  >\n                    <InputLabel htmlFor=\"client-id-field\">Client ID</InputLabel>\n                    <OutlinedInput\n                      sx={{\n                        height: \"27px\",\n                        fontSize: \"14px\",\n                      }}\n                      disabled={isAddOrEditMode}\n                      fullWidth\n                      label=\"Client ID\"\n                      name=\"client_id\"\n                      value={state.client_id}\n                      onChange={handleInputChange}\n                      onKeyDown={(e) => {\n                        if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n                          e.preventDefault();\n                          return openCliendIDsModal(state.client_id);\n                        }\n                      }}\n                      id=\"client-id-field\"\n                      endAdornment={\n                        <InputAdornment position=\"end\">\n                          <IconButton\n                            // ref={reloadIDButtonRef}\n                            disabled={isAddOrEditMode}\n                            aria-label=\"search-client\"\n                            color=\"secondary\"\n                            edge=\"end\"\n                            onClick={() => {\n                              openCliendIDsModal(state.client_id);\n                            }}\n                          >\n                            <PersonSearchIcon />\n                          </IconButton>\n                        </InputAdornment>\n                      }\n                    />\n                  </FormControl>\n                )}\n                <TextField\n                  disabled={isAddOrEditMode}\n                  fullWidth\n                  variant=\"outlined\"\n                  size=\"small\"\n                  label=\"Client Name\"\n                  name=\"client_name\"\n                  value={state.client_name}\n                  onChange={handleInputChange}\n                  InputProps={{\n                    style: { height: \"27px\", fontSize: \"14px\" },\n                    readOnly: true,\n                  }}\n                  sx={{\n                    flex: 1,\n                    height: \"27px\",\n                    \".MuiFormLabel-root\": { fontSize: \"14px\" },\n                    \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n                  }}\n                />\n              </div>\n              <TextField\n                rows={5}\n                disabled={isAddOrEditMode}\n                fullWidth\n                variant=\"outlined\"\n                size=\"small\"\n                label=\"Client Address\"\n                multiline\n                name=\"client_address\"\n                value={state.client_address}\n                onChange={handleInputChange}\n                InputProps={{\n                  style: { height: \"100px\", fontSize: \"14px\" },\n                  readOnly: true,\n                }}\n                sx={{\n                  flex: 1,\n                  height: \"100px\",\n                  \".MuiFormLabel-root\": { fontSize: \"14px\" },\n                  \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n                }}\n              />\n            </fieldset>\n          </div>\n          <div\n            style={\n              {\n                display: \"flex\",\n                columnGap: \"10px\",\n                flex: 1,\n                boxSizing: \"border-box\",\n              } as any\n            }\n          >\n            <fieldset\n              style={\n                {\n                  flexDirection: \"row\",\n                  gap: \"10px\",\n                  padding: \"15px\",\n                  border: \"1px solid #cbd5e1\",\n                  borderRadius: \"5px\",\n                  flex: 1,\n                  flexWrap: \"wrap\",\n                } as CSSProperties\n              }\n            >\n              <legend style={{ color: \"#065f46\" }}>Agent Information</legend>\n              {isLoadingModalAgentId ? (\n                <LoadingButton loading={isLoadingModalAgentId} />\n              ) : (\n                <FormControl\n                  variant=\"outlined\"\n                  size=\"small\"\n                  disabled={isAddOrEditMode}\n                  sx={{\n                    width: \"170px\",\n                    \".MuiFormLabel-root\": {\n                      fontSize: \"14px\",\n                      background: \"white\",\n                      zIndex: 99,\n                      padding: \"0 3px\",\n                    },\n                    \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n                  }}\n                >\n                  <InputLabel htmlFor=\"AGENT-id-field\">Agent ID</InputLabel>\n                  <OutlinedInput\n                    sx={{\n                      height: \"27px\",\n                      fontSize: \"14px\",\n                    }}\n                    disabled={isAddOrEditMode}\n                    label=\"Agent ID\"\n                    name=\"agent_id\"\n                    value={state.agent_id}\n                    onChange={handleInputChange}\n                    onKeyDown={(e) => {\n                      if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n                        e.preventDefault();\n                        return openModalAgentId(state.agent_id);\n                      }\n                    }}\n                    id=\"AGENT-id-field\"\n                    endAdornment={\n                      <InputAdornment position=\"end\">\n                        <IconButton\n                          // ref={reloadIDButtonRef}\n                          disabled={isAddOrEditMode}\n                          aria-label=\"search-client\"\n                          color=\"secondary\"\n                          edge=\"end\"\n                          onClick={() => {\n                            openModalAgentId(state.agent_id);\n                          }}\n                        >\n                          <PersonSearchIcon />\n                        </IconButton>\n                      </InputAdornment>\n                    }\n                  />\n                </FormControl>\n              )}\n              <TextField\n                fullWidth\n                disabled={isAddOrEditMode}\n                variant=\"outlined\"\n                size=\"small\"\n                label=\"Agent Name\"\n                name=\"agent_name\"\n                value={state.agent_name}\n                onChange={handleInputChange}\n                InputProps={{\n                  style: { height: \"27px\", fontSize: \"14px\" },\n                  readOnly: true,\n                }}\n                sx={{\n                  flex: 1,\n                  height: \"27px\",\n                  \".MuiFormLabel-root\": { fontSize: \"14px\" },\n                  \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n                  marginTop: \"10px\",\n                }}\n              />\n              <TextField\n                disabled={isAddOrEditMode}\n                fullWidth\n                variant=\"outlined\"\n                size=\"small\"\n                label=\"Sale Officer\"\n                multiline\n                name=\"sale_officer\"\n                value={state.sale_officer}\n                onChange={handleInputChange}\n                InputProps={{\n                  style: { height: \"27px\", fontSize: \"14px\" },\n                  readOnly: true,\n                }}\n                sx={{\n                  width: \"100%\",\n                  height: \"27px\",\n                  \".MuiFormLabel-root\": { fontSize: \"14px\" },\n                  \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n                  marginTop: \"10px\",\n                }}\n              />\n            </fieldset>\n          </div>\n        </div>\n        <div\n          style={{\n            display: \"flex\",\n            gap: \"10px\",\n          }}\n        >\n          <div\n            style={\n              {\n                display: \"flex\",\n                columnGap: \"10px\",\n                flex: 1,\n                boxSizing: \"border-box\",\n              } as any\n            }\n          >\n            <fieldset\n              style={{\n                display: \"flex\",\n                flexDirection: \"column\",\n                gap: \"10px\",\n                padding: \"15px\",\n                border: \"1px solid #cbd5e1\",\n                borderRadius: \"5px\",\n                marginBottom: \"10px\",\n                flexGrow: 1,\n              }}\n            >\n              <legend style={{ color: \"#065f46\" }}>PA Policy</legend>\n              {isLoadingPolicyAccount ? (\n                <LoadingButton loading={isLoadingPolicyAccount} />\n              ) : (\n                <FormControl\n                  size=\"small\"\n                  fullWidth\n                  disabled={isAddOrEditMode}\n                  sx={{\n                    \".MuiFormLabel-root\": {\n                      fontSize: \"14px\",\n                      background: \"white\",\n                      zIndex: 99,\n                      padding: \"0 3px\",\n                    },\n                    \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n                  }}\n                >\n                  <InputLabel id=\"PolicyAccount\">Account</InputLabel>\n                  <Select\n                    sx={{\n                      height: \"27px\",\n                      fontSize: \"14px\",\n                    }}\n                    labelId=\"PolicyAccount\"\n                    value={state.PolicyAccount}\n                    label=\"Account\"\n                    name=\"PolicyAccount\"\n                    onChange={handleInputChange}\n                  >\n                    {policyAccount.data.policyAccounts.map(\n                      (items: any, idx: number) => {\n                        return (\n                          <MenuItem key={idx} value={items.Account}>\n                            {items.Account}\n                          </MenuItem>\n                        );\n                      }\n                    )}\n                  </Select>\n                </FormControl>\n              )}\n              <TextField\n       \n                fullWidth\n                variant=\"outlined\"\n                size=\"small\"\n                label=\"Policy No\"\n                name=\"PolicyNo\"\n                value={state.PolicyNo}\n                onChange={handleInputChange}\n                InputProps={{\n                  style: { height: \"27px\", fontSize: \"14px\" },\n                }}\n                sx={{\n                  width: \"100%\",\n                  height: \"27px\",\n                  \".MuiFormLabel-root\": { fontSize: \"14px\" },\n                  \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n                }}\n              />\n            </fieldset>\n          </div>\n          <div\n            style={\n              {\n                display: \"flex\",\n                columnGap: \"10px\",\n                flex: 1,\n                boxSizing: \"border-box\",\n              } as any\n            }\n          >\n            <fieldset\n              style={{\n                display: \"flex\",\n                flexDirection: \"column\",\n                gap: \"10px\",\n                gridArea: \"content4\",\n                padding: \"15px\",\n                border: \"1px solid #cbd5e1\",\n                borderRadius: \"5px\",\n                flexGrow: 1,\n              }}\n            >\n              <legend style={{ color: \"#065f46\" }}>Period of Insurance</legend>\n              <CustomDatePicker\n                disabled={isAddOrEditMode}\n                label=\"Date From\"\n                onChange={(e: any) => {\n                  customInputchange(e, \"DateFrom\");\n                  const newDate = new Date(e);\n                  const newDatePlusOneYear = addYears(newDate, 1);\n                  customInputchange(newDatePlusOneYear, \"DateTo\");\n                }}\n                value={new Date(state.DateFrom)}\n                textField={{\n                  InputLabelProps: {\n                    style: {\n                      fontSize: \"14px\",\n                    },\n                  },\n                  InputProps: {\n                    style: { height: \"27px\", fontSize: \"14px\" },\n                  },\n                }}\n                onKeyDown={(e: any) => {\n                  if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n                    const timeout = setTimeout(() => {\n                      dateFrom.current?.querySelector(\"button\")?.click();\n                      clearTimeout(timeout);\n                    }, 150);\n                  }\n                }}\n                datePickerRef={dateFrom}\n              />\n              <CustomDatePicker\n                disabled={isAddOrEditMode}\n                label=\"Date To\"\n                onChange={(e: any) => {\n                  customInputchange(e, \"DateTo\");\n                }}\n                value={new Date(state.DateTo)}\n                textField={{\n                  InputLabelProps: {\n                    style: {\n                      fontSize: \"14px\",\n                    },\n                  },\n                  InputProps: {\n                    style: { height: \"27px\", fontSize: \"14px\" },\n                  },\n                }}\n                onKeyDown={(e: any) => {\n                  if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n                    const timeout = setTimeout(() => {\n                      dateToDateRef.current?.querySelector(\"button\")?.click();\n                      clearTimeout(timeout);\n                    }, 150);\n                  }\n                }}\n                datePickerRef={dateToDateRef}\n              />\n              <CustomDatePicker\n                label=\"Date Issued\"\n                name=\"DateIssued\"\n                onChange={(e: any) => {\n                  customInputchange(e, \"DateIssued\");\n                }}\n                value={new Date(state.DateIssued)}\n                disabled={isAddOrEditMode}\n                textField={{\n                  InputLabelProps: {\n                    style: {\n                      fontSize: \"14px\",\n                    },\n                  },\n                  InputProps: {\n                    style: { height: \"27px\", fontSize: \"14px\" },\n                  },\n                }}\n                onKeyDown={(e: any) => {\n                  if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n                    const timeout = setTimeout(() => {\n                      dateIssuedDateRef.current\n                        ?.querySelector(\"button\")\n                        ?.click();\n                      clearTimeout(timeout);\n                    }, 150);\n                  }\n                }}\n                datePickerRef={dateIssuedDateRef}\n              />\n            </fieldset>\n          </div>\n        </div>\n        <div\n          style={{\n            display: \"flex\",\n            gap: \"10px\",\n          }}\n        >\n          <div\n            style={\n              {\n                display: \"flex\",\n                columnGap: \"10px\",\n                flex: 1,\n                boxSizing: \"border-box\",\n              } as any\n            }\n          >\n            <fieldset\n              style={{\n                display: \"flex\",\n                flexDirection: \"column\",\n                gap: \"10px\",\n                gridArea: \"content4\",\n                padding: \"15px\",\n                border: \"1px solid #cbd5e1\",\n                borderRadius: \"5px\",\n                flexGrow: 1,\n              }}\n            >\n              <legend style={{ color: \"#065f46\", height: \"20px\" }}></legend>\n              <TextField\n                disabled={isAddOrEditMode}\n                required\n                variant=\"outlined\"\n                size=\"small\"\n                label=\"Sum Insured\"\n                name=\"sumInsured\"\n                value={state.sumInsured}\n                onChange={handleInputChange}\n                placeholder=\"0.00\"\n                InputProps={{\n                  inputComponent: NumericFormatCustom as any,\n                  style: { height: \"27px\", fontSize: \"14px\" },\n                }}\n                sx={{\n                  width: \"100%\",\n                  height: \"27px\",\n                  \".MuiFormLabel-root\": { fontSize: \"14px\" },\n                  \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n                }}\n                onBlur={() => {\n                  dispatch({\n                    type: \"UPDATE_FIELD\",\n                    field: \"sumInsured\",\n                    value: parseFloat(state.sumInsured).toFixed(2),\n                  });\n                }}\n              />\n              <TextField\n                disabled={isAddOrEditMode}\n                required\n                variant=\"outlined\"\n                size=\"small\"\n                label=\"Property Insured\"\n                name=\"propertyInsured\"\n                value={state.propertyInsured}\n                onChange={handleInputChange}\n                InputProps={{\n                  style: { height: \"27px\", fontSize: \"14px\" },\n                }}\n                sx={{\n                  width: \"100%\",\n                  height: \"27px\",\n                  \".MuiFormLabel-root\": { fontSize: \"14px\" },\n                  \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n                }}\n              />\n            </fieldset>\n          </div>\n\n          <div\n            style={\n              {\n                display: \"flex\",\n                columnGap: \"10px\",\n                flex: 1,\n                boxSizing: \"border-box\",\n              } as any\n            }\n          >\n            <fieldset\n              style={{\n                display: \"flex\",\n                flexDirection: \"column\",\n                rowGap: \"10px\",\n                padding: \"15px\",\n                border: \"1px solid #cbd5e1\",\n                borderRadius: \"5px\",\n                flexGrow: 1,\n              }}\n            >\n              <legend>Premiums</legend>\n              <div\n                style={{\n                  display: \"flex\",\n                  justifyContent: \"flex-end\",\n                  padding: \"5px\",\n                }}\n              >\n                <Button\n                  disabled={isAddOrEditMode}\n                  size=\"small\"\n                  variant=\"contained\"\n                  color=\"primary\"\n                  onClick={() => {\n                    computation();\n                  }}\n                >\n                  Compute\n                </Button>\n              </div>\n\n              <TextField\n                disabled={isAddOrEditMode}\n                required\n                variant=\"outlined\"\n                size=\"small\"\n                label=\"Net Premium\"\n                name=\"netPremium\"\n                value={state.netPremium}\n                onChange={handleInputChange}\n                onKeyDown={onKeyDownComputation}\n                placeholder=\"0.00\"\n                InputProps={{\n                  inputComponent: NumericFormatCustom as any,\n                  style: { height: \"27px\", fontSize: \"14px\" },\n                }}\n                sx={{\n                  width: \"100%\",\n                  height: \"27px\",\n                  \".MuiFormLabel-root\": { fontSize: \"14px\" },\n                  \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n                }}\n                onBlur={() => {\n                  dispatch({\n                    type: \"UPDATE_FIELD\",\n                    field: \"netPremium\",\n                    value: parseFloat(state.netPremium).toFixed(2),\n                  });\n                }}\n              />\n              <TextField\n                disabled={isAddOrEditMode}\n                required\n                variant=\"outlined\"\n                size=\"small\"\n                label=\"Vat\"\n                name=\"vat\"\n                value={state.vat}\n                onChange={handleInputChange}\n                onKeyDown={onKeyDownComputation}\n                placeholder=\"0.00\"\n                InputProps={{\n                  inputComponent: NumericFormatCustom as any,\n                  style: { height: \"27px\", fontSize: \"14px\" },\n                }}\n                sx={{\n                  width: \"100%\",\n                  height: \"27px\",\n                  \".MuiFormLabel-root\": { fontSize: \"14px\" },\n                  \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n                }}\n                onBlur={() => {\n                  dispatch({\n                    type: \"UPDATE_FIELD\",\n                    field: \"vat\",\n                    value: parseFloat(state.vat).toFixed(2),\n                  });\n                }}\n              />\n              <TextField\n                disabled={isAddOrEditMode}\n                required\n                variant=\"outlined\"\n                size=\"small\"\n                label=\"Doc Stamp\"\n                name=\"docStamp\"\n                value={state.docStamp}\n                onChange={handleInputChange}\n                onKeyDown={onKeyDownComputation}\n                placeholder=\"0.00\"\n                InputProps={{\n                  inputComponent: NumericFormatCustom as any,\n                  style: { height: \"27px\", fontSize: \"14px\" },\n                }}\n                sx={{\n                  width: \"100%\",\n                  height: \"27px\",\n                  \".MuiFormLabel-root\": { fontSize: \"14px\" },\n                  \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n                }}\n                onBlur={() => {\n                  dispatch({\n                    type: \"UPDATE_FIELD\",\n                    field: \"docStamp\",\n                    value: parseFloat(state.docStamp).toFixed(2),\n                  });\n                }}\n              />\n              <div\n                style={{ display: \"flex\", gap: \"5px\", position: \"relative\" }}\n              >\n                <TextField\n                  disabled={isAddOrEditMode}\n                  required\n                  variant=\"outlined\"\n                  size=\"small\"\n                  name=\"localGovTaxPercent\"\n                  value={state.localGovTaxPercent}\n                  onChange={handleInputChange}\n                  onKeyDown={onKeyDownComputation}\n                  placeholder=\"0.00\"\n                  InputProps={{\n                    inputComponent: NumericFormatCustom as any,\n                    style: { height: \"27px\", fontSize: \"14px\" },\n                  }}\n                  sx={{\n                    width: \"80px\",\n                    height: \"27px\",\n                    \".MuiFormLabel-root\": { fontSize: \"14px\" },\n                    \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n                  }}\n                  onBlur={() => {\n                    dispatch({\n                      type: \"UPDATE_FIELD\",\n                      field: \"localGovTaxPercent\",\n                      value: parseFloat(state.localGovTaxPercent).toFixed(2),\n                    });\n                  }}\n                />\n                <TextField\n                  disabled={isAddOrEditMode}\n                  required\n                  variant=\"outlined\"\n                  size=\"small\"\n                  label=\"Local Gov Tax\"\n                  name=\"localGovTax\"\n                  value={state.localGovTax}\n                  onChange={handleInputChange}\n                  onKeyDown={onKeyDownComputation}\n                  placeholder=\"0.00\"\n                  InputProps={{\n                    inputComponent: NumericFormatCustom as any,\n                    style: { height: \"27px\", fontSize: \"14px\" },\n                  }}\n                  sx={{\n                    width: \"100%\",\n                    height: \"27px\",\n                    \".MuiFormLabel-root\": { fontSize: \"14px\" },\n                    \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n                  }}\n                  onBlur={() => {\n                    dispatch({\n                      type: \"UPDATE_FIELD\",\n                      field: \"localGovTax\",\n                      value: parseFloat(state.localGovTax).toFixed(2),\n                    });\n                  }}\n                />\n              </div>\n              <Divider color=\"secondary\" />\n              <TextField\n                disabled={isAddOrEditMode}\n                required\n                variant=\"outlined\"\n                size=\"small\"\n                label=\"Total Due\"\n                name=\"totalDue\"\n                value={state.totalDue}\n                onChange={handleInputChange}\n                placeholder=\"0.00\"\n                InputProps={{\n                  inputComponent: NumericFormatCustom as any,\n                  style: { height: \"27px\", fontSize: \"14px\" },\n                }}\n                sx={{\n                  width: \"100%\",\n                  height: \"27px\",\n                  \".MuiFormLabel-root\": { fontSize: \"14px\" },\n                  \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n                }}\n                onBlur={() => {\n                  dispatch({\n                    type: \"UPDATE_FIELD\",\n                    field: \"totalDue\",\n                    value: parseFloat(state.totalDue).toFixed(2),\n                  });\n                }}\n              />\n            </fieldset>\n          </div>\n        </div>\n      </div>\n      {ModalClientIDs}\n      {ModalAgentId}\n    </div>\n  );\n}\n","import {\n  createContext,\n  useContext,\n  useReducer,\n  useState,\n  useRef,\n  useEffect,\n  useCallback,\n} from \"react\";\nimport { Box, Button, TextField } from \"@mui/material\";\nimport { pink } from \"@mui/material/colors\";\nimport AddIcon from \"@mui/icons-material/Add\";\nimport { AuthContext } from \"../../../../../../../components/AuthContext\";\nimport { useQuery, useMutation, useQueryClient } from \"react-query\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport SaveIcon from \"@mui/icons-material/Save\";\nimport Swal from \"sweetalert2\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\nimport { GridRowSelectionModel } from \"@mui/x-data-grid\";\nimport { FormControl, InputLabel, Select, MenuItem } from \"@mui/material\";\nimport PAPolicyInformation from \"./PAPolicyComponent/PAPolicyInformation\";\nimport useQueryModalTable from \"../../../../../../../hooks/useQueryModalTable\";\nimport { LoadingButton } from \"@mui/lab\";\nimport {\n  codeCondfirmationAlert,\n  saveCondfirmationAlert,\n} from \"../../../../../../../lib/confirmationAlert\";\nimport { addYears } from \"date-fns\";\n\nconst initialState = {\n  sub_account: \"HO\",\n  //insurer info\n  client_id: \"\",\n  client_name: \"\",\n  client_address: \"\",\n  //agent info\n  agent_id: \"\",\n  agent_name: \"\",\n  agent_com: \"0.00\",\n  sale_officer: \"\",\n  //Vehicle policy\n  PolicyAccount: \"\",\n  PolicyNo: \"\",\n\n  //Period Insurance\n  DateFrom: new Date(),\n  DateTo: addYears(new Date(), 1),\n  DateIssued: new Date(),\n\n  //\n  sumInsured: \"\",\n  propertyInsured: \"\",\n\n  //calculation\n  netPremium: \"\",\n  vat: \"\",\n  docStamp: \"\",\n  localGovTaxPercent: \"0.75\",\n  localGovTax: \"\",\n  totalDue: \"\",\n  // extra\n  paActioMode: \"\",\n};\n\nconst reducer = (state: any, action: any) => {\n  switch (action.type) {\n    case \"UPDATE_FIELD\":\n      const newState = {\n        ...state,\n        [action.field]: action.value,\n      };\n      return newState;\n    default:\n      return state;\n  }\n};\nexport const PAContext = createContext<any>({});\n\nconst queryKeySearchPolicy = \"pa-search\";\nconst queryKeySearchClientEntry = \"clients\";\nconst queryKeySearchAgentEntry = \"agents\";\nconst queryKeyNeedData = \"pa-policy\";\nconst queryKeyAddOrUpdatePolicy = \"pa-policy\";\nconst queryKeyDeletePolicy = \"pa-policy\";\n\nexport default function PAPolicy() {\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const { myAxios, user } = useContext(AuthContext);\n  const [clientRows, setClientRows] = useState<GridRowSelectionModel>([]);\n  const [agentRows, setAgentRows] = useState<GridRowSelectionModel>([]);\n  const [search, setSearch] = useState(\"\");\n  const [Mortgagee, setMortgagee] = useState(false);\n\n  const searchPaPolicyInputRef = useRef<HTMLInputElement>(null);\n  const newButtonRef = useRef<HTMLButtonElement>(null);\n  const cancelButtonRef = useRef<HTMLButtonElement>(null);\n  const deleteButtonRef = useRef<HTMLButtonElement>(null);\n\n  const queryClient = useQueryClient();\n  const isAddOrEditMode = state.paActioMode === \"\";\n\n  const { data: dataSubAccount, isLoading: isLoadingSubAccount } = useQuery({\n    queryKey: \"get-sub_account\",\n    queryFn: async () =>\n      await myAxios.get(`/task/production/get-sub_account`, {\n        headers: {\n          Authorization: `Bearer ${user?.accessToken}`,\n        },\n      }),\n  });\n\n  const {\n    ModalComponent: ModalPaPolicy,\n    openModal: openModalPaPolicy,\n    isLoading: isLoadingModalPaPolicy,\n    closeModal: closeModalPaPolicy,\n  } = useQueryModalTable({\n    link: {\n      url: \"/task/production/search-pa-policy\",\n      queryUrlName: \"searchPaPolicy\",\n    },\n    columns: [\n      { field: \"DateIssued\", headerName: \"Date\", width: 200 },\n      { field: \"PolicyNo\", headerName: \"Policy No\", width: 250 },\n      {\n        field: \"Account\",\n        headerName: \"Account\",\n        width: 170,\n      },\n      {\n        field: \"client_fullname\",\n        headerName: \"Full Name\",\n        flex: 1,\n      },\n    ],\n    queryKey: \"search-pa-policy\",\n    uniqueId: \"PolicyNo\",\n    responseDataKey: \"paPolicy\",\n    onSelected: (selectedRowData) => {\n      onSearchSelected(selectedRowData);\n      closeModalPaPolicy();\n    },\n    onCellKeyDown: (__: any, key: any) => {\n      if (key.code === \"Enter\" || key.code === \"NumpadEnter\") {\n        onSearchSelected([__.row]);\n        closeModalPaPolicy();\n      }\n    },\n    searchRef: searchPaPolicyInputRef,\n  });\n\n  const { mutate, isLoading: loadingAddNew } = useMutation({\n    mutationKey: queryKeyAddOrUpdatePolicy,\n    mutationFn: async (variables: any) => {\n      if (state.paActioMode === \"update\") {\n        return await myAxios.post(\n          \"/task/production/update-pa-policy\",\n          variables,\n          {\n            headers: {\n              Authorization: `Bearer ${user?.accessToken}`,\n            },\n          }\n        );\n      }\n      return await myAxios.post(\"/task/production/add-pa-policy\", variables, {\n        headers: {\n          Authorization: `Bearer ${user?.accessToken}`,\n        },\n      });\n    },\n    onSuccess: async (res) => {\n      if (res.data.success) {\n        await updateQueryByKey();\n        backToDefaultState(initialState, true);\n        return Swal.fire({\n          position: \"center\",\n          icon: \"success\",\n          title: res.data.message,\n          showConfirmButton: false,\n          timer: 1500,\n        });\n      }\n\n      Swal.fire({\n        position: \"center\",\n        icon: \"error\",\n        title: res.data.message,\n        showConfirmButton: false,\n        timer: 1500,\n      });\n    },\n  });\n\n  const { mutate: mutateDelete, isLoading: loadingDelete } = useMutation({\n    mutationKey: queryKeyDeletePolicy,\n    mutationFn: async (variables: any) => {\n      return await myAxios.post(\n        \"/task/production/delete-pa-policy\",\n        variables,\n        {\n          headers: {\n            Authorization: `Bearer ${user?.accessToken}`,\n          },\n        }\n      );\n    },\n    onSuccess: async (res) => {\n      if (res.data.success) {\n        await updateQueryByKey();\n        backToDefaultState(initialState, true);\n        return Swal.fire({\n          position: \"center\",\n          icon: \"success\",\n          title: res.data.message,\n          showConfirmButton: false,\n          timer: 1500,\n        });\n      }\n\n      Swal.fire({\n        position: \"center\",\n        icon: \"error\",\n        title: res.data.message,\n        showConfirmButton: false,\n        timer: 1500,\n      });\n    },\n  });\n\n  const setDefaultValueForNumber = useCallback(() => {\n    state.netPremium = state.netPremium === \"\" ? \"0\" : state.netPremium;\n    state.vat = state.vat === \"\" ? \"0\" : state.vat;\n    state.docStamp = state.docStamp === \"\" ? \"0\" : state.docStamp;\n    state.localGovTaxPercent =\n      state.localGovTaxPercent === \"\" ? \"0\" : state.localGovTaxPercent;\n    state.localGovTax = state.localGovTax === \"\" ? \"0\" : state.localGovTax;\n    state.totalDue = state.totalDue === \"\" ? \"0\" : state.totalDue;\n  }, [state]);\n\n  const handleOnSave = useCallback(() => {\n    if (\n      state.client_name === \"\" ||\n      state.client_name === null ||\n      state.client_name === undefined\n    ) {\n      return Swal.fire(\n        \"Unable to save! Invalid Client ID\",\n        \"you missed the Client Id Field?\",\n        \"error\"\n      );\n    }\n\n    if (state.client_id === \"\" || state.client_id === null) {\n      return Swal.fire(\n        \"Unable to save! Invalid IDNo.\",\n        \"you missed the Client Id Field?\",\n        \"error\"\n      );\n    }\n    if (state.PolicyAccount === \"\" || state.PolicyAccount === null) {\n      return Swal.fire(\n        \"Unable to save! Please select Account.\",\n        \"you missed the Account Field?\",\n        \"error\"\n      );\n    }\n    if (state.PolicyNo === \"\" || state.PolicyNo === null) {\n      return Swal.fire(\n        \"Unable to save! Invalid Policy No.\",\n        \"you missed the Policy No Field?\",\n        \"error\"\n      );\n    }\n    if (state.paActioMode === \"update\") {\n      codeCondfirmationAlert({\n        isUpdate: true,\n        cb: (userCodeConfirmation) => {\n          setDefaultValueForNumber();\n          mutate({ ...state, userCodeConfirmation });\n        },\n      });\n    } else {\n      saveCondfirmationAlert({\n        isConfirm: () => {\n          setDefaultValueForNumber();\n          mutate(state);\n        },\n      });\n    }\n  }, [mutate, setDefaultValueForNumber, state]);\n\n  useEffect(() => {\n    const handleKeyDown = (event: any) => {\n      if (\n        state.paActioMode === \"\" &&\n        (event.code === \"KeyN\" ||\n          event.code === \"Enter\" ||\n          event.code === \"NumpadEnter\")\n      ) {\n        event.preventDefault();\n        newButtonRef.current?.click();\n      }\n      if (state.paActioMode !== \"\" && event.code === \"Escape\") {\n        event.preventDefault();\n        cancelButtonRef.current?.click();\n      }\n      if (state.paActioMode === \"update\" && event.code === \"Delete\") {\n        event.preventDefault();\n        deleteButtonRef.current?.click();\n      }\n    };\n    document.addEventListener(\"keydown\", handleKeyDown);\n    return () => {\n      document.removeEventListener(\"keydown\", handleKeyDown);\n    };\n  }, [handleOnSave, state.paActioMode]);\n\n  const handleInputChange = (e: any) => {\n    const { name, value } = e.target;\n    dispatch({ type: \"UPDATE_FIELD\", field: name, value });\n  };\n  const customInputchange = (value: any, name: string) => {\n    dispatch({ type: \"UPDATE_FIELD\", field: name, value });\n  };\n  function computation() {\n    setDefaultValueForNumber();\n    const inpLocalGovTaxPercent = parseFloat(state.localGovTaxPercent);\n    const VatPercentage = 12 / 100;\n    const DocPercentage = 12.5 / 100;\n    const LOGPercentage = inpLocalGovTaxPercent / 100;\n    const NewTotalPremium = parseFloat(state.netPremium);\n\n    customInputchange((VatPercentage * NewTotalPremium).toFixed(2), \"vat\");\n    customInputchange((DocPercentage * NewTotalPremium).toFixed(2), \"docStamp\");\n    customInputchange(\n      (LOGPercentage * NewTotalPremium).toFixed(2),\n      \"localGovTax\"\n    );\n    customInputchange(NewTotalPremium.toFixed(2), \"netPremium\");\n    customInputchange(\n      (\n        parseFloat(NewTotalPremium.toFixed(2)) +\n        parseFloat((VatPercentage * NewTotalPremium).toFixed(2)) +\n        parseFloat((DocPercentage * NewTotalPremium).toFixed(2)) +\n        parseFloat((LOGPercentage * NewTotalPremium).toFixed(2))\n      ).toFixed(2),\n      \"totalDue\"\n    );\n  }\n  function backToDefaultState(json: any, resetAll: boolean = false) {\n    json.form_type = state.form_type;\n    json.form_action = state.form_action;\n    json.prem_text_one = state.prem_text_one;\n    json.prem_text_two = state.prem_text_two;\n    if (!resetAll) {\n      json.paActioMode = state.paActioMode;\n    }\n    Object.entries(json).forEach(([key, value]) => {\n      customInputchange(value, key);\n    });\n  }\n  async function updateQueryByKey() {\n    return Promise.all([\n      queryClient.invalidateQueries(queryKeySearchPolicy),\n      queryClient.invalidateQueries(queryKeySearchClientEntry),\n      queryClient.invalidateQueries(queryKeySearchAgentEntry),\n      queryClient.invalidateQueries(queryKeyNeedData),\n      queryClient.invalidateQueries(queryKeyAddOrUpdatePolicy),\n      queryClient.invalidateQueries(queryKeyDeletePolicy),\n    ]);\n  }\n\n  function formatNumber(num: number) {\n    return (num || 0).toLocaleString(\"en-US\", {\n      minimumFractionDigits: 2,\n      maximumFractionDigits: 2,\n    })\n  }\n  function onSearchSelected(selectedRowData: any) {\n    const {\n      PolicyNo,\n      Account,\n      PeriodFrom,\n      PeriodTo,\n      Location,\n      IDNo,\n      SubAcct,\n      DateIssued,\n      TotalPremium,\n      AgentID,\n      AgentCom,\n      client_fullname,\n      agent_fullname,\n      address,\n      sumInsured,\n      sale_officer,\n      TotalDue,\n      LGovTax,\n      DocStamp,\n      Vat\n    } = selectedRowData[0];\n    customInputchange(SubAcct, \"sub_account\");\n    customInputchange(IDNo, \"client_id\");\n    customInputchange(client_fullname, \"client_name\");\n    customInputchange(address, \"client_address\");\n\n    customInputchange(AgentID, \"agent_id\");\n    customInputchange(agent_fullname, \"agent_name\");\n    customInputchange(AgentCom, \"agent_com\");\n    customInputchange(sale_officer, \"sale_officer\");\n\n    customInputchange(Account, \"PolicyAccount\");\n    customInputchange(PolicyNo, \"PolicyNo\");\n\n    customInputchange(PeriodFrom, \"DateFrom\");\n    customInputchange(PeriodTo, \"DateTo\");\n    customInputchange(DateIssued, \"DateIssued\");\n\n    customInputchange(Location, \"propertyInsured\");\n    customInputchange(sumInsured, \"sumInsured\");\n\n    customInputchange(sumInsured, \"sumInsured\");\n    customInputchange(formatNumber(parseFloat(TotalPremium)), \"netPremium\");\n    customInputchange(formatNumber(parseFloat(Vat)), \"vat\");\n    customInputchange(formatNumber(parseFloat(DocStamp)), \"docStamp\");\n    customInputchange(formatNumber(parseFloat(LGovTax)), \"localGovTax\");\n    customInputchange(formatNumber(parseFloat(TotalDue)), \"totalDue\");\n    state.netPremium = parseFloat(TotalPremium).toFixed(2);\n\n    // computation();\n\n    customInputchange(\"update\", \"paActioMode\");\n  }\n  function keySave(event: any) {\n    if (\n      state.mode !== \"\" &&\n      (event.code === \"Enter\" || event.code === \"NumpadEnter\")\n    ) {\n      event.preventDefault();\n      handleOnSave();\n    }\n  }\n\n  useEffect(() => {\n    const handleKeyDown = (event: any) => {\n      if ((event.ctrlKey || event.metaKey) && event.key === 's') {\n        event.preventDefault();\n        handleOnSave();\n      }\n    };\n\n    window.addEventListener('keydown', handleKeyDown);\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [handleOnSave]);\n\n  return (\n    <PAContext.Provider\n      value={{\n        state,\n        handleInputChange,\n        customInputchange,\n        Mortgagee,\n        setMortgagee,\n        clientRows,\n        setClientRows,\n        myAxios,\n        user,\n        agentRows,\n        setAgentRows,\n        computation,\n        isAddOrEditMode,\n        dispatch,\n        keySave,\n      }}\n    >\n      <Box\n        sx={(theme) => ({\n          display: \"flex\",\n          alignItems: \"center\",\n          columnGap: \"20px\",\n          marginBottom: \"10px\",\n          [theme.breakpoints.down(\"sm\")]: {\n            flexDirection: \"column\",\n            alignItems: \"flex-start\",\n            flex: 1,\n          },\n        })}\n      >\n\n        <div\n          style={{\n            display: \"flex\",\n            alignItems: \"center\",\n            columnGap: \"20px\",\n          }}\n        >\n          <div\n            style={{\n              display: \"flex\",\n              alignItems: \"center\",\n              columnGap: \"5px\",\n            }}\n          >\n            {state.paActioMode === \"\" && (\n              <Button\n                sx={{\n                  height: \"30px\",\n                  fontSize: \"11px\",\n                }}\n                ref={newButtonRef}\n                variant=\"contained\"\n                startIcon={<AddIcon />}\n                onClick={() => {\n                  customInputchange(\"add\", \"paActioMode\");\n                }}\n              >\n                New\n              </Button>\n            )}\n            <LoadingButton\n              sx={{\n                height: \"30px\",\n                fontSize: \"11px\",\n              }}\n              color=\"primary\"\n              variant=\"contained\"\n              type=\"submit\"\n              onClick={handleOnSave}\n              disabled={state.paActioMode === \"\"}\n              startIcon={<SaveIcon />}\n              loading={loadingAddNew}\n            >\n              Save\n            </LoadingButton>\n            {state.paActioMode !== \"\" && (\n              <Button\n                sx={{\n                  height: \"30px\",\n                  fontSize: \"11px\",\n                }}\n                ref={cancelButtonRef}\n                variant=\"contained\"\n                startIcon={<CloseIcon />}\n                color=\"error\"\n                onClick={() => {\n                  Swal.fire({\n                    title: \"Are you sure?\",\n                    text: \"You won't be able to revert this!\",\n                    icon: \"warning\",\n                    showCancelButton: true,\n                    confirmButtonColor: \"#3085d6\",\n                    cancelButtonColor: \"#d33\",\n                    confirmButtonText: \"Yes, cancel it!\",\n                  }).then((result) => {\n                    if (result.isConfirmed) {\n                      customInputchange(\"\", \"paActioMode\");\n                      backToDefaultState(initialState, true);\n                    }\n                  });\n                }}\n              >\n                Cancel\n              </Button>\n            )}\n            <LoadingButton\n              loading={loadingDelete}\n              id=\"save-entry-header\"\n              variant=\"contained\"\n              sx={{\n                height: \"30px\",\n                fontSize: \"11px\",\n                backgroundColor: pink[500],\n                \"&:hover\": {\n                  backgroundColor: pink[600],\n                },\n              }}\n              ref={deleteButtonRef}\n              disabled={state.paActioMode !== \"update\"}\n              startIcon={<DeleteIcon />}\n              onClick={() => {\n                codeCondfirmationAlert({\n                  isUpdate: false,\n                  cb: (userCodeConfirmation) => {\n                    mutateDelete({\n                      PolicyAccount: state.PolicyAccount,\n                      PolicyNo: state.PolicyNo,\n                      policyType: state.policyType,\n                      userCodeConfirmation,\n                    });\n                  },\n                });\n              }}\n            >\n              Delete\n            </LoadingButton>\n          </div>\n        </div>\n      </Box>\n      <div style={{ marginBottom: \"5px\", display: \"flex\", gap: \"10px\" }}>\n        {isLoadingModalPaPolicy ? (\n          <LoadingButton loading={isLoadingModalPaPolicy} />\n        ) : (\n          <TextField\n            label=\"Search\"\n            size=\"small\"\n            name=\"search\"\n            value={search}\n            onChange={(e: any) => {\n              setSearch(e.target.value);\n            }}\n            onKeyDown={(e) => {\n              if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n                e.preventDefault();\n                openModalPaPolicy(search);\n              }\n            }}\n            InputProps={{\n              style: { height: \"27px\", fontSize: \"14px\" },\n            }}\n            sx={{\n              width: \"300px\",\n              height: \"27px\",\n              \".MuiFormLabel-root\": { fontSize: \"14px\" },\n              \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n            }}\n          />\n        )}\n\n        {isLoadingSubAccount ? (\n          <LoadingButton loading={isLoadingSubAccount} />\n        ) : (\n          <FormControl\n            size=\"small\"\n            sx={(theme) => ({\n              width: \"150px\",\n              \".MuiFormLabel-root\": {\n                fontSize: \"14px\",\n                background: \"white\",\n                zIndex: 99,\n                padding: \"0 3px\",\n              },\n              \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n            })}\n          >\n            <InputLabel id=\"subAccount\">Sub Account</InputLabel>\n            <Select\n              sx={{\n                height: \"27px\",\n                fontSize: \"14px\",\n              }}\n              size=\"small\"\n              labelId=\"subAccount\"\n              label=\"subAccount\"\n              name=\"sub_account\"\n              value={state.sub_account}\n              onChange={(e) => {\n                handleInputChange(e);\n              }}\n            >\n              {(dataSubAccount?.data.sub_account).map(\n                (items: any, idx: number) => {\n                  return (\n                    <MenuItem key={idx} value={items.Acronym.trim()}>\n                      {items.Acronym}\n                    </MenuItem>\n                  );\n                }\n              )}\n            </Select>\n          </FormControl>\n        )}\n      </div>\n      <PAPolicyInformation />\n      {ModalPaPolicy}\n    </PAContext.Provider>\n  );\n}\n","import { useContext, useState } from \"react\";\nimport { useQuery } from \"react-query\";\nimport { AuthContext, User } from \"../components/AuthContext\";\nimport {\n  GridRowSelectionModel,\n  GridCellParams,\n  GridTreeNode,\n} from \"@mui/x-data-grid\";\nimport ModalWithTable from \"../components/ModalWithTable\";\nimport { flushSync } from \"react-dom\";\nimport { AxiosResponse, AxiosInstance } from \"axios\";\nimport { GridRowParams } from \"@mui/x-data-grid\";\ninterface QueryModalTableParamsType {\n  link?: {\n    url: string;\n    queryUrlName: string;\n  };\n  uniqueId: string;\n  queryKey: string;\n  responseDataKey: string;\n  columns: Array<any>;\n  onSelected?: (selectedRowData: Array<any>, data: Array<any>) => void;\n  onRemoveSelected?: (data: Array<any>) => void;\n  onSuccess?: (data: any) => void;\n  searchRef?: React.RefObject<HTMLInputElement>;\n  onCellKeyDown?: any;\n  onCloseFunction?: (search: any) => void;\n  CustomizeAxios?: (\n    myAxios: AxiosInstance,\n    user: User | null,\n    link: QueryModalTableParamsType[\"link\"],\n    search?: string\n  ) => Promise<AxiosResponse<any, any>>;\n  isRowSelectable?: ((params: GridRowParams<any>) => boolean) | undefined;\n  getCellClassName?:\n    | ((params: GridCellParams<any, any, any, GridTreeNode>) => string)\n    | undefined;\n}\n\nasync function CustomizeAxiosFunc(\n  myAxios: AxiosInstance,\n  user: User | null,\n  link: QueryModalTableParamsType[\"link\"],\n  search: string = \"\"\n) {\n  return myAxios.get(`${link?.url}?${link?.queryUrlName}=${search}`, {\n    headers: {\n      Authorization: `Bearer ${user?.accessToken}`,\n    },\n  });\n}\n\nconst useQueryModalTable = ({\n  link,\n  uniqueId,\n  queryKey,\n  responseDataKey,\n  columns,\n  onSelected = () => {},\n  onRemoveSelected = () => {},\n  onSuccess = () => {},\n  searchRef,\n  onCellKeyDown,\n  onCloseFunction = () => {},\n  CustomizeAxios = CustomizeAxiosFunc,\n  isRowSelectable,\n  getCellClassName,\n}: QueryModalTableParamsType) => {\n  const { myAxios, user } = useContext(AuthContext);\n  const [show, setShowModal] = useState(false);\n  const [rows, setRows] = useState<GridRowSelectionModel>([]);\n  async function customizeAxiostool(search: string = \"\") {\n    return await CustomizeAxios(myAxios, user, link, search);\n  }\n  const { isLoading, refetch } = useQuery({\n    queryKey: queryKey,\n    queryFn: async () => await customizeAxiostool(),\n    onSuccess: (res) => {\n      const response = res as any;\n      setRows(response.data[responseDataKey]);\n      onSuccess(response);\n    },\n    refetchOnWindowFocus: false,\n  });\n\n  const openModal = (search: string = \"\") => {\n    flushSync(() => {\n      setShowModal(true);\n    });\n    if (searchRef?.current) {\n      searchRef.current.value = search;\n      customizeAxiostool(search).then((res: any) => {\n        if (!res?.data.success) {\n          return alert(`Error : ${res?.data.message}`);\n        }\n        const response = res as any;\n        setRows(response.data[responseDataKey]);\n        if (searchRef?.current) searchRef.current.focus();\n      });\n    }\n  };\n\n  const closeModal = () => {\n    setShowModal(false);\n    if (onCloseFunction) {\n      onCloseFunction(searchRef?.current?.value);\n    }\n  };\n\n  const ModalComponent = (\n    <ModalWithTable\n      getCellClassName={getCellClassName}\n      searchRef={searchRef}\n      showModal={show}\n      onCloseModal={() => {\n        setShowModal(false);\n        if (onCloseFunction) {\n          onCloseFunction(searchRef?.current?.value);\n        }\n      }}\n      onClickCloseIcon={() => {\n        setShowModal(false);\n        if (onCloseFunction) {\n          onCloseFunction(searchRef?.current?.value);\n        }\n      }}\n      searchOnChange={(e) => {\n        // myAxios\n        //   .get(`${link.url}?${link.queryUrlName}=${e.target.value}`, {\n        //     headers: {\n        //       Authorization: `Bearer ${user?.accessToken}`,\n        //     },\n        //   })\n        //   .then((res: any) => {\n        //     if (!res?.data.success) {\n        //       return alert(`Error : ${res?.data.message}`);\n        //     }\n        //     const response = res as any;\n        //     setRows(response.data[responseDataKey]);\n        //   });\n      }}\n      onSearchKeyEnter={(value) => {\n        customizeAxiostool(value).then((res: any) => {\n          if (!res?.data.success) {\n            return alert(`Error : ${res?.data.message}`);\n          }\n          const response = res as any;\n          setRows(response.data[responseDataKey]);\n        });\n      }}\n      onCellKeyDown={onCellKeyDown}\n      height={300}\n      isLoading={isLoading}\n      queryKey={queryKey}\n      columns={columns}\n      onSelectionChange={(rowSelectionModel, data) => {\n        if (rowSelectionModel.length <= 0) {\n          return onRemoveSelected(data);\n        }\n        const selectedIDs = new Set(rowSelectionModel);\n        const selectedRowData = data.filter((row: any) => {\n          return selectedIDs.has(row[uniqueId].toString());\n        });\n        if (selectedRowData.length <= 0) return;\n        onSelected(selectedRowData, data);\n      }}\n      id={uniqueId}\n      rows={rows}\n      setRows={setRows}\n      isRowSelectable={isRowSelectable}\n    />\n  );\n\n  return {\n    show,\n    rows,\n    isLoading,\n    openModal,\n    closeModal,\n    ModalComponent,\n    refetch,\n  };\n};\n\nexport default useQueryModalTable;\n","import Swal from \"sweetalert2\";\n\nexport function codeCondfirmationAlert(props: {\n  cb: (userCodeConfirmation: string) => void;\n  isUpdate: boolean;\n  isConfirm?: () => void;\n  isDeclined?: () => void;\n  text?: string;\n}) {\n  Swal.fire({\n    title: `Are you sure!`,\n    html: props?.text\n      ? props?.text\n      : props.isUpdate\n      ? `Are you sure you want to make this change?`\n      : \"Are you sure you want to delete this?\",\n    icon: \"warning\",\n    input: \"text\",\n    inputAttributes: {\n      autocapitalize: \"off\",\n    },\n    showCancelButton: true,\n    confirmButtonText: \"Save\",\n    confirmButtonColor: \"green\",\n    showLoaderOnConfirm: true,\n    preConfirm: async (userCodeConfirmation) => {\n      try {\n        props.cb(userCodeConfirmation);\n      } catch (error) {\n        Swal.showValidationMessage(`\n            Request failed: ${error}\n          `);\n      }\n    },\n    allowOutsideClick: () => !Swal.isLoading(),\n  }).then((result) => {\n    if (result.isConfirmed) {\n      if (props.isConfirm) {\n        return props.isConfirm();\n      }\n    }\n    if (props.isDeclined) {\n      props.isDeclined();\n    }\n  });\n}\n\nexport function saveCondfirmationAlert(props: {\n  isConfirm?: () => void;\n  isDeclined?: () => void;\n  text?: string;\n}) {\n  Swal.fire({\n    title: \"Are you sure?\",\n    text: props?.text ? props?.text : \"Do you want to proceed with saving?\",\n    icon: \"warning\",\n    showCancelButton: true,\n    confirmButtonColor: \"#3085d6\",\n    cancelButtonColor: \"#d33\",\n    confirmButtonText: \"Yes, save it!\",\n  }).then((result) => {\n    if (result.isConfirmed) {\n      if (props.isConfirm) {\n        return props.isConfirm();\n      }\n    }\n    if (props.isDeclined) {\n      props.isDeclined();\n    }\n  });\n}\n","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\"\n}), 'Add');\nexports.default = _default;","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\"\n}), 'Delete');\nexports.default = _default;","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)([/*#__PURE__*/(0, _jsxRuntime.jsx)(\"circle\", {\n  cx: \"10\",\n  cy: \"8\",\n  r: \"4\"\n}, \"0\"), /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M10.35 14.01C7.62 13.91 2 15.27 2 18v2h9.54c-2.47-2.76-1.23-5.89-1.19-5.99zm9.08 4.01c.36-.59.57-1.28.57-2.02 0-2.21-1.79-4-4-4s-4 1.79-4 4 1.79 4 4 4c.74 0 1.43-.22 2.02-.57L20.59 22 22 20.59l-2.57-2.57zM16 18c-1.1 0-2-.9-2-2s.9-2 2-2 2 .9 2 2-.9 2-2 2z\"\n}, \"1\")], 'PersonSearch');\nexports.default = _default;","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M17 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V7l-4-4zm-5 16c-1.66 0-3-1.34-3-3s1.34-3 3-3 3 1.34 3 3-1.34 3-3 3zm3-10H5V5h10v4z\"\n}), 'Save');\nexports.default = _default;","const pink = {\n  50: '#fce4ec',\n  100: '#f8bbd0',\n  200: '#f48fb1',\n  300: '#f06292',\n  400: '#ec407a',\n  500: '#e91e63',\n  600: '#d81b60',\n  700: '#c2185b',\n  800: '#ad1457',\n  900: '#880e4f',\n  A100: '#ff80ab',\n  A200: '#ff4081',\n  A400: '#f50057',\n  A700: '#c51162'\n};\nexport default pink;"],"names":["CustomDatePicker","_ref","label","name","onChange","value","onKeyDown","inputRef","datePickerRef","fullWidth","textField","_ref$minWidth","minWidth","rest","_objectWithoutProperties","_excluded","_jsx","LocalizationProvider","dateAdapter","AdapterDateFns","children","DatePicker","_objectSpread","floatingLabelStyle","color","ref","slotProps","size","InputLabelProps","sx","fieldset","borderColor","fontSize","top","style","position","left","transform","width","bgcolor","boxShadow","p","heigth","ModalWithTable","height","isLoading","columns","queryKey","onSelectionChange","rows","setRows","id","onCloseModal","showModal","onClickCloseIcon","searchOnChange","_ref$title","title","searchRef","_ref$onSearchKeyEnter","onCellKeyDown","onSearchKeyEnter","isRowSelectable","getCellClassName","mainId","generateRandomClass","Modal","open","onClose","_jsxs","Box","Typography","variant","component","mb","TextField","marginBottom","InputProps","e","_searchRef$current","code","preventDefault","current","keyBoardSelectionTable","className","concat","Table","isSingleSelection","isRowFreeze","dataSelection","selection","data","table_id","right","IconButton","onClick","CloseIcon","Math","floor","random","el","_rows$","document","querySelectorAll","classList","add","firstRowParent","querySelector","firstInput","focus","event","MouseEvent","bubbles","cancelable","view","window","dispatchEvent","addEventListener","es","key","remove","keyBoardUpDown","forEach","idx","_rows$idx","_rows","_rows$idx2","_rows2","length","NumericFormatCustom","React","props","other","NumericFormat","getInputRef","onValueChange","values","target","allowNegative","thousandSeparator","valueIsNumericString","TableContext","createContext","rowSelectionModel","footerChildren","footerPaginationPosition","showFooterSelectedCount","forwardRef","_ref$CustomFooterComp","CustomFooterComponent","DefaultooterComponent","_ref$checkboxSelectio","checkboxSelection","_ref$footerChildren","_ref$footerPagination","_ref$showFooterSelect","_useState","useState","_useState2","_slicedToArray","selectedRows","setSelectedRows","useImperativeHandle","removeSelection","getSelectedRows","filter","item","includes","freezeArray","Provider","DataGrid","slots","loadingOverlay","LinearProgress","footer","initialState","pagination","paginationModel","pageSize","loading","getRowId","row","col","hide","showCellVerticalBorder","showColumnVerticalBorder","rowHeight","columnHeaderHeight","pageSizeOptions","fill","background","padding","display","fontWeight","onRowSelectionModelChange","selectionSet","Set","s","has","__","rowNode","_toConsumableArray","disableVirtualization","Pagination","_ref2","page","onPageChange","apiRef","useGridApiContext","pageCount","useGridSelector","gridPageCountSelector","MuiPagination","count","newPage","CustomPagination","GridPagination","ActionsComponent","_useContext","useContext","columnGap","justifyContent","px","alignItems","flexDirection","flex","PAPolicyInformation","_queryFn","PAContext","state","handleInputChange","customInputchange","myAxios","user","isAddOrEditMode","computation","dispatch","searchClientInputRef","useRef","searchAgentInputRef","dateFrom","dateToDateRef","dateIssuedDateRef","_useQueryModalTable","useQueryModalTable","link","url","queryUrlName","field","headerName","uniqueId","responseDataKey","onSelected","selectedRowData","entry_client_id","fullname","address","sale_officer","closeCliendIDsModal","ModalClientIDs","ModalComponent","openCliendIDsModal","openModal","isLoadingClientIdsModal","closeModal","_useQueryModalTable2","entry_agent_id","closeModalAgentId","ModalAgentId","openModalAgentId","isLoadingModalAgentId","_useQuery","useQuery","queryFn","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","get","headers","Authorization","accessToken","abrupt","sent","stop","apply","arguments","policyAccount","isLoadingPolicyAccount","onKeyDownComputation","gap","boxSizing","border","borderRadius","LoadingButton","FormControl","disabled","zIndex","InputLabel","htmlFor","OutlinedInput","client_id","endAdornment","InputAdornment","edge","PersonSearchIcon","client_name","readOnly","multiline","client_address","flexWrap","agent_id","agent_name","marginTop","flexGrow","Select","labelId","PolicyAccount","policyAccounts","map","items","MenuItem","Account","PolicyNo","gridArea","newDate","Date","newDatePlusOneYear","addYears","DateFrom","timeout","setTimeout","_dateFrom$current","_dateFrom$current$que","click","clearTimeout","DateTo","_dateToDateRef$curren","_dateToDateRef$curren2","DateIssued","_dateIssuedDateRef$cu","_dateIssuedDateRef$cu2","required","sumInsured","placeholder","inputComponent","onBlur","type","parseFloat","toFixed","propertyInsured","rowGap","Button","netPremium","vat","docStamp","localGovTaxPercent","localGovTax","Divider","totalDue","sub_account","agent_com","paActioMode","reducer","action","_defineProperty","queryKeySearchPolicy","queryKeySearchClientEntry","queryKeySearchAgentEntry","queryKeyNeedData","queryKeyAddOrUpdatePolicy","queryKeyDeletePolicy","PAPolicy","_mutationFn","_onSuccess","_mutationFn2","_onSuccess2","_updateQueryByKey","_useReducer","useReducer","_useReducer2","AuthContext","clientRows","setClientRows","_useState3","_useState4","agentRows","setAgentRows","_useState5","_useState6","search","setSearch","_useState7","_useState8","Mortgagee","setMortgagee","searchPaPolicyInputRef","newButtonRef","cancelButtonRef","deleteButtonRef","queryClient","useQueryClient","dataSubAccount","isLoadingSubAccount","onSearchSelected","closeModalPaPolicy","ModalPaPolicy","openModalPaPolicy","isLoadingModalPaPolicy","_useMutation","useMutation","mutationKey","mutationFn","_x","_callee2","variables","_context2","post","onSuccess","_x2","_callee3","res","_context3","success","updateQueryByKey","backToDefaultState","Swal","icon","message","showConfirmButton","timer","mutate","loadingAddNew","_useMutation2","_x3","_callee4","_context4","_x4","_callee5","_context5","mutateDelete","loadingDelete","setDefaultValueForNumber","useCallback","handleOnSave","undefined","codeCondfirmationAlert","isUpdate","cb","userCodeConfirmation","saveCondfirmationAlert","isConfirm","useEffect","handleKeyDown","_newButtonRef$current","_cancelButtonRef$curr","_deleteButtonRef$curr","removeEventListener","_e$target","json","resetAll","form_type","form_action","prem_text_one","prem_text_two","Object","entries","_callee6","_context6","Promise","all","invalidateQueries","formatNumber","num","toLocaleString","minimumFractionDigits","maximumFractionDigits","_selectedRowData$","PeriodFrom","PeriodTo","Location","IDNo","SubAcct","TotalPremium","AgentID","AgentCom","client_fullname","agent_fullname","TotalDue","LGovTax","DocStamp","Vat","ctrlKey","metaKey","LOGPercentage","NewTotalPremium","keySave","mode","theme","breakpoints","down","startIcon","AddIcon","SaveIcon","text","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","then","result","isConfirmed","backgroundColor","pink","DeleteIcon","policyType","Acronym","trim","CustomizeAxiosFunc","_CustomizeAxiosFunc","_args","_customizeAxiostool","_ref$onSelected","_ref$onRemoveSelected","onRemoveSelected","_ref$onSuccess","_ref$onCloseFunction","onCloseFunction","_ref$CustomizeAxios","CustomizeAxios","show","setShowModal","customizeAxiostool","_args2","response","refetchOnWindowFocus","refetch","flushSync","alert","_searchRef$current2","_searchRef$current3","selectedIDs","toString","_preConfirm","html","input","inputAttributes","autocapitalize","showLoaderOnConfirm","preConfirm","error","allowOutsideClick","isDeclined","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d","cx","cy","r","A100","A200","A400","A700"],"sourceRoot":""}