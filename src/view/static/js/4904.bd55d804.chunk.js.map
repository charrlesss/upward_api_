{"version":3,"file":"static/js/4904.bd55d804.chunk.js","mappings":"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","sources":["components/Helmet.tsx","components/ModalWithTable.tsx","components/Table.tsx","../node_modules/@mui/material/colors/brown.js","feautures/Admin/Task/Accounting/GeneralJournal.tsx","hooks/useQueryModalTable.tsx","lib/confirmationAlert.ts","../node_modules/@mui/icons-material/AccountBalanceWallet.js","../node_modules/@mui/icons-material/Add.js","../node_modules/@mui/icons-material/CardTravel.js","../node_modules/@mui/icons-material/NotInterested.js","../node_modules/@mui/icons-material/Save.js","../node_modules/@mui/icons-material/Search.js","../node_modules/@mui/icons-material/SupervisorAccount.js","../node_modules/@mui/material/colors/deepOrange.js","../node_modules/date-fns/esm/lastDayOfMonth/index.js"],"sourcesContent":["\r\nimport { Helmet } from \"react-helmet\";\r\n\r\nconst PageHelmet = ({ title = '' }: { title: string }) => {\r\n    const imgUrl = process.env.REACT_APP_IMAGE_URL;\r\n    return (\r\n        <Helmet>\r\n            <title>{title}</title>\r\n            <link rel=\"icon\" type=\"image/png\" href={`${imgUrl}/logo.png`} />\r\n        </Helmet>\r\n    );\r\n};\r\n\r\nexport default PageHelmet;","import React from \"react\";\nimport {\n  GridRowSelectionModel,\n  GridRowParams,\n  GridCellParams,\n  GridTreeNode,\n} from \"@mui/x-data-grid\";\nimport { Modal, Box, Typography, IconButton, TextField } from \"@mui/material\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport Table from \"./Table\";\n\ninterface ModalWithTableParams {\n  height: number;\n  isLoading: boolean;\n  queryKey: string;\n  columns: Array<any>;\n  onSelectionChange: (rowSelectionModel: Array<any>, data: Array<any>) => void;\n  setRows: React.Dispatch<React.SetStateAction<GridRowSelectionModel>>;\n  rows: GridRowSelectionModel;\n  id: string;\n  onCloseModal: () => void;\n  onClickCloseIcon: () => void;\n  showModal: boolean;\n  searchOnChange:\n  | React.ChangeEventHandler<HTMLInputElement | HTMLTextAreaElement>\n  | undefined;\n  title?: string;\n  searchRef?: React.RefObject<HTMLInputElement>;\n  onCellKeyDown?: any;\n  onSearchKeyEnter?: (search: string) => void;\n  isRowSelectable?: ((params: GridRowParams<any>) => boolean) | undefined;\n  getCellClassName?:\n  | ((params: GridCellParams<any, any, any, GridTreeNode>) => string)\n  | undefined;\n}\n\nconst style = {\n  position: \"absolute\" as \"absolute\",\n  top: \"50%\",\n  left: \"50%\",\n  transform: \"translate(-50%, -50%)\",\n  width: \"80%\",\n  bgcolor: \"background.paper\",\n  boxShadow: 24,\n  p: 4,\n  heigth: \"auto\",\n};\n\nexport default function ModalWithTable({\n  height,\n  isLoading,\n  queryKey,\n  columns,\n  onSelectionChange,\n  setRows,\n  rows,\n  id,\n  onCloseModal,\n  showModal,\n  onClickCloseIcon,\n  searchOnChange,\n  title = \"\",\n  searchRef,\n  onCellKeyDown,\n  onSearchKeyEnter = () => { },\n  isRowSelectable,\n  getCellClassName,\n}: ModalWithTableParams) {\n  const mainId = generateRandomClass();\n\n  return (\n    <Modal\n      open={showModal}\n      onClose={onCloseModal}\n      aria-labelledby=\"modal-modal-title\"\n      aria-describedby=\"modal-modal-description\"\n    >\n      <Box sx={style}>\n        <Typography id=\"modal-modal-title\" variant=\"h6\" component=\"h2\" mb={2}>\n          {title}\n        </Typography>\n        <TextField\n          size=\"small\"\n          label=\"Search\"\n          sx={{ marginBottom: \"10px\" }}\n          fullWidth\n          onChange={searchOnChange}\n          InputProps={{\n            inputRef: searchRef,\n          }}\n          onKeyDown={(e) => {\n            if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n              e.preventDefault();\n              onSearchKeyEnter(searchRef?.current?.value as string);\n            }\n            keyBoardSelectionTable(\n              e,\n              mainId,\n              searchRef?.current as HTMLInputElement\n            );\n          }}\n        />\n        <div\n          className={`${mainId} main-table-selection-container`}\n          style={{ position: \"relative\", height: `${height + 20}px` }}\n        >\n          <Table\n            isSingleSelection={true}\n            isRowFreeze={false}\n            columns={columns}\n            isLoading={isLoading}\n            dataSelection={(selection, data, code) => {\n              onSelectionChange(selection, data);\n            }}\n            table_id={id}\n            rows={rows}\n            isRowSelectable={isRowSelectable}\n            getCellClassName={getCellClassName}\n          />\n        </div>\n\n        <div style={{ position: \"absolute\", top: \"10px\", right: \"10px\" }}>\n          <IconButton\n            aria-label=\"search-client\"\n            color=\"secondary\"\n            onClick={onClickCloseIcon}\n          >\n            <CloseIcon />\n          </IconButton>\n        </div>\n      </Box>\n    </Modal>\n  );\n}\n\nexport function generateRandomClass() {\n  const randomNumber = Math.floor(Math.random() * 10000);\n  const randomClass = \"main-\" + randomNumber;\n  return randomClass;\n}\n\nfunction keyBoardUpDown(className: string, el: HTMLElement) {\n  const firstRowParent = document.querySelector(\n    `.${className} .MuiDataGrid-row`\n  );\n  const firstInput = firstRowParent?.querySelector(\"input\");\n  firstInput?.focus();\n  const event = new MouseEvent(\"mouseenter\", {\n    bubbles: true,\n    cancelable: true,\n    view: window,\n  });\n  firstRowParent?.dispatchEvent(event);\n  firstInput?.addEventListener(\"keydown\", (es: any) => {\n    if (es.key === \"ArrowUp\") {\n      es.preventDefault();\n      el.focus();\n    }\n    if (es.key === \"ArrowUp\") {\n      firstRowParent?.classList.remove(\"hover-keyboard\");\n    }\n  });\n}\n\nexport function keyBoardSelectionTable(\n  e: React.KeyboardEvent<HTMLDivElement>,\n  className: string,\n  el: HTMLElement\n) {\n  const mainId = className;\n  if (e.code === \"ArrowDown\") {\n    const rows = document.querySelectorAll(`.${mainId} .MuiDataGrid-row`);\n    e.preventDefault();\n    rows[0]?.classList.add(\"hover-keyboard\");\n    keyBoardUpDown(className, el);\n    rows.forEach((el, idx) => {\n      el.addEventListener(\"keydown\", (es: any) => {\n        if (es.key === \"ArrowUp\") {\n          if (idx <= 0) {\n            return;\n          }\n\n          es.preventDefault();\n          rows[idx]?.classList.remove(\"hover-keyboard\");\n          rows[idx - 1]?.classList.add(\"hover-keyboard\");\n          return;\n        }\n        if (es.key === \"ArrowDown\") {\n          es.preventDefault();\n          if (idx >= rows.length - 1) {\n            return;\n          }\n          rows[idx]?.classList.remove(\"hover-keyboard\");\n          rows[idx + 1]?.classList.add(\"hover-keyboard\");\n        }\n      });\n    });\n  }\n}\n","import {\n  useState,\n  useContext,\n  createContext,\n  ReactElement,\n  forwardRef,\n  useImperativeHandle,\n} from \"react\";\nimport { Box, LinearProgress } from \"@mui/material\";\nimport {\n  DataGrid,\n  GridSlotsComponentsProps,\n  gridPageCountSelector,\n  GridPagination,\n  useGridApiContext,\n  useGridSelector,\n  GridRowSelectionModel,\n  GridColDef,\n  GridRowParams,\n  GridCellParams,\n  GridTreeNode,\n} from \"@mui/x-data-grid\";\nimport { TablePaginationProps } from \"@mui/material/TablePagination\";\nimport MuiPagination from \"@mui/material/Pagination\";\n\ninterface TableProps {\n  isLoading: boolean;\n  columns: Array<any>;\n  rows: Array<any>;\n  table_id: string;\n  isSingleSelection: boolean;\n  isRowFreeze: boolean;\n  dataSelection?: (selection: any, data: any, code: string | null) => void;\n  CustomFooterComponent?: any;\n  isRowSelectable?: ((params: GridRowParams<any>) => boolean) | undefined;\n  getCellClassName?:\n    | ((params: GridCellParams<any, any, any, GridTreeNode>) => string)\n    | undefined;\n  footerChildren?: (\n    rowSelectionModel: GridRowSelectionModel,\n    rows: Array<any>\n  ) => ReactElement;\n  footerPaginationPosition?: string;\n  showFooterSelectedCount?: boolean;\n  checkboxSelection?: boolean | undefined;\n}\n\nconst TableContext = createContext<{\n  rowSelectionModel: GridRowSelectionModel;\n  rows: Array<any>;\n  footerPaginationPosition?: string;\n  showFooterSelectedCount?: boolean;\n  footerChildren: (\n    rowSelectionModel: GridRowSelectionModel,\n    rows: Array<any>\n  ) => ReactElement;\n}>({\n  rows: [],\n  rowSelectionModel: [],\n  footerChildren: () => <div></div>,\n  footerPaginationPosition: \"right-left\",\n  showFooterSelectedCount: true,\n});\nconst Table = forwardRef(\n  (\n    {\n      isLoading,\n      columns,\n      rows,\n      table_id,\n      isSingleSelection,\n      isRowFreeze,\n      dataSelection,\n      CustomFooterComponent = DefaultooterComponent,\n      isRowSelectable,\n      getCellClassName,\n      checkboxSelection = true,\n      footerChildren = (\n        rowSelectionModel: GridRowSelectionModel,\n        rows: Array<any>\n      ) => <div></div>,\n      footerPaginationPosition = \"right-left\",\n      showFooterSelectedCount = true,\n    }: TableProps,\n    ref\n  ) => {\n    const [selectedRows, setSelectedRows] = useState<any>([]);\n\n    useImperativeHandle(ref, () => ({\n      removeSelection: () => {\n        setSelectedRows([]);\n      },\n      getSelectedRows: () => {\n        return rows.filter((item: any) =>\n          selectedRows?.includes(item[table_id])\n        );\n      },\n      setSelectedRows: (data: Array<any>) => {\n        setSelectedRows(data);\n      },\n    }));\n\n    function onSelectionChange(selection: any, data: any, code: string | null) {\n      if (dataSelection) {\n        dataSelection(selection, data, code);\n      }\n    }\n    let freezeArray: Array<any> = [];\n\n    return (\n      <TableContext.Provider\n        value={{\n          showFooterSelectedCount,\n          footerPaginationPosition,\n          rowSelectionModel: selectedRows,\n          rows,\n          footerChildren,\n        }}\n      >\n        <DataGrid\n          slots={{\n            loadingOverlay: LinearProgress,\n            footer: CustomFooterComponent,\n          }}\n          initialState={{\n            pagination: { paginationModel: { pageSize: 100 } },\n          }}\n          loading={isLoading}\n          getRowId={(row) => row[table_id]}\n          columns={columns.filter((col: any) => !col.hide) as GridColDef<any>[]}\n          rows={rows}\n          showCellVerticalBorder={true}\n          showColumnVerticalBorder={true}\n          checkboxSelection={checkboxSelection}\n          rowSelectionModel={selectedRows}\n          rowHeight={25}\n          columnHeaderHeight={35}\n          pageSizeOptions={[10, 20, 35, 50, 75, 100]}\n          sx={{\n            \"& .cash\": {\n              color: \"#ec4899\",\n            },\n            \"& .check\": {\n              color: \"#0891b2\",\n            },\n            \"& .approved\": {\n              color: \"green\",\n            },\n            \"& .pending\": {\n              color: \"orange\",\n            },\n            \"& .disapproved\": {\n              color: \"red\",\n            },\n            \"& .normal\": {\n              color: \"red\",\n            },\n            \"& .MuiDataGrid-row.Mui-selected:hover\": {\n              color: \"black\",\n              \"& .MuiSvgIcon-root \": {\n                fill: \"#3b82f6\",\n              },\n            },\n            \"& .hover-keyboard\": {\n              background: \"#2563eb\",\n              color: \"white\",\n              \"& .MuiSvgIcon-root \": {\n                fill: \"white\",\n              },\n            },\n            \"& .MuiDataGrid-row:hover\": {\n              background: \"#2563eb\",\n              color: \"white\",\n              \"& .MuiSvgIcon-root \": {\n                fill: \"white\",\n              },\n            },\n            \"& .MuiDataGrid-row.hover\": {\n              background: \"#2563eb\",\n              color: \"white\",\n              \"& .MuiSvgIcon-root \": {\n                fill: \"white\",\n              },\n            },\n            \"& .MuiTablePagination-root p \": {\n              padding: \"0 !important\",\n            },\n\n            ...{\n              \"& .MuiDataGrid-columnHeaders\": {\n                background: \"#64748b\",\n                color: \"white\",\n                fontSize: \"14px\",\n                // borderBottomColor: \"#38bdf8\",\n              },\n              \"& .MuiDataGrid-columnHeaderCheckbox .MuiDataGrid-columnHeaderTitleContainer .MuiSvgIcon-root \":\n                {\n                  display: isSingleSelection || isRowFreeze ? \"none\" : \"block\",\n                  fill: \"white\",\n                },\n              \"& .MuiDataGrid-columnHeaderCheckbox .MuiDataGrid-columnHeaderTitleContainer input \":\n                {\n                  display: isSingleSelection || isRowFreeze ? \"none\" : \"block\",\n                },\n            },\n            ...{\n              fontSize: 13,\n              fontWeight: 500,\n              \"& .MuiDataGrid-checkboxInput\": {\n                height: \"27px\",\n                width: \"27px\",\n              },\n              \"& .MuiDataGrid-checkboxInput svg\": {\n                height: \"20px\",\n                width: \"20px\",\n              },\n            },\n          }}\n          // onRowDoubleClick={(e, r) => {\n          //   console.log(e, r);\n          // }}\n\n          onRowSelectionModelChange={(selection) => {\n            if (isRowFreeze) {\n              if (selection.length <= 0) return;\n              freezeArray = selection;\n              if (selectedRows.includes(freezeArray[freezeArray.length - 1]))\n                return;\n\n              setSelectedRows(selection);\n\n              onSelectionChange([selection[selection.length - 1]], rows, null);\n              return;\n            }\n\n            if (!isRowFreeze && isSingleSelection) {\n              if (selectedRows && selectedRows?.length > 0) {\n                const selectionSet = new Set(selectedRows);\n                setSelectedRows(\n                  selection.filter((s: any) => !selectionSet.has(s))\n                );\n              } else {\n                setSelectedRows(selection);\n              }\n            } else {\n              setSelectedRows(selection);\n            }\n\n            onSelectionChange([selection[selection.length - 1]], rows, null);\n          }}\n          onCellKeyDown={(__: any, key: any) => {\n            const keyFinding = [\"NumpadEnter\", \"Enter\", \"Delete\", \"Backspace\"];\n            if (!keyFinding.includes(key.code)) {\n              return;\n            }\n            key.preventDefault();\n            if (key.code === \"Enter\" || key.code === \"NumpadEnter\") {\n              if (isSingleSelection && !isRowFreeze) {\n                return setSelectedRows((data: any) => {\n                  if (data && data.length > 0 && data[0] === __.rowNode.id) {\n                    onSelectionChange([], rows, key.code);\n                    return [];\n                  }\n                  onSelectionChange([__.rowNode.id], rows, key.code);\n                  return [__.rowNode.id];\n                });\n              } else {\n                setSelectedRows((data: any) => {\n                  if (\n                    data &&\n                    !isRowFreeze &&\n                    data.length > 0 &&\n                    data.includes(__.rowNode.id)\n                  ) {\n                    data = data.filter((item: any) => item !== __.rowNode.id);\n                    onSelectionChange([], rows, key.code);\n                    return data;\n                  }\n                  if (\n                    data &&\n                    isRowFreeze &&\n                    data.length > 0 &&\n                    data.includes(__.rowNode.id)\n                  ) {\n                    return data;\n                  }\n                  onSelectionChange([__.rowNode.id], rows, key.code);\n                  return [...data, __.rowNode.id];\n                });\n              }\n              return;\n            }\n            if (key.code === \"Delete\" || key.code === \"Backspace\") {\n              setSelectedRows([__.rowNode.id]);\n              return onSelectionChange([__.rowNode.id], rows, key.code);\n            }\n          }}\n          disableVirtualization\n          isRowSelectable={isRowSelectable}\n          getCellClassName={getCellClassName}\n        />\n      </TableContext.Provider>\n    );\n  }\n);\n\nexport default Table;\nfunction Pagination({\n  page,\n  onPageChange,\n  className,\n}: Pick<TablePaginationProps, \"page\" | \"onPageChange\" | \"className\">) {\n  const apiRef = useGridApiContext();\n  const pageCount = useGridSelector(apiRef, gridPageCountSelector);\n\n  return (\n    <MuiPagination\n      variant=\"outlined\"\n      color=\"primary\"\n      className={className}\n      count={pageCount}\n      page={page + 1}\n      onChange={(event, newPage) => {\n        onPageChange(event as any, newPage - 1);\n      }}\n    />\n  );\n}\n\nfunction CustomPagination(props: any) {\n  return <GridPagination ActionsComponent={Pagination} {...props} />;\n}\nfunction DefaultooterComponent(\n  props: NonNullable<GridSlotsComponentsProps[\"footer\"]>\n) {\n  const {\n    rowSelectionModel,\n    showFooterSelectedCount,\n    footerPaginationPosition,\n    footerChildren,\n    rows,\n  } = useContext(TableContext);\n  return (\n    <Box\n      sx={{\n        columnGap: \"50px\",\n        display: \"flex\",\n        width: \"100%\",\n        justifyContent: \"space-between\",\n        px: 3,\n        alignItems: \"center\",\n        flexDirection:\n          footerPaginationPosition === \"right-left\" ? \"row-reverse\" : \"row\",\n      }}\n    >\n      <CustomPagination {...props} />\n      <Box\n        sx={{\n          display: \"flex\",\n          justifyContent:\n            footerPaginationPosition === \"right-left\"\n              ? \"flex-start\"\n              : \"flex-end\",\n          flex: 1,\n          alignItems: \"center\",\n        }}\n      >\n        {showFooterSelectedCount && (\n          <div>Selected:{rowSelectionModel?.length}</div>\n        )}\n        <div>{footerChildren(rowSelectionModel, rows)}</div>\n      </Box>\n    </Box>\n  );\n}\n","const brown = {\n  50: '#efebe9',\n  100: '#d7ccc8',\n  200: '#bcaaa4',\n  300: '#a1887f',\n  400: '#8d6e63',\n  500: '#795548',\n  600: '#6d4c41',\n  700: '#5d4037',\n  800: '#4e342e',\n  900: '#3e2723',\n  A100: '#d7ccc8',\n  A200: '#bcaaa4',\n  A400: '#8d6e63',\n  A700: '#5d4037'\n};\nexport default brown;","import { useReducer, useContext, useState, useRef, useEffect, useCallback } from \"react\";\nimport {\n  Button,\n  FormControl,\n  IconButton,\n  InputLabel,\n  Select,\n  MenuItem,\n  Modal,\n  Typography,\n  Box,\n  Checkbox,\n  FormControlLabel,\n} from \"@mui/material\";\nimport CardTravelIcon from \"@mui/icons-material/CardTravel\";\nimport LoadingButton from \"@mui/lab/LoadingButton\";\nimport AddIcon from \"@mui/icons-material/Add\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport Swal from \"sweetalert2\";\nimport { AuthContext } from \"../../../../components/AuthContext\";\nimport { useMutation, useQuery } from \"react-query\";\nimport useQueryModalTable from \"../../../../hooks/useQueryModalTable\";\nimport { wait } from \"../../../../lib/wait\";\nimport NotInterestedIcon from \"@mui/icons-material/NotInterested\";\nimport { LocalizationProvider } from \"@mui/x-date-pickers/LocalizationProvider\";\nimport { AdapterDateFns } from \"@mui/x-date-pickers/AdapterDateFns\";\nimport { DatePicker } from \"@mui/x-date-pickers\";\nimport { brown, deepOrange, grey } from \"@mui/material/colors\";\nimport {\n  codeCondfirmationAlert,\n  saveCondfirmationAlert,\n} from \"../../../../lib/confirmationAlert\";\n\nimport { flushSync } from \"react-dom\";\nimport SaveIcon from \"@mui/icons-material/Save\";\nimport { SelectInput, TextFormatedInput, TextInput } from \"../../../../components/UpwardFields\";\nimport SupervisorAccountIcon from '@mui/icons-material/SupervisorAccount';\nimport AccountCircleIcon from '@mui/icons-material/AccountCircle';\nimport AccountBalanceWalletIcon from '@mui/icons-material/AccountBalanceWallet';\nimport { format, lastDayOfMonth } from \"date-fns\";\nimport PageHelmet from \"../../../../components/Helmet\";\nimport { DataGridViewReact } from \"../../../../components/DataGridViewReact\";\nimport { Loading } from \"../../../../components/Loading\";\nimport useExecuteQueryFromClient from \"../../../../lib/executeQueryFromClient\";\n\nconst initialState = {\n\n  totalDebit: \"\",\n  totalCredit: \"\",\n  totalBalance: \"\",\n\n  jobAutoExp: false,\n  jobTransactionDate: new Date(),\n  jobType: \"\",\n  search: \"\",\n};\n\nexport const reducer = (state: any, action: any) => {\n  switch (action.type) {\n    case \"UPDATE_FIELD\":\n      return {\n        ...state,\n        [action.field]: action.value,\n      };\n    default:\n      return state;\n  }\n};\n\nconst selectedCollectionColumns = [\n  { key: \"code\", label: \"Code\", width: 150 },\n  { key: \"acctName\", label: \"Account Name\", width: 300 },\n  {\n    key: \"subAcctName\",\n    label: \"Sub Account\",\n    width: 170,\n  },\n  { key: \"ClientName\", label: \"Name\", width: 300 },\n  { key: \"debit\", label: \"Debit\", width: 120, type: \"number\" },\n  { key: \"credit\", label: \"Credit\", width: 120, type: \"number\" },\n  // hide\n  { key: \"TC_Code\", label: \"TC\", width: 120 },\n  {\n    key: \"remarks\",\n    label: \"Remarks\",\n    flex: 1,\n    width: 300,\n  },\n  { key: \"vatType\", label: \"Vat Type\", width: 120 },\n  { key: \"invoice\", label: \"Invoice\", width: 200 },\n  { key: \"TempID\", label: \"TempId\", hide: true },\n  { key: \"IDNo\", label: \"I.D.\", width: 300, hide: true },\n  {\n    key: \"BranchCode\",\n    label: \"BranchCode\",\n    width: 300,\n    hide: true,\n  },\n];\n\nexport default function GeneralJournal() {\n  const { executeQueryToClient } = useExecuteQueryFromClient()\n  const [mode, setMode] = useState<\"update\" | \"add\" | \"\">(\"\")\n  const [monitoring, setMonitoring] = useState({\n    totalRow: \"0\",\n    totalDebit: \"0.00\",\n    totalCredit: \"0.00\",\n    balance: \"0.00\"\n  })\n\n  const [loadingJob, setLoadingJob] = useState(false)\n  const inputSearchRef = useRef<HTMLInputElement>(null)\n\n  const refRefNo = useRef<HTMLInputElement>(null)\n  const _refSubRefNo = useRef<HTMLInputElement>(null)\n  const refDate = useRef<HTMLInputElement>(null)\n  const refExplanation = useRef<HTMLInputElement>(null)\n\n  const refCode = useRef<HTMLInputElement>(null)\n  const refAccountName = useRef<HTMLInputElement>(null)\n  const refSubAccount = useRef<HTMLInputElement>(null)\n  const refName = useRef<HTMLInputElement>(null)\n\n  const refDebit = useRef<HTMLInputElement>(null)\n  const refCredit = useRef<HTMLInputElement>(null)\n  const refTC = useRef<HTMLInputElement>(null)\n  const refRemarks = useRef<HTMLInputElement>(null)\n  const refVat = useRef<HTMLSelectElement>(null)\n  const refInvoice = useRef<HTMLInputElement>(null)\n\n  //client details \n  const refIDNo = useRef<string>('')\n  const refSubAcct = useRef<string>('')\n\n  //TC details\n  const refTCDesc = useRef<string>('')\n\n  const { myAxios, user } = useContext(AuthContext);\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const [openJobs, setOpenJobs] = useState(false);\n\n  const chartAccountSearchInput = useRef<HTMLInputElement>(null);\n  const IdsSearchInput = useRef<HTMLInputElement>(null);\n  const table = useRef<any>(null);\n\n\n  const modeAdd = mode === 'add'\n  const modeUpdate = mode === 'update'\n  const modeDefault = mode === ''\n\n\n  const {\n    isLoading: loadingGeneralJournalGenerator,\n    refetch: refetchGeneralJournalGenerator,\n  } = useQuery({\n    queryKey: \"general-journal-id-generator\",\n    queryFn: async () =>\n      await myAxios.get(\n        `/task/accounting/general-journal/get-general-journal-id`,\n        {\n          headers: {\n            Authorization: `Bearer ${user?.accessToken}`,\n          },\n        }\n      ),\n    refetchOnWindowFocus: false,\n    onSuccess: (data) => {\n      const response = data as any;\n      if (modeUpdate) {\n        dispatch({\n          type: \"UPDATE_FIELD\",\n          field: \"refNo\",\n          value: state.sub_refNo ?? \"\",\n        });\n        return;\n      }\n      wait(100).then(() => {\n        if (refRefNo.current) {\n          refRefNo.current.value = response.data.generateGeneralJournalID[0].general_journal_id\n        }\n        if (_refSubRefNo.current) {\n          _refSubRefNo.current.value = response.data.generateGeneralJournalID[0].general_journal_id\n        }\n\n        if (refVat.current) {\n          refVat.current.value = 'Non-VAT'\n        }\n      })\n    },\n\n  });\n  const {\n    mutate: addGeneralJournalMutate,\n    isLoading: loadingGeneralJournalMutate,\n  } = useMutation({\n    mutationKey: \"add-journal-voucher\",\n    mutationFn: async (variable: any) =>\n      await myAxios.post(\n        \"/task/accounting/general-journal/add-general-journal\",\n        variable,\n        {\n          headers: {\n            Authorization: `Bearer ${user?.accessToken}`,\n          },\n        }\n      ),\n    onSuccess: (res) => {\n      const response = res as any;\n      if (response.data.success) {\n\n        return Swal.fire({\n          position: \"center\",\n          icon: \"success\",\n          title: response.data.message,\n          timer: 1500,\n        }).then(() => {\n          Swal.fire({\n            text: \"Do you want to print it?\",\n            showCancelButton: true,\n            confirmButtonColor: \"#3085d6\",\n            cancelButtonColor: \"#d33\",\n            confirmButtonText: \"Yes, print it!\",\n          }).then((result) => {\n            if (result.isConfirmed) {\n              handleClickPrint()\n            }\n            wait(100).then(() => {\n              resetFieldRef()\n              resetRowFieldRef()\n              resetTable()\n              resetMonitoring()\n              setMode('')\n            })\n          });\n        })\n      }\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: response.data.message,\n        timer: 1500,\n      });\n    },\n  });\n\n  const {\n    mutate: mutateVoidGeneralJournal,\n    isLoading: loadingVoidGeneralJournalMutate,\n  } = useMutation({\n    mutationKey: \"void-journal-voucher\",\n    mutationFn: async (variable: any) =>\n      await myAxios.post(\n        \"/task/accounting/general-journal/void-general-journal\",\n        variable,\n        {\n          headers: {\n            Authorization: `Bearer ${user?.accessToken}`,\n          },\n        }\n      ),\n    onSuccess: (res) => {\n      const response = res as any;\n      if (response.data.success) {\n        resetFieldRef()\n        resetRowFieldRef()\n        resetTable()\n        resetMonitoring()\n        setMode('')\n\n        return Swal.fire({\n          position: \"center\",\n          icon: \"success\",\n          title: response.data.message,\n          timer: 1500,\n        });\n      }\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: response.data.message,\n        timer: 1500,\n      });\n    },\n  });\n  const {\n    mutate: getSearchSelectedGeneralJournal,\n    isLoading: loadingGetSearchSelectedGeneralJournal,\n  } = useMutation({\n    mutationKey: \"get-selected-search-general-journal\",\n    mutationFn: async (variable: any) =>\n      await myAxios.post(\n        \"/task/accounting/general-journal/get-selected-search-general-journal\",\n        variable,\n        {\n          headers: {\n            Authorization: `Bearer ${user?.accessToken}`,\n          },\n        }\n      ),\n    onSuccess: (res) => {\n      const response = res as any;\n      const selected = response.data.getSelectedSearchGeneralJournal;\n      const { explanation, dateEntry, refNo } = selected[0];\n\n      if (refRefNo.current) {\n        refRefNo.current.value = refNo\n      }\n      if (refDate.current) {\n        refDate.current.value = format(new Date(dateEntry), \"yyyy-MM-dd\")\n      }\n      if (refExplanation.current) {\n        refExplanation.current.value = explanation\n      }\n\n      table.current.setDataFormated(selected)\n      monitor()\n    },\n  });\n  const {\n    ModalComponent: ModalSearchGeneralJounal,\n    openModal: openSearchGeneralJounal,\n    isLoading: isLoadingSearchGeneralJounal,\n    closeModal: closeSearchGeneralJounal,\n  } = useQueryModalTable({\n    link: {\n      url: \"/task/accounting/general-journal/search-general-journal\",\n      queryUrlName: \"searchGeneralJournal\",\n    },\n    columns: [\n      { field: \"Date_Entry\", headerName: \"Date\", width: 130 },\n      { field: \"Source_No\", headerName: \"Ref No.\", width: 250 },\n      {\n        field: \"Explanation\",\n        headerName: \"Explanation\",\n        flex: 1,\n      },\n    ],\n    queryKey: \"search-general-journal\",\n    uniqueId: \"Source_No\",\n    responseDataKey: \"searchGeneralJournal\",\n    onSelected: (selectedRowData, data) => {\n      getSearchSelectedGeneralJournal({\n        Source_No: selectedRowData[0].Source_No,\n      });\n      setMode(\"update\")\n      table.current.resetTable()\n      closeSearchGeneralJounal();\n      resetRow()\n    },\n    onCloseFunction: (value: any) => {\n      dispatch({ type: \"UPDATE_FIELD\", field: \"search\", value });\n    },\n    searchRef: chartAccountSearchInput,\n  });\n\n  // fields\n  const {\n    ModalComponent: ModalChartAccountSearch,\n    openModal: openChartAccountSearch,\n    isLoading: isLoadingChartAccountSearch,\n    closeModal: closeChartAccountSearch,\n  } = useQueryModalTable({\n    link: {\n      url: \"/task/accounting/general-journal/get-chart-account\",\n      queryUrlName: \"chartAccountSearch\",\n    },\n    columns: [\n      { field: \"Acct_Code\", headerName: \"Account Code\", width: 130 },\n      { field: \"Acct_Title\", headerName: \"Account Title.\", width: 250 },\n      {\n        field: \"Short\",\n        headerName: \"Short\",\n        flex: 1,\n      },\n    ],\n    queryKey: \"get-chart-account\",\n    uniqueId: \"Acct_Code\",\n    responseDataKey: \"getChartOfAccount\",\n    onSelected: (selectedRowData, data) => {\n      if (refCode.current) {\n        refCode.current.value = selectedRowData[0].Acct_Code\n      }\n      if (refAccountName.current) {\n        refAccountName.current.value = selectedRowData[0].Acct_Title\n      }\n\n      closeChartAccountSearch();\n      setTimeout(() => {\n        refName.current?.focus();\n      }, 250);\n    },\n    searchRef: chartAccountSearchInput,\n  });\n  const {\n    ModalComponent: ModalPolicyIdClientIdRefId,\n    openModal: openPolicyIdClientIdRefId,\n    isLoading: isLoadingPolicyIdClientIdRefId,\n    closeModal: closePolicyIdClientIdRefId,\n  } = useQueryModalTable({\n    link: {\n      url: \"/task/accounting/search-pdc-policy-id\",\n      queryUrlName: \"searchPdcPolicyIds\",\n    },\n    columns: [\n      { field: \"Type\", headerName: \"Type\", width: 130 },\n      { field: \"IDNo\", headerName: \"ID No.\", width: 200 },\n      {\n        field: \"Name\",\n        headerName: \"Name\",\n        flex: 1,\n      },\n      {\n        field: \"ID\",\n        headerName: \"ID\",\n        hide: true,\n      },\n    ],\n    queryKey: \"get-policyId-ClientId-RefId\",\n    uniqueId: \"IDNo\",\n    responseDataKey: \"clientsId\",\n    onSelected: (selectedRowData) => {\n      if (refName.current) {\n        refName.current.value = selectedRowData[0].Name ?? \"\"\n      }\n      if (refSubAccount.current) {\n        refSubAccount.current.value = selectedRowData[0].ShortName ?? \"\"\n      }\n      refIDNo.current = selectedRowData[0].IDNo\n      refSubAcct.current = selectedRowData[0].sub_account\n\n      closePolicyIdClientIdRefId();\n      setTimeout(() => {\n        refDebit.current?.focus();\n      }, 200);\n    },\n    searchRef: IdsSearchInput,\n  });\n  const {\n    ModalComponent: ModalTransactionAccount,\n    openModal: openTransactionAccount,\n    isLoading: isLoadingTransactionAccount,\n    closeModal: closeTransactionAccount,\n  } = useQueryModalTable({\n    link: {\n      url: \"/task/accounting/general-journal/get-transaction-account\",\n      queryUrlName: \"transactionCodeSearch\",\n    },\n    columns: [\n      { field: \"Code\", headerName: \"Code\", width: 130 },\n      {\n        field: \"Description\",\n        headerName: \"Description\",\n        flex: 1,\n      },\n    ],\n    queryKey: \"get-transaction-account\",\n    uniqueId: \"Code\",\n    responseDataKey: \"getTransactionAccount\",\n    onSelected: (selectedRowData) => {\n      if (refTC.current) {\n        refTC.current.value = selectedRowData[0].Code\n      }\n      refTCDesc.current = selectedRowData[0].Description\n      closeTransactionAccount();\n      setTimeout(() => {\n        refRemarks.current?.focus();\n      }, 200);\n    },\n    searchRef: IdsSearchInput,\n  });\n  const handleInputChange = (e: any) => {\n    const { name, value } = e.target;\n    dispatch({ type: \"UPDATE_FIELD\", field: name, value });\n  };\n  const handleOnSave = useCallback(() => {\n    if (refRefNo.current?.value === \"\") {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: \"Please provide reference number!\",\n        timer: 1500,\n      });\n    }\n    if (refExplanation.current?.value === \"\") {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: \"Please provide explanation!\",\n        timer: 1500,\n      }).then(() => {\n        wait(300).then(() => {\n          refExplanation.current?.focus();\n        });\n      });\n    }\n    if (\n      parseFloat(monitoring.totalDebit.replace(/,/g, '')) <= 0 ||\n      parseFloat(monitoring.totalCredit.replace(/,/g, '')) <= 0\n    ) {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title:\n          \"Total Debit and Credit amount must not be zero(0), please double check the entries\",\n        timer: 1500,\n      }).then(() => {\n        wait(300).then(() => { });\n      });\n    }\n    if (monitoring.totalDebit !== monitoring.totalCredit) {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title:\n          \"Total Debit and Credit amount must be balance, please double check the entries\",\n        timer: 1500,\n      }).then(() => {\n        wait(300).then(() => { });\n      });\n    }\n\n  \n    const generalJournalData: any = table.current.getData()\n    const generalJournalDataFormatted = generalJournalData.map((itm: any) => {\n      return {\n        code: itm[0],\n        acctName: itm[1],\n        subAcctName: itm[2],\n        ClientName: itm[3],\n        debit: itm[4],\n        credit: itm[5],\n        TC_Code: itm[6],\n        remarks: itm[7],\n        vatType: itm[8],\n        invoice: itm[9],\n        TempID: itm[10],\n        IDNo: itm[11],\n        BranchCode: itm[12],\n      }\n    })\n    if (modeUpdate) {\n      codeCondfirmationAlert({\n        isUpdate: true,\n        cb: (userCodeConfirmation) => {\n          addGeneralJournalMutate({\n            hasSelected: true,\n            refNo: refRefNo.current?.value,\n            dateEntry: refDate.current?.value,\n            explanation: refExplanation.current?.value,\n            generalJournal: generalJournalDataFormatted,\n            userCodeConfirmation,\n          });\n        },\n      });\n    } else {\n      saveCondfirmationAlert({\n        isConfirm: () => {\n          addGeneralJournalMutate({\n            hasSelected: false,\n            refNo: refRefNo.current?.value,\n            dateEntry: refDate.current?.value,\n            explanation: refExplanation.current?.value,\n            generalJournal: generalJournalDataFormatted,\n          });\n        },\n      });\n    }\n  }, [monitoring, addGeneralJournalMutate, modeUpdate])\n  function handleVoid() {\n    codeCondfirmationAlert({\n      isUpdate: false,\n      text: `Are you sure you want to void ${state.refNo}`,\n      cb: (userCodeConfirmation) => {\n        mutateVoidGeneralJournal({\n          refNo: refRefNo.current?.value,\n          dateEntry: refDate.current?.value,\n          userCodeConfirmation,\n        });\n      },\n    });\n  }\n  function resetRow() {\n    if (refCode.current) {\n      refCode.current.value = \"\"\n    }\n    if (refAccountName.current) {\n      refAccountName.current.value = \"\"\n    }\n    if (refName.current) {\n      refName.current.value = \"\"\n    }\n    if (refSubAccount.current) {\n      refSubAccount.current.value = \"\"\n    }\n    if (refTC.current) {\n      refTC.current.value = \"\"\n    }\n    if (refDebit.current) {\n      refDebit.current.value = \"\"\n    }\n    if (refCredit.current) {\n      refCredit.current.value = \"\"\n    }\n    if (refRemarks.current) {\n      refRemarks.current.value = \"\"\n    }\n    if (refVat.current) {\n      refVat.current.value = \"Non-VAT\"\n    }\n    if (refInvoice.current) {\n      refInvoice.current.value = \"\"\n    }\n\n    refTCDesc.current = \"\"\n    refIDNo.current = \"\"\n    refSubAcct.current = \"\"\n  }\n  function handleRowSave() {\n    if (refCode.current && refCode.current.value === \"\") {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: \"Code is required!\",\n        timer: 1500,\n      }).then(() => {\n        wait(300).then(() => {\n          return openChartAccountSearch(state.code);\n        })\n      });\n    }\n\n    if (refName.current && refName.current.value === \"\") {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: \"ID is required!\",\n        timer: 1500,\n      }).then(() => {\n        wait(300).then(() => {\n          return openPolicyIdClientIdRefId(refName.current?.value)\n        })\n      });\n    }\n\n    if (refDebit.current && isNaN(parseFloat(refDebit.current?.value.replace(/,/g, \"\")))) {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: \"Debit is required!\",\n        timer: 1500,\n      }).then(() => {\n        wait(300).then(() => {\n          refDebit.current?.focus()\n        })\n      })\n    }\n    if (refCredit.current && isNaN(parseFloat(refCredit.current?.value.replace(/,/g, \"\")))) {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: \"Credit is required!\",\n        timer: 1500,\n      }).then(() => {\n        wait(300).then(() => {\n          refCredit.current?.focus()\n        })\n      })\n    }\n    if (\n      refDebit.current &&\n      refCredit.current &&\n      parseFloat(refCredit.current?.value.replace(/,/g, \"\")) === 0 &&\n      parseFloat(refDebit.current?.value.replace(/,/g, \"\")) === 0\n    ) {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: \"Credit and Debit must be different!\",\n        timer: 1500,\n      }).then(() => {\n        wait(300).then(() => {\n          refCredit.current?.focus()\n        })\n      })\n    }\n    if (refTC.current && refTC.current?.value === \"\") {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: \"TC is required!\",\n        timer: 1500,\n      }).then(() => {\n        wait(300).then(() => {\n          openTransactionAccount(state.TC_Code);\n        })\n      });\n    }\n    if (refCode.current && refCode.current?.value.length >= 200) {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: \"Code is too long!\",\n        timer: 1500,\n      }).then(() => {\n        wait(300).then(() => {\n          refCode.current?.focus()\n        })\n      })\n    }\n    if (refName.current && refName.current?.value.length >= 200) {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: \"Client name is too long!\",\n        timer: 1500,\n      }).then(() => {\n        wait(300).then(() => {\n          refName.current?.focus()\n        })\n      })\n    }\n    if (refTC.current && refTC.current.value.length >= 200) {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: \"TC is too long!\",\n        timer: 1500,\n      }).then(() => {\n        wait(300).then(() => {\n          refTC.current?.focus()\n        })\n      })\n    }\n    if (refInvoice.current && refInvoice.current.value.length >= 200) {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: \"Invoice is too long!\",\n        timer: 1500,\n      }).then(() => {\n        wait(300).then(() => {\n          refInvoice.current?.focus()\n        })\n      })\n    }\n    const getSelectedRow = table.current.getSelectedRow()\n    const isUpdate = getSelectedRow !== null\n\n    Swal.fire({\n      title: isUpdate\n        ? `Are you sure you want to update row?`\n        : `Are you sure you want to add new row?`,\n      text: \"You won't be able to revert this!\",\n      icon: \"warning\",\n      showCancelButton: true,\n      confirmButtonColor: \"#3085d6\",\n      cancelButtonColor: \"#d33\",\n      confirmButtonText: isUpdate\n        ? \"Yes, update it!\"\n        : \"Yes Add it\",\n    }).then((result) => {\n      if (result.isConfirmed) {\n        if (\n          refCode.current &&\n          refAccountName.current &&\n          refSubAccount.current &&\n          refName.current &&\n          refDebit.current &&\n          refCredit.current &&\n          refTC.current &&\n          refRemarks.current &&\n          refVat.current &&\n          refInvoice.current\n        ) {\n          const newData: any = table.current.getData()\n          const newInput = [\n            refCode.current.value,\n            refAccountName.current.value,\n            refSubAccount.current.value,\n            refName.current.value,\n            refDebit.current.value,\n            refCredit.current.value,\n            refTC.current.value,\n            refRemarks.current.value,\n            refVat.current.value,\n            refInvoice.current.value,\n            refIDNo.current,\n            refIDNo.current,\n            refSubAcct.current,\n          ]\n\n          let taxtInput: any = []\n          let taxableamt = 0\n\n          if (newInput[8] === 'VAT' && newInput[0] !== '1.06.02') {\n            const debit = parseFloat(newInput[4].replace(/,/g, ''))\n            const credit = parseFloat(newInput[5].replace(/,/g, ''))\n            if (debit > 0) {\n              taxableamt = debit / 1.12\n              newInput[4] = formatNumber(taxableamt)\n            } else {\n              taxableamt = credit / 1.12\n              newInput[5] = formatNumber(taxableamt)\n            }\n\n            let inputtax = taxableamt * 0.12\n            let taxtDebit = ''\n            let taxtCredit = ''\n            if (debit > 0) {\n              taxtDebit = formatNumber(inputtax)\n              taxtCredit = newInput[5]\n            } else {\n              taxtCredit = formatNumber(inputtax)\n              taxtDebit = newInput[4]\n            }\n\n            taxtInput = [\n              \"1.06.02\",\n              \"Input Tax\",\n              refSubAccount.current.value,\n              refName.current.value,\n              taxtDebit,\n              taxtCredit,\n              refTC.current.value,\n              refRemarks.current.value,\n              refVat.current.value,\n              refInvoice.current.value,\n              refIDNo.current,\n              refIDNo.current,\n              refSubAcct.current,\n            ]\n\n          }\n          if (isUpdate) {\n            newData[getSelectedRow] = newInput\n            table.current.setSelectedRow(null)\n          } else {\n            newData[newData.length] = newInput\n          }\n          table.current.setData(newData)\n          setTimeout(() => {\n            if (newInput[8] === 'VAT' && newInput[0] !== '1.06.02') {\n              const getNewData = table.current.getData()\n              if (isUpdate) {\n                getNewData.splice(getSelectedRow + 1, 0, taxtInput);\n              } else {\n                getNewData[getNewData.length] = taxtInput\n              }\n              table.current.setData(getNewData)\n            }\n            resetRow()\n          }, 100)\n\n          setTimeout(() => {\n            if (refCode.current) {\n              refCode.current.focus()\n            }\n          }, 350)\n          monitor()\n        }\n\n      }\n    });\n  }\n  function handleJobs() {\n    setOpenJobs((d) => !d);\n  }\n  function handleClickPrint() {\n    flushSync(() => {\n      const data = table.current.getData()\n      const generalJournal: any = data.map((itm: any) => {\n\n        return {\n          code: itm[0],\n          acctName: itm[1],\n          subAcctName: itm[2],\n          ClientName: itm[3],\n          debit: itm[4],\n          credit: itm[5],\n          TC_Code: itm[6],\n          remarks: itm[7],\n          vatType: itm[8],\n          invoice: itm[9],\n          TempID: itm[10],\n          IDNo: itm[11],\n          BranchCode: itm[12]\n        }\n      })\n      console.log(generalJournal)\n\n      localStorage.removeItem(\"printString\");\n      localStorage.setItem(\"dataString\", JSON.stringify(generalJournal));\n      localStorage.setItem(\"paper-width\", \"8.5in\");\n      localStorage.setItem(\"paper-height\", \"11in\");\n      localStorage.setItem(\"module\", \"general-journal\");\n      localStorage.setItem(\"state\", JSON.stringify({\n        JVNo: refRefNo.current?.value,\n        JVDate: refDate.current?.value,\n        JVExp: refExplanation.current?.value\n\n      }));\n      localStorage.setItem(\n        \"column\",\n        JSON.stringify([\n          { datakey: \"code\", header: \"ACCT #\", width: \"70px\" },\n          { datakey: \"acctName\", header: \"ACCOUNT TITLE\", width: \"130px\" },\n          { datakey: \"IDNo\", header: \"ID NO.\", width: \"110px\" },\n          { datakey: \"ClientName\", header: \"IDENTITY\", width: \"200px\" },\n          { datakey: \"debit\", header: \"DEBIT\", width: \"75px\" },\n          { datakey: \"credit\", header: \"CREDIT\", width: \"75px\" },\n        ])\n      );\n      localStorage.setItem(\n        \"title\",\n        user?.department === \"UMIS\"\n          ? \"UPWARD MANAGEMENT INSURANCE SERVICES\\n\"\n          : \"UPWARD CONSULTANCY SERVICES AND MANAGEMENT INC.\\n\"\n      );\n    });\n    window.open(\"/dashboard/print\", \"_blank\");\n  }\n  function onCancel() {\n    resetFieldRef()\n    resetRowFieldRef()\n    resetTable()\n    resetMonitoring()\n    setMode(\"\")\n\n  }\n  function monitor() {\n    setTimeout(() => {\n      const getData = table.current.getData()\n      const totalCredit = getData.reduce((a: any, b: any) => a + parseFloat(b[4].replace(/,/g, '')), 0)\n      const totalDebit = getData.reduce((a: any, b: any) => a + parseFloat(b[5].replace(/,/g, '')), 0)\n      setMonitoring({\n        totalRow: `${getData.length}`,\n        totalCredit: formatNumber(totalCredit),\n        totalDebit: formatNumber(totalDebit),\n        balance: formatNumber(totalCredit - totalDebit),\n      })\n    }, 200)\n  }\n  function resetFieldRef() {\n    refetchGeneralJournalGenerator()\n    if (refDate.current) {\n      refDate.current.value = format(new Date(), \"yyyy-MM-dd\")\n    }\n    if (refExplanation.current) {\n      refExplanation.current.value = \"\"\n    }\n  }\n  function resetRowFieldRef() {\n    if (refCode.current) {\n      refCode.current.value = ''\n    }\n    if (refAccountName.current) {\n      refAccountName.current.value = ''\n    }\n    if (refSubAccount.current) {\n      refSubAccount.current.value = ''\n    }\n    if (refName.current) {\n      refName.current.value = ''\n    }\n\n\n    if (refDebit.current) {\n      refDebit.current.value = ''\n    }\n    if (refCredit.current) {\n      refCredit.current.value = ''\n    }\n    if (refTC.current) {\n      refTC.current.value = ''\n    }\n    if (refRemarks.current) {\n      refRemarks.current.value = ''\n    }\n    if (refVat.current) {\n      refVat.current.value = 'Non-VAT'\n    }\n    if (refInvoice.current) {\n      refInvoice.current.value = ''\n    }\n  }\n  function resetTable() {\n    table.current.resetTable()\n  }\n  function resetMonitoring() {\n    setMonitoring({\n      totalRow: \"0\",\n      totalDebit: \"0.00\",\n      totalCredit: \"0.00\",\n      balance: \"0.00\"\n    })\n  }\n\n  useEffect(() => {\n    const handleKeyDown = (event: any) => {\n      if ((event.ctrlKey || event.metaKey) && event.key === 's') {\n        event.preventDefault();\n        handleOnSave();\n      }\n    };\n\n    window.addEventListener('keydown', handleKeyDown);\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [handleOnSave]);\n\n\n  function formatNumber(Amount: number) {\n    return Amount.toLocaleString(\"en-US\", {\n      minimumFractionDigits: 2,\n      maximumFractionDigits: 2,\n    })\n  }\n\n  async function DoRPTTransactionNILHN() {\n    setLoadingJob(true)\n    setOpenJobs(false)\n    setTimeout(async () => {\n      let JobDate = new Date(state.jobTransactionDate)\n      let dtFrom = format(JobDate, \"yyyy-MM-01-\")\n      let dtTo = format(lastDayOfMonth(JobDate), \"yyyy-MM-dd\")\n      let iRow = 0\n\n      const qry = `\n    select \n      a.PolicyNo,\n      a.IDNo,\n      (TotalDue - ifnull(b.TotalPaid,0)) as 'Amount',\n      c.Mortgagee \n    from Policy a \n      left join (\n        select \n          IDNo,\n          sum(Debit) as 'TotalPaid' \n        from collection \n        group by IDNo\n      ) b on b.IDNo = a.PolicyNo \n      inner join VPolicy c on c.PolicyNo = a.PolicyNo \n      where\n      (TotalDue - ifnull(b.TotalPaid,0)) <> 0 and \n      a.PolicyType = 'TPL' and \n      c.Mortgagee = 'N I L - HN' and \n      (\n        a.DateIssued >= '${dtFrom}' and \n        a.DateIssued <= '${dtTo}'\n      ) \n      order by a.DateIssued\n      `\n      let dgvJournal: any = []\n      const { data } = await executeQueryToClient(qry)\n      const dataArray = data.data\n      if (dataArray.length > 0) {\n        let totalAmount = 0\n        let i = 0\n        for (const itm of dataArray) {\n          let tmpID = \"\";\n          if (i == 0) {\n            iRow = 0\n          } else {\n            iRow = iRow + 1\n          }\n\n          tmpID = itm.IDNo\n          const { data: tmpNameRes } = await executeQueryToClient(`SELECT Shortname ,Sub_ShortName, Sub_Acct FROM (${ID_Entry}) id_entry WHERE IDNo = '${tmpID}'`)\n          dgvJournal[iRow] = [\n            \"1.03.01\", // 0\n            \"Premium Receivables\", // 1\n            tmpNameRes.data[0]?.Sub_ShortName, // 2\n            tmpNameRes.data[0]?.Shortname, // 3\n            \"0.00\", // 4\n            formatNumber(itm.Amount), //5\n            \"RPT\", // 6\n            \"\", // 7\n            \"Non-VAT\", //8\n            \"\",\n            itm.PolicyNo,\n            itm.PolicyNo,\n            tmpNameRes.data[0]?.Sub_Acct, // 8\n          ]\n\n          totalAmount = totalAmount + parseFloat(itm.Amount.toString().replace(/,/g, ''))\n          i += 1\n        }\n\n\n        const { data: tmpNameRes } = await executeQueryToClient(`SELECT Shortname ,Sub_ShortName, Sub_Acct FROM (${ID_Entry}) id_entry WHERE IDNo = 'O-1024-00011'`)\n\n        dgvJournal[iRow + 1] = [\n          \"1.03.01\",\n          \"Premium Receivables\",\n          tmpNameRes.data[0]?.Sub_ShortName, // 2\n          tmpNameRes.data[0]?.Shortname, // 3\n          formatNumber(totalAmount), //4\n          \"0.00\", // 5,\n          \"RPT\", // 7\n          \"\", // 9\n          \"Non-VAT\", //8\n          \"\",\n          \"1.05.02\", // 9\n          \"1.05.02\", // 10\n          tmpNameRes.data[0]?.Sub_Acct, // 12\n        ]\n        table.current.setData(dgvJournal)\n        setMode('update')\n        setOpenJobs(false)\n      }\n      setLoadingJob(false)\n    }, 300)\n\n\n  }\n\n  return (\n    <>\n      <PageHelmet title=\"General Journal\" />\n      {(loadingGetSearchSelectedGeneralJournal ||\n        loadingJob ||\n        loadingGeneralJournalMutate ||\n        loadingVoidGeneralJournalMutate\n      ) && <Loading />}\n      <div\n        style={{\n          display: \"flex\",\n          flexDirection: \"column\",\n          width: \"100%\",\n          height: \"100%\",\n          flex: 1,\n          padding: \"10px\",\n          background: \"#F1F1F1\"\n        }}\n      >\n        <div\n          style={{\n            display: \"flex\",\n            alignItems: \"center\",\n            columnGap: \"5px\",\n          }}\n        >\n          <div\n            style={{\n              display: \"flex\",\n              alignItems: \"center\",\n              columnGap: \"5px\",\n            }}\n          >\n            {isLoadingSearchGeneralJounal ? (\n              <LoadingButton loading={isLoadingSearchGeneralJounal} />\n            ) : (\n              <TextInput\n                label={{\n                  title: \"Search: \",\n                  style: {\n                    fontSize: \"12px\",\n                    fontWeight: \"bold\",\n                    width: \"50px\",\n                  },\n                }}\n                input={{\n                  className: \"search-input-up-on-key-down\",\n                  type: \"search\",\n                  onKeyDown: (e) => {\n                    if (e.key === \"Enter\" || e.key === \"NumpadEnter\") {\n                      e.preventDefault();\n                      openSearchGeneralJounal(e.currentTarget.value);\n                    }\n                    if (e.key === \"ArrowDown\") {\n                      e.preventDefault();\n                      const datagridview = document.querySelector(\n                        \".grid-container\"\n                      ) as HTMLDivElement;\n                      datagridview.focus();\n                    }\n                  },\n                  style: { width: \"500px\" },\n                }}\n                inputRef={inputSearchRef}\n              />\n\n            )}\n            {modeDefault && (\n              <Button\n                sx={{\n                  height: \"30px\",\n                  fontSize: \"11px\",\n                }}\n                variant=\"contained\"\n                startIcon={<AddIcon sx={{ width: 15, height: 15 }} />}\n                id=\"entry-header-save-button\"\n                onClick={() => {\n                  setMode('add')\n                }}\n                color=\"primary\"\n              >\n                New\n              </Button>\n            )}\n            <LoadingButton\n              sx={{\n                height: \"30px\",\n                fontSize: \"11px\",\n              }}\n              loading={loadingGeneralJournalMutate}\n              disabled={modeDefault}\n              onClick={handleOnSave}\n              color=\"success\"\n              variant=\"contained\"\n            >\n              Save\n            </LoadingButton>\n            {(modeAdd || modeUpdate) && (\n              <LoadingButton\n                sx={{\n                  height: \"30px\",\n                  fontSize: \"11px\",\n                }}\n                variant=\"contained\"\n                startIcon={<CloseIcon sx={{ width: 15, height: 15 }} />}\n                color=\"error\"\n                onClick={() => {\n                  Swal.fire({\n                    title: \"Are you sure?\",\n                    text: \"You won't be able to revert this!\",\n                    icon: \"warning\",\n                    showCancelButton: true,\n                    confirmButtonColor: \"#3085d6\",\n                    cancelButtonColor: \"#d33\",\n                    confirmButtonText: \"Yes, cancel it!\",\n                  }).then((result) => {\n                    if (result.isConfirmed) {\n                      onCancel()\n                    }\n                  });\n                }}\n                disabled={modeDefault}\n              >\n                Cancel\n              </LoadingButton>\n            )}\n            <LoadingButton\n              sx={{\n                height: \"30px\",\n                fontSize: \"11px\",\n                background: deepOrange[500],\n                \":hover\": {\n                  background: deepOrange[600],\n                },\n              }}\n              onClick={handleVoid}\n              loading={loadingVoidGeneralJournalMutate}\n              disabled={modeDefault}\n              variant=\"contained\"\n              startIcon={<NotInterestedIcon sx={{ width: 20, height: 20 }} />}\n            >\n              Void\n            </LoadingButton>\n            <LoadingButton\n              sx={{\n                height: \"30px\",\n                fontSize: \"11px\",\n                background: brown[500],\n                \":hover\": {\n                  background: brown[600],\n                },\n              }}\n              onClick={handleJobs}\n              variant=\"contained\"\n              startIcon={<CardTravelIcon sx={{ width: 20, height: 20 }} />}\n            >\n              Jobs\n            </LoadingButton>\n            <Button\n              disabled={modeDefault}\n              id=\"basic-button\"\n              aria-haspopup=\"true\"\n              onClick={handleClickPrint}\n              sx={{\n                height: \"30px\",\n                fontSize: \"11px\",\n                color: \"white\",\n                backgroundColor: grey[600],\n                \"&:hover\": {\n                  backgroundColor: grey[700],\n                },\n              }}\n            >\n              Print\n            </Button>\n          </div>\n          <div\n            style={{\n              fontSize: \"13px\",\n              border: \"1px solid #d4d4d8\",\n              width: \"100%\",\n              display: \"flex\",\n              columnGap: \"50px\",\n              height: \"30px\",\n              alignItems: \"center\",\n              justifyContent: \"center\",\n            }}\n          >\n            <p style={{ margin: 0, padding: 0, color: \"black\" }}>\n              <span style={{ fontSize: \"12px\" }}>Total Rows:</span> <strong>{monitoring.totalRow}</strong>\n            </p>\n            <p style={{ margin: 0, padding: 0, color: \"black\" }}>\n              <span style={{ fontSize: \"12px\" }}>Total Debit:</span> <strong>{monitoring.totalDebit}</strong>\n            </p>\n            <p style={{ margin: 0, padding: 0, color: \"black\" }}>\n              <span style={{ fontSize: \"12px\" }}>Total Credit:</span> <strong>{monitoring.totalCredit}</strong>\n            </p>\n            <p style={{ margin: 0, padding: 0, color: \"black\" }}>\n              <span style={{ fontSize: \"12px\" }}>Balance:</span>{\" \"}\n              <strong\n                style={{\n                  color:\n                    parseInt(monitoring.balance.replace(/,/g, \"\")) !== 0\n                      ? \"red\"\n                      : \"black\",\n                }}\n              >\n                {monitoring.balance}\n              </strong>\n            </p>\n          </div>\n        </div>\n        <div\n          style={{\n            position: \"relative\",\n            width: \"100%\",\n            height: \"auto\",\n            display: \"flex\",\n            marginTop: \"10px\",\n            gap: \"10px\",\n            padding: \"5px\",\n          }}\n        >\n          {loadingGeneralJournalGenerator ? (\n            <LoadingButton loading={loadingGeneralJournalGenerator} />\n          ) : (\n            <TextInput\n              label={{\n                title: \"Ref. No. : \",\n                style: {\n                  fontSize: \"12px\",\n                  fontWeight: \"bold\",\n                  width: \"70px\",\n                },\n              }}\n              input={{\n                disabled: modeDefault || modeUpdate,\n                type: \"text\",\n                style: { width: \"190px\" },\n                onKeyDown: (e) => {\n                  if (e.code === \"NumpadEnter\" || e.code === 'Enter') {\n                    refDate.current?.focus()\n                  }\n                }\n              }}\n              inputRef={refRefNo}\n            />\n          )}\n          <TextInput\n            label={{\n              title: \"Date : \",\n              style: {\n                fontSize: \"12px\",\n                fontWeight: \"bold\",\n                width: \"50px\",\n              },\n            }}\n            input={{\n              defaultValue: format(new Date(), \"yyyy-MM-dd\"),\n              disabled: modeDefault,\n              type: \"date\",\n              style: { width: \"190px\" },\n              onKeyDown: (e) => {\n                if (e.code === \"NumpadEnter\" || e.code === 'Enter') {\n                  refExplanation.current?.focus()\n                }\n              }\n            }}\n            inputRef={refDate}\n          />\n          <TextInput\n            label={{\n              title: \"Explanation : \",\n              style: {\n                fontSize: \"12px\",\n                fontWeight: \"bold\",\n                width: \"90px\",\n              },\n            }}\n            input={{\n              disabled: modeDefault,\n              type: \"text\",\n              style: { width: \"600px\" },\n              onKeyDown: (e) => {\n                if (e.code === \"NumpadEnter\" || e.code === 'Enter') {\n                  refCode.current?.focus()\n                }\n              }\n            }}\n            inputRef={refExplanation}\n          />\n        </div>\n        <fieldset\n          style={{\n            border: \"1px solid #cbd5e1\",\n            borderRadius: \"5px\",\n            position: \"relative\",\n            width: \"100%\",\n            height: \"auto\",\n            marginTop: \"10px\",\n\n            padding: \"15px\",\n          }}\n        >\n          <div\n            style={{\n              display: \"flex\",\n              gap: \"10px\",\n            }}\n          >\n            {isLoadingChartAccountSearch ? (\n              <LoadingButton loading={isLoadingChartAccountSearch} />\n            ) : (\n              <TextInput\n                label={{\n                  title: \"Code : \",\n                  style: {\n                    fontSize: \"12px\",\n                    fontWeight: \"bold\",\n                    width: \"70px\",\n                  },\n                }}\n                input={{\n                  disabled: modeDefault,\n                  type: \"text\",\n                  style: { width: \"190px\" },\n                  onKeyDown: (e) => {\n                    if (e.key === \"Enter\" || e.key === \"NumpadEnter\") {\n                      e.preventDefault();\n                      if (refCode.current) {\n                        openChartAccountSearch(refCode.current.value)\n                      }\n                    }\n                  }\n                }}\n                inputRef={refCode}\n                icon={<SupervisorAccountIcon sx={{ fontSize: \"18px\", color: modeDefault ? \"gray\" : \"black\" }} />}\n                onIconClick={(e) => {\n                  e.preventDefault()\n                  if (refCode.current) {\n                    openChartAccountSearch(refCode.current.value)\n                  }\n                }}\n                disableIcon={modeDefault}\n              />\n            )}\n\n            <TextInput\n              label={{\n                title: \"Account Name : \",\n                style: {\n                  fontSize: \"12px\",\n                  fontWeight: \"bold\",\n                  width: \"100px\",\n                },\n              }}\n              input={{\n                disabled: modeDefault,\n                type: \"text\",\n                style: { width: \"190px\" },\n                readOnly: true,\n                onKeyDown: (e) => {\n                  if (e.code === \"NumpadEnter\" || e.code === 'Enter') {\n                    refSubAccount.current?.focus()\n                  }\n                }\n              }}\n              inputRef={refAccountName}\n            />\n\n            <TextInput\n              label={{\n                title: \"Sub Account : \",\n                style: {\n                  fontSize: \"12px\",\n                  fontWeight: \"bold\",\n                  width: \"100px\",\n                },\n              }}\n              input={{\n                disabled: modeDefault,\n                type: \"text\",\n                style: { width: \"190px\" },\n                readOnly: true,\n                onKeyDown: (e) => {\n                  if (e.code === \"NumpadEnter\" || e.code === 'Enter') {\n                    refName.current?.focus()\n                  }\n                }\n              }}\n              inputRef={refSubAccount}\n            />\n\n            {isLoadingPolicyIdClientIdRefId ? (\n              <LoadingButton loading={isLoadingPolicyIdClientIdRefId} />\n            ) : (\n              <TextInput\n                label={{\n                  title: \"I.D : \",\n                  style: {\n                    fontSize: \"12px\",\n                    fontWeight: \"bold\",\n                    width: \"70px\",\n                  },\n                }}\n                input={{\n                  disabled: modeDefault,\n                  type: \"text\",\n                  style: { width: \"300px\" },\n                  onKeyDown: (e) => {\n                    if (e.key === \"Enter\" || e.key === \"NumpadEnter\") {\n                      e.preventDefault();\n                      if (refName.current) {\n                        openPolicyIdClientIdRefId(refName.current.value)\n                      }\n                    }\n                  }\n                }}\n                inputRef={refName}\n                icon={<AccountCircleIcon sx={{ fontSize: \"18px\", color: modeDefault ? \"gray\" : \"black\" }} />}\n                onIconClick={(e) => {\n                  e.preventDefault()\n                  if (refName.current) {\n                    openPolicyIdClientIdRefId(refName.current.value)\n                  }\n                }}\n                disableIcon={modeDefault}\n              />\n            )}\n          </div>\n          <div\n            style={{\n              display: \"flex\",\n              gap: \"10px\",\n              marginTop: \"10px\",\n            }}\n          >\n            <TextFormatedInput\n              label={{\n                title: \"Debit : \",\n                style: {\n                  fontSize: \"12px\",\n                  fontWeight: \"bold\",\n                  width: \"70px\",\n                },\n              }}\n              input={{\n                disabled: modeDefault,\n                type: \"text\",\n                style: { width: \"190px\" },\n                onKeyDown: (e) => {\n                  if (e.code === \"NumpadEnter\" || e.code === 'Enter') {\n                    refCredit.current?.focus()\n                  }\n                }\n              }}\n              inputRef={refDebit}\n            />\n            <TextFormatedInput\n              label={{\n                title: \"Credit : \",\n                style: {\n                  fontSize: \"12px\",\n                  fontWeight: \"bold\",\n                  width: \"100px\",\n                },\n              }}\n              input={{\n                disabled: modeDefault,\n                type: \"text\",\n                style: { width: \"190px\" },\n                onKeyDown: (e) => {\n                  if (e.code === \"NumpadEnter\" || e.code === 'Enter') {\n                    refTC.current?.focus()\n                  }\n                }\n              }}\n              inputRef={refCredit}\n            />\n            {isLoadingTransactionAccount ? (\n              <LoadingButton loading={isLoadingTransactionAccount} />\n            ) : (\n              <TextInput\n                label={{\n                  title: \"TC : \",\n                  style: {\n                    fontSize: \"12px\",\n                    fontWeight: \"bold\",\n                    width: \"100px\",\n                  },\n                }}\n                input={{\n                  disabled: modeDefault,\n                  type: \"text\",\n                  style: { width: \"190px\" },\n                  onKeyDown: (e) => {\n                    if (e.key === \"Enter\" || e.key === \"NumpadEnter\") {\n                      e.preventDefault();\n                      if (refTC.current) {\n                        openTransactionAccount(refTC.current.value)\n                      }\n                    }\n                  }\n                }}\n                inputRef={refTC}\n                icon={<AccountBalanceWalletIcon sx={{ fontSize: \"18px\", color: modeDefault ? \"gray\" : \"black\" }} />}\n                onIconClick={(e) => {\n                  e.preventDefault()\n                  if (refTC.current) {\n                    openTransactionAccount(refTC.current.value)\n                  }\n                }}\n                disableIcon={modeDefault}\n              />\n            )}\n            <TextInput\n              label={{\n                title: \"Remarks : \",\n                style: {\n                  fontSize: \"12px\",\n                  fontWeight: \"bold\",\n                  width: \"70px\",\n                },\n              }}\n              input={{\n                disabled: modeDefault,\n                type: \"text\",\n                style: { width: \"300px\" },\n                onKeyDown: (e) => {\n                  if (e.code === \"NumpadEnter\" || e.code === 'Enter') {\n                    refVat.current?.focus()\n                  }\n                }\n              }}\n              inputRef={refRemarks}\n            />\n          </div>\n          <div style={{\n            display: \"flex\",\n            gap: \"10px\",\n            marginTop: \"10px\",\n          }}>\n\n            <SelectInput\n              label={{\n                title: \"Vat Type : \",\n                style: {\n                  fontSize: \"12px\",\n                  fontWeight: \"bold\",\n                  width: \"70px\",\n                },\n              }}\n              selectRef={refVat}\n              select={{\n                disabled: modeDefault,\n                style: { width: \"190px\", height: \"22px\" },\n                defaultValue: \"Non-VAT\",\n                onKeyDown: (e) => {\n                  if (e.code === \"NumpadEnter\" || e.code === 'Enter') {\n                    e.preventDefault()\n                    refInvoice.current?.focus()\n                  }\n                }\n              }}\n              datasource={[\n                { key: \"VAT\" },\n                { key: \"Non-VAT\" },\n              ]}\n              values={\"key\"}\n              display={\"key\"}\n            />\n            <TextInput\n              label={{\n                title: \"OR/Invoice No. : \",\n                style: {\n                  fontSize: \"12px\",\n                  fontWeight: \"bold\",\n                  width: \"100px\",\n                },\n              }}\n              input={{\n                disabled: modeDefault,\n                type: \"text\",\n                style: { width: \"300px\" },\n                onKeyDown: (e) => {\n                  if (e.code === \"NumpadEnter\" || e.code === 'Enter') {\n                    e.preventDefault()\n                    handleRowSave()\n                  }\n                }\n              }}\n              inputRef={refInvoice}\n            />\n\n            <Button\n              disabled={modeDefault}\n              sx={{\n                height: \"22px\",\n                fontSize: \"11px\",\n              }}\n              variant=\"contained\"\n              startIcon={<SaveIcon sx={{ fontSize: \"12px\", }} />}\n              onClick={() => {\n                handleRowSave()\n              }}\n              color=\"success\"\n            >\n              Save Row\n            </Button>\n          </div>\n        </fieldset>\n        <DataGridViewReact\n          ref={table}\n          columns={selectedCollectionColumns}\n          height='380px'\n          getSelectedItem={(rowItm: any) => {\n            if (rowItm) {\n              refIDNo.current = rowItm[11]\n              refSubAcct.current = rowItm[12]\n\n              if (refCode.current) {\n                refCode.current.value = rowItm[0]\n              }\n              if (refAccountName.current) {\n                refAccountName.current.value = rowItm[1]\n              }\n              if (refSubAccount.current) {\n                refSubAccount.current.value = rowItm[2]\n              }\n              if (refName.current) {\n                refName.current.value = rowItm[3]\n              }\n              if (refDebit.current) {\n                refDebit.current.value = rowItm[4]\n              }\n              if (refCredit.current) {\n                refCredit.current.value = rowItm[5]\n              }\n              if (refTC.current) {\n                refTC.current.value = rowItm[6]\n              }\n              if (refRemarks.current) {\n                refRemarks.current.value = rowItm[7]\n              }\n              if (refVat.current) {\n                refVat.current.value = rowItm[8]\n              }\n              if (refInvoice.current) {\n                refInvoice.current.value = rowItm[9]\n              }\n            } else {\n              resetRow()\n            }\n          }}\n          onKeyDown={(rowItm: any, rowIdx: any, e: any) => {\n            if (e.code === 'Delete' || e.code === 'Backspace') {\n              const isConfim = window.confirm(`Are you sure you want to delete?`)\n              if (isConfim) {\n                const debitTableData = table.current.getData()\n                debitTableData.splice(rowIdx, 1);\n                table.current.setData(debitTableData)\n\n                setTimeout(() => {\n                  const getData = table.current.getData()\n\n                  monitor()\n                }, 200)\n\n                return\n              }\n            }\n          }}\n        />\n        <Modal open={openJobs} onClose={() => setOpenJobs(false)}>\n          <Box\n            sx={{\n              position: \"absolute\" as \"absolute\",\n              top: \"50%\",\n              left: \"50%\",\n              transform: \"translate(-50%, -50%)\",\n              width: 470,\n              bgcolor: \"background.paper\",\n              p: 4,\n            }}\n          >\n            <IconButton\n              style={{\n                position: \"absolute\",\n                top: \"10px\",\n                right: \"10px\",\n              }}\n              aria-label=\"search-client\"\n              onClick={() => setOpenJobs(false)}\n            >\n              <CloseIcon />\n            </IconButton>\n            <Typography\n              id=\"modal-modal-title\"\n              variant=\"h6\"\n              component=\"h2\"\n              sx={{ marginBottom: \"20px\" }}\n            >\n              Jobs\n            </Typography>\n            <div\n              style={{\n                width: \"400px\",\n              }}\n            >\n              <div\n                style={{\n                  width: \"100%\",\n                  display: \"flex\",\n                  marginBottom: \"10px\",\n                  justifyContent: \"space-between\",\n                  alignItems: \"center\",\n                }}\n              >\n                <LocalizationProvider dateAdapter={AdapterDateFns}>\n                  <DatePicker\n                    sx={{\n                      width: \"200px\",\n                      \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n                    }}\n                    slotProps={{\n                      textField: {\n                        size: \"small\",\n                        name: \"\",\n                        InputLabelProps: {\n                          style: {\n                            fontSize: \"14px\",\n                          },\n                        },\n                        InputProps: {\n                          style: { height: \"27px\", fontSize: \"14px\" },\n                        },\n                      },\n                    }}\n                    label={\"Transaction Date: \"}\n                    views={[\"month\", \"year\"]}\n                    value={state.jobTransactionDate}\n                    onChange={(value) => {\n                      dispatch({\n                        type: \"UPDATE_FIELD\",\n                        field: \"jobTransactionDate\",\n                        value: value,\n                      });\n                    }}\n                  />\n                </LocalizationProvider>\n                <FormControlLabel\n                  sx={{\n                    height: \"30px\",\n                    \"& .MuiTypography-root\": {\n                      fontSize: \"14px\",\n                    },\n                  }}\n                  control={\n                    <Checkbox\n                      size=\"small\"\n                      checked={state.jobAutoExp}\n                      onChange={(e) => {\n                        dispatch({\n                          type: \"UPDATE_FIELD\",\n                          field: \"jobAutoExp\",\n                          value: !state.jobAutoExp,\n                        });\n                      }}\n                    />\n                  }\n                  label=\"Auto Explanation\"\n                />\n              </div>\n              <FormControl\n                fullWidth\n                size=\"small\"\n                variant=\"outlined\"\n                sx={{\n                  \".MuiFormLabel-root\": {\n                    fontSize: \"14px\",\n                    background: \"white\",\n                    zIndex: 99,\n                    padding: \"0 3px\",\n                  },\n                  \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n                }}\n              >\n                <InputLabel id=\"label-selection-job-type\">Type of Job</InputLabel>\n                <Select\n                  labelId=\"label-selection-job-type\"\n                  value={state.jobType}\n                  name=\"jobType\"\n                  onChange={handleInputChange}\n                  autoWidth\n                  sx={{\n                    height: \"27px\",\n                    fontSize: \"14px\",\n                  }}\n                >\n                  <MenuItem value={\"\"}> </MenuItem>\n                  <MenuItem value={\"0\"}>Reversal of Accrued Interest </MenuItem>\n                  <MenuItem value={\"1\"}>\n                    {\" \"}\n                    Income Recognition & Accrual of Interest\n                  </MenuItem>\n                  <MenuItem value={\"2\"}>Penalty Charges</MenuItem>\n                  <MenuItem value={\"3\"}>Penalty Income</MenuItem>\n                  <MenuItem value={\"4\"}>RPT Transaction (NIL-HN)</MenuItem>\n                  <MenuItem value={\"5\"}>RPT Transaction (AMIFIN)</MenuItem>\n                  <MenuItem value={\"6\"}>RPT Income</MenuItem>\n                  <MenuItem value={\"7\"}>Monthly Accrual Expenses</MenuItem>\n                  <MenuItem value={\"8\"}>Monthly Accrual Income</MenuItem>\n                  <MenuItem value={\"9\"}>\n                    Production (Milestone Guarantee)\n                  </MenuItem>\n                  <MenuItem value={\"10\"}>\n                    Production (Liberty Insurance Co.)\n                  </MenuItem>\n                  <MenuItem value={\"11\"}>Production (Federal Phoenix)</MenuItem>\n                </Select>\n              </FormControl>\n            </div>\n\n            <div\n              style={{\n                display: \"flex\",\n                columnGap: \"30px\",\n                alignItems: \"flex-end\",\n                marginTop: \"20px\",\n              }}\n            >\n              <LoadingButton\n                color=\"success\"\n                variant=\"contained\"\n                onClick={() => {\n                  if (state.jobType === '4') {\n                    DoRPTTransactionNILHN()\n                  }\n\n                }}\n              >\n                Create Job\n              </LoadingButton>\n              <Button\n                // ref={checkModalSaveButton}\n                color=\"error\"\n                variant=\"contained\"\n                onClick={() => setOpenJobs(false)}\n              >\n                Cancel\n              </Button>\n            </div>\n          </Box>\n        </Modal>\n        {ModalChartAccountSearch}\n        {ModalPolicyIdClientIdRefId}\n        {ModalTransactionAccount}\n        {ModalSearchGeneralJounal}\n      </div>\n    </>\n\n  );\n}\n\nfunction setNewStateValue(dispatch: any, obj: any) {\n  Object.entries(obj).forEach(([field, value]) => {\n    dispatch({ type: \"UPDATE_FIELD\", field, value });\n  });\n}\nconst ID_Entry = `\nSELECT \n       id_entry.IDNo,\n       id_entry.ShortName as Shortname,\n       IDType,\n       b.Acronym as Sub_Acct,\n       b.ShortName as Sub_ShortName\n   FROM\n       (SELECT \n           IF(aa.option = 'individual', CONCAT(IF(aa.lastname IS NOT NULL\n                   AND TRIM(aa.lastname) <> '', CONCAT(aa.lastname, ', '), ''), aa.firstname), aa.company) AS ShortName,\n               aa.entry_client_id AS IDNo,\n               aa.sub_account,\n               'Client' as IDType\n       FROM\n           entry_client aa UNION ALL SELECT \n           CONCAT(IF(aa.lastname IS NOT NULL\n                   AND TRIM(aa.lastname) <> '', CONCAT(aa.lastname, ', '), ''), aa.firstname) AS ShortName,\n               aa.entry_agent_id AS IDNo,\n               aa.sub_account,\n               'Agent' as IDType\n       FROM\n           entry_agent aa UNION ALL SELECT \n           CONCAT(IF(aa.lastname IS NOT NULL\n                   AND TRIM(aa.lastname) <> '', CONCAT(aa.lastname, ', '), ''), aa.firstname) AS ShortName,\n               aa.entry_employee_id AS IDNo,\n               aa.sub_account,\n               'Employee' as IDType\n       FROM\n           entry_employee aa UNION ALL SELECT \n           aa.fullname AS ShortName,\n               aa.entry_fixed_assets_id AS IDNo,\n               sub_account,\n                'Fixed Assets' as IDType\n       FROM\n           entry_fixed_assets aa UNION ALL SELECT \n           aa.description AS ShortName,\n               aa.entry_others_id AS IDNo,\n               aa.sub_account,\n               'Others' as IDType\n       FROM\n           entry_others aa UNION ALL SELECT \n           IF(aa.option = 'individual', CONCAT(IF(aa.lastname IS NOT NULL\n                   AND TRIM(aa.lastname) <> '', CONCAT(aa.lastname, ', '), ''), aa.firstname), aa.company) AS ShortName,\n               aa.entry_supplier_id AS IDNo,\n               aa.sub_account,\n                'Supplier' as IDType\n       FROM\n           entry_supplier aa) id_entry\n      left join sub_account b ON id_entry.sub_account = b.Sub_Acct\n `","import { useContext, useState } from \"react\";\nimport { useQuery } from \"react-query\";\nimport { AuthContext, User } from \"../components/AuthContext\";\nimport {\n  GridRowSelectionModel,\n  GridCellParams,\n  GridTreeNode,\n} from \"@mui/x-data-grid\";\nimport ModalWithTable from \"../components/ModalWithTable\";\nimport { flushSync } from \"react-dom\";\nimport { AxiosResponse, AxiosInstance } from \"axios\";\nimport { GridRowParams } from \"@mui/x-data-grid\";\ninterface QueryModalTableParamsType {\n  link?: {\n    url: string;\n    queryUrlName: string;\n  };\n  uniqueId: string;\n  queryKey: string;\n  responseDataKey: string;\n  columns: Array<any>;\n  onSelected?: (selectedRowData: Array<any>, data: Array<any>) => void;\n  onRemoveSelected?: (data: Array<any>) => void;\n  onSuccess?: (data: any) => void;\n  searchRef?: React.RefObject<HTMLInputElement>;\n  onCellKeyDown?: any;\n  onCloseFunction?: (search: any) => void;\n  CustomizeAxios?: (\n    myAxios: AxiosInstance,\n    user: User | null,\n    link: QueryModalTableParamsType[\"link\"],\n    search?: string\n  ) => Promise<AxiosResponse<any, any>>;\n  isRowSelectable?: ((params: GridRowParams<any>) => boolean) | undefined;\n  getCellClassName?:\n    | ((params: GridCellParams<any, any, any, GridTreeNode>) => string)\n    | undefined;\n}\n\nasync function CustomizeAxiosFunc(\n  myAxios: AxiosInstance,\n  user: User | null,\n  link: QueryModalTableParamsType[\"link\"],\n  search: string = \"\"\n) {\n  return myAxios.get(`${link?.url}?${link?.queryUrlName}=${search}`, {\n    headers: {\n      Authorization: `Bearer ${user?.accessToken}`,\n    },\n  });\n}\n\nconst useQueryModalTable = ({\n  link,\n  uniqueId,\n  queryKey,\n  responseDataKey,\n  columns,\n  onSelected = () => {},\n  onRemoveSelected = () => {},\n  onSuccess = () => {},\n  searchRef,\n  onCellKeyDown,\n  onCloseFunction = () => {},\n  CustomizeAxios = CustomizeAxiosFunc,\n  isRowSelectable,\n  getCellClassName,\n}: QueryModalTableParamsType) => {\n  const { myAxios, user } = useContext(AuthContext);\n  const [show, setShowModal] = useState(false);\n  const [rows, setRows] = useState<GridRowSelectionModel>([]);\n  async function customizeAxiostool(search: string = \"\") {\n    return await CustomizeAxios(myAxios, user, link, search);\n  }\n  const { isLoading, refetch } = useQuery({\n    queryKey: queryKey,\n    queryFn: async () => await customizeAxiostool(),\n    onSuccess: (res) => {\n      const response = res as any;\n      setRows(response.data[responseDataKey]);\n      onSuccess(response);\n    },\n    refetchOnWindowFocus: false,\n  });\n\n  const openModal = (search: string = \"\") => {\n    flushSync(() => {\n      setShowModal(true);\n    });\n    if (searchRef?.current) {\n      searchRef.current.value = search;\n      customizeAxiostool(search).then((res: any) => {\n        if (!res?.data.success) {\n          return alert(`Error : ${res?.data.message}`);\n        }\n        const response = res as any;\n        setRows(response.data[responseDataKey]);\n        if (searchRef?.current) searchRef.current.focus();\n      });\n    }\n  };\n\n  const closeModal = () => {\n    setShowModal(false);\n    if (onCloseFunction) {\n      onCloseFunction(searchRef?.current?.value);\n    }\n  };\n\n  const ModalComponent = (\n    <ModalWithTable\n      getCellClassName={getCellClassName}\n      searchRef={searchRef}\n      showModal={show}\n      onCloseModal={() => {\n        setShowModal(false);\n        if (onCloseFunction) {\n          onCloseFunction(searchRef?.current?.value);\n        }\n      }}\n      onClickCloseIcon={() => {\n        setShowModal(false);\n        if (onCloseFunction) {\n          onCloseFunction(searchRef?.current?.value);\n        }\n      }}\n      searchOnChange={(e) => {\n        // myAxios\n        //   .get(`${link.url}?${link.queryUrlName}=${e.target.value}`, {\n        //     headers: {\n        //       Authorization: `Bearer ${user?.accessToken}`,\n        //     },\n        //   })\n        //   .then((res: any) => {\n        //     if (!res?.data.success) {\n        //       return alert(`Error : ${res?.data.message}`);\n        //     }\n        //     const response = res as any;\n        //     setRows(response.data[responseDataKey]);\n        //   });\n      }}\n      onSearchKeyEnter={(value) => {\n        customizeAxiostool(value).then((res: any) => {\n          if (!res?.data.success) {\n            return alert(`Error : ${res?.data.message}`);\n          }\n          const response = res as any;\n          setRows(response.data[responseDataKey]);\n        });\n      }}\n      onCellKeyDown={onCellKeyDown}\n      height={300}\n      isLoading={isLoading}\n      queryKey={queryKey}\n      columns={columns}\n      onSelectionChange={(rowSelectionModel, data) => {\n        if (rowSelectionModel.length <= 0) {\n          return onRemoveSelected(data);\n        }\n        const selectedIDs = new Set(rowSelectionModel);\n        const selectedRowData = data.filter((row: any) => {\n          return selectedIDs.has(row[uniqueId].toString());\n        });\n        if (selectedRowData.length <= 0) return;\n        onSelected(selectedRowData, data);\n      }}\n      id={uniqueId}\n      rows={rows}\n      setRows={setRows}\n      isRowSelectable={isRowSelectable}\n    />\n  );\n\n  return {\n    show,\n    rows,\n    isLoading,\n    openModal,\n    closeModal,\n    ModalComponent,\n    refetch,\n  };\n};\n\nexport default useQueryModalTable;\n","import Swal from \"sweetalert2\";\n\nexport function codeCondfirmationAlert(props: {\n  cb: (userCodeConfirmation: string) => void;\n  isUpdate: boolean;\n  isConfirm?: () => void;\n  isDeclined?: () => void;\n  text?: string;\n}) {\n  Swal.fire({\n    title: `Are you sure!`,\n    html: props?.text\n      ? props?.text\n      : props.isUpdate\n      ? `Are you sure you want to make this change?`\n      : \"Are you sure you want to delete this?\",\n    icon: \"warning\",\n    input: \"text\",\n    inputAttributes: {\n      autocapitalize: \"off\",\n    },\n    showCancelButton: true,\n    confirmButtonText: \"Save\",\n    confirmButtonColor: \"green\",\n    showLoaderOnConfirm: true,\n    preConfirm: async (userCodeConfirmation) => {\n      try {\n        props.cb(userCodeConfirmation);\n      } catch (error) {\n        Swal.showValidationMessage(`\n            Request failed: ${error}\n          `);\n      }\n    },\n    allowOutsideClick: () => !Swal.isLoading(),\n  }).then((result) => {\n    if (result.isConfirmed) {\n      if (props.isConfirm) {\n        return props.isConfirm();\n      }\n    }\n    if (props.isDeclined) {\n      props.isDeclined();\n    }\n  });\n}\n\nexport function saveCondfirmationAlert(props: {\n  isConfirm?: () => void;\n  isDeclined?: () => void;\n  text?: string;\n}) {\n  Swal.fire({\n    title: \"Are you sure?\",\n    text: props?.text ? props?.text : \"Do you want to proceed with saving?\",\n    icon: \"warning\",\n    showCancelButton: true,\n    confirmButtonColor: \"#3085d6\",\n    cancelButtonColor: \"#d33\",\n    confirmButtonText: \"Yes, save it!\",\n  }).then((result) => {\n    if (result.isConfirmed) {\n      if (props.isConfirm) {\n        return props.isConfirm();\n      }\n    }\n    if (props.isDeclined) {\n      props.isDeclined();\n    }\n  });\n}\n","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M21 18v1c0 1.1-.9 2-2 2H5c-1.11 0-2-.9-2-2V5c0-1.1.89-2 2-2h14c1.1 0 2 .9 2 2v1h-9c-1.11 0-2 .9-2 2v8c0 1.1.89 2 2 2h9zm-9-2h10V8H12v8zm4-2.5c-.83 0-1.5-.67-1.5-1.5s.67-1.5 1.5-1.5 1.5.67 1.5 1.5-.67 1.5-1.5 1.5z\"\n}), 'AccountBalanceWallet');\nexports.default = _default;","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\"\n}), 'Add');\nexports.default = _default;","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M20 6h-3V4c0-1.11-.89-2-2-2H9c-1.11 0-2 .89-2 2v2H4c-1.11 0-2 .89-2 2v11c0 1.11.89 2 2 2h16c1.11 0 2-.89 2-2V8c0-1.11-.89-2-2-2zM9 4h6v2H9V4zm11 15H4v-2h16v2zm0-5H4V8h3v2h2V8h6v2h2V8h3v6z\"\n}), 'CardTravel');\nexports.default = _default;","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.42 0-8-3.58-8-8 0-1.85.63-3.55 1.69-4.9L16.9 18.31C15.55 19.37 13.85 20 12 20zm6.31-3.1L7.1 5.69C8.45 4.63 10.15 4 12 4c4.42 0 8 3.58 8 8 0 1.85-.63 3.55-1.69 4.9z\"\n}), 'NotInterested');\nexports.default = _default;","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M17 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V7l-4-4zm-5 16c-1.66 0-3-1.34-3-3s1.34-3 3-3 3 1.34 3 3-1.34 3-3 3zm3-10H5V5h10v4z\"\n}), 'Save');\nexports.default = _default;","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z\"\n}), 'Search');\nexports.default = _default;","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M16.5 12c1.38 0 2.49-1.12 2.49-2.5S17.88 7 16.5 7C15.12 7 14 8.12 14 9.5s1.12 2.5 2.5 2.5zM9 11c1.66 0 2.99-1.34 2.99-3S10.66 5 9 5C7.34 5 6 6.34 6 8s1.34 3 3 3zm7.5 3c-1.83 0-5.5.92-5.5 2.75V19h11v-2.25c0-1.83-3.67-2.75-5.5-2.75zM9 13c-2.33 0-7 1.17-7 3.5V19h7v-2.25c0-.85.33-2.34 2.37-3.47C10.5 13.1 9.66 13 9 13z\"\n}), 'SupervisorAccount');\nexports.default = _default;","const deepOrange = {\n  50: '#fbe9e7',\n  100: '#ffccbc',\n  200: '#ffab91',\n  300: '#ff8a65',\n  400: '#ff7043',\n  500: '#ff5722',\n  600: '#f4511e',\n  700: '#e64a19',\n  800: '#d84315',\n  900: '#bf360c',\n  A100: '#ff9e80',\n  A200: '#ff6e40',\n  A400: '#ff3d00',\n  A700: '#dd2c00'\n};\nexport default deepOrange;","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name lastDayOfMonth\n * @category Month Helpers\n * @summary Return the last day of a month for the given date.\n *\n * @description\n * Return the last day of a month for the given date.\n * The result will be in the local timezone.\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the last day of a month\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The last day of a month for 2 September 2014 11:55:00:\n * const result = lastDayOfMonth(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Tue Sep 30 2014 00:00:00\n */\nexport default function lastDayOfMonth(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var month = date.getMonth();\n  date.setFullYear(date.getFullYear(), month + 1, 0);\n  date.setHours(0, 0, 0, 0);\n  return date;\n}"],"names":["_ref","_ref$title","title","_jsxs","Helmet","children","_jsx","rel","type","href","concat","process","style","position","top","left","transform","width","bgcolor","boxShadow","p","heigth","ModalWithTable","height","isLoading","columns","queryKey","onSelectionChange","rows","setRows","id","onCloseModal","showModal","onClickCloseIcon","searchOnChange","searchRef","_ref$onSearchKeyEnter","onCellKeyDown","onSearchKeyEnter","isRowSelectable","getCellClassName","mainId","generateRandomClass","Modal","open","onClose","Box","sx","Typography","variant","component","mb","TextField","size","label","marginBottom","fullWidth","onChange","InputProps","inputRef","onKeyDown","e","_searchRef$current","code","preventDefault","current","value","keyBoardSelectionTable","className","Table","isSingleSelection","isRowFreeze","dataSelection","selection","data","table_id","right","IconButton","color","onClick","CloseIcon","Math","floor","random","el","_rows$","document","querySelectorAll","classList","add","firstRowParent","querySelector","firstInput","focus","event","MouseEvent","bubbles","cancelable","view","window","dispatchEvent","addEventListener","es","key","remove","keyBoardUpDown","forEach","idx","_rows$idx","_rows","_rows$idx2","_rows2","length","TableContext","createContext","rowSelectionModel","footerChildren","footerPaginationPosition","showFooterSelectedCount","forwardRef","ref","_ref$CustomFooterComp","CustomFooterComponent","DefaultooterComponent","_ref$checkboxSelectio","checkboxSelection","_ref$footerChildren","_ref$footerPagination","_ref$showFooterSelect","_useState","useState","_useState2","_slicedToArray","selectedRows","setSelectedRows","useImperativeHandle","removeSelection","getSelectedRows","filter","item","includes","freezeArray","Provider","DataGrid","slots","loadingOverlay","LinearProgress","footer","initialState","pagination","paginationModel","pageSize","loading","getRowId","row","col","hide","showCellVerticalBorder","showColumnVerticalBorder","rowHeight","columnHeaderHeight","pageSizeOptions","_objectSpread","fill","background","padding","fontSize","display","fontWeight","onRowSelectionModelChange","selectionSet","Set","s","has","__","rowNode","_toConsumableArray","disableVirtualization","Pagination","_ref2","page","onPageChange","apiRef","useGridApiContext","pageCount","useGridSelector","gridPageCountSelector","MuiPagination","count","newPage","CustomPagination","props","GridPagination","ActionsComponent","_useContext","useContext","columnGap","justifyContent","px","alignItems","flexDirection","flex","A100","A200","A400","A700","totalDebit","totalCredit","totalBalance","jobAutoExp","jobTransactionDate","Date","jobType","search","reducer","state","action","_defineProperty","field","selectedCollectionColumns","GeneralJournal","_queryFn","_mutationFn","_mutationFn2","_mutationFn3","_DoRPTTransactionNILHN","executeQueryToClient","useExecuteQueryFromClient","mode","setMode","_useState3","totalRow","balance","_useState4","monitoring","setMonitoring","_useState5","_useState6","loadingJob","setLoadingJob","inputSearchRef","useRef","refRefNo","_refSubRefNo","refDate","refExplanation","refCode","refAccountName","refSubAccount","refName","refDebit","refCredit","refTC","refRemarks","refVat","refInvoice","refIDNo","refSubAcct","refTCDesc","AuthContext","myAxios","user","_useReducer","useReducer","_useReducer2","dispatch","_useState7","_useState8","openJobs","setOpenJobs","chartAccountSearchInput","IdsSearchInput","table","modeAdd","modeUpdate","modeDefault","_useQuery","useQuery","queryFn","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","get","headers","Authorization","accessToken","abrupt","sent","stop","apply","arguments","refetchOnWindowFocus","onSuccess","_state$sub_refNo","response","sub_refNo","wait","then","generateGeneralJournalID","general_journal_id","loadingGeneralJournalGenerator","refetchGeneralJournalGenerator","refetch","_useMutation","useMutation","mutationKey","mutationFn","_x","_callee2","variable","_context2","post","res","success","Swal","icon","message","timer","text","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","result","isConfirmed","handleClickPrint","resetFieldRef","resetRowFieldRef","resetTable","resetMonitoring","addGeneralJournalMutate","mutate","loadingGeneralJournalMutate","_useMutation2","_x2","_callee3","_context3","mutateVoidGeneralJournal","loadingVoidGeneralJournalMutate","_useMutation3","_x3","_callee4","_context4","selected","getSelectedSearchGeneralJournal","_selected$","explanation","dateEntry","refNo","format","setDataFormated","monitor","getSearchSelectedGeneralJournal","loadingGetSearchSelectedGeneralJournal","_useQueryModalTable","useQueryModalTable","link","url","queryUrlName","headerName","uniqueId","responseDataKey","onSelected","selectedRowData","Source_No","closeSearchGeneralJounal","resetRow","onCloseFunction","ModalSearchGeneralJounal","ModalComponent","openSearchGeneralJounal","openModal","isLoadingSearchGeneralJounal","closeModal","_useQueryModalTable2","Acct_Code","Acct_Title","closeChartAccountSearch","setTimeout","_refName$current","ModalChartAccountSearch","openChartAccountSearch","isLoadingChartAccountSearch","_useQueryModalTable3","_selectedRowData$0$Na","_selectedRowData$0$Sh","Name","ShortName","IDNo","sub_account","closePolicyIdClientIdRefId","_refDebit$current","ModalPolicyIdClientIdRefId","openPolicyIdClientIdRefId","isLoadingPolicyIdClientIdRefId","_useQueryModalTable4","Code","Description","closeTransactionAccount","_refRemarks$current","ModalTransactionAccount","openTransactionAccount","isLoadingTransactionAccount","handleOnSave","useCallback","_refRefNo$current","_refExplanation$curre","_refExplanation$curre2","parseFloat","replace","generalJournalDataFormatted","getData","map","itm","acctName","subAcctName","ClientName","debit","credit","TC_Code","remarks","vatType","invoice","TempID","BranchCode","codeCondfirmationAlert","isUpdate","cb","userCodeConfirmation","_refRefNo$current2","_refDate$current","_refExplanation$curre3","hasSelected","generalJournal","saveCondfirmationAlert","isConfirm","_refRefNo$current3","_refDate$current2","_refExplanation$curre4","handleRowSave","_refDebit$current2","_refCredit$current","_refCredit$current3","_refDebit$current4","_refTC$current","_refCode$current","_refName$current3","_refName$current2","isNaN","_refDebit$current3","_refCredit$current2","_refCredit$current4","_refCode$current2","_refName$current4","_refTC$current2","_refInvoice$current","getSelectedRow","newData","newInput","taxtInput","taxableamt","formatNumber","inputtax","taxtDebit","taxtCredit","setSelectedRow","setData","getNewData","splice","flushSync","_refRefNo$current5","_refDate$current4","_refExplanation$curre5","console","log","localStorage","removeItem","setItem","JSON","stringify","JVNo","JVDate","JVExp","datakey","header","department","reduce","a","b","Amount","toLocaleString","minimumFractionDigits","maximumFractionDigits","useEffect","handleKeyDown","ctrlKey","metaKey","removeEventListener","_Fragment","PageHelmet","Loading","LoadingButton","TextInput","input","currentTarget","Button","startIcon","AddIcon","disabled","deepOrange","_refRefNo$current4","_refDate$current3","NotInterestedIcon","brown","d","CardTravelIcon","backgroundColor","grey","border","margin","parseInt","marginTop","gap","_refDate$current5","defaultValue","_refExplanation$curre6","_refCode$current3","borderRadius","SupervisorAccountIcon","onIconClick","disableIcon","readOnly","_refSubAccount$curren","_refName$current5","AccountCircleIcon","TextFormatedInput","_refCredit$current5","_refTC$current3","AccountBalanceWalletIcon","_refVat$current","SelectInput","selectRef","select","_refInvoice$current2","datasource","values","SaveIcon","DataGridViewReact","getSelectedItem","rowItm","rowIdx","confirm","debitTableData","LocalizationProvider","dateAdapter","AdapterDateFns","DatePicker","slotProps","textField","name","InputLabelProps","views","FormControlLabel","control","Checkbox","checked","FormControl","zIndex","InputLabel","Select","labelId","_e$target","target","autoWidth","MenuItem","_callee6","_context6","_callee5","JobDate","dtFrom","dtTo","iRow","qry","dgvJournal","_yield$executeQueryTo","dataArray","_tmpNameRes$data$","_tmpNameRes$data$2","_tmpNameRes$data$3","totalAmount","i","_iterator","_step","_tmpNameRes$data$4","_tmpNameRes$data$5","_tmpNameRes$data$6","tmpID","_yield$executeQueryTo3","_tmpNameRes","_yield$executeQueryTo2","tmpNameRes","_context5","lastDayOfMonth","_createForOfIteratorHelper","n","done","ID_Entry","Sub_ShortName","Shortname","PolicyNo","Sub_Acct","toString","t0","f","finish","DoRPTTransactionNILHN","CustomizeAxiosFunc","_CustomizeAxiosFunc","_args","undefined","_customizeAxiostool","_ref$onSelected","_ref$onRemoveSelected","onRemoveSelected","_ref$onSuccess","_ref$onCloseFunction","_ref$CustomizeAxios","CustomizeAxios","show","setShowModal","customizeAxiostool","_args2","alert","_searchRef$current2","_searchRef$current3","selectedIDs","_preConfirm","html","inputAttributes","autocapitalize","showLoaderOnConfirm","preConfirm","error","allowOutsideClick","isDeclined","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","dirtyDate","requiredArgs","date","toDate","month","getMonth","setFullYear","getFullYear","setHours"],"sourceRoot":""}