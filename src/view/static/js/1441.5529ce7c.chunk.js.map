{"version":3,"file":"static/js/1441.5529ce7c.chunk.js","mappings":"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","sources":["components/ModalWithTable.tsx","components/Table.tsx","feautures/Admin/Task/Accounting/PettyCash.tsx","hooks/useQueryModalTable.tsx","lib/confirmationAlert.ts","../node_modules/@mui/icons-material/Add.js","../node_modules/@mui/icons-material/RestartAlt.js","../node_modules/@mui/icons-material/Save.js"],"sourcesContent":["import React from \"react\";\nimport {\n  GridRowSelectionModel,\n  GridRowParams,\n  GridCellParams,\n  GridTreeNode,\n} from \"@mui/x-data-grid\";\nimport { Modal, Box, Typography, IconButton, TextField } from \"@mui/material\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport Table from \"./Table\";\n\ninterface ModalWithTableParams {\n  height: number;\n  isLoading: boolean;\n  queryKey: string;\n  columns: Array<any>;\n  onSelectionChange: (rowSelectionModel: Array<any>, data: Array<any>) => void;\n  setRows: React.Dispatch<React.SetStateAction<GridRowSelectionModel>>;\n  rows: GridRowSelectionModel;\n  id: string;\n  onCloseModal: () => void;\n  onClickCloseIcon: () => void;\n  showModal: boolean;\n  searchOnChange:\n  | React.ChangeEventHandler<HTMLInputElement | HTMLTextAreaElement>\n  | undefined;\n  title?: string;\n  searchRef?: React.RefObject<HTMLInputElement>;\n  onCellKeyDown?: any;\n  onSearchKeyEnter?: (search: string) => void;\n  isRowSelectable?: ((params: GridRowParams<any>) => boolean) | undefined;\n  getCellClassName?:\n  | ((params: GridCellParams<any, any, any, GridTreeNode>) => string)\n  | undefined;\n}\n\nconst style = {\n  position: \"absolute\" as \"absolute\",\n  top: \"50%\",\n  left: \"50%\",\n  transform: \"translate(-50%, -50%)\",\n  width: \"80%\",\n  bgcolor: \"background.paper\",\n  boxShadow: 24,\n  p: 4,\n  heigth: \"auto\",\n};\n\nexport default function ModalWithTable({\n  height,\n  isLoading,\n  queryKey,\n  columns,\n  onSelectionChange,\n  setRows,\n  rows,\n  id,\n  onCloseModal,\n  showModal,\n  onClickCloseIcon,\n  searchOnChange,\n  title = \"\",\n  searchRef,\n  onCellKeyDown,\n  onSearchKeyEnter = () => { },\n  isRowSelectable,\n  getCellClassName,\n}: ModalWithTableParams) {\n  const mainId = generateRandomClass();\n\n  return (\n    <Modal\n      open={showModal}\n      onClose={onCloseModal}\n      aria-labelledby=\"modal-modal-title\"\n      aria-describedby=\"modal-modal-description\"\n    >\n      <Box sx={style}>\n        <Typography id=\"modal-modal-title\" variant=\"h6\" component=\"h2\" mb={2}>\n          {title}\n        </Typography>\n        <TextField\n          size=\"small\"\n          label=\"Search\"\n          sx={{ marginBottom: \"10px\" }}\n          fullWidth\n          onChange={searchOnChange}\n          InputProps={{\n            inputRef: searchRef,\n          }}\n          onKeyDown={(e) => {\n            if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n              e.preventDefault();\n              onSearchKeyEnter(searchRef?.current?.value as string);\n            }\n            keyBoardSelectionTable(\n              e,\n              mainId,\n              searchRef?.current as HTMLInputElement\n            );\n          }}\n        />\n        <div\n          className={`${mainId} main-table-selection-container`}\n          style={{ position: \"relative\", height: `${height + 20}px` }}\n        >\n          <Table\n            isSingleSelection={true}\n            isRowFreeze={false}\n            columns={columns}\n            isLoading={isLoading}\n            dataSelection={(selection, data, code) => {\n              onSelectionChange(selection, data);\n            }}\n            table_id={id}\n            rows={rows}\n            isRowSelectable={isRowSelectable}\n            getCellClassName={getCellClassName}\n          />\n        </div>\n\n        <div style={{ position: \"absolute\", top: \"10px\", right: \"10px\" }}>\n          <IconButton\n            aria-label=\"search-client\"\n            color=\"secondary\"\n            onClick={onClickCloseIcon}\n          >\n            <CloseIcon />\n          </IconButton>\n        </div>\n      </Box>\n    </Modal>\n  );\n}\n\nexport function generateRandomClass() {\n  const randomNumber = Math.floor(Math.random() * 10000);\n  const randomClass = \"main-\" + randomNumber;\n  return randomClass;\n}\n\nfunction keyBoardUpDown(className: string, el: HTMLElement) {\n  const firstRowParent = document.querySelector(\n    `.${className} .MuiDataGrid-row`\n  );\n  const firstInput = firstRowParent?.querySelector(\"input\");\n  firstInput?.focus();\n  const event = new MouseEvent(\"mouseenter\", {\n    bubbles: true,\n    cancelable: true,\n    view: window,\n  });\n  firstRowParent?.dispatchEvent(event);\n  firstInput?.addEventListener(\"keydown\", (es: any) => {\n    if (es.key === \"ArrowUp\") {\n      es.preventDefault();\n      el.focus();\n    }\n    if (es.key === \"ArrowUp\") {\n      firstRowParent?.classList.remove(\"hover-keyboard\");\n    }\n  });\n}\n\nexport function keyBoardSelectionTable(\n  e: React.KeyboardEvent<HTMLDivElement>,\n  className: string,\n  el: HTMLElement\n) {\n  const mainId = className;\n  if (e.code === \"ArrowDown\") {\n    const rows = document.querySelectorAll(`.${mainId} .MuiDataGrid-row`);\n    e.preventDefault();\n    rows[0]?.classList.add(\"hover-keyboard\");\n    keyBoardUpDown(className, el);\n    rows.forEach((el, idx) => {\n      el.addEventListener(\"keydown\", (es: any) => {\n        if (es.key === \"ArrowUp\") {\n          if (idx <= 0) {\n            return;\n          }\n\n          es.preventDefault();\n          rows[idx]?.classList.remove(\"hover-keyboard\");\n          rows[idx - 1]?.classList.add(\"hover-keyboard\");\n          return;\n        }\n        if (es.key === \"ArrowDown\") {\n          es.preventDefault();\n          if (idx >= rows.length - 1) {\n            return;\n          }\n          rows[idx]?.classList.remove(\"hover-keyboard\");\n          rows[idx + 1]?.classList.add(\"hover-keyboard\");\n        }\n      });\n    });\n  }\n}\n","import {\n  useState,\n  useContext,\n  createContext,\n  ReactElement,\n  forwardRef,\n  useImperativeHandle,\n} from \"react\";\nimport { Box, LinearProgress } from \"@mui/material\";\nimport {\n  DataGrid,\n  GridSlotsComponentsProps,\n  gridPageCountSelector,\n  GridPagination,\n  useGridApiContext,\n  useGridSelector,\n  GridRowSelectionModel,\n  GridColDef,\n  GridRowParams,\n  GridCellParams,\n  GridTreeNode,\n} from \"@mui/x-data-grid\";\nimport { TablePaginationProps } from \"@mui/material/TablePagination\";\nimport MuiPagination from \"@mui/material/Pagination\";\n\ninterface TableProps {\n  isLoading: boolean;\n  columns: Array<any>;\n  rows: Array<any>;\n  table_id: string;\n  isSingleSelection: boolean;\n  isRowFreeze: boolean;\n  dataSelection?: (selection: any, data: any, code: string | null) => void;\n  CustomFooterComponent?: any;\n  isRowSelectable?: ((params: GridRowParams<any>) => boolean) | undefined;\n  getCellClassName?:\n    | ((params: GridCellParams<any, any, any, GridTreeNode>) => string)\n    | undefined;\n  footerChildren?: (\n    rowSelectionModel: GridRowSelectionModel,\n    rows: Array<any>\n  ) => ReactElement;\n  footerPaginationPosition?: string;\n  showFooterSelectedCount?: boolean;\n  checkboxSelection?: boolean | undefined;\n}\n\nconst TableContext = createContext<{\n  rowSelectionModel: GridRowSelectionModel;\n  rows: Array<any>;\n  footerPaginationPosition?: string;\n  showFooterSelectedCount?: boolean;\n  footerChildren: (\n    rowSelectionModel: GridRowSelectionModel,\n    rows: Array<any>\n  ) => ReactElement;\n}>({\n  rows: [],\n  rowSelectionModel: [],\n  footerChildren: () => <div></div>,\n  footerPaginationPosition: \"right-left\",\n  showFooterSelectedCount: true,\n});\nconst Table = forwardRef(\n  (\n    {\n      isLoading,\n      columns,\n      rows,\n      table_id,\n      isSingleSelection,\n      isRowFreeze,\n      dataSelection,\n      CustomFooterComponent = DefaultooterComponent,\n      isRowSelectable,\n      getCellClassName,\n      checkboxSelection = true,\n      footerChildren = (\n        rowSelectionModel: GridRowSelectionModel,\n        rows: Array<any>\n      ) => <div></div>,\n      footerPaginationPosition = \"right-left\",\n      showFooterSelectedCount = true,\n    }: TableProps,\n    ref\n  ) => {\n    const [selectedRows, setSelectedRows] = useState<any>([]);\n\n    useImperativeHandle(ref, () => ({\n      removeSelection: () => {\n        setSelectedRows([]);\n      },\n      getSelectedRows: () => {\n        return rows.filter((item: any) =>\n          selectedRows?.includes(item[table_id])\n        );\n      },\n      setSelectedRows: (data: Array<any>) => {\n        setSelectedRows(data);\n      },\n    }));\n\n    function onSelectionChange(selection: any, data: any, code: string | null) {\n      if (dataSelection) {\n        dataSelection(selection, data, code);\n      }\n    }\n    let freezeArray: Array<any> = [];\n\n    return (\n      <TableContext.Provider\n        value={{\n          showFooterSelectedCount,\n          footerPaginationPosition,\n          rowSelectionModel: selectedRows,\n          rows,\n          footerChildren,\n        }}\n      >\n        <DataGrid\n          slots={{\n            loadingOverlay: LinearProgress,\n            footer: CustomFooterComponent,\n          }}\n          initialState={{\n            pagination: { paginationModel: { pageSize: 100 } },\n          }}\n          loading={isLoading}\n          getRowId={(row) => row[table_id]}\n          columns={columns.filter((col: any) => !col.hide) as GridColDef<any>[]}\n          rows={rows}\n          showCellVerticalBorder={true}\n          showColumnVerticalBorder={true}\n          checkboxSelection={checkboxSelection}\n          rowSelectionModel={selectedRows}\n          rowHeight={25}\n          columnHeaderHeight={35}\n          pageSizeOptions={[10, 20, 35, 50, 75, 100]}\n          sx={{\n            \"& .cash\": {\n              color: \"#ec4899\",\n            },\n            \"& .check\": {\n              color: \"#0891b2\",\n            },\n            \"& .approved\": {\n              color: \"green\",\n            },\n            \"& .pending\": {\n              color: \"orange\",\n            },\n            \"& .disapproved\": {\n              color: \"red\",\n            },\n            \"& .normal\": {\n              color: \"red\",\n            },\n            \"& .MuiDataGrid-row.Mui-selected:hover\": {\n              color: \"black\",\n              \"& .MuiSvgIcon-root \": {\n                fill: \"#3b82f6\",\n              },\n            },\n            \"& .hover-keyboard\": {\n              background: \"#2563eb\",\n              color: \"white\",\n              \"& .MuiSvgIcon-root \": {\n                fill: \"white\",\n              },\n            },\n            \"& .MuiDataGrid-row:hover\": {\n              background: \"#2563eb\",\n              color: \"white\",\n              \"& .MuiSvgIcon-root \": {\n                fill: \"white\",\n              },\n            },\n            \"& .MuiDataGrid-row.hover\": {\n              background: \"#2563eb\",\n              color: \"white\",\n              \"& .MuiSvgIcon-root \": {\n                fill: \"white\",\n              },\n            },\n            \"& .MuiTablePagination-root p \": {\n              padding: \"0 !important\",\n            },\n\n            ...{\n              \"& .MuiDataGrid-columnHeaders\": {\n                background: \"#64748b\",\n                color: \"white\",\n                fontSize: \"14px\",\n                // borderBottomColor: \"#38bdf8\",\n              },\n              \"& .MuiDataGrid-columnHeaderCheckbox .MuiDataGrid-columnHeaderTitleContainer .MuiSvgIcon-root \":\n                {\n                  display: isSingleSelection || isRowFreeze ? \"none\" : \"block\",\n                  fill: \"white\",\n                },\n              \"& .MuiDataGrid-columnHeaderCheckbox .MuiDataGrid-columnHeaderTitleContainer input \":\n                {\n                  display: isSingleSelection || isRowFreeze ? \"none\" : \"block\",\n                },\n            },\n            ...{\n              fontSize: 13,\n              fontWeight: 500,\n              \"& .MuiDataGrid-checkboxInput\": {\n                height: \"27px\",\n                width: \"27px\",\n              },\n              \"& .MuiDataGrid-checkboxInput svg\": {\n                height: \"20px\",\n                width: \"20px\",\n              },\n            },\n          }}\n          // onRowDoubleClick={(e, r) => {\n          //   console.log(e, r);\n          // }}\n\n          onRowSelectionModelChange={(selection) => {\n            if (isRowFreeze) {\n              if (selection.length <= 0) return;\n              freezeArray = selection;\n              if (selectedRows.includes(freezeArray[freezeArray.length - 1]))\n                return;\n\n              setSelectedRows(selection);\n\n              onSelectionChange([selection[selection.length - 1]], rows, null);\n              return;\n            }\n\n            if (!isRowFreeze && isSingleSelection) {\n              if (selectedRows && selectedRows?.length > 0) {\n                const selectionSet = new Set(selectedRows);\n                setSelectedRows(\n                  selection.filter((s: any) => !selectionSet.has(s))\n                );\n              } else {\n                setSelectedRows(selection);\n              }\n            } else {\n              setSelectedRows(selection);\n            }\n\n            onSelectionChange([selection[selection.length - 1]], rows, null);\n          }}\n          onCellKeyDown={(__: any, key: any) => {\n            const keyFinding = [\"NumpadEnter\", \"Enter\", \"Delete\", \"Backspace\"];\n            if (!keyFinding.includes(key.code)) {\n              return;\n            }\n            key.preventDefault();\n            if (key.code === \"Enter\" || key.code === \"NumpadEnter\") {\n              if (isSingleSelection && !isRowFreeze) {\n                return setSelectedRows((data: any) => {\n                  if (data && data.length > 0 && data[0] === __.rowNode.id) {\n                    onSelectionChange([], rows, key.code);\n                    return [];\n                  }\n                  onSelectionChange([__.rowNode.id], rows, key.code);\n                  return [__.rowNode.id];\n                });\n              } else {\n                setSelectedRows((data: any) => {\n                  if (\n                    data &&\n                    !isRowFreeze &&\n                    data.length > 0 &&\n                    data.includes(__.rowNode.id)\n                  ) {\n                    data = data.filter((item: any) => item !== __.rowNode.id);\n                    onSelectionChange([], rows, key.code);\n                    return data;\n                  }\n                  if (\n                    data &&\n                    isRowFreeze &&\n                    data.length > 0 &&\n                    data.includes(__.rowNode.id)\n                  ) {\n                    return data;\n                  }\n                  onSelectionChange([__.rowNode.id], rows, key.code);\n                  return [...data, __.rowNode.id];\n                });\n              }\n              return;\n            }\n            if (key.code === \"Delete\" || key.code === \"Backspace\") {\n              setSelectedRows([__.rowNode.id]);\n              return onSelectionChange([__.rowNode.id], rows, key.code);\n            }\n          }}\n          disableVirtualization\n          isRowSelectable={isRowSelectable}\n          getCellClassName={getCellClassName}\n        />\n      </TableContext.Provider>\n    );\n  }\n);\n\nexport default Table;\nfunction Pagination({\n  page,\n  onPageChange,\n  className,\n}: Pick<TablePaginationProps, \"page\" | \"onPageChange\" | \"className\">) {\n  const apiRef = useGridApiContext();\n  const pageCount = useGridSelector(apiRef, gridPageCountSelector);\n\n  return (\n    <MuiPagination\n      variant=\"outlined\"\n      color=\"primary\"\n      className={className}\n      count={pageCount}\n      page={page + 1}\n      onChange={(event, newPage) => {\n        onPageChange(event as any, newPage - 1);\n      }}\n    />\n  );\n}\n\nfunction CustomPagination(props: any) {\n  return <GridPagination ActionsComponent={Pagination} {...props} />;\n}\nfunction DefaultooterComponent(\n  props: NonNullable<GridSlotsComponentsProps[\"footer\"]>\n) {\n  const {\n    rowSelectionModel,\n    showFooterSelectedCount,\n    footerPaginationPosition,\n    footerChildren,\n    rows,\n  } = useContext(TableContext);\n  return (\n    <Box\n      sx={{\n        columnGap: \"50px\",\n        display: \"flex\",\n        width: \"100%\",\n        justifyContent: \"space-between\",\n        px: 3,\n        alignItems: \"center\",\n        flexDirection:\n          footerPaginationPosition === \"right-left\" ? \"row-reverse\" : \"row\",\n      }}\n    >\n      <CustomPagination {...props} />\n      <Box\n        sx={{\n          display: \"flex\",\n          justifyContent:\n            footerPaginationPosition === \"right-left\"\n              ? \"flex-start\"\n              : \"flex-end\",\n          flex: 1,\n          alignItems: \"center\",\n        }}\n      >\n        {showFooterSelectedCount && (\n          <div>Selected:{rowSelectionModel?.length}</div>\n        )}\n        <div>{footerChildren(rowSelectionModel, rows)}</div>\n      </Box>\n    </Box>\n  );\n}\n","import { useContext, useState, useRef, useEffect, useImperativeHandle, forwardRef } from \"react\";\nimport {\n  Button,\n} from \"@mui/material\";\nimport LoadingButton from \"@mui/lab/LoadingButton\";\nimport AddIcon from \"@mui/icons-material/Add\";\nimport SaveIcon from \"@mui/icons-material/Save\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport Swal from \"sweetalert2\";\nimport { AuthContext } from \"../../../../components/AuthContext\";\nimport RestartAltIcon from \"@mui/icons-material/RestartAlt\";\nimport { useMutation, useQuery } from \"react-query\";\nimport useQueryModalTable from \"../../../../hooks/useQueryModalTable\";\nimport { wait } from \"../../../../lib/wait\";\nimport {\n  codeCondfirmationAlert,\n  saveCondfirmationAlert,\n} from \"../../../../lib/confirmationAlert\";\nimport PageHelmet from \"../../../../components/Helmet\";\nimport { SelectInput, TextInput } from \"../../../../components/UpwardFields\";\nimport { NumericFormat } from \"react-number-format\";\nimport { format } from \"date-fns\";\nimport useExecuteQueryFromClient from \"../../../../lib/executeQueryFromClient\";\n\nexport const reducer = (state: any, action: any) => {\n  switch (action.type) {\n    case \"UPDATE_FIELD\":\n      return {\n        ...state,\n        [action.field]: action.value,\n      };\n    default:\n      return state;\n  }\n};\nconst columns = [\n  { key: \"purpose\", label: \"Purpose\", width: 400 },\n  { key: \"amount\", label: \"Amount\", width: 140 },\n  {\n    key: \"usage\",\n    label: \"Usage\",\n    width: 450,\n  },\n  { key: \"accountID\", label: \"Account ID\", width: 400 },\n  { key: \"sub_account\", label: \"Sub Account\", width: 80 },\n  { key: \"clientID\", label: \"ID No\", width: 140 },\n  // hide\n  { key: \"clientName\", label: \"Name\", width: 350 },\n  { key: \"accountCode\", label: \"Accoount Code\", width: 130 },\n  {\n    key: \"accountShort\",\n    label: \"Account Short\",\n    width: 300,\n  },\n  { key: \"vatType\", label: \"Vat Type\", width: 100 },\n  { key: \"invoice\", label: \"Invoice\", width: 200 },\n  { key: \"TempID\", label: \"TempId\", hide: true },\n];\nexport const chartColumn = [\n  { field: \"Acct_Code\", headerName: \"Code\", flex: 1 },\n  { field: \"Acct_Title\", headerName: \"Title\", flex: 1 },\n  { field: \"Short\", headerName: \"Short Name\", flex: 1 },\n];\n\nexport default function PettyCash() {\n  const { myAxios, user } = useContext(AuthContext);\n  const [pettyCashMode, setPettyCashMode] = useState('')\n  const { executeQueryToClient } = useExecuteQueryFromClient()\n  const tableRef = useRef<any>(null)\n  const inputSearchRef = useRef<HTMLInputElement>(null)\n\n  const subrefNoRef = useRef('')\n  const refNoRef = useRef<HTMLInputElement>(null)\n  const dateRef = useRef<HTMLInputElement>(null)\n  const payeeRef = useRef<HTMLInputElement>(null)\n  const explanationRef = useRef<HTMLInputElement>(null)\n\n\n  const accountRef = useRef<HTMLInputElement>(null);\n  const usageRef = useRef<HTMLInputElement>(null);\n  const amountRef = useRef<HTMLInputElement>(null);\n  const vatRef = useRef<HTMLSelectElement>(null);\n  const invoiceRef = useRef<HTMLInputElement>(null);\n\n\n  const pdcSearchInput = useRef<HTMLInputElement>(null);\n\n  const transactionCodeRef = useRef('')\n  const transactionShortRef = useRef('')\n  const clientIdRef = useRef('')\n  const subAcctRef = useRef('')\n\n\n\n\n\n  const isDisableField = pettyCashMode === \"\";\n\n\n  const {\n    isLoading: loadingPettyCashIdGenerator,\n    refetch: refetchettyCashIdGenerator,\n  } = useQuery({\n    queryKey: \"petty-cash-id-generator\",\n    queryFn: async () =>\n      await myAxios.get(`/task/accounting/get-petty-cash-id`, {\n        headers: {\n          Authorization: `Bearer ${user?.accessToken}`,\n        },\n      }),\n    refetchOnWindowFocus: false,\n    onSuccess: (data) => {\n      const response = data as any;\n      wait(100).then(() => {\n        subrefNoRef.current = response.data.pettyCashId[0].petty_cash_id\n        if (refNoRef.current) {\n          refNoRef.current.value = response.data.pettyCashId[0].petty_cash_id\n        }\n      })\n    },\n  });\n  const {\n    isLoading: loadingAddUpdatePettyCash,\n    mutate: mutateAddUpdatePettyCash,\n  } = useMutation({\n    mutationKey: \"add-update-petty-cash\",\n    mutationFn: async (variables: any) =>\n      await myAxios.post(`/task/accounting/add-petty-cash`, variables, {\n        headers: {\n          Authorization: `Bearer ${user?.accessToken}`,\n        },\n      }),\n    onSuccess: (data) => {\n      const response = data as any;\n      if (response.data.success) {\n        resetPettyCash()\n        return Swal.fire({\n          position: \"center\",\n          icon: \"success\",\n          title: response.data.message,\n          timer: 1500,\n        });\n      }\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: response.data.message,\n        timer: 1500,\n      });\n    },\n  });\n  const {\n    isLoading: isLoadingLoadSelectedPettyCash,\n    mutate: mutateLoadSelectedPettyCash,\n  } = useMutation({\n    mutationKey: \"load-selected-petty-cash\",\n    mutationFn: async (variables: any) =>\n      await myAxios.post(\n        `/task/accounting/load-selected-petty-cash`,\n        variables,\n        {\n          headers: {\n            Authorization: `Bearer ${user?.accessToken}`,\n          },\n        }\n      ),\n    onSuccess: (data) => {\n      const response = data as any;\n      const loadPettyCash = response.data.loadSelectedPettyCash;\n      subrefNoRef.current = loadPettyCash[0].PC_No\n      if (refNoRef.current) {\n        refNoRef.current.value = loadPettyCash[0].PC_No\n      }\n      if (dateRef.current) {\n        dateRef.current.value = loadPettyCash[0].PC_Date\n      }\n      if (payeeRef.current) {\n        payeeRef.current.value = loadPettyCash[0].Payee\n      }\n      if (explanationRef.current) {\n        explanationRef.current.value = loadPettyCash[0].Explanation\n      }\n\n      tableRef.current.setDataFormated(loadPettyCash)\n    },\n  });\n\n  const {\n    isLoading: laodPettyCashTransaction,\n    data: dataCashTransaction\n  } = useQuery({\n    queryKey: \"load-transcation\",\n    queryFn: async () =>\n      await myAxios.get(`/task/accounting/load-transcation`, {\n        headers: {\n          Authorization: `Bearer ${user?.accessToken}`,\n        },\n      }),\n    refetchOnWindowFocus: false,\n  });\n\n  const {\n    ModalComponent: ModalClientIDs,\n    openModal: openCliendIDsModal,\n    isLoading: isLoadingClientIdsModal,\n    closeModal: closeCliendIDsModal,\n  } = useQueryModalTable({\n    link: {\n      url: \"/task/accounting/search-pdc-policy-id\",\n      queryUrlName: \"searchPdcPolicyIds\",\n    },\n    columns: [\n      { field: \"Type\", headerName: \"Type\", width: 130 },\n      { field: \"IDNo\", headerName: \"ID No.\", width: 200 },\n      {\n        field: \"Name\",\n        headerName: \"Name\",\n        flex: 1,\n      },\n      {\n        field: \"ID\",\n        headerName: \"ID\",\n        flex: 1,\n        hide: true,\n      },\n    ],\n    queryKey: \"collection-polidy-ids\",\n    uniqueId: \"IDNo\",\n    responseDataKey: \"clientsId\",\n    onSelected: (selectedRowData, data) => {\n      closeCliendIDsModal();\n      wait(100).then(() => {\n        clientIdRef.current = selectedRowData[0].IDNo\n        subAcctRef.current = selectedRowData[0].Acronym\n        if (usageRef.current)\n          usageRef.current.value = selectedRowData[0].Name\n      })\n      wait(200).then(() => {\n        if (amountRef.current) {\n          amountRef.current?.focus()\n          amountRef.current.value = ''\n        }\n\n      })\n    },\n    searchRef: pdcSearchInput,\n  });\n  const {\n    ModalComponent: ModalSearchPettyCash,\n    openModal: openModalSearchPettyCash,\n    isLoading: isLoadingModalSearchPettyCash,\n    closeModal: closeModalSearchPettyCash,\n  } = useQueryModalTable({\n    link: {\n      url: \"/task/accounting/search-petty-cash\",\n      queryUrlName: \"searchPettyCash\",\n    },\n    columns: [\n      { field: \"PC_Date\", headerName: \"Type\", width: 130 },\n      { field: \"PC_No\", headerName: \"ID No.\", width: 200 },\n      {\n        field: \"Payee\",\n        headerName: \"Name\",\n        flex: 1,\n      },\n      {\n        field: \"Explanation\",\n        headerName: \"ID\",\n        flex: 1,\n      },\n      {\n        field: \"Explanation\",\n        headerName: \"ID\",\n        flex: 1,\n        hide: true,\n      },\n    ],\n    queryKey: \"petty-cash-search\",\n    uniqueId: \"PC_No\",\n    responseDataKey: \"searchPettyCash\",\n    onSelected: (selectedRowData) => {\n      mutateLoadSelectedPettyCash({ PC_No: selectedRowData[0].PC_No });\n\n      setPettyCashMode(\"edit\")\n\n      closeModalSearchPettyCash();\n    },\n    searchRef: pdcSearchInput,\n\n  });\n\n  function handleOnSave() {\n    if (payeeRef.current && payeeRef.current.value === \"\") {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: \"Please provide payee!\",\n        timer: 1500,\n      }).then((result) => {\n        wait(300).then(() => {\n          payeeRef.current?.focus();\n        });\n      });\n    }\n    if (explanationRef.current && explanationRef.current.value === \"\") {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: \"Please provide explanation!\",\n        timer: 1500,\n      }).then((result) => {\n        wait(300).then(() => {\n          explanationRef.current?.focus();\n        });\n      });\n    }\n\n    const currentData = tableRef.current.getDataFormatted()\n\n    if (currentData.length <= 0) {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: \"Please provide transaction entry!\",\n        timer: 1500,\n      });\n    }\n\n\n\n    if (pettyCashMode === \"edit\") {\n      codeCondfirmationAlert({\n        isUpdate: true,\n        cb: (userCodeConfirmation) => {\n          mutateAddUpdatePettyCash({\n            refNo: refNoRef.current?.value,\n            datePetty: dateRef.current?.value,\n            payee: payeeRef.current?.value,\n            explanation: explanationRef.current?.value,\n            hasSelected: pettyCashMode === \"edit\",\n            pettyCash: currentData,\n            userCodeConfirmation,\n          });\n        },\n      });\n    } else {\n      saveCondfirmationAlert({\n        isConfirm: () => {\n          mutateAddUpdatePettyCash({\n            refNo: refNoRef.current?.value,\n            datePetty: dateRef.current?.value,\n            payee: payeeRef.current?.value,\n            explanation: explanationRef.current?.value,\n            hasSelected: pettyCashMode === \"edit\",\n            pettyCash: currentData,\n          });\n        },\n      });\n    }\n  }\n\n  async function handleAddTransaction() {\n    if (accountRef.current && accountRef.current.value === \"\") {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: \"Please provide transaction\",\n        timer: 1500,\n      }).then(() => {\n        wait(300).then(() => {\n          accountRef.current?.focus();\n        });\n      });\n    }\n    if (clientIdRef.current === \"\") {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: \"Please provide usage\",\n        timer: 1500,\n      }).then(() => {\n        wait(300).then(() => {\n          openCliendIDsModal();\n        });\n      });\n    }\n    if (amountRef.current && (amountRef.current.value === \"\" || parseFloat(amountRef.current.value.replace(/,/g, \"\")) < 1)) {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: \"Please provide proper amount\",\n        timer: 1500,\n      }).then(() => {\n        wait(300).then(() => {\n          amountRef.current?.focus();\n        });\n      });\n    }\n\n    const TransDetail = await executeQueryToClient(`\n         SELECT DISTINCT\n              Chart_Account.Acct_Code,\n              Chart_Account.Acct_Title,\n              Chart_Account.Short\n          FROM\n              Petty_Log\n                  LEFT JOIN\n              Chart_Account ON Petty_Log.Acct_Code = Chart_Account.Acct_Code\n          WHERE\n              Petty_Log.Acct_Code = '${transactionCodeRef.current}'\n      `)\n\n    const currentData = tableRef.current.getData()\n    let RowIndex = 0\n    if (currentData.length <= 0) {\n      currentData[0] = []\n    } else {\n      const getSelectedRow = tableRef.current.getSelectedRow()\n      if (getSelectedRow) {\n        RowIndex = getSelectedRow\n      } else {\n        RowIndex = currentData.length\n        currentData[currentData.length] = []\n      }\n\n    }\n    currentData[RowIndex][0] = accountRef.current?.value\n    currentData[RowIndex][1] = amountRef.current?.value\n    currentData[RowIndex][2] = `${usageRef.current?.value} > ${clientIdRef.current} > ${subAcctRef.current}`\n    currentData[RowIndex][3] = `${TransDetail.data.data[0].Short} > ${TransDetail.data.data[0].Acct_Code}`\n    currentData[RowIndex][4] = subAcctRef.current\n    currentData[RowIndex][5] = clientIdRef.current\n    currentData[RowIndex][6] = usageRef.current?.value\n    currentData[RowIndex][7] = TransDetail.data.data[0].Acct_Code\n    currentData[RowIndex][8] = TransDetail.data.data[0].Short\n    currentData[RowIndex][9] = vatRef.current?.value\n    currentData[RowIndex][10] = invoiceRef.current?.value\n    tableRef.current.setData(currentData)\n    tableRef.current.setSelectedRow(null)\n\n\n    resetRefs()\n\n    if (accountRef.current) {\n      accountRef.current.focus()\n    }\n  }\n\n  function resetRefs() {\n    setTimeout(() => {\n      if (accountRef.current) {\n        accountRef.current.value = ''\n      }\n      if (amountRef.current) {\n        amountRef.current.value = ''\n      }\n      if (usageRef.current) {\n        usageRef.current.value = ''\n      }\n      if (vatRef.current) {\n        vatRef.current.value = 'NON-VAT'\n      }\n      if (invoiceRef.current) {\n        invoiceRef.current.value = ''\n      }\n      subAcctRef.current = ''\n      clientIdRef.current = ''\n      transactionCodeRef.current = ''\n      transactionShortRef.current = ''\n    }, 100)\n  }\n  function resetRefsEntry() {\n    setTimeout(() => {\n      refetchettyCashIdGenerator()\n      if (dateRef.current) {\n        dateRef.current.value = format(new Date(), \"yyyy-MM-dd\")\n      }\n      if (payeeRef.current) {\n        payeeRef.current.value = ''\n      }\n      if (explanationRef.current) {\n        explanationRef.current.value = ''\n      }\n\n    }, 100)\n  }\n  function resetPettyCash() {\n    setPettyCashMode('');\n    refetchettyCashIdGenerator();\n    resetRefsEntry()\n    resetRefs()\n    tableRef.current.setData([])\n  }\n  function valueIsNaN(input: any) {\n    if (input !== '' && input !== null) {\n      const num = parseFloat(input.replace(/,/g, ''));\n      return isNaN(num) ? '0.00' : input\n    }\n    return '0.00'\n  }\n\n\n\n\n  return (\n    <>\n      <PageHelmet title=\"Petty Cash\" />\n      <div\n        style={{\n          display: \"flex\",\n          flexDirection: \"column\",\n          width: \"100%\",\n          height: \"100%\",\n          flex: 1,\n          padding: \"5px\",\n          background: \"#F1F1F1\",\n        }}\n      >\n        <div\n          style={{\n            display: \"flex\",\n            alignItems: \"center\",\n            columnGap: \"5px\",\n            marginBottom: \"10px\"\n          }}\n        >\n          {isLoadingModalSearchPettyCash ? (\n            <LoadingButton loading={isLoadingModalSearchPettyCash} />\n          ) : (\n            <TextInput\n              label={{\n                title: \"Search: \",\n                style: {\n                  fontSize: \"12px\",\n                  fontWeight: \"bold\",\n                  width: \"50px\",\n                },\n              }}\n              input={{\n                className: \"search-input-up-on-key-down\",\n                type: \"search\",\n                onKeyDown: (e) => {\n                  if (e.key === \"Enter\" || e.key === \"NumpadEnter\") {\n                    e.preventDefault();\n                    openModalSearchPettyCash(e.currentTarget.value);\n                  }\n                  if (e.key === \"ArrowDown\") {\n                    e.preventDefault();\n                    const datagridview = document.querySelector(\n                      \".grid-container\"\n                    ) as HTMLDivElement;\n                    datagridview.focus();\n                  }\n                },\n                style: { width: \"500px\" },\n              }}\n              inputRef={inputSearchRef}\n            />\n\n\n          )}\n          {pettyCashMode === \"\" && (\n            <Button\n              sx={{\n                height: \"30px\",\n                fontSize: \"11px\",\n              }}\n              variant=\"contained\"\n              startIcon={<AddIcon sx={{ width: 15, height: 15 }} />}\n              id=\"entry-header-save-button\"\n              onClick={() => {\n                setPettyCashMode('add')\n              }}\n            >\n              New\n            </Button>\n          )}\n          <LoadingButton\n            sx={{\n              height: \"30px\",\n              fontSize: \"11px\",\n            }}\n            id=\"save-entry-header\"\n            color=\"primary\"\n            variant=\"contained\"\n            type=\"submit\"\n            onClick={handleOnSave}\n            disabled={pettyCashMode === \"\"}\n            startIcon={<SaveIcon sx={{ width: 15, height: 15 }} />}\n            loading={loadingAddUpdatePettyCash}\n          >\n            {pettyCashMode === \"edit\" ? \"Update\" : \"Save\"}\n          </LoadingButton>\n          {pettyCashMode !== \"\" && (\n            <Button\n              sx={{\n                height: \"30px\",\n                fontSize: \"11px\",\n              }}\n              variant=\"contained\"\n              startIcon={<CloseIcon sx={{ width: 15, height: 15 }} />}\n              color=\"error\"\n              onClick={() => {\n                Swal.fire({\n                  title: \"Are you sure?\",\n                  text: \"You won't be able to revert this!\",\n                  icon: \"warning\",\n                  showCancelButton: true,\n                  confirmButtonColor: \"#3085d6\",\n                  cancelButtonColor: \"#d33\",\n                  confirmButtonText: \"Yes, cancel it!\",\n                }).then((result) => {\n                  if (result.isConfirmed) {\n                    resetPettyCash()\n                  }\n                });\n              }}\n            >\n              Cancel\n            </Button>\n          )}\n        </div>\n        <div\n          style={{\n            display: \"flex\",\n            flexDirection: \"row\",\n            width: \"100%\",\n            borderBottom: \"1px dashed  #334155\",\n            paddingBottom: \"20px\",\n            gap: \"50px\",\n            marginTop: \"5px\",\n          }}\n        >\n          <div\n            style={{\n              display: \"flex\",\n              flexDirection: \"column\",\n              rowGap: \"10px\",\n            }}\n          >\n            {loadingPettyCashIdGenerator ? (\n              <LoadingButton loading={loadingPettyCashIdGenerator} />\n            ) : (\n              <TextInput\n                label={{\n                  title: \"Ref. No. : \",\n                  style: {\n                    fontSize: \"12px\",\n                    fontWeight: \"bold\",\n                    width: \"80px\",\n                  },\n                }}\n                input={{\n                  disabled: isDisableField,\n                  type: \"text\",\n                  style: { width: \"200px\" },\n                  readOnly: true,\n                  onKeyDown: (e) => {\n                    if (e.code === \"NumpadEnter\" || e.code === 'Enter') {\n                      dateRef.current?.focus()\n                    }\n                  }\n                }}\n                icon={<RestartAltIcon sx={{ fontSize: \"18px\" }} />}\n                onIconClick={(e) => {\n                  e.preventDefault()\n                  refetchettyCashIdGenerator()\n                }}\n                inputRef={refNoRef}\n              />\n            )}\n            <TextInput\n              label={{\n                title: \"Deposit Date: \",\n                style: {\n                  fontSize: \"12px\",\n                  fontWeight: \"bold\",\n                  width: \"80px\",\n                },\n              }}\n              input={{\n                defaultValue: format(new Date(), \"yyyy-MM-dd\"),\n                className: \"search-input-up-on-key-down\",\n                type: \"date\",\n                style: { width: \"200px\" },\n                disabled: isDisableField,\n                onKeyDown: (e) => {\n                  if (e.code === \"NumpadEnter\" || e.code === 'Enter') {\n                    payeeRef.current?.focus()\n                  }\n                }\n              }}\n              inputRef={dateRef}\n            />\n          </div>\n          <div\n            style={{\n              flex: 1,\n              display: \"flex\",\n              flexDirection: \"column\",\n              rowGap: \"10px\",\n            }}>\n            <TextInput\n              label={{\n                title: \"Payee : \",\n                style: {\n                  fontSize: \"12px\",\n                  fontWeight: \"bold\",\n                  width: \"100px\",\n                },\n              }}\n              input={{\n                disabled: isDisableField,\n                type: \"text\",\n                style: { width: '400px' },\n                onKeyDown: (e) => {\n                  if (e.code === \"NumpadEnter\" || e.code === 'Enter') {\n                    explanationRef.current?.focus()\n                  }\n                }\n              }}\n              inputRef={payeeRef}\n            />\n            <TextInput\n              label={{\n                title: \"Explanation : \",\n                style: {\n                  fontSize: \"12px\",\n                  fontWeight: \"bold\",\n                  width: \"100px\",\n                },\n              }}\n              input={{\n                disabled: isDisableField,\n                type: \"text\",\n                style: { flex: 1 },\n                onKeyDown: (e) => {\n                  if (e.code === \"NumpadEnter\" || e.code === 'Enter') {\n                    accountRef.current?.focus()\n                  }\n                }\n              }}\n              inputRef={explanationRef}\n            />\n          </div>\n        </div>\n        <div style={{\n          display: \"flex\",\n          flexDirection: \"row\",\n          width: \"100%\",\n          paddingTop: \"20px\",\n          gap: \"50px\",\n          borderRadius: \"3px\",\n        }}>\n          <div style={{\n            display: \"flex\",\n            flexDirection: \"column\",\n            rowGap: \"10px\"\n          }}>\n            {\n              laodPettyCashTransaction ?\n                <LoadingButton loading={laodPettyCashTransaction} /> :\n                <Autocomplete\n                  DisplayMember={'Purpose'}\n                  DataSource={dataCashTransaction?.data.laodTranscation}\n                  disableInput={isDisableField}\n                  inputRef={accountRef}\n                  onChange={(selected: any, e: any) => {\n                    transactionCodeRef.current = selected.Acct_Code\n                    transactionShortRef.current = selected.Short\n                  }}\n                  onKeydown={(e: any) => {\n                    if (e.key === \"Enter\" || e.key === 'NumpadEnter') {\n                      e.preventDefault()\n                      usageRef.current?.focus()\n                    }\n                  }}\n                />\n            }\n            <div\n              style={{\n                display: \"flex\",\n                columnGap: \"20px\"\n              }}\n            >\n              {isLoadingClientIdsModal ? (\n                <LoadingButton loading={isLoadingClientIdsModal} />\n              ) : (\n                <TextInput\n                  label={{\n                    title: \"Usage : \",\n                    style: {\n                      fontSize: \"12px\",\n                      fontWeight: \"bold\",\n                      width: \"80px\",\n                    },\n                  }}\n                  input={{\n                    disabled: isDisableField,\n                    type: \"text\",\n                    style: { width: \"450px\" },\n                    onKeyDown: (e) => {\n                      if (e.code === \"NumpadEnter\" || e.code === 'Enter') {\n                        openCliendIDsModal(e.currentTarget.value)\n                      }\n                    }\n                  }}\n                  icon={<RestartAltIcon sx={{ fontSize: \"18px\" }} />}\n                  onIconClick={(e) => {\n                    e.preventDefault()\n                    if (usageRef.current) {\n                      openCliendIDsModal(usageRef.current.value)\n                    }\n                  }}\n                  inputRef={usageRef}\n                />\n              )}\n              <div style={{\n                display: \"flex\",\n              }}>\n                <label style={{\n                  fontSize: \"12px\",\n                  fontWeight: \"bold\",\n                  width: \"70px\",\n                }}>Amount :</label>\n                <NumericFormat\n                  disabled={isDisableField}\n                  getInputRef={amountRef}\n                  decimalScale={2}\n                  fixedDecimalScale={true}\n                  style={{\n                    width: '200px',\n                  }}\n                  onKeyDown={(e) => {\n                    if (e.code === 'Enter' || e.code === 'NumpadEnter') {\n                      e.currentTarget.value = valueIsNaN(e.currentTarget.value)\n                      vatRef.current?.focus()\n                    }\n\n                  }}\n                  onBlur={(e) => {\n                    if (e.currentTarget.value === '') {\n                      e.currentTarget.value = '0.00'\n                    }\n                  }}\n                  allowNegative={false}\n                  thousandSeparator\n                  valueIsNumericString\n                />\n              </div>\n\n            </div>\n            <div style={{\n              display: \"flex\",\n              columnGap: \"20px\"\n            }}>\n              <SelectInput\n                containerStyle={{\n                  fontSize: \"12px\",\n                  fontWeight: \"bold\",\n                }}\n                label={{\n                  title: \"VAT Type\",\n                  style: {\n                    width: \"80px\",\n                  },\n                }}\n                select={{\n                  defaultValue: \"NON-VAT\",\n                  disabled: isDisableField,\n                  style: {\n                    width: \"100% !important\",\n                    flex: 1,\n                    height: \"100% !important\",\n                    padding: 0,\n                    margin: 0,\n                    cursor: \"pointer\",\n                  },\n                  onKeyDown: (e) => {\n                    if (e.code === 'Enter' || e.code === 'NumpadEnter') {\n                      invoiceRef.current?.focus()\n                    }\n                  },\n                }}\n                datasource={[{ key: 'NON-VAT' }, { key: 'VAT' }]}\n                values={\"key\"}\n                display={\"key\"}\n                selectRef={vatRef}\n              />\n              <TextInput\n                label={{\n                  title: \"Invoice : \",\n                  style: {\n                    fontSize: \"12px\",\n                    fontWeight: \"bold\",\n                    width: \"80px\",\n                  },\n                }}\n                input={{\n                  disabled: isDisableField,\n                  type: \"text\",\n                  style: { width: '270px' },\n                  onKeyDown: (e) => {\n                    if (e.code === \"NumpadEnter\" || e.code === 'Enter') {\n                      e.preventDefault()\n                      handleAddTransaction();\n                    }\n                  }\n                }}\n                inputRef={invoiceRef}\n              />\n              <Button\n                disabled={isDisableField}\n                color=\"success\"\n                variant=\"contained\"\n                style={{ gridArea: \"button\", height: \"22px\", fontSize: \"12px\", width: \"270px\" }}\n                startIcon={<AddIcon />}\n                onClick={() => {\n                  handleAddTransaction();\n                }}\n              >\n                Save Transaction\n              </Button>\n            </div>\n          </div>\n        </div>\n        <br />\n        <PettyCashTableSelected\n          ref={tableRef}\n          width=\"100%\"\n          height=\"350px\"\n          columns={columns}\n          rows={[]}\n          getSelectedItem={(rowItm: any, colItm: any, rowIdx: any, colIdx: any) => {\n            if (accountRef.current) {\n              accountRef.current.value = rowItm[0]\n            }\n            if (amountRef.current) {\n              amountRef.current.value = rowItm[1]\n            }\n            if (usageRef.current) {\n              usageRef.current.value = rowItm[6]\n            }\n            if (vatRef.current) {\n              vatRef.current.value = rowItm[9]\n            }\n            if (invoiceRef.current) {\n              invoiceRef.current.value = rowItm[10]\n            }\n            subAcctRef.current = rowItm[4]\n            clientIdRef.current = rowItm[5]\n            transactionCodeRef.current = rowItm[7]\n            transactionShortRef.current = rowItm[8]\n          }}\n        />\n        {ModalClientIDs}\n        {ModalSearchPettyCash}\n      </div>\n    </>\n\n  );\n}\nconst PettyCashTableSelected = forwardRef(({\n  columns,\n  rows,\n  height = \"400px\",\n  getSelectedItem,\n  disbaleTable = false,\n  isTableSelectable = true\n}: any, ref) => {\n  const parentElementRef = useRef<any>(null)\n  const [data, setData] = useState([])\n  const [column, setColumn] = useState([])\n  const [selectedRow, setSelectedRow] = useState<any>(0)\n  const [selectedRowIndex, setSelectedRowIndex] = useState<any>(null)\n  const totalRowWidth = column.reduce((a: any, b: any) => a + b.width, 0)\n\n  useEffect(() => {\n    if (columns.length > 0) {\n      setColumn(columns.filter((itm: any) => !itm.hide))\n    }\n  }, [columns])\n\n  useEffect(() => {\n    if (rows.length > 0) {\n      setData(rows.map((itm: any) => {\n        return columns.map((col: any) => itm[col.key])\n      }))\n    }\n  }, [rows, columns])\n\n  useImperativeHandle(ref, () => ({\n    selectedRow: () => selectedRow,\n    getData: () => {\n      const newData = [...data];\n      return newData\n    },\n    setData: (newData: any) => {\n      setData(newData)\n    },\n    getColumns: () => {\n      return columns\n    },\n    resetTable: () => {\n      setData([])\n      setSelectedRow(0)\n    },\n    getSelectedRow: () => {\n      return selectedRowIndex\n    },\n    setSelectedRow: (value: any) => {\n      return setSelectedRowIndex(value)\n    },\n    setDataFormated: (newData: any) => {\n      setData(newData.map((itm: any) => {\n        return columns.map((col: any) => itm[col.key])\n      }))\n    },\n    getDataFormatted: () => {\n      const newData = [...data];\n      const newDataFormatted = newData.map((itm: any) => {\n        let newItm = {\n          purpose: itm[0],\n          amount: itm[1],\n          usage: itm[2],\n          accountID: itm[3],\n          sub_account: itm[4],\n          clientID: itm[5],\n          clientName: itm[6],\n          accountCode: itm[7],\n          accountShort: itm[8],\n          vatType: itm[9],\n          invoice: itm[10],\n        }\n        return newItm\n      })\n\n      return newDataFormatted\n    }\n  }))\n\n  return (\n    <div\n      ref={parentElementRef}\n      style={{\n        width: \"100%\",\n        height,\n        overflow: \"auto\",\n        position: \"relative\",\n        pointerEvents: disbaleTable ? \"none\" : \"auto\",\n        border: disbaleTable ? \"2px solid #8c8f8e\" : '2px solid #c0c0c0',\n        boxShadow: `inset -2px -2px 0 #ffffff, \n                      inset 2px 2px 0 #808080`\n\n      }}\n    >\n      <div style={{ position: \"absolute\", width: `${totalRowWidth}px`, height: \"auto\" }}>\n        <table style={{ borderCollapse: \"collapse\", width: \"100%\", position: \"relative\", background: \"white\" }}>\n          <thead >\n            <tr>\n              <th style={{\n                width: '30px',\n                border: \"1px solid black\",\n                position: \"sticky\",\n                top: 0,\n                zIndex: 1,\n                background: \"#f0f0f0\",\n\n              }}\n              ></th>\n              {\n                column.map((colItm: any, idx: number) => {\n                  return (\n                    <th\n                      key={idx}\n                      style={{\n                        width: colItm.width,\n                        border: \"1px solid black\",\n                        position: \"sticky\",\n                        top: 0,\n                        zIndex: 1,\n                        background: \"#f0f0f0\",\n                        fontSize: \"12px\",\n                        textAlign: \"left\",\n                        padding: \"0px 5px\",\n\n                      }}\n                    >{colItm.label}</th>\n                  )\n                })\n              }\n            </tr>\n          </thead>\n          <tbody>\n            {\n              data?.map((rowItm: any, rowIdx: number) => {\n                const selectedRowBg = selectedRow === rowIdx && selectedRowIndex === rowIdx ? \"#dedfe0\" : selectedRow === rowIdx ? \"#b6e4fc\" : selectedRowIndex === rowIdx ? \"#cbcfd4\" : \"\"\n                return (\n                  <tr key={rowIdx}>\n                    <td style={{\n                      position: \"relative\", borderBottom: \"1px solid black\",\n                      borderLeft: \"1px solid black\",\n                      borderTop: \"none\",\n                      borderRight: \"1px solid black\",\n                      cursor: \"pointer\",\n                      background: selectedRowBg,\n                    }}>\n                      <input\n                        style={{\n                          cursor: \"pointer\",\n                          height: \"10px\"\n                        }}\n                        readOnly={true}\n                        checked={selectedRowIndex === rowIdx}\n                        type=\"checkbox\"\n                        onClick={() => {\n                          if (!isTableSelectable) {\n                            return\n                          }\n                          setSelectedRowIndex(rowIdx)\n\n                          if (getSelectedItem) {\n                            getSelectedItem(rowItm, null, rowIdx, null)\n                          }\n                          setSelectedRow(null)\n\n                        }}\n\n                      />\n                    </td>\n\n                    {\n                      column.map((colItm: any, colIdx: number) => {\n                        return (\n                          <td\n                            className={`td row-${rowIdx} col-${colIdx}`}\n                            tabIndex={0}\n                            onDoubleClick={() => {\n                              if (!isTableSelectable) {\n                                return\n                              }\n\n                              setSelectedRowIndex(rowIdx)\n                              if (getSelectedItem) {\n                                getSelectedItem(rowItm, null, rowIdx, null)\n                              }\n                              setSelectedRow(null)\n                            }}\n                            onClick={() => {\n                              setSelectedRow(rowIdx)\n                            }}\n                            onMouseEnter={(e) => {\n                              e.preventDefault()\n                              setSelectedRow(rowIdx)\n                            }}\n                            onMouseLeave={(e) => {\n                              e.preventDefault()\n                              setSelectedRow(null)\n                            }}\n                            onKeyDown={(e) => {\n\n                              if (e.key === \"ArrowUp\") {\n                                setSelectedRow((prev: any) => {\n                                  const index = Math.max(prev - 1, 0)\n                                  const td = document.querySelector(`.td.row-${index}`) as HTMLTableDataCellElement\n                                  if (td) {\n                                    td.focus()\n                                  }\n                                  return index\n                                });\n                              } else if (e.key === \"ArrowDown\") {\n                                setSelectedRow((prev: any) => {\n                                  const index = Math.min(prev + 1, data.length - 1)\n                                  const td = document.querySelector(`.td.row-${index}`) as HTMLTableDataCellElement\n                                  if (td) {\n                                    td.focus()\n                                  }\n                                  return index\n                                });\n                              }\n\n                              if (e.code === 'Enter' || e.code === 'NumpadEnter') {\n                                e.preventDefault()\n\n                                if (!isTableSelectable) {\n                                  return\n                                }\n\n                                setSelectedRowIndex(rowIdx)\n                                if (getSelectedItem) {\n                                  getSelectedItem(rowItm, null, rowIdx, null)\n                                }\n                                setSelectedRow(null)\n                              }\n                            }}\n                            key={colIdx}\n                            style={{\n                              border: \"1px solid black\",\n                              background: selectedRowBg,\n                              fontSize: \"12px\",\n                              padding: \"0px 5px\",\n                              cursor: \"pointer\",\n                            }}\n                          >{\n                              <input\n                                readOnly={true}\n                                value={rowItm[colIdx]}\n                                style={{\n                                  width: colItm.width,\n                                  pointerEvents: \"none\",\n                                  border: \"none\",\n                                  background: \"transparent\",\n                                  userSelect: \"none\"\n                                }} />\n                            }</td>\n                        )\n                      })\n                    }\n                  </tr>\n                )\n              })\n            }\n          </tbody>\n        </table>\n      </div>\n    </div>\n  )\n})\nexport const Autocomplete = ({\n  DisplayMember,\n  DataSource,\n  inputRef,\n  disableInput = false,\n  onKeydown,\n  onChange,\n  label = {\n    title: \"Transaction : \",\n    style: {\n      fontSize: \"12px\",\n      fontWeight: \"bold\",\n      width: \"100px\",\n    },\n  },\n  input = {\n    width: '740px',\n  }\n}: any) => {\n  const [inputValue, setInputValue] = useState(\"\");\n  const [filteredSuggestions, setFilteredSuggestions] = useState([]);\n  const [showSuggestions, setShowSuggestions] = useState(false);\n  const [activeSuggestionIndex, setActiveSuggestionIndex] = useState(0);\n\n  // Ref to store the suggestion container\n  const suggestionListRef = useRef<HTMLUListElement>(null);\n\n  useEffect(() => {\n    // Scroll the active suggestion into view\n    const activeElement = suggestionListRef.current?.children[activeSuggestionIndex];\n    if (activeElement) {\n      activeElement.scrollIntoView({\n        behavior: \"smooth\",\n        block: \"nearest\",\n      });\n    }\n  }, [activeSuggestionIndex]);\n\n  const handleChange = (e: any) => {\n    const value = e.target.value;\n\n    setInputValue(value);\n\n    if (value.trim()) {\n      const filtered = DataSource.filter((item: any) =>\n        item[DisplayMember].toLowerCase().includes(value.toLowerCase())\n      );\n      setFilteredSuggestions(filtered);\n      setShowSuggestions(true);\n    } else {\n      setFilteredSuggestions([]);\n      setShowSuggestions(false);\n    }\n  };\n\n  const handleClick = (suggestion: any) => {\n    setInputValue(suggestion[DisplayMember]);\n    setShowSuggestions(false);\n  };\n\n  const handleKeyDown = (e: any) => {\n    if (e.key === \"ArrowDown\") {\n      e.preventDefault()\n      setActiveSuggestionIndex((prevIndex) =>\n        Math.min(prevIndex + 1, filteredSuggestions.length - 1)\n      );\n    } else if (e.key === \"ArrowUp\") {\n      e.preventDefault()\n\n      setActiveSuggestionIndex((prevIndex) =>\n        Math.max(prevIndex - 1, 0)\n      );\n    } else if (e.key === \"Enter\" || e.key === 'NumpadEnter') {\n      e.preventDefault()\n\n\n      if (filteredSuggestions.length > 0) {\n        const selectedSuggestion = filteredSuggestions[activeSuggestionIndex];\n        onChange(selectedSuggestion, e)\n        setInputValue(selectedSuggestion[DisplayMember]);\n        setShowSuggestions(false);\n      }\n\n    }\n\n    setTimeout(() => {\n      if (onKeydown)\n        onKeydown(e)\n    }, 150)\n  };\n\n  return (\n    <div style={{flex:1}}>\n      <TextInput\n        label={label}\n        input={{\n          ...input,\n          disabled: disableInput,\n          type: \"text\",\n          value: inputValue,\n          onKeyDown: handleKeyDown,\n          onChange: handleChange\n        }}\n        inputRef={inputRef}\n      />\n      {showSuggestions && filteredSuggestions.length > 0 && (\n        <ul className=\"suggestions\" ref={suggestionListRef}>\n          {filteredSuggestions.map((suggestion, index) => (\n            <li\n              key={index}\n              onClick={(e) => {\n                handleClick(suggestion)\n                onChange(suggestion, e)\n              }}\n              className={index === activeSuggestionIndex ? \"active\" : \"\"}\n              onMouseEnter={(e) => {\n                e.preventDefault()\n                setActiveSuggestionIndex(Math.min(index, filteredSuggestions.length - 1));\n              }}\n            >\n              {suggestion[DisplayMember]}\n            </li>\n          ))}\n        </ul>\n      )}\n      <style>\n        {`\n          .suggestions {\n            margin-top: 0;\n            padding: 0;\n            list-style: none;\n            max-height: 150px;\n            overflow-y: auto;\n            position:absolute;\n            z-index:100;\n            background:white;\n            width:350px;\n            border:1px solid #e5e7eb;\n            box-shadow: 0px 23px 32px -17px rgba(0,0,0,0.75);\n          }\n          .suggestions li {\n            padding:3px 10px;\n            cursor: pointer;\n            font-size:14px;\n          }\n          .suggestions li.active {\n            background-color: #e2e8f0;\n          }\n      \n        `}\n      </style>\n    </div>\n  );\n};\nfunction setNewStateValue(dispatch: any, obj: any) {\n  Object.entries(obj).forEach(([field, value]) => {\n    dispatch({ type: \"UPDATE_FIELD\", field, value });\n  });\n}\n\n","import { useContext, useState } from \"react\";\nimport { useQuery } from \"react-query\";\nimport { AuthContext, User } from \"../components/AuthContext\";\nimport {\n  GridRowSelectionModel,\n  GridCellParams,\n  GridTreeNode,\n} from \"@mui/x-data-grid\";\nimport ModalWithTable from \"../components/ModalWithTable\";\nimport { flushSync } from \"react-dom\";\nimport { AxiosResponse, AxiosInstance } from \"axios\";\nimport { GridRowParams } from \"@mui/x-data-grid\";\ninterface QueryModalTableParamsType {\n  link?: {\n    url: string;\n    queryUrlName: string;\n  };\n  uniqueId: string;\n  queryKey: string;\n  responseDataKey: string;\n  columns: Array<any>;\n  onSelected?: (selectedRowData: Array<any>, data: Array<any>) => void;\n  onRemoveSelected?: (data: Array<any>) => void;\n  onSuccess?: (data: any) => void;\n  searchRef?: React.RefObject<HTMLInputElement>;\n  onCellKeyDown?: any;\n  onCloseFunction?: (search: any) => void;\n  CustomizeAxios?: (\n    myAxios: AxiosInstance,\n    user: User | null,\n    link: QueryModalTableParamsType[\"link\"],\n    search?: string\n  ) => Promise<AxiosResponse<any, any>>;\n  isRowSelectable?: ((params: GridRowParams<any>) => boolean) | undefined;\n  getCellClassName?:\n    | ((params: GridCellParams<any, any, any, GridTreeNode>) => string)\n    | undefined;\n}\n\nasync function CustomizeAxiosFunc(\n  myAxios: AxiosInstance,\n  user: User | null,\n  link: QueryModalTableParamsType[\"link\"],\n  search: string = \"\"\n) {\n  return myAxios.get(`${link?.url}?${link?.queryUrlName}=${search}`, {\n    headers: {\n      Authorization: `Bearer ${user?.accessToken}`,\n    },\n  });\n}\n\nconst useQueryModalTable = ({\n  link,\n  uniqueId,\n  queryKey,\n  responseDataKey,\n  columns,\n  onSelected = () => {},\n  onRemoveSelected = () => {},\n  onSuccess = () => {},\n  searchRef,\n  onCellKeyDown,\n  onCloseFunction = () => {},\n  CustomizeAxios = CustomizeAxiosFunc,\n  isRowSelectable,\n  getCellClassName,\n}: QueryModalTableParamsType) => {\n  const { myAxios, user } = useContext(AuthContext);\n  const [show, setShowModal] = useState(false);\n  const [rows, setRows] = useState<GridRowSelectionModel>([]);\n  async function customizeAxiostool(search: string = \"\") {\n    return await CustomizeAxios(myAxios, user, link, search);\n  }\n  const { isLoading, refetch } = useQuery({\n    queryKey: queryKey,\n    queryFn: async () => await customizeAxiostool(),\n    onSuccess: (res) => {\n      const response = res as any;\n      setRows(response.data[responseDataKey]);\n      onSuccess(response);\n    },\n    refetchOnWindowFocus: false,\n  });\n\n  const openModal = (search: string = \"\") => {\n    flushSync(() => {\n      setShowModal(true);\n    });\n    if (searchRef?.current) {\n      searchRef.current.value = search;\n      customizeAxiostool(search).then((res: any) => {\n        if (!res?.data.success) {\n          return alert(`Error : ${res?.data.message}`);\n        }\n        const response = res as any;\n        setRows(response.data[responseDataKey]);\n        if (searchRef?.current) searchRef.current.focus();\n      });\n    }\n  };\n\n  const closeModal = () => {\n    setShowModal(false);\n    if (onCloseFunction) {\n      onCloseFunction(searchRef?.current?.value);\n    }\n  };\n\n  const ModalComponent = (\n    <ModalWithTable\n      getCellClassName={getCellClassName}\n      searchRef={searchRef}\n      showModal={show}\n      onCloseModal={() => {\n        setShowModal(false);\n        if (onCloseFunction) {\n          onCloseFunction(searchRef?.current?.value);\n        }\n      }}\n      onClickCloseIcon={() => {\n        setShowModal(false);\n        if (onCloseFunction) {\n          onCloseFunction(searchRef?.current?.value);\n        }\n      }}\n      searchOnChange={(e) => {\n        // myAxios\n        //   .get(`${link.url}?${link.queryUrlName}=${e.target.value}`, {\n        //     headers: {\n        //       Authorization: `Bearer ${user?.accessToken}`,\n        //     },\n        //   })\n        //   .then((res: any) => {\n        //     if (!res?.data.success) {\n        //       return alert(`Error : ${res?.data.message}`);\n        //     }\n        //     const response = res as any;\n        //     setRows(response.data[responseDataKey]);\n        //   });\n      }}\n      onSearchKeyEnter={(value) => {\n        customizeAxiostool(value).then((res: any) => {\n          if (!res?.data.success) {\n            return alert(`Error : ${res?.data.message}`);\n          }\n          const response = res as any;\n          setRows(response.data[responseDataKey]);\n        });\n      }}\n      onCellKeyDown={onCellKeyDown}\n      height={300}\n      isLoading={isLoading}\n      queryKey={queryKey}\n      columns={columns}\n      onSelectionChange={(rowSelectionModel, data) => {\n        if (rowSelectionModel.length <= 0) {\n          return onRemoveSelected(data);\n        }\n        const selectedIDs = new Set(rowSelectionModel);\n        const selectedRowData = data.filter((row: any) => {\n          return selectedIDs.has(row[uniqueId].toString());\n        });\n        if (selectedRowData.length <= 0) return;\n        onSelected(selectedRowData, data);\n      }}\n      id={uniqueId}\n      rows={rows}\n      setRows={setRows}\n      isRowSelectable={isRowSelectable}\n    />\n  );\n\n  return {\n    show,\n    rows,\n    isLoading,\n    openModal,\n    closeModal,\n    ModalComponent,\n    refetch,\n  };\n};\n\nexport default useQueryModalTable;\n","import Swal from \"sweetalert2\";\n\nexport function codeCondfirmationAlert(props: {\n  cb: (userCodeConfirmation: string) => void;\n  isUpdate: boolean;\n  isConfirm?: () => void;\n  isDeclined?: () => void;\n  text?: string;\n}) {\n  Swal.fire({\n    title: `Are you sure!`,\n    html: props?.text\n      ? props?.text\n      : props.isUpdate\n      ? `Are you sure you want to make this change?`\n      : \"Are you sure you want to delete this?\",\n    icon: \"warning\",\n    input: \"text\",\n    inputAttributes: {\n      autocapitalize: \"off\",\n    },\n    showCancelButton: true,\n    confirmButtonText: \"Save\",\n    confirmButtonColor: \"green\",\n    showLoaderOnConfirm: true,\n    preConfirm: async (userCodeConfirmation) => {\n      try {\n        props.cb(userCodeConfirmation);\n      } catch (error) {\n        Swal.showValidationMessage(`\n            Request failed: ${error}\n          `);\n      }\n    },\n    allowOutsideClick: () => !Swal.isLoading(),\n  }).then((result) => {\n    if (result.isConfirmed) {\n      if (props.isConfirm) {\n        return props.isConfirm();\n      }\n    }\n    if (props.isDeclined) {\n      props.isDeclined();\n    }\n  });\n}\n\nexport function saveCondfirmationAlert(props: {\n  isConfirm?: () => void;\n  isDeclined?: () => void;\n  text?: string;\n}) {\n  Swal.fire({\n    title: \"Are you sure?\",\n    text: props?.text ? props?.text : \"Do you want to proceed with saving?\",\n    icon: \"warning\",\n    showCancelButton: true,\n    confirmButtonColor: \"#3085d6\",\n    cancelButtonColor: \"#d33\",\n    confirmButtonText: \"Yes, save it!\",\n  }).then((result) => {\n    if (result.isConfirmed) {\n      if (props.isConfirm) {\n        return props.isConfirm();\n      }\n    }\n    if (props.isDeclined) {\n      props.isDeclined();\n    }\n  });\n}\n","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\"\n}), 'Add');\nexports.default = _default;","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 5V2L8 6l4 4V7c3.31 0 6 2.69 6 6 0 2.97-2.17 5.43-5 5.91v2.02c3.95-.49 7-3.85 7-7.93 0-4.42-3.58-8-8-8zm-6 8c0-1.65.67-3.15 1.76-4.24L6.34 7.34C4.9 8.79 4 10.79 4 13c0 4.08 3.05 7.44 7 7.93v-2.02c-2.83-.48-5-2.94-5-5.91z\"\n}), 'RestartAlt');\nexports.default = _default;","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M17 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V7l-4-4zm-5 16c-1.66 0-3-1.34-3-3s1.34-3 3-3 3 1.34 3 3-1.34 3-3 3zm3-10H5V5h10v4z\"\n}), 'Save');\nexports.default = _default;"],"names":["style","position","top","left","transform","width","bgcolor","boxShadow","p","heigth","ModalWithTable","_ref","height","isLoading","columns","queryKey","onSelectionChange","rows","setRows","id","onCloseModal","showModal","onClickCloseIcon","searchOnChange","_ref$title","title","searchRef","_ref$onSearchKeyEnter","onCellKeyDown","onSearchKeyEnter","isRowSelectable","getCellClassName","mainId","generateRandomClass","_jsx","Modal","open","onClose","children","_jsxs","Box","sx","Typography","variant","component","mb","TextField","size","label","marginBottom","fullWidth","onChange","InputProps","inputRef","onKeyDown","e","_searchRef$current","code","preventDefault","current","value","keyBoardSelectionTable","className","concat","Table","isSingleSelection","isRowFreeze","dataSelection","selection","data","table_id","right","IconButton","color","onClick","CloseIcon","Math","floor","random","el","_rows$","document","querySelectorAll","classList","add","firstRowParent","querySelector","firstInput","focus","event","MouseEvent","bubbles","cancelable","view","window","dispatchEvent","addEventListener","es","key","remove","keyBoardUpDown","forEach","idx","_rows$idx","_rows","_rows$idx2","_rows2","length","TableContext","createContext","rowSelectionModel","footerChildren","footerPaginationPosition","showFooterSelectedCount","forwardRef","ref","_ref$CustomFooterComp","CustomFooterComponent","DefaultooterComponent","_ref$checkboxSelectio","checkboxSelection","_ref$footerChildren","_ref$footerPagination","_ref$showFooterSelect","_useState","useState","_useState2","_slicedToArray","selectedRows","setSelectedRows","useImperativeHandle","removeSelection","getSelectedRows","filter","item","includes","freezeArray","Provider","DataGrid","slots","loadingOverlay","LinearProgress","footer","initialState","pagination","paginationModel","pageSize","loading","getRowId","row","col","hide","showCellVerticalBorder","showColumnVerticalBorder","rowHeight","columnHeaderHeight","pageSizeOptions","_objectSpread","fill","background","padding","fontSize","display","fontWeight","onRowSelectionModelChange","selectionSet","Set","s","has","__","rowNode","_toConsumableArray","disableVirtualization","Pagination","_ref2","page","onPageChange","apiRef","useGridApiContext","pageCount","useGridSelector","gridPageCountSelector","MuiPagination","count","newPage","CustomPagination","props","GridPagination","ActionsComponent","_useContext","useContext","columnGap","justifyContent","px","alignItems","flexDirection","flex","reducer","state","action","type","_defineProperty","field","chartColumn","headerName","PettyCash","_queryFn","_mutationFn","_mutationFn2","_queryFn2","_handleAddTransaction","AuthContext","myAxios","user","pettyCashMode","setPettyCashMode","executeQueryToClient","useExecuteQueryFromClient","tableRef","useRef","inputSearchRef","subrefNoRef","refNoRef","dateRef","payeeRef","explanationRef","accountRef","usageRef","amountRef","vatRef","invoiceRef","pdcSearchInput","transactionCodeRef","transactionShortRef","clientIdRef","subAcctRef","isDisableField","_useQuery","useQuery","queryFn","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","get","headers","Authorization","accessToken","abrupt","sent","stop","apply","arguments","refetchOnWindowFocus","onSuccess","response","wait","then","pettyCashId","petty_cash_id","loadingPettyCashIdGenerator","refetchettyCashIdGenerator","refetch","_useMutation","useMutation","mutationKey","mutationFn","_x","_callee2","variables","_context2","post","success","resetPettyCash","Swal","icon","message","timer","loadingAddUpdatePettyCash","mutateAddUpdatePettyCash","mutate","_useMutation2","_x2","_callee3","_context3","loadPettyCash","loadSelectedPettyCash","PC_No","PC_Date","Payee","Explanation","setDataFormated","mutateLoadSelectedPettyCash","_useQuery2","_callee4","_context4","laodPettyCashTransaction","dataCashTransaction","_useQueryModalTable","useQueryModalTable","link","url","queryUrlName","uniqueId","responseDataKey","onSelected","selectedRowData","closeCliendIDsModal","IDNo","Acronym","Name","_amountRef$current","ModalClientIDs","ModalComponent","openCliendIDsModal","openModal","isLoadingClientIdsModal","closeModal","_useQueryModalTable2","closeModalSearchPettyCash","ModalSearchPettyCash","openModalSearchPettyCash","isLoadingModalSearchPettyCash","handleAddTransaction","_callee5","_accountRef$current2","_amountRef$current3","_usageRef$current","_usageRef$current2","_vatRef$current","_invoiceRef$current","TransDetail","currentData","RowIndex","getSelectedRow","_context5","_accountRef$current","parseFloat","replace","_amountRef$current2","getData","Short","Acct_Code","setData","setSelectedRow","resetRefs","setTimeout","format","Date","_Fragment","PageHelmet","LoadingButton","TextInput","input","currentTarget","Button","startIcon","AddIcon","result","_payeeRef$current","_explanationRef$curre","getDataFormatted","codeCondfirmationAlert","isUpdate","cb","userCodeConfirmation","_refNoRef$current","_dateRef$current","_payeeRef$current2","_explanationRef$curre2","refNo","datePetty","payee","explanation","hasSelected","pettyCash","saveCondfirmationAlert","isConfirm","_refNoRef$current2","_dateRef$current2","_payeeRef$current3","_explanationRef$curre3","disabled","SaveIcon","text","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","isConfirmed","borderBottom","paddingBottom","gap","marginTop","rowGap","readOnly","_dateRef$current3","RestartAltIcon","onIconClick","defaultValue","_payeeRef$current4","_explanationRef$curre4","_accountRef$current3","paddingTop","borderRadius","Autocomplete","DisplayMember","DataSource","laodTranscation","disableInput","selected","onKeydown","_usageRef$current3","NumericFormat","getInputRef","decimalScale","fixedDecimalScale","_vatRef$current2","num","isNaN","valueIsNaN","onBlur","allowNegative","thousandSeparator","valueIsNumericString","SelectInput","containerStyle","select","margin","cursor","_invoiceRef$current2","datasource","values","selectRef","gridArea","PettyCashTableSelected","getSelectedItem","rowItm","colItm","rowIdx","colIdx","_ref$height","_ref$disbaleTable","disbaleTable","_ref$isTableSelectabl","isTableSelectable","parentElementRef","_useState3","_useState4","_useState5","_useState6","column","setColumn","_useState7","_useState8","selectedRow","_useState9","_useState10","selectedRowIndex","setSelectedRowIndex","totalRowWidth","reduce","a","b","useEffect","itm","map","newData","getColumns","resetTable","purpose","amount","usage","accountID","sub_account","clientID","clientName","accountCode","accountShort","vatType","invoice","overflow","pointerEvents","border","borderCollapse","zIndex","textAlign","selectedRowBg","borderLeft","borderTop","borderRight","checked","tabIndex","onDoubleClick","onMouseEnter","onMouseLeave","index","max","td","min","userSelect","_ref2$disableInput","_ref2$label","_ref2$input","_useState11","_useState12","inputValue","setInputValue","_useState13","_useState14","filteredSuggestions","setFilteredSuggestions","_useState15","_useState16","showSuggestions","setShowSuggestions","_useState17","_useState18","activeSuggestionIndex","setActiveSuggestionIndex","suggestionListRef","_suggestionListRef$cu","activeElement","scrollIntoView","behavior","block","prevIndex","selectedSuggestion","target","trim","filtered","toLowerCase","suggestion","handleClick","CustomizeAxiosFunc","_x3","_CustomizeAxiosFunc","search","_args","undefined","_customizeAxiostool","_ref$onSelected","_ref$onRemoveSelected","onRemoveSelected","_ref$onSuccess","_ref$onCloseFunction","onCloseFunction","_ref$CustomizeAxios","CustomizeAxios","show","setShowModal","customizeAxiostool","_args2","res","flushSync","alert","_searchRef$current2","_searchRef$current3","selectedIDs","toString","_preConfirm","html","inputAttributes","autocapitalize","showLoaderOnConfirm","preConfirm","error","allowOutsideClick","isDeclined","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d"],"sourceRoot":""}