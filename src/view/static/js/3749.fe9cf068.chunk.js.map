{"version":3,"file":"static/js/3749.fe9cf068.chunk.js","mappings":"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","sources":["feautures/Admin/Task/Accounting/CheckPulloutApproved.tsx","../node_modules/@mui/icons-material/Close.js","../node_modules/@mui/icons-material/Search.js"],"sourcesContent":["import { LoadingButton } from \"@mui/lab\"\r\nimport { useContext, useRef, useState } from \"react\";\r\nimport { useMutation, useQuery } from \"react-query\";\r\nimport { AuthContext } from \"../../../../components/AuthContext\";\r\nimport useExecuteQueryFromClient from \"../../../../lib/executeQueryFromClient\";\r\nimport { SelectInput, TextInput } from \"../../../../components/UpwardFields\";\r\nimport { DataGridViewMultiSelectionReact } from \"../../../../components/DataGridViewReact\";\r\nimport { Button } from \"@mui/material\";\r\nimport { wait } from \"@testing-library/user-event/dist/utils\";\r\nimport Swal from \"sweetalert2\";\r\nimport { Loading } from \"../../../../components/Loading\";\r\n\r\nconst column = [\r\n    {\r\n        key: \"row_count\",\r\n        label: \"#\",\r\n        width: 30,\r\n    },\r\n    {\r\n        key: \"Check_Date\",\r\n        label: \"Date\",\r\n        width: 80,\r\n    },\r\n    {\r\n        key: \"Bank\",\r\n        label: \"Bank\",\r\n        width: 150,\r\n    },\r\n    { key: \"CheckNo\", label: \"Check No\", width: 150 },\r\n    { key: \"Check_Amnt\", label: \"Amount\", width: 120, type: \"number\" },\r\n\r\n]\r\nexport default function CheckPulloutApproved() {\r\n    const { myAxios, user } = useContext(AuthContext)\r\n    const table = useRef<any>(null)\r\n\r\n    const rcpnRef = useRef<HTMLSelectElement>(null)\r\n    const ppnoRef = useRef<HTMLInputElement>(null)\r\n    const nameRef = useRef<HTMLInputElement>(null)\r\n    const reasonRef = useRef<HTMLInputElement>(null)\r\n    const codeRef = useRef<HTMLInputElement>(null)\r\n\r\n    const btnAddRef = useRef<HTMLButtonElement>(null)\r\n\r\n    const {\r\n        isLoading: isLoadingLoadRequestNumber,\r\n        data: dataLoadRequestNumber,\r\n        refetch: refetchRequestNumber\r\n    } = useQuery({\r\n        queryKey: 'load-request-number',\r\n        queryFn: async () =>\r\n            await myAxios.get(`/task/accounting/pullout/approved/load-request-number`, {\r\n                headers: {\r\n                    Authorization: `Bearer ${user?.accessToken}`,\r\n                },\r\n            }),\r\n    });\r\n\r\n    const {\r\n        isLoading: isLoadingLoadDetails,\r\n        mutate: mutateDetails\r\n    } = useMutation({\r\n        mutationKey: 'load-details',\r\n        mutationFn: async (variable: any) =>\r\n            await myAxios.post(`/task/accounting/pullout/approved/load-details`, variable, {\r\n                headers: {\r\n                    Authorization: `Bearer ${user?.accessToken}`,\r\n                },\r\n            }),\r\n        onSuccess(res) {\r\n            const details = res?.data.details\r\n            if (ppnoRef.current)\r\n                ppnoRef.current.value = details[0].PNNo\r\n            if (nameRef.current)\r\n                nameRef.current.value = details[0].Name\r\n            if (reasonRef.current)\r\n                reasonRef.current.value = details[0].Reason\r\n            table.current.setDataFormated(details)\r\n        },\r\n    });\r\n\r\n    const {\r\n        isLoading: isLoadingConfirmCode,\r\n        mutate: mutateConfirmCode\r\n    } = useMutation({\r\n        mutationKey: 'confirm-code',\r\n        mutationFn: async (variable: any) =>\r\n            await myAxios.post(`/task/accounting/pullout/approved/confirm-code`, variable, {\r\n                headers: {\r\n                    Authorization: `Bearer ${user?.accessToken}`,\r\n                },\r\n            }),\r\n        onSuccess(res) {\r\n\r\n            table.current.resetTable()\r\n            if (rcpnRef.current)\r\n                rcpnRef.current.value = ''\r\n            if (ppnoRef.current)\r\n                ppnoRef.current.value = ''\r\n            if (nameRef.current)\r\n                nameRef.current.value = ''\r\n            if (reasonRef.current)\r\n                reasonRef.current.value = ''\r\n            if (codeRef.current)\r\n                codeRef.current.value = ''\r\n\r\n\r\n            Swal.fire({\r\n                position: \"center\",\r\n                icon: \"warning\",\r\n                title: res.data.message,\r\n                timer: 1500,\r\n            }).then(() => {\r\n                refetchRequestNumber()\r\n            })\r\n        },\r\n    });\r\n\r\n    const {\r\n        isLoading: isLoadingConfirm,\r\n        mutate: mutateConfirm\r\n    } = useMutation({\r\n        mutationKey: 'confirm',\r\n        mutationFn: async (variable: any) =>\r\n            await myAxios.post(`/task/accounting/pullout/approved/confirm`, variable, {\r\n                headers: {\r\n                    Authorization: `Bearer ${user?.accessToken}`,\r\n                },\r\n            }),\r\n        onSuccess(res) {\r\n            if (res.data.success) {\r\n                return Swal.fire({\r\n                    title: \"Are you sure?\",\r\n                    text: res.data.message,\r\n                    icon: \"warning\",\r\n                    showCancelButton: true,\r\n                    confirmButtonColor: \"#3085d6\",\r\n                    cancelButtonColor: \"#d33\",\r\n                    confirmButtonText: \"Yes, confirm it!\",\r\n                }).then((result) => {\r\n                    if (result.isConfirmed) {\r\n                        const getData = table.current.getData()\r\n                        const formatData = getData.map((itm: any) => {\r\n                            return {\r\n                                Check_Date: itm[1],\r\n                                Bank: itm[2],\r\n                                Check_No: itm[3],\r\n                                Check_Amnt: itm[4],\r\n                            }\r\n                        })\r\n                        mutateConfirmCode({\r\n                            RCPNo: rcpnRef.current?.value,\r\n                            PNNo: ppnoRef.current?.value,\r\n                            reason: reasonRef.current?.value,\r\n                            Name: nameRef.current?.value,\r\n                            code: codeRef.current?.value,\r\n                            selected: JSON.stringify(formatData)\r\n                        })\r\n                    }\r\n\r\n                });\r\n            }\r\n\r\n            alert(res.data.message)\r\n\r\n        },\r\n    });\r\n\r\n\r\n\r\n\r\n\r\n    return <div style={{\r\n        flex: \"1\",\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        background: \"#F1F1F1\",\r\n    }}>\r\n        {(isLoadingLoadDetails || isLoadingConfirm || isLoadingConfirmCode) && <Loading />}\r\n        <div style={{\r\n            padding: \"10px\",\r\n            width: \"62%\",\r\n            border: \"1px sold black\",\r\n            height: \"500px\",\r\n            boxShadow: \"1px 1px 2px 2px black\",\r\n            display: \"flex\",\r\n            flexDirection: \"column\"\r\n        }}>\r\n            <div style={{\r\n                height: \"auto\",\r\n            }}>\r\n                {\r\n\r\n                    isLoadingLoadRequestNumber ?\r\n                        <LoadingButton loading={isLoadingLoadRequestNumber} />\r\n                        : <div\r\n                            style={{\r\n                                width: \"100%\",\r\n                                marginBottom: \"8px\"\r\n                            }}>\r\n                            <SelectInput\r\n                                label={{\r\n                                    title: \"RCP No.  : \",\r\n                                    style: {\r\n                                        fontSize: \"12px\",\r\n                                        fontWeight: \"bold\",\r\n                                        width: \"100px\",\r\n                                    },\r\n                                }}\r\n                                selectRef={rcpnRef}\r\n                                select={{\r\n                                    style: { flex: 1, height: \"22px\" },\r\n                                    defaultValue: \"Non-VAT\",\r\n                                    onChange: async (e) => {\r\n                                        if (e.currentTarget.selectedIndex === 0) {\r\n                                            table.current.resetTable()\r\n                                            if (rcpnRef.current)\r\n                                                rcpnRef.current.value = ''\r\n                                            if (ppnoRef.current)\r\n                                                ppnoRef.current.value = ''\r\n                                            if (nameRef.current)\r\n                                                nameRef.current.value = ''\r\n                                            if (reasonRef.current)\r\n                                                reasonRef.current.value = ''\r\n                                            if (codeRef.current)\r\n                                                codeRef.current.value = ''\r\n                                        }\r\n                                        mutateDetails({ RCPNo: e.target.value })\r\n                                    }\r\n\r\n                                }}\r\n                                containerStyle={{\r\n                                    width: \"300px\",\r\n                                    marginBottom: \"12px\"\r\n                                }}\r\n                                datasource={dataLoadRequestNumber?.data.rcpn}\r\n                                values={\"RCPNo\"}\r\n                                display={\"RCPNo\"}\r\n                            />\r\n                        </div>\r\n                }\r\n\r\n                <TextInput\r\n                    containerStyle={{\r\n                        width: \"50%\",\r\n                        marginBottom: \"8px\",\r\n                        marginLeft: \"50px\"\r\n                    }}\r\n                    label={{\r\n                        title: \"PN No. :\",\r\n                        style: {\r\n                            fontSize: \"12px\",\r\n                            fontWeight: \"bold\",\r\n                            width: \"100px\",\r\n                        },\r\n                    }}\r\n                    input={{\r\n                        disabled: true,\r\n                        type: \"text\",\r\n                        style: { width: \"calc(100% - 100px)\" },\r\n                    }}\r\n                    inputRef={ppnoRef}\r\n                />\r\n\r\n                <TextInput\r\n                    containerStyle={{\r\n                        width: \"50%\",\r\n                        marginBottom: \"8px\",\r\n                        marginLeft: \"50px\"\r\n\r\n                    }}\r\n                    label={{\r\n                        title: \"Client :\",\r\n                        style: {\r\n                            fontSize: \"12px\",\r\n                            fontWeight: \"bold\",\r\n                            width: \"100px\",\r\n                        },\r\n                    }}\r\n                    input={{\r\n                        disabled: true,\r\n                        type: \"text\",\r\n                        style: { width: \"calc(100% - 100px)\" },\r\n                    }}\r\n                    inputRef={nameRef}\r\n                />\r\n                <TextInput\r\n                    containerStyle={{\r\n                        width: \"50%\",\r\n                        marginBottom: \"8px\",\r\n                        marginLeft: \"50px\"\r\n                    }}\r\n                    label={{\r\n                        title: \"Reason :\",\r\n                        style: {\r\n                            fontSize: \"12px\",\r\n                            fontWeight: \"bold\",\r\n                            width: \"100px\",\r\n                        },\r\n                    }}\r\n                    input={{\r\n                        disabled: true,\r\n                        type: \"text\",\r\n                        style: { width: \"calc(100% - 100px)\" },\r\n                    }}\r\n                    inputRef={reasonRef}\r\n                />\r\n\r\n            </div>\r\n            <DataGridViewMultiSelectionReact\r\n                isTableSelectable={false}\r\n                ref={table}\r\n                columns={column}\r\n                rows={[]}\r\n                containerStyle={{\r\n                    flex: 1,\r\n                }}\r\n                getSelectedItem={(rowItm: any) => {\r\n                    if (rowItm) {\r\n\r\n                    }\r\n                }}\r\n            />\r\n            <div style={{\r\n                height: \"35px\",\r\n                display: \"flex\",\r\n                justifyContent: \"flex-end\",\r\n                alignItems: \"center\",\r\n                columnGap: \"5px\",\r\n            }}>\r\n                <TextInput\r\n                    label={{\r\n                        title: \"Authentication Code:\",\r\n                        style: {\r\n                            fontSize: \"12px\",\r\n                            fontWeight: \"bold\",\r\n                            width: \"140px\",\r\n                        },\r\n                    }}\r\n                    input={{\r\n                        type: \"text\",\r\n                        style: { width: \"300px\" },\r\n                        onKeyDown: (e) => {\r\n                            if (e.key === 'Enter' || e.key === 'NumEnter') {\r\n                                mutateConfirm({ RCPNo: rcpnRef.current?.value, code: e.currentTarget.value })\r\n                            }\r\n                        }\r\n                    }}\r\n                    inputRef={codeRef}\r\n                />\r\n                <Button\r\n                    ref={btnAddRef}\r\n                    variant=\"contained\"\r\n                    color=\"info\"\r\n                    style={{\r\n                        height: \"25px\",\r\n                        fontSize: \"12px\",\r\n                    }}\r\n                    onClick={(e) => {\r\n                        mutateConfirm({ RCPNo: rcpnRef.current?.value, code: codeRef.current?.value })\r\n                    }}\r\n                >\r\n                    Confirm\r\n                </Button>\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n}","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19 6.41 17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n}), 'Close');\nexports.default = _default;","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z\"\n}), 'Search');\nexports.default = _default;"],"names":["column","key","label","width","type","CheckPulloutApproved","_queryFn","_mutationFn","_mutationFn2","_mutationFn3","_onChange","_useContext","useContext","AuthContext","myAxios","user","table","useRef","rcpnRef","ppnoRef","nameRef","reasonRef","codeRef","btnAddRef","_useQuery","useQuery","queryKey","queryFn","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","get","headers","Authorization","concat","accessToken","abrupt","sent","stop","apply","arguments","isLoadingLoadRequestNumber","isLoading","dataLoadRequestNumber","data","refetchRequestNumber","refetch","_useMutation","useMutation","mutationKey","mutationFn","_x","_callee2","variable","_context2","post","onSuccess","res","details","current","value","PNNo","Name","Reason","setDataFormated","isLoadingLoadDetails","mutateDetails","mutate","_useMutation2","_x2","_callee3","_context3","resetTable","Swal","position","icon","title","message","timer","then","isLoadingConfirmCode","mutateConfirmCode","_useMutation3","_x3","_callee4","_context4","success","text","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","result","isConfirmed","_rcpnRef$current","_ppnoRef$current","_reasonRef$current","_nameRef$current","_codeRef$current","formatData","getData","map","itm","Check_Date","Bank","Check_No","Check_Amnt","RCPNo","reason","code","selected","JSON","stringify","alert","isLoadingConfirm","mutateConfirm","_jsxs","style","flex","display","justifyContent","alignItems","background","children","_jsx","Loading","padding","border","height","boxShadow","flexDirection","LoadingButton","loading","marginBottom","SelectInput","fontSize","fontWeight","selectRef","select","defaultValue","onChange","_x4","_callee5","e","_context5","currentTarget","selectedIndex","target","containerStyle","datasource","rcpn","values","TextInput","marginLeft","input","disabled","inputRef","DataGridViewMultiSelectionReact","isTableSelectable","ref","columns","rows","getSelectedItem","rowItm","columnGap","onKeyDown","_rcpnRef$current2","Button","variant","color","onClick","_rcpnRef$current3","_codeRef$current2","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d"],"sourceRoot":""}