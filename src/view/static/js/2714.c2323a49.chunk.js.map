{"version":3,"file":"static/js/2714.c2323a49.chunk.js","mappings":"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","sources":["components/ModalWithTable.tsx","components/Table.tsx","feautures/Admin/Reference/BankAccount.tsx","hooks/useQueryModalTable.tsx","lib/confirmationAlert.ts","../node_modules/@mui/icons-material/Add.js","../node_modules/@mui/icons-material/Delete.js","../node_modules/@mui/icons-material/PersonSearch.js","../node_modules/@mui/icons-material/Save.js","../node_modules/@mui/icons-material/Search.js","../node_modules/@mui/icons-material/SwitchAccount.js","../node_modules/@mui/material/colors/pink.js","../node_modules/prop-types/factoryWithThrowingShims.js","../node_modules/prop-types/index.js","../node_modules/prop-types/lib/ReactPropTypesSecret.js"],"sourcesContent":["import React from \"react\";\nimport {\n  GridRowSelectionModel,\n  GridRowParams,\n  GridCellParams,\n  GridTreeNode,\n} from \"@mui/x-data-grid\";\nimport { Modal, Box, Typography, IconButton, TextField, InputAdornment } from \"@mui/material\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport Table from \"./Table\";\nimport SearchIcon from \"@mui/icons-material/Search\";\n\ninterface ModalWithTableParams {\n  height: number;\n  isLoading: boolean;\n  queryKey: string;\n  columns: Array<any>;\n  onSelectionChange: (rowSelectionModel: Array<any>, data: Array<any>) => void;\n  setRows: React.Dispatch<React.SetStateAction<GridRowSelectionModel>>;\n  rows: GridRowSelectionModel;\n  id: string;\n  onCloseModal: () => void;\n  onClickCloseIcon: () => void;\n  showModal: boolean;\n  searchOnChange:\n    | React.ChangeEventHandler<HTMLInputElement | HTMLTextAreaElement>\n    | undefined;\n  title?: string;\n  searchRef?: React.RefObject<HTMLInputElement>;\n  onCellKeyDown?: any;\n  onSearchKeyEnter?: (search: string) => void;\n  isRowSelectable?: ((params: GridRowParams<any>) => boolean) | undefined;\n  getCellClassName?:\n    | ((params: GridCellParams<any, any, any, GridTreeNode>) => string)\n    | undefined;\n}\n\nconst style = {\n  position: \"absolute\" as \"absolute\",\n  top: \"50%\",\n  left: \"50%\",\n  transform: \"translate(-50%, -50%)\",\n  width: \"70%\",\n  bgcolor: \"background.paper\",\n  boxShadow: 24,\n  p: 4,\n  heigth: \"auto\",\n};\n\nexport default function ModalWithTable({\n  height,\n  isLoading,\n  queryKey,\n  columns,\n  onSelectionChange,\n  setRows,\n  rows,\n  id,\n  onCloseModal,\n  showModal,\n  onClickCloseIcon,\n  searchOnChange,\n  title = \"\",\n  searchRef,\n  onCellKeyDown,\n  onSearchKeyEnter = () => {},\n  isRowSelectable,\n  getCellClassName,\n}: ModalWithTableParams) {\n  const mainId = generateRandomClass();\n\n  return (\n    <Modal\n      open={showModal}\n      onClose={onCloseModal}\n      aria-labelledby=\"modal-modal-title\"\n      aria-describedby=\"modal-modal-description\"\n    >\n      <Box sx={style}>\n        <Typography id=\"modal-modal-title\" variant=\"h6\" component=\"h2\" mb={2}>\n          {title}\n        </Typography>\n        <TextField\n          size=\"small\"\n          label=\"Search\"\n          fullWidth\n          onChange={searchOnChange}\n          InputProps={{\n            inputRef: searchRef,\n            style: { height: \"27px\", fontSize: \"14px\" },\n            endAdornment: (\n              <InputAdornment position=\"end\">\n                <IconButton\n                  onClick={() => {\n                    onSearchKeyEnter(searchRef?.current?.value as string);\n                  }}\n                  edge=\"end\"\n                >\n                  <SearchIcon />\n                </IconButton>\n              </InputAdornment>\n            ),\n          }}\n          type=\"search\"\n          onKeyDown={(e) => {\n            if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n              e.preventDefault();\n              onSearchKeyEnter(searchRef?.current?.value as string);\n            }\n            keyBoardSelectionTable(\n              e,\n              mainId,\n              searchRef?.current as HTMLInputElement\n            );\n          }}\n          sx={{\n            marginBottom: \"10px\",\n            \".MuiFormLabel-root\": { fontSize: \"14px\" },\n            \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n          }}\n        />\n        <div\n          className={`${mainId} main-table-selection-container`}\n          style={{ position: \"relative\", height: `${height + 20}px` }}\n        >\n          <Table\n            isSingleSelection={true}\n            isRowFreeze={false}\n            columns={columns}\n            isLoading={isLoading}\n            dataSelection={(selection, data, code) => {\n              onSelectionChange(selection, data);\n            }}\n            table_id={id}\n            rows={rows}\n            isRowSelectable={isRowSelectable}\n            getCellClassName={getCellClassName}\n          />\n        </div>\n\n        <div style={{ position: \"absolute\", top: \"10px\", right: \"10px\" }}>\n          <IconButton\n            aria-label=\"search-client\"\n            color=\"secondary\"\n            onClick={onClickCloseIcon}\n          >\n            <CloseIcon />\n          </IconButton>\n        </div>\n      </Box>\n    </Modal>\n  );\n}\n\nexport function generateRandomClass() {\n  const randomNumber = Math.floor(Math.random() * 10000);\n  const randomClass = \"main-\" + randomNumber;\n  return randomClass;\n}\n\nfunction keyBoardUpDown(className: string, el: HTMLElement) {\n  const firstRowParent = document.querySelector(\n    `.${className} .MuiDataGrid-row`\n  );\n  const firstInput = firstRowParent?.querySelector(\"input\");\n  firstInput?.focus();\n  const event = new MouseEvent(\"mouseenter\", {\n    bubbles: true,\n    cancelable: true,\n    view: window,\n  });\n  firstRowParent?.dispatchEvent(event);\n  firstInput?.addEventListener(\"keydown\", (es: any) => {\n    if (es.key === \"ArrowUp\") {\n      es.preventDefault();\n      el.focus();\n    }\n    if (es.key === \"ArrowUp\") {\n      firstRowParent?.classList.remove(\"hover-keyboard\");\n    }\n  });\n}\n\nexport function keyBoardSelectionTable(\n  e: React.KeyboardEvent<HTMLDivElement>,\n  className: string,\n  el: HTMLElement\n) {\n  const mainId = className;\n  if (e.code === \"ArrowDown\") {\n    const rows = document.querySelectorAll(`.${mainId} .MuiDataGrid-row`);\n    e.preventDefault();\n    rows[0]?.classList.add(\"hover-keyboard\");\n    keyBoardUpDown(className, el);\n    rows.forEach((el, idx) => {\n      el.addEventListener(\"keydown\", (es: any) => {\n        if (es.key === \"ArrowUp\") {\n          if (idx <= 0) {\n            return;\n          }\n\n          es.preventDefault();\n          rows[idx]?.classList.remove(\"hover-keyboard\");\n          rows[idx - 1]?.classList.add(\"hover-keyboard\");\n          return;\n        }\n        if (es.key === \"ArrowDown\") {\n          es.preventDefault();\n          if (idx >= rows.length - 1) {\n            return;\n          }\n          rows[idx]?.classList.remove(\"hover-keyboard\");\n          rows[idx + 1]?.classList.add(\"hover-keyboard\");\n        }\n      });\n    });\n  }\n}\n","import {\n  useState,\n  useContext,\n  createContext,\n  ReactElement,\n  forwardRef,\n  useImperativeHandle,\n} from \"react\";\nimport { Box, LinearProgress } from \"@mui/material\";\nimport {\n  DataGrid,\n  GridSlotsComponentsProps,\n  gridPageCountSelector,\n  GridPagination,\n  useGridApiContext,\n  useGridSelector,\n  GridRowSelectionModel,\n  GridColDef,\n  GridRowParams,\n  GridCellParams,\n  GridTreeNode,\n} from \"@mui/x-data-grid\";\nimport { TablePaginationProps } from \"@mui/material/TablePagination\";\nimport MuiPagination from \"@mui/material/Pagination\";\n\ninterface TableProps {\n  isLoading: boolean;\n  columns: Array<any>;\n  rows: Array<any>;\n  table_id: string;\n  isSingleSelection: boolean;\n  isRowFreeze: boolean;\n  dataSelection?: (selection: any, data: any, code: string | null) => void;\n  CustomFooterComponent?: any;\n  isRowSelectable?: ((params: GridRowParams<any>) => boolean) | undefined;\n  getCellClassName?:\n    | ((params: GridCellParams<any, any, any, GridTreeNode>) => string)\n    | undefined;\n  footerChildren?: (\n    rowSelectionModel: GridRowSelectionModel,\n    rows: Array<any>\n  ) => ReactElement;\n  footerPaginationPosition?: string;\n  showFooterSelectedCount?: boolean;\n  checkboxSelection?: boolean | undefined;\n}\n\nconst TableContext = createContext<{\n  rowSelectionModel: GridRowSelectionModel;\n  rows: Array<any>;\n  footerPaginationPosition?: string;\n  showFooterSelectedCount?: boolean;\n  footerChildren: (\n    rowSelectionModel: GridRowSelectionModel,\n    rows: Array<any>\n  ) => ReactElement;\n}>({\n  rows: [],\n  rowSelectionModel: [],\n  footerChildren: () => <div></div>,\n  footerPaginationPosition: \"right-left\",\n  showFooterSelectedCount: true,\n});\nconst Table = forwardRef(\n  (\n    {\n      isLoading,\n      columns,\n      rows,\n      table_id,\n      isSingleSelection,\n      isRowFreeze,\n      dataSelection,\n      CustomFooterComponent = DefaultooterComponent,\n      isRowSelectable,\n      getCellClassName,\n      checkboxSelection = true,\n      footerChildren = (\n        rowSelectionModel: GridRowSelectionModel,\n        rows: Array<any>\n      ) => <div></div>,\n      footerPaginationPosition = \"right-left\",\n      showFooterSelectedCount = true,\n    }: TableProps,\n    ref\n  ) => {\n    const [selectedRows, setSelectedRows] = useState<any>([]);\n\n    useImperativeHandle(ref, () => ({\n      removeSelection: () => {\n        setSelectedRows([]);\n      },\n      getSelectedRows: () => {\n        return rows.filter((item: any) =>\n          selectedRows?.includes(item[table_id])\n        );\n      },\n      setSelectedRows: (data: Array<any>) => {\n        setSelectedRows(data);\n      },\n    }));\n\n    function onSelectionChange(selection: any, data: any, code: string | null) {\n      if (dataSelection) {\n        dataSelection(selection, data, code);\n      }\n    }\n    let freezeArray: Array<any> = [];\n\n    return (\n      <TableContext.Provider\n        value={{\n          showFooterSelectedCount,\n          footerPaginationPosition,\n          rowSelectionModel: selectedRows,\n          rows,\n          footerChildren,\n        }}\n      >\n        <DataGrid\n          slots={{\n            loadingOverlay: LinearProgress,\n            footer: CustomFooterComponent,\n          }}\n          initialState={{\n            pagination: { paginationModel: { pageSize: 35 } },\n          }}\n          loading={isLoading}\n          getRowId={(row) => row[table_id]}\n          columns={columns.filter((col: any) => !col.hide) as GridColDef<any>[]}\n          rows={rows}\n          showCellVerticalBorder={true}\n          showColumnVerticalBorder={true}\n          checkboxSelection={checkboxSelection}\n          rowSelectionModel={selectedRows}\n          rowHeight={25}\n          columnHeaderHeight={35}\n          pageSizeOptions={[10, 20, 35, 50, 75, 100]}\n          sx={{\n            \"& .cash\": {\n              color: \"#ec4899\",\n            },\n            \"& .check\": {\n              color: \"#0891b2\",\n            },\n            \"& .approved\": {\n              color: \"green\",\n            },\n            \"& .pending\": {\n              color: \"orange\",\n            },\n            \"& .disapproved\": {\n              color: \"red\",\n            },\n            \"& .normal\": {\n              color: \"red\",\n            },\n            \"& .MuiDataGrid-row.Mui-selected:hover\": {\n              color: \"black\",\n              \"& .MuiSvgIcon-root \": {\n                fill: \"#3b82f6\",\n              },\n            },\n            \"& .hover-keyboard\": {\n              background: \"#2563eb\",\n              color: \"white\",\n              \"& .MuiSvgIcon-root \": {\n                fill: \"white\",\n              },\n            },\n            \"& .MuiDataGrid-row:hover\": {\n              background: \"#2563eb\",\n              color: \"white\",\n              \"& .MuiSvgIcon-root \": {\n                fill: \"white\",\n              },\n            },\n            \"& .MuiDataGrid-row.hover\": {\n              background: \"#2563eb\",\n              color: \"white\",\n              \"& .MuiSvgIcon-root \": {\n                fill: \"white\",\n              },\n            },\n            \"& .MuiTablePagination-root p \": {\n              padding: \"0 !important\",\n            },\n\n            ...{\n              \"& .MuiDataGrid-columnHeaders\": {\n                background: \"#64748b\",\n                color: \"white\",\n                fontSize: \"14px\",\n                // borderBottomColor: \"#38bdf8\",\n              },\n              \"& .MuiDataGrid-columnHeaderCheckbox .MuiDataGrid-columnHeaderTitleContainer .MuiSvgIcon-root \":\n                {\n                  display: isSingleSelection || isRowFreeze ? \"none\" : \"block\",\n                  fill: \"white\",\n                },\n              \"& .MuiDataGrid-columnHeaderCheckbox .MuiDataGrid-columnHeaderTitleContainer input \":\n                {\n                  display: isSingleSelection || isRowFreeze ? \"none\" : \"block\",\n                },\n            },\n            ...{\n              fontSize: 13,\n              fontWeight: 500,\n              \"& .MuiDataGrid-checkboxInput\": {\n                height: \"27px\",\n                width: \"27px\",\n              },\n              \"& .MuiDataGrid-checkboxInput svg\": {\n                height: \"20px\",\n                width: \"20px\",\n              },\n            },\n          }}\n          // onRowDoubleClick={(e, r) => {\n          //   console.log(e, r);\n          // }}\n\n          onRowSelectionModelChange={(selection) => {\n            if (isRowFreeze) {\n              if (selection.length <= 0) return;\n              freezeArray = selection;\n              if (selectedRows.includes(freezeArray[freezeArray.length - 1]))\n                return;\n\n              setSelectedRows(selection);\n\n              onSelectionChange([selection[selection.length - 1]], rows, null);\n              return;\n            }\n\n            if (!isRowFreeze && isSingleSelection) {\n              if (selectedRows && selectedRows?.length > 0) {\n                const selectionSet = new Set(selectedRows);\n                setSelectedRows(\n                  selection.filter((s: any) => !selectionSet.has(s))\n                );\n              } else {\n                setSelectedRows(selection);\n              }\n            } else {\n              setSelectedRows(selection);\n            }\n\n            onSelectionChange([selection[selection.length - 1]], rows, null);\n          }}\n          onCellKeyDown={(__: any, key: any) => {\n            const keyFinding = [\"NumpadEnter\", \"Enter\", \"Delete\", \"Backspace\"];\n            if (!keyFinding.includes(key.code)) {\n              return;\n            }\n            key.preventDefault();\n            if (key.code === \"Enter\" || key.code === \"NumpadEnter\") {\n              if (isSingleSelection && !isRowFreeze) {\n                return setSelectedRows((data: any) => {\n                  if (data && data.length > 0 && data[0] === __.rowNode.id) {\n                    onSelectionChange([], rows, key.code);\n                    return [];\n                  }\n                  onSelectionChange([__.rowNode.id], rows, key.code);\n                  return [__.rowNode.id];\n                });\n              } else {\n                setSelectedRows((data: any) => {\n                  if (\n                    data &&\n                    !isRowFreeze &&\n                    data.length > 0 &&\n                    data.includes(__.rowNode.id)\n                  ) {\n                    data = data.filter((item: any) => item !== __.rowNode.id);\n                    onSelectionChange([], rows, key.code);\n                    return data;\n                  }\n                  if (\n                    data &&\n                    isRowFreeze &&\n                    data.length > 0 &&\n                    data.includes(__.rowNode.id)\n                  ) {\n                    return data;\n                  }\n                  onSelectionChange([__.rowNode.id], rows, key.code);\n                  return [...data, __.rowNode.id];\n                });\n              }\n              return;\n            }\n            if (key.code === \"Delete\" || key.code === \"Backspace\") {\n              setSelectedRows([__.rowNode.id]);\n              return onSelectionChange([__.rowNode.id], rows, key.code);\n            }\n          }}\n          disableVirtualization\n          isRowSelectable={isRowSelectable}\n          getCellClassName={getCellClassName}\n        />\n      </TableContext.Provider>\n    );\n  }\n);\n\nexport default Table;\nfunction Pagination({\n  page,\n  onPageChange,\n  className,\n}: Pick<TablePaginationProps, \"page\" | \"onPageChange\" | \"className\">) {\n  const apiRef = useGridApiContext();\n  const pageCount = useGridSelector(apiRef, gridPageCountSelector);\n\n  return (\n    <MuiPagination\n      variant=\"outlined\"\n      color=\"primary\"\n      className={className}\n      count={pageCount}\n      page={page + 1}\n      onChange={(event, newPage) => {\n        onPageChange(event as any, newPage - 1);\n      }}\n    />\n  );\n}\n\nfunction CustomPagination(props: any) {\n  return <GridPagination ActionsComponent={Pagination} {...props} />;\n}\nfunction DefaultooterComponent(\n  props: NonNullable<GridSlotsComponentsProps[\"footer\"]>\n) {\n  const {\n    rowSelectionModel,\n    showFooterSelectedCount,\n    footerPaginationPosition,\n    footerChildren,\n    rows,\n  } = useContext(TableContext);\n  return (\n    <Box\n      sx={{\n        columnGap: \"50px\",\n        display: \"flex\",\n        width: \"100%\",\n        justifyContent: \"space-between\",\n        px: 3,\n        alignItems: \"center\",\n        flexDirection:\n          footerPaginationPosition === \"right-left\" ? \"row-reverse\" : \"row\",\n      }}\n    >\n      <CustomPagination {...props} />\n      <Box\n        sx={{\n          display: \"flex\",\n          justifyContent:\n            footerPaginationPosition === \"right-left\"\n              ? \"flex-start\"\n              : \"flex-end\",\n          flex: 1,\n          alignItems: \"center\",\n        }}\n      >\n        {showFooterSelectedCount && (\n          <div>Selected:{rowSelectionModel?.length}</div>\n        )}\n        <div>{footerChildren(rowSelectionModel, rows)}</div>\n      </Box>\n    </Box>\n  );\n}\n","import React, { useContext, useState, useRef, useReducer } from \"react\";\n\nimport {\n  Box,\n  TextField,\n  Button,\n  FormControlLabel,\n  Checkbox,\n  IconButton,\n  FormControl,\n  InputLabel,\n  OutlinedInput,\n  InputAdornment,\n} from \"@mui/material\";\nimport AccountBalanceIcon from \"@mui/icons-material/AccountBalance\";\nimport AddIcon from \"@mui/icons-material/Add\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\nimport SwitchAccountIcon from \"@mui/icons-material/SwitchAccount\";\nimport { GridRowSelectionModel } from \"@mui/x-data-grid\";\nimport { pink } from \"@mui/material/colors\";\nimport { AuthContext } from \"../../../components/AuthContext\";\nimport { useMutation, useQuery, useQueryClient } from \"react-query\";\nimport Swal from \"sweetalert2\";\nimport { wait } from \"../../../lib/wait\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport SaveIcon from \"@mui/icons-material/Save\";\nimport PersonSearchIcon from \"@mui/icons-material/PersonSearch\";\nimport { LoadingButton } from \"@mui/lab\";\nimport useQueryModalTable from \"../../../hooks/useQueryModalTable\";\nimport Table from \"../../../components/Table\";\nimport {\n  codeCondfirmationAlert,\n  saveCondfirmationAlert,\n} from \"../../../lib/confirmationAlert\";\n\nconst initialState = {\n  Account_No: \"\",\n  Account_Name: \"\",\n  Account_Type: \"\",\n  Desc: \"\",\n  Option: 0,\n  Account_ID: \"\",\n  Inactive: false,\n  IDNo: \"\",\n  Account_ID_Name: \"\",\n  Identity: \"\",\n  BankName: \"\",\n  Auto: \"\",\n  mode: \"\",\n  search: \"\",\n};\nexport const reducer = (state: any, action: any) => {\n  switch (action.type) {\n    case \"UPDATE_FIELD\":\n      return {\n        ...state,\n        [action.field]: action.value,\n      };\n    default:\n      return state;\n  }\n};\nexport const bankAccountColumn = [\n  { field: \"Auto\", headerName: \"Auto\", hide: true },\n  { field: \"Account_No\", headerName: \"Account No#\", width: 300 },\n  { field: \"Account_Name\", headerName: \"Account Name\", flex: 1 },\n  { field: \"Account_Type\", headerName: \"Account Type\", flex: 1 },\n  { field: \"Desc\", headerName: \"Bank Name\", flex: 1 },\n  { field: \"Account_ID\", headerName: \"Account ID\", flex: 1 },\n  { field: \"Inactive\", headerName: \"Inactive\", flex: 1 },\n  { field: \"IDNo\", headerName: \"ID No\", flex: 1 },\n  { field: \"Identity\", headerName: \"Identity\", flex: 1 },\n];\nexport const chartColumn = [\n  { field: \"Acct_Code\", headerName: \"Code\", flex: 1 },\n  { field: \"Acct_Title\", headerName: \"Title\", flex: 1 },\n  { field: \"Short\", headerName: \"Short Name\", flex: 1 },\n];\nexport const bannkColumn = [\n  { field: \"Bank_Code\", headerName: \"Code\", flex: 1 },\n  { field: \"Bank\", headerName: \"Bank Name\", flex: 1 },\n];\nexport const clientColumn = [\n  { field: \"entry_client_id\", headerName: \"ID\", width: 130 },\n  { field: \"fullname\", headerName: \"First Name\", flex: 1 },\n  {\n    field: \"entry_type\",\n    headerName: \"ID Type\",\n    width: 150,\n  },\n];\n\nexport default function BankAccount() {\n  const refParent = useRef<HTMLDivElement>(null);\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const { myAxios, user } = useContext(AuthContext);\n  const [rows, setRows] = useState<GridRowSelectionModel>([]);\n  const clientSearchInput = useRef<HTMLInputElement>(null);\n  const queryClient = useQueryClient();\n  const table = useRef<any>(null);\n  const { isLoading, refetch: refetchBankAccountSearch } = useQuery({\n    queryKey: \"bank-account-trans\",\n    queryFn: async () =>\n      await myAxios.get(\n        `/reference/get-bank-account?bankAccountSearch=${state.search}`,\n        {\n          headers: {\n            Authorization: `Bearer ${user?.accessToken}`,\n          },\n        }\n      ),\n    onSuccess: (res) => {\n      setRows((res as any)?.data.bankAccount);\n    },\n  });\n  const { mutate: mutateAdd, isLoading: loadingAdd } = useMutation({\n    mutationKey: \"bank-account-actions\",\n    mutationFn: async (variables: any) => {\n      return await myAxios.post(\"/reference/add-bank-account\", variables, {\n        headers: {\n          Authorization: `Bearer ${user?.accessToken}`,\n        },\n      });\n    },\n    onSuccess,\n  });\n  const { mutate: mutateEdit, isLoading: loadingEdit } = useMutation({\n    mutationKey: \"bank-account-actions\",\n    mutationFn: async (variables: any) => {\n      return await myAxios.post(\"/reference/update-bank-account\", variables, {\n        headers: {\n          Authorization: `Bearer ${user?.accessToken}`,\n        },\n      });\n    },\n    onSuccess,\n  });\n  const { mutate: mutateDelete, isLoading: loadingDelete } = useMutation({\n    mutationKey: \"bank-account-actions\",\n    mutationFn: async (variables: any) => {\n      return await myAxios.post(\"/reference/delete-bank-account\", variables, {\n        headers: {\n          Authorization: `Bearer ${user?.accessToken}`,\n        },\n      });\n    },\n    onSuccess,\n  });\n  const {\n    ModalComponent: ModalBank,\n    openModal: openBank,\n    isLoading: isLoadingBank,\n    closeModal: closeBank,\n  } = useQueryModalTable({\n    link: {\n      url: \"/reference/get-banks\",\n      queryUrlName: \"bankSearch\",\n    },\n    columns: bannkColumn,\n    queryKey: \"get-banks\",\n    uniqueId: \"Bank_Code\",\n    responseDataKey: \"bank\",\n    onSelected: (selectedRowData) => {\n      dispatch({\n        type: \"UPDATE_FIELD\",\n        field: \"BankName\",\n        value: selectedRowData[0].Bank,\n      });\n      dispatch({\n        type: \"UPDATE_FIELD\",\n        field: \"Desc\",\n        value: selectedRowData[0].Bank_Code,\n      });\n      closeBank();\n    },\n    searchRef: clientSearchInput,\n  });\n  const {\n    ModalComponent: ModalChartAccount,\n    openModal: openChartAccount,\n    isLoading: isLoadingChartAccount,\n    closeModal: closeChartAccount,\n  } = useQueryModalTable({\n    link: {\n      url: \"/reference/get-chart-accounts\",\n      queryUrlName: \"chartAccountSearch\",\n    },\n    columns: chartColumn,\n    queryKey: \"get-chart-accounts\",\n    uniqueId: \"Acct_Code\",\n    responseDataKey: \"chartAccount\",\n    onSelected: (selectedRowData, data) => {\n      dispatch({\n        type: \"UPDATE_FIELD\",\n        field: \"Account_ID_Name\",\n        value: selectedRowData[0].Acct_Title,\n      });\n      dispatch({\n        type: \"UPDATE_FIELD\",\n        field: \"Account_ID\",\n        value: selectedRowData[0].Acct_Code,\n      });\n      closeChartAccount();\n    },\n    searchRef: clientSearchInput,\n  });\n  const {\n    ModalComponent: ModalSearchClient,\n    openModal: openSearchClient,\n    isLoading: isLoadingSearchClient,\n    closeModal: closeSearchClient,\n  } = useQueryModalTable({\n    link: {\n      url: \"/reference/search-client\",\n      queryUrlName: \"searchClientInput\",\n    },\n    columns: [\n      { field: \"IDNo\", headerName: \"ID No.\", width: 150 },\n      {\n        field: \"Name\",\n        headerName: \"Name\",\n        flex: 1,\n      },\n      {\n        field: \"ID\",\n        headerName: \"ID\",\n        hide: true,\n      },\n    ],\n    queryKey: \"search-client\",\n    uniqueId: \"ID\",\n    responseDataKey: \"client\",\n    onSelected: (selectedRowData, data) => {\n      dispatch({\n        type: \"UPDATE_FIELD\",\n        field: \"IDNo\",\n        value: selectedRowData[0].IDNo,\n      });\n      dispatch({\n        type: \"UPDATE_FIELD\",\n        field: \"Identity\",\n        value: selectedRowData[0].Name,\n      });\n      closeSearchClient();\n    },\n    searchRef: clientSearchInput,\n  });\n  const handleInputChange = (e: any) => {\n    const { name, value } = e.target;\n    dispatch({ type: \"UPDATE_FIELD\", field: name, value });\n  };\n  function handleOnSave(e: any) {\n    e.preventDefault();\n    if (state.Account_No === \"\") {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: \"Account No is Required Field\",\n        showConfirmButton: false,\n        timer: 1500,\n      });\n    }\n    if (state.Account_Name === \"\") {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: \"Account Name is Required Field\",\n        showConfirmButton: false,\n        timer: 1500,\n      });\n    }\n    if (state.Account_Type === \"\") {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: \"Account Type is Required Field\",\n        showConfirmButton: false,\n        timer: 1500,\n      });\n    }\n    if (state.Account_ID === \"\") {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: \"Account ID is Required Field\",\n        showConfirmButton: false,\n        timer: 1500,\n      });\n    }\n    if (state.BankName === \"\") {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: \"Bank is Required Field\",\n        showConfirmButton: false,\n        timer: 1500,\n      });\n    }\n    if (state.Identity === \"\") {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: \"Identity is Required Field\",\n        showConfirmButton: false,\n        timer: 1500,\n      });\n    }\n    if (state.Account_No.length >= 200) {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: \"Account No is too long\",\n        showConfirmButton: false,\n        timer: 1500,\n      });\n    }\n    if (state.Account_Name >= 200) {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: \"Account Name is too long\",\n        showConfirmButton: false,\n        timer: 1500,\n      });\n    }\n    if (state.Account_Type >= 200) {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: \"Account Type is too long\",\n        showConfirmButton: false,\n        timer: 1500,\n      });\n    }\n    if (state.Account_ID >= 200) {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: \"Account ID is too long\",\n        showConfirmButton: false,\n        timer: 1500,\n      });\n    }\n    if (state.BankName >= 200) {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: \"invalid Bank is too long\",\n        showConfirmButton: false,\n        timer: 1500,\n      });\n    }\n    if (state.Identity >= 200) {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: \"invalid identity is too long\",\n        showConfirmButton: false,\n        timer: 1500,\n      });\n    }\n    if (state.mode === \"edit\") {\n      codeCondfirmationAlert({\n        isUpdate: true,\n        cb: (userCodeConfirmation) => {\n          mutateEdit({ ...state, userCodeConfirmation });\n        },\n      });\n    } else {\n      saveCondfirmationAlert({\n        isConfirm: () => {\n          mutateAdd(state);\n        },\n      });\n    }\n  }\n  function resetModule() {\n    setNewStateValue(dispatch, initialState);\n    table.current?.removeSelection();\n    wait(500).then(() => {\n      refetchBankAccountSearch();\n    });\n  }\n  function onSuccess(res: any) {\n    if (res.data.success) {\n      queryClient.invalidateQueries(\"bank-account-trans\");\n      resetModule();\n      return Swal.fire({\n        position: \"center\",\n        icon: \"success\",\n        title: res.data.message,\n        showConfirmButton: false,\n        timer: 1500,\n      });\n    }\n\n    Swal.fire({\n      position: \"center\",\n      icon: \"error\",\n      title: res.data.message,\n      showConfirmButton: false,\n      timer: 1500,\n    });\n  }\n\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        flexDirection: \"column\",\n        width: \"100%\",\n        height: \"100%\",\n        flex: 1,\n      }}\n    >\n      <Box\n        sx={(theme) => ({\n          display: \"flex\",\n          alignItems: \"center\",\n          columnGap: \"20px\",\n          [theme.breakpoints.down(\"sm\")]: {\n            flexDirection: \"column\",\n            alignItems: \"flex-start\",\n            marginBottom: \"15px\",\n          },\n        })}\n      >\n        <div\n          style={{\n            marginTop: \"10px\",\n            marginBottom: \"12px\",\n            width: \"100%\",\n          }}\n        >\n          <TextField\n            label=\"Search\"\n            fullWidth\n            size=\"small\"\n            type=\"text\"\n            name=\"search\"\n            value={state.search}\n            onChange={handleInputChange}\n            InputProps={{\n              style: { height: \"27px\", fontSize: \"14px\" },\n            }}\n            sx={{\n              height: \"27px\",\n              \".MuiFormLabel-root\": { fontSize: \"14px\" },\n              \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n            }}\n            onKeyDown={(e) => {\n              if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n                e.preventDefault();\n                return refetchBankAccountSearch();\n              }\n            }}\n          />\n        </div>\n        <div\n          style={{\n            display: \"flex\",\n            alignItems: \"center\",\n            columnGap: \"20px\",\n          }}\n        >\n          <div\n            style={{\n              display: \"flex\",\n              alignItems: \"center\",\n              columnGap: \"5px\",\n            }}\n          >\n            {state.mode === \"\" && (\n              <Button\n                sx={{\n                  height: \"30px\",\n                  fontSize: \"11px\",\n                }}\n                variant=\"contained\"\n                startIcon={<AddIcon />}\n                id=\"entry-header-save-button\"\n                onClick={() => {\n                  handleInputChange({ target: { value: \"add\", name: \"mode\" } });\n                }}\n              >\n                New\n              </Button>\n            )}\n            <LoadingButton\n              sx={{\n                height: \"30px\",\n                fontSize: \"11px\",\n              }}\n              id=\"save-entry-header\"\n              color=\"primary\"\n              variant=\"contained\"\n              type=\"submit\"\n              onClick={handleOnSave}\n              startIcon={<SaveIcon />}\n              loading={loadingAdd || loadingEdit}\n              disabled={state.mode === \"\"}\n            >\n              Save\n            </LoadingButton>\n            {state.mode !== \"\" && (\n              <Button\n                sx={{\n                  height: \"30px\",\n                  fontSize: \"11px\",\n                }}\n                variant=\"contained\"\n                startIcon={<CloseIcon />}\n                color=\"error\"\n                onClick={() => {\n                  Swal.fire({\n                    title: \"Are you sure?\",\n                    text: \"You won't be able to revert this!\",\n                    icon: \"warning\",\n                    showCancelButton: true,\n                    confirmButtonColor: \"#3085d6\",\n                    cancelButtonColor: \"#d33\",\n                    confirmButtonText: \"Yes, cancel it!\",\n                  }).then((result) => {\n                    if (result.isConfirmed) {\n                      resetModule();\n                    }\n                  });\n                }}\n              >\n                Cancel\n              </Button>\n            )}\n\n            <LoadingButton\n              id=\"save-entry-header\"\n              variant=\"contained\"\n              loading={loadingDelete}\n              sx={{\n                height: \"30px\",\n                fontSize: \"11px\",\n                backgroundColor: pink[500],\n                \"&:hover\": {\n                  backgroundColor: pink[600],\n                },\n              }}\n              startIcon={<DeleteIcon />}\n              disabled={state.mode !== \"edit\"}\n              onClick={() => {\n                codeCondfirmationAlert({\n                  isUpdate: false,\n                  cb: (userCodeConfirmation) => {\n                    mutateDelete({\n                      Auto: state.Auto,\n                      userCodeConfirmation,\n                    });\n                  },\n                });\n              }}\n            >\n              Delete\n            </LoadingButton>\n          </div>\n        </div>\n      </Box>\n      <form\n        onKeyDown={(e) => {\n          if (\n            [\"Account_ID_Name\", \"BankName\", \"IDNo\"].includes(\n              (e.target as any).name\n            )\n          ) {\n            if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n              e.preventDefault();\n            }\n            return;\n          }\n          if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n            e.preventDefault();\n            handleOnSave(e);\n            return;\n          }\n        }}\n      >\n        <Box\n          sx={(theme) => ({\n            width: \"100%\",\n            display: \"flex\",\n            columnGap: \"15px\",\n            [theme.breakpoints.down(\"sm\")]: {\n              flexDirection: \"column\",\n              rowGap: \"10px\",\n            },\n          })}\n        >\n          {!isLoading && (\n            <React.Fragment>\n              <TextField\n                required\n                variant=\"outlined\"\n                size=\"small\"\n                label=\"Account No\"\n                name=\"Account_No\"\n                value={state.Account_No}\n                onChange={handleInputChange}\n                InputProps={{\n                  style: { height: \"27px\", fontSize: \"14px\" },\n                }}\n                sx={{\n                  flex: 1,\n                  height: \"27px\",\n                  \".MuiFormLabel-root\": { fontSize: \"14px\" },\n                  \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n                }}\n                disabled={state.mode === \"\" || state.mode === \"edit\"}\n              />\n              <TextField\n                required\n                variant=\"outlined\"\n                size=\"small\"\n                label=\"Account Name\"\n                name=\"Account_Name\"\n                value={state.Account_Name}\n                onChange={handleInputChange}\n                InputProps={{\n                  style: { height: \"27px\", fontSize: \"14px\" },\n                }}\n                sx={{\n                  flex: 1,\n                  height: \"27px\",\n                  \".MuiFormLabel-root\": { fontSize: \"14px\" },\n                  \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n                }}\n                disabled={state.mode === \"\"}\n              />\n              <TextField\n                required\n                variant=\"outlined\"\n                size=\"small\"\n                label=\"Account Type\"\n                name=\"Account_Type\"\n                value={state.Account_Type}\n                onChange={handleInputChange}\n                InputProps={{\n                  style: { height: \"27px\", fontSize: \"14px\" },\n                }}\n                sx={{\n                  flex: 1,\n                  height: \"27px\",\n                  \".MuiFormLabel-root\": { fontSize: \"14px\" },\n                  \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n                }}\n                disabled={state.mode === \"\"}\n              />\n              <FormControlLabel\n                sx={{\n                  \".MuiTypography-root\": {\n                    fontSize: \"14px\",\n                  },\n                  minWidth: \"200px\",\n                }}\n                disabled={state.mode === \"\"}\n                control={\n                  <Checkbox\n                    size=\"small\"\n                    name=\"Inactive\"\n                    checked={state.Inactive}\n                    onChange={(e) => {\n                      dispatch({\n                        type: \"UPDATE_FIELD\",\n                        field: \"Inactive\",\n                        value: e.target.checked,\n                      });\n                    }}\n                  />\n                }\n                label=\"Mark as Inactive\"\n              />\n            </React.Fragment>\n          )}\n        </Box>\n        <br />\n        <Box\n          sx={(theme) => ({\n            width: \"100%\",\n            display: \"flex\",\n            columnGap: \"15px\",\n            gap: \"20px\",\n            padding: \"15px\",\n            border: \"1px solid #cbd5e1\",\n            borderRadius: \"5px\",\n            position: \"relative\",\n            [theme.breakpoints.down(\"sm\")]: {\n              flexDirection: \"column\",\n              rowGap: \"10px\",\n            },\n          })}\n        >\n          <span\n            style={{\n              position: \"absolute\",\n              top: \"-12px\",\n              left: \"20px\",\n              background: \"white\",\n              padding: \"0 5px\",\n            }}\n          >\n            Deposit Slip\n          </span>\n          {isLoadingBank ? (\n            <LoadingButton loading={isLoadingBank} />\n          ) : (\n            <FormControl\n              disabled={state.mode === \"\"}\n              variant=\"outlined\"\n              size=\"small\"\n              sx={{\n                flex: 1,\n                \".MuiFormLabel-root\": {\n                  fontSize: \"14px\",\n                  background: \"white\",\n                  zIndex: 99,\n                  padding: \"0 3px\",\n                },\n                \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n              }}\n            >\n              <InputLabel htmlFor=\"Bank\">Bank</InputLabel>\n              <OutlinedInput\n                disabled={state.mode === \"\"}\n                sx={{\n                  height: \"27px\",\n                  fontSize: \"14px\",\n                }}\n                fullWidth\n                label=\"Bank\"\n                name=\"BankName\"\n                value={state.BankName}\n                onChange={handleInputChange}\n                onKeyDown={(e) => {\n                  if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n                    e.preventDefault();\n                    return openBank(state.BankName);\n                  }\n                }}\n                id=\"Bank\"\n                endAdornment={\n                  <InputAdornment position=\"end\">\n                    <IconButton\n                      disabled={state.mode === \"\"}\n                      color=\"secondary\"\n                      edge=\"end\"\n                      onClick={() => {\n                        openBank(state.BankName);\n                      }}\n                    >\n                      <AccountBalanceIcon />\n                    </IconButton>\n                  </InputAdornment>\n                }\n              />\n            </FormControl>\n          )}\n          {isLoadingChartAccount ? (\n            <LoadingButton loading={isLoadingChartAccount} />\n          ) : (\n            <FormControl\n              disabled={state.mode === \"\"}\n              variant=\"outlined\"\n              size=\"small\"\n              sx={{\n                flex: 1,\n                \".MuiFormLabel-root\": {\n                  fontSize: \"14px\",\n                  background: \"white\",\n                  zIndex: 99,\n                  padding: \"0 3px\",\n                },\n                \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n              }}\n            >\n              <InputLabel htmlFor=\"account\">Account</InputLabel>\n              <OutlinedInput\n                disabled={state.mode === \"\"}\n                sx={{\n                  height: \"27px\",\n                  fontSize: \"14px\",\n                }}\n                fullWidth\n                label=\"Account\"\n                name=\"Account_ID_Name\"\n                value={state.Account_ID_Name}\n                onChange={handleInputChange}\n                onKeyDown={(e) => {\n                  if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n                    e.preventDefault();\n                    return openChartAccount(state.Account_ID_Name);\n                  }\n                }}\n                id=\"account\"\n                endAdornment={\n                  <InputAdornment position=\"end\">\n                    <IconButton\n                      disabled={state.mode === \"\"}\n                      color=\"secondary\"\n                      edge=\"end\"\n                      onClick={() => {\n                        openChartAccount(state.Account_ID_Name);\n                      }}\n                    >\n                      <SwitchAccountIcon />\n                    </IconButton>\n                  </InputAdornment>\n                }\n              />\n            </FormControl>\n          )}\n          {isLoadingSearchClient ? (\n            <LoadingButton loading={isLoadingSearchClient} />\n          ) : (\n            <FormControl\n              disabled={state.mode === \"\"}\n              variant=\"outlined\"\n              size=\"small\"\n              sx={{\n                flex: 1,\n                \".MuiFormLabel-root\": {\n                  fontSize: \"14px\",\n                  background: \"white\",\n                  zIndex: 99,\n                  padding: \"0 3px\",\n                },\n                \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n              }}\n            >\n              <InputLabel htmlFor=\"ID-No\">ID No</InputLabel>\n              <OutlinedInput\n                disabled={state.mode === \"\"}\n                sx={{\n                  height: \"27px\",\n                  fontSize: \"14px\",\n                }}\n                fullWidth\n                label=\"ID No\"\n                name=\"IDNo\"\n                value={state.IDNo}\n                onChange={handleInputChange}\n                onKeyDown={(e) => {\n                  if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n                    e.preventDefault();\n                    return openSearchClient(state.IDNo);\n                  }\n                }}\n                id=\"ID-No\"\n                endAdornment={\n                  <InputAdornment position=\"end\">\n                    <IconButton\n                      disabled={state.mode === \"\"}\n                      aria-label=\"search-client\"\n                      color=\"secondary\"\n                      edge=\"end\"\n                      onClick={() => {\n                        openSearchClient(state.IDNo);\n                      }}\n                    >\n                      <PersonSearchIcon />\n                    </IconButton>\n                  </InputAdornment>\n                }\n              />\n            </FormControl>\n          )}\n          <TextField\n            disabled={state.mode === \"\"}\n            required\n            variant=\"outlined\"\n            size=\"small\"\n            label=\"Identity\"\n            name=\"Identity\"\n            value={state.Identity}\n            onChange={handleInputChange}\n            InputProps={{\n              readOnly: true,\n              style: { height: \"27px\", fontSize: \"14px\" },\n            }}\n            sx={{\n              flex: 1,\n              height: \"27px\",\n              \".MuiFormLabel-root\": { fontSize: \"14px\" },\n              \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n            }}\n          />\n        </Box>\n      </form>\n      <div\n        ref={refParent}\n        style={{\n          marginTop: \"10px\",\n          width: \"100%\",\n          position: \"relative\",\n          flex: 1,\n        }}\n      >\n        <Box\n          style={{\n            height: `${\n              refParent.current?.getBoundingClientRect().height as number\n            }px`,\n            width: \"100%\",\n            overflowX: \"scroll\",\n            position: \"absolute\",\n          }}\n        >\n          <Table\n            ref={table}\n            isLoading={isLoading || loadingAdd || loadingEdit || loadingDelete}\n            columns={bankAccountColumn}\n            rows={rows}\n            table_id={\"Auto\"}\n            isSingleSelection={true}\n            isRowFreeze={false}\n            dataSelection={(selection, data, code) => {\n              const rowSelected = data.filter(\n                (item: any) => item.Auto === selection[0]\n              )[0];\n              if (rowSelected === undefined || rowSelected.length <= 0) {\n                setNewStateValue(dispatch, initialState);\n                handleInputChange({ target: { value: \"\", name: \"mode\" } });\n                return;\n              }\n              handleInputChange({ target: { value: \"edit\", name: \"mode\" } });\n\n              if (code === \"Delete\" || code === \"Backspace\") {\n                codeCondfirmationAlert({\n                  isUpdate: false,\n                  cb: (userCodeConfirmation) => {\n                    mutateDelete({\n                      Auto: rowSelected.Auto,\n                      userCodeConfirmation,\n                    });\n                  },\n                });\n\n                return;\n              }\n\n              const newState = {\n                ...rowSelected,\n                Inactive: rowSelected.Inactive !== \"NO\",\n              };\n              console.log(newState);\n              setNewStateValue(dispatch, newState);\n            }}\n          />\n        </Box>\n      </div>\n      {ModalSearchClient}\n      {ModalChartAccount}\n      {ModalBank}\n    </div>\n  );\n}\nexport function setNewStateValue(dispatch: any, obj: any) {\n  Object.entries(obj).forEach(([field, value]) => {\n    dispatch({ type: \"UPDATE_FIELD\", field, value });\n  });\n}\n","import { useContext, useState } from \"react\";\nimport { useQuery } from \"react-query\";\nimport { AuthContext, User } from \"../components/AuthContext\";\nimport {\n  GridRowSelectionModel,\n  GridCellParams,\n  GridTreeNode,\n} from \"@mui/x-data-grid\";\nimport ModalWithTable from \"../components/ModalWithTable\";\nimport { flushSync } from \"react-dom\";\nimport { AxiosResponse, AxiosInstance } from \"axios\";\nimport { GridRowParams } from \"@mui/x-data-grid\";\ninterface QueryModalTableParamsType {\n  link?: {\n    url: string;\n    queryUrlName: string;\n  };\n  uniqueId: string;\n  queryKey: string;\n  responseDataKey: string;\n  columns: Array<any>;\n  onSelected?: (selectedRowData: Array<any>, data: Array<any>) => void;\n  onRemoveSelected?: (data: Array<any>) => void;\n  onSuccess?: (data: any) => void;\n  searchRef?: React.RefObject<HTMLInputElement>;\n  onCellKeyDown?: any;\n  onCloseFunction?: (search: any) => void;\n  CustomizeAxios?: (\n    myAxios: AxiosInstance,\n    user: User | null,\n    link: QueryModalTableParamsType[\"link\"],\n    search?: string\n  ) => Promise<AxiosResponse<any, any>>;\n  isRowSelectable?: ((params: GridRowParams<any>) => boolean) | undefined;\n  getCellClassName?:\n    | ((params: GridCellParams<any, any, any, GridTreeNode>) => string)\n    | undefined;\n}\n\nasync function CustomizeAxiosFunc(\n  myAxios: AxiosInstance,\n  user: User | null,\n  link: QueryModalTableParamsType[\"link\"],\n  search: string = \"\"\n) {\n  return myAxios.get(`${link?.url}?${link?.queryUrlName}=${search}`, {\n    headers: {\n      Authorization: `Bearer ${user?.accessToken}`,\n    },\n  });\n}\n\nconst useQueryModalTable = ({\n  link,\n  uniqueId,\n  queryKey,\n  responseDataKey,\n  columns,\n  onSelected = () => {},\n  onRemoveSelected = () => {},\n  onSuccess = () => {},\n  searchRef,\n  onCellKeyDown,\n  onCloseFunction = () => {},\n  CustomizeAxios = CustomizeAxiosFunc,\n  isRowSelectable,\n  getCellClassName,\n}: QueryModalTableParamsType) => {\n  const { myAxios, user } = useContext(AuthContext);\n  const [show, setShowModal] = useState(false);\n  const [rows, setRows] = useState<GridRowSelectionModel>([]);\n  async function customizeAxiostool(search: string = \"\") {\n    return await CustomizeAxios(myAxios, user, link, search);\n  }\n  const { isLoading, refetch } = useQuery({\n    queryKey: queryKey,\n    queryFn: async () => await customizeAxiostool(),\n    onSuccess: (res) => {\n      const response = res as any;\n      setRows(response.data[responseDataKey]);\n      onSuccess(response);\n    },\n    refetchOnWindowFocus: false,\n  });\n\n  const openModal = (search: string = \"\") => {\n    flushSync(() => {\n      setShowModal(true);\n    });\n    if (searchRef?.current) {\n      searchRef.current.value = search;\n      customizeAxiostool(search).then((res: any) => {\n        if (!res?.data.success) {\n          return alert(`Error : ${res?.data.message}`);\n        }\n        const response = res as any;\n        setRows(response.data[responseDataKey]);\n        if (searchRef?.current) searchRef.current.focus();\n      });\n    }\n  };\n\n  const closeModal = () => {\n    setShowModal(false);\n    if (onCloseFunction) {\n      onCloseFunction(searchRef?.current?.value);\n    }\n  };\n\n  const ModalComponent = (\n    <ModalWithTable\n      getCellClassName={getCellClassName}\n      searchRef={searchRef}\n      showModal={show}\n      onCloseModal={() => {\n        setShowModal(false);\n        if (onCloseFunction) {\n          onCloseFunction(searchRef?.current?.value);\n        }\n      }}\n      onClickCloseIcon={() => {\n        setShowModal(false);\n        if (onCloseFunction) {\n          onCloseFunction(searchRef?.current?.value);\n        }\n      }}\n      searchOnChange={(e) => {\n        // myAxios\n        //   .get(`${link.url}?${link.queryUrlName}=${e.target.value}`, {\n        //     headers: {\n        //       Authorization: `Bearer ${user?.accessToken}`,\n        //     },\n        //   })\n        //   .then((res: any) => {\n        //     if (!res?.data.success) {\n        //       return alert(`Error : ${res?.data.message}`);\n        //     }\n        //     const response = res as any;\n        //     setRows(response.data[responseDataKey]);\n        //   });\n      }}\n      onSearchKeyEnter={(value) => {\n        customizeAxiostool(value).then((res: any) => {\n          if (!res?.data.success) {\n            return alert(`Error : ${res?.data.message}`);\n          }\n          const response = res as any;\n          setRows(response.data[responseDataKey]);\n        });\n      }}\n      onCellKeyDown={onCellKeyDown}\n      height={300}\n      isLoading={isLoading}\n      queryKey={queryKey}\n      columns={columns}\n      onSelectionChange={(rowSelectionModel, data) => {\n        if (rowSelectionModel.length <= 0) {\n          return onRemoveSelected(data);\n        }\n        const selectedIDs = new Set(rowSelectionModel);\n        const selectedRowData = data.filter((row: any) => {\n          return selectedIDs.has(row[uniqueId].toString());\n        });\n        if (selectedRowData.length <= 0) return;\n        onSelected(selectedRowData, data);\n      }}\n      id={uniqueId}\n      rows={rows}\n      setRows={setRows}\n      isRowSelectable={isRowSelectable}\n    />\n  );\n\n  return {\n    show,\n    rows,\n    isLoading,\n    openModal,\n    closeModal,\n    ModalComponent,\n    refetch,\n  };\n};\n\nexport default useQueryModalTable;\n","import Swal from \"sweetalert2\";\n\nexport function codeCondfirmationAlert(props: {\n  cb: (userCodeConfirmation: string) => void;\n  isUpdate: boolean;\n  isConfirm?: () => void;\n  isDeclined?: () => void;\n  text?: string;\n}) {\n  Swal.fire({\n    title: `Are you sure!`,\n    html: props?.text\n      ? props?.text\n      : props.isUpdate\n      ? `Are you sure you want to make this change?`\n      : \"Are you sure you want to delete this?\",\n    icon: \"warning\",\n    input: \"text\",\n    inputAttributes: {\n      autocapitalize: \"off\",\n    },\n    showCancelButton: true,\n    confirmButtonText: \"Save\",\n    confirmButtonColor: \"green\",\n    showLoaderOnConfirm: true,\n    preConfirm: async (userCodeConfirmation) => {\n      try {\n        props.cb(userCodeConfirmation);\n      } catch (error) {\n        Swal.showValidationMessage(`\n            Request failed: ${error}\n          `);\n      }\n    },\n    allowOutsideClick: () => !Swal.isLoading(),\n  }).then((result) => {\n    if (result.isConfirmed) {\n      if (props.isConfirm) {\n        return props.isConfirm();\n      }\n    }\n    if (props.isDeclined) {\n      props.isDeclined();\n    }\n  });\n}\n\nexport function saveCondfirmationAlert(props: {\n  isConfirm?: () => void;\n  isDeclined?: () => void;\n  text?: string;\n}) {\n  Swal.fire({\n    title: \"Are you sure?\",\n    text: props?.text ? props?.text : \"Do you want to proceed with saving?\",\n    icon: \"warning\",\n    showCancelButton: true,\n    confirmButtonColor: \"#3085d6\",\n    cancelButtonColor: \"#d33\",\n    confirmButtonText: \"Yes, save it!\",\n  }).then((result) => {\n    if (result.isConfirmed) {\n      if (props.isConfirm) {\n        return props.isConfirm();\n      }\n    }\n    if (props.isDeclined) {\n      props.isDeclined();\n    }\n  });\n}\n","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\"\n}), 'Add');\nexports.default = _default;","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\"\n}), 'Delete');\nexports.default = _default;","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)([/*#__PURE__*/(0, _jsxRuntime.jsx)(\"circle\", {\n  cx: \"10\",\n  cy: \"8\",\n  r: \"4\"\n}, \"0\"), /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M10.35 14.01C7.62 13.91 2 15.27 2 18v2h9.54c-2.47-2.76-1.23-5.89-1.19-5.99zm9.08 4.01c.36-.59.57-1.28.57-2.02 0-2.21-1.79-4-4-4s-4 1.79-4 4 1.79 4 4 4c.74 0 1.43-.22 2.02-.57L20.59 22 22 20.59l-2.57-2.57zM16 18c-1.1 0-2-.9-2-2s.9-2 2-2 2 .9 2 2-.9 2-2 2z\"\n}, \"1\")], 'PersonSearch');\nexports.default = _default;","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M17 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V7l-4-4zm-5 16c-1.66 0-3-1.34-3-3s1.34-3 3-3 3 1.34 3 3-1.34 3-3 3zm3-10H5V5h10v4z\"\n}), 'Save');\nexports.default = _default;","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z\"\n}), 'Search');\nexports.default = _default;","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M4 6H2v14c0 1.1.9 2 2 2h14v-2H4V6zm16-4H8c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2zm-6 2c1.66 0 3 1.34 3 3s-1.34 3-3 3-3-1.34-3-3 1.34-3 3-3zm6 12H8v-1.5c0-1.99 4-3 6-3s6 1.01 6 3V16z\"\n}), 'SwitchAccount');\nexports.default = _default;","const pink = {\n  50: '#fce4ec',\n  100: '#f8bbd0',\n  200: '#f48fb1',\n  300: '#f06292',\n  400: '#ec407a',\n  500: '#e91e63',\n  600: '#d81b60',\n  700: '#c2185b',\n  800: '#ad1457',\n  900: '#880e4f',\n  A100: '#ff80ab',\n  A200: '#ff4081',\n  A400: '#f50057',\n  A700: '#c51162'\n};\nexport default pink;","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bigint: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is');\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n"],"names":["style","position","top","left","transform","width","bgcolor","boxShadow","p","heigth","ModalWithTable","_ref","height","isLoading","columns","queryKey","onSelectionChange","rows","setRows","id","onCloseModal","showModal","onClickCloseIcon","searchOnChange","_ref$title","title","searchRef","_ref$onSearchKeyEnter","onCellKeyDown","onSearchKeyEnter","isRowSelectable","getCellClassName","mainId","generateRandomClass","_jsx","Modal","open","onClose","children","_jsxs","Box","sx","Typography","variant","component","mb","TextField","size","label","fullWidth","onChange","InputProps","inputRef","fontSize","endAdornment","InputAdornment","IconButton","onClick","_searchRef$current","current","value","edge","SearchIcon","type","onKeyDown","e","_searchRef$current2","code","preventDefault","keyBoardSelectionTable","marginBottom","className","concat","Table","isSingleSelection","isRowFreeze","dataSelection","selection","data","table_id","right","color","CloseIcon","Math","floor","random","el","_rows$","document","querySelectorAll","classList","add","firstRowParent","querySelector","firstInput","focus","event","MouseEvent","bubbles","cancelable","view","window","dispatchEvent","addEventListener","es","key","remove","keyBoardUpDown","forEach","idx","_rows$idx","_rows","_rows$idx2","_rows2","length","TableContext","createContext","rowSelectionModel","footerChildren","footerPaginationPosition","showFooterSelectedCount","forwardRef","ref","_ref$CustomFooterComp","CustomFooterComponent","DefaultooterComponent","_ref$checkboxSelectio","checkboxSelection","_ref$footerChildren","_ref$footerPagination","_ref$showFooterSelect","_useState","useState","_useState2","_slicedToArray","selectedRows","setSelectedRows","useImperativeHandle","removeSelection","getSelectedRows","filter","item","includes","freezeArray","Provider","DataGrid","slots","loadingOverlay","LinearProgress","footer","initialState","pagination","paginationModel","pageSize","loading","getRowId","row","col","hide","showCellVerticalBorder","showColumnVerticalBorder","rowHeight","columnHeaderHeight","pageSizeOptions","_objectSpread","fill","background","padding","display","fontWeight","onRowSelectionModelChange","selectionSet","Set","s","has","__","rowNode","_toConsumableArray","disableVirtualization","Pagination","_ref2","page","onPageChange","apiRef","useGridApiContext","pageCount","useGridSelector","gridPageCountSelector","MuiPagination","count","newPage","CustomPagination","props","GridPagination","ActionsComponent","_useContext","useContext","columnGap","justifyContent","px","alignItems","flexDirection","flex","Account_No","Account_Name","Account_Type","Desc","Option","Account_ID","Inactive","IDNo","Account_ID_Name","Identity","BankName","Auto","mode","search","reducer","state","action","_defineProperty","field","bankAccountColumn","headerName","chartColumn","bannkColumn","clientColumn","BankAccount","_queryFn","_mutationFn","_mutationFn2","_mutationFn3","_refParent$current","refParent","useRef","_useReducer","useReducer","_useReducer2","dispatch","AuthContext","myAxios","user","clientSearchInput","queryClient","useQueryClient","table","_useQuery","useQuery","queryFn","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","get","headers","Authorization","accessToken","abrupt","sent","stop","apply","arguments","onSuccess","res","bankAccount","refetchBankAccountSearch","refetch","_useMutation","useMutation","mutationKey","mutationFn","_x","_callee2","variables","_context2","post","mutateAdd","mutate","loadingAdd","_useMutation2","_x2","_callee3","_context3","mutateEdit","loadingEdit","_useMutation3","_x3","_callee4","_context4","mutateDelete","loadingDelete","_useQueryModalTable","useQueryModalTable","link","url","queryUrlName","uniqueId","responseDataKey","onSelected","selectedRowData","Bank","Bank_Code","closeBank","ModalBank","ModalComponent","openBank","openModal","isLoadingBank","closeModal","_useQueryModalTable2","Acct_Title","Acct_Code","closeChartAccount","ModalChartAccount","openChartAccount","isLoadingChartAccount","_useQueryModalTable3","Name","closeSearchClient","ModalSearchClient","openSearchClient","isLoadingSearchClient","handleInputChange","_e$target","target","name","handleOnSave","Swal","icon","showConfirmButton","timer","codeCondfirmationAlert","isUpdate","cb","userCodeConfirmation","saveCondfirmationAlert","isConfirm","resetModule","_table$current","setNewStateValue","wait","then","success","invalidateQueries","message","theme","breakpoints","down","marginTop","Button","startIcon","AddIcon","LoadingButton","SaveIcon","disabled","text","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","result","isConfirmed","backgroundColor","pink","DeleteIcon","rowGap","React","required","FormControlLabel","minWidth","control","Checkbox","checked","gap","border","borderRadius","FormControl","zIndex","InputLabel","htmlFor","OutlinedInput","AccountBalanceIcon","SwitchAccountIcon","PersonSearchIcon","readOnly","getBoundingClientRect","overflowX","rowSelected","undefined","newState","console","log","obj","Object","entries","_ref4","_ref5","CustomizeAxiosFunc","_CustomizeAxiosFunc","_args","_customizeAxiostool","_ref$onSelected","_ref$onRemoveSelected","onRemoveSelected","_ref$onSuccess","_ref$onCloseFunction","onCloseFunction","_ref$CustomizeAxios","CustomizeAxios","show","setShowModal","_useState3","_useState4","customizeAxiostool","_args2","response","refetchOnWindowFocus","flushSync","alert","_searchRef$current3","selectedIDs","toString","_preConfirm","html","input","inputAttributes","autocapitalize","showLoaderOnConfirm","preConfirm","error","allowOutsideClick","isDeclined","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d","cx","cy","r","A100","A200","A400","A700","ReactPropTypesSecret","emptyFunction","emptyFunctionWithReset","resetWarningCache","module","shim","propName","componentName","location","propFullName","secret","err","Error","getShim","isRequired","ReactPropTypes","array","bigint","bool","func","number","object","string","symbol","any","arrayOf","element","elementType","instanceOf","node","objectOf","oneOf","oneOfType","shape","exact","checkPropTypes","PropTypes"],"sourceRoot":""}