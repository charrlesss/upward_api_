{"version":3,"file":"static/js/4906.ff11d781.chunk.js","mappings":"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","sources":["components/UpwardFields.tsx","components/UpwardTable.tsx"],"sourcesContent":["import { HtmlHTMLAttributes, InputHTMLAttributes, useId, ReactNode, useState } from \"react\";\nimport \"../style/design.css\";\n\n\ninterface TextInputProps {\n  input: InputHTMLAttributes<HTMLInputElement>;\n  label: HtmlHTMLAttributes<HTMLLabelElement>;\n  inputRef?: React.RefObject<HTMLInputElement>;\n  icon?: ReactNode; // New prop for the icon\n  iconPosition?: 'start' | 'end'; // New prop to choose icon position\n  onIconClick?: React.MouseEventHandler<HTMLDivElement> | undefined,\n  disableIcon?: boolean\n}\n\n\ninterface TextFormatedInputProps extends TextInputProps {\n  onChange?: React.ChangeEventHandler<HTMLInputElement> | undefined\n}\nexport function TextFormatedInput({\n  input,\n  label,\n  inputRef,\n  icon,\n  iconPosition = 'end', // Default position is 'end'\n  disableIcon = false,\n  onIconClick = (e) => { },\n  onChange = (e) => { }\n}: TextFormatedInputProps) {\n  // const [inputValue, setInputValue] = useState('');\n  const id = useId();\n\n\n  // Helper function to format numbers with commas\n  const formatNumber = (value: string) => {\n    if (!value) return value;\n\n    // Split the value into integer and decimal parts\n    const parts = value.split('.');\n\n    // Add commas to the integer part only\n    parts[0] = parts[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n\n    // Join the integer and decimal parts if decimal exists\n    return parts.join('.');\n  };\n\n  // Helper function to remove commas\n  const unformatNumber = (value: string) => {\n    return value.replace(/,/g, '');\n  };\n\n  // Function to ensure two decimal places\n  const ensureTwoDecimals = (value: string) => {\n    // If the value has no decimal part, append '.00'\n    if (!value.includes('.')) {\n      if(value === ''){\n        return   '0.00';\n      }else{\n\n        return value + '.00';\n      }\n    }\n\n    // If the value has one decimal place, append '0'\n    const parts = value.split('.');\n    if (parts[1].length === 1) {\n      return value + '0';\n    }\n\n    // If it already has two decimal places, return as is\n    return value;\n  };\n\n  const handleChange = (e: any) => {\n    let value = e.target.value;\n\n    // Remove commas for processing\n    value = unformatNumber(value);\n\n    // Allow only numbers, commas, and one decimal point\n    const regex = /^-?\\d+(,\\d{3})*(\\.\\d*)?$/;\n\n    // Remove commas for processing\n    value = unformatNumber(value);\n\n    // Check if the value is valid\n    if (value === '' || regex.test(value)) {\n      // Set the formatted value back in the input field\n\n      //setInputValue(formatNumber(value));\n      e.target.value = formatNumber(value)\n\n    }\n  };\n\n  const handleBlur = (e: any) => {\n    let value = unformatNumber(e.target.value);\n\n    // Ensure the value has two decimal places\n    value = ensureTwoDecimals(value);\n\n    // Set the value with commas and .00 (if needed)\n    // setInputValue(formatNumber(value));\n    e.target.value = formatNumber(value)\n  };\n\n  return (\n    <div\n      style={{\n        display: 'flex',\n        alignItems: 'center',\n        position: 'relative', // Enable absolute positioning for icon\n      }}\n    >\n      <label {...label} htmlFor={id}>\n        {label.title}\n      </label>\n      {icon && iconPosition === 'start' && (\n        <div style={{ position: 'absolute', left: '8px', zIndex: 1 }}>\n          {icon}\n        </div>\n      )}\n      <input\n        ref={inputRef}\n        id={id}\n        {...input}\n        type=\"text\"\n        style={{\n          height: '100%',\n          ...input.style,\n        }}\n        onChange={(e) => {\n          handleChange(e)\n          onChange(e)\n        }}\n        onBlur={(e) => {\n          handleBlur(e)\n        }}  // Add .00 on blur\n\n      />\n      {icon && iconPosition === 'end' && (\n        <div onClick={onIconClick}\n          style={{\n            position: 'absolute',\n            right: '2px',\n            top: \"50%\",\n            transform: \"translateY(-50%)\",\n            zIndex: 1,\n            cursor: disableIcon ? \"none\" : \"pointer\",\n            display: \"flex\",\n            alignItems: \"center\",\n            justifyContent: \"center\",\n            background: \"white\",\n            pointerEvents: disableIcon ? \"none\" : \"auto\"\n          }}>\n          {icon}\n        </div>\n\n      )\n      }\n    </div >\n  );\n}\n\n\nexport function TextInput({\n  input,\n  label,\n  inputRef,\n  icon,\n  iconPosition = 'end', // Default position is 'end'\n  disableIcon = false,\n  onIconClick = (e) => { }\n}: TextInputProps) {\n  const id = useId();\n\n  return (\n    <div\n      style={{\n        display: 'flex',\n        alignItems: 'center',\n        position: 'relative', // Enable absolute positioning for icon\n      }}\n    >\n      <label {...label} htmlFor={id}>\n        {label.title}\n      </label>\n      {icon && iconPosition === 'start' && (\n        <div style={{ position: 'absolute', left: '8px', zIndex: 1 }}>\n          {icon}\n        </div>\n      )}\n      <input\n        ref={inputRef}\n        id={id}\n        {...input}\n        style={{\n          height: '100%',\n          ...input.style,\n        }}\n      />\n      {icon && iconPosition === 'end' && (\n        <div onClick={onIconClick}\n          style={{\n            position: 'absolute',\n            right: '2px',\n            top: \"50%\",\n            transform: \"translateY(-50%)\",\n            zIndex: 1,\n            cursor: disableIcon ? \"none\" : \"pointer\",\n            display: \"flex\",\n            alignItems: \"center\",\n            justifyContent: \"center\",\n            background: \"white\",\n            pointerEvents: disableIcon ? \"none\" : \"auto\"\n          }}>\n          {icon}\n        </div>\n\n      )\n      }\n    </div >\n  );\n}\n\n\nexport function SelectInput({\n  select,\n  label,\n  selectRef,\n  datasource = [],\n  values = \"\",\n  display = \"\",\n}: {\n  selectRef?: React.RefObject<HTMLSelectElement>;\n  labelRef?: React.RefObject<HTMLLabelElement>;\n  select: InputHTMLAttributes<HTMLSelectElement>;\n  label: HtmlHTMLAttributes<HTMLLabelElement>;\n  datasource: Array<any>;\n  values: string;\n  display: string;\n}) {\n  const id = useId();\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        height: \"18px\",\n        alignItems: \"center\",\n      }}\n    >\n      <label {...label} htmlFor={id}>\n        {label.title}\n      </label>\n      <select\n        {...select}\n        ref={selectRef}\n        className=\"select\"\n        style={{\n          height: \"18px\",\n          ...select.style,\n        }}\n      >\n        {datasource.map((itm, idx) => {\n          return (\n            <option key={idx} value={itm[values]}>\n              {itm[display]}\n            </option>\n          );\n        })}\n      </select>\n    </div>\n  );\n}\n\nexport function ButtonField({\n  buttonRetRef,\n  button,\n  tooltipText = \"\",\n  children,\n  disabled = false,\n}: {\n  buttonRetRef?: React.RefObject<HTMLButtonElement>;\n  button: HtmlHTMLAttributes<HTMLButtonElement>;\n  tooltipText: string;\n  children: React.ReactNode;\n  disabled?: boolean;\n}) {\n  return (\n    <div className=\"tooltip\">\n      <button\n        disabled={disabled}\n        {...button}\n        ref={buttonRetRef}\n        style={{ ...button.style, background: !disabled ? \"transparent\" : \"#f1f1f1\" }}\n        className=\"tooltip-button\"\n      >\n        {children}\n      </button>\n      {!disabled && <span className=\"tooltip-text\">{tooltipText}</span>}\n    </div>\n  );\n}\n","\n\nimport React, {\n  useState,\n  useRef,\n  useEffect,\n  forwardRef,\n  useImperativeHandle,\n} from \"react\";\n\nimport \"../style/datagridview.css\";\nimport { Pagination } from \"@mui/material\";\n\ninterface UpwardTablePropsType {\n  rows: Array<any>;\n  column: Array<any>;\n  width: number;\n  height: number;\n  dataReadOnly: boolean;\n  onSelectionChange?: (row: Array<any>, rowIndex: number) => void;\n  onKeyDown?: (row: Array<any>, key: string, rowIndex: number) => void;\n  isMultipleSelect?: boolean;\n  freeze?: boolean;\n  inputsearchselector?: string;\n  isRowSelectable?: boolean;\n  unSelectable?: (row: any) => boolean;\n  isLoading?: boolean,\n  onRightClick?: (rowSelected: any,event: any) => any\n}\n\nconst UpwardTable = forwardRef(\n  (\n    {\n      rows,\n      column,\n      width,\n      height,\n      dataReadOnly,\n      onSelectionChange = () => { },\n      isMultipleSelect = false,\n      freeze = false,\n      onKeyDown,\n      inputsearchselector = \".search-input-up-on-key-down\",\n      isRowSelectable = true,\n      unSelectable = () => false,\n      isLoading,\n      onRightClick\n    }: UpwardTablePropsType,\n    UpwardTableRef\n  ) => {\n    const [pages, setPages] = useState<Array<any>>([])\n    const [pageNumber, setPageNumber] = useState(0)\n    const onSelectionChangeRef = useRef(onSelectionChange);\n    const onKeyDownRef = useRef(onKeyDown);\n    const [columns, setColumns] = useState(column.filter((itm) => !itm.hide));\n    const [hoveredColumn, setHoveredColumn] = useState(null);\n    const [selectedRows, setSelectedRows] = useState<Array<number>>([0]);\n    const [lastSelectedRowIndex, setLastSelectedRowIndex] = useState(0);\n    const [selectedItems, setSelectedItems] = useState<Array<number>>([]);\n    const divRef = useRef<HTMLDivElement>(null);\n    const [_clickTimeout, _setClickTimeout] = useState(null);\n\n\n    useEffect(() => {\n      const _pages = formatArrayIntoChunks(rows, 100)\n      setPages(_pages)\n    }, [rows])\n\n    const startResize = (index: any, e: any) => {\n      e.preventDefault();\n      e.stopPropagation();\n\n      const startX = e.clientX;\n      const startWidth = columns[index].width;\n\n      const doDrag = (moveEvent: any) => {\n        const newWidth = startWidth + (moveEvent.clientX - startX);\n        const updatedColumns = [...columns];\n        updatedColumns[index].width = newWidth > 50 ? newWidth : 50; // Set minimum column width\n        setColumns(updatedColumns);\n      };\n\n      const stopDrag = () => {\n        document.removeEventListener(\"mousemove\", doDrag);\n        document.removeEventListener(\"mouseup\", stopDrag);\n      };\n\n      document.addEventListener(\"mousemove\", doDrag);\n      document.addEventListener(\"mouseup\", stopDrag);\n    };\n    const handleMouseEnter = (index: any) => {\n      setHoveredColumn(index); // Set the hovered column index\n    };\n    const handleMouseLeave = () => {\n      setHoveredColumn(null); // Reset hovered column index\n    };\n    const handleRowClick = (\n      rowIndex: any,\n      event: React.MouseEvent<HTMLDivElement, MouseEvent>\n    ) => {\n      function getIndexAndData(selectedRowData: Array<any>) {\n        const filterSelectrowData = selectedRowData.map((d, idx) => {\n          if (!unSelectable(d)) {\n            return { idx, data: d };\n          }\n          return null;\n        });\n        const removeNullValue = filterSelectrowData.filter((d) => d !== null);\n        const data = removeNullValue.map((itm: any) => itm.data);\n        const newSelectedRowsFiltered = removeNullValue.map(\n          (itm: any) => itm.idx\n        );\n        return { newSelectedRowsFiltered, data };\n      }\n\n      if (!isMultipleSelect) {\n        // Single selection mode\n        setSelectedRows([rowIndex]);\n      } else {\n        // Multiple selection mode\n        if (event.shiftKey && lastSelectedRowIndex !== null) {\n          // Shift + Click: Select range between last clicked row and current clicked row\n          const rangeStart = Math.min(lastSelectedRowIndex, rowIndex);\n          const rangeEnd = Math.max(lastSelectedRowIndex, rowIndex);\n          const newSelectedRows: Array<number> = [];\n          for (let i = rangeStart; i <= rangeEnd; i++) {\n            if (!selectedRows.includes(i)) {\n              newSelectedRows.push(i);\n            }\n          }\n\n          let selectedItemsParams: Array<number> = [\n            ...selectedItems,\n            ...newSelectedRows,\n          ];\n\n          setSelectedRows([...selectedRows, ...newSelectedRows]);\n          const selectedRowData = rows.filter((d, idx) =>\n            selectedItemsParams.includes(idx)\n          );\n          const { newSelectedRowsFiltered, data } =\n            getIndexAndData(selectedRowData);\n\n          setSelectedItems(newSelectedRowsFiltered);\n          // onSelectionChangeRef.current(data, rowIndex);\n        } else if (event.ctrlKey || event.metaKey) {\n          // Ctrl (or Cmd on macOS) + Click: Toggle row selection\n          if (selectedRows.includes(rowIndex) && !freeze) {\n            setSelectedRows(selectedRows.filter((i) => i !== rowIndex));\n            setSelectedItems((d) => {\n              d = d.filter((i) => i !== rowIndex);\n              return d;\n            });\n            let selectedItemsParams: Array<number> = selectedItems.filter(\n              (i) => i !== rowIndex\n            );\n            const selectedRowData = rows.filter((d, idx) =>\n              selectedItemsParams.includes(idx)\n            );\n\n            setSelectedItems(selectedItemsParams);\n            // onSelectionChangeRef.current(selectedRowData, rowIndex);\n          } else {\n            setSelectedRows([...selectedRows, rowIndex]);\n            setSelectedItems((d) => {\n              d.push(rowIndex);\n              return d;\n            });\n            let selectedItemsParams: Array<number> = [\n              ...selectedItems,\n              rowIndex,\n            ];\n\n            const selectedRowData = rows.filter((d, idx) =>\n              selectedItemsParams.includes(idx)\n            );\n\n            setSelectedItems(selectedItemsParams);\n            // onSelectionChangeRef.current(selectedRowData, rowIndex);\n          }\n        } else {\n          // Regular click in multiple selection mode: Single click to select a row\n          setSelectedRows([rowIndex]);\n        }\n      }\n      setLastSelectedRowIndex(rowIndex); // Update the last selected index\n    };\n    const handleRowDoubleClick = (\n      rowIndex: any,\n      event: React.MouseEvent<HTMLDivElement, MouseEvent>\n    ) => {\n      const row = rows[rowIndex];\n      if (unSelectable(row)) return;\n      if (!isRowSelectable) return;\n\n\n      let selectedItemsParams: Array<number> = [];\n      if (isMultipleSelect) {\n        selectedItemsParams = [...selectedItems, ...selectedRows];\n      } else {\n        selectedItemsParams = [rowIndex];\n      }\n\n\n      if (selectedItems.includes(rowIndex) && !freeze) {\n        selectedItemsParams = selectedItems.filter((i) => i !== rowIndex);\n        setSelectedItems(selectedItemsParams);\n        onSelectionChangeRef.current([], rowIndex);\n        return;\n      }\n\n      setSelectedItems(selectedItemsParams);\n      onSelectionChangeRef.current([row], rowIndex);\n    };\n    const handleKeyDown = (e: any) => {\n\n      if (e.key === \"ArrowDown\") {\n        e.preventDefault();\n        setSelectedRows((prevIndex: any) => {\n          if (prevIndex[prevIndex.length - 1] === null) return [0];\n          if (prevIndex[prevIndex.length - 1] >= rows.length - 1) {\n            return [rows.length - 1];\n          }\n          const newPrevIndex = prevIndex[prevIndex.length - 1] + 1;\n          const row = document.querySelector(`.row-${newPrevIndex}`);\n          row?.querySelector(\"input\")?.focus();\n\n          row?.scrollIntoView({ block: \"end\", behavior: \"smooth\" });\n          return [newPrevIndex];\n        });\n      } else if (e.key === \"ArrowUp\") {\n        e.preventDefault();\n\n        if (selectedRows[selectedRows.length - 1] === 0) {\n          const input = document.querySelector(\n            inputsearchselector\n          ) as HTMLInputElement;\n          if (input && input.tagName === \"INPUT\") {\n            input?.focus();\n          } else if (input && input.tagName === \"DIV\") {\n            const divInput = document.querySelector(\n              `${inputsearchselector} input`\n            ) as HTMLInputElement;\n\n            divInput?.focus();\n          }\n        }\n\n        setSelectedRows((prevIndex: any) => {\n          if (prevIndex[prevIndex.length - 1] === 0) return [0];\n          const newPrevIndex = prevIndex[prevIndex.length - 1] - 1;\n          const row = document.querySelector(`.row-${newPrevIndex}`);\n\n          row?.scrollIntoView({ block: \"end\", behavior: \"smooth\" });\n          row?.querySelector(\"input\")?.focus();\n          return [newPrevIndex];\n        });\n      }\n\n    };\n    const handleRowKeyDown = (e: any) => {\n      e.stopPropagation()\n\n      if (e.key === \"Enter\" || e.key === \"NumpadEnter\") {\n        e.preventDefault();\n        if (!isRowSelectable) return;\n\n        let selectedItemsParams: Array<number> = [];\n        const rowIndex = selectedRows[selectedRows.length - 1];\n        if (isMultipleSelect) {\n          selectedItemsParams = [...selectedItems, ...selectedRows];\n        } else {\n          selectedItemsParams = [rowIndex];\n        }\n        const row = rows[selectedItemsParams[selectedItemsParams.length - 1]];\n        if (unSelectable(row)) {\n          return;\n        }\n\n        if (selectedItems.includes(rowIndex) && !freeze) {\n          selectedItemsParams = selectedItems.filter((i) => i !== rowIndex);\n          setSelectedItems(selectedItemsParams);\n          onSelectionChangeRef.current([], rowIndex);\n          return;\n        }\n\n        setSelectedItems(selectedItemsParams);\n        onSelectionChangeRef.current([row], rowIndex);\n      } else if (e.key === \"Delete\" || e.key === \"Backspace\") {\n        if (!isRowSelectable) return;\n        const rowIndex = selectedRows[selectedRows.length - 1];\n\n        const selectedRowData = rows.filter((d, idx) =>\n          selectedRows.includes(idx)\n        );\n\n        if (onKeyDownRef?.current) {\n          onKeyDownRef?.current(selectedRowData, e.key, rowIndex);\n        }\n      }\n    }\n    useImperativeHandle(UpwardTableRef, () => ({\n      resetTableSelected: () => {\n        setSelectedRows([0]);\n        setLastSelectedRowIndex(0);\n        setSelectedItems([]);\n        if (rows.length > 0) {\n          const row = document.querySelector(`.row-${0}`);\n          row?.scrollIntoView({ block: \"end\", behavior: \"smooth\" });\n        }\n      },\n      getSelectedRows: () => {\n        return rows.filter((d, idx) => selectedItems.includes(idx));\n      },\n      setSelectRows: (selectRows: any) => {\n        setSelectedItems(selectRows)\n      }\n    }));\n\n    const handleRightClick = (event: any, rowIndex: number) => {\n      event.preventDefault();\n      const rowSelected = rows[rowIndex]\n      if (onRightClick) {\n        onRightClick(rowSelected,event)\n      }\n    };\n\n\n\n    return (\n      <div\n        style={{\n          display: \"flex\",\n          justifyContent: \"center\",\n        }}\n        onKeyDown={handleKeyDown}\n      >\n        <div>\n          <div className=\"table-frame-color\">\n            <div\n              style={{\n                display: \"flex\",\n                flexDirection: \"column\",\n                width: `${width - 10}px        `,\n                height: `${height - 135}px`,\n                minHeight: \"270px\"\n              }}\n              className=\"table-frame\"\n            >\n              <div className=\"table-panel\">\n                <div ref={divRef} className={`grid-container `} tabIndex={-1}>\n                  <div\n                    className=\"grid-row grid-header\"\n                    style={{\n                      position: \"sticky\",\n                      zIndex: \"10\",\n                      top: \"-1px\",\n                      background: \"white\",\n                    }}\n                  >\n                    {columns.map((col: any, index: number) => (\n                      <div\n                        key={index}\n                        className={`grid-cell header-cell ${hoveredColumn === index ? `highlight-column` : \"\"\n                          }`} // Add the class if hovered\n                        style={{ width: col.width, height: \"20px\", }}\n                      >\n                        <input\n                          style={{ fontWeight: \"bold\" }}\n                          defaultValue={col.headerName}\n                          readOnly\n                          onChange={(e) => { }}\n                        />\n                        <div\n                          className=\"resize-handle\"\n                          onMouseDown={(e) => startResize(index, e)}\n                          onMouseEnter={(e) => {\n                            e.preventDefault();\n                            handleMouseEnter(index);\n                          }} // On hover\n                          onMouseLeave={(e) => {\n                            e.preventDefault();\n                            handleMouseLeave();\n                          }} // On mouse leave\n                        />\n                      </div>\n                    ))}\n                  </div>\n                  {pages[pageNumber]?.map((row: any, rowIndex: any) => (\n                    <div\n                      className={`grid-row row-${rowIndex}`} // Highlight selected row\n                      key={rowIndex}\n                      onClick={(e) => handleRowClick(rowIndex, e)}\n                      onDoubleClick={(e) => {\n                        // e.stopPropagation()\n\n                        if (_clickTimeout) {\n                          clearTimeout(_clickTimeout);\n                          _setClickTimeout(null);\n                        }\n\n                        const timeoutId: any = setTimeout(() => {\n                          handleRowDoubleClick(rowIndex, e)\n                        }, 200);\n\n                        _setClickTimeout(timeoutId);\n\n\n\n                      }}\n                      onKeyDown={(e) => {\n\n                        // e.stopPropagation()\n\n                        if (_clickTimeout) {\n                          clearTimeout(_clickTimeout);\n                          _setClickTimeout(null);\n                        }\n\n                        const timeoutId: any = setTimeout(() => {\n                          handleRowKeyDown(e)\n                        }, 200);\n\n                        _setClickTimeout(timeoutId);\n\n\n                      }}\n                      onContextMenu={(e) => handleRightClick(e, rowIndex)}\n                    >\n                      {columns.map((col: any, colIndex: number) => (\n                        <div\n                          key={colIndex}\n                          style={{ width: col.width }}\n                          className={`grid-cell ${hoveredColumn === colIndex ? `highlight-column` : \"\"\n                            }`}\n                        >\n                          <input\n                            value={row[col.field]}\n                            onChange={(e) => { }}\n                            readOnly={dataReadOnly}\n                            className={`${selectedRows.includes(rowIndex)\n                              ? \"selected-row\"\n                              : \"\"\n                              } ${selectedItems.includes(rowIndex)\n                                ? \"selected-items\"\n                                : \"\"\n                              }\n                          ${col.type === \"number\" ? \"number\" : \"text\"}\n                          `}\n                          />\n                          <div\n                            className=\"resize-handle\"\n                            onMouseDown={(e) => {\n                              e.preventDefault();\n                              startResize(colIndex, e);\n                            }}\n                            onMouseEnter={(e) => {\n                              e.preventDefault();\n                              handleMouseEnter(colIndex);\n                            }} // On hover\n                            onMouseLeave={(e) => {\n                              e.preventDefault();\n                              handleMouseLeave();\n                            }} // On mouse leave\n                          />\n                        </div>\n                      ))}\n                    </div>\n                  ))}\n                </div>\n              </div>\n            </div>\n\n            {isLoading && <div className=\"table-loading\">\n              <div className=\"loader\"></div>\n            </div>}\n          </div>\n          <div className=\"table-panel-footer\" >\n            <div>Records : {rows.length}</div>\n            <div><Pagination count={pages.length} onChange={(e, value) => {\n              setPageNumber(value - 1)\n            }} />\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n);\n\nfunction formatArrayIntoChunks(arr: Array<any>, chunkSize = 100) {\n  let result = [];\n\n  for (let i = 0; i < arr.length; i += chunkSize) {\n    // Use slice to create chunks of 'chunkSize'\n    result.push(arr.slice(i, i + chunkSize));\n  }\n  return result;\n}\n\n\n\n\n\nexport { UpwardTable, };\n"],"names":["TextFormatedInput","_ref","input","label","inputRef","icon","_ref$iconPosition","iconPosition","_ref$disableIcon","disableIcon","_ref$onIconClick","onIconClick","e","_ref$onChange","onChange","id","useId","formatNumber","value","parts","split","replace","join","unformatNumber","_jsxs","style","display","alignItems","position","children","_jsx","_objectSpread","htmlFor","title","left","zIndex","ref","type","height","target","test","handleChange","onBlur","includes","length","ensureTwoDecimals","handleBlur","onClick","right","top","transform","cursor","justifyContent","background","pointerEvents","TextInput","_ref2","_ref2$iconPosition","_ref2$disableIcon","_ref2$onIconClick","SelectInput","_ref3","select","selectRef","_ref3$datasource","datasource","_ref3$values","values","_ref3$display","className","map","itm","idx","ButtonField","_ref4","buttonRetRef","button","_ref4$tooltipText","tooltipText","_ref4$disabled","disabled","UpwardTable","forwardRef","UpwardTableRef","_pages$pageNumber","rows","column","width","dataReadOnly","_ref$onSelectionChang","onSelectionChange","_ref$isMultipleSelect","isMultipleSelect","_ref$freeze","freeze","onKeyDown","_ref$inputsearchselec","inputsearchselector","_ref$isRowSelectable","isRowSelectable","_ref$unSelectable","unSelectable","isLoading","onRightClick","_useState","useState","_useState2","_slicedToArray","pages","setPages","_useState3","_useState4","pageNumber","setPageNumber","onSelectionChangeRef","useRef","onKeyDownRef","_useState5","filter","hide","_useState6","columns","setColumns","_useState7","_useState8","hoveredColumn","setHoveredColumn","_useState9","_useState10","selectedRows","setSelectedRows","_useState11","_useState12","lastSelectedRowIndex","setLastSelectedRowIndex","_useState13","_useState14","selectedItems","setSelectedItems","divRef","_useState15","_useState16","_clickTimeout","_setClickTimeout","useEffect","_pages","arr","chunkSize","arguments","undefined","result","i","push","slice","formatArrayIntoChunks","startResize","index","preventDefault","stopPropagation","startX","clientX","startWidth","doDrag","moveEvent","newWidth","updatedColumns","_toConsumableArray","document","addEventListener","stopDrag","removeEventListener","handleMouseEnter","handleMouseLeave","useImperativeHandle","resetTableSelected","row","querySelector","concat","scrollIntoView","block","behavior","getSelectedRows","d","setSelectRows","selectRows","key","prevIndex","_row$querySelector","newPrevIndex","focus","tagName","divInput","_row$querySelector2","flexDirection","minHeight","tabIndex","col","fontWeight","defaultValue","headerName","readOnly","onMouseDown","onMouseEnter","onMouseLeave","rowIndex","event","shiftKey","rangeStart","Math","min","rangeEnd","max","newSelectedRows","selectedItemsParams","_getIndexAndData","selectedRowData","removeNullValue","data","newSelectedRowsFiltered","getIndexAndData","ctrlKey","metaKey","handleRowClick","onDoubleClick","clearTimeout","timeoutId","setTimeout","current","handleRowDoubleClick","handleRowKeyDown","onContextMenu","rowSelected","handleRightClick","colIndex","field","Pagination","count"],"sourceRoot":""}