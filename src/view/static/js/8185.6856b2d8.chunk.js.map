{"version":3,"file":"static/js/8185.6856b2d8.chunk.js","mappings":"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","sources":["components/Helmet.tsx","components/UpwardTable.tsx","hooks/useUpwardTableModal.tsx","feautures/Admin/Task/Accounting/PostDateChecks.tsx"],"sourcesContent":["\r\nimport { Helmet } from \"react-helmet\";\r\n\r\nconst PageHelmet = ({ title = '' }: { title: string }) => {\r\n    const imgUrl = process.env.REACT_APP_IMAGE_URL;\r\n    return (\r\n        <Helmet>\r\n            <title>{title}</title>\r\n            <link rel=\"icon\" type=\"image/png\" href={`${imgUrl}/logo.png`} />\r\n        </Helmet>\r\n    );\r\n};\r\n\r\nexport default PageHelmet;","import React, {\n  useState,\n  useRef,\n  useEffect,\n  forwardRef,\n  useImperativeHandle,\n} from \"react\";\nimport \"../style/datagridview.css\";\nimport { Pagination } from \"@mui/material\";\ninterface UpwardTablePropsType {\n  rows: Array<any>;\n  column: Array<any>;\n  width: number;\n  height: number;\n  dataReadOnly: boolean;\n  onSelectionChange?: (row: Array<any>, rowIndex: number) => void;\n  onKeyDown?: (row: Array<any>, key: string, rowIndex: number) => void;\n  isMultipleSelect?: boolean;\n  freeze?: boolean;\n  inputsearchselector?: string;\n  isRowSelectable?: boolean;\n  unSelectable?: (row: any) => boolean;\n  isLoading?: boolean,\n  onRightClick?: (rowSelected: any, event: any) => any\n}\nconst UpwardTable = forwardRef(\n  (\n    {\n      rows,\n      column,\n      width,\n      height,\n      dataReadOnly,\n      onSelectionChange = () => { },\n      isMultipleSelect = false,\n      freeze = false,\n      onKeyDown,\n      inputsearchselector = \".search-input-up-on-key-down\",\n      isRowSelectable = true,\n      unSelectable = () => false,\n      isLoading,\n      onRightClick\n    }: UpwardTablePropsType,\n    UpwardTableRef\n  ) => {\n    const [pages, setPages] = useState<Array<any>>([])\n    const [pageNumber, setPageNumber] = useState(0)\n    const onSelectionChangeRef = useRef(onSelectionChange);\n    const onKeyDownRef = useRef(onKeyDown);\n    const [columns, setColumns] = useState(column.filter((itm) => !itm.hide));\n    const [hoveredColumn, setHoveredColumn] = useState(null);\n    const [selectedRows, setSelectedRows] = useState<Array<number>>([0]);\n    const [lastSelectedRowIndex, setLastSelectedRowIndex] = useState(0);\n    const [selectedItems, setSelectedItems] = useState<Array<number>>([]);\n    const divRef = useRef<HTMLDivElement>(null);\n    const [_clickTimeout, _setClickTimeout] = useState(null);\n\n\n    useEffect(() => {\n      const _pages = formatArrayIntoChunks(rows, 100)\n      setPages(_pages)\n    }, [rows])\n\n    const startResize = (index: any, e: any) => {\n      e.preventDefault();\n      e.stopPropagation();\n\n      const startX = e.clientX;\n      const startWidth = columns[index].width;\n\n      const doDrag = (moveEvent: any) => {\n        const newWidth = startWidth + (moveEvent.clientX - startX);\n        const updatedColumns = [...columns];\n        updatedColumns[index].width = newWidth > 50 ? newWidth : 50; // Set minimum column width\n        setColumns(updatedColumns);\n      };\n\n      const stopDrag = () => {\n        document.removeEventListener(\"mousemove\", doDrag);\n        document.removeEventListener(\"mouseup\", stopDrag);\n      };\n\n      document.addEventListener(\"mousemove\", doDrag);\n      document.addEventListener(\"mouseup\", stopDrag);\n    };\n    const handleMouseEnter = (index: any) => {\n      setHoveredColumn(index); // Set the hovered column index\n    };\n    const handleMouseLeave = () => {\n      setHoveredColumn(null); // Reset hovered column index\n    };\n    const handleRowClick = (\n      rowIndex: any,\n      event: React.MouseEvent<HTMLDivElement, MouseEvent>\n    ) => {\n      function getIndexAndData(selectedRowData: Array<any>) {\n        const filterSelectrowData = selectedRowData.map((d, idx) => {\n          if (!unSelectable(d)) {\n            return { idx, data: d };\n          }\n          return null;\n        });\n        const removeNullValue = filterSelectrowData.filter((d) => d !== null);\n        const data = removeNullValue.map((itm: any) => itm.data);\n        const newSelectedRowsFiltered = removeNullValue.map(\n          (itm: any) => itm.idx\n        );\n        return { newSelectedRowsFiltered, data };\n      }\n\n      if (!isMultipleSelect) {\n        // Single selection mode\n        setSelectedRows([rowIndex]);\n      } else {\n        // Multiple selection mode\n        if (event.shiftKey && lastSelectedRowIndex !== null) {\n          // Shift + Click: Select range between last clicked row and current clicked row\n          const rangeStart = Math.min(lastSelectedRowIndex, rowIndex);\n          const rangeEnd = Math.max(lastSelectedRowIndex, rowIndex);\n          const newSelectedRows: Array<number> = [];\n          for (let i = rangeStart; i <= rangeEnd; i++) {\n            if (!selectedRows.includes(i)) {\n              newSelectedRows.push(i);\n            }\n          }\n\n          let selectedItemsParams: Array<number> = [\n            ...selectedItems,\n            ...newSelectedRows,\n          ];\n\n          setSelectedRows([...selectedRows, ...newSelectedRows]);\n          const selectedRowData = rows.filter((d, idx) =>\n            selectedItemsParams.includes(idx)\n          );\n          const { newSelectedRowsFiltered } =\n            getIndexAndData(selectedRowData);\n\n          setSelectedItems(newSelectedRowsFiltered);\n          // onSelectionChangeRef.current(data, rowIndex);\n        } else if (event.ctrlKey || event.metaKey) {\n          // Ctrl (or Cmd on macOS) + Click: Toggle row selection\n          if (selectedRows.includes(rowIndex) && !freeze) {\n            setSelectedRows(selectedRows.filter((i) => i !== rowIndex));\n            setSelectedItems((d) => {\n              d = d.filter((i) => i !== rowIndex);\n              return d;\n            });\n            let selectedItemsParams: Array<number> = selectedItems.filter(\n              (i) => i !== rowIndex\n            );\n\n            setSelectedItems(selectedItemsParams);\n            // onSelectionChangeRef.current(selectedRowData, rowIndex);\n          } else {\n            setSelectedRows([...selectedRows, rowIndex]);\n            setSelectedItems((d) => {\n              d.push(rowIndex);\n              return d;\n            });\n            let selectedItemsParams: Array<number> = [\n              ...selectedItems,\n              rowIndex,\n            ];\n\n            setSelectedItems(selectedItemsParams);\n            // onSelectionChangeRef.current(selectedRowData, rowIndex);\n          }\n        } else {\n          // Regular click in multiple selection mode: Single click to select a row\n          setSelectedRows([rowIndex]);\n        }\n      }\n      setLastSelectedRowIndex(rowIndex); // Update the last selected index\n    };\n    const handleRowDoubleClick = (\n      rowIndex: any,\n      event: React.MouseEvent<HTMLDivElement, MouseEvent>\n    ) => {\n      const row = rows[rowIndex];\n      if (unSelectable(row)) return;\n      if (!isRowSelectable) return;\n\n\n      let selectedItemsParams: Array<number> = [];\n      if (isMultipleSelect) {\n        selectedItemsParams = [...selectedItems, ...selectedRows];\n      } else {\n        selectedItemsParams = [rowIndex];\n      }\n\n\n      if (selectedItems.includes(rowIndex) && !freeze) {\n        selectedItemsParams = selectedItems.filter((i) => i !== rowIndex);\n        setSelectedItems(selectedItemsParams);\n        onSelectionChangeRef.current([], rowIndex);\n        return;\n      }\n\n      setSelectedItems(selectedItemsParams);\n      onSelectionChangeRef.current([row], rowIndex);\n    };\n    const handleKeyDown = (e: any) => {\n\n      if (e.key === \"ArrowDown\") {\n        e.preventDefault();\n        setSelectedRows((prevIndex: any) => {\n          if (prevIndex[prevIndex.length - 1] === null) return [0];\n          if (prevIndex[prevIndex.length - 1] >= rows.length - 1) {\n            return [rows.length - 1];\n          }\n          const newPrevIndex = prevIndex[prevIndex.length - 1] + 1;\n          const row = document.querySelector(`.row-${newPrevIndex}`);\n          row?.querySelector(\"input\")?.focus();\n\n          row?.scrollIntoView({ block: \"end\", behavior: \"smooth\" });\n          return [newPrevIndex];\n        });\n      } else if (e.key === \"ArrowUp\") {\n        e.preventDefault();\n\n        if (selectedRows[selectedRows.length - 1] === 0) {\n          const input = document.querySelector(\n            inputsearchselector\n          ) as HTMLInputElement;\n          if (input && input.tagName === \"INPUT\") {\n            input?.focus();\n          } else if (input && input.tagName === \"DIV\") {\n            const divInput = document.querySelector(\n              `${inputsearchselector} input`\n            ) as HTMLInputElement;\n\n            divInput?.focus();\n          }\n        }\n\n        setSelectedRows((prevIndex: any) => {\n          if (prevIndex[prevIndex.length - 1] === 0) return [0];\n          const newPrevIndex = prevIndex[prevIndex.length - 1] - 1;\n          const row = document.querySelector(`.row-${newPrevIndex}`);\n\n          row?.scrollIntoView({ block: \"end\", behavior: \"smooth\" });\n          row?.querySelector(\"input\")?.focus();\n          return [newPrevIndex];\n        });\n      }\n\n    };\n    const handleRowKeyDown = (e: any) => {\n      e.stopPropagation()\n\n      if (e.key === \"Enter\" || e.key === \"NumpadEnter\") {\n        e.preventDefault();\n        if (!isRowSelectable) return;\n\n        let selectedItemsParams: Array<number> = [];\n        const rowIndex = selectedRows[selectedRows.length - 1];\n        if (isMultipleSelect) {\n          selectedItemsParams = [...selectedItems, ...selectedRows];\n        } else {\n          selectedItemsParams = [rowIndex];\n        }\n        const row = rows[selectedItemsParams[selectedItemsParams.length - 1]];\n        if (unSelectable(row)) {\n          return;\n        }\n\n        if (selectedItems.includes(rowIndex) && !freeze) {\n          selectedItemsParams = selectedItems.filter((i) => i !== rowIndex);\n          setSelectedItems(selectedItemsParams);\n          onSelectionChangeRef.current([], rowIndex);\n          return;\n        }\n\n        setSelectedItems(selectedItemsParams);\n        onSelectionChangeRef.current([row], rowIndex);\n      } else if (e.key === \"Delete\" || e.key === \"Backspace\") {\n        if (!isRowSelectable) return;\n        const rowIndex = selectedRows[selectedRows.length - 1];\n\n        const selectedRowData = rows.filter((d, idx) =>\n          selectedRows.includes(idx)\n        );\n\n        if (onKeyDownRef?.current) {\n          onKeyDownRef?.current(selectedRowData, e.key, rowIndex);\n        }\n      }\n    }\n    useImperativeHandle(UpwardTableRef, () => ({\n      resetTableSelected: () => {\n        setSelectedRows([0]);\n        setLastSelectedRowIndex(0);\n        setSelectedItems([]);\n        if (rows.length > 0) {\n          const row = document.querySelector(`.row-${0}`);\n          row?.scrollIntoView({ block: \"end\", behavior: \"smooth\" });\n        }\n      },\n      getSelectedIndex: () => {\n        return selectedItems[0];\n      },\n      getSelectedRows: () => {\n        return rows.filter((d, idx) => selectedItems.includes(idx));\n      },\n      getFirstColumn: () => {\n        return rows.filter((d, idx) => selectedItems.includes(idx));\n      },\n      getParentElement: () => {\n        return divRef.current\n      },\n      getSelectedRowsOnClick: () => {\n        return selectedRows[0];\n      },\n      setSelectRows: (indx: number) => {\n        return setSelectedItems([indx])\n      },\n    }));\n\n    const handleRightClick = (event: any, rowIndex: number) => {\n      event.preventDefault();\n      const rowSelected = rows[rowIndex]\n      if (onRightClick) {\n        onRightClick(rowSelected, event)\n      }\n    };\n\n\n\n    return (\n      <div\n        style={{\n          display: \"flex\",\n          justifyContent: \"center\",\n        }}\n        onKeyDown={handleKeyDown}\n      >\n        <div>\n          <div className=\"table-frame-color\">\n            <div\n              style={{\n                display: \"flex\",\n                flexDirection: \"column\",\n                width: `${width - 10}px        `,\n                height: `${height - 135}px`,\n                minHeight: \"270px\"\n              }}\n              className=\"table-frame\"\n            >\n              <div className=\"table-panel\">\n                <div ref={divRef} className={`grid-container `} tabIndex={-1}>\n                  <div\n                    className=\"grid-row grid-header\"\n                    style={{\n                      position: \"sticky\",\n                      zIndex: \"10\",\n                      top: \"-1px\",\n                      background: \"white\",\n                    }}\n                  >\n                    {columns.map((col: any, index: number) => (\n                      <div\n                        key={index}\n                        className={`grid-cell header-cell ${hoveredColumn === index ? `highlight-column` : \"\"\n                          }`} // Add the class if hovered\n                        style={{ width: col.width, height: \"20px\", }}\n                      >\n                        <input\n                          style={{ fontWeight: \"bold\" }}\n                          defaultValue={col.headerName}\n                          readOnly\n                          onChange={(e) => { }}\n                        />\n                        <div\n                          className=\"resize-handle\"\n                          onMouseDown={(e) => startResize(index, e)}\n                          onMouseEnter={(e) => {\n                            e.preventDefault();\n                            handleMouseEnter(index);\n                          }} // On hover\n                          onMouseLeave={(e) => {\n                            e.preventDefault();\n                            handleMouseLeave();\n                          }} // On mouse leave\n                        />\n                      </div>\n                    ))}\n                  </div>\n                  {pages[pageNumber]?.map((row: any, rowIndex: any) => (\n                    <div\n                      className={`grid-row row-${rowIndex}`} // Highlight selected row\n                      key={rowIndex}\n                      onClick={(e) => handleRowClick(rowIndex, e)}\n                      onDoubleClick={(e) => {\n                        // e.stopPropagation()\n\n                        if (_clickTimeout) {\n                          clearTimeout(_clickTimeout);\n                          _setClickTimeout(null);\n                        }\n\n                        const timeoutId: any = setTimeout(() => {\n                          handleRowDoubleClick(rowIndex, e)\n                        }, 200);\n\n                        _setClickTimeout(timeoutId);\n\n\n\n                      }}\n                      onKeyDown={(e) => {\n\n                        // e.stopPropagation()\n\n                        if (_clickTimeout) {\n                          clearTimeout(_clickTimeout);\n                          _setClickTimeout(null);\n                        }\n\n                        const timeoutId: any = setTimeout(() => {\n                          handleRowKeyDown(e)\n                        }, 200);\n\n                        _setClickTimeout(timeoutId);\n\n\n                      }}\n                      onContextMenu={(e) => handleRightClick(e, rowIndex)}\n                    >\n                      {columns.map((col: any, colIndex: number) => (\n                        <div\n                          key={colIndex}\n                          style={{ width: col.width }}\n                          className={`grid-cell ${hoveredColumn === colIndex ? `highlight-column` : \"\"} row-${rowIndex} col-${colIndex}`}\n                        >\n                          <input\n                            value={row[col.field]}\n                            onChange={(e) => { }}\n                            readOnly={dataReadOnly}\n                            className={`${selectedRows.includes(rowIndex)\n                              ? \"selected-row\"\n                              : \"\"\n                              } ${selectedItems.includes(rowIndex)\n                                ? \"selected-items\"\n                                : \"\"\n                              }\n                          ${col.type === \"number\" ? \"number\" : \"text\"}\n                          `}\n                          />\n                          <div\n                            className=\"resize-handle\"\n                            onMouseDown={(e) => {\n                              e.preventDefault();\n                              startResize(colIndex, e);\n                            }}\n                            onMouseEnter={(e) => {\n                              e.preventDefault();\n                              handleMouseEnter(colIndex);\n                            }} // On hover\n                            onMouseLeave={(e) => {\n                              e.preventDefault();\n                              handleMouseLeave();\n                            }} // On mouse leave\n                          />\n                        </div>\n                      ))}\n                    </div>\n                  ))}\n                </div>\n              </div>\n            </div>\n\n            {isLoading && <div className=\"table-loading\">\n              <div className=\"loader\"></div>\n            </div>}\n          </div>\n          <div className=\"table-panel-footer\" >\n            <div>Records : {rows?.length}</div>\n            <div><Pagination count={pages.length} onChange={(e, value) => {\n              setPageNumber(value - 1)\n            }} />\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n);\nfunction formatArrayIntoChunks(arr: Array<any>, chunkSize = 100) {\n  let result = [];\n\n  for (let i = 0; i < arr.length; i += chunkSize) {\n    // Use slice to create chunks of 'chunkSize'\n    result.push(arr.slice(i, i + chunkSize));\n  }\n  return result;\n}\nexport { UpwardTable, };\n","import { useEffect, useRef, useState, useId } from \"react\";\nimport \"../style/upwardtablemodel.css\";\nimport { TextInput } from \"../components/UpwardFields\";\nimport { UpwardTable } from \"../components/UpwardTable\";\nimport { throttle } from \"lodash\";\nimport { AxiosInstance } from \"axios\";\nimport { User } from \"../components/AuthContext\";\nimport { useMutation } from \"react-query\";\nimport { wait } from \"../lib/wait\";\nimport { IconButton, Modal } from '@mui/material'\nimport CloseIcon from \"@mui/icons-material/Close\";\n\n\ninterface UseUpwardTableModalProps {\n  myAxios: AxiosInstance;\n  user: User | null;\n  column: Array<any>;\n  link: {\n    url: string;\n    queryUrlName: string;\n  };\n  onSelectionChange: (selectedRow: any) => void;\n  onModalClose?: () => void;\n  responseDataKey: string;\n}\nexport const useUpwardTableModal = ({\n  myAxios,\n  user,\n  column,\n  link,\n  onSelectionChange,\n  responseDataKey,\n  onModalClose = () => { },\n}: UseUpwardTableModalProps) => {\n  const id = useId();\n  const inputSearchRef = useRef<HTMLInputElement>(null);\n  const tableRef = useRef<any>(null);\n  const parentRef = useRef<any>(null);\n  const [show, setShowModal] = useState(false);\n  const [rows, setRows] = useState([]);\n  const { isLoading, mutate } = useMutation({\n    mutationKey: id,\n    mutationFn: async (variable: any) =>\n      await myAxios.get(\n        `${link?.url}?${link?.queryUrlName}=${variable.search}`,\n        {\n          headers: {\n            Authorization: `Bearer ${user?.accessToken}`,\n          },\n        }\n      ),\n    onSuccess: (res) => {\n      const response = res as any;\n      setRows(response.data[responseDataKey]);\n    },\n  });\n  const performSearch = (query: string) => {\n    if (query === \"\") {\n      mutate({ search: query });\n    }\n  };\n  // Throttle the search function to limit it to once every 500ms\n  const throttledSearch = throttle((query) => performSearch(query), 500)\n\n  const openModal = (search: string) => {\n    mutate({ search: search });\n    setShowModal(true);\n    setTimeout(() => {\n      if (inputSearchRef.current) {\n        inputSearchRef.current.value = search;\n      }\n      inputSearchRef.current?.focus();\n    }, 150);\n  };\n  const closeModal = () => {\n    setShowModal(false);\n    onModalClose();\n  };\n\n  const width = 460;\n  const height = 530;\n\n  useEffect(() => {\n    if (show && parentRef.current) {\n      wait(1050).then(() => {\n        parentRef.current?.focus();\n      })\n    }\n  }, [show, parentRef]);\n\n  const ModalComponent = (\n    <Modal\n      open={show}\n      onClose={() => {\n        setShowModal(false);\n      }}\n      aria-labelledby=\"modal-modal-title\"\n      aria-describedby=\"modal-modal-description\"\n    >\n      <div style={{\n        position: \"absolute\",\n        top: \"50%\",\n        left: \"50%\",\n        transform: \"translate(-50%, -50%)\",\n        width: \"auto\",\n        background: \"#fff\",\n        paddingTop: \"30px\",\n        paddingBottom: \"20px\",\n        paddingLeft: \"10px\",\n        paddingRight: \"10px\"\n      }}>\n        <div >\n          <TextInput\n            label={{ style: { display: \"none\" } }}\n            input={{\n              className: \"search-input-up-on-key-down\",\n              type: \"text\",\n              style: { width: \"100%\", marginBottom: \"20px\" },\n              onChange: (e) => {\n                e.preventDefault();\n                throttledSearch(e.currentTarget.value);\n              },\n              onKeyDown: (e) => {\n                if (e.key === \"Enter\" || e.key === \"NumpadEnter\") {\n                  e.preventDefault();\n                  mutate({ search: (e.target as any).value });\n                }\n                if (e.key === \"ArrowDown\") {\n                  e.preventDefault();\n                  const datagridview = tableRef.current.getParentElement().querySelector(\n                    `.grid-container .row-0.col-0 input`\n                  ) as HTMLDivElement;\n                  setTimeout(() => {\n                    if (datagridview)\n                      datagridview.focus();\n                  }, 100)\n                }\n              },\n            }}\n            inputRef={inputSearchRef}\n          />\n          <UpwardTable\n            ref={tableRef}\n            rows={rows}\n            column={column.filter((itm) => !itm.hide)}\n            width={width}\n            height={height}\n            dataReadOnly={true}\n            onSelectionChange={onSelectionChange}\n          />\n\n          <IconButton\n            style={{\n              position: \"absolute\",\n              top: \"5px\",\n              right: \"10px\",\n            }}\n            aria-label=\"search-client\"\n            onClick={closeModal}\n          >\n            <CloseIcon style={{ fontSize: \"15px\" }} />\n          </IconButton>\n\n\n        </div>\n      </div>\n\n    </Modal>\n\n  );\n\n  return {\n    Modal: ModalComponent,\n    openModal,\n    closeModal,\n    isLoading,\n  };\n};\n","import React, { useContext, useState, useRef, useEffect, useCallback } from \"react\";\nimport {\n  Box,\n  Typography,\n  Button,\n  IconButton,\n  Modal,\n  MenuItem,\n  Menu,\n} from \"@mui/material\";\nimport AddIcon from \"@mui/icons-material/Add\";\nimport { useMutation, useQuery } from \"react-query\";\nimport Swal from \"sweetalert2\";\nimport SaveIcon from \"@mui/icons-material/Save\";\nimport { AuthContext } from \"../../../../components/AuthContext\";\nimport PersonSearchIcon from \"@mui/icons-material/PersonSearch\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport { flushSync } from \"react-dom\";\nimport { LoadingButton } from \"@mui/lab\";\nimport RestartAltIcon from \"@mui/icons-material/RestartAlt\";\nimport DownloadIcon from \"@mui/icons-material/Download\";\nimport {\n  codeCondfirmationAlert,\n  saveCondfirmationAlert,\n} from \"../../../../lib/confirmationAlert\";\nimport DriveFolderUploadIcon from \"@mui/icons-material/DriveFolderUpload\";\nimport { DisplayFile, checkFile } from \"../Claims/Claims\";\nimport ReactDOMServer from \"react-dom/server\";\nimport { grey } from \"@mui/material/colors\";\nimport { useUpwardTableModal } from \"../../../../hooks/useUpwardTableModal\";\nimport { TextAreaInput, TextInput } from \"../../../../components/UpwardFields\";\nimport AccountBalanceIcon from '@mui/icons-material/AccountBalance';\nimport { NumericFormat } from \"react-number-format\";\nimport { format } from \"date-fns\";\nimport PageHelmet from \"../../../../components/Helmet\";\nimport { wait } from \"@testing-library/user-event/dist/utils\";\nimport SearchIcon from '@mui/icons-material/Search';\nimport { DataGridViewReact } from \"../../../../components/DataGridViewReact\";\nimport { Loading } from \"../../../../components/Loading\";\n\n\n\nexport const reducer = (state: any, action: any) => {\n  switch (action.type) {\n    case \"UPDATE_FIELD\":\n      return {\n        ...state,\n        [action.field]: action.value,\n      };\n    default:\n      return state;\n  }\n};\nexport const pdcColumn = [\n  { key: \"Check_No\", label: \"Check No.\", width: 150 },\n  { key: \"Check_Date\", label: \"Check Date\", width: 150 },\n  { key: \"Check_Amnt\", label: \"Amount\", width: 150, type: \"number\" },\n  { key: \"BankName\", label: \"Bank\", width: 200 },\n  { key: \"Branch\", label: \"Branch\", width: 200 },\n  {\n    key: \"Check_Remarks\",\n    label: \"Checked Remarks\",\n    width: 350,\n  },\n  { key: \"Deposit_Slip\", label: \"Deposit Slip\", width: 150 },\n  { key: \"DateDeposit\", label: \"Date Deposit\", width: 150 },\n  { key: \"OR_No\", label: \"OR Num\", width: 150 },\n  { key: \"BankCode\", label: \"Bank Code\", width: 150, hide: true },\n];\nexport const pdcSearchColumn = [\n  { field: \"Date\", headerName: \"Date Received\", width: 160 },\n  { field: \"Ref_No\", headerName: \"Ref No.\", width: 160 },\n  {\n    field: \"Name\",\n    headerName: \"Name\",\n    flex: 1,\n  },\n];\nexport const pdcBanksColumn = [\n  { field: \"Bank_Code\", headerName: \"Code\", width: 130 },\n  { field: \"Bank\", headerName: \"Bank Name\", flex: 1 },\n];\n\nexport default function PostDateChecks() {\n  const tableRef = useRef<any>(null);\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\n  const open = Boolean(anchorEl);\n  const handleClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n    setAnchorEl(event.currentTarget);\n  };\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n  const [isDragging, setIsDragging] = useState(false);\n  const [selectedFiles, setSelectedFiles] = useState<Array<File>>([]);\n  const [openPdcInputModal, setOpenPdcInputModal] = useState(false);\n  const [showModal, setShowModal] = useState(false);\n\n\n\n  const searchInputRef = useRef<HTMLInputElement>(null);\n\n  const [hasSelectedRow, setHasSelectedRow] = useState(null)\n  const [pdcMode, setPdcMode] = useState('')\n\n  const { myAxios, user } = useContext(AuthContext);\n  const searchRef = useRef<HTMLInputElement>(null);\n\n  // pdc form save button\n  const fileInputRef = useRef<HTMLInputElement>(null);\n  const savePDCButtonRef = useRef<HTMLButtonElement>(null);\n\n\n  //check modal refs\n\n  const checkModalSaveButton = useRef<HTMLButtonElement>(null);\n  const checkModalSaveButtonActionRef = useRef<any>(null);\n  // search modal auto focus on load\n\n\n  // modal \n  const _checknoRef = useRef<HTMLInputElement>(null);\n  const _bankRef = useRef<HTMLInputElement>(null);\n  const _branchRef = useRef<HTMLInputElement>(null);\n  const _remarksRef = useRef<HTMLTextAreaElement>(null);\n  const _chekdateRef = useRef<HTMLInputElement>(null);\n  const _amountRef = useRef<HTMLInputElement>(null);\n  const _checkcountRef = useRef<HTMLInputElement>(null);\n  const _bankCode = useRef('');\n  const _slipCodeRef = useRef('');\n  const _slipDateRef = useRef('');\n  const _checkOR = useRef('');\n\n  const addRefButton = useRef<HTMLButtonElement>(null);\n\n\n  const subRefNoRef = useRef('');\n  const PNoRef = useRef('');\n  const subAccountRef = useRef('');\n\n  const refNoRef = useRef<HTMLInputElement>(null);\n  const dateRef = useRef<HTMLInputElement>(null);\n  const remakrsRef = useRef<HTMLTextAreaElement>(null);\n  const pnRef = useRef<HTMLInputElement>(null);\n  const branchRef = useRef<HTMLInputElement>(null);\n  const clientnameRef = useRef<HTMLTextAreaElement>(null);\n\n\n  const { isLoading: newRefNumberLoading, refetch: refetchNewRefNumber } =\n    useQuery({\n      queryKey: \"new-ref-number\",\n      queryFn: async () => {\n        return await myAxios.get(\"/task/accounting/pdc-new-ref-number\", {\n          headers: {\n            Authorization: `Bearer ${user?.accessToken}`,\n          },\n        });\n      },\n      refetchOnWindowFocus: false,\n      onSuccess: (res) => {\n        const response = res as any;\n        wait(100).then(() => {\n          subRefNoRef.current = response.data.RefNo[0].pdcID\n          if (refNoRef.current) {\n            refNoRef.current.value = response.data.RefNo[0].pdcID\n          }\n        })\n\n      },\n    });\n\n  const { mutate, isLoading: loadingAddNew } = useMutation({\n    mutationKey: 'update-pdc',\n    mutationFn: async (variables: any) => {\n      if (pdcMode === \"update\") {\n        delete variables.mode;\n        return await myAxios.post(\"/task/accounting/update-pdc\", variables, {\n          headers: {\n            Authorization: `Bearer ${user?.accessToken}`,\n          },\n        });\n      }\n      delete variables.mode;\n      return await myAxios.post(\"/task/accounting/add-pdc\", variables, {\n        headers: {\n          Authorization: `Bearer ${user?.accessToken}`,\n        },\n      });\n    },\n    onSuccess: (res) => {\n      if (res.data.success) {\n        resetPDC()\n        return Swal.fire({\n          position: \"center\",\n          icon: \"success\",\n          title: res.data.message,\n          showConfirmButton: false,\n          timer: 1500,\n        });\n      }\n\n      Swal.fire({\n        position: \"center\",\n        icon: \"error\",\n        title: res.data.message,\n        showConfirmButton: false,\n        timer: 1500,\n      });\n    },\n  });\n  //selecte search\n\n  const { mutate: mutateSelectedSearch, isLoading: isLoadingSelectedSearch } =\n    useMutation({\n      mutationKey: 'get-search-pdc-check',\n      mutationFn: async (variables: any) =>\n        await myAxios.post(\"/task/accounting/get-search-pdc-check\", variables, {\n          headers: {\n            Authorization: `Bearer ${user?.accessToken}`,\n          },\n        }),\n      onSuccess: async (res) => {\n        if (!res?.data.success) {\n          return alert(`Error : ${res?.data.message}`);\n        }\n\n        const response = res as any;\n        const Ref_No = response.data.getSearchPDCCheck[0].Ref_No;\n        if (response.data.upload[0]) {\n          const uploadFiles = JSON.parse(response.data.upload[0]?.upload);\n          const newObjContainerBasic = await formatDataToDocument(\n            uploadFiles,\n            `${process.env.REACT_APP_IMAGE_URL}pdc/${Ref_No}`\n          );\n          const fileSelected = await Promise.all(newObjContainerBasic);\n          setSelectedFiles(fileSelected);\n        }\n        async function formatDataToDocument(\n          dataDocument: Array<any>,\n          url: string\n        ) {\n          const newObjContainer: Array<any> = [];\n          for (let index = 0; index < dataDocument.length; index++) {\n            const basicItem = dataDocument[index];\n            const mainURL = `${url}/${basicItem.uniqueFilename}`;\n            const response = await fetch(mainURL);\n            const blob = await response.blob();\n            const file = new File([blob], basicItem.fileName, {\n              type: basicItem.fileType,\n            });\n            const reader = new FileReader();\n            newObjContainer.push(\n              new Promise((resolve, reject) => {\n                reader.onload = function (event) {\n                  resolve(file);\n                };\n                reader.onerror = function (event) {\n                  reject(new Error(\"Error reading file: \" + file.name));\n                };\n                reader.readAsDataURL(file);\n              })\n            );\n          }\n          return newObjContainer;\n        }\n\n        tableRef.current.setDataFormated(response.data.getSearchPDCCheck)\n\n        if (refNoRef.current) {\n          refNoRef.current.value = response.data.getSearchPDCCheck[0].Ref_No\n        }\n        if (clientnameRef.current) {\n          clientnameRef.current.value = response.data.getSearchPDCCheck[0].Name\n        }\n        if (dateRef.current) {\n          dateRef.current.value = response.data.getSearchPDCCheck[0].Date\n        }\n        if (pnRef.current) {\n          pnRef.current.value = response.data.getSearchPDCCheck[0].PNo\n        }\n        if (branchRef.current) {\n          branchRef.current.value = response.data.getSearchPDCCheck[0].Acronym\n        }\n        if (remakrsRef.current) {\n          remakrsRef.current.value = response.data.getSearchPDCCheck[0].Remarks\n        }\n        PNoRef.current = response.data.getSearchPDCCheck[0].IDNo\n        subAccountRef.current = response.data.getSearchPDCCheck[0].sub_account\n\n\n\n      },\n    });\n\n  // policy ids search table modal\n  const {\n    Modal: ModalSearchPdcIDs,\n    closeModal: closeModalSearchPdcIDs,\n    openModal: openModalSearchPdcIDs,\n    isLoading: isLoadingModalSearchPdcIDs,\n  } = useUpwardTableModal({\n    myAxios,\n    user,\n    link: {\n      url: \"/task/accounting/search-pdc-policy-id\",\n      queryUrlName: \"searchPdcPolicyIds\",\n    },\n    column: [\n      { field: \"Type\", headerName: \"Type\", width: 130 },\n      { field: \"IDNo\", headerName: \"ID No.\", width: 200 },\n      { field: \"chassis\", headerName: \"Chassis No.\", width: 200, hide: true },\n      {\n        field: \"Name\",\n        headerName: \"Name\",\n        width: 350,\n      },\n      {\n        field: \"ID\",\n        headerName: \"ID\",\n        width: 300,\n        hide: true,\n      },\n      {\n        field: \"client_id\",\n        headerName: \"client_id\",\n        width: 200,\n        hide: true,\n      },\n    ],\n    onSelectionChange: (selectedRow: any) => {\n      if (selectedRow.length > 0) {\n\n        wait(100).then(() => {\n          PNoRef.current = selectedRow[0].client_id\n          subAccountRef.current = selectedRow[0].sub_account\n          if (pnRef.current) {\n            pnRef.current.value = selectedRow[0].IDNo\n          }\n          if (clientnameRef.current) {\n            clientnameRef.current.value = selectedRow[0].Name\n          }\n          if (branchRef.current) {\n            branchRef.current.value = selectedRow[0].Acronym\n          }\n          if (selectedRow[0].Remarks && selectedRow[0].Remarks !== '') {\n            if (remakrsRef.current) {\n              remakrsRef.current.value = selectedRow[0].Remarks\n            }\n          }\n\n        })\n\n        closeModalSearchPdcIDs();\n\n      }\n    },\n\n    responseDataKey: \"clientsId\",\n  });\n\n  // bank search table modal\n  const {\n    Modal: ModalSearchBanks,\n    closeModal: closeModalSearchBanks,\n    openModal: openModalSearchBanks,\n    isLoading: isLoadingModalSearchbanks,\n  } = useUpwardTableModal({\n    myAxios,\n    user,\n    link: {\n      url: \"/task/accounting/search-pdc-banks\",\n      queryUrlName: \"searchPdcBanks\",\n    },\n    column: [\n      { field: \"Bank_Code\", headerName: \"Code\", width: 100 },\n      { field: \"Bank\", headerName: \"Bank Name\", width: 350 },\n    ],\n    onSelectionChange: (selectedRow: any) => {\n      if (selectedRow.length > 0) {\n        setTimeout(() => {\n          _bankCode.current = selectedRow[0].Bank_Code\n          if (_bankRef.current) {\n            _bankRef.current.value = selectedRow[0].Bank\n          }\n        }, 100)\n\n        closeModalSearchBanks();\n        setOpenPdcInputModal(true);\n        setTimeout(() => {\n          _branchRef.current?.focus()\n        }, 100);\n      }\n    },\n    onModalClose: () => {\n      setTimeout(() => {\n        setOpenPdcInputModal(true);\n      }, 100);\n    },\n    responseDataKey: \"pdcBanks\",\n  });\n  // pdc search table modal\n  const {\n    Modal: UpwardPDCModal,\n    closeModal: closeUpwardPDCModal,\n    openModal: openUpwardPDCModal,\n    isLoading: isLoadingModalSearchPDC,\n  } = useUpwardTableModal({\n    myAxios,\n    user,\n    column: [\n      { field: \"Date\", headerName: \"Date Received\", width: 90 },\n      { field: \"Ref_No\", headerName: \"Ref No.\", width: 80 },\n      {\n        field: \"Name\",\n        headerName: \"Name\",\n        width: 320,\n      },\n    ],\n    link: {\n      url: \"/task/accounting/search-pdc\",\n      queryUrlName: \"searchPDCInput\",\n    },\n    onSelectionChange: (selectedRow: any) => {\n      if (selectedRow.length > 0) {\n        mutateSelectedSearch({ ref_no: selectedRow[0].Ref_No });\n        setPdcMode('update')\n        closeUpwardPDCModal();\n        if (searchRef.current) {\n          searchRef.current?.focus();\n        }\n      }\n    },\n    responseDataKey: \"searchPDC\",\n  });\n\n  const handleOnSave = useCallback(async (e: any) => {\n    const pdcTableData = tableRef.current.getDataFormatted()\n\n    if (pnRef.current && pnRef.current.value === \"\") {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: \"Please provide loan information!\",\n        timer: 1500,\n      }).then(() => {\n        setTimeout(() => {\n          pnRef.current?.click();\n        }, 350);\n      });\n    }\n    if (pdcTableData.length <= 0) {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: \"Please provide entry!\",\n        timer: 1500,\n      }).then(() => {\n        setOpenPdcInputModal(true);\n      });\n    }\n\n    const filePromises: Array<any> = [];\n    function fileTransfer(filePromises: Array<any>) {\n      const files = selectedFiles;\n      if (files.length > 0) {\n        for (let i = 0; i < files.length; i++) {\n          const file = files[i];\n          const reader = new FileReader();\n          filePromises.push(\n            new Promise((resolve, reject) => {\n              reader.onload = function (event) {\n                resolve({\n                  datakey: \"pdc_file\",\n                  fileName: file.name,\n                  fileContent: event.target?.result,\n                  fileType: file.type,\n                  file,\n                });\n              };\n              reader.onerror = function (event) {\n                reject(new Error(\"Error reading file: \" + file.name));\n              };\n              reader.readAsDataURL(file);\n            })\n          );\n        }\n      }\n    }\n    fileTransfer(filePromises);\n    const fileToSave = await Promise.all(filePromises);\n    const stateSubmited = {\n      Ref_No: refNoRef.current?.value,\n      PNo: pnRef.current?.value,\n      IDNo: PNoRef.current,\n      Date: dateRef.current?.value,\n      Name: clientnameRef.current?.value,\n      Remarks: remakrsRef.current?.value,\n      Branch: branchRef.current?.value,\n      checks: JSON.stringify(pdcTableData),\n    };\n    if (pdcMode === \"update\") {\n      codeCondfirmationAlert({\n        isUpdate: true,\n        cb: (userCodeConfirmation) => {\n          mutate({ ...stateSubmited, userCodeConfirmation, fileToSave });\n        },\n      });\n    } else {\n      saveCondfirmationAlert({\n        isConfirm: () => {\n          mutate({ ...stateSubmited, fileToSave });\n        },\n      });\n    }\n  }, [mutate, selectedFiles, pdcMode])\n\n  const handleDragLeave = (e: React.DragEvent<HTMLDivElement>) => {\n    e.preventDefault();\n    setIsDragging(false);\n  };\n  const handleDragEnter = (e: React.DragEvent<HTMLDivElement>) => {\n    e.preventDefault();\n    setIsDragging(true);\n  };\n  const handleDrop = (e: React.DragEvent<HTMLDivElement>) => {\n    e.preventDefault();\n    const fileList = e.dataTransfer.files;\n    const files = Array.from(fileList);\n    const newFiles = [...selectedFiles, ...files];\n    setIsDragging(false);\n    if (checkFile(newFiles)) {\n      fileInputRef.current?.click();\n      return alert(\"file is not valid Extention!\");\n    } else {\n      setSelectedFiles(newFiles);\n    }\n  };\n  const clickPDCReceipt = () => {\n    const pdcTableData = tableRef.current.getDataFormatted()\n\n    flushSync(() => {\n      const state = {\n        Ref_No: refNoRef.current?.value,\n        PNo: pnRef.current?.value,\n        IDNo: PNoRef.current,\n        Date: dateRef.current?.value,\n        Name: clientnameRef.current?.value,\n        Remarks: remakrsRef.current?.value,\n        Branch: branchRef.current?.value,\n      };\n\n      localStorage.removeItem(\"printString\");\n      localStorage.setItem(\"dataString\", JSON.stringify(pdcTableData));\n      localStorage.setItem(\"paper-width\", \"8.5in\");\n      localStorage.setItem(\"paper-height\", \"11in\");\n      localStorage.setItem(\"module\", \"pdc\");\n      localStorage.setItem(\"state\", JSON.stringify(state));\n      localStorage.setItem(\n        \"column\",\n        JSON.stringify([\n          { datakey: \"Check_No\", header: \"CHECK NO\", width: \"80px\" },\n          { datakey: \"Check_Date\", header: \"DATE\", width: \"130px\" },\n          { datakey: \"BankName\", header: \"BANK\", width: \"240px\" },\n          { datakey: \"Check_Amnt\", header: \"AMOUNT\", width: \"70px\" },\n          { datakey: \"SEQ\", header: \"SEQ\", width: \"30px\" },\n        ])\n      );\n\n      localStorage.setItem(\n        \"title\",\n        user?.department === \"UMIS\"\n          ? \"UPWARD MANAGEMENT INSURANCE SERVICES\\n Post Date Checks Receipt\"\n          : \"UPWARD CONSULTANCY SERVICES AND MANAGEMENT INC.\\n Post Date Checks Receipt\"\n      );\n    });\n    window.open(\"/dashboard/print\", \"_blank\");\n  };\n  const clickPDCLabeling = () => {\n    let printString = () => {\n      return (\n        <div>\n          <p\n            style={{\n              color: \"#d1d5db\",\n              fontSize: \"11px\",\n              textAlign: \"center\",\n              padding: 0,\n              marginTop: \"8px\",\n              marginBottom: 0,\n            }}\n          >\n            UCSMI\n          </p>\n          <p\n            style={{\n              color: \"#d1d5db\",\n              fontSize: \"11px\",\n              textAlign: \"center\",\n              padding: 0,\n              margin: 0,\n            }}\n          >\n            {clientnameRef.current?.value}\n          </p>\n          <p\n            style={{\n              color: \"#d1d5db\",\n              fontSize: \"11px\",\n              textAlign: \"center\",\n              padding: 0,\n              margin: 0,\n            }}\n          >\n            {PNoRef.current}\n          </p>\n          <p\n            style={{\n              color: \"#d1d5db\",\n              fontSize: \"11px\",\n              textAlign: \"center\",\n              padding: 0,\n              margin: \"20px\",\n            }}\n          >\n            {refNoRef.current?.value}\n          </p>\n        </div>\n      );\n    };\n\n    flushSync(() => {\n      const elementString = ReactDOMServer.renderToString(printString());\n      localStorage.setItem(\"printString\", elementString);\n      localStorage.removeItem(\"dataString\");\n      localStorage.setItem(\"paper-width\", \"8.5in\");\n      localStorage.setItem(\"paper-height\", \"11in\");\n    });\n    window.open(\"/dashboard/print\", \"_blank\");\n  };\n\n  function resetPDC() {\n    setPdcMode('')\n    tableRef.current.setSelectedRow(null)\n    tableRef.current.setData([])\n    refetchNewRefNumber()\n\n    if (dateRef.current) {\n      dateRef.current.value = format(new Date(), \"yyyy-MM-dd\")\n    }\n    if (remakrsRef.current) {\n      remakrsRef.current.value = ''\n    }\n    if (pnRef.current) {\n      pnRef.current.value = ''\n    }\n    if (branchRef.current) {\n      branchRef.current.value = ''\n    }\n    if (clientnameRef.current) {\n      clientnameRef.current.value = ''\n    }\n\n\n\n  }\n  function formatNumber(num: number) {\n    return (num || 0).toLocaleString(\"en-US\", {\n      minimumFractionDigits: 2,\n      maximumFractionDigits: 2,\n    })\n  }\n  function handleCheckDetailsSave() {\n\n    function incrementStringNumbers(\n      str: string,\n      increment: number\n    ) {\n      let num = parseInt(str);\n      num = num + increment;\n      return num.toString().padStart(str.length, \"0\");\n    }\n    function incrementDate(dateString: any, i: number) {\n      const currentDate = new Date(\n        dateString\n      );\n      currentDate.setMonth(currentDate.getMonth() + i);\n\n      return format(currentDate, 'yyyy-MM-dd')\n    }\n    function isValidDate(dateString: string): boolean {\n      const date = new Date(dateString);\n      return date instanceof Date && !isNaN(date.getTime());\n    }\n\n    if (\n      _checknoRef.current &&\n      _bankRef.current &&\n      _branchRef.current &&\n      _remarksRef.current &&\n      _chekdateRef.current &&\n      _amountRef.current &&\n      _checkcountRef.current\n    ) {\n\n\n      const tableRows = tableRef.current.getDataFormatted()\n      const selectedIndex = tableRef.current.getSelectedRow()\n\n      const filteredChecks = tableRows.filter((itm: any) => {\n        return _checknoRef.current && _checknoRef.current.value === itm.Check_No\n      })\n\n\n      if (filteredChecks.length > 0 && selectedIndex === null) {\n        alert('check no. is already exist!')\n        _checknoRef.current.focus()\n        return\n      }\n      if (_checknoRef.current.value === '') {\n        alert('check no. is required!')\n        _checknoRef.current.focus()\n        return\n      } else if (_bankRef.current.value === '') {\n        alert('bank is required!')\n        _bankRef.current.focus()\n        return\n      } else if (_branchRef.current.value === '') {\n        alert('branch is required!')\n        _branchRef.current.focus()\n        return\n      } else if (!isValidDate(_chekdateRef.current.value)) {\n        alert('invalid date!')\n        _chekdateRef.current.focus()\n        return\n      } else if (parseFloat(_amountRef.current.value.replace(/,/g, '')) <= 0) {\n        alert('amount must be greater than 0!')\n        _amountRef.current.focus()\n        return\n      }\n\n\n\n      if (\n        _checknoRef.current &&\n        _bankRef.current &&\n        _branchRef.current &&\n        _remarksRef.current &&\n        _chekdateRef.current &&\n        _amountRef.current &&\n        _checkcountRef.current\n      ) {\n\n\n\n        if (selectedIndex) {\n          const selectedRow = tableRef.current.getData()\n          selectedRow[selectedIndex][0] = _checknoRef.current.value\n          selectedRow[selectedIndex][1] = _chekdateRef.current.value\n          selectedRow[selectedIndex][2] = _amountRef.current.value\n          selectedRow[selectedIndex][3] = _bankRef.current.value\n          selectedRow[selectedIndex][4] = _branchRef.current.value\n          selectedRow[selectedIndex][5] = _remarksRef.current.value\n          selectedRow[selectedIndex][6] = _slipCodeRef.current\n          selectedRow[selectedIndex][7] = _slipDateRef.current\n          selectedRow[selectedIndex][8] = _checkOR.current\n          selectedRow[selectedIndex][9] = _bankCode.current\n          tableRef.current.setData(selectedRow)\n          tableRef.current.setSelectedRow(null)\n          setHasSelectedRow(null)\n        } else {\n          const newData: any = []\n          for (\n            let i = 0;\n            i < parseInt(_checkcountRef.current.value);\n            i++\n          ) {\n            const data: any = {\n              Check_No: incrementStringNumbers(\n                _checknoRef.current.value,\n                i\n              ),\n              Check_Date: incrementDate(_chekdateRef.current.value, i),\n              Check_Amnt: _amountRef.current.value,\n              BankName: _bankRef.current.value,\n              BankCode: _bankCode.current,\n              Branch: _branchRef.current.value,\n              Check_Remarks: _remarksRef.current.value,\n              Deposit_Slip: _slipCodeRef.current,\n              DateDeposit: _slipDateRef.current,\n              OR_No: _checkOR.current,\n            };\n            newData.push(data)\n          }\n          tableRef.current.setDataFormated(newData)\n\n        }\n      }\n\n\n\n      setOpenPdcInputModal(false);\n    }\n\n  }\n  useEffect(() => {\n    const handleKeyDown = (event: any) => {\n      if ((event.ctrlKey || event.metaKey) && event.key === 's') {\n        event.preventDefault();\n        handleOnSave(event);\n      }\n    };\n\n    window.addEventListener('keydown', handleKeyDown);\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [handleOnSave]);\n\n  const isDisableField = pdcMode === \"\";\n\n\n\n\n  return (\n    <>\n      <PageHelmet title=\"PDC\" />\n      {(loadingAddNew ||\n        isLoadingSelectedSearch) && <Loading />}\n      <div\n        style={{\n          width: \"100%\",\n          height: \"100%\",\n          flex: 1,\n          background: \"red\",\n          padding: \"10px\",\n          backgroundColor: \"#F1F1F1\",\n\n        }}\n      >\n\n        {ModalSearchBanks}\n        {UpwardPDCModal}\n        {ModalSearchPdcIDs}\n        <Box\n          sx={(theme) => ({\n            display: \"flex\",\n            alignItems: \"center\",\n            columnGap: \"20px\",\n            [theme.breakpoints.down(\"sm\")]: {\n              flexDirection: \"column\",\n              alignItems: \"flex-start\",\n              flex: 1,\n              marginBottom: \"15px\",\n            },\n          })}\n        >\n          <div\n            style={{\n              display: \"flex\",\n              alignItems: \"center\",\n              columnGap: \"5px\",\n              marginBottom: \"15px\",\n            }}\n          >\n            {isLoadingModalSearchPDC ? (\n              <LoadingButton loading={isLoadingModalSearchPDC} />\n            ) : (\n              <TextInput\n                label={{\n                  title: \"Search: \",\n                  style: {\n                    fontSize: \"12px\",\n                    fontWeight: \"bold\",\n                    width: \"50px\",\n                  },\n                }}\n                input={{\n                  className: \"search-input-up-on-key-down\",\n                  type: \"search\",\n                  onKeyDown: (e) => {\n                    if (e.key === \"Enter\" || e.key === \"NumpadEnter\") {\n                      e.preventDefault();\n                      openUpwardPDCModal(e.currentTarget.value);\n                    }\n                  },\n                  style: { width: \"500px\" },\n                }}\n\n                icon={<SearchIcon sx={{ fontSize: \"18px\" }} />}\n                onIconClick={(e) => {\n                  e.preventDefault()\n                  if (searchInputRef.current)\n                    openUpwardPDCModal(searchInputRef.current.value);\n\n                }}\n                inputRef={searchInputRef}\n              />\n            )}\n            {pdcMode === \"\" && (\n              <Button\n                sx={{\n                  height: \"30px\",\n                  fontSize: \"11px\",\n                }}\n                variant=\"contained\"\n                startIcon={<AddIcon sx={{ width: 15, height: 15 }} />}\n                id=\"entry-header-save-button\"\n                color=\"primary\"\n                onClick={() => {\n\n                  setPdcMode('add')\n                }}\n              >\n                New\n              </Button>\n            )}\n            <LoadingButton\n              sx={{\n                height: \"30px\",\n                fontSize: \"11px\",\n              }}\n              ref={savePDCButtonRef}\n              id=\"save-entry-header\"\n              color=\"success\"\n              variant=\"contained\"\n              type=\"submit\"\n              onClick={handleOnSave}\n              disabled={pdcMode === \"\"}\n              loading={loadingAddNew}\n              startIcon={<SaveIcon sx={{ width: 15, height: 15 }} />}\n            >\n              Save\n            </LoadingButton>\n            {(pdcMode === \"add\" || pdcMode === \"update\") && (\n              <Button\n                sx={{\n                  height: \"30px\",\n                  fontSize: \"11px\",\n                }}\n                variant=\"contained\"\n                startIcon={<CloseIcon sx={{ width: 15, height: 15 }} />}\n                onClick={() => {\n                  Swal.fire({\n                    title: \"Are you sure?\",\n                    text: \"You won't be able to revert this!\",\n                    icon: \"warning\",\n                    showCancelButton: true,\n                    confirmButtonColor: \"#3085d6\",\n                    cancelButtonColor: \"#d33\",\n                    confirmButtonText: \"Yes, cancel it!\",\n                  }).then((result) => {\n                    if (result.isConfirmed) {\n                      resetPDC()\n                    }\n                  });\n                }}\n                color=\"error\"\n              >\n                Cancel\n              </Button>\n            )}\n            <Button\n              sx={{\n                height: \"30px\",\n                fontSize: \"11px\",\n              }}\n              disabled={pdcMode === \"\"}\n              variant=\"contained\"\n              startIcon={<AddIcon sx={{ width: 15, height: 15 }} />}\n              onClick={() => {\n                flushSync(() => {\n                  setOpenPdcInputModal(true);\n                });\n\n                wait(100).then(() => {\n                  const tableRows = tableRef.current.getDataFormatted()\n                  const getLastCheck_No: any = tableRows[tableRows.length - 1];\n                  if (_checknoRef.current) {\n                    _checknoRef.current.value = incrementCheckNo(\n                      getLastCheck_No?.Check_No\n                    );\n                  }\n\n                  tableRef.current.setSelectedRow(null)\n                  setHasSelectedRow(null)\n                  _checknoRef.current?.focus();\n                })\n              }}\n              ref={addRefButton}\n            >\n              Add Check\n            </Button>\n            <div>\n              <Button\n                disabled={pdcMode !== \"update\"}\n                id=\"basic-button\"\n                aria-controls={open ? \"basic-menu\" : undefined}\n                aria-haspopup=\"true\"\n                aria-expanded={open ? \"true\" : undefined}\n                onClick={handleClick}\n                sx={{\n                  height: \"30px\",\n                  fontSize: \"11px\",\n                  color: \"white\",\n                  backgroundColor: grey[600],\n                  \"&:hover\": {\n                    backgroundColor: grey[700],\n                  },\n                }}\n              >\n                Print\n              </Button>\n              <Menu\n                id=\"basic-menu\"\n                anchorEl={anchorEl}\n                open={open}\n                onClose={handleClose}\n                MenuListProps={{\n                  \"aria-labelledby\": \"basic-button\",\n                }}\n              >\n                <MenuItem onClick={clickPDCReceipt}>PDC Receipt</MenuItem>\n                <MenuItem onClick={clickPDCLabeling}>PDC Labeling</MenuItem>\n              </Menu>\n            </div>\n          </div>\n        </Box>\n        <form\n          onKeyDown={(e) => {\n            if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n              e.preventDefault();\n              return;\n            }\n          }}\n          style={{\n            marginBottom: \"20px\",\n          }}\n        >\n          <Box\n            sx={(theme) => ({\n              display: \"flex\",\n              columnGap: \"15px\",\n              flexDirection: \"row\",\n              [theme.breakpoints.down(\"md\")]: {\n                flexDirection: \"column\",\n                rowGap: \"10px\",\n              },\n            })}\n          >\n            <Box\n              sx={{\n                display: \"flex\",\n                gap: \"10px\",\n                width: \"100%\",\n              }}\n            >\n              <fieldset\n                style={\n                  {\n                    flex: 1,\n                    display: \"flex\",\n                    flexDirection: \"column\",\n                    gap: \"10px\",\n                    padding: \"15px\",\n                    border: \"1px solid #cbd5e1\",\n                    borderRadius: \"5px\",\n                  } as any\n                }\n              >\n                <div\n                  style={{\n                    display: \"flex\",\n                    gap: \"15px\",\n                  }}\n                >\n                  {newRefNumberLoading ? (\n                    <LoadingButton loading={newRefNumberLoading} />\n                  ) : (\n\n                    <TextInput\n                      label={{\n                        title: \"Reference No.\",\n                        style: {\n                          fontSize: \"12px\",\n                          fontWeight: \"bold\",\n                          width: \"100px\",\n                        },\n                      }}\n                      input={{\n                        disabled: isDisableField,\n                        type: \"text\",\n                        style: { width: \"300px\" },\n                        onKeyDown: (e) => {\n                          if (e.key === \"Enter\" || e.key === \"NumpadEnter\") {\n                            e.preventDefault();\n                            dateRef.current?.focus()\n                          }\n                        }\n                      }}\n                      inputRef={refNoRef}\n                      icon={<RestartAltIcon sx={{ fontSize: \"18px\", color: isDisableField ? \"gray\" : \"black\" }} />}\n\n                      disableIcon={isDisableField}\n                    />\n\n                  )}\n\n                  <TextInput\n                    label={{\n                      title: \"Date : \",\n                      style: {\n                        fontSize: \"12px\",\n                        fontWeight: \"bold\",\n                        width: \"50px\",\n                      },\n                    }}\n                    input={{\n                      disabled: isDisableField,\n                      type: \"date\",\n                      defaultValue: format(new Date(), \"yyyy-MM-dd\"),\n                      style: { width: \"190px\" },\n                      onKeyDown: (e) => {\n                        if (e.code === \"NumpadEnter\" || e.code === 'Enter') {\n                          remakrsRef.current?.focus()\n                        }\n                      }\n                    }}\n                    inputRef={dateRef}\n                  />\n\n\n                </div>\n\n                <TextAreaInput\n                  label={{\n                    title: \"Remarks : \",\n                    style: {\n                      fontSize: \"12px\",\n                      fontWeight: \"bold\",\n                      width: \"100px\",\n                    },\n                  }}\n                  textarea={{\n                    rows: 2,\n                    disabled: isDisableField,\n                    style: { flex: 1 },\n                    onKeyDown: (e) => {\n                      e.stopPropagation()\n                      if ((e.code === \"NumpadEnter\" && !e.shiftKey) || (e.code === 'Enter' && !e.shiftKey)) {\n                        pnRef.current?.focus()\n                      }\n                    },\n\n                  }}\n                  _inputRef={remakrsRef}\n                />\n\n\n              </fieldset>\n              <fieldset\n                style={\n                  {\n                    flex: 1,\n                    display: \"flex\",\n                    gap: \"10px\",\n                    padding: \" 15px\",\n                    border: \"1px solid #cbd5e1\",\n                    borderRadius: \"5px\",\n                    flexDirection: \"column\",\n                  } as any\n                }\n              >\n                <div\n                  style={{ width: \"100%\", flex: 1, display: \"flex\", gap: \"15px\" }}\n                >\n                  {isLoadingModalSearchPdcIDs ? (\n                    <LoadingButton loading={isLoadingModalSearchPdcIDs} />\n                  ) : (\n                    <TextInput\n                      label={{\n                        title: \"PN/Client ID : \",\n                        style: {\n                          fontSize: \"12px\",\n                          fontWeight: \"bold\",\n                          width: \"100px\",\n                        },\n                      }}\n                      input={{\n                        disabled: isDisableField,\n                        type: \"text\",\n                        style: { width: \"250px\", height: \"22px\" },\n                        onKeyDown: (e) => {\n                          if (e.key === \"Enter\" || e.key === \"NumpadEnter\") {\n                            e.preventDefault();\n                            if (pnRef.current) {\n                              openModalSearchPdcIDs(pnRef.current.value)\n                            }\n                          }\n                        }\n                      }}\n                      inputRef={pnRef}\n                      icon={<PersonSearchIcon sx={{ fontSize: \"18px\", color: isDisableField ? \"gray\" : \"black\" }} />}\n                      onIconClick={(e) => {\n                        e.preventDefault()\n                        if (pnRef.current) {\n                          openModalSearchPdcIDs(pnRef.current.value)\n                        }\n                      }}\n                      disableIcon={isDisableField}\n                    />\n\n                  )}\n\n                  <TextInput\n                    label={{\n                      title: \"Branch : \",\n                      style: {\n                        fontSize: \"12px\",\n                        fontWeight: \"bold\",\n                        width: \"70px\",\n                      },\n                    }}\n                    input={{\n                      disabled: isDisableField,\n                      type: \"text\",\n                      style: { width: \"auto\", height: \"22px\" },\n                      onKeyDown: (e) => {\n                        if (e.code === \"NumpadEnter\" || e.code === 'Enter') {\n                          clientnameRef.current?.focus()\n                        }\n                      }\n                    }}\n                    inputRef={branchRef}\n                  />\n\n                </div>\n\n                <div\n                  style={{ width: \"100%\", display: \"flex\", columnGap: \"10px\" }}\n                >\n                  <TextAreaInput\n                    label={{\n                      title: \"Clients Name : \",\n                      style: {\n                        fontSize: \"12px\",\n                        fontWeight: \"bold\",\n                        width: \"100px\",\n                      },\n                    }}\n                    textarea={{\n                      rows: 2,\n                      disabled: isDisableField,\n                      style: { width: \"325px\" },\n                      onKeyDown: (e) => {\n                        e.stopPropagation()\n                        if ((e.code === \"NumpadEnter\" && !e.shiftKey) || (e.code === 'Enter' && !e.shiftKey)) {\n                          savePDCButtonRef.current?.click();\n                        }\n                      },\n\n                    }}\n                    _inputRef={clientnameRef}\n                  />\n                  <Button\n                    sx={{\n                      height: \"27px\",\n                      fontSize: \"11px\",\n                    }}\n                    disabled={pdcMode === \"\"}\n                    variant=\"contained\"\n                    startIcon={<DownloadIcon sx={{ width: 15, height: 15 }} />}\n                    onClick={() => {\n                      setShowModal(true);\n                    }}\n                  >\n                    Upload Check\n                  </Button>\n                </div>\n              </fieldset>\n            </Box>\n          </Box>\n        </form>\n        <DataGridViewReact\n          disbaleTable={isDisableField}\n          ref={tableRef}\n          rows={[]}\n          columns={pdcColumn}\n          getSelectedItem={(rowSelected: any, _: any, RowIndex: any) => {\n            if (rowSelected) {\n              if (\n                (rowSelected[6] && rowSelected[6] !== \"\") ||\n                (rowSelected[7] && rowSelected[7] !== \"\") ||\n                (rowSelected[8] && rowSelected[8] !== \"\")\n              ) {\n                setHasSelectedRow(null)\n                tableRef.current.setSelectedRow(null)\n                return Swal.fire({\n                  position: \"center\",\n                  icon: \"warning\",\n                  title: `Unable to delete. Check No ${rowSelected[0]} is already ${rowSelected[8]} issued of OR!`,\n                  showConfirmButton: false,\n                  timer: 1500,\n                });\n              }\n              flushSync(() => {\n                setOpenPdcInputModal(true);\n              })\n              wait(100).then(() => {\n                if (\n                  _checknoRef.current &&\n                  _bankRef.current &&\n                  _branchRef.current &&\n                  _remarksRef.current &&\n                  _chekdateRef.current &&\n                  _amountRef.current\n                ) {\n                  _checknoRef.current.value = rowSelected[0]\n                  _chekdateRef.current.value = rowSelected[1]\n                  _amountRef.current.value = formatNumber(parseFloat(rowSelected[2].replace(/,/g, '')))\n                  _bankRef.current.value = rowSelected[3]\n                  _branchRef.current.value = rowSelected[4]\n                  _remarksRef.current.value = rowSelected[5]\n                  _slipCodeRef.current = rowSelected[6] || \"\"\n                  _slipDateRef.current = rowSelected[7] || \"\"\n                  _checkOR.current = rowSelected[8] || \"\"\n                  _bankCode.current = rowSelected[9]\n\n                  console.log(rowSelected[0])\n                  _bankRef.current.focus()\n                }\n              })\n\n              setHasSelectedRow(RowIndex)\n            } else {\n              setHasSelectedRow(null)\n            }\n          }}\n          onKeyDown={(rowSelected: any, RowIndex: any, e: any) => {\n            if (e.code === \"Delete\" || e.code === \"Backspace\") {\n\n              if (\n                (rowSelected[6] && rowSelected[6] !== \"\") ||\n                (rowSelected[7] && rowSelected[7] !== \"\") ||\n                (rowSelected[8] && rowSelected[8] !== \"\")\n              ) {\n                setHasSelectedRow(null)\n                tableRef.current.setSelectedRow(null)\n\n                return Swal.fire({\n                  position: \"center\",\n                  icon: \"warning\",\n                  title: `Unable to delete. Check No ${rowSelected[0]} is already ${rowSelected[8]} issued of OR!`,\n                  showConfirmButton: false,\n                  timer: 1500,\n                });\n              }\n\n\n              Swal.fire({\n                title: \"Are you sure?\",\n                text: `You won't to delete this Check No. ${rowSelected[0]}`,\n                icon: \"warning\",\n                showCancelButton: true,\n                confirmButtonColor: \"#3085d6\",\n                cancelButtonColor: \"#d33\",\n                confirmButtonText: \"Yes, delete it!\",\n              }).then((result) => {\n                if (result.isConfirmed) {\n                  setTimeout(() => {\n                    const newData = tableRef.current.getData()\n                    newData.splice(RowIndex, 1);\n                    tableRef.current.setData(newData)\n\n                    setHasSelectedRow(null)\n                    tableRef.current.setSelectedRow(null)\n                  }, 100)\n                }\n              });\n            }\n          }}\n        />\n\n        <Modal\n          open={openPdcInputModal}\n          onClose={() => {\n            setOpenPdcInputModal(false);\n            tableRef.current.setSelectedRow(null)\n            setHasSelectedRow(null)\n\n          }}\n          aria-labelledby=\"modal-modal-title\"\n          aria-describedby=\"modal-modal-description\"\n        >\n          <Box\n            sx={{\n              position: \"absolute\" as \"absolute\",\n              top: \"50%\",\n              left: \"50%\",\n              transform: \"translate(-50%, -50%)\",\n              width: \"auto\",\n              bgcolor: \"background.paper\",\n              p: 4,\n            }}\n          >\n            <Typography id=\"modal-modal-title\" variant=\"h6\" component=\"h2\">\n              Check Detail\n            </Typography>\n            <br />\n            <div\n              style={{\n                display: \"flex\",\n                columnGap: \"10px\",\n              }}\n            >\n              <div\n                style={{\n                  display: \"flex\",\n                  flexDirection: \"column\",\n                  gap: \"10px\",\n                }}\n              >\n                <TextInput\n                  label={{\n                    title: \"Check No : \",\n                    style: {\n                      fontSize: \"12px\",\n                      fontWeight: \"bold\",\n                      width: \"70px\",\n                    },\n                  }}\n                  input={{\n                    disabled: hasSelectedRow !== null,\n                    type: \"text\",\n                    style: { width: \"190px\" },\n                    onKeyDown: (e) => {\n                      if (e.code === \"NumpadEnter\" || e.code === 'Enter') {\n                        _bankRef.current?.focus()\n                      }\n                    },\n                  }}\n                  inputRef={_checknoRef}\n                />\n                {isLoadingModalSearchbanks ? (\n                  <LoadingButton loading={isLoadingModalSearchbanks} />\n                ) : (\n                  <TextInput\n                    label={{\n                      title: \"Bank : \",\n                      style: {\n                        fontSize: \"12px\",\n                        fontWeight: \"bold\",\n                        width: \"70px\",\n                      },\n                    }}\n                    input={{\n                      type: \"text\",\n                      style: { width: \"190px\" },\n                      onKeyDown: (e) => {\n                        if (e.code === \"NumpadEnter\" || e.code === 'Enter') {\n                          return openModalSearchBanks(\n                            e.currentTarget.value\n                          );\n                        }\n                      }\n                    }}\n                    icon={<AccountBalanceIcon sx={{ fontSize: \"18px\" }} />}\n                    onIconClick={(e) => {\n                      e.preventDefault()\n                      if (_bankRef.current) {\n                        openModalSearchBanks(\n                          _bankRef.current?.value\n                        );\n                      }\n                    }}\n                    inputRef={_bankRef}\n                  />\n                )}\n\n                <TextInput\n                  label={{\n                    title: \"Branch : \",\n                    style: {\n                      fontSize: \"12px\",\n                      fontWeight: \"bold\",\n                      width: \"70px\",\n                    },\n                  }}\n                  input={{\n                    type: \"text\",\n                    style: { width: \"190px\" },\n                    onKeyDown: (e) => {\n                      if (e.code === \"NumpadEnter\" || e.code === 'Enter') {\n                        _remarksRef.current?.focus()\n                      }\n                    },\n                  }}\n                  inputRef={_branchRef}\n                />\n                <TextAreaInput\n                  label={{\n                    title: \"Remarks : \",\n                    style: {\n                      fontSize: \"12px\",\n                      fontWeight: \"bold\",\n                      width: \"70px\",\n                    },\n                  }}\n                  textarea={{\n                    rows: 4,\n                    disabled: isDisableField,\n                    style: { flex: 1 },\n                    onKeyDown: (e) => {\n                      if (e.key === \"Enter\" && e.shiftKey) {\n                        return\n                      }\n                      if (e.code === \"NumpadEnter\" || e.code === 'Enter') {\n                        _chekdateRef.current?.focus()\n                      }\n                    },\n                  }}\n                  _inputRef={_remarksRef}\n                />\n              </div>\n              <div\n                style={{\n                  display: \"flex\",\n                  gap: \"10px\",\n                  flexDirection: \"column\",\n                }}\n              >\n\n                <TextInput\n                  label={{\n                    title: \"Check Dated : \",\n                    style: {\n                      fontSize: \"12px\",\n                      fontWeight: \"bold\",\n                      width: \"90px\",\n                    },\n                  }}\n                  input={{\n                    disabled: isDisableField,\n                    type: \"date\",\n                    style: { width: \"190px\" },\n                    defaultValue: new Date().toISOString().split(\"T\")[0],\n                    onKeyDown: (e) => {\n                      if (e.code === \"NumpadEnter\" || e.code === 'Enter') {\n                        _amountRef.current?.focus()\n                      }\n                    },\n                  }}\n                  inputRef={_chekdateRef}\n                />\n\n                <div style={{\n                  display: \"flex\"\n                }}>\n                  <label style={{\n                    fontSize: \"12px\",\n                    fontWeight: \"bold\",\n                    width: \"90px\",\n                  }}>Amount :</label>\n                  <NumericFormat\n                    style={{\n                      flex: 1\n                    }}\n                    value={_amountRef.current?.value ?? \"\"}\n                    getInputRef={_amountRef}\n                    allowNegative={false}\n                    thousandSeparator\n                    valueIsNumericString\n                    onKeyDown={(e) => {\n                      if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n                        let currentValue = _amountRef.current?.value as string;\n                        let numericValue = parseFloat(currentValue.replace(/,/g, ''));\n                        if (_amountRef.current) {\n                          if (isNaN(numericValue)) {\n                            _amountRef.current.value = \"0.00\";\n                          } else {\n                            if (!currentValue.includes(\".\")) {\n                              _amountRef.current.value = `${formatNumber(numericValue)}`;\n                            } else {\n                              _amountRef.current.value = formatNumber(numericValue);\n                            }\n                          }\n                        }\n                        _checkcountRef.current?.focus()\n                      }\n                    }}\n                  />\n                </div>\n                {hasSelectedRow === null && (\n                  <TextInput\n                    label={{\n                      title: \"Check Count : \",\n                      style: {\n                        fontSize: \"12px\",\n                        fontWeight: \"bold\",\n                        width: \"90px\",\n                      },\n                    }}\n                    input={{\n                      disabled: isDisableField,\n                      type: \"number\",\n                      style: { width: \"190px\" },\n                      onKeyDown: (e) => {\n                        if (e.code === \"NumpadEnter\" || e.code === 'Enter') {\n                          const timeout = setTimeout(() => {\n                            checkModalSaveButton.current?.click();\n                            clearTimeout(timeout);\n                          }, 100);\n                        }\n                      },\n                    }}\n                    inputRef={_checkcountRef}\n                  />\n                )}\n              </div>\n            </div>\n            <div\n              style={{\n                display: \"flex\",\n                justifyContent: \"flex-end\",\n                width: \"100%\",\n                marginTop: \"10px\",\n              }}\n            >\n              <div style={{ display: \"flex\", gap: \"10px\" }}>\n                <Button\n                  ref={checkModalSaveButton}\n                  action={checkModalSaveButtonActionRef}\n                  color=\"primary\"\n                  variant=\"contained\"\n                  autoFocus={hasSelectedRow !== null}\n                  onClick={() => {\n                    handleCheckDetailsSave()\n                  }}\n                  sx={{\n                    height: \"30px\",\n                    fontSize: \"11px\",\n                  }}\n                >\n                  {hasSelectedRow !== null ? \"Update\" : \"Save\"}\n                </Button>\n                <Button\n                  color=\"success\"\n                  variant=\"contained\"\n                  sx={{\n                    height: \"30px\",\n                    fontSize: \"11px\",\n                  }}\n                  onClick={() => {\n                    setOpenPdcInputModal(false);\n                    tableRef.current.setSelectedRow(null)\n                    setHasSelectedRow(null)\n                  }}\n                >\n                  Cancel\n                </Button>\n                <IconButton\n                  style={{\n                    position: \"absolute\",\n                    top: \"10px\",\n                    right: \"10px\",\n                  }}\n                  aria-label=\"search-client\"\n                  onClick={() => {\n                    tableRef.current.setSelectedRow(null)\n                    setHasSelectedRow(null)\n                    setOpenPdcInputModal(false);\n                  }}\n                >\n                  <CloseIcon />\n                </IconButton>\n              </div>\n            </div>\n          </Box>\n        </Modal>\n        <div\n          style={{\n            display: showModal ? \"flex\" : \"none\",\n            position: \"absolute\",\n            top: 0,\n            bottom: 0,\n            left: 0,\n            right: 0,\n            background: \"rgba(158, 155, 157, 0.31)\",\n            zIndex: \"999\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n          }}\n        >\n          <div\n            style={{\n              width: \"90%\",\n              height: \"90%\",\n            }}\n          >\n            <div\n              style={{\n                width: \"90%\",\n                height: \"90%\",\n                overflow: \"auto\",\n                background: \"white\",\n                padding: \"20px\",\n                margin: \"auto\",\n                zIndex: \"9929\",\n                boxShadow: \" -1px 1px 13px 6px rgba(0,0,0,0.54)\",\n                position: \"relative\",\n              }}\n            >\n              <div\n                style={{\n                  height: \"100%\",\n                  width: \"100%\",\n                  position: \"relative\",\n                  display: \"flex\",\n                  justifyContent: \"center\",\n                  alignItems: \"center\",\n                  flexDirection: \"column\",\n                }}\n              >\n                <IconButton\n                  sx={{\n                    position: \"absolute\",\n                    right: \"5px\",\n                    top: \"5px\",\n                  }}\n                  onClick={() => {\n                    setShowModal(false);\n                  }}\n                >\n                  <CloseIcon />\n                </IconButton>\n                <div\n                  style={{\n                    width: \"100%\",\n                    height: \"500px\",\n                    border: isDragging ? \"5px dashed green\" : \"5px dashed grey\",\n                    overflow: \"auto\",\n                    padding: \"10px\",\n                  }}\n                  onDragEnter={handleDragEnter}\n                  onDragOver={(e) => e.preventDefault()}\n                  onDragLeave={handleDragLeave}\n                  onDrop={handleDrop}\n                >\n                  <div\n                    id=\"upload-container\"\n                    style={{\n                      width: \"100%\",\n                      height: \"100%\",\n                      display: \"flex\",\n                      gap: \"10px\",\n                      flexWrap: \"wrap\",\n                    }}\n                    onDragEnter={handleDragEnter}\n                    onDragOver={(e) => e.preventDefault()}\n                    onDragLeave={handleDragLeave}\n                    onDrop={handleDrop}\n                  >\n                    {selectedFiles.map((itm, idx) => {\n                      return (\n                        <DisplayFile\n                          key={idx}\n                          itm={itm}\n                          selectedFiles={selectedFiles}\n                          setSelectedFiles={setSelectedFiles}\n                          fileInput={fileInputRef}\n                        />\n                      );\n                    })}\n                  </div>\n                  {selectedFiles.length <= 0 && (\n                    <div\n                      style={{\n                        position: \"absolute\",\n                        top: \"50%\",\n                        left: \"50%\",\n                        transform: \"translate(-50%,-50%)\",\n                        textAlign: \"center\",\n                      }}\n                    >\n                      <DriveFolderUploadIcon\n                        sx={{ fontSize: \"20em\", color: \"#64748b\" }}\n                      />\n                    </div>\n                  )}\n                  <input\n                    ref={fileInputRef}\n                    type=\"file\"\n                    multiple\n                    style={{ display: \"none\", background: \"white\" }}\n                    id=\"input-file\"\n                    onChange={(e) => {\n                      const fileList = e.target.files as FileList;\n                      const files = Array.from(fileList);\n                      const newFiles = [...selectedFiles, ...files];\n                      if (checkFile(newFiles)) {\n                        return alert(\"file is not valid Extention!\");\n                      }\n                      setSelectedFiles(newFiles);\n                    }}\n                  />\n                </div>\n                <div\n                  style={{\n                    width: \"100%\",\n                  }}\n                >\n                  <Button\n                    fullWidth\n                    onClick={() => {\n                      const inputFile = document.getElementById(\"input-file\");\n                      inputFile?.click();\n                    }}\n                  >\n                    CLick it to upload\n                  </Button>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport function setNewStateValue(dispatch: any, obj: any) {\n  Object.entries(obj).forEach(([field, value]) => {\n    dispatch({ type: \"UPDATE_FIELD\", field, value });\n  });\n}\nexport function incrementCheckNo(Check_No: string) {\n  if (Check_No) {\n    let incrementedNumber = (parseInt(Check_No) + 1).toString();\n    while (incrementedNumber.length < Check_No.length) {\n      incrementedNumber = \"0\" + incrementedNumber;\n    }\n    return incrementedNumber;\n  }\n\n  return \"001\";\n}\n"],"names":["_ref","_ref$title","title","_jsxs","Helmet","children","_jsx","rel","type","href","concat","process","UpwardTable","forwardRef","UpwardTableRef","_pages$pageNumber","rows","column","width","height","dataReadOnly","_ref$onSelectionChang","onSelectionChange","_ref$isMultipleSelect","isMultipleSelect","_ref$freeze","freeze","onKeyDown","_ref$inputsearchselec","inputsearchselector","_ref$isRowSelectable","isRowSelectable","_ref$unSelectable","unSelectable","isLoading","onRightClick","_useState","useState","_useState2","_slicedToArray","pages","setPages","_useState3","_useState4","pageNumber","setPageNumber","onSelectionChangeRef","useRef","onKeyDownRef","_useState5","filter","itm","hide","_useState6","columns","setColumns","_useState7","_useState8","hoveredColumn","setHoveredColumn","_useState9","_useState10","selectedRows","setSelectedRows","_useState11","_useState12","lastSelectedRowIndex","setLastSelectedRowIndex","_useState13","_useState14","selectedItems","setSelectedItems","divRef","_useState15","_useState16","_clickTimeout","_setClickTimeout","useEffect","_pages","arr","chunkSize","arguments","length","undefined","result","i","push","slice","formatArrayIntoChunks","startResize","index","e","preventDefault","stopPropagation","startX","clientX","startWidth","doDrag","moveEvent","newWidth","updatedColumns","_toConsumableArray","document","addEventListener","stopDrag","removeEventListener","handleMouseEnter","handleMouseLeave","useImperativeHandle","resetTableSelected","row","querySelector","scrollIntoView","block","behavior","getSelectedIndex","getSelectedRows","d","idx","includes","getFirstColumn","getParentElement","current","getSelectedRowsOnClick","setSelectRows","indx","style","display","justifyContent","key","prevIndex","_row$querySelector","newPrevIndex","focus","input","tagName","divInput","_row$querySelector2","className","flexDirection","minHeight","ref","tabIndex","position","zIndex","top","background","map","col","fontWeight","defaultValue","headerName","readOnly","onChange","onMouseDown","onMouseEnter","onMouseLeave","rowIndex","onClick","event","shiftKey","rangeStart","Math","min","rangeEnd","max","newSelectedRows","selectedItemsParams","newSelectedRowsFiltered","selectedRowData","removeNullValue","data","getIndexAndData","ctrlKey","metaKey","handleRowClick","onDoubleClick","clearTimeout","timeoutId","setTimeout","handleRowDoubleClick","handleRowKeyDown","onContextMenu","rowSelected","handleRightClick","colIndex","value","field","Pagination","count","useUpwardTableModal","_mutationFn","myAxios","user","link","responseDataKey","_ref$onModalClose","onModalClose","id","useId","inputSearchRef","tableRef","parentRef","show","setShowModal","setRows","_useMutation","useMutation","mutationKey","mutationFn","_x","_asyncToGenerator","_regeneratorRuntime","mark","_callee","variable","wrap","_context","prev","next","get","url","queryUrlName","search","headers","Authorization","accessToken","abrupt","sent","stop","apply","onSuccess","res","mutate","throttledSearch","throttle","query","performSearch","closeModal","wait","then","_parentRef$current","Modal","open","onClose","left","transform","paddingTop","paddingBottom","paddingLeft","paddingRight","TextInput","label","marginBottom","currentTarget","target","datagridview","inputRef","IconButton","right","CloseIcon","fontSize","openModal","_inputSearchRef$curre","reducer","state","action","_objectSpread","_defineProperty","pdcColumn","pdcSearchColumn","flex","pdcBanksColumn","PostDateChecks","_queryFn","_mutationFn2","_onSuccess","_amountRef$current$va","_amountRef$current2","_React$useState","React","_React$useState2","anchorEl","setAnchorEl","Boolean","isDragging","setIsDragging","selectedFiles","setSelectedFiles","openPdcInputModal","setOpenPdcInputModal","showModal","searchInputRef","hasSelectedRow","setHasSelectedRow","pdcMode","setPdcMode","_useContext","useContext","AuthContext","searchRef","fileInputRef","savePDCButtonRef","checkModalSaveButton","checkModalSaveButtonActionRef","_checknoRef","_bankRef","_branchRef","_remarksRef","_chekdateRef","_amountRef","_checkcountRef","_bankCode","_slipCodeRef","_slipDateRef","_checkOR","addRefButton","subRefNoRef","PNoRef","subAccountRef","refNoRef","dateRef","remakrsRef","pnRef","branchRef","clientnameRef","_useQuery","useQuery","queryKey","queryFn","refetchOnWindowFocus","response","RefNo","pdcID","newRefNumberLoading","refetchNewRefNumber","refetch","_callee2","variables","_context2","mode","post","success","resetPDC","Swal","icon","message","showConfirmButton","timer","loadingAddNew","_useMutation2","_x2","_callee3","_context3","_x3","_callee5","_formatDataToDocument","Ref_No","_response$data$upload","uploadFiles","newObjContainerBasic","fileSelected","formatDataToDocument","_context6","_x4","_x5","_callee4","dataDocument","newObjContainer","_loop","_context5","basicItem","mainURL","blob","file","reader","_context4","uniqueFilename","fetch","File","fileName","fileType","FileReader","Promise","resolve","reject","onload","onerror","Error","name","readAsDataURL","delegateYield","alert","getSearchPDCCheck","upload","JSON","parse","all","setDataFormated","Name","Date","PNo","Acronym","Remarks","IDNo","sub_account","mutateSelectedSearch","isLoadingSelectedSearch","_useUpwardTableModal","selectedRow","client_id","closeModalSearchPdcIDs","ModalSearchPdcIDs","openModalSearchPdcIDs","isLoadingModalSearchPdcIDs","_useUpwardTableModal2","Bank_Code","Bank","closeModalSearchBanks","_branchRef$current","ModalSearchBanks","openModalSearchBanks","isLoadingModalSearchbanks","_useUpwardTableModal3","_searchRef$current","ref_no","closeUpwardPDCModal","UpwardPDCModal","openUpwardPDCModal","isLoadingModalSearchPDC","handleOnSave","useCallback","_x6","_callee6","_refNoRef$current","_pnRef$current2","_dateRef$current","_clientnameRef$curren","_remakrsRef$current","_branchRef$current2","pdcTableData","filePromises","fileTransfer","fileToSave","stateSubmited","_context7","files","_loop2","_event$target","datakey","fileContent","getDataFormatted","_pnRef$current","click","Branch","checks","stringify","codeCondfirmationAlert","isUpdate","cb","userCodeConfirmation","saveCondfirmationAlert","isConfirm","handleDragLeave","handleDragEnter","handleDrop","_fileInputRef$current","fileList","dataTransfer","Array","from","newFiles","checkFile","setSelectedRow","setData","format","formatNumber","num","toLocaleString","minimumFractionDigits","maximumFractionDigits","handleKeyDown","window","isDisableField","_Fragment","PageHelmet","Loading","padding","backgroundColor","Box","sx","theme","alignItems","columnGap","breakpoints","down","LoadingButton","loading","SearchIcon","onIconClick","Button","variant","startIcon","AddIcon","color","disabled","SaveIcon","text","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","isConfirmed","flushSync","_checknoRef$current","tableRows","getLastCheck_No","incrementCheckNo","Check_No","grey","Menu","MenuListProps","MenuItem","_refNoRef$current2","_pnRef$current3","_dateRef$current2","_clientnameRef$curren2","_remakrsRef$current2","_branchRef$current3","localStorage","removeItem","setItem","header","department","elementString","ReactDOMServer","_clientnameRef$curren3","_refNoRef$current3","textAlign","marginTop","margin","printString","code","rowGap","gap","border","borderRadius","_dateRef$current3","RestartAltIcon","disableIcon","_remakrsRef$current3","TextAreaInput","textarea","_pnRef$current4","_inputRef","PersonSearchIcon","_clientnameRef$curren4","_savePDCButtonRef$cur","DownloadIcon","DataGridViewReact","disbaleTable","getSelectedItem","_","RowIndex","parseFloat","replace","console","log","newData","getData","splice","bgcolor","p","Typography","component","_bankRef$current","AccountBalanceIcon","_bankRef$current2","_remarksRef$current","_chekdateRef$current","toISOString","split","_amountRef$current","NumericFormat","getInputRef","allowNegative","thousandSeparator","valueIsNumericString","_amountRef$current3","_checkcountRef$curren","currentValue","numericValue","isNaN","timeout","_checkModalSaveButton","autoFocus","incrementStringNumbers","str","increment","parseInt","toString","padStart","incrementDate","dateString","currentDate","setMonth","getMonth","selectedIndex","getSelectedRow","date","getTime","isValidDate","Check_Date","Check_Amnt","BankName","BankCode","Check_Remarks","Deposit_Slip","DateDeposit","OR_No","handleCheckDetailsSave","bottom","overflow","boxShadow","onDragEnter","onDragOver","onDragLeave","onDrop","flexWrap","DisplayFile","fileInput","DriveFolderUploadIcon","multiple","fullWidth","inputFile","getElementById","setNewStateValue","dispatch","obj","Object","entries","forEach","_ref4","_ref5","incrementedNumber"],"sourceRoot":""}