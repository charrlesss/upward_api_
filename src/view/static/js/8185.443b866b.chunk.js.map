{"version":3,"file":"static/js/8185.443b866b.chunk.js","mappings":"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","sources":["hooks/useUpwardTableModal.tsx","feautures/Admin/Task/Accounting/PostDateChecks.tsx"],"sourcesContent":["import { useEffect, useRef, useState, useId } from \"react\";\nimport \"../style/upwardtablemodel.css\";\nimport { TextInput } from \"../components/UpwardFields\";\nimport { UpwardTable } from \"../components/UpwardTable\";\nimport { throttle } from \"lodash\";\nimport { AxiosInstance } from \"axios\";\nimport { User } from \"../components/AuthContext\";\nimport { useMutation } from \"react-query\";\nimport { wait } from \"../lib/wait\";\nimport { IconButton, Modal } from '@mui/material'\nimport CloseIcon from \"@mui/icons-material/Close\";\n\n\ninterface UseUpwardTableModalProps {\n  myAxios: AxiosInstance;\n  user: User | null;\n  column: Array<any>;\n  link: {\n    url: string;\n    queryUrlName: string;\n  };\n  onSelectionChange: (selectedRow: any) => void;\n  onModalClose?: () => void;\n  responseDataKey: string;\n}\nexport const useUpwardTableModal = ({\n  myAxios,\n  user,\n  column,\n  link,\n  onSelectionChange,\n  responseDataKey,\n  onModalClose = () => { },\n}: UseUpwardTableModalProps) => {\n  const id = useId();\n  const inputSearchRef = useRef<HTMLInputElement>(null);\n  const tableRef = useRef<any>(null);\n  const parentRef = useRef<any>(null);\n  const [show, setShowModal] = useState(false);\n  const [rows, setRows] = useState([]);\n  const { isLoading, mutate } = useMutation({\n    mutationKey: id,\n    mutationFn: async (variable: any) =>\n      await myAxios.get(\n        `${link?.url}?${link?.queryUrlName}=${variable.search}`,\n        {\n          headers: {\n            Authorization: `Bearer ${user?.accessToken}`,\n          },\n        }\n      ),\n    onSuccess: (res) => {\n      const response = res as any;\n      setRows(response.data[responseDataKey]);\n    },\n  });\n  const performSearch = (query: string) => {\n    if (query === \"\") {\n      mutate({ search: query });\n    }\n  };\n  // Throttle the search function to limit it to once every 500ms\n  const throttledSearch = throttle((query) => performSearch(query), 500)\n\n  const openModal = (search: string) => {\n    mutate({ search: search });\n    setShowModal(true);\n    setTimeout(() => {\n      if (inputSearchRef.current) {\n        inputSearchRef.current.value = search;\n      }\n      inputSearchRef.current?.focus();\n    }, 150);\n  };\n  const closeModal = () => {\n    setShowModal(false);\n    onModalClose();\n  };\n\n  const width = 460;\n  const height = 530;\n\n  useEffect(() => {\n    if (show && parentRef.current) {\n      wait(1050).then(() => {\n        parentRef.current?.focus();\n      })\n    }\n  }, [show, parentRef]);\n\n  const ModalComponent = (\n    <Modal\n      open={show}\n      onClose={() => {\n        setShowModal(false);\n      }}\n      aria-labelledby=\"modal-modal-title\"\n      aria-describedby=\"modal-modal-description\"\n    >\n      <div style={{\n        position: \"absolute\",\n        top: \"50%\",\n        left: \"50%\",\n        transform: \"translate(-50%, -50%)\",\n        width: \"auto\",\n        background: \"#fff\",\n        paddingTop: \"30px\",\n        paddingBottom: \"20px\",\n        paddingLeft: \"10px\",\n        paddingRight: \"10px\"\n      }}>\n        <div >\n          <TextInput\n            label={{ style: { display: \"none\" } }}\n            input={{\n              className: \"search-input-up-on-key-down\",\n              type: \"text\",\n              style: { width: \"100%\", marginBottom: \"20px\" },\n              onChange: (e) => {\n                e.preventDefault();\n                throttledSearch(e.currentTarget.value);\n              },\n              onKeyDown: (e) => {\n                if (e.key === \"Enter\" || e.key === \"NumpadEnter\") {\n                  e.preventDefault();\n                  mutate({ search: (e.target as any).value });\n                }\n                if (e.key === \"ArrowDown\") {\n                  e.preventDefault();\n                  const datagridview = tableRef.current.getParentElement().querySelector(\n                    `.grid-container .row-0.col-0 input`\n                  ) as HTMLDivElement;\n                  setTimeout(() => {\n                    if (datagridview)\n                      datagridview.focus();\n                  }, 100)\n                }\n              },\n            }}\n            inputRef={inputSearchRef}\n          />\n          <UpwardTable\n            ref={tableRef}\n            rows={rows}\n            column={column.filter((itm) => !itm.hide)}\n            width={width}\n            height={height}\n            dataReadOnly={true}\n            onSelectionChange={onSelectionChange}\n          />\n\n          <IconButton\n            style={{\n              position: \"absolute\",\n              top: \"5px\",\n              right: \"10px\",\n            }}\n            aria-label=\"search-client\"\n            onClick={closeModal}\n          >\n            <CloseIcon style={{ fontSize: \"15px\" }} />\n          </IconButton>\n\n\n        </div>\n      </div>\n\n    </Modal>\n\n  );\n\n  return {\n    Modal: ModalComponent,\n    openModal,\n    closeModal,\n    isLoading,\n  };\n};\n","import React, { useContext, useState, useRef, useReducer, useEffect } from \"react\";\nimport {\n  Box,\n  Typography,\n  TextField,\n  Button,\n  IconButton,\n  Modal,\n  FormControl,\n  InputLabel,\n  OutlinedInput,\n  InputAdornment,\n  MenuItem,\n  Menu,\n} from \"@mui/material\";\nimport AddIcon from \"@mui/icons-material/Add\";\nimport { GridRowSelectionModel } from \"@mui/x-data-grid\";\nimport { useMutation, useQuery, useQueryClient } from \"react-query\";\nimport Swal from \"sweetalert2\";\nimport SaveIcon from \"@mui/icons-material/Save\";\nimport { AuthContext } from \"../../../../components/AuthContext\";\nimport CustomDatePicker from \"../../../../components/DatePicker\";\nimport PersonSearchIcon from \"@mui/icons-material/PersonSearch\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport PolicyIcon from \"@mui/icons-material/Policy\";\nimport { NumericFormatCustom } from \"../../../../components/NumberFormat\";\nimport { flushSync } from \"react-dom\";\nimport { LoadingButton } from \"@mui/lab\";\nimport RestartAltIcon from \"@mui/icons-material/RestartAlt\";\nimport DownloadIcon from \"@mui/icons-material/Download\";\nimport {\n  codeCondfirmationAlert,\n  saveCondfirmationAlert,\n} from \"../../../../lib/confirmationAlert\";\nimport DriveFolderUploadIcon from \"@mui/icons-material/DriveFolderUpload\";\nimport { DisplayFile, checkFile } from \"../Claims/Claims\";\nimport ReactDOMServer from \"react-dom/server\";\nimport { grey } from \"@mui/material/colors\";\nimport { UpwardTable } from \"../../../../components/UpwardTable\";\nimport { useUpwardTableModal } from \"../../../../hooks/useUpwardTableModal\";\nimport { TextAreaInput, TextInput } from \"../../../../components/UpwardFields\";\nimport AccountBalanceIcon from '@mui/icons-material/AccountBalance';\nimport { NumericFormat } from \"react-number-format\";\nimport { format } from \"date-fns\";\nimport { wait } from \"@testing-library/user-event/dist/utils\";\n\nconst initialState = {\n  Sub_Ref_No: \"\",\n  Ref_No: \"\",\n  PNo: \"\",\n  IDNo: \"\",\n  Date: new Date(),\n  Name: \"\",\n  Remarks: \"\",\n  PDC_Status: \"\",\n  Deposit_Slip: \"\",\n  DateDeposit: \"\",\n  OR_No: \"\",\n  search: \"\",\n  pdcMode: \"\",\n  checkMode: \"\",\n  sub_account: \"\",\n  Acronym: \"\",\n};\nconst modalPdcCheckInititalState = {\n  CheckIdx: \"0\",\n  BankName: \"\",\n  BankCode: \"\",\n  Branch: \"\",\n  Check_Date: new Date(),\n  Check_No: \"\",\n  Check_Amnt: \"\",\n  Check_Remarks: \"\",\n  Check_Count: \"\",\n};\nexport const reducer = (state: any, action: any) => {\n  switch (action.type) {\n    case \"UPDATE_FIELD\":\n      return {\n        ...state,\n        [action.field]: action.value,\n      };\n    default:\n      return state;\n  }\n};\nexport const pdcColumn = [\n  { field: \"Check_No\", headerName: \"Check No.\", width: 150 },\n  { field: \"Check_Date\", headerName: \"Check Date\", width: 150 },\n  { field: \"Check_Amnt\", headerName: \"Amount\", width: 150, type: \"number\" },\n  { field: \"BankName\", headerName: \"Bank\", width: 200 },\n  { field: \"Branch\", headerName: \"Branch\", width: 200 },\n  {\n    field: \"Check_Remarks\",\n    headerName: \"Checked Remarks\",\n    width: 350,\n  },\n  { field: \"Deposit_Slip\", headerName: \"Deposit Slip\", width: 150 },\n  { field: \"DateDeposit\", headerName: \"Date Deposit\", width: 150 },\n  { field: \"OR_No\", headerName: \"OR Num\", width: 150 },\n  { field: \"BankCode\", headerName: \"Bank Code\", width: 150, hide: true },\n];\nexport const pdcSearchColumn = [\n  { field: \"Date\", headerName: \"Date Received\", width: 160 },\n  { field: \"Ref_No\", headerName: \"Ref No.\", width: 160 },\n  {\n    field: \"Name\",\n    headerName: \"Name\",\n    flex: 1,\n  },\n];\nexport const pdcBanksColumn = [\n  { field: \"Bank_Code\", headerName: \"Code\", width: 130 },\n  { field: \"Bank\", headerName: \"Bank Name\", flex: 1 },\n];\nconst queryKey = \"pdc\";\nconst quertKeyPDCSearch = \"pdc-search\";\n\nexport default function PostDateChecks() {\n  const tableRef = useRef<any>(null);\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\n  const open = Boolean(anchorEl);\n  const handleClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n    setAnchorEl(event.currentTarget);\n  };\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n  const [isDragging, setIsDragging] = useState(false);\n  const [selectedFiles, setSelectedFiles] = useState<Array<File>>([]);\n  const [pdcDataRows, setPdcDataRows] = useState<GridRowSelectionModel>([]);\n  const [openPdcInputModal, setOpenPdcInputModal] = useState(false);\n  const [showModal, setShowModal] = useState(false);\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const [stateModalPdcCheck, dispatchModalPdcCheck] = useReducer(\n    reducer,\n    modalPdcCheckInititalState\n  );\n\n  const { myAxios, user } = useContext(AuthContext);\n  const dataGridFunctions = useRef<any>(null);\n  const searchRef = useRef<HTMLInputElement>(null);\n\n  // pdc form save button\n  const fileInputRef = useRef<HTMLInputElement>(null);\n  const savePDCButtonRef = useRef<HTMLButtonElement>(null);\n  const openIdsButtonRef = useRef<HTMLButtonElement>(null);\n\n\n  //check modal refs\n\n  const checkModalSaveButton = useRef<HTMLButtonElement>(null);\n  const checkModalSaveButtonActionRef = useRef<any>(null);\n  // search modal auto focus on load\n\n\n  // modal \n  const _checknoRef = useRef<HTMLInputElement>(null);\n  const _bankRef = useRef<HTMLInputElement>(null);\n  const _branchRef = useRef<HTMLInputElement>(null);\n  const _remarksRef = useRef<HTMLTextAreaElement>(null);\n  const _chekdateRef = useRef<HTMLInputElement>(null);\n  const _amountRef = useRef<HTMLInputElement>(null);\n  const _checkcountRef = useRef<HTMLInputElement>(null);\n  const _bankCode = useRef('');\n  const _slipCodeRef = useRef('');\n  const _slipDateRef = useRef('');\n  const _checkOR = useRef('');\n\n\n  const addRefButton = useRef<HTMLButtonElement>(null);\n  const queryClient = useQueryClient();\n\n  const dateRef = useRef<HTMLButtonElement>(null);\n  const remakrsRef = useRef<HTMLButtonElement>(null);\n  const pnRef = useRef<HTMLButtonElement>(null);\n  const branchRef = useRef<HTMLButtonElement>(null);\n  const clientnameRef = useRef<HTMLButtonElement>(null);\n\n\n  const { isLoading: newRefNumberLoading, refetch: refetchNewRefNumber } =\n    useQuery({\n      queryKey: \"new-ref-number\",\n      queryFn: async () => {\n        return await myAxios.get(\"/task/accounting/pdc-new-ref-number\", {\n          headers: {\n            Authorization: `Bearer ${user?.accessToken}`,\n          },\n        });\n      },\n      refetchOnWindowFocus: false,\n      onSuccess: (res) => {\n        const response = res as any;\n        dispatch({\n          type: \"UPDATE_FIELD\",\n          field: \"Ref_No\",\n          value: response.data.RefNo[0].pdcID,\n        });\n        dispatch({\n          type: \"UPDATE_FIELD\",\n          field: \"Sub_Ref_No\",\n          value: response.data.RefNo[0].pdcID,\n        });\n\n      },\n    });\n  const { mutate, isLoading: loadingAddNew } = useMutation({\n    mutationKey: queryKey,\n    mutationFn: async (variables: any) => {\n      if (state.pdcMode === \"update\") {\n        delete variables.mode;\n        return await myAxios.post(\"/task/accounting/update-pdc\", variables, {\n          headers: {\n            Authorization: `Bearer ${user?.accessToken}`,\n          },\n        });\n      }\n      delete variables.mode;\n      return await myAxios.post(\"/task/accounting/add-pdc\", variables, {\n        headers: {\n          Authorization: `Bearer ${user?.accessToken}`,\n        },\n      });\n    },\n    onSuccess: (res) => {\n      if (res.data.success) {\n        refetchNewRefNumber();\n        queryClient.invalidateQueries(quertKeyPDCSearch);\n        setNewStateValue(dispatch, initialState);\n        setPdcDataRows([]);\n        dispatch({\n          type: \"UPDATE_FIELD\",\n          field: \"pdcMode\",\n          value: \"\",\n        });\n\n        return Swal.fire({\n          position: \"center\",\n          icon: \"success\",\n          title: res.data.message,\n          showConfirmButton: false,\n          timer: 1500,\n        });\n      }\n\n      Swal.fire({\n        position: \"center\",\n        icon: \"error\",\n        title: res.data.message,\n        showConfirmButton: false,\n        timer: 1500,\n      });\n    },\n  });\n  //selecte search\n\n  const { mutate: mutateSelectedSearch, isLoading: isLoadingSelectedSearch } =\n    useMutation({\n      mutationKey: queryKey,\n      mutationFn: async (variables: any) =>\n        await myAxios.post(\"/task/accounting/get-search-pdc-check\", variables, {\n          headers: {\n            Authorization: `Bearer ${user?.accessToken}`,\n          },\n        }),\n      onSuccess: async (res) => {\n        if (!res?.data.success) {\n          return alert(`Error : ${res?.data.message}`);\n        }\n\n        const response = res as any;\n        const Ref_No = response.data.getSearchPDCCheck[0].Ref_No;\n        if (response.data.upload[0]) {\n          const uploadFiles = JSON.parse(response.data.upload[0]?.upload);\n          const newObjContainerBasic = await formatDataToDocument(\n            uploadFiles,\n            `${process.env.REACT_APP_IMAGE_URL}pdc/${Ref_No}`\n          );\n          const fileSelected = await Promise.all(newObjContainerBasic);\n          setSelectedFiles(fileSelected);\n        }\n        async function formatDataToDocument(\n          dataDocument: Array<any>,\n          url: string\n        ) {\n          const newObjContainer: Array<any> = [];\n          for (let index = 0; index < dataDocument.length; index++) {\n            const basicItem = dataDocument[index];\n            const mainURL = `${url}/${basicItem.uniqueFilename}`;\n            const response = await fetch(mainURL);\n            const blob = await response.blob();\n            const file = new File([blob], basicItem.fileName, {\n              type: basicItem.fileType,\n            });\n            const reader = new FileReader();\n            newObjContainer.push(\n              new Promise((resolve, reject) => {\n                reader.onload = function (event) {\n                  resolve(file);\n                };\n                reader.onerror = function (event) {\n                  reject(new Error(\"Error reading file: \" + file.name));\n                };\n                reader.readAsDataURL(file);\n              })\n            );\n          }\n          return newObjContainer;\n        }\n\n        setPdcDataRows(\n          response.data.getSearchPDCCheck.map((item: any, idx: number) => {\n            return { ...item, CheckIdx: `${idx}` };\n          })\n        );\n        dispatch({\n          type: \"UPDATE_FIELD\",\n          field: \"Ref_No\",\n          value: response.data.getSearchPDCCheck[0].Ref_No,\n        });\n        dispatch({\n          type: \"UPDATE_FIELD\",\n          field: \"Name\",\n          value: response.data.getSearchPDCCheck[0].Name,\n        });\n        dispatch({\n          type: \"UPDATE_FIELD\",\n          field: \"Date\",\n          value: response.data.getSearchPDCCheck[0].Date,\n        });\n        dispatch({\n          type: \"UPDATE_FIELD\",\n          field: \"PNo\",\n          value: response.data.getSearchPDCCheck[0].PNo,\n        });\n        dispatch({\n          type: \"UPDATE_FIELD\",\n          field: \"IDNo\",\n          value: response.data.getSearchPDCCheck[0].IDNo,\n        });\n\n        dispatch({\n          type: \"UPDATE_FIELD\",\n          field: \"Acronym\",\n          value: response.data.getSearchPDCCheck[0].Acronym,\n        });\n        dispatch({\n          type: \"UPDATE_FIELD\",\n          field: \"sub_account\",\n          value: response.data.getSearchPDCCheck[0].sub_account,\n        });\n        dispatch({\n          type: \"UPDATE_FIELD\",\n          field: \"Remarks\",\n          value: response.data.getSearchPDCCheck[0].Remarks,\n        });\n        dispatch({\n          type: \"UPDATE_FIELD\",\n          field: \"pdcMode\",\n          value: \"update\",\n        });\n      },\n    });\n  // policy ids search table modal\n  const {\n    Modal: ModalSearchPdcIDs,\n    closeModal: closeModalSearchPdcIDs,\n    openModal: openModalSearchPdcIDs,\n    isLoading: isLoadingModalSearchPdcIDs,\n  } = useUpwardTableModal({\n    myAxios,\n    user,\n    link: {\n      url: \"/task/accounting/search-pdc-policy-id\",\n      queryUrlName: \"searchPdcPolicyIds\",\n    },\n    column: [\n      { field: \"Type\", headerName: \"Type\", width: 130 },\n      { field: \"IDNo\", headerName: \"ID No.\", width: 200 },\n      { field: \"chassis\", headerName: \"Chassis No.\", width: 200, hide: true },\n      {\n        field: \"Name\",\n        headerName: \"Name\",\n        width: 350,\n      },\n      {\n        field: \"ID\",\n        headerName: \"ID\",\n        width: 300,\n        hide: true,\n      },\n      {\n        field: \"client_id\",\n        headerName: \"client_id\",\n        width: 200,\n        hide: true,\n      },\n    ],\n    onSelectionChange: (selectedRow: any) => {\n      if (selectedRow.length > 0) {\n        dispatch({\n          type: \"UPDATE_FIELD\",\n          field: \"PNo\",\n          value: selectedRow[0].IDNo,\n        });\n        dispatch({\n          type: \"UPDATE_FIELD\",\n          field: \"IDNo\",\n          value: selectedRow[0].client_id,\n        });\n        dispatch({\n          type: \"UPDATE_FIELD\",\n          field: \"Name\",\n          value: selectedRow[0].Name ?? \"\",\n        });\n        dispatch({\n          type: \"UPDATE_FIELD\",\n          field: \"Remarks\",\n          value: selectedRow[0].remarks ?? \"\",\n        });\n        dispatch({\n          type: \"UPDATE_FIELD\",\n          field: \"sub_account\",\n          value: selectedRow[0].sub_account,\n        });\n        dispatch({\n          type: \"UPDATE_FIELD\",\n          field: \"Acronym\",\n          value: selectedRow[0].Acronym,\n        });\n\n        closeModalSearchPdcIDs();\n        if (pdcDataRows.length <= 0) {\n          setTimeout(() => {\n            addRefButton.current?.click();\n          }, 100);\n        }\n      }\n    },\n\n    responseDataKey: \"clientsId\",\n  });\n  // bank search table modal\n  const {\n    Modal: ModalSearchBanks,\n    closeModal: closeModalSearchBanks,\n    openModal: openModalSearchBanks,\n    isLoading: isLoadingModalSearchbanks,\n  } = useUpwardTableModal({\n    myAxios,\n    user,\n    link: {\n      url: \"/task/accounting/search-pdc-banks\",\n      queryUrlName: \"searchPdcBanks\",\n    },\n    column: [\n      { field: \"Bank_Code\", headerName: \"Code\", width: 100 },\n      { field: \"Bank\", headerName: \"Bank Name\", width: 350 },\n    ],\n    onSelectionChange: (selectedRow: any) => {\n      if (selectedRow.length > 0) {\n        setTimeout(() => {\n          _bankCode.current = selectedRow[0].Bank_Code\n          if (_bankRef.current) {\n            _bankRef.current.value = selectedRow[0].Bank\n          }\n        }, 100)\n\n        closeModalSearchBanks();\n        setOpenPdcInputModal(true);\n        setTimeout(() => {\n          _branchRef.current?.focus()\n        }, 100);\n      }\n    },\n    onModalClose: () => {\n      setTimeout(() => {\n        setOpenPdcInputModal(true);\n      }, 100);\n    },\n    responseDataKey: \"pdcBanks\",\n  });\n  // pdc search table modal\n  const {\n    Modal: UpwardPDCModal,\n    closeModal: closeUpwardPDCModal,\n    openModal: openUpwardPDCModal,\n    isLoading: isLoadingModalSearchPDC,\n  } = useUpwardTableModal({\n    myAxios,\n    user,\n    column: [\n      { field: \"Date\", headerName: \"Date Received\", width: 90 },\n      { field: \"Ref_No\", headerName: \"Ref No.\", width: 80 },\n      {\n        field: \"Name\",\n        headerName: \"Name\",\n        width: 320,\n      },\n    ],\n    link: {\n      url: \"/task/accounting/search-pdc\",\n      queryUrlName: \"searchPDCInput\",\n    },\n    onSelectionChange: (selectedRow: any) => {\n      if (selectedRow.length > 0) {\n        mutateSelectedSearch({ ref_no: selectedRow[0].Ref_No });\n        closeUpwardPDCModal();\n        if (searchRef.current) {\n          searchRef.current?.focus();\n        }\n      }\n    },\n    responseDataKey: \"searchPDC\",\n  });\n\n  const handleInputChange = (e: any) => {\n    const { name, value } = e.target;\n    dispatch({ type: \"UPDATE_FIELD\", field: name, value });\n  };\n  async function handleOnSave(e: any) {\n    if (state.PNo === \"\") {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: \"Please provide loan information!\",\n        timer: 1500,\n      }).then(() => {\n        setTimeout(() => {\n          openIdsButtonRef.current?.click();\n        }, 350);\n      });\n    }\n    if (pdcDataRows.length <= 0) {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: \"Please provide entry!\",\n        timer: 1500,\n      }).then(() => {\n        setOpenPdcInputModal(true);\n      });\n    }\n    if (state.PNo.length >= 45) {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: \"Pno is too long!\",\n        timer: 1500,\n      });\n    }\n    if (state.Remarks.length >= 220) {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: \"Remarks is too long!\",\n        timer: 1500,\n      });\n    }\n    const filePromises: Array<any> = [];\n    function fileTransfer(filePromises: Array<any>) {\n      const files = selectedFiles;\n      if (files.length > 0) {\n        for (let i = 0; i < files.length; i++) {\n          const file = files[i];\n          const reader = new FileReader();\n          filePromises.push(\n            new Promise((resolve, reject) => {\n              reader.onload = function (event) {\n                resolve({\n                  datakey: \"pdc_file\",\n                  fileName: file.name,\n                  fileContent: event.target?.result,\n                  fileType: file.type,\n                  file,\n                });\n              };\n              reader.onerror = function (event) {\n                reject(new Error(\"Error reading file: \" + file.name));\n              };\n              reader.readAsDataURL(file);\n            })\n          );\n        }\n      }\n    }\n    fileTransfer(filePromises);\n    const fileToSave = await Promise.all(filePromises);\n    const stateSubmited = {\n      Ref_No: state.Ref_No,\n      PNo: state.PNo,\n      IDNo: state.IDNo,\n      Date: state.Date,\n      Name: state.Name,\n      Remarks: state.Remarks,\n      BankCode: state.BankCode,\n      checks: JSON.stringify(pdcDataRows),\n    };\n    if (state.pdcMode === \"update\") {\n      codeCondfirmationAlert({\n        isUpdate: true,\n        cb: (userCodeConfirmation) => {\n          mutate({ ...stateSubmited, userCodeConfirmation, fileToSave });\n        },\n      });\n    } else {\n      saveCondfirmationAlert({\n        isConfirm: () => {\n          mutate({ ...stateSubmited, fileToSave });\n        },\n      });\n    }\n  }\n  const handleDragLeave = (e: React.DragEvent<HTMLDivElement>) => {\n    e.preventDefault();\n    setIsDragging(false);\n  };\n  const handleDragEnter = (e: React.DragEvent<HTMLDivElement>) => {\n    e.preventDefault();\n    setIsDragging(true);\n  };\n  const handleDrop = (e: React.DragEvent<HTMLDivElement>) => {\n    e.preventDefault();\n    const fileList = e.dataTransfer.files;\n    const files = Array.from(fileList);\n    const newFiles = [...selectedFiles, ...files];\n    setIsDragging(false);\n    if (checkFile(newFiles)) {\n      fileInputRef.current?.click();\n      return alert(\"file is not valid Extention!\");\n    } else {\n      setSelectedFiles(newFiles);\n    }\n  };\n  const clickPDCReceipt = () => {\n    flushSync(() => {\n      localStorage.removeItem(\"printString\");\n      localStorage.setItem(\"dataString\", JSON.stringify(pdcDataRows));\n      localStorage.setItem(\"paper-width\", \"8.5in\");\n      localStorage.setItem(\"paper-height\", \"11in\");\n      localStorage.setItem(\"module\", \"pdc\");\n      localStorage.setItem(\"state\", JSON.stringify(state));\n      localStorage.setItem(\n        \"column\",\n        JSON.stringify([\n          { datakey: \"Check_No\", header: \"CHECK NO\", width: \"80px\" },\n          { datakey: \"Check_Date\", header: \"DATE\", width: \"130px\" },\n          { datakey: \"BankName\", header: \"BANK\", width: \"240px\" },\n          { datakey: \"Check_Amnt\", header: \"AMOUNT\", width: \"70px\" },\n          { datakey: \"SEQ\", header: \"SEQ\", width: \"30px\" },\n        ])\n      );\n\n      localStorage.setItem(\n        \"title\",\n        user?.department === \"UMIS\"\n          ? \"UPWARD MANAGEMENT INSURANCE SERVICES\\n Post Date Checks Receipt\"\n          : \"UPWARD CONSULTANCY SERVICES AND MANAGEMENT INC.\\n Post Date Checks Receipt\"\n      );\n    });\n    window.open(\"/dashboard/print\", \"_blank\");\n  };\n  const clickPDCLabeling = () => {\n    let printString = () => {\n      return (\n        <div>\n          <p\n            style={{\n              color: \"#d1d5db\",\n              fontSize: \"11px\",\n              textAlign: \"center\",\n              padding: 0,\n              marginTop: \"8px\",\n              marginBottom: 0,\n            }}\n          >\n            UCSMI\n          </p>\n          <p\n            style={{\n              color: \"#d1d5db\",\n              fontSize: \"11px\",\n              textAlign: \"center\",\n              padding: 0,\n              margin: 0,\n            }}\n          >\n            {state.Name}\n          </p>\n          <p\n            style={{\n              color: \"#d1d5db\",\n              fontSize: \"11px\",\n              textAlign: \"center\",\n              padding: 0,\n              margin: 0,\n            }}\n          >\n            {state.IDNo}\n          </p>\n          <p\n            style={{\n              color: \"#d1d5db\",\n              fontSize: \"11px\",\n              textAlign: \"center\",\n              padding: 0,\n              margin: \"20px\",\n            }}\n          >\n            {state.Ref_No}\n          </p>\n        </div>\n      );\n    };\n\n    flushSync(() => {\n      const elementString = ReactDOMServer.renderToString(printString());\n      localStorage.setItem(\"printString\", elementString);\n      localStorage.removeItem(\"dataString\");\n      localStorage.setItem(\"paper-width\", \"8.5in\");\n      localStorage.setItem(\"paper-height\", \"11in\");\n    });\n    window.open(\"/dashboard/print\", \"_blank\");\n  };\n  const onSelectionChange = (selectedRow: any) => {\n    if (selectedRow.length > 0) {\n      const rowSelected = selectedRow[0];\n      console.log(rowSelected)\n      setTimeout(() => {\n        if (\n          _checknoRef.current &&\n          _bankRef.current &&\n          _branchRef.current &&\n          _remarksRef.current &&\n          _chekdateRef.current &&\n          _amountRef.current &&\n          _checkcountRef.current\n        ) {\n          _checknoRef.current.value = rowSelected.Check_No\n          _bankRef.current.value = rowSelected.BankName\n          _branchRef.current.value = rowSelected.Branch\n          _remarksRef.current.value = rowSelected.Check_Remarks\n          _chekdateRef.current.value = rowSelected.Check_Date\n          _amountRef.current.value = formatNumber(parseFloat(rowSelected.Check_Amnt.replace(/,/g, '')))\n          _checkcountRef.current.value = '0'\n          _bankCode.current = rowSelected.BankCode\n          _slipCodeRef.current = rowSelected.Deposit_Slip\n          _slipDateRef.current = rowSelected.DateDeposit\n          _checkOR.current = rowSelected.Ref_No\n        }\n      }, 100)\n\n\n\n      flushSync(() => {\n        setOpenPdcInputModal(true);\n      });\n      checkModalSaveButtonActionRef.current?.focusVisible();\n    } else {\n      dispatch({\n        type: \"UPDATE_FIELD\",\n        field: \"checkMode\",\n        value: \"\",\n      });\n    }\n  };\n  function formatNumber(num: number) {\n    return (num || 0).toLocaleString(\"en-US\", {\n      minimumFractionDigits: 2,\n      maximumFractionDigits: 2,\n    })\n  }\n  function handleCheckDetailsSave() {\n    function incrementStringNumbers(\n      str: string,\n      increment: number\n    ) {\n      let num = parseInt(str);\n      num = num + increment;\n      return num.toString().padStart(str.length, \"0\");\n    }\n    function incrementDate(dateString: any, i: number) {\n      const currentDate = new Date(\n        dateString\n      );\n      currentDate.setMonth(currentDate.getMonth() + i);\n\n      return format(currentDate, 'yyyy-MM-dd')\n    }\n    function isValidDate(dateString: string): boolean {\n      const date = new Date(dateString);\n      return date instanceof Date && !isNaN(date.getTime());\n    }\n\n    if (\n      _checknoRef.current &&\n      _bankRef.current &&\n      _branchRef.current &&\n      _remarksRef.current &&\n      _chekdateRef.current &&\n      _amountRef.current &&\n      _checkcountRef.current\n    ) {\n      const filteredChecks = pdcDataRows.filter((itm: any) => {\n        return _checknoRef.current && _checknoRef.current.value === itm.Check_No\n      })\n      if(filteredChecks.length > 0 ){\n        alert('check no. is already exist!')\n        _checknoRef.current.focus()\n        return\n      }\n      if (_checknoRef.current.value === '') {\n        alert('check no. is required!')\n        _checknoRef.current.focus()\n        return\n      } else if (_bankRef.current.value === '') {\n        alert('bank is required!')\n        _bankRef.current.focus()\n        return\n      } else if (_branchRef.current.value === '') {\n        alert('branch is required!')\n        _branchRef.current.focus()\n        return\n      } else if (!isValidDate(_chekdateRef.current.value)) {\n        alert('invalid date!')\n        _chekdateRef.current.focus()\n        return\n      } else if (parseFloat(_amountRef.current.value.replace(/,/g, '')) <= 0) {\n        alert('amount must be greater than 0!')\n        _amountRef.current.focus()\n        return\n      }\n\n\n      setPdcDataRows((d: any) => {\n        if (\n          _checknoRef.current &&\n          _bankRef.current &&\n          _branchRef.current &&\n          _remarksRef.current &&\n          _chekdateRef.current &&\n          _amountRef.current &&\n          _checkcountRef.current\n        ) {\n          const selectedIndex = tableRef.current.getSelectedIndex()\n\n          if (selectedIndex !== null && selectedIndex !== undefined) {\n            const newData = d.map((itm: any, idx: number) => {\n              if (\n                _checknoRef.current &&\n                _bankRef.current &&\n                _branchRef.current &&\n                _remarksRef.current &&\n                _chekdateRef.current &&\n                _amountRef.current &&\n                _checkcountRef.current &&\n                idx === selectedIndex\n              ) {\n                itm = {\n                  Check_No: _checknoRef.current.value,\n                  Check_Date: _chekdateRef.current.value,\n                  Check_Amnt: _amountRef.current.value,\n                  BankName: _bankRef.current.value,\n                  BankCode: _bankCode.current,\n                  Branch: _branchRef.current.value,\n                  Check_Remarks: _remarksRef.current.value,\n                  Deposit_Slip: _slipCodeRef.current,\n                  DateDeposit: _slipDateRef.current,\n                  OR_No: _checkOR.current,\n                }\n              }\n\n              return itm\n            })\n            return newData\n          } else {\n            const newData: any = []\n            for (\n              let i = 0;\n              i < parseInt(_checkcountRef.current.value);\n              i++\n            ) {\n              const data: any = {\n                Check_No: incrementStringNumbers(\n                  _checknoRef.current.value,\n                  i\n                ),\n                Check_Date: incrementDate(_chekdateRef.current.value, i),\n                Check_Amnt: _amountRef.current.value,\n                BankName: _bankRef.current.value,\n                BankCode: _bankCode.current,\n                Branch: _branchRef.current.value,\n                Check_Remarks: _remarksRef.current.value,\n                Deposit_Slip: _slipCodeRef.current,\n                DateDeposit: _slipDateRef.current,\n                OR_No: _checkOR.current,\n              };\n              newData.push(data)\n            }\n            return [...d, ...newData]\n          }\n\n        }\n        return d\n      })\n\n      setOpenPdcInputModal(false);\n      focusOnTable()\n    }\n\n  }\n\n  function focusOnTable() {\n    setTimeout(() => {\n      tableRef.current?.resetTableSelected();\n      const datagridview = tableRef.current.getParentElement().querySelector(\n        `.grid-container .row-0.col-0 input`\n      ) as HTMLDivElement;\n      setTimeout(() => {\n        if (datagridview)\n          datagridview.focus();\n      }, 100)\n    }, 100)\n  }\n\n  const isDisableField = state.pdcMode === \"\";\n  const width = window.innerWidth - 50;\n  const height = window.innerHeight - 145;\n\n\n  return (\n    <div\n      style={{\n        width: \"100%\",\n        height: \"100%\",\n        flex: 1,\n        background: \"red\",\n        padding: \"10px\",\n        backgroundColor: \"#F8F8FF\",\n      }}\n    >\n      {ModalSearchBanks}\n      {UpwardPDCModal}\n      {ModalSearchPdcIDs}\n      <Box\n        sx={(theme) => ({\n          display: \"flex\",\n          alignItems: \"center\",\n          columnGap: \"20px\",\n          [theme.breakpoints.down(\"sm\")]: {\n            flexDirection: \"column\",\n            alignItems: \"flex-start\",\n            flex: 1,\n            marginBottom: \"15px\",\n          },\n        })}\n      >\n        <div\n          style={{\n            display: \"flex\",\n            alignItems: \"center\",\n            columnGap: \"5px\",\n            marginBottom: \"15px\",\n          }}\n        >\n          {isLoadingModalSearchPDC ? (\n            <LoadingButton loading={isLoadingModalSearchPDC} />\n          ) : (\n            <TextField\n              label=\"Search\"\n              size=\"small\"\n              name=\"search\"\n              value={state.search}\n              onChange={handleInputChange}\n              onKeyDown={(e) => {\n                if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n                  e.preventDefault();\n                  openUpwardPDCModal((e.target as HTMLInputElement).value);\n                }\n                if (e.key === \"ArrowDown\") {\n                  e.preventDefault();\n                  const datagridview = document.querySelector(\n                    `.grid-container`\n                  ) as HTMLDivElement;\n                  datagridview.focus();\n                }\n              }}\n              InputProps={{\n                style: { height: \"27px\", fontSize: \"14px\" },\n                inputRef: searchRef,\n                className: \"manok\",\n              }}\n              sx={{\n                width: \"400px\",\n                height: \"27px\",\n                \".MuiFormLabel-root\": { fontSize: \"14px\" },\n                \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n              }}\n            />\n          )}\n          {state.pdcMode === \"\" && (\n            <Button\n              sx={{\n                height: \"30px\",\n                fontSize: \"11px\",\n              }}\n              variant=\"contained\"\n              startIcon={<AddIcon sx={{ width: 15, height: 15 }} />}\n              id=\"entry-header-save-button\"\n              color=\"primary\"\n              onClick={() => {\n                dispatch({\n                  type: \"UPDATE_FIELD\",\n                  field: \"pdcMode\",\n                  value: \"add\",\n                });\n              }}\n            >\n              New\n            </Button>\n          )}\n          <LoadingButton\n            sx={{\n              height: \"30px\",\n              fontSize: \"11px\",\n            }}\n            ref={savePDCButtonRef}\n            id=\"save-entry-header\"\n            color=\"success\"\n            variant=\"contained\"\n            type=\"submit\"\n            onClick={handleOnSave}\n            disabled={state.pdcMode === \"\"}\n            loading={loadingAddNew}\n            startIcon={<SaveIcon sx={{ width: 15, height: 15 }} />}\n          >\n            Save\n          </LoadingButton>\n          {(state.pdcMode === \"add\" || state.pdcMode === \"update\") && (\n            <Button\n              sx={{\n                height: \"30px\",\n                fontSize: \"11px\",\n              }}\n              variant=\"contained\"\n              startIcon={<CloseIcon sx={{ width: 15, height: 15 }} />}\n              onClick={() => {\n                Swal.fire({\n                  title: \"Are you sure?\",\n                  text: \"You won't be able to revert this!\",\n                  icon: \"warning\",\n                  showCancelButton: true,\n                  confirmButtonColor: \"#3085d6\",\n                  cancelButtonColor: \"#d33\",\n                  confirmButtonText: \"Yes, cancel it!\",\n                }).then((result) => {\n                  if (result.isConfirmed) {\n                    initialState.Sub_Ref_No = state.Sub_Ref_No;\n                    initialState.Ref_No = state.Sub_Ref_No;\n                    setNewStateValue(dispatch, initialState);\n                    setPdcDataRows([]);\n                    dispatch({\n                      type: \"UPDATE_FIELD\",\n                      field: \"pdcMode\",\n                      value: \"\",\n                    });\n                  }\n                });\n              }}\n              color=\"error\"\n            >\n              Cancel\n            </Button>\n          )}\n          <Button\n            sx={{\n              height: \"30px\",\n              fontSize: \"11px\",\n            }}\n            disabled={state.pdcMode === \"\"}\n            variant=\"contained\"\n            startIcon={<AddIcon sx={{ width: 15, height: 15 }} />}\n            onClick={() => {\n              const getLastCheck_No: any = pdcDataRows[pdcDataRows.length - 1];\n              modalPdcCheckInititalState.Check_No = incrementCheckNo(\n                getLastCheck_No?.Check_No\n              );\n              setNewStateValue(\n                dispatchModalPdcCheck,\n                modalPdcCheckInititalState\n              );\n              dispatch({\n                type: \"UPDATE_FIELD\",\n                field: \"checkMode\",\n                value: \"\",\n              });\n              flushSync(() => {\n                setOpenPdcInputModal(true);\n              });\n\n              _checknoRef.current?.focus();\n            }}\n            ref={addRefButton}\n          >\n            Add Check\n          </Button>\n          <div>\n            <Button\n              disabled={state.pdcMode !== \"update\"}\n              id=\"basic-button\"\n              aria-controls={open ? \"basic-menu\" : undefined}\n              aria-haspopup=\"true\"\n              aria-expanded={open ? \"true\" : undefined}\n              onClick={handleClick}\n              sx={{\n                height: \"30px\",\n                fontSize: \"11px\",\n                color: \"white\",\n                backgroundColor: grey[600],\n                \"&:hover\": {\n                  backgroundColor: grey[700],\n                },\n              }}\n            >\n              Print\n            </Button>\n            <Menu\n              id=\"basic-menu\"\n              anchorEl={anchorEl}\n              open={open}\n              onClose={handleClose}\n              MenuListProps={{\n                \"aria-labelledby\": \"basic-button\",\n              }}\n            >\n              <MenuItem onClick={clickPDCReceipt}>PDC Receipt</MenuItem>\n              <MenuItem onClick={clickPDCLabeling}>PDC Labeling</MenuItem>\n            </Menu>\n          </div>\n        </div>\n      </Box>\n      <form\n        onKeyDown={(e) => {\n          if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n            e.preventDefault();\n            return;\n          }\n        }}\n        style={{\n          marginBottom: \"20px\",\n        }}\n      >\n        <Box\n          sx={(theme) => ({\n            display: \"flex\",\n            columnGap: \"15px\",\n            flexDirection: \"row\",\n            [theme.breakpoints.down(\"md\")]: {\n              flexDirection: \"column\",\n              rowGap: \"10px\",\n            },\n          })}\n        >\n          <Box\n            sx={{\n              display: \"flex\",\n              gap: \"10px\",\n              width: \"100%\",\n            }}\n          >\n            <fieldset\n              style={\n                {\n                  flex: 1,\n                  display: \"flex\",\n                  flexDirection: \"column\",\n                  gap: \"10px\",\n                  padding: \"15px\",\n                  border: \"1px solid #cbd5e1\",\n                  borderRadius: \"5px\",\n                } as any\n              }\n            >\n              <div\n                style={{\n                  display: \"flex\",\n                  gap: \"10px\",\n                }}\n              >\n                {newRefNumberLoading ? (\n                  <LoadingButton loading={newRefNumberLoading} />\n                ) : (\n                  <FormControl\n                    fullWidth\n                    variant=\"outlined\"\n                    size=\"small\"\n                    disabled={isDisableField}\n                    sx={{\n                      \".MuiFormLabel-root\": {\n                        fontSize: \"14px\",\n                        background: \"white\",\n                        zIndex: 99,\n                        padding: \"0 3px\",\n                      },\n                      \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n                    }}\n                  >\n                    <InputLabel htmlFor=\"pdc-id-field\">\n                      Reference No.\n                    </InputLabel>\n                    <OutlinedInput\n                      readOnly={user?.department !== \"UCSMI\"}\n                      sx={{\n                        height: \"27px\",\n                        fontSize: \"14px\",\n                        fieldset: { borderColor: \"black\" },\n                      }}\n                      disabled={isDisableField}\n                      label=\"Reference No.\"\n                      name=\"Ref_No\"\n                      value={state.Ref_No}\n                      onChange={handleInputChange}\n                      onKeyDown={(e) => {\n                        if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n                          dateRef.current?.focus()\n                        }\n                      }}\n                      id=\"pdc-id-field\"\n                      endAdornment={\n                        <InputAdornment position=\"end\">\n                          <IconButton\n                            disabled={isDisableField}\n                            aria-label=\"search-client\"\n                            color=\"secondary\"\n                            edge=\"end\"\n                          >\n                            <RestartAltIcon />\n                          </IconButton>\n                        </InputAdornment>\n                      }\n                    />\n                  </FormControl>\n                )}\n                <CustomDatePicker\n                  fullWidth={true}\n                  disabled={isDisableField}\n                  label=\"Date Received\"\n                  onChange={(value: any) => {\n                    dispatch({\n                      type: \"UPDATE_FIELD\",\n                      field: \"Date\",\n                      value: value,\n                    });\n                  }}\n                  inputRef={dateRef}\n                  value={new Date(state.Date)}\n                  onKeyDown={(e: any) => {\n                    if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n                      // savePDCButtonRef.current?.click();\n                      remakrsRef.current?.focus()\n                    }\n                  }}\n                  textField={{\n                    InputLabelProps: {\n                      style: {\n                        fontSize: \"14px\",\n                      },\n                    },\n                    InputProps: {\n                      style: { height: \"27px\", fontSize: \"14px\" },\n                    },\n                  }}\n                />\n              </div>\n              <TextField\n                InputLabelProps={{\n                  sx: {\n                    color: \"black\",\n                  },\n                }}\n                variant=\"outlined\"\n                size=\"small\"\n                label=\"Remarks\"\n                name=\"Remarks\"\n                value={state.Remarks}\n                onChange={handleInputChange}\n                disabled={isDisableField}\n                onKeyDown={(e) => {\n                  if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n                    pnRef.current?.focus()\n                  }\n                }}\n                InputProps={{\n                  style: { height: \"27px\", fontSize: \"14px\" },\n                  inputRef: remakrsRef\n                }}\n                sx={{\n                  fieldset: { borderColor: \"black\" },\n                  \".MuiFormLabel-root\": { fontSize: \"14px\" },\n                  \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n                }}\n              />\n            </fieldset>\n            <fieldset\n              style={\n                {\n                  flex: 1,\n                  display: \"flex\",\n                  gap: \"10px\",\n                  padding: \"15px\",\n                  border: \"1px solid #cbd5e1\",\n                  borderRadius: \"5px\",\n                  flexDirection: \"column\",\n                } as any\n              }\n            >\n              <div\n                style={{ width: \"100%\", flex: 1, display: \"flex\", gap: \"10px\" }}\n              >\n                {isLoadingModalSearchPdcIDs ? (\n                  <LoadingButton loading={isLoadingModalSearchPdcIDs} />\n                ) : (\n                  <FormControl\n                    fullWidth\n                    variant=\"outlined\"\n                    size=\"small\"\n                    disabled={isDisableField}\n                    sx={{\n                      flex: 1,\n                      \".MuiFormLabel-root\": {\n                        fontSize: \"14px\",\n                        background: \"white\",\n                        zIndex: 99,\n                        padding: \"0 3px\",\n                      },\n                      \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n                    }}\n                  >\n                    <InputLabel htmlFor=\"label-input-id\">\n                      PN/Client ID\n                    </InputLabel>\n                    <OutlinedInput\n                      inputRef={pnRef}\n                      sx={{\n                        fieldset: { borderColor: \"black\" },\n\n                        height: \"27px\",\n                        fontSize: \"14px\",\n                      }}\n                      onKeyDown={(e) => {\n                        if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n                          openIdsButtonRef.current?.click();\n                        }\n                      }}\n                      name=\"PNo\"\n                      value={state.PNo}\n                      onChange={handleInputChange}\n                      id=\"label-input-id\"\n                      endAdornment={\n                        <InputAdornment position=\"end\">\n                          <IconButton\n                            ref={openIdsButtonRef}\n                            disabled={isDisableField}\n                            aria-label=\"search-client\"\n                            color=\"secondary\"\n                            edge=\"end\"\n                            onClick={() => openModalSearchPdcIDs(state.PNo)}\n                          >\n                            <PersonSearchIcon />\n                          </IconButton>\n                        </InputAdornment>\n                      }\n                      label=\"PN/Client ID\"\n                    />\n                  </FormControl>\n                )}\n                <TextField\n                  InputLabelProps={{\n                    sx: {\n                      color: \"black\",\n                    },\n                  }}\n                  variant=\"outlined\"\n                  size=\"small\"\n                  label=\"Branch\"\n                  name=\"Acronym\"\n                  value={state.Acronym}\n                  onChange={handleInputChange}\n                  disabled={isDisableField}\n                  onKeyDown={(e) => {\n                    if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n                      clientnameRef.current?.focus();\n                    }\n                  }}\n                  InputProps={{\n                    style: { height: \"27px\", fontSize: \"14px\" },\n                    readOnly: true,\n                    inputRef: branchRef\n                  }}\n                  sx={{\n                    fieldset: { borderColor: \"black\" },\n                    flex: 1,\n                    height: \"27px\",\n                    \".MuiFormLabel-root\": { fontSize: \"14px\" },\n                    \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n                  }}\n                />\n              </div>\n              <div\n                style={{ width: \"100%\", display: \"flex\", columnGap: \"10px\" }}\n              >\n                <TextField\n                  InputLabelProps={{\n                    sx: {\n                      color: \"black\",\n                    },\n                  }}\n                  variant=\"outlined\"\n                  size=\"small\"\n                  label=\"Clients Name\"\n                  name=\"Name\"\n                  value={state.Name}\n                  onChange={handleInputChange}\n                  disabled={isDisableField}\n                  onKeyDown={(e) => {\n                    if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n                      savePDCButtonRef.current?.click();\n                    }\n                  }}\n                  InputProps={{\n                    style: { height: \"27px\", fontSize: \"14px\" },\n                    readOnly: true,\n                    inputRef: clientnameRef\n                  }}\n                  sx={{\n                    fieldset: { borderColor: \"black\" },\n                    flex: 1,\n                    height: \"27px\",\n                    \".MuiFormLabel-root\": { fontSize: \"14px\" },\n                    \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n                  }}\n                />\n                <Button\n                  sx={{\n                    height: \"27px\",\n                    fontSize: \"11px\",\n                  }}\n                  disabled={state.pdcMode === \"\"}\n                  variant=\"contained\"\n                  startIcon={<DownloadIcon sx={{ width: 15, height: 15 }} />}\n                  onClick={() => {\n                    setShowModal(true);\n                  }}\n                >\n                  Upload Check\n                </Button>\n              </div>\n            </fieldset>\n          </Box>\n        </Box>\n      </form>\n      <UpwardTable\n        isLoading={isLoadingSelectedSearch}\n        ref={tableRef}\n        rows={pdcDataRows}\n        column={pdcColumn}\n        width={width}\n        height={height}\n        dataReadOnly={true}\n        onSelectionChange={onSelectionChange}\n        onKeyDown={(row, key) => {\n          if (key === \"Delete\" || key === \"Backspace\") {\n            const rowSelected = row[0];\n            if (\n              (rowSelected.Deposit_Slip && rowSelected.Deposit_Slip !== \"\") ||\n              (rowSelected.DateDeposit && rowSelected.DateDeposit !== \"\") ||\n              (rowSelected.OR_No && rowSelected.OR_No !== \"\")\n            ) {\n              return Swal.fire({\n                position: \"center\",\n                icon: \"warning\",\n                title: `Unable to delete. Check No ${rowSelected.Check_No} is already ${rowSelected.OR_No} issued of OR!`,\n                showConfirmButton: false,\n                timer: 1500,\n              });\n            }\n            Swal.fire({\n              title: \"Are you sure?\",\n              text: `You won't to delete this Check No. ${rowSelected.Check_No}`,\n              icon: \"warning\",\n              showCancelButton: true,\n              confirmButtonColor: \"#3085d6\",\n              cancelButtonColor: \"#d33\",\n              confirmButtonText: \"Yes, delete it!\",\n            }).then((result) => {\n              if (result.isConfirmed) {\n                setTimeout(() => {\n                  const selectedIndex = tableRef.current.getSelectedRowsOnClick()\n                  setPdcDataRows((dt) => {\n                    return dt.filter(\n                      (item: any, idx: number) => idx !== selectedIndex\n                    );\n                  });\n                  tableRef.current?.resetTableSelected();\n                }, 100)\n              }\n            });\n          }\n        }}\n        inputsearchselector=\".manok\"\n      />\n\n      <Modal\n        open={openPdcInputModal}\n        onClose={() => {\n          tableRef.current?.resetTableSelected();\n          setOpenPdcInputModal(false);\n          focusOnTable()\n        }}\n        aria-labelledby=\"modal-modal-title\"\n        aria-describedby=\"modal-modal-description\"\n      >\n        <Box\n          sx={{\n            position: \"absolute\" as \"absolute\",\n            top: \"50%\",\n            left: \"50%\",\n            transform: \"translate(-50%, -50%)\",\n            width: \"auto\",\n            bgcolor: \"background.paper\",\n            p: 4,\n          }}\n        >\n          <Typography id=\"modal-modal-title\" variant=\"h6\" component=\"h2\">\n            Check Detail\n          </Typography>\n          <br />\n          <div\n            style={{\n              display: \"flex\",\n              columnGap: \"10px\",\n            }}\n          >\n            <div\n              style={{\n                display: \"flex\",\n                flexDirection: \"column\",\n                gap: \"10px\",\n              }}\n            >\n              <TextInput\n                label={{\n                  title: \"Check No : \",\n                  style: {\n                    fontSize: \"12px\",\n                    fontWeight: \"bold\",\n                    width: \"70px\",\n                  },\n                }}\n                input={{\n                  type: \"text\",\n                  style: { width: \"190px\" },\n                  onKeyDown: (e) => {\n                    if (e.code === \"NumpadEnter\" || e.code === 'Enter') {\n                      _bankRef.current?.focus()\n                    }\n                  },\n                }}\n                inputRef={_checknoRef}\n              />\n              {isLoadingModalSearchbanks ? (\n                <LoadingButton loading={isLoadingModalSearchbanks} />\n              ) : (\n                <TextInput\n                  label={{\n                    title: \"Bank : \",\n                    style: {\n                      fontSize: \"12px\",\n                      fontWeight: \"bold\",\n                      width: \"70px\",\n                    },\n                  }}\n                  input={{\n                    type: \"text\",\n                    style: { width: \"190px\" },\n                    value: state.refNo,\n                    name: \"refNo\",\n                    onKeyDown: (e) => {\n                      if (e.code === \"NumpadEnter\" || e.code === 'Enter') {\n                        return openModalSearchBanks(\n                          e.currentTarget.value\n                        );\n                      }\n                    }\n                  }}\n                  icon={<AccountBalanceIcon sx={{ fontSize: \"18px\" }} />}\n                  onIconClick={(e) => {\n                    e.preventDefault()\n                    if (_bankRef.current) {\n                      openModalSearchBanks(\n                        _bankRef.current?.value\n                      );\n                    }\n                  }}\n                  inputRef={_bankRef}\n                />\n              )}\n\n              <TextInput\n                label={{\n                  title: \"Branch : \",\n                  style: {\n                    fontSize: \"12px\",\n                    fontWeight: \"bold\",\n                    width: \"70px\",\n                  },\n                }}\n                input={{\n                  type: \"text\",\n                  style: { width: \"190px\" },\n                  onKeyDown: (e) => {\n                    if (e.code === \"NumpadEnter\" || e.code === 'Enter') {\n                      _remarksRef.current?.focus()\n                    }\n                  },\n                }}\n                inputRef={_branchRef}\n              />\n              <TextAreaInput\n                label={{\n                  title: \"Remarks : \",\n                  style: {\n                    fontSize: \"12px\",\n                    fontWeight: \"bold\",\n                    width: \"70px\",\n                  },\n                }}\n                textarea={{\n                  rows: 4,\n                  disabled: isDisableField,\n                  style: { flex: 1 },\n                  onKeyDown: (e) => {\n                    if (e.code === \"NumpadEnter\" || e.code === 'Enter') {\n                      _chekdateRef.current?.focus()\n                    }\n                  },\n                }}\n                _inputRef={_remarksRef}\n              />\n            </div>\n            <div\n              style={{\n                display: \"flex\",\n                gap: \"10px\",\n                flexDirection: \"column\",\n              }}\n            >\n\n              <TextInput\n                label={{\n                  title: \"Check Dated : \",\n                  style: {\n                    fontSize: \"12px\",\n                    fontWeight: \"bold\",\n                    width: \"90px\",\n                  },\n                }}\n                input={{\n                  disabled: isDisableField,\n                  type: \"date\",\n                  style: { width: \"190px\" },\n                  defaultValue: new Date().toISOString().split(\"T\")[0],\n                  onKeyDown: (e) => {\n                    if (e.code === \"NumpadEnter\" || e.code === 'Enter') {\n                      _amountRef.current?.focus()\n                    }\n                  },\n                }}\n                inputRef={_chekdateRef}\n              />\n\n              <div style={{\n                display: \"flex\"\n              }}>\n                <label style={{\n                  fontSize: \"12px\",\n                  fontWeight: \"bold\",\n                  width: \"90px\",\n                }}>Amount :</label>\n                <NumericFormat\n                  style={{\n                    flex: 1\n                  }}\n                  value={_amountRef.current?.value ?? \"\"}\n                  getInputRef={_amountRef}\n                  allowNegative={false}\n                  thousandSeparator\n                  valueIsNumericString\n                  onKeyDown={(e) => {\n                    if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n                      let currentValue = _amountRef.current?.value as string;\n                      let numericValue = parseFloat(currentValue.replace(/,/g, ''));\n                      if (_amountRef.current) {\n                        if (isNaN(numericValue)) {\n                          _amountRef.current.value = \"0.00\";\n                        } else {\n                          if (!currentValue.includes(\".\")) {\n                            _amountRef.current.value = `${formatNumber(numericValue)}`;\n                          } else {\n                            _amountRef.current.value = formatNumber(numericValue);\n                          }\n                        }\n                      }\n                      _checkcountRef.current?.focus()\n                    }\n                  }}\n                />\n              </div>\n              {state.checkMode !== \"update\" && (\n                <TextInput\n                  label={{\n                    title: \"Check Count : \",\n                    style: {\n                      fontSize: \"12px\",\n                      fontWeight: \"bold\",\n                      width: \"90px\",\n                    },\n                  }}\n                  input={{\n                    disabled: isDisableField,\n                    type: \"number\",\n                    style: { width: \"190px\" },\n                    onKeyDown: (e) => {\n                      if (e.code === \"NumpadEnter\" || e.code === 'Enter') {\n                        const timeout = setTimeout(() => {\n                          checkModalSaveButton.current?.click();\n                          clearTimeout(timeout);\n                        }, 100);\n                      }\n                    },\n                  }}\n                  inputRef={_checkcountRef}\n                />\n              )}\n            </div>\n          </div>\n          <div\n            style={{\n              display: \"flex\",\n              justifyContent: \"flex-end\",\n              width: \"100%\",\n              marginTop: \"10px\",\n            }}\n          >\n            <div style={{ display: \"flex\", gap: \"10px\" }}>\n              <Button\n                ref={checkModalSaveButton}\n                action={checkModalSaveButtonActionRef}\n                color=\"primary\"\n                variant=\"contained\"\n                autoFocus={state.checkMode !== \"\"}\n                onClick={() => {\n                  handleCheckDetailsSave()\n                }}\n                sx={{\n                  height: \"30px\",\n                  fontSize: \"11px\",\n                }}\n              >\n                {state.checkMode === \"update\" ? \"Update\" : \"Save\"}\n              </Button>\n              {state.checkMode === \"update\" && (\n                <Button\n                  color=\"error\"\n                  variant=\"contained\"\n                  onClick={() => {\n                    flushSync(() => {\n                      setOpenPdcInputModal(false);\n                    });\n                    Swal.fire({\n                      title: \"Are you sure?\",\n                      text: `Delete Check ${stateModalPdcCheck.Check_No} `,\n                      icon: \"warning\",\n                      showCancelButton: true,\n                      confirmButtonColor: \"#3085d6\",\n                      cancelButtonColor: \"#d33\",\n                      confirmButtonText: \"Yes, delete it!\",\n                    }).then((result) => {\n                      if (result.isConfirmed) {\n                        setPdcDataRows((dt) => {\n                          dt = dt.filter(\n                            (items: any) =>\n                              items.CheckIdx !== stateModalPdcCheck.CheckIdx\n                          );\n                          return dt;\n                        });\n                      }\n                      focusOnTable()\n                    });\n                  }}\n                  sx={{\n                    height: \"30px\",\n                    fontSize: \"11px\",\n                  }}\n                >\n                  Delete\n                </Button>\n              )}\n              <Button\n                color=\"success\"\n                variant=\"contained\"\n                sx={{\n                  height: \"30px\",\n                  fontSize: \"11px\",\n                }}\n                onClick={() => {\n                  focusOnTable()\n                  setOpenPdcInputModal(false);\n                }}\n              >\n                Cancel\n              </Button>\n              <IconButton\n                style={{\n                  position: \"absolute\",\n                  top: \"10px\",\n                  right: \"10px\",\n                }}\n                aria-label=\"search-client\"\n                onClick={() => {\n                  setOpenPdcInputModal(false);\n                  focusOnTable()\n                }}\n              >\n                <CloseIcon />\n              </IconButton>\n            </div>\n          </div>\n        </Box>\n      </Modal>\n      <div\n        style={{\n          display: showModal ? \"flex\" : \"none\",\n          position: \"absolute\",\n          top: 0,\n          bottom: 0,\n          left: 0,\n          right: 0,\n          background: \"rgba(158, 155, 157, 0.31)\",\n          zIndex: \"999\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n        }}\n      >\n        <div\n          style={{\n            width: \"90%\",\n            height: \"90%\",\n          }}\n        >\n          <div\n            style={{\n              width: \"90%\",\n              height: \"90%\",\n              overflow: \"auto\",\n              background: \"white\",\n              padding: \"20px\",\n              margin: \"auto\",\n              zIndex: \"9929\",\n              boxShadow: \" -1px 1px 13px 6px rgba(0,0,0,0.54)\",\n              position: \"relative\",\n            }}\n          >\n            <div\n              style={{\n                height: \"100%\",\n                width: \"100%\",\n                position: \"relative\",\n                display: \"flex\",\n                justifyContent: \"center\",\n                alignItems: \"center\",\n                flexDirection: \"column\",\n              }}\n            >\n              <IconButton\n                sx={{\n                  position: \"absolute\",\n                  right: \"5px\",\n                  top: \"5px\",\n                }}\n                onClick={() => {\n                  setShowModal(false);\n                }}\n              >\n                <CloseIcon />\n              </IconButton>\n              <div\n                style={{\n                  width: \"100%\",\n                  height: \"500px\",\n                  border: isDragging ? \"5px dashed green\" : \"5px dashed grey\",\n                  overflow: \"auto\",\n                  padding: \"10px\",\n                }}\n                onDragEnter={handleDragEnter}\n                onDragOver={(e) => e.preventDefault()}\n                onDragLeave={handleDragLeave}\n                onDrop={handleDrop}\n              >\n                <div\n                  id=\"upload-container\"\n                  style={{\n                    width: \"100%\",\n                    height: \"100%\",\n                    display: \"flex\",\n                    gap: \"10px\",\n                    flexWrap: \"wrap\",\n                  }}\n                  onDragEnter={handleDragEnter}\n                  onDragOver={(e) => e.preventDefault()}\n                  onDragLeave={handleDragLeave}\n                  onDrop={handleDrop}\n                >\n                  {selectedFiles.map((itm, idx) => {\n                    return (\n                      <DisplayFile\n                        key={idx}\n                        itm={itm}\n                        selectedFiles={selectedFiles}\n                        setSelectedFiles={setSelectedFiles}\n                        fileInput={fileInputRef}\n                      />\n                    );\n                  })}\n                </div>\n                {selectedFiles.length <= 0 && (\n                  <div\n                    style={{\n                      position: \"absolute\",\n                      top: \"50%\",\n                      left: \"50%\",\n                      transform: \"translate(-50%,-50%)\",\n                      textAlign: \"center\",\n                    }}\n                  >\n                    <DriveFolderUploadIcon\n                      sx={{ fontSize: \"20em\", color: \"#64748b\" }}\n                    />\n                  </div>\n                )}\n                <input\n                  ref={fileInputRef}\n                  type=\"file\"\n                  multiple\n                  style={{ display: \"none\", background: \"white\" }}\n                  id=\"input-file\"\n                  onChange={(e) => {\n                    const fileList = e.target.files as FileList;\n                    const files = Array.from(fileList);\n                    const newFiles = [...selectedFiles, ...files];\n                    if (checkFile(newFiles)) {\n                      return alert(\"file is not valid Extention!\");\n                    }\n                    setSelectedFiles(newFiles);\n                  }}\n                />\n              </div>\n              <div\n                style={{\n                  width: \"100%\",\n                }}\n              >\n                <Button\n                  fullWidth\n                  onClick={() => {\n                    const inputFile = document.getElementById(\"input-file\");\n                    inputFile?.click();\n                  }}\n                >\n                  CLick it to upload\n                </Button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      {(loadingAddNew ||\n        isLoadingSelectedSearch) && <div className=\"loading-component\"><div className=\"loader\"></div></div>}\n\n    </div>\n  );\n}\nexport function setNewStateValue(dispatch: any, obj: any) {\n  Object.entries(obj).forEach(([field, value]) => {\n    dispatch({ type: \"UPDATE_FIELD\", field, value });\n  });\n}\nexport function incrementCheckNo(Check_No: string) {\n  if (Check_No === undefined || Check_No === null || Check_No === \"\") {\n    return \"001\";\n  }\n\n  let incrementedNumber = (parseInt(Check_No) + 1).toString();\n  while (incrementedNumber.length < Check_No.length) {\n    incrementedNumber = \"0\" + incrementedNumber;\n  }\n  return incrementedNumber;\n}\n"],"names":["useUpwardTableModal","_ref","_mutationFn","myAxios","user","column","link","onSelectionChange","responseDataKey","_ref$onModalClose","onModalClose","id","useId","inputSearchRef","useRef","tableRef","parentRef","_useState","useState","_useState2","_slicedToArray","show","setShowModal","_useState3","_useState4","rows","setRows","_useMutation","useMutation","mutationKey","mutationFn","_x","_asyncToGenerator","_regeneratorRuntime","mark","_callee","variable","wrap","_context","prev","next","get","concat","url","queryUrlName","search","headers","Authorization","accessToken","abrupt","sent","stop","apply","arguments","onSuccess","res","data","isLoading","mutate","throttledSearch","throttle","query","performSearch","closeModal","useEffect","current","wait","then","_parentRef$current","focus","Modal","_jsx","open","onClose","children","style","position","top","left","transform","width","background","paddingTop","paddingBottom","paddingLeft","paddingRight","_jsxs","TextInput","label","display","input","className","type","marginBottom","onChange","e","preventDefault","currentTarget","value","onKeyDown","key","target","datagridview","getParentElement","querySelector","setTimeout","inputRef","UpwardTable","ref","filter","itm","hide","height","dataReadOnly","IconButton","right","onClick","CloseIcon","fontSize","openModal","_inputSearchRef$curre","initialState","Sub_Ref_No","Ref_No","PNo","IDNo","Date","Name","Remarks","PDC_Status","Deposit_Slip","DateDeposit","OR_No","pdcMode","checkMode","sub_account","Acronym","modalPdcCheckInititalState","CheckIdx","BankName","BankCode","Branch","Check_Date","Check_No","Check_Amnt","Check_Remarks","Check_Count","reducer","state","action","_objectSpread","_defineProperty","field","pdcColumn","headerName","pdcSearchColumn","flex","pdcBanksColumn","queryKey","quertKeyPDCSearch","PostDateChecks","_queryFn","_mutationFn2","_onSuccess","_handleOnSave","_amountRef$current$va","_amountRef$current2","_React$useState","React","_React$useState2","anchorEl","setAnchorEl","Boolean","isDragging","setIsDragging","selectedFiles","setSelectedFiles","_useState5","_useState6","pdcDataRows","setPdcDataRows","_useState7","_useState8","openPdcInputModal","setOpenPdcInputModal","_useState9","_useState10","showModal","_useReducer","useReducer","_useReducer2","dispatch","_useReducer3","_useReducer4","stateModalPdcCheck","dispatchModalPdcCheck","_useContext","useContext","AuthContext","searchRef","fileInputRef","savePDCButtonRef","openIdsButtonRef","checkModalSaveButton","checkModalSaveButtonActionRef","_checknoRef","_bankRef","_branchRef","_remarksRef","_chekdateRef","_amountRef","_checkcountRef","_bankCode","_slipCodeRef","_slipDateRef","_checkOR","addRefButton","queryClient","useQueryClient","dateRef","remakrsRef","pnRef","branchRef","clientnameRef","_useQuery","useQuery","queryFn","refetchOnWindowFocus","response","RefNo","pdcID","newRefNumberLoading","refetchNewRefNumber","refetch","_callee2","variables","_context2","mode","post","success","invalidateQueries","setNewStateValue","Swal","icon","title","message","showConfirmButton","timer","loadingAddNew","_useMutation2","_x2","_callee3","_context3","_x3","_callee5","_formatDataToDocument","_response$data$upload","uploadFiles","newObjContainerBasic","fileSelected","formatDataToDocument","_context6","_x4","_x5","_callee4","dataDocument","newObjContainer","_loop","index","_context5","basicItem","mainURL","blob","file","reader","_context4","uniqueFilename","fetch","File","fileName","fileType","FileReader","push","Promise","resolve","reject","onload","event","onerror","Error","name","readAsDataURL","length","delegateYield","alert","getSearchPDCCheck","upload","JSON","parse","process","all","map","item","idx","mutateSelectedSearch","isLoadingSelectedSearch","_useUpwardTableModal","selectedRow","_selectedRow$0$Name","_selectedRow$0$remark","client_id","remarks","closeModalSearchPdcIDs","_addRefButton$current","click","ModalSearchPdcIDs","openModalSearchPdcIDs","isLoadingModalSearchPdcIDs","_useUpwardTableModal2","Bank_Code","Bank","closeModalSearchBanks","_branchRef$current","ModalSearchBanks","openModalSearchBanks","isLoadingModalSearchbanks","_useUpwardTableModal3","_searchRef$current","ref_no","closeUpwardPDCModal","UpwardPDCModal","openUpwardPDCModal","isLoadingModalSearchPDC","handleInputChange","_e$target","handleDragLeave","handleDragEnter","handleDrop","_fileInputRef$current","fileList","dataTransfer","files","Array","from","newFiles","_toConsumableArray","checkFile","formatNumber","num","toLocaleString","minimumFractionDigits","maximumFractionDigits","focusOnTable","_tableRef$current","resetTableSelected","isDisableField","window","innerWidth","innerHeight","padding","backgroundColor","Box","sx","theme","alignItems","columnGap","breakpoints","down","flexDirection","LoadingButton","loading","TextField","size","code","document","InputProps","Button","variant","startIcon","AddIcon","color","_x6","_callee6","filePromises","fileTransfer","fileToSave","stateSubmited","_context7","_loop2","i","_event$target","datakey","fileContent","result","_openIdsButtonRef$cur","checks","stringify","codeCondfirmationAlert","isUpdate","cb","userCodeConfirmation","saveCondfirmationAlert","isConfirm","disabled","SaveIcon","text","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","isConfirmed","_checknoRef$current","getLastCheck_No","incrementCheckNo","flushSync","undefined","grey","Menu","MenuListProps","MenuItem","localStorage","removeItem","setItem","header","department","elementString","ReactDOMServer","textAlign","marginTop","margin","rowGap","gap","border","borderRadius","FormControl","fullWidth","zIndex","InputLabel","htmlFor","OutlinedInput","readOnly","fieldset","borderColor","_dateRef$current","endAdornment","InputAdornment","edge","RestartAltIcon","CustomDatePicker","_remakrsRef$current","textField","InputLabelProps","_pnRef$current","_openIdsButtonRef$cur2","PersonSearchIcon","_clientnameRef$curren","_savePDCButtonRef$cur","DownloadIcon","_checkModalSaveButton","rowSelected","console","log","parseFloat","replace","focusVisible","row","_tableRef$current2","selectedIndex","getSelectedRowsOnClick","dt","inputsearchselector","_tableRef$current3","bgcolor","p","Typography","component","fontWeight","_bankRef$current","refNo","AccountBalanceIcon","onIconClick","_bankRef$current2","_remarksRef$current","TextAreaInput","textarea","_chekdateRef$current","_inputRef","defaultValue","toISOString","split","_amountRef$current","NumericFormat","getInputRef","allowNegative","thousandSeparator","valueIsNumericString","_amountRef$current3","_checkcountRef$curren","currentValue","numericValue","isNaN","includes","timeout","_checkModalSaveButton2","clearTimeout","justifyContent","autoFocus","incrementStringNumbers","str","increment","parseInt","toString","padStart","incrementDate","dateString","currentDate","setMonth","getMonth","format","date","getTime","isValidDate","d","getSelectedIndex","newData","handleCheckDetailsSave","items","bottom","overflow","boxShadow","onDragEnter","onDragOver","onDragLeave","onDrop","flexWrap","DisplayFile","fileInput","DriveFolderUploadIcon","multiple","inputFile","getElementById","obj","Object","entries","forEach","_ref3","_ref4","incrementedNumber"],"sourceRoot":""}