{"version":3,"file":"static/js/3147.303200fd.chunk.js","mappings":"4TAGe,SAASA,EAAgBC,GAY/B,IAXPC,EAAKD,EAALC,MACAC,EAAIF,EAAJE,KACAC,EAAQH,EAARG,SACAC,EAAKJ,EAALI,MACAC,EAASL,EAATK,UACAC,EAAQN,EAARM,SACAC,EAAaP,EAAbO,cACAC,EAASR,EAATQ,UACAC,EAAST,EAATS,UAASC,EAAAV,EACTW,SAAAA,OAAQ,IAAAD,EAAG,QAAOA,EACfE,GAAIC,EAAAA,EAAAA,GAAAb,EAAAc,GAEP,OACEC,EAAAA,EAAAA,KAACC,EAAAA,EAAoB,CAACC,YAAaC,EAAAA,EAAeC,UAChDJ,EAAAA,EAAAA,KAACK,EAAAA,GAAUC,EAAAA,EAAAA,GAAA,CACXC,mBAAoB,CAACC,MAAO,SAC1BnB,MAAOA,EACPD,SAAUA,EACVqB,IAAKjB,EACLkB,UAAW,CACThB,WAASY,EAAAA,EAAAA,GAAA,CACPK,KAAM,QACNzB,MAAAA,EACAC,KAAAA,EACAG,UAAAA,EACAC,SAAUA,EACVE,UAAAA,GAEGC,IAGPkB,gBAAiB,CACfC,GAAI,CACFL,MAAO,UAGXK,GAAI,CACFjB,SAAAA,EACAkB,SAAU,CAAEC,YAAa,SACzB,qBAAsB,CAAEC,SAAU,QAClC,wCAAyC,CACvCC,IAAK,UAGLpB,KAIZ,C,8MChBMqB,EAAQ,CACZC,SAAU,WACVF,IAAK,MACLG,KAAM,MACNC,UAAW,wBACXC,MAAO,MACPC,QAAS,mBACTC,UAAW,GACXC,EAAG,EACHC,OAAQ,QAGK,SAASC,EAAc1C,GAmBZ,IAlBxB2C,EAAM3C,EAAN2C,OACAC,EAAS5C,EAAT4C,UAEAC,GADQ7C,EAAR8C,SACO9C,EAAP6C,SACAE,EAAiB/C,EAAjB+C,kBAEAC,GADOhD,EAAPiD,QACIjD,EAAJgD,MACAE,EAAElD,EAAFkD,GACAC,EAAYnD,EAAZmD,aACAC,EAASpD,EAAToD,UACAC,EAAgBrD,EAAhBqD,iBACAC,EAActD,EAAdsD,eAAcC,EAAAvD,EACdwD,MAAAA,OAAK,IAAAD,EAAG,GAAEA,EACVE,EAASzD,EAATyD,UACaC,GAAA1D,EAAb2D,cAAa3D,EACb4D,kBAAAA,OAAgB,IAAAF,EAAG,WAAQ,EAACA,EAC5BG,EAAe7D,EAAf6D,gBACAC,EAAgB9D,EAAhB8D,iBAEMC,EAASC,IAEf,OACEjD,EAAAA,EAAAA,KAACkD,EAAAA,EAAK,CACJC,KAAMd,EACNe,QAAShB,EACT,kBAAgB,oBAChB,mBAAiB,0BAAyBhC,UAE1CiD,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CAACzC,GAAIK,EAAMd,SAAA,EACbJ,EAAAA,EAAAA,KAACuD,EAAAA,EAAU,CAACpB,GAAG,oBAAoBqB,QAAQ,KAAKC,UAAU,KAAKC,GAAI,EAAEtD,SAClEqC,KAEHzC,EAAAA,EAAAA,KAAC2D,EAAAA,EAAS,CACRhD,KAAK,QACLzB,MAAM,SACN2B,GAAI,CAAE+C,aAAc,QACpBnE,WAAS,EACTL,SAAUmD,EACVsB,WAAY,CACVtE,SAAUmD,GAEZpD,UAAW,SAACwE,GAC2C,IAADC,EAArC,UAAXD,EAAEE,MAA+B,gBAAXF,EAAEE,OAC1BF,EAAEG,iBACFpB,EAA0B,OAATH,QAAS,IAATA,GAAkB,QAATqB,EAATrB,EAAWwB,eAAO,IAAAH,OAAT,EAATA,EAAoB1E,QAEvC8E,EACEL,EACAd,EACS,OAATN,QAAS,IAATA,OAAS,EAATA,EAAWwB,QAEf,KAEFlE,EAAAA,EAAAA,KAAA,OACEoE,UAAS,GAAAC,OAAKrB,EAAM,mCACpB9B,MAAO,CAAEC,SAAU,WAAYS,OAAO,GAADyC,OAAKzC,EAAS,GAAE,OAAOxB,UAE5DJ,EAAAA,EAAAA,KAACsE,EAAAA,EAAK,CACJC,mBAAmB,EACnBC,aAAa,EACb1C,QAASA,EACTD,UAAWA,EACX4C,cAAe,SAACC,EAAWC,EAAMX,GAC/BhC,EAAkB0C,EAAWC,EAC/B,EACAC,SAAUzC,EACVF,KAAMA,EACNa,gBAAiBA,EACjBC,iBAAkBA,OAItB/C,EAAAA,EAAAA,KAAA,OAAKkB,MAAO,CAAEC,SAAU,WAAYF,IAAK,OAAQ4D,MAAO,QAASzE,UAC/DJ,EAAAA,EAAAA,KAAC8E,EAAAA,EAAU,CACT,aAAW,gBACXtE,MAAM,YACNuE,QAASzC,EAAiBlC,UAE1BJ,EAAAA,EAAAA,KAACgF,EAAAA,EAAS,YAMtB,CAEO,SAAS/B,IAGd,MADoB,QADCgC,KAAKC,MAAsB,IAAhBD,KAAKE,SAGvC,CAyBO,SAAShB,EACdL,EACAM,EACAgB,GAEA,IAAMpC,EAASoB,EACf,GAAe,cAAXN,EAAEE,KAAsB,CAAC,IAADqB,EACpBpD,EAAOqD,SAASC,iBAAiB,IAADlB,OAAKrB,EAAM,sBACjDc,EAAEG,iBACK,QAAPoB,EAAApD,EAAK,UAAE,IAAAoD,GAAPA,EAASG,UAAUC,IAAI,kBAhC3B,SAAwBrB,EAAmBgB,GACzC,IAAMM,EAAiBJ,SAASK,cAAc,IAADtB,OACvCD,EAAS,sBAETwB,EAA2B,OAAdF,QAAc,IAAdA,OAAc,EAAdA,EAAgBC,cAAc,SACvC,OAAVC,QAAU,IAAVA,GAAAA,EAAYC,QACZ,IAAMC,EAAQ,IAAIC,WAAW,aAAc,CACzCC,SAAS,EACTC,YAAY,EACZC,KAAMC,SAEM,OAAdT,QAAc,IAAdA,GAAAA,EAAgBU,cAAcN,GACpB,OAAVF,QAAU,IAAVA,GAAAA,EAAYS,iBAAiB,WAAW,SAACC,GACxB,YAAXA,EAAGC,MACLD,EAAGrC,iBACHmB,EAAGS,SAEU,YAAXS,EAAGC,MACS,OAAdb,QAAc,IAAdA,GAAAA,EAAgBF,UAAUgB,OAAO,kBAErC,GACF,CAYIC,CAAerC,EAAWgB,GAC1BnD,EAAKyE,SAAQ,SAACtB,EAAIuB,GAChBvB,EAAGiB,iBAAiB,WAAW,SAACC,GAC9B,GAAe,YAAXA,EAAGC,IAAmB,CAAC,IAADK,EAAAC,EACxB,GAAIF,GAAO,EACT,OAMF,OAHAL,EAAGrC,iBACM,QAAT2C,EAAA3E,EAAK0E,UAAI,IAAAC,GAATA,EAAWpB,UAAUgB,OAAO,uBACf,QAAbK,EAAA5E,EAAK0E,EAAM,UAAE,IAAAE,GAAbA,EAAerB,UAAUC,IAAI,kBAE/B,CACA,GAAe,cAAXa,EAAGC,IAAqB,CAAC,IAADO,EAAAC,EAE1B,GADAT,EAAGrC,iBACC0C,GAAO1E,EAAK+E,OAAS,EACvB,OAEO,QAATF,EAAA7E,EAAK0E,UAAI,IAAAG,GAATA,EAAWtB,UAAUgB,OAAO,kBACf,QAAbO,EAAA9E,EAAK0E,EAAM,UAAE,IAAAI,GAAbA,EAAevB,UAAUC,IAAI,iBAC/B,CACF,GACF,GACF,CACF,C,yKCvJMwB,GAAeC,EAAAA,EAAAA,eASlB,CACDjF,KAAM,GACNkF,kBAAmB,GACnBC,eAAgB,kBAAMpH,EAAAA,EAAAA,KAAA,SAAW,EACjCqH,yBAA0B,aAC1BC,yBAAyB,IAErBhD,GAAQiD,EAAAA,EAAAA,aACZ,SAAAtI,EAoBEwB,GACI,IAnBFoB,EAAS5C,EAAT4C,UACAC,EAAO7C,EAAP6C,QACAG,EAAIhD,EAAJgD,KACA2C,EAAQ3F,EAAR2F,SACAL,EAAiBtF,EAAjBsF,kBACAC,EAAWvF,EAAXuF,YACAC,EAAaxF,EAAbwF,cAAa+C,EAAAvI,EACbwI,sBAAAA,OAAqB,IAAAD,EAAGE,EAAqBF,EAC7C1E,EAAe7D,EAAf6D,gBACAC,EAAgB9D,EAAhB8D,iBAAgB4E,EAAA1I,EAChB2I,kBAAAA,OAAiB,IAAAD,GAAOA,EAAAE,EAAA5I,EACxBmI,eAAAA,OAAc,IAAAS,EAAG,SACfV,EACAlF,GAAgB,OACbjC,EAAAA,EAAAA,KAAA,SAAW,EAAA6H,EAAAC,EAAA7I,EAChBoI,yBAAAA,OAAwB,IAAAS,EAAG,aAAYA,EAAAC,EAAA9I,EACvCqI,wBAAAA,OAAuB,IAAAS,GAAOA,EAIhCC,GAAwCC,EAAAA,EAAAA,UAAc,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAlDI,EAAYF,EAAA,GAAEG,EAAeH,EAAA,GAgBpC,SAASlG,EAAkB0C,EAAgBC,EAAWX,GAChDS,GACFA,EAAcC,EAAWC,EAAMX,EAEnC,EAlBAsE,EAAAA,EAAAA,qBAAoB7H,GAAK,iBAAO,CAC9B8H,gBAAiB,WACfF,EAAgB,GAClB,EACAG,gBAAiB,WACf,OAAOvG,EAAKwG,QAAO,SAACC,GAAS,OACf,OAAZN,QAAY,IAAZA,OAAY,EAAZA,EAAcO,SAASD,EAAK9D,GAAU,GAE1C,EACAyD,gBAAiB,SAAC1D,GAChB0D,EAAgB1D,EAClB,EACD,IAOD,IAAIiE,EAA0B,GAE9B,OACE5I,EAAAA,EAAAA,KAACiH,EAAa4B,SAAQ,CACpBxJ,MAAO,CACLiI,wBAAAA,EACAD,yBAAAA,EACAF,kBAAmBiB,EACnBnG,KAAAA,EACAmF,eAAAA,GACAhH,UAEFJ,EAAAA,EAAAA,KAAC8I,EAAAA,GAAQ,CACPC,MAAO,CACLC,eAAgBC,EAAAA,EAChBC,OAAQzB,GAEV0B,aAAc,CACZC,WAAY,CAAEC,gBAAiB,CAAEC,SAAU,MAE7CC,QAAS1H,EACT2H,SAAU,SAACC,GAAG,OAAKA,EAAI7E,EAAS,EAChC9C,QAASA,EAAQ2G,QAAO,SAACiB,GAAQ,OAAMA,EAAIC,IAAI,IAC/C1H,KAAMA,EACN2H,wBAAwB,EACxBC,0BAA0B,EAC1BjC,kBAAmBA,EACnBT,kBAAmBiB,EACnB0B,UAAW,GACXC,mBAAoB,GACpBC,gBAAiB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,KACtCnJ,IAAEP,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CACA,UAAW,CACTE,MAAO,WAET,WAAY,CACVA,MAAO,WAET,cAAe,CACbA,MAAO,SAET,aAAc,CACZA,MAAO,UAET,iBAAkB,CAChBA,MAAO,OAET,YAAa,CACXA,MAAO,OAET,wCAAyC,CACvCA,MAAO,QACP,sBAAuB,CACrByJ,KAAM,YAGV,oBAAqB,CACnBC,WAAY,UACZ1J,MAAO,QACP,sBAAuB,CACrByJ,KAAM,UAGV,2BAA4B,CAC1BC,WAAY,UACZ1J,MAAO,QACP,sBAAuB,CACrByJ,KAAM,UAGV,2BAA4B,CAC1BC,WAAY,UACZ1J,MAAO,QACP,sBAAuB,CACrByJ,KAAM,UAGV,gCAAiC,CAC/BE,QAAS,iBAGR,CACD,+BAAgC,CAC9BD,WAAY,UACZ1J,MAAO,QACPQ,SAAU,QAGZ,gGACE,CACEoJ,QAAS7F,GAAqBC,EAAc,OAAS,QACrDyF,KAAM,SAEV,qFACE,CACEG,QAAS7F,GAAqBC,EAAc,OAAS,WAGxD,CACDxD,SAAU,GACVqJ,WAAY,IACZ,+BAAgC,CAC9BzI,OAAQ,OACRN,MAAO,QAET,mCAAoC,CAClCM,OAAQ,OACRN,MAAO,UAQbgJ,0BAA2B,SAAC5F,GAC1B,GAAIF,EAAa,CACf,GAAIE,EAAUsC,QAAU,EAAG,OAE3B,GADA4B,EAAclE,EACV0D,EAAaO,SAASC,EAAYA,EAAY5B,OAAS,IACzD,OAKF,OAHAqB,EAAgB3D,QAEhB1C,EAAkB,CAAC0C,EAAUA,EAAUsC,OAAS,IAAK/E,EAAM,KAE7D,CAEA,IAAKuC,GAAeD,EAClB,GAAI6D,IAA4B,OAAZA,QAAY,IAAZA,OAAY,EAAZA,EAAcpB,QAAS,EAAG,CAC5C,IAAMuD,EAAe,IAAIC,IAAIpC,GAC7BC,EACE3D,EAAU+D,QAAO,SAACgC,GAAM,OAAMF,EAAaG,IAAID,EAAE,IAErD,MACEpC,EAAgB3D,QAGlB2D,EAAgB3D,GAGlB1C,EAAkB,CAAC0C,EAAUA,EAAUsC,OAAS,IAAK/E,EAAM,KAC7D,EACAW,cAAe,SAAC+H,EAASpE,GAEvB,GADmB,CAAC,cAAe,QAAS,SAAU,aACtCoC,SAASpC,EAAIvC,MAI7B,OADAuC,EAAItC,iBACa,UAAbsC,EAAIvC,MAAiC,gBAAbuC,EAAIvC,KAC1BO,IAAsBC,EACjB6D,GAAgB,SAAC1D,GACtB,OAAIA,GAAQA,EAAKqC,OAAS,GAAKrC,EAAK,KAAOgG,EAAGC,QAAQzI,IACpDH,EAAkB,GAAIC,EAAMsE,EAAIvC,MACzB,KAEThC,EAAkB,CAAC2I,EAAGC,QAAQzI,IAAKF,EAAMsE,EAAIvC,MACtC,CAAC2G,EAAGC,QAAQzI,IACrB,SAEAkG,GAAgB,SAAC1D,GACf,OACEA,IACCH,GACDG,EAAKqC,OAAS,GACdrC,EAAKgE,SAASgC,EAAGC,QAAQzI,KAEzBwC,EAAOA,EAAK8D,QAAO,SAACC,GAAS,OAAKA,IAASiC,EAAGC,QAAQzI,EAAE,IACxDH,EAAkB,GAAIC,EAAMsE,EAAIvC,MACzBW,GAGPA,GACAH,GACAG,EAAKqC,OAAS,GACdrC,EAAKgE,SAASgC,EAAGC,QAAQzI,IAElBwC,GAET3C,EAAkB,CAAC2I,EAAGC,QAAQzI,IAAKF,EAAMsE,EAAIvC,MACvC,GAANK,QAAAwG,EAAAA,EAAAA,GAAWlG,GAAI,CAAEgG,EAAGC,QAAQzI,KAC9B,IAIa,WAAboE,EAAIvC,MAAkC,cAAbuC,EAAIvC,MAC/BqE,EAAgB,CAACsC,EAAGC,QAAQzI,KACrBH,EAAkB,CAAC2I,EAAGC,QAAQzI,IAAKF,EAAMsE,EAAIvC,YAFtD,CAIF,EACA8G,uBAAqB,EACrBhI,gBAAiBA,EACjBC,iBAAkBA,KAI1B,IAIF,SAASgI,EAAUC,GAIoD,IAHrEC,EAAID,EAAJC,KACAC,EAAYF,EAAZE,aACA9G,EAAS4G,EAAT5G,UAEM+G,GAASC,EAAAA,EAAAA,KACTC,GAAYC,EAAAA,EAAAA,GAAgBH,EAAQI,EAAAA,IAE1C,OACEvL,EAAAA,EAAAA,KAACwL,EAAAA,EAAa,CACZhI,QAAQ,WACRhD,MAAM,UACN4D,UAAWA,EACXqH,MAAOJ,EACPJ,KAAMA,EAAO,EACb7L,SAAU,SAAC0G,EAAO4F,GAChBR,EAAapF,EAAc4F,EAAU,EACvC,GAGN,CAEA,SAASC,EAAiBC,GACxB,OAAO5L,EAAAA,EAAAA,KAAC6L,EAAAA,GAAcvL,EAAAA,EAAAA,GAAA,CAACwL,iBAAkBf,GAAgBa,GAC3D,CACA,SAASlE,EACPkE,GAEA,IAAAG,GAMIC,EAAAA,EAAAA,YAAW/E,GALbE,EAAiB4E,EAAjB5E,kBACAG,EAAuByE,EAAvBzE,wBACAD,EAAwB0E,EAAxB1E,yBACAD,EAAc2E,EAAd3E,eACAnF,EAAI8J,EAAJ9J,KAEF,OACEoB,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CACFzC,GAAI,CACFoL,UAAW,OACX7B,QAAS,OACT9I,MAAO,OACP4K,eAAgB,gBAChBC,GAAI,EACJC,WAAY,SACZC,cAC+B,eAA7BhF,EAA4C,cAAgB,OAC9DjH,SAAA,EAEFJ,EAAAA,EAAAA,KAAC2L,GAAgBrL,EAAAA,EAAAA,GAAA,GAAKsL,KACtBvI,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CACFzC,GAAI,CACFuJ,QAAS,OACT8B,eAC+B,eAA7B7E,EACI,aACA,WACNiF,KAAM,EACNF,WAAY,UACZhM,SAAA,CAEDkH,IACCjE,EAAAA,EAAAA,MAAA,OAAAjD,SAAA,CAAK,YAA2B,OAAjB+G,QAAiB,IAAjBA,OAAiB,EAAjBA,EAAmBH,WAEpChH,EAAAA,EAAAA,KAAA,OAAAI,SAAMgH,EAAeD,EAAmBlF,UAIhD,CApEA,K,8gBC1NMkH,EAAe,CACnBoD,MAAO,GACPC,UAAW,GACXC,WAAY,IAAIC,KAChBC,YAAa,kBACbC,OAAQ,GACRC,WAAY,GACZC,gBAAiB,IAEbC,EAAoB,CACxBC,iBAAiB,IAAIN,MAAOO,qBAC5BC,aAAc,GACdC,YAAa,GACbC,UAAW,GACXC,OAAQ,GACRC,WAAY,GACZC,WAAY,GACZC,KAAM,GACNC,MAAO,GACPC,SAAU,GACVC,OAAQ,GACRC,aAAc,GACdC,eAAgB,GAChBC,aAAc,GACdC,iBAAkB,GAClBC,kBAAmB,CAAC,GAGhBC,GAAqB/G,EAAAA,EAAAA,eAAsC,CAC/DgH,gBAAiB,GACjBC,wBAAyB,GACzBC,gBAAiB,GACjBC,kBAAkB,EAClBC,uBAAuB,EACvBC,mBAAoB,CAAErK,QAAS,CAAC,GAChCsK,0BAA2B,CAAEtK,QAAS,CAAC,GACvCuK,yBAA0B,CAAEvK,QAAS,CAAC,GACtCwK,cAAe,WAAO,EACtBC,oBAAqB,WAAO,EAC5BC,iCAAiC,EACjCC,2BAA2B,EAC3BC,qBAAsB,GACtBC,QAAS,CAAC,EACVC,KAAM,CAAC,EACPC,mBAAoB,WAAO,EAC3BC,wBAAwB,EACxBC,0BAA2B,WAAO,EAClCC,iBAAkB,EAClBC,UAAW,WAAO,EAClBC,WAAY,CAAC,EACbC,mBAAoB,CAAErL,QAAS,MAC/BsL,mBAAoB,WAAO,EAC3BC,uBAAwB,WAAO,EAC/BC,iCAAkC,WAAO,EACzCC,2BAA4B,WAAO,IAE/BC,EAAU,CACd,CACEnN,MAAO,iBACPoN,MAAO,GAET,CACEpN,MAAO,gCACPoN,MAAO,GAET,CACEpN,MAAO,mBACPoN,MAAO,IAGLC,EAAwB,CAC5B,CACEC,MAAO,SACPC,WAAY,OACZpQ,SAAU,KAEZ,CACEmQ,MAAO,UACPC,WAAY,eACZpQ,SAAU,IACV0M,KAAM,GAER,CACEyD,MAAO,SACPC,WAAY,SACZpQ,SAAU,IACVqQ,MAAO,SAET,CACEF,MAAO,WACPC,WAAY,SACZpQ,SAAU,KAEZ,CACEmQ,MAAO,aACPC,WAAY,WACZpQ,SAAU,IACV0M,KAAM,GAER,CACEyD,MAAO,cACPC,WAAY,cACZpQ,SAAU,IACV0M,KAAM,GAER,CACEyD,MAAO,cACPC,WAAY,mBACZpQ,SAAU,IACV0M,KAAM,GAER,CACEyD,MAAO,SACPC,WAAY,mBACZrG,MAAM,IAIGuG,EAAU,SAACC,EAAYC,GAClC,MACO,iBADCA,EAAOC,MAEX/P,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACK6P,GAAK,IAAAG,EAAAA,EAAAA,GAAA,GACPF,EAAOL,MAAQK,EAAO/Q,QAGlB8Q,CAEb,EACe,SAASI,IAAe,IAADC,EAAAC,EAAAC,EAAAC,EAAAC,EACpCC,EAAyCC,IAAjCC,EAAiBF,EAAjBE,kBAAmB1B,EAASwB,EAATxB,UAC3BtD,IAA0BC,EAAAA,EAAAA,YAAWgF,EAAAA,GAA7BjC,GAAOhD,GAAPgD,QAASC,GAAIjD,GAAJiD,KACjBiC,IAA0BC,EAAAA,EAAAA,YAAWhB,EAAS/G,GAAagI,IAAAhJ,EAAAA,EAAAA,GAAA8I,GAAA,GAApDd,GAAKgB,GAAA,GAAEC,GAAQD,GAAA,GACtBE,IAAoCH,EAAAA,EAAAA,YAAWhB,EAASnD,GAAkBuE,IAAAnJ,EAAAA,EAAAA,GAAAkJ,GAAA,GAAnE/B,GAAUgC,GAAA,GAAE5C,GAAa4C,GAAA,GAChCC,IAAyCC,EAAAA,EAAAA,GAAqB,EAC5DxR,EAAAA,EAAAA,KAACyR,EAAa,KACdzR,EAAAA,EAAAA,KAAC0R,EAAuB,KACxB1R,EAAAA,EAAAA,KAAC2R,EAAe,MAHVvC,GAAgBmC,GAAhBnC,iBAAkBwC,GAAIL,GAAJK,KAAMC,GAAIN,GAAJM,KAKhC7J,IAA8CC,EAAAA,EAAAA,UAC5C,IACDC,IAAAC,EAAAA,EAAAA,GAAAH,GAAA,GAFMkG,GAAehG,GAAA,GAAE+G,GAAkB/G,GAAA,GAG1C4J,IACE7J,EAAAA,EAAAA,UAAgC,IAAG8J,IAAA5J,EAAAA,EAAAA,GAAA2J,GAAA,GAD9B3D,GAAuB4D,GAAA,GAAEpC,GAA0BoC,GAAA,GAE1DC,IAA8C/J,EAAAA,EAAAA,UAC5C,IACDgK,IAAA9J,EAAAA,EAAAA,GAAA6J,GAAA,GAFM5D,GAAe6D,GAAA,GAAEzC,GAAkByC,GAAA,GAG1CC,IACEjK,EAAAA,EAAAA,UAAgC,IAAGkK,IAAAhK,EAAAA,EAAAA,GAAA+J,GAAA,GAD9BpD,GAAoBqD,GAAA,GAAEC,GAAuBD,GAAA,GAEpDE,IAA4DpK,EAAAA,EAAAA,WAAS,GAAMqK,IAAAnK,EAAAA,EAAAA,GAAAkK,GAAA,GAApEnD,GAAsBoD,GAAA,GAAEnD,GAAyBmD,GAAA,GAClD9S,IAAgB+S,EAAAA,EAAAA,QAAoB,MACpCC,IAAoBD,EAAAA,EAAAA,QAA0B,MAC9ChD,IAAqBgD,EAAAA,EAAAA,QAAoB,MACzCE,IAAsBF,EAAAA,EAAAA,QAAyB,MAC/CG,IAAeH,EAAAA,EAAAA,QAA0B,MACzCI,IAAqBJ,EAAAA,EAAAA,QAAyB,MAC9ChE,IAAqBgE,EAAAA,EAAAA,QAAY,MACjC/D,IAA4B+D,EAAAA,EAAAA,QAAY,MACxC9D,IAA2B8D,EAAAA,EAAAA,QAAY,MAE7CK,IACEC,EAAAA,EAAAA,UAAS,CACP9Q,SAAU,kBACV+Q,QAAQ,WAAD,OAAAtC,EAAAA,IAAAuC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAE,SAAAC,IAAA,OAAAF,EAAAA,EAAAA,KAAAG,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACDvE,GAAQwE,IAAI,2CAA4C,CAC5DC,QAAS,CACPC,cAAc,UAADpP,OAAgB,OAAJ2K,SAAI,IAAJA,QAAI,EAAJA,GAAM0E,gBAEjC,cAAAN,EAAAO,OAAA,SAAAP,EAAAQ,MAAA,wBAAAR,EAAAS,OAAA,GAAAX,EAAA,MAAAY,MAAA,KAAAC,UAAA,EACJC,sBAAsB,EACtBC,UAAW,SAACtP,GACV,IAAMuP,EAAWvP,EAEjByM,GAAS,CACPf,KAAM,eACNN,MAAO,QACP1Q,MAAO6U,EAASvP,KAAKwP,cAAc,GAAGC,kBAExChD,GAAS,CACPf,KAAM,eACNN,MAAO,YACP1Q,MAAO6U,EAASvP,KAAKwP,cAAc,GAAGC,iBAE1C,IAvBeC,GAAyBzB,GAApC/Q,UAA+CyS,GAAkB1B,GAA3B2B,QAyB9CC,IAAmE3B,EAAAA,EAAAA,UAAS,CAC1E9Q,SAAU,aACV+Q,QAAQ,WAAD,OAAArC,EAAAA,IAAAsC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAE,SAAAwB,IAAA,OAAAzB,EAAAA,EAAAA,KAAAG,MAAA,SAAAuB,GAAA,cAAAA,EAAArB,KAAAqB,EAAApB,MAAA,cAAAoB,EAAApB,KAAA,EACDvE,GAAQwE,IAAI,mDAADlP,OACoC8L,GAAMrD,iBACzD,CACE0G,QAAS,CACPC,cAAc,UAADpP,OAAgB,OAAJ2K,SAAI,IAAJA,QAAI,EAAJA,GAAM0E,gBAGpC,cAAAgB,EAAAf,OAAA,SAAAe,EAAAd,MAAA,wBAAAc,EAAAb,OAAA,GAAAY,EAAA,MAAAX,MAAA,KAAAC,UAAA,EACHE,UAAW,SAACU,GAEV1F,GADiB0F,EACWhQ,KAAKiQ,UACnC,IAdiBvG,GAAgBmG,GAA3B3S,UAAsCgT,GAAgBL,GAAzBD,QAgBrCO,IACEC,EAAAA,EAAAA,aAAY,CACVC,YAAa,uBACbC,WAAW,SAADC,GAAA,OAAAxE,EAAAA,IAAAqC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAE,SAAAkC,EAAOC,GAAc,OAAApC,EAAAA,EAAAA,KAAAG,MAAA,SAAAkC,GAAA,cAAAA,EAAAhC,KAAAgC,EAAA/B,MAAA,cAAA+B,EAAA1B,OAAA,SAC/B5E,GAAQuG,KACN,+CACAF,EACA,CACE5B,QAAS,CACPC,cAAc,UAADpP,OAAgB,OAAJ2K,SAAI,IAAJA,QAAI,EAAJA,GAAM0E,iBAGpC,wBAAA2B,EAAAxB,OAAA,GAAAsB,EAAA,MAAArB,MAAA,KAAAC,UAAA,EACHE,UAAW,SAACU,GACV,IAAMT,EAAWS,EACXY,EAASrB,EAASvP,KAAK4Q,OAAO,GAC9BC,EAAQtB,EAASvP,KAAK6Q,MAAM,GAClCC,QAAQC,IAAIxB,GACZ9B,GAAwB8B,EAASvP,KAAK6Q,OAEtC9G,GAAc,CACZ2B,KAAM,eACNN,MAAO,cACP1Q,MAAOkW,EAAOI,aAEhBjH,GAAc,CACZ2B,KAAM,eACNN,MAAO,YACP1Q,MAAOkW,EAAOK,aAEhBlH,GAAc,CACZ2B,KAAM,eACNN,MAAO,OACP1Q,MAAOmW,EAAMK,QAEfnH,GAAc,CACZ2B,KAAM,eACNN,MAAO,QACP1Q,MAAOmW,EAAMM,aAGfpH,GAAc,CACZ2B,KAAM,eACNN,MAAO,eACP1Q,MAAOkW,EAAO/H,OAEhBkB,GAAc,CACZ2B,KAAM,eACNN,MAAO,mBACP1Q,MAAMkW,EAAOQ,WAGfrH,GAAc,CACZ2B,KAAM,eACNN,MAAO,QACP1Q,MAAOmW,EAAMM,aAEfpH,GAAc,CACZ2B,KAAM,eACNN,MAAO,QACP1Q,MAAOmW,EAAMM,aAGfpH,GAAc,CACZ2B,KAAM,eACNN,MAAO,aACP1Q,MAAOmW,EAAMQ,cAEftH,GAAc,CACZ2B,KAAM,eACNN,MAAO,aACP1Q,MAAOmW,EAAMS,cAEfvH,GAAc,CACZ2B,KAAM,eACNN,MAAO,SACP1Q,MAAO6U,EAASvP,KAAK6Q,MAClBU,QACC,SAACC,EAAUC,GAAQ,OACjBD,EAAME,WAAWD,EAAIE,OAAOC,QAAQ,KAAM,IAAI,GAChD,GAEDC,eAAe,QAAS,CACvBtV,MAAO,UACPuV,sBAAuB,EACvBC,sBAAuB,MAG7BvH,IAA0B,EAC5B,IAzFeN,GAAyBiG,GAApCjT,UAA8C8M,GAAmBmG,GAA3B6B,OA2F9CC,IAGI7B,EAAAA,EAAAA,aAAY,CACdC,YAAa,+BACbC,WAAW,SAAD4B,GAAA,OAAAlG,EAAAA,IAAAoC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAE,SAAA6D,EAAO1B,GAAc,OAAApC,EAAAA,EAAAA,KAAAG,MAAA,SAAA4D,GAAA,cAAAA,EAAA1D,KAAA0D,EAAAzD,MAAA,cAAAyD,EAAApD,OAAA,SAC/B5E,GAAQuG,KACN,0DACAF,EACA,CACE5B,QAAS,CACPC,cAAc,UAADpP,OAAgB,OAAJ2K,SAAI,IAAJA,QAAI,EAAJA,GAAM0E,iBAGpC,wBAAAqD,EAAAlD,OAAA,GAAAiD,EAAA,MAAAhD,MAAA,KAAAC,UAAA,EACHE,UAAW,SAACU,GACV,IAAMT,EAAWS,EACXqC,EAAc9C,EAASvP,KAAKsS,SAAS,GAErCC,EAAiBhD,EAASvP,KAAKsS,SAASE,KAAI,SAACC,GAQjD,OAPAA,EAAI/J,OAASgJ,WACXe,EAAI/J,OAAOgK,WAAWd,QAAQ,KAAM,KACpCC,eAAe,QAAS,CACxBtV,MAAO,UACPuV,sBAAuB,EACvBC,sBAAuB,IAElBU,CACT,IACA5H,GAAmB0E,EAASvP,KAAKyJ,iBACjCuB,GAA2BuH,GAC3BI,GAAiBlG,IAAQ9Q,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACpB6P,IACA,CACD5D,MAAOyK,EAAYO,MACnB/K,UAAWwK,EAAYO,MACvB9K,WAAYuK,EAAYQ,QACxB7K,YAAaqK,EAAYrK,YACzBE,WAAY,SAGlB,IAxCW+B,GAA+BgI,GAA1C/U,UACQ4V,GAA8Bb,GAAtCD,OAyCFe,IACE3C,EAAAA,EAAAA,aAAY,CACVC,YAAa,uBACbC,WAAW,SAAD0C,GAAA,OAAA/G,EAAAA,IAAAmC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAE,SAAA2E,EAAOxC,GAAc,OAAApC,EAAAA,EAAAA,KAAAG,MAAA,SAAA0E,GAAA,cAAAA,EAAAxE,KAAAwE,EAAAvE,MAAA,cAAAuE,EAAAlE,OAAA,SAC/B5E,GAAQuG,KAAK,oCAAqCF,EAAW,CAC3D5B,QAAS,CACPC,cAAc,UAADpP,OAAgB,OAAJ2K,SAAI,IAAJA,QAAI,EAAJA,GAAM0E,iBAEjC,wBAAAmE,EAAAhE,OAAA,GAAA+D,EAAA,MAAA9D,MAAA,KAAAC,UAAA,EACJE,UAAW,SAACU,GACV,IAAMT,EAAWS,EAEjB,OAAIT,EAASvP,KAAKmT,kBAChBxD,KACAO,KACAlF,GAA2B,IAC3BH,GAAmB,IACnB4B,GAAS,CACPf,KAAM,eACNN,MAAO,aACP1Q,MAAO,KAEF0Y,IAAAA,KAAU,CACf5W,SAAU,SACV6W,KAAM,UACNvV,MAAOyR,EAASvP,KAAKsT,QACrBC,MAAO,QAIJH,IAAAA,KAAU,CACf5W,SAAU,SACV6W,KAAM,UACNvV,MAAOyR,EAASvP,KAAKsT,QACrBC,MAAO,MAEX,IApCe5J,GAAqBoJ,GAAhC7V,UAA0CsW,GAAoBT,GAA5Bf,OAsC1CyB,IAKIC,EAAAA,EAAAA,GAAmB,CACrBC,KAAM,CACJC,IAAK,wCACLC,aAAc,sBAEhB1W,QAAS,CACP,CAAEiO,MAAO,UAAWC,WAAY,OAAQ1O,MAAO,KAC/C,CAAEyO,MAAO,QAASC,WAAY,YAAa1O,MAAO,KAClD,CACEyO,MAAO,cACPC,WAAY,eACZ1D,KAAM,IAGVvK,SAAU,uBACV0W,SAAU,QACVC,gBAAiB,oBACjBC,WAAY,SAACC,GACXxH,GAAS,CACPf,KAAM,eACNN,MAAO,aACP1Q,MAAO,SAEToY,GAA+B,CAC7BF,MAAOqB,EAAgB,GAAGrB,QAE5BsB,IACF,EACAC,gBAAiB,SAACzZ,GAChB+R,GAAS,CAAEf,KAAM,eAAgBN,MAAO,SAAU1Q,MAAAA,GACpD,EACAqD,UAAWiQ,KAnCKoG,GAAiBX,GAAjCY,eACWC,GAAqBb,GAAhCc,UACWC,GAA0Bf,GAArCvW,UACYgX,GAAsBT,GAAlCgB,WAmCIC,GAAoB,SAACvV,GACzB,IAAAwV,EAAwBxV,EAAEyV,OAAlBpa,EAAIma,EAAJna,KAAME,EAAKia,EAALja,MACd+R,GAAS,CAAEf,KAAM,eAAgBN,MAAO5Q,EAAME,MAAAA,GAChD,EACMoQ,GAAyB,SAAC3L,GAC9B,IAAA0V,EAAwB1V,EAAEyV,OAAlBpa,EAAIqa,EAAJra,KAAME,EAAKma,EAALna,MACdqP,GAAc,CAAE2B,KAAM,eAAgBN,MAAO5Q,EAAME,MAAAA,GACrD,EACA,SAASoa,GAAa3V,GAGpB,OAFAA,EAAEG,iBAEwB,KAAtBkM,GAAMxD,YACDoL,IAAAA,KAAU,CACf5W,SAAU,SACV6W,KAAM,UACNvV,MAAO,gCACPyV,MAAO,OACNwB,MAAK,SAACC,IACPC,EAAAA,EAAAA,MAAK,KAAKF,MAAK,WAAO,IAADG,EACQ,QAA3BA,EAAApH,GAAoBvO,eAAO,IAAA2V,GAA3BA,EAA6BhU,OAC/B,GACF,IAEEsI,GAAwBnH,QAAU,EAC7B+Q,IAAAA,KAAU,CACf5W,SAAU,SACV6W,KAAM,UACNvV,MAAO,+BACPyV,MAAO,OAGI9J,GACZ8H,QACC,SAACC,EAAUC,GAAQ,OAAKD,EAAME,WAAWD,EAAIE,OAAOC,QAAQ,KAAM,IAAI,GACtE,GAEDC,eAAe,QAAS,CACvBtV,MAAO,UACPuV,sBAAuB,EACvBC,sBAAuB,MAEbtI,GACX8H,QACC,SAACC,EAAUC,GAAQ,OAAKD,EAAME,WAAWD,EAAI0D,MAAMvD,QAAQ,KAAM,IAAI,GACrE,GAEDC,eAAe,QAAS,CACvBtV,MAAO,UACPuV,sBAAuB,EACvBC,sBAAuB,IAIlBqB,IAAAA,KAAU,CACf5W,SAAU,SACV6W,KAAM,UACNvV,MAAO,6DACPyV,MAAO,OACNwB,MAAK,YACNE,EAAAA,EAAAA,MAAK,KAAKF,MAAK,WACb7H,GAAK,EACP,GACF,SAGuB,SAArB1B,GAAMtD,YACRkN,EAAAA,EAAAA,GAAuB,CACrBC,UAAU,EACVC,GAAI,SAACC,GACH/B,GAAqB,CACnBlB,SAAU9I,GACVC,gBAAAA,GACA7B,MAAO4D,GAAM5D,MACbC,UAAW2D,GAAM3D,UACjBC,WAAY0D,GAAM1D,WAClBE,YAAawD,GAAMxD,YACnBK,gBAAiBsC,GAAWtC,gBAC5BE,aAAcoC,GAAWpC,aACzBC,YAAamC,GAAWnC,YACxBC,UAAWkC,GAAWlC,UACtBC,OAAQiC,GAAWjC,OACnBC,WAAYgC,GAAWhC,WACvBC,WAAY+B,GAAW/B,WACvBC,KAAM8B,GAAW9B,KACjBC,MAAO6B,GAAW7B,MAClBC,SAAU4B,GAAW5B,SACrByM,UAAgC,SAArBhK,GAAMtD,WACjBqN,qBAAAA,GAEJ,KAGFE,EAAAA,EAAAA,GAAuB,CACrBC,UAAW,WACTlC,GAAqB,CACnBlB,SAAU9I,GACVC,gBAAAA,GACA7B,MAAO4D,GAAM5D,MACbC,UAAW2D,GAAM3D,UACjBC,WAAY0D,GAAM1D,WAClBE,YAAawD,GAAMxD,YACnBK,gBAAiBsC,GAAWtC,gBAC5BE,aAAcoC,GAAWpC,aACzBC,YAAamC,GAAWnC,YACxBC,UAAWkC,GAAWlC,UACtBC,OAAQiC,GAAWjC,OACnBC,WAAYgC,GAAWhC,WACvBC,WAAY+B,GAAW/B,WACvBC,KAAM8B,GAAW9B,KACjBC,MAAO6B,GAAW7B,MAClBC,SAAU4B,GAAW5B,SACrByM,UAAgC,SAArBhK,GAAMtD,YAErB,IAGN,CACA,SAAS6C,GAAiC4K,GACxC,IAAMC,EAAgB,CACpBC,QAAQ,GAADnW,OAAKiW,EAAiBG,kBAAgBpW,QAC3C6J,GAAgBlH,OAAS,GAExBqQ,WACAqD,SAAS,EAAG,MACfC,MAAOL,EAAiBG,iBACxBG,QAASN,EAAiBO,QAC1BC,SAAUR,EAAiBQ,SAC3BC,SAAUT,EAAiBS,SAC3BrN,SAAU4M,EAAiB5M,SAC3BsN,WAAYV,EAAiBU,WAC7B3N,OAAQiN,EAAiBjN,OACzB4N,KAAMX,EAAiBW,KACvBC,aAAcZ,EAAiBa,YAC/BC,OAAQ9L,GAAWpC,aACnBmO,YAAa,IAAI3O,KAAK4C,GAAWtC,iBAAiBC,mBAChD,QACA,CACEqO,MAAO,UACPC,IAAK,UACLC,KAAM,YAGV7N,OAAQ2M,EAAiB3M,QAE3BgC,IAA2B,SAAC8L,GAC1B,MAAM,GAANpX,QAAAwG,EAAAA,EAAAA,GAAW4Q,GAAC,CAAElB,GAChB,GACF,CAEA,IAAMmB,GAAe,WAAO,IAADC,EAAAC,EAAAC,EACnBC,EAAahN,GAChBoH,QACC,SAACC,EAAUC,GAAQ,OAAKD,EAAME,WAAWD,EAAIE,OAAOC,QAAQ,KAAM,IAAI,GACtE,GAEDC,eAAe,QAAS,CACvBtV,MAAO,UACPuV,sBAAuB,EACvBC,sBAAuB,IAG3B,GAAIpH,GAAWjC,SAAWyO,EAIxB,OAHAC,EAAAA,EAAAA,YAAU,WACR5M,IAA0B,EAC5B,IACO4I,IAAAA,KAAU,CACfiE,KAAM,+BACNhE,KAAM,UACNiE,kBAAkB,EAClB/D,MAAO,KACP/W,SAAU,WAGd,GAAoC,QAApCwa,EAAIlN,GAAyBvK,eAAO,IAAAyX,GAAhCA,EAAkCnT,kBAAmB,CAAC,IAAD0T,EACjDC,EAA4C,QAAnCD,EAAGzN,GAAyBvK,eAAO,IAAAgY,OAAA,EAAhCA,EAAkC1T,kBAC9CyO,EAAWkF,EAAUA,EAAUnV,OAAS,GAC9C2I,IAA2B,SAAC8L,GAE1B,OADAA,EAAIA,EAAEhT,QAAO,SAACC,GAAS,OAAKA,EAAKiF,SAAWsJ,EAAStJ,MAAM,GAE7D,IACA6B,IAAmB,SAACiM,GAElB,OADAA,EAAIA,EAAEhT,QAAO,SAACC,GAAS,OAAKA,EAAKgF,WAAauJ,EAASvJ,QAAQ,GAEjE,IAEAgC,IAAgCpP,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EAC7B2W,GAAQ,IACXwD,iBAAkBxD,EAAS0D,MAC3BE,QAAS5D,EAAS2D,QAClBO,YAAalE,EAASiE,eAE1B,KAAO,CAAC,IAADkB,EACCD,EAAsC,QAA7BC,EAAG7N,GAAmBrK,eAAO,IAAAkY,OAAA,EAA1BA,EAA4B5T,kBAG9CkH,GAFiByM,EAAUA,EAAUnV,OAAS,GAGhD,CAEA,SAASqV,EAAeC,GACtB,IAAMC,EACJD,EAAMtV,OAAS,EAAIsV,EAAMA,EAAMtV,OAAS,GAAG2G,OAAS,MAItD,OAHqB6O,SAASD,EAASE,MAAM,OAAO,IAAM,GACvDpF,WACAqD,SAAS,EAAG,IAEjB,CAEA5L,GAAqBpI,SAAQ,SAACgC,GAC5B8G,IAAmB,SAACiM,GAClB,MAAM,GAANpX,QAAAwG,EAAAA,EAAAA,GACK4Q,GAAC,CACJ,CACEiB,KAAMhU,EAAKiU,OACXxP,YAAazE,EAAKkU,QAClB9C,MAAOpR,EAAK4N,OACZA,OAAQ,OACR9I,KAAM9E,EAAKmN,MACXE,SAAUrN,EAAK+E,MACfoP,QAASnU,EAAKuN,YACdD,YAAatN,EAAKsN,YAClBtI,SAAU4B,GAAWtB,kBAAkBN,SACvCuN,KAAM3L,GAAWtB,kBAAkBiN,KACnCD,WAAY1L,GAAWtB,kBAAkBgN,WACzC8B,aAAcxN,GAAWtC,gBACzB+P,aAAczN,GAAWpC,aACzB8P,GAAI1N,GAAWtB,kBAAkBN,SACjCqN,SAAUzL,GAAWtB,kBAAkB+M,SACvCkC,gBAAiB3N,GAAWtB,kBAAkBiP,gBAC9CtP,OAAQ0O,EAAeZ,KAG7B,GACF,IAGAhG,QAAQC,IAAIpG,IACZE,IAAmB,SAACiM,GAuBlB,OAtBAA,EAAC,GAAApX,QAAAwG,EAAAA,EAAAA,GACI4Q,GAAC,CACJ,CACEiB,KAAMpN,GAAWlC,UACjBD,YAAamC,GAAWnC,YACxB2M,MAAO,OACPxD,OAAQhH,GAAWjC,OACnBG,KAAM8B,GAAWxB,aACjBiI,SAAUzG,GAAWvB,iBACrB8O,QAASvN,GAAW/B,WACpByI,YAAa1G,GAAWhC,WACxBI,SAAU4B,GAAWtB,kBAAkBN,SACvCuN,KAAM3L,GAAWtB,kBAAkBiN,KACnCD,WAAY1L,GAAWtB,kBAAkBgN,WACzC8B,aAAcxN,GAAWtC,gBACzB+P,aAAczN,GAAWpC,aACzB8P,GAAI1N,GAAWtB,kBAAkBN,SACjCqN,SAAUzL,GAAWtB,kBAAkB+M,SACvCkC,gBAAiB3N,GAAWtB,kBAAkBiP,gBAC9CtP,OAAQ0O,EAAeZ,KAI7B,IAEAtM,IAA0B,GACA,QAA1ByM,EAAArN,GAAmBrK,eAAO,IAAA0X,GAA1BA,EAA4BrT,kBACI,QAAhCsT,EAAApN,GAAyBvK,eAAO,IAAA2X,GAAhCA,EAAkCtT,iBACpC,EAEM2U,GAAsC,KAArB/M,GAAMtD,WAE7B,OACExJ,EAAAA,EAAAA,MAAA,OACEnC,MAAO,CACLkJ,QAAS,OACTiC,cAAe,SACf/K,MAAO,OACPM,OAAQ,OACR0K,KAAM,GACNlM,SAAA,EAEFiD,EAAAA,EAAAA,MAAA,OACEnC,MAAO,CACLkJ,QAAS,OACTgC,WAAY,SACZH,UAAW,OACX7L,SAAA,CAED+Y,IACCnZ,EAAAA,EAAAA,KAACmd,EAAAA,EAAa,CAAC5T,QAAS4P,MAExBnZ,EAAAA,EAAAA,KAAC2D,EAAAA,EAAS,CACRzE,MAAM,SACNyB,KAAK,QACLxB,KAAK,SACLE,MAAO8Q,GAAMvD,OACbxN,SAAUia,GACV/Z,UAAW,SAACwE,GACV,GAAe,UAAXA,EAAEE,MAA+B,gBAAXF,EAAEE,KAE1B,OADAF,EAAEG,iBACKgV,GACJnV,EAAEyV,OAA4Bla,MAGrC,EACAwE,WAAY,CACV3C,MAAO,CAAEU,OAAQ,OAAQZ,SAAU,SAErCH,GAAI,CACFS,MAAO,QACPM,OAAQ,OACR,qBAAsB,CAAEZ,SAAU,QAClC,wCAAyC,CAAEC,IAAK,WAKhC,KAArBkP,GAAMtD,aACL7M,EAAAA,EAAAA,KAACod,EAAAA,EAAM,CACLvc,GAAI,CACFe,OAAQ,OACRZ,SAAU,QAEZwC,QAAQ,YACR6Z,WAAWrd,EAAAA,EAAAA,KAACsd,EAAAA,EAAO,CAACzc,GAAI,CAAES,MAAO,GAAIM,OAAQ,MAC7CO,GAAG,2BACH4C,QAAS,WACPqM,GAAS,CACPf,KAAM,eACNN,MAAO,aACP1Q,MAAO,OAEX,EAAEe,SACH,SAIHJ,EAAAA,EAAAA,KAACmd,EAAAA,EAAa,CACZtc,GAAI,CACFe,OAAQ,OACRZ,SAAU,QAEZmB,GAAG,oBACH3B,MAAM,UACNgD,QAAQ,YACR6M,KAAK,SACLtL,QAAS0U,GACT8D,SAA+B,KAArBpN,GAAMtD,WAChBwQ,WAAWrd,EAAAA,EAAAA,KAACwd,EAAAA,EAAQ,CAAC3c,GAAI,CAAES,MAAO,GAAIM,OAAQ,MAC9C2H,QAAS+E,GAAsBlO,SAET,SAArB+P,GAAMtD,WAAwB,SAAW,SAEtB,KAArBsD,GAAMtD,aACL7M,EAAAA,EAAAA,KAACod,EAAAA,EAAM,CACLvc,GAAI,CACFe,OAAQ,OACRZ,SAAU,QAEZwC,QAAQ,YACR6Z,WAAWrd,EAAAA,EAAAA,KAACgF,EAAAA,EAAS,CAACnE,GAAI,CAAES,MAAO,GAAIM,OAAQ,MAC/CpB,MAAM,QACNuE,QAAS,WACPgT,IAAAA,KAAU,CACRtV,MAAO,gBACPuZ,KAAM,oCACNhE,KAAM,UACNiE,kBAAkB,EAClBwB,mBAAoB,UACpBC,kBAAmB,OACnBC,kBAAmB,oBAClBjE,MAAK,SAACC,GACHA,EAAOiE,cACT/I,KACAlF,GAA2B,IAC3BH,GAAmB,IACnB4B,GAAS,CACPf,KAAM,eACNN,MAAO,aACP1Q,MAAO,KAETiY,GAAiBlG,GAAUjI,GAC3BmL,KAEJ,GACF,EAAElU,SACH,eAKLJ,EAAAA,EAAAA,KAAA,UACAqD,EAAAA,EAAAA,MAAA,QACE/D,UAAW,SAACwE,GACK,UAAXA,EAAEE,MAA+B,gBAAXF,EAAEE,MAC1BF,EAAEG,gBAGN,EACA/C,MAAO,CACLkJ,QAAS,OACTyT,IAAK,QACLzd,SAAA,CAEDiU,IACCrU,EAAAA,EAAAA,KAACmd,EAAAA,EAAa,CAAC5T,QAAS8K,MAExBhR,EAAAA,EAAAA,MAACya,EAAAA,EAAW,CACVjd,GAAI,CACFS,MAAO,QACP,qBAAsB,CACpBN,SAAU,OACVkJ,WAAY,QACZ6T,OAAQ,GACR5T,QAAS,SAEX,wCAAyC,CAAElJ,IAAK,SAElDuC,QAAQ,WACR7C,KAAK,QACL4c,SAAUL,GAAe9c,SAAA,EAEzBJ,EAAAA,EAAAA,KAACge,EAAAA,EAAU,CAACC,QAAQ,wBAAuB7d,SAAC,cAC5CJ,EAAAA,EAAAA,KAACke,EAAAA,EAAa,CACZrd,GAAI,CACFe,OAAQ,OACRZ,SAAU,QAGZuc,SAAUL,GACVzd,WAAS,EACTP,MAAM,WACNC,KAAK,QACLE,MAAO8Q,GAAM5D,MACbnN,SAAUia,GACV/Z,UAAW,SAACwE,GACV,GAAe,UAAXA,EAAEE,MAA+B,gBAAXF,EAAEE,KAC1B,OAAOyV,GAAa3V,EAExB,EACAqa,SAA+B,WAAjB,OAAJnP,SAAI,IAAJA,QAAI,EAAJA,GAAMoP,YAChBjc,GAAG,wBACHkc,cACEre,EAAAA,EAAAA,KAACse,EAAAA,EAAc,CAACnd,SAAS,MAAKf,UAC5BJ,EAAAA,EAAAA,KAAC8E,EAAAA,EAAU,CACTrE,IAAK+R,GACL+K,SAAUL,GACV,aAAW,gBACX1c,MAAM,YACN+d,KAAK,MACLxZ,QAAS,WACPuP,IACF,EAAElU,UAEFJ,EAAAA,EAAAA,KAACwe,EAAAA,EAAc,cAO3Bxe,EAAAA,EAAAA,KAAChB,EAAAA,EAAgB,CACfue,SAAUL,GACVhe,MAAM,gBACNE,SAAU,SAACC,GACT+R,GAAS,CACPf,KAAM,eACNN,MAAO,aACP1Q,MAAOA,GAEX,EACAA,MAAO,IAAIqN,KAAKyD,GAAM1D,YACtBnN,UAAW,SAACwE,GACV,GAAe,UAAXA,EAAEE,MAA+B,gBAAXF,EAAEE,KAC1B,IAAMya,EAAUC,YAAW,WAAO,IAADC,EAAAC,EACV,QAArBD,EAAAnf,GAAc0E,eAAO,IAAAya,GAAyB,QAAzBC,EAArBD,EAAuBhZ,cAAc,iBAAS,IAAAiZ,GAA9CA,EAAgDC,QAChDC,aAAaL,EACf,GAAG,IAEP,EACA/e,UAAW,CACTkB,gBAAiB,CACfM,MAAO,CACLF,SAAU,SAGd6C,WAAY,CACV3C,MAAO,CAAEU,OAAQ,OAAQZ,SAAU,UAGvCxB,cAAeA,MAEjBQ,EAAAA,EAAAA,KAAC2D,EAAAA,EAAS,CACR4Z,SAAUL,GACVzd,WAAS,EACTP,MAAM,cACNyB,KAAK,QACLxB,KAAK,cACLE,MAAO8Q,GAAMxD,YACbvN,SAAUia,GACV/Z,UAAW,SAACwE,GACK,UAAXA,EAAEE,MAAoBF,EAAEE,IAG9B,EACAH,WAAY,CACV3C,MAAO,CAAEU,OAAQ,OAAQZ,SAAU,QACnCmd,UAAU,GAEZtd,GAAI,CACFyL,KAAM,EACN,qBAAsB,CAAEtL,SAAU,QAClC,wCAAyC,CAAEC,IAAK,SAElD1B,SAAUkT,MAEZzS,EAAAA,EAAAA,KAAA,UACES,IAAKiS,GACLxR,MAAO,CAAEkJ,QAAS,QAClBiG,KAAK,eAGTrQ,EAAAA,EAAAA,KAAA,UACAqD,EAAAA,EAAAA,MAAA,OACEnC,MAAO,CACLkJ,QAAS,OACT8B,eAAgB,gBAChBE,WAAY,UACZhM,SAAA,EAEFJ,EAAAA,EAAAA,KAAA,OAAAI,SACGwP,EAAQuH,KAAI,SAACzO,EAAM/B,GAClB,OACEtD,EAAAA,EAAAA,MAAA,UAEEnC,MAAO,CACL6d,OAAQ,OACRC,QAAS,OACTC,gBAAiB,yBACjBC,YAAa,IACb1e,MAAO4O,KAAqBzI,EAAM,UAAY,UAC9CwY,OAAQ,UACR/U,QAAS,eACTgV,WAAW,yEACXpe,SAAU,OACVqJ,WAAY,MACZgV,WAAY,OACZC,UAAW,OACXC,OAAQ,IACRpV,QAAS,YACTqV,UAAW,SACXC,WAAY,YACZC,cAAe,WACfC,WAAY,SACZC,WAAY,OACZC,YAAa,eACb1e,SAAU,WACV2e,SAAU,UAEZ/a,QAAS,kBAAM8M,GAAKlL,EAAI,EAACvG,SAAA,EAEzBJ,EAAAA,EAAAA,KAAA,QACEkB,MAAO,CACLC,SAAU,WACVF,IAAK,EACL8e,OAAQ,EACR3e,KAAM,EACNyD,MAAO,EACPqF,WAAY,4BACZuV,WAAY,YACZpe,UAAW2e,GAAe5Q,GAAkBzI,MAG/C+B,EAAKjG,QAvCDkE,EA0CX,OAEFtD,EAAAA,EAAAA,MAAA,OAAAjD,SAAA,CAAK,gBACW,KACdJ,EAAAA,EAAAA,KAAA,UAAAI,SACGgO,GACE8H,QACC,SAACC,EAAUC,GAAQ,OACjBD,EAAME,WAAWD,EAAIE,OAAOC,QAAQ,KAAM,IAAI,GAChD,GAEDC,eAAe,QAAS,CACvBtV,MAAO,UACPuV,sBAAuB,EACvBC,sBAAuB,aAKjC1W,EAAAA,EAAAA,KAAA,UACAA,EAAAA,EAAAA,KAACiO,EAAmBpF,SAAQ,CAC1BxJ,MAAO,CACL6O,gBAAAA,GACAC,wBAAAA,GACAC,gBAAAA,GACAC,iBAAAA,GACAC,sBAAAA,GACAC,mBAAAA,GACAG,cAAAA,GACAC,oBAAAA,GACAC,gCAAAA,GACAE,qBAAAA,GACAN,0BAAAA,GACAC,yBAAAA,GACAI,0BAAAA,GACAE,QAAAA,GACAC,KAAAA,GACAC,mBAAAA,GACAC,uBAAAA,GACAC,0BAAAA,GACAC,iBAAAA,GACAC,UAAAA,EACAC,WAAAA,GACAC,mBAAAA,GACAC,mBAAAA,GACAC,uBAAAA,GACAC,iCAAAA,GACAC,2BAAAA,IACAvP,UAEFiD,EAAAA,EAAAA,MAAA,OACEnC,MAAO,CACLkJ,QAAS,OACTiC,cAAe,SACfC,KAAM,GAERnK,GAAG,YAAW/B,SAAA,CAEbwR,GACAmH,IACD/Y,EAAAA,EAAAA,KAACkD,EAAAA,EAAK,CACJC,KAAM+L,GACN9L,QAAS,WAAO,IAAD6c,EAAAC,EACb/Q,IAA0B,GACA,QAA1B8Q,EAAA1R,GAAmBrK,eAAO,IAAA+b,GAA1BA,EAA4B1X,kBACI,QAAhC2X,EAAAzR,GAAyBvK,eAAO,IAAAgc,GAAhCA,EAAkC3X,iBACpC,EACA,kBAAgB,oBAChB,mBAAiB,0BACjBjJ,UAAW,SAACwE,GAEa,IAArBsL,IACY,cAAXtL,EAAEE,MAAmC,WAAXF,EAAEE,OAE7BmL,IAA0B,GAE1BE,EAAU,CACR8Q,kBAAmB,WACjBxQ,IAA2B,SAAC8L,GAAC,OAC3BA,EAAEhT,QAAO,SAAC2O,GACR,OACEA,EAAIzJ,OAAO0J,aAAe/H,GAAW3B,OAAO0J,UAEhD,GAAE,IAEJ7H,IAAmB,SAACiM,GAClB,OAAOA,EAAEhT,QAAO,SAAC2O,GACf,OACEA,EAAI1J,SAAS0S,MAAM,KAAK,KACxB9Q,GAAW5B,SAAS2J,UAExB,GACF,GACF,EAEAgJ,iBAAkB,WAAO,IAADC,EAAAC,EACtBpR,IAA0B,GACA,QAA1BmR,EAAA/R,GAAmBrK,eAAO,IAAAoc,GAA1BA,EAA4B/X,kBACI,QAAhCgY,EAAA9R,GAAyBvK,eAAO,IAAAqc,GAAhCA,EAAkChY,iBACpC,KAImB,IAArB6G,IACY,UAAXtL,EAAEE,MAA+B,gBAAXF,EAAEE,MAEzB0X,IAEJ,EAAEtb,UAEFiD,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CACFzC,GAAI,CACFM,SAAU,WACVF,IAAK,MACLG,KAAM,MACNC,UAAW,wBACXC,MAAO,MACPC,QAAS,mBACTE,EAAG,EACH+e,UAAW,cACXpgB,SAAA,EAEFJ,EAAAA,EAAAA,KAAC8E,EAAAA,EAAU,CACT5D,MAAO,CACLC,SAAU,WACVF,IAAK,OACL4D,MAAO,QAGT,aAAW,gBACXE,QAAS,WAAO,IAAD0b,EAAAC,EACbvR,IAA0B,GACA,QAA1BsR,EAAAlS,GAAmBrK,eAAO,IAAAuc,GAA1BA,EAA4BlY,kBACI,QAAhCmY,EAAAjS,GAAyBvK,eAAO,IAAAwc,GAAhCA,EAAkCnY,kBAClCmG,GAAc,CACZ2B,KAAM,eACNN,MAAO,SACP1Q,MAAO,KAETqP,GAAc,CACZ2B,KAAM,eACNN,MAAO,oBACP1Q,MAAO,CAAC,GAEZ,EAAEe,UAEFJ,EAAAA,EAAAA,KAACgF,EAAAA,EAAS,OAEZ3B,EAAAA,EAAAA,MAACE,EAAAA,EAAU,CAACpB,GAAG,oBAAoBqB,QAAQ,QAAQC,UAAU,KAAIrD,SAAA,CAAC,kDAEhEJ,EAAAA,EAAAA,KAAA,UAAAI,SAASkP,GAAW5B,WAAkB,QAExCrK,EAAAA,EAAAA,MAAA,YACEnC,MAAO,CACLkJ,QAAS,OACT6B,UAAW,OACX9B,QAAS,OACT4U,OAAQ,oBACR4B,aAAc,MACdC,UAAW,QACXxgB,SAAA,EAEFJ,EAAAA,EAAAA,KAAA,UAAQkB,MAAO,CAAEF,SAAU,QAASZ,SAAC,mBACrCiD,EAAAA,EAAAA,MAACya,EAAAA,EAAW,CACVnd,KAAK,QACL6C,QAAQ,WACR/D,WAAS,EACToB,GAAI,CACF,qBAAsB,CACpBG,SAAU,OACVkJ,WAAY,QACZ6T,OAAQ,GACR5T,QAAS,SAEX,wCAAyC,CAAElJ,IAAK,SAChDb,SAAA,EAEFJ,EAAAA,EAAAA,KAACge,EAAAA,EAAU,CAAC7b,GAAG,yBAAwB/B,SAAC,mBAGxCiD,EAAAA,EAAAA,MAACwd,EAAAA,EAAM,CACLC,QAAQ,yBACRzhB,MAAOiQ,GAAWpC,aAClB/N,KAAK,eACLC,SAAUqQ,GACVsR,WAAS,EACTlgB,GAAI,CACFe,OAAQ,OACRZ,SAAU,QACVZ,SAAA,EAEFJ,EAAAA,EAAAA,KAACghB,EAAAA,EAAQ,CAAC3hB,MAAM,OAAMe,SAAC,UACvBJ,EAAAA,EAAAA,KAACghB,EAAAA,EAAQ,CAAC3hB,MAAO,OAAOe,SAAC,UACzBJ,EAAAA,EAAAA,KAACghB,EAAAA,EAAQ,CAAC3hB,MAAO,KAAKe,SAAC,oBACvBJ,EAAAA,EAAAA,KAACghB,EAAAA,EAAQ,CAAC3hB,MAAO,MAAMe,SAAC,SACxBJ,EAAAA,EAAAA,KAACghB,EAAAA,EAAQ,CAAC3hB,MAAO,KAAKe,SAAC,6BAG3BJ,EAAAA,EAAAA,KAAChB,EAAAA,EAAgB,CACfS,WAAW,EACXP,MAAM,gBACNE,SAAU,SAACC,GACTqP,GAAc,CACZ2B,KAAM,eACNN,MAAO,kBACP1Q,MAAOA,EAAM4N,sBAEjB,EACA5N,MAAO,IAAIqN,KAAK4C,GAAWtC,iBAC3B1N,UAAW,SAACwE,GACV,GAAe,UAAXA,EAAEE,MAA+B,gBAAXF,EAAEE,KAC1B,IAAMya,EAAUC,YAAW,WAAO,IAADuC,EAAAC,EACL,QAA1BD,EAAA1R,GAAmBrL,eAAO,IAAA+c,GACC,QADDC,EAA1BD,EACItb,cAAc,iBAAS,IAAAub,GAD3BA,EAEIrC,QACJC,aAAaL,EACf,GAAG,IAEP,EACAjf,cAAe+P,GACf7P,UAAW,CACTkB,gBAAiB,CACfM,MAAO,CACLF,SAAU,SAGd6C,WAAY,CACV3C,MAAO,CAAEU,OAAQ,OAAQZ,SAAU,gBAK3CqC,EAAAA,EAAAA,MAAA,YACEnC,MAAO,CACLkJ,QAAS,OACT6B,UAAW,OACX9B,QAAS,OACT4U,OAAQ,oBACR4B,aAAc,MACdC,UAAW,OACXxgB,SAAA,EAEFJ,EAAAA,EAAAA,KAAA,UAAQkB,MAAO,CAAEF,SAAU,QAASZ,SAAC,kBACrCiD,EAAAA,EAAAA,MAAA,OACEnC,MAAO,CACLkJ,QAAS,OACTyT,IAAK,OACLvc,MAAO,QACPlB,SAAA,EAEFJ,EAAAA,EAAAA,KAAC2D,EAAAA,EAAS,CACRhD,KAAK,QACLzB,MAAM,eACNC,KAAK,cACLE,MAAOiQ,GAAW7B,MAClBrO,SAAUqQ,GACV5L,WAAY,CACVsa,UAAU,EACVjd,MAAO,CAAEU,OAAQ,OAAQZ,SAAU,SAErCH,GAAI,CACFyL,KAAM,EACN,qBAAsB,CAAEtL,SAAU,QAClC,wCAAyC,CAAEC,IAAK,YAGpDjB,EAAAA,EAAAA,KAAC2D,EAAAA,EAAS,CACRhD,KAAK,QACLzB,MAAM,aACNC,KAAK,YACLE,MAAOiQ,GAAWlC,UAClBhO,SAAUqQ,GACV5L,WAAY,CACVsa,UAAU,EACVjd,MAAO,CACLU,OAAQ,OACRZ,SAAU,OACVM,MAAO,UAGXT,GAAI,CACF,qBAAsB,CAAEG,SAAU,QAClC,wCAAyC,CAAEC,IAAK,YAGpDjB,EAAAA,EAAAA,KAAC2D,EAAAA,EAAS,CACRhD,KAAK,QACLzB,MAAM,SACNC,KAAK,SACLE,MAAOiQ,GAAWjC,OAClBjO,SAAUqQ,GACV5L,WAAY,CACVsa,UAAU,EACVjd,MAAO,CACLU,OAAQ,OACRZ,SAAU,OACVM,MAAO,UAGXT,GAAI,CACF,qBAAsB,CAAEG,SAAU,QAClC,wCAAyC,CAAEC,IAAK,YAGpDjB,EAAAA,EAAAA,KAAC2D,EAAAA,EAAS,CACRhD,KAAK,QACLzB,MAAM,cACNC,KAAK,aACLE,MAAOiQ,GAAWhC,WAClBlO,SAAUqQ,GACV5L,WAAY,CACVsa,UAAU,EACVjd,MAAO,CACLU,OAAQ,OACRZ,SAAU,OACVM,MAAO,UAGXT,GAAI,CACF,qBAAsB,CAAEG,SAAU,QAClC,wCAAyC,CAAEC,IAAK,kBAKxDoC,EAAAA,EAAAA,MAAA,YACEnC,MAAO,CACLkJ,QAAS,OACT6B,UAAW,OACX8S,OAAQ,oBACR4B,aAAc,MACdC,UAAW,OACXxgB,SAAA,EAEFJ,EAAAA,EAAAA,KAAA,UAAQkB,MAAO,CAAEF,SAAU,QAASZ,SAAC,iBACrCJ,EAAAA,EAAAA,KAAA,OACEkB,MAAO,CACL0f,UAAW,OACXtf,MAAO,OACPH,SAAU,WACVS,OAAQ,SACRxB,UAEFJ,EAAAA,EAAAA,KAAA,OACEkB,MAAO,CACL0f,UAAW,OACXtf,MAAO,OACPH,SAAU,YACVf,UAEFJ,EAAAA,EAAAA,KAACsD,EAAAA,EAAG,CACFpC,MAAO,CACLU,OAAQ,QACRN,MAAO,OACP6f,UAAW,SACXhgB,SAAU,YACVf,UAEFJ,EAAAA,EAAAA,KAACsE,EAAAA,EAAK,CACJzC,UAAWgN,GACX/M,QAASgO,EACT7N,KAAM6M,GACNlK,SAAU,SACVL,mBAAmB,EACnBC,aAAa,EACboD,mBAAmB,EACnBR,eAAgB,kBAAMpH,EAAAA,EAAAA,KAACohB,GAAoB,GAAG,EAC9C/Z,yBAAyB,aACzBC,yBAAyB,cAMnCtH,EAAAA,EAAAA,KAAA,OACEkB,MAAO,CACLkJ,QAAS,OACT8B,eAAgB,WAChB2R,IAAK,OACL+C,UAAW,QACXxgB,UAEFiD,EAAAA,EAAAA,MAAA,OAAAjD,SAAA,EACEJ,EAAAA,EAAAA,KAACod,EAAAA,EAAM,CACL5c,MAAM,UACNgD,QAAQ,YACRuB,QAAS2W,GACTxa,MAAO,CAAEmgB,YAAa,QACtBhE,WAAWrd,EAAAA,EAAAA,KAACshB,EAAAA,EAAsB,IAClCzgB,GAAI,CACFe,OAAQ,OACRZ,SAAU,OACVugB,cAAe,QACfnhB,SACH,YAGDJ,EAAAA,EAAAA,KAACod,EAAAA,EAAM,CACL5c,MAAM,QACNgD,QAAQ,YACRuB,QAAS,WAAO,IAADyc,EAAAC,EACbtS,IAA0B,GACA,QAA1BqS,EAAAjT,GAAmBrK,eAAO,IAAAsd,GAA1BA,EAA4BjZ,kBACI,QAAhCkZ,EAAAhT,GAAyBvK,eAAO,IAAAud,GAAhCA,EAAkClZ,kBAElCmG,GAAc,CACZ2B,KAAM,eACNN,MAAO,SACP1Q,MAAO,KAETqP,GAAc,CACZ2B,KAAM,eACNN,MAAO,oBACP1Q,MAAO,CAAC,GAGZ,EACAge,WAAWrd,EAAAA,EAAAA,KAAC0hB,EAAAA,EAAiB,IAC7B7gB,GAAI,CACFe,OAAQ,OACRZ,SAAU,OACVugB,cAAe,QACfnhB,SACH,sBAOTJ,EAAAA,EAAAA,KAAC+Q,EAAiB,WAK5B,CAEA,IAAM4Q,EAAc,CAClBC,QAAS,CACPzgB,SAAU,QACVF,IAAK,EACLG,KAAM,EACNyD,MAAO,EACPkb,OAAQ,EACRd,gBAAiB,qBACjB7U,QAAS,OACT8B,eAAgB,SAChBE,WAAY,UAEdyV,MAAO,CACL5C,gBAAiB,OACjB9U,QAAS,OACTwW,aAAc,MACdnB,UAAW,SACXle,MAAO,SAETwgB,OAAQ,CACNvC,OAAQ,SACRrV,WAAY,QACZkV,WAAY,uBACZ5e,MAAO,UACP2J,QAAS,aAIP2G,EAAkB,WACtB,IAAAiR,GAA4B9Z,EAAAA,EAAAA,WAAS,GAAM+Z,GAAA7Z,EAAAA,EAAAA,GAAA4Z,EAAA,GAApCE,EAAMD,EAAA,GAAEE,EAASF,EAAA,GACxBG,GAAkCla,EAAAA,EAAAA,WAAS,kBAAM,WAAO,CAAC,IAACma,GAAAja,EAAAA,EAAAA,GAAAga,EAAA,GAAnDE,EAASD,EAAA,GAAEE,EAAYF,EAAA,GAC9BG,GAAgCta,EAAAA,EAAAA,WAAS,kBAAM,WAAO,CAAC,IAACua,GAAAra,EAAAA,EAAAA,GAAAoa,EAAA,GAAjDE,EAAQD,EAAA,GAAEE,EAAWF,EAAA,GAQtBpJ,EAAa,WACjBqJ,IACAP,GAAU,EACZ,EAEMS,EAAU,WACdN,IACAH,GAAU,EACZ,EA0BA,MAAO,CACLnR,kBAzBwB,WACxB,IAAM6R,GAAQrQ,EAAAA,EAAAA,QAA0B,MAMxC,OALAsQ,EAAAA,EAAAA,YAAU,WACK,IAADC,EAARb,IACW,QAAba,EAAAF,EAAM1e,eAAO,IAAA4e,GAAbA,EAAejd,QAEnB,GAAG,IACEoc,GAGHjiB,EAAAA,EAAAA,KAAA,OAAKkB,MAAOygB,EAAOC,QAAQxhB,UACzBiD,EAAAA,EAAAA,MAAA,OAAKnC,MAAOygB,EAAOE,MAAMzhB,SAAA,EACvBJ,EAAAA,EAAAA,KAAA,KAAGkB,MAAO,CAAEV,MAAO,SAAUJ,SAAC,6BAC9BJ,EAAAA,EAAAA,KAAA,UAAQS,IAAKmiB,EAAO7d,QAAS4d,EAASzhB,MAAOygB,EAAOG,OAAO1hB,SAAC,SAG5DJ,EAAAA,EAAAA,KAAA,UAAQ+E,QAASqU,EAAYlY,MAAOygB,EAAOG,OAAO1hB,SAAC,YATrC,IAetB,EAIEiP,UA1CgB,SAAC5N,GACjBygB,GAAU,GACVI,GAAa,kBAAM7gB,EAAE0e,iBAAiB,IACtCuC,GAAY,kBAAMjhB,EAAE4e,gBAAgB,GACtC,EAwCF,EACA,SAAS5O,IAAiB,IAADsR,EAAAC,EACvBC,GAWIjX,EAAAA,EAAAA,YAAWiC,GAVbC,EAAe+U,EAAf/U,gBACAG,EAAgB4U,EAAhB5U,iBACAK,EAAauU,EAAbvU,cACAC,EAAmBsU,EAAnBtU,oBACAR,EAAuB8U,EAAvB9U,wBACAS,EAA+BqU,EAA/BrU,gCACAL,EAAkB0U,EAAlB1U,mBACAQ,EAAOkU,EAAPlU,QACAE,EAAkBgU,EAAlBhU,mBACAD,EAAIiU,EAAJjU,KAEIzP,GAAWgT,EAAAA,EAAAA,QAAyB,MAmC1C2Q,GAAwDnO,EAAAA,EAAAA,aAAY,CAClEC,YAAa,aACbC,WAAW,SAADkO,GAAA,OAAAJ,EAAAA,IAAAhQ,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAE,SAAAmQ,EAAOC,GAAa,OAAArQ,EAAAA,EAAAA,KAAAG,MAAA,SAAAmQ,GAAA,cAAAA,EAAAjQ,KAAAiQ,EAAAhQ,MAAA,cAAAgQ,EAAAhQ,KAAA,EACxBvE,EAAQwE,IAAI,mDAADlP,OACoCgf,EAASvW,iBAC5D,CACE0G,QAAS,CACPC,cAAc,UAADpP,OAAgB,OAAJ2K,QAAI,IAAJA,OAAI,EAAJA,EAAM0E,gBAGpC,cAAA4P,EAAA3P,OAAA,SAAA2P,EAAA1P,MAAA,wBAAA0P,EAAAzP,OAAA,GAAAuP,EAAA,MAAAtP,MAAA,KAAAC,UAAA,EACHE,UAAW,SAACU,GAEV1F,EADiB0F,EACWhQ,KAAKiQ,UACnC,IAdiB2O,EAAwBL,EAAnCrhB,UAAqC8U,EAAMuM,EAANvM,OAgBvC3T,GAASC,EAAAA,EAAAA,MAEf,OACEI,EAAAA,EAAAA,MAACmgB,EAAAA,SAAc,CAAApjB,SAAA,EACbJ,EAAAA,EAAAA,KAAC2D,EAAAA,EAAS,CACRpE,SAAUA,EACVL,MAAM,sBACNC,KAAK,kBACLG,UAAW,SAACwE,GAC2C,IAAD2f,EAArC,UAAX3f,EAAEE,MAA+B,gBAAXF,EAAEE,MAC1B2S,EAAO,CACL7J,gBAAiC,QAAlB2W,EAAElkB,EAAS2E,eAAO,IAAAuf,OAAA,EAAhBA,EAAkBpkB,SAOvC8E,EAAAA,EAAAA,IACEL,EACAd,EACQ,OAARzD,QAAQ,IAARA,OAAQ,EAARA,EAAU2E,QAEd,EACAL,WAAY,CACV3C,MAAO,CAAEU,OAAQ,OAAQZ,SAAU,QAEnCzB,SAAUA,GAEZsB,GAAI,CACF,qBAAsB,CAAEG,SAAU,QAClC,wCAAyC,CAAEC,IAAK,aAGpDjB,EAAAA,EAAAA,KAAA,OAAKkB,MAAO,CAAE0f,UAAW,OAAQtf,MAAO,OAAQH,SAAU,YAAaf,UACrEJ,EAAAA,EAAAA,KAAA,OACEoE,UAAWpB,EACX9B,MAAO,CACLU,OAAO,GAADyC,QACiC,QAArC2e,EAAC1d,SAASoe,eAAe,oBAAY,IAAAV,OAAA,EAApCA,EAAsCW,wBACpC/hB,QAAoB,GAAE,MAE3BN,MAAO,OACP6f,UAAW,SACXhgB,SAAU,YACVf,UAEFJ,EAAAA,EAAAA,KAACsE,EAAAA,EAAK,CACJ7D,IAAK8N,EACL1M,UACEwM,GACAO,GACA2U,EAEFzhB,QAxGW,CACnB,CACEiO,MAAO,WACPC,WAAY,eACZpQ,SAAU,KAEZ,CACEmQ,MAAO,WACPC,WAAY,eACZpQ,SAAU,KAEZ,CACEmQ,MAAO,WACPC,WAAY,WACZpQ,SAAU,KAEZ,CACEmQ,MAAO,aACPC,WAAY,aACZpQ,SAAU,KAEZ,CACEmQ,MAAO,SACPC,WAAY,SACZpQ,SAAU,IACVqQ,MAAO,SAET,CACEF,MAAO,OACPC,WAAY,OACZpQ,SAAU,MA2EJqC,KAAMiM,EACNtJ,SAAU,SACVL,mBAAmB,EACnBC,aAAa,EACbC,cAAe,SAACC,EAAWC,EAAMX,GAC/B,IAAM4f,EAAcjf,EAAK8D,QACvB,SAACC,GAAS,OAAKA,EAAKiF,SAAWjJ,EAAU,EAAE,IAC3C,QACkBmf,IAAhBD,GAA6BA,EAAY5c,QAAU,IAGvD0H,EAAc,CACZ2B,KAAM,eACNN,MAAO,oBACP1Q,MAAO,CACLqO,SAAUkW,EAAYlW,SACtBuN,KAAM2I,EAAY3I,KAClBD,WAAY4I,EAAY5I,WACxBgC,GAAI4G,EAAYlW,SAChBqN,SAAU6I,EAAY7I,SACtBkC,gBAAiB2G,EAAY/I,QAC7BlN,OAAQiW,EAAYjW,UAGxBe,EAAc,CACZ2B,KAAM,eACNN,MAAO,eACP1Q,MAAO,SAETqP,EAAc,CACZ2B,KAAM,eACNN,MAAO,SACP1Q,MAAOukB,EAAYjW,SAErBe,EAAc,CACZ2B,KAAM,eACNN,MAAO,WACP1Q,MAAOukB,EAAYlW,WAGrBiB,EAAoB,CAClBwM,YAAayI,EAAYzI,YACzBV,iBAAkBmJ,EAAYnJ,mBAElC,EACA3X,gBAAiB,SAACghB,GAAM,OACrB3V,EACEgJ,KAAI,SAACzO,GAAS,OAAKA,EAAKgF,QAAQ,IAChC/E,SAASmb,EAAOra,IAAIiE,SAAS,UAO9C,CACA,SAASgE,IAA2B,IAADqS,EACjCC,GAKIhY,EAAAA,EAAAA,YAAWiC,GAJbS,EAAasV,EAAbtV,cACAC,EAAmBqV,EAAnBrV,oBACAR,EAAuB6V,EAAvB7V,wBACAM,EAAwBuV,EAAxBvV,yBA8DF,OACEzO,EAAAA,EAAAA,KAAA,OAAKkB,MAAO,CAAE0f,UAAW,OAAQtf,MAAO,OAAQH,SAAU,YAAaf,UACrEJ,EAAAA,EAAAA,KAACsD,EAAAA,EAAG,CACFpC,MAAO,CACLU,OAAO,GAADyC,QACiC,QAArC0f,EAACze,SAASoe,eAAe,oBAAY,IAAAK,OAAA,EAApCA,EAAsCJ,wBACpC/hB,QAAoB,GAAE,MAE3BN,MAAO,OACP6f,UAAW,SACXhgB,SAAU,YACVf,UAEFJ,EAAAA,EAAAA,KAACsE,EAAAA,EAAK,CACJ7D,IAAKgO,EACL5M,WAAW,EACXC,QA3E+B,CACrC,CACEiO,MAAO,QACPC,WAAY,SACZpQ,SAAU,KAEZ,CACEmQ,MAAO,UACPC,WAAY,UACZpQ,SAAU,KAEZ,CACEmQ,MAAO,WACPC,WAAY,eACZpQ,SAAU,KAEZ,CACEmQ,MAAO,WACPC,WAAY,eACZpQ,SAAU,KAEZ,CACEmQ,MAAO,WACPC,WAAY,WACZpQ,SAAU,KAEZ,CACEmQ,MAAO,aACPC,WAAY,aACZpQ,SAAU,KAEZ,CACEmQ,MAAO,SACPC,WAAY,SACZpQ,SAAU,IACVqQ,MAAO,SAET,CACEF,MAAO,OACPC,WAAY,cACZpQ,SAAU,KAEZ,CACEmQ,MAAO,eACPC,WAAY,eACZpQ,SAAU,KAEZ,CACEmQ,MAAO,SACPC,WAAY,SACZpQ,SAAU,KAEZ,CACEmQ,MAAO,cACPC,WAAY,cACZpQ,SAAU,MAqBNqC,KAAMkM,EACNvJ,SAAU,SACVL,mBAAmB,EACnBC,aAAa,EACbC,cAAe,SAACC,EAAWC,EAAMX,GAC/B,IAAM4f,EAAcjf,EAAK8D,QACvB,SAACC,GAAS,OAAKA,EAAKiF,SAAWjJ,EAAU,EAAE,IAC3C,QACkBmf,IAAhBD,GAA6BA,EAAY5c,QAAU,IAGvD0H,EAAc,CACZ2B,KAAM,eACNN,MAAO,oBACP1Q,MAAO,CACLqO,SAAUkW,EAAYlW,SACtBuN,KAAM2I,EAAY3I,KAClBD,WAAY4I,EAAY5I,WACxBgC,GAAI4G,EAAYlW,SAChBqN,SAAU6I,EAAY7I,SACtBkC,gBAAiB2G,EAAYhJ,QAC7BjN,OAAQiW,EAAYjW,UAGxBe,EAAc,CACZ2B,KAAM,eACNN,MAAO,eACP1Q,MAAOukB,EAAYxI,SAErB1M,EAAc,CACZ2B,KAAM,eACNN,MAAO,kBACP1Q,MAAOukB,EAAYvI,cAErB3M,EAAc,CACZ2B,KAAM,eACNN,MAAO,SACP1Q,MAAOukB,EAAYjW,SAErBe,EAAc,CACZ2B,KAAM,eACNN,MAAO,WACP1Q,MAAOukB,EAAYlW,WAGrBiB,EAAoB,CAClBwM,YAAayI,EAAY1I,aACzBT,iBAAkBmJ,EAAYjJ,QAElC,OAKV,CACA,SAAShJ,IAAmB,IAADsS,EACzBC,GACElY,EAAAA,EAAAA,YAAWiC,GADLG,EAAe8V,EAAf9V,gBAAiBI,EAAyB0V,EAAzB1V,0BAsFzB,OACExO,EAAAA,EAAAA,KAAA,OAAKkB,MAAO,CAAE0f,UAAW,OAAQtf,MAAO,OAAQH,SAAU,YAAaf,UACrEJ,EAAAA,EAAAA,KAACsD,EAAAA,EAAG,CACFpC,MAAO,CACLU,OAAO,GAADyC,QACiC,QAArC4f,EAAC3e,SAASoe,eAAe,oBAAY,IAAAO,OAAA,EAApCA,EAAsCN,wBACpC/hB,QAAoB,GAAE,MAE3BN,MAAO,OACP6f,UAAW,SACXhgB,SAAU,YACVf,UAEFJ,EAAAA,EAAAA,KAACsE,EAAAA,EAAK,CACJ7D,IAAK+N,EACL3M,WAAW,EACXC,QApGuB,CAC7B,CACEiO,MAAO,OACPC,WAAY,OACZpQ,SAAU,KAEZ,CACEmQ,MAAO,cACPC,WAAY,eACZpQ,SAAU,KAEZ,CACEmQ,MAAO,QACPC,WAAY,QACZpQ,SAAU,IACVqQ,MAAO,SAET,CACEF,MAAO,SACPC,WAAY,SACZpQ,SAAU,IACVqQ,MAAO,SAET,CACEF,MAAO,OACPC,WAAY,SACZpQ,SAAU,KAEZ,CACEmQ,MAAO,WACPC,WAAY,WACZpQ,SAAU,KAEZ,CACEmQ,MAAO,UACPC,WAAY,WACZpQ,SAAU,KAEZ,CACEmQ,MAAO,cACPC,WAAY,gBACZpQ,SAAU,KAEZ,CACEmQ,MAAO,WACPC,WAAY,WACZpQ,SAAU,KAEZ,CACEmQ,MAAO,OACPC,WAAY,cACZpQ,SAAU,KAEZ,CACEmQ,MAAO,aACPC,WAAY,aACZpQ,SAAU,KAEZ,CACEmQ,MAAO,eACPC,WAAY,eACZpQ,SAAU,KAEZ,CACEmQ,MAAO,eACPC,WAAY,eACZpQ,SAAU,KAEZ,CACEmQ,MAAO,KACPC,WAAY,KACZpQ,SAAU,KAEZ,CACEmQ,MAAO,WACPC,WAAY,eACZpQ,SAAU,KAEZ,CACEmQ,MAAO,kBACPC,WAAY,kBACZpQ,SAAU,MAoBNqC,KAAMmM,EACNxJ,SAAU,SACVL,mBAAmB,EACnBC,aAAa,EACboD,mBAAmB,EACnBP,yBAAyB,aACzBD,eAAgB,kBAAMpH,EAAAA,EAAAA,KAACmkB,GAA8B,GAAG,EACxD7c,yBAAyB,OAKnC,CACA,SAASgQ,GAAiBlG,EAAegF,GACvCgO,OAAOC,QAAQjO,GAAK1P,SAAQ,SAAAzH,GAAqB,IAAD+L,GAAA7C,EAAAA,EAAAA,GAAAlJ,EAAA,GAAlB8Q,EAAK/E,EAAA,GAAE3L,EAAK2L,EAAA,GACxCoG,EAAS,CAAEf,KAAM,eAAgBN,MAAAA,EAAO1Q,MAAAA,GAC1C,GACF,CACA,SAAS2gB,GAAesE,EAAsB3d,GAC5C,OAAI2d,IAAiB3d,EACZ,mBAEA,gBAEX,CACA,SAASya,KACP,IAAQtS,GAAyB9C,EAAAA,EAAAA,YAAWiC,GAApCa,qBACR,OACE9O,EAAAA,EAAAA,KAACsD,EAAAA,EAAG,CACFzC,GAAI,CACFsL,GAAI,EACJoY,GAAI,EACJna,QAAS,OACT8B,eAAgB,WAChBsY,UAAW,qBACXpkB,UAEFiD,EAAAA,EAAAA,MAAA,UAAAjD,SAAA,CAAQ,SACC,IACN0O,EACEoH,QACC,SAACC,EAAUC,GAAQ,OACjBD,EAAME,WAAWD,EAAIE,OAAOC,QAAQ,KAAM,IAAI,GAChD,GAEDC,eAAe,QAAS,CACvBtV,MAAO,UACPuV,sBAAuB,EACvBC,sBAAuB,QAKnC,CACA,SAASyN,KACP,IAAQ/V,GAAoBpC,EAAAA,EAAAA,YAAWiC,GAA/BG,gBACR,OACE/K,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CACFzC,GAAI,CACFsL,GAAI,EACJoY,GAAI,EACJna,QAAS,OACT8B,eAAgB,WAChBsY,UAAW,qBACXpkB,SAAA,EAEFJ,EAAAA,EAAAA,KAAA,QAAMkB,MAAO,CAAEmgB,YAAa,QAASjhB,SAAC,YACtCJ,EAAAA,EAAAA,KAAA,SACEkB,MAAO,CACLmJ,WAAY,QAEdgG,KAAK,OACL8N,UAAU,EACV9e,MAAO+O,EACJ8H,QACC,SAACC,EAAUC,GAAQ,OACjBD,EAAME,WAAWD,EAAIE,OAAOC,QAAQ,KAAM,IAAI,GAChD,GAEDC,eAAe,QAAS,CACvBtV,MAAO,UACPuV,sBAAuB,EACvBC,sBAAuB,OAG7B1W,EAAAA,EAAAA,KAAA,SACEkB,MAAO,CACLmJ,WAAY,QAEdgG,KAAK,OACL8N,UAAU,EACV9e,MAAO+O,EACJ8H,QACC,SAACC,EAAUC,GAAQ,OACjBD,EAAME,WAAWD,EAAI0D,MAAMvD,QAAQ,KAAM,IAAI,GAC/C,GAEDC,eAAe,QAAS,CACvBtV,MAAO,UACPuV,sBAAuB,EACvBC,sBAAuB,QAKnC,C,kFC9jEe,SAASlF,EAAqBiT,GAC3C,IAAAzc,GAAgDC,EAAAA,EAAAA,UAAS,GAAEC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAApDoH,EAAgBlH,EAAA,GAAEwc,EAAmBxc,EAAA,GAsB5C,MAAO,CACL0J,KAAM6S,EAAMrV,GACZyC,KANF,SAAchC,GACZ6U,EAAoB7U,EACtB,EAKE8U,KAfF,WACED,GAAoB,SAACE,GACnB,OAAIA,GAAK,EACAA,EAEFA,EAAI,CACb,GACF,EASEtR,KAxBF,WACEoR,GAAoB,SAACE,GACnB,OAAIA,GAAKH,EAAMzd,OAAS,EACf4d,EAEFA,EAAI,CACb,GACF,EAkBEC,YAAkC,IAArBzV,EACb0V,WAAY1V,IAAqBqV,EAAMzd,OAAS,EAChDoI,iBAAAA,EAEJ,C,gICzBsC,SA8BvB2V,EAAkB7P,EAAA2B,EAAAc,GAAA,OAAAqN,EAAAA,IAAAjS,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAjC,SAAAC,EACEnE,EACAC,EACAsJ,GAAuC,IAAA1L,EAAAqY,EAAAlR,UAAA,OAAAf,EAAAA,EAAAA,KAAAG,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACpB,OAAnB1G,EAAcqY,EAAAje,OAAA,QAAA6c,IAAAoB,EAAA,GAAAA,EAAA,GAAG,GAAE7R,EAAAO,OAAA,SAEZ5E,EAAQwE,IAAI,GAADlP,OAAQ,OAAJiU,QAAI,IAAJA,OAAI,EAAJA,EAAMC,IAAG,KAAAlU,OAAQ,OAAJiU,QAAI,IAAJA,OAAI,EAAJA,EAAME,aAAY,KAAAnU,OAAIuI,GAAU,CACjE4G,QAAS,CACPC,cAAc,UAADpP,OAAgB,OAAJ2K,QAAI,IAAJA,OAAI,EAAJA,EAAM0E,iBAEjC,wBAAAN,EAAAS,OAAA,GAAAX,EAAA,MACHY,MAAA,KAAAC,UAAA,CAsID,IApI2B,SAAH9U,GAeU,IAADimB,EAAA1U,EAd/B8H,EAAIrZ,EAAJqZ,KACAG,EAAQxZ,EAARwZ,SACA1W,EAAQ9C,EAAR8C,SACA2W,EAAezZ,EAAfyZ,gBACA5W,EAAO7C,EAAP6C,QAAOqjB,EAAAlmB,EACP0Z,WAAAA,OAAU,IAAAwM,EAAG,WAAO,EAACA,EAAAC,EAAAnmB,EACrBomB,iBAAAA,OAAgB,IAAAD,EAAG,WAAO,EAACA,EAAAE,EAAArmB,EAC3BgV,UAAAA,OAAS,IAAAqR,EAAG,WAAO,EAACA,EACpB5iB,EAASzD,EAATyD,UACAE,EAAa3D,EAAb2D,cAAa2iB,EAAAtmB,EACb6Z,gBAAAA,OAAe,IAAAyM,EAAG,WAAO,EAACA,EAAAC,EAAAvmB,EAC1BwmB,eAAAA,OAAc,IAAAD,EAAGT,EAAkBS,EACnC1iB,EAAe7D,EAAf6D,gBACAC,EAAgB9D,EAAhB8D,iBAEAgJ,GAA0BC,EAAAA,EAAAA,YAAWgF,EAAAA,GAA7BjC,EAAOhD,EAAPgD,QAASC,EAAIjD,EAAJiD,KACjBhH,GAA6BC,EAAAA,EAAAA,WAAS,GAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAArC0d,EAAIxd,EAAA,GAAEyd,EAAYzd,EAAA,GACzB4J,GAAwB7J,EAAAA,EAAAA,UAAgC,IAAG8J,GAAA5J,EAAAA,EAAAA,GAAA2J,EAAA,GAApD7P,EAAI8P,EAAA,GAAE7P,EAAO6P,EAAA,GAAwC,SAC7C6T,IAAkB,OAAAV,EAAAA,IAAAnS,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAjC,SAAAwB,IAAA,IAAA7H,EAAAiZ,EAAA9R,UAAA,OAAAf,EAAAA,EAAAA,KAAAG,MAAA,SAAAuB,GAAA,cAAAA,EAAArB,KAAAqB,EAAApB,MAAA,OAAqD,OAAnB1G,EAAciZ,EAAA7e,OAAA,QAAA6c,IAAAgC,EAAA,GAAAA,EAAA,GAAG,GAAEnR,EAAApB,KAAA,EACtCmS,EAAe1W,EAASC,EAAMsJ,EAAM1L,GAAQ,KAAD,SAAA8H,EAAAf,OAAA,SAAAe,EAAAd,MAAA,wBAAAc,EAAAb,OAAA,GAAAY,EAAA,MACzDX,MAAA,KAAAC,UAAA,CACD,IAAAnB,GAA+BC,EAAAA,EAAAA,UAAS,CACtC9Q,SAAUA,EACV+Q,QAAQ,WAAD,OAAAtC,EAAAA,IAAAuC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAE,SAAAkC,IAAA,OAAAnC,EAAAA,EAAAA,KAAAG,MAAA,SAAAkC,GAAA,cAAAA,EAAAhC,KAAAgC,EAAA/B,MAAA,cAAA+B,EAAA/B,KAAA,EAAkBsS,IAAoB,cAAAvQ,EAAA1B,OAAA,SAAA0B,EAAAzB,MAAA,wBAAAyB,EAAAxB,OAAA,GAAAsB,EAAA,MAAArB,MAAA,KAAAC,UAAA,EAC/CE,UAAW,SAACU,GACV,IAAMT,EAAWS,EACjBzS,EAAQgS,EAASvP,KAAK+T,IACtBzE,EAAUC,EACZ,EACAF,sBAAsB,IARhBnS,EAAS+Q,EAAT/Q,UAAW0S,EAAO3B,EAAP2B,QAmGnB,MAAO,CACLmR,KAAAA,EACAzjB,KAAAA,EACAJ,UAAAA,EACAqX,UA5FgB,WAA0B,IAAzBtM,EAAcmH,UAAA/M,OAAA,QAAA6c,IAAA9P,UAAA,GAAAA,UAAA,GAAG,IAClCgI,EAAAA,EAAAA,YAAU,WACR4J,GAAa,EACf,IACa,OAATjjB,QAAS,IAATA,GAAAA,EAAWwB,UACbxB,EAAUwB,QAAQ7E,MAAQuN,EAC1BgZ,EAAmBhZ,GAAQ8M,MAAK,SAAC/E,GAC/B,GAAQ,OAAHA,QAAG,IAAHA,IAAAA,EAAKhQ,KAAKmhB,QACb,OAAOC,MAAM,WAAD1hB,OAAe,OAAHsQ,QAAG,IAAHA,OAAG,EAAHA,EAAKhQ,KAAKsT,UAGpC/V,EADiByS,EACAhQ,KAAK+T,IACT,OAAThW,QAAS,IAATA,GAAAA,EAAWwB,SAASxB,EAAUwB,QAAQ2B,OAC5C,IAEJ,EA8EEuT,WA5EiB,WAEK,IAADrV,GADrB4hB,GAAa,GACT7M,IACFA,EAAyB,OAATpW,QAAS,IAATA,GAAkB,QAATqB,EAATrB,EAAWwB,eAAO,IAAAH,OAAT,EAATA,EAAoB1E,MAExC,EAwEE2Z,gBArEAhZ,EAAAA,EAAAA,KAAC2B,EAAAA,GAAc,CACboB,iBAAkBA,EAClBL,UAAWA,EACXL,UAAWqjB,EACXtjB,aAAc,WAEU,IAAD4jB,GADrBL,GAAa,GACT7M,IACFA,EAAyB,OAATpW,QAAS,IAATA,GAAkB,QAATsjB,EAATtjB,EAAWwB,eAAO,IAAA8hB,OAAT,EAATA,EAAoB3mB,MAExC,EACAiD,iBAAkB,WAEM,IAAD2jB,GADrBN,GAAa,GACT7M,IACFA,EAAyB,OAATpW,QAAS,IAATA,GAAkB,QAATujB,EAATvjB,EAAWwB,eAAO,IAAA+hB,OAAT,EAATA,EAAoB5mB,MAExC,EACAkD,eAAgB,SAACuB,GAaf,EAEFjB,iBAAkB,SAACxD,GACjBumB,EAAmBvmB,GAAOqa,MAAK,SAAC/E,GAC9B,GAAQ,OAAHA,QAAG,IAAHA,IAAAA,EAAKhQ,KAAKmhB,QACb,OAAOC,MAAM,WAAD1hB,OAAe,OAAHsQ,QAAG,IAAHA,OAAG,EAAHA,EAAKhQ,KAAKsT,UAGpC/V,EADiByS,EACAhQ,KAAK+T,GACxB,GACF,EACA9V,cAAeA,EACfhB,OAAQ,IACRC,UAAWA,EACXE,SAAUA,EACVD,QAASA,EACTE,kBAAmB,SAACmF,EAAmBxC,GACrC,GAAIwC,EAAkBH,QAAU,EAC9B,OAAOqe,EAAiB1gB,GAE1B,IAAMuhB,EAAc,IAAI1b,IAAIrD,GACtByR,EAAkBjU,EAAK8D,QAAO,SAACgB,GACnC,OAAOyc,EAAYxb,IAAIjB,EAAIgP,GAAUpB,WACvC,IACIuB,EAAgB5R,QAAU,GAC9B2R,EAAWC,EAAiBjU,EAC9B,EACAxC,GAAIsW,EACJxW,KAAMA,EACNC,QAASA,EACTY,gBAAiBA,IAWnByR,QAAAA,EAEJ,C,6HCpLO,SAASwF,EAAuBnO,GAMnC,IAADua,EACDpO,IAAAA,KAAU,CACRtV,MAAM,gBACN2jB,KAAW,OAALxa,QAAK,IAALA,GAAAA,EAAOoQ,KACJ,OAALpQ,QAAK,IAALA,OAAK,EAALA,EAAOoQ,KACPpQ,EAAMoO,SAAQ,6CAEd,wCACJhC,KAAM,UACNqO,MAAO,OACPC,gBAAiB,CACfC,eAAgB,OAElBtK,kBAAkB,EAClB0B,kBAAmB,OACnBF,mBAAoB,QACpB+I,qBAAqB,EACrBC,WAAW,SAADvR,GAAA,OAAAiR,EAAAA,IAAApT,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAE,SAAAC,EAAOgH,GAAoB,OAAAlH,EAAAA,EAAAA,KAAAG,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACrC,IACE1H,EAAMqO,GAAGC,EACX,CAAE,MAAOwM,GACP3O,IAAAA,sBAA2B,iCAAD1T,OACJqiB,EAAK,gBAE7B,CAAC,wBAAAtT,EAAAS,OAAA,GAAAX,EAAA,MACFY,MAAA,KAAAC,UAAA,EACD4S,kBAAmB,kBAAO5O,IAAAA,WAAgB,IACzC2B,MAAK,SAACC,GACP,GAAIA,EAAOiE,aACLhS,EAAMyO,UACR,OAAOzO,EAAMyO,YAGbzO,EAAMgb,YACRhb,EAAMgb,YAEV,GACF,CAEO,SAASxM,EAAuBxO,GAKrCmM,IAAAA,KAAU,CACRtV,MAAO,gBACPuZ,KAAW,OAALpQ,QAAK,IAALA,GAAAA,EAAOoQ,KAAY,OAALpQ,QAAK,IAALA,OAAK,EAALA,EAAOoQ,KAAO,sCAClChE,KAAM,UACNiE,kBAAkB,EAClBwB,mBAAoB,UACpBC,kBAAmB,OACnBC,kBAAmB,kBAClBjE,MAAK,SAACC,GACP,GAAIA,EAAOiE,aACLhS,EAAMyO,UACR,OAAOzO,EAAMyO,YAGbzO,EAAMgb,YACRhb,EAAMgb,YAEV,GACF,C,4BCnEIC,EAAyBC,EAAQ,OAIrCC,EAAQ,OAAU,EAClB,IAAIC,EAAiBH,EAAuBC,EAAQ,QAChDG,EAAcH,EAAQ,OACtBI,GAAW,EAAIF,EAAeG,UAAuB,EAAIF,EAAYG,KAAK,OAAQ,CACpF3L,EAAG,wCACD,OACJsL,EAAQ,EAAUG,C,4BCVdL,EAAyBC,EAAQ,OAIrCC,EAAQ,OAAU,EAClB,IAAIC,EAAiBH,EAAuBC,EAAQ,QAChDG,EAAcH,EAAQ,OACtBI,GAAW,EAAIF,EAAeG,UAAuB,EAAIF,EAAYG,KAAK,OAAQ,CACpF3L,EAAG,8KACD,sBACJsL,EAAQ,EAAUG,C,4BCVdL,EAAyBC,EAAQ,OAIrCC,EAAQ,OAAU,EAClB,IAAIC,EAAiBH,EAAuBC,EAAQ,QAChDG,EAAcH,EAAQ,OACtBI,GAAW,EAAIF,EAAeG,UAAuB,EAAIF,EAAYG,KAAK,OAAQ,CACpF3L,EAAG,mPACD,iBACJsL,EAAQ,EAAUG,C,4BCVdL,EAAyBC,EAAQ,OAIrCC,EAAQ,OAAU,EAClB,IAAIC,EAAiBH,EAAuBC,EAAQ,QAChDG,EAAcH,EAAQ,OACtBI,GAAW,EAAIF,EAAeG,UAAuB,EAAIF,EAAYG,KAAK,OAAQ,CACpF3L,EAAG,oOACD,cACJsL,EAAQ,EAAUG,C,4BCVdL,EAAyBC,EAAQ,OAIrCC,EAAQ,OAAU,EAClB,IAAIC,EAAiBH,EAAuBC,EAAQ,QAChDG,EAAcH,EAAQ,OACtBI,GAAW,EAAIF,EAAeG,UAAuB,EAAIF,EAAYG,KAAK,OAAQ,CACpF3L,EAAG,mJACD,QACJsL,EAAQ,EAAUG,C,uECZH,SAASpnB,EAAyBunB,EAAQC,GACvD,GAAc,MAAVD,EAAgB,MAAO,CAAC,EAC5B,IACI9gB,EAAKqe,EADLrL,GAAS,OAA6B8N,EAAQC,GAElD,GAAIlD,OAAOmD,sBAAuB,CAChC,IAAIC,EAAmBpD,OAAOmD,sBAAsBF,GACpD,IAAKzC,EAAI,EAAGA,EAAI4C,EAAiBxgB,OAAQ4d,IACvCre,EAAMihB,EAAiB5C,GACnB0C,EAASG,QAAQlhB,IAAQ,GACxB6d,OAAOsD,UAAUC,qBAAqBC,KAAKP,EAAQ9gB,KACxDgT,EAAOhT,GAAO8gB,EAAO9gB,GAEzB,CACA,OAAOgT,CACT,C","sources":["components/DatePicker.tsx","components/ModalWithTable.tsx","components/Table.tsx","feautures/Admin/Task/Accounting/ReturnCheck.tsx","hooks/useMultipleComponent.tsx","hooks/useQueryModalTable.tsx","lib/confirmationAlert.ts","../node_modules/@mui/icons-material/Add.js","../node_modules/@mui/icons-material/CheckCircleOutline.js","../node_modules/@mui/icons-material/NotInterested.js","../node_modules/@mui/icons-material/RestartAlt.js","../node_modules/@mui/icons-material/Save.js","../node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js"],"sourcesContent":["import { LocalizationProvider } from \"@mui/x-date-pickers/LocalizationProvider\";\nimport { AdapterDateFns } from \"@mui/x-date-pickers/AdapterDateFns\";\nimport { DatePicker } from \"@mui/x-date-pickers\";\nexport default function CustomDatePicker({\n  label,\n  name,\n  onChange,\n  value,\n  onKeyDown,\n  inputRef,\n  datePickerRef,\n  fullWidth,\n  textField,\n  minWidth = \"200px\",\n  ...rest\n}: any) {\n  return (\n    <LocalizationProvider dateAdapter={AdapterDateFns}>\n      <DatePicker\n      floatingLabelStyle={{color: \"black\" }}\n        value={value}\n        onChange={onChange}\n        ref={datePickerRef}\n        slotProps={{\n          textField: {\n            size: \"small\",\n            label,\n            name,\n            onKeyDown,\n            inputRef: inputRef,\n            fullWidth,\n\n            ...textField,\n          },\n        }}\n        InputLabelProps={{\n          sx: {\n            color: \"black\",\n          },\n        }}\n        sx={{\n          minWidth,\n          fieldset: { borderColor: \"black\" },\n          \".MuiFormLabel-root\": { fontSize: \"14px\" },\n          \".MuiFormLabel-root[data-shrink=false]\": {\n            top: \"-5px\",\n          },\n        }}\n        {...rest}\n      />\n    </LocalizationProvider>\n  );\n}\n","import React from \"react\";\nimport {\n  GridRowSelectionModel,\n  GridRowParams,\n  GridCellParams,\n  GridTreeNode,\n} from \"@mui/x-data-grid\";\nimport { Modal, Box, Typography, IconButton, TextField } from \"@mui/material\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport Table from \"./Table\";\n\ninterface ModalWithTableParams {\n  height: number;\n  isLoading: boolean;\n  queryKey: string;\n  columns: Array<any>;\n  onSelectionChange: (rowSelectionModel: Array<any>, data: Array<any>) => void;\n  setRows: React.Dispatch<React.SetStateAction<GridRowSelectionModel>>;\n  rows: GridRowSelectionModel;\n  id: string;\n  onCloseModal: () => void;\n  onClickCloseIcon: () => void;\n  showModal: boolean;\n  searchOnChange:\n  | React.ChangeEventHandler<HTMLInputElement | HTMLTextAreaElement>\n  | undefined;\n  title?: string;\n  searchRef?: React.RefObject<HTMLInputElement>;\n  onCellKeyDown?: any;\n  onSearchKeyEnter?: (search: string) => void;\n  isRowSelectable?: ((params: GridRowParams<any>) => boolean) | undefined;\n  getCellClassName?:\n  | ((params: GridCellParams<any, any, any, GridTreeNode>) => string)\n  | undefined;\n}\n\nconst style = {\n  position: \"absolute\" as \"absolute\",\n  top: \"50%\",\n  left: \"50%\",\n  transform: \"translate(-50%, -50%)\",\n  width: \"70%\",\n  bgcolor: \"background.paper\",\n  boxShadow: 24,\n  p: 4,\n  heigth: \"auto\",\n};\n\nexport default function ModalWithTable({\n  height,\n  isLoading,\n  queryKey,\n  columns,\n  onSelectionChange,\n  setRows,\n  rows,\n  id,\n  onCloseModal,\n  showModal,\n  onClickCloseIcon,\n  searchOnChange,\n  title = \"\",\n  searchRef,\n  onCellKeyDown,\n  onSearchKeyEnter = () => { },\n  isRowSelectable,\n  getCellClassName,\n}: ModalWithTableParams) {\n  const mainId = generateRandomClass();\n\n  return (\n    <Modal\n      open={showModal}\n      onClose={onCloseModal}\n      aria-labelledby=\"modal-modal-title\"\n      aria-describedby=\"modal-modal-description\"\n    >\n      <Box sx={style}>\n        <Typography id=\"modal-modal-title\" variant=\"h6\" component=\"h2\" mb={2}>\n          {title}\n        </Typography>\n        <TextField\n          size=\"small\"\n          label=\"Search\"\n          sx={{ marginBottom: \"10px\" }}\n          fullWidth\n          onChange={searchOnChange}\n          InputProps={{\n            inputRef: searchRef,\n          }}\n          onKeyDown={(e) => {\n            if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n              e.preventDefault();\n              onSearchKeyEnter(searchRef?.current?.value as string);\n            }\n            keyBoardSelectionTable(\n              e,\n              mainId,\n              searchRef?.current as HTMLInputElement\n            );\n          }}\n        />\n        <div\n          className={`${mainId} main-table-selection-container`}\n          style={{ position: \"relative\", height: `${height + 20}px` }}\n        >\n          <Table\n            isSingleSelection={true}\n            isRowFreeze={false}\n            columns={columns}\n            isLoading={isLoading}\n            dataSelection={(selection, data, code) => {\n              onSelectionChange(selection, data);\n            }}\n            table_id={id}\n            rows={rows}\n            isRowSelectable={isRowSelectable}\n            getCellClassName={getCellClassName}\n          />\n        </div>\n\n        <div style={{ position: \"absolute\", top: \"10px\", right: \"10px\" }}>\n          <IconButton\n            aria-label=\"search-client\"\n            color=\"secondary\"\n            onClick={onClickCloseIcon}\n          >\n            <CloseIcon />\n          </IconButton>\n        </div>\n      </Box>\n    </Modal>\n  );\n}\n\nexport function generateRandomClass() {\n  const randomNumber = Math.floor(Math.random() * 10000);\n  const randomClass = \"main-\" + randomNumber;\n  return randomClass;\n}\n\nfunction keyBoardUpDown(className: string, el: HTMLElement) {\n  const firstRowParent = document.querySelector(\n    `.${className} .MuiDataGrid-row`\n  );\n  const firstInput = firstRowParent?.querySelector(\"input\");\n  firstInput?.focus();\n  const event = new MouseEvent(\"mouseenter\", {\n    bubbles: true,\n    cancelable: true,\n    view: window,\n  });\n  firstRowParent?.dispatchEvent(event);\n  firstInput?.addEventListener(\"keydown\", (es: any) => {\n    if (es.key === \"ArrowUp\") {\n      es.preventDefault();\n      el.focus();\n    }\n    if (es.key === \"ArrowUp\") {\n      firstRowParent?.classList.remove(\"hover-keyboard\");\n    }\n  });\n}\n\nexport function keyBoardSelectionTable(\n  e: React.KeyboardEvent<HTMLDivElement>,\n  className: string,\n  el: HTMLElement\n) {\n  const mainId = className;\n  if (e.code === \"ArrowDown\") {\n    const rows = document.querySelectorAll(`.${mainId} .MuiDataGrid-row`);\n    e.preventDefault();\n    rows[0]?.classList.add(\"hover-keyboard\");\n    keyBoardUpDown(className, el);\n    rows.forEach((el, idx) => {\n      el.addEventListener(\"keydown\", (es: any) => {\n        if (es.key === \"ArrowUp\") {\n          if (idx <= 0) {\n            return;\n          }\n\n          es.preventDefault();\n          rows[idx]?.classList.remove(\"hover-keyboard\");\n          rows[idx - 1]?.classList.add(\"hover-keyboard\");\n          return;\n        }\n        if (es.key === \"ArrowDown\") {\n          es.preventDefault();\n          if (idx >= rows.length - 1) {\n            return;\n          }\n          rows[idx]?.classList.remove(\"hover-keyboard\");\n          rows[idx + 1]?.classList.add(\"hover-keyboard\");\n        }\n      });\n    });\n  }\n}\n","import {\n  useState,\n  useContext,\n  createContext,\n  ReactElement,\n  forwardRef,\n  useImperativeHandle,\n} from \"react\";\nimport { Box, LinearProgress } from \"@mui/material\";\nimport {\n  DataGrid,\n  GridSlotsComponentsProps,\n  gridPageCountSelector,\n  GridPagination,\n  useGridApiContext,\n  useGridSelector,\n  GridRowSelectionModel,\n  GridColDef,\n  GridRowParams,\n  GridCellParams,\n  GridTreeNode,\n} from \"@mui/x-data-grid\";\nimport { TablePaginationProps } from \"@mui/material/TablePagination\";\nimport MuiPagination from \"@mui/material/Pagination\";\n\ninterface TableProps {\n  isLoading: boolean;\n  columns: Array<any>;\n  rows: Array<any>;\n  table_id: string;\n  isSingleSelection: boolean;\n  isRowFreeze: boolean;\n  dataSelection?: (selection: any, data: any, code: string | null) => void;\n  CustomFooterComponent?: any;\n  isRowSelectable?: ((params: GridRowParams<any>) => boolean) | undefined;\n  getCellClassName?:\n    | ((params: GridCellParams<any, any, any, GridTreeNode>) => string)\n    | undefined;\n  footerChildren?: (\n    rowSelectionModel: GridRowSelectionModel,\n    rows: Array<any>\n  ) => ReactElement;\n  footerPaginationPosition?: string;\n  showFooterSelectedCount?: boolean;\n  checkboxSelection?: boolean | undefined;\n}\n\nconst TableContext = createContext<{\n  rowSelectionModel: GridRowSelectionModel;\n  rows: Array<any>;\n  footerPaginationPosition?: string;\n  showFooterSelectedCount?: boolean;\n  footerChildren: (\n    rowSelectionModel: GridRowSelectionModel,\n    rows: Array<any>\n  ) => ReactElement;\n}>({\n  rows: [],\n  rowSelectionModel: [],\n  footerChildren: () => <div></div>,\n  footerPaginationPosition: \"right-left\",\n  showFooterSelectedCount: true,\n});\nconst Table = forwardRef(\n  (\n    {\n      isLoading,\n      columns,\n      rows,\n      table_id,\n      isSingleSelection,\n      isRowFreeze,\n      dataSelection,\n      CustomFooterComponent = DefaultooterComponent,\n      isRowSelectable,\n      getCellClassName,\n      checkboxSelection = true,\n      footerChildren = (\n        rowSelectionModel: GridRowSelectionModel,\n        rows: Array<any>\n      ) => <div></div>,\n      footerPaginationPosition = \"right-left\",\n      showFooterSelectedCount = true,\n    }: TableProps,\n    ref\n  ) => {\n    const [selectedRows, setSelectedRows] = useState<any>([]);\n\n    useImperativeHandle(ref, () => ({\n      removeSelection: () => {\n        setSelectedRows([]);\n      },\n      getSelectedRows: () => {\n        return rows.filter((item: any) =>\n          selectedRows?.includes(item[table_id])\n        );\n      },\n      setSelectedRows: (data: Array<any>) => {\n        setSelectedRows(data);\n      },\n    }));\n\n    function onSelectionChange(selection: any, data: any, code: string | null) {\n      if (dataSelection) {\n        dataSelection(selection, data, code);\n      }\n    }\n    let freezeArray: Array<any> = [];\n\n    return (\n      <TableContext.Provider\n        value={{\n          showFooterSelectedCount,\n          footerPaginationPosition,\n          rowSelectionModel: selectedRows,\n          rows,\n          footerChildren,\n        }}\n      >\n        <DataGrid\n          slots={{\n            loadingOverlay: LinearProgress,\n            footer: CustomFooterComponent,\n          }}\n          initialState={{\n            pagination: { paginationModel: { pageSize: 35 } },\n          }}\n          loading={isLoading}\n          getRowId={(row) => row[table_id]}\n          columns={columns.filter((col: any) => !col.hide) as GridColDef<any>[]}\n          rows={rows}\n          showCellVerticalBorder={true}\n          showColumnVerticalBorder={true}\n          checkboxSelection={checkboxSelection}\n          rowSelectionModel={selectedRows}\n          rowHeight={25}\n          columnHeaderHeight={35}\n          pageSizeOptions={[10, 20, 35, 50, 75, 100]}\n          sx={{\n            \"& .cash\": {\n              color: \"#ec4899\",\n            },\n            \"& .check\": {\n              color: \"#0891b2\",\n            },\n            \"& .approved\": {\n              color: \"green\",\n            },\n            \"& .pending\": {\n              color: \"orange\",\n            },\n            \"& .disapproved\": {\n              color: \"red\",\n            },\n            \"& .normal\": {\n              color: \"red\",\n            },\n            \"& .MuiDataGrid-row.Mui-selected:hover\": {\n              color: \"black\",\n              \"& .MuiSvgIcon-root \": {\n                fill: \"#3b82f6\",\n              },\n            },\n            \"& .hover-keyboard\": {\n              background: \"#2563eb\",\n              color: \"white\",\n              \"& .MuiSvgIcon-root \": {\n                fill: \"white\",\n              },\n            },\n            \"& .MuiDataGrid-row:hover\": {\n              background: \"#2563eb\",\n              color: \"white\",\n              \"& .MuiSvgIcon-root \": {\n                fill: \"white\",\n              },\n            },\n            \"& .MuiDataGrid-row.hover\": {\n              background: \"#2563eb\",\n              color: \"white\",\n              \"& .MuiSvgIcon-root \": {\n                fill: \"white\",\n              },\n            },\n            \"& .MuiTablePagination-root p \": {\n              padding: \"0 !important\",\n            },\n\n            ...{\n              \"& .MuiDataGrid-columnHeaders\": {\n                background: \"#64748b\",\n                color: \"white\",\n                fontSize: \"14px\",\n                // borderBottomColor: \"#38bdf8\",\n              },\n              \"& .MuiDataGrid-columnHeaderCheckbox .MuiDataGrid-columnHeaderTitleContainer .MuiSvgIcon-root \":\n                {\n                  display: isSingleSelection || isRowFreeze ? \"none\" : \"block\",\n                  fill: \"white\",\n                },\n              \"& .MuiDataGrid-columnHeaderCheckbox .MuiDataGrid-columnHeaderTitleContainer input \":\n                {\n                  display: isSingleSelection || isRowFreeze ? \"none\" : \"block\",\n                },\n            },\n            ...{\n              fontSize: 13,\n              fontWeight: 500,\n              \"& .MuiDataGrid-checkboxInput\": {\n                height: \"27px\",\n                width: \"27px\",\n              },\n              \"& .MuiDataGrid-checkboxInput svg\": {\n                height: \"20px\",\n                width: \"20px\",\n              },\n            },\n          }}\n          // onRowDoubleClick={(e, r) => {\n          //   console.log(e, r);\n          // }}\n\n          onRowSelectionModelChange={(selection) => {\n            if (isRowFreeze) {\n              if (selection.length <= 0) return;\n              freezeArray = selection;\n              if (selectedRows.includes(freezeArray[freezeArray.length - 1]))\n                return;\n\n              setSelectedRows(selection);\n\n              onSelectionChange([selection[selection.length - 1]], rows, null);\n              return;\n            }\n\n            if (!isRowFreeze && isSingleSelection) {\n              if (selectedRows && selectedRows?.length > 0) {\n                const selectionSet = new Set(selectedRows);\n                setSelectedRows(\n                  selection.filter((s: any) => !selectionSet.has(s))\n                );\n              } else {\n                setSelectedRows(selection);\n              }\n            } else {\n              setSelectedRows(selection);\n            }\n\n            onSelectionChange([selection[selection.length - 1]], rows, null);\n          }}\n          onCellKeyDown={(__: any, key: any) => {\n            const keyFinding = [\"NumpadEnter\", \"Enter\", \"Delete\", \"Backspace\"];\n            if (!keyFinding.includes(key.code)) {\n              return;\n            }\n            key.preventDefault();\n            if (key.code === \"Enter\" || key.code === \"NumpadEnter\") {\n              if (isSingleSelection && !isRowFreeze) {\n                return setSelectedRows((data: any) => {\n                  if (data && data.length > 0 && data[0] === __.rowNode.id) {\n                    onSelectionChange([], rows, key.code);\n                    return [];\n                  }\n                  onSelectionChange([__.rowNode.id], rows, key.code);\n                  return [__.rowNode.id];\n                });\n              } else {\n                setSelectedRows((data: any) => {\n                  if (\n                    data &&\n                    !isRowFreeze &&\n                    data.length > 0 &&\n                    data.includes(__.rowNode.id)\n                  ) {\n                    data = data.filter((item: any) => item !== __.rowNode.id);\n                    onSelectionChange([], rows, key.code);\n                    return data;\n                  }\n                  if (\n                    data &&\n                    isRowFreeze &&\n                    data.length > 0 &&\n                    data.includes(__.rowNode.id)\n                  ) {\n                    return data;\n                  }\n                  onSelectionChange([__.rowNode.id], rows, key.code);\n                  return [...data, __.rowNode.id];\n                });\n              }\n              return;\n            }\n            if (key.code === \"Delete\" || key.code === \"Backspace\") {\n              setSelectedRows([__.rowNode.id]);\n              return onSelectionChange([__.rowNode.id], rows, key.code);\n            }\n          }}\n          disableVirtualization\n          isRowSelectable={isRowSelectable}\n          getCellClassName={getCellClassName}\n        />\n      </TableContext.Provider>\n    );\n  }\n);\n\nexport default Table;\nfunction Pagination({\n  page,\n  onPageChange,\n  className,\n}: Pick<TablePaginationProps, \"page\" | \"onPageChange\" | \"className\">) {\n  const apiRef = useGridApiContext();\n  const pageCount = useGridSelector(apiRef, gridPageCountSelector);\n\n  return (\n    <MuiPagination\n      variant=\"outlined\"\n      color=\"primary\"\n      className={className}\n      count={pageCount}\n      page={page + 1}\n      onChange={(event, newPage) => {\n        onPageChange(event as any, newPage - 1);\n      }}\n    />\n  );\n}\n\nfunction CustomPagination(props: any) {\n  return <GridPagination ActionsComponent={Pagination} {...props} />;\n}\nfunction DefaultooterComponent(\n  props: NonNullable<GridSlotsComponentsProps[\"footer\"]>\n) {\n  const {\n    rowSelectionModel,\n    showFooterSelectedCount,\n    footerPaginationPosition,\n    footerChildren,\n    rows,\n  } = useContext(TableContext);\n  return (\n    <Box\n      sx={{\n        columnGap: \"50px\",\n        display: \"flex\",\n        width: \"100%\",\n        justifyContent: \"space-between\",\n        px: 3,\n        alignItems: \"center\",\n        flexDirection:\n          footerPaginationPosition === \"right-left\" ? \"row-reverse\" : \"row\",\n      }}\n    >\n      <CustomPagination {...props} />\n      <Box\n        sx={{\n          display: \"flex\",\n          justifyContent:\n            footerPaginationPosition === \"right-left\"\n              ? \"flex-start\"\n              : \"flex-end\",\n          flex: 1,\n          alignItems: \"center\",\n        }}\n      >\n        {showFooterSelectedCount && (\n          <div>Selected:{rowSelectionModel?.length}</div>\n        )}\n        <div>{footerChildren(rowSelectionModel, rows)}</div>\n      </Box>\n    </Box>\n  );\n}\n","import React, {\n  useReducer,\n  useState,\n  useRef,\n  createContext,\n  useContext,\n  useEffect,\n} from \"react\";\nimport {\n  TextField,\n  Button,\n  FormControl,\n  InputAdornment,\n  IconButton,\n  InputLabel,\n  OutlinedInput,\n  Modal,\n  Box,\n  Typography,\n  Select,\n  MenuItem,\n} from \"@mui/material\";\nimport { GridRowSelectionModel } from \"@mui/x-data-grid\";\nimport CustomDatePicker from \"../../../../components/DatePicker\";\nimport LoadingButton from \"@mui/lab/LoadingButton\";\nimport AddIcon from \"@mui/icons-material/Add\";\nimport SaveIcon from \"@mui/icons-material/Save\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport Swal from \"sweetalert2\";\nimport RestartAltIcon from \"@mui/icons-material/RestartAlt\";\nimport { useMutation, useQuery, UseMutateFunction } from \"react-query\";\nimport { AuthContext } from \"../../../../components/AuthContext\";\nimport NotInterestedIcon from \"@mui/icons-material/NotInterested\";\nimport CheckCircleOutlineIcon from \"@mui/icons-material/CheckCircleOutline\";\nimport { AxiosResponse } from \"axios\";\nimport { wait } from \"@testing-library/user-event/dist/utils\";\nimport useQueryModalTable from \"../../../../hooks/useQueryModalTable\";\nimport { flushSync } from \"react-dom\";\nimport Table from \"../../../../components/Table\";\nimport useMultipleComponent from \"../../../../hooks/useMultipleComponent\";\nimport {\n  codeCondfirmationAlert,\n  saveCondfirmationAlert,\n} from \"../../../../lib/confirmationAlert\";\nimport {\n  generateRandomClass,\n  keyBoardSelectionTable,\n} from \"../../../../components/ModalWithTable\";\n\ninterface ReturnCheckContextType {\n  checkCollection: Array<any>;\n  checkSelectedCollection: Array<any>;\n  accountingEntry: Array<any>;\n  LoadingCheckList: boolean;\n  addReturnCheckLoading: boolean;\n  tableSelectedCheck: React.MutableRefObject<any>;\n  tableAccountingEntryCheck: React.MutableRefObject<any>;\n  tableSelectedCheckReturn: React.MutableRefObject<any>;\n  dispatchModal: React.Dispatch<any>;\n  modalSelectedMutate: UseMutateFunction<\n    AxiosResponse<any, any>,\n    unknown,\n    any,\n    unknown\n  >;\n  getSearchReturnCheckInfoLoading: boolean;\n  modalSelectedCheckLoading: boolean;\n  debitModalCollection: Array<any>;\n  myAxios: any;\n  user: any;\n  setCheckCollection: React.Dispatch<\n    React.SetStateAction<GridRowSelectionModel>\n  >;\n  openSelectedCheckModal: boolean;\n  setOpenSelectedCheckModal: React.Dispatch<React.SetStateAction<boolean>>;\n  currentStepIndex: number;\n  fireModal: (onConfirmCallback: any) => void;\n  stateModal: any;\n  datePickerModalRef: React.RefObject<HTMLElement>;\n  setAccountingEntry: React.Dispatch<\n    React.SetStateAction<GridRowSelectionModel>\n  >;\n  handleModalInputChange: (e: any) => void;\n  LoadSelectedCheckInSelectedTable: (selectedRowValue: any) => void;\n  setCheckSelectedCollection: React.Dispatch<\n    React.SetStateAction<GridRowSelectionModel>\n  >;\n}\nconst initialState = {\n  RefNo: \"\",\n  Sub_RefNo: \"\",\n  DateReturn: new Date(),\n  Explanation: \"Returned Checks\",\n  search: \"\",\n  returnMode: \"\",\n  searchCheckList: \"\",\n};\nconst initialModalState = {\n  ModalDateReturn: new Date().toLocaleDateString(),\n  ReturnReason: \"\",\n  AccountName: \"\",\n  AccountID: \"\",\n  Amount: \"\",\n  SubAccount: \"\",\n  BranchCode: \"\",\n  IDNo: \"\",\n  Short: \"\",\n  Check_No: \"\",\n  TempID: \"\",\n  updateAmount: \"\",\n  updateAmountID: \"\",\n  depoBankName: \"\",\n  depoBankIdentity: \"\",\n  subSelectedChecks: {},\n};\n\nconst ReturnCheckContext = createContext<ReturnCheckContextType>({\n  checkCollection: [],\n  checkSelectedCollection: [],\n  accountingEntry: [],\n  LoadingCheckList: false,\n  addReturnCheckLoading: false,\n  tableSelectedCheck: { current: {} },\n  tableAccountingEntryCheck: { current: {} },\n  tableSelectedCheckReturn: { current: {} },\n  dispatchModal: () => {},\n  modalSelectedMutate: () => {},\n  getSearchReturnCheckInfoLoading: false,\n  modalSelectedCheckLoading: false,\n  debitModalCollection: [],\n  myAxios: {},\n  user: {},\n  setCheckCollection: () => {},\n  openSelectedCheckModal: false,\n  setOpenSelectedCheckModal: () => {},\n  currentStepIndex: 0,\n  fireModal: () => {},\n  stateModal: {},\n  datePickerModalRef: { current: null },\n  setAccountingEntry: () => {},\n  handleModalInputChange: () => {},\n  LoadSelectedCheckInSelectedTable: () => {},\n  setCheckSelectedCollection: () => {},\n});\nconst buttons = [\n  {\n    title: \"Selected Check\",\n    index: 0,\n  },\n  {\n    title: \"Selected Check to be Returned\",\n    index: 1,\n  },\n  {\n    title: \"Accounting Entry\",\n    index: 2,\n  },\n];\nconst modalDebitEntryColumn = [\n  {\n    field: \"CRCode\",\n    headerName: \"Code\",\n    minWidth: 140,\n  },\n  {\n    field: \"CRTitle\",\n    headerName: \"Account Name\",\n    minWidth: 300,\n    flex: 1,\n  },\n  {\n    field: \"Credit\",\n    headerName: \"Amount\",\n    minWidth: 140,\n    align: \"right\",\n  },\n  {\n    field: \"CRLoanID\",\n    headerName: \"ID No.\",\n    minWidth: 140,\n  },\n  {\n    field: \"CRLoanName\",\n    headerName: \"Identity\",\n    minWidth: 300,\n    flex: 1,\n  },\n  {\n    field: \"SubAcctCode\",\n    headerName: \"Sub Account\",\n    minWidth: 160,\n    flex: 1,\n  },\n  {\n    field: \"SubAcctName\",\n    headerName: \"Sub Account Name\",\n    minWidth: 300,\n    flex: 1,\n  },\n  {\n    field: \"TempID\",\n    headerName: \"Sub Account Name\",\n    hide: true,\n  },\n];\n\nexport const reducer = (state: any, action: any) => {\n  switch (action.type) {\n    case \"UPDATE_FIELD\":\n      return {\n        ...state,\n        [action.field]: action.value,\n      };\n    default:\n      return state;\n  }\n};\nexport default function ReturnCheck() {\n  const { ConfirmationModal, fireModal } = useConfirmation();\n  const { myAxios, user } = useContext(AuthContext);\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const [stateModal, dispatchModal] = useReducer(reducer, initialModalState);\n  const { currentStepIndex, step, goTo } = useMultipleComponent([\n    <SelectedCheck />,\n    <SelectedCheckToBeReturn />,\n    <AccountingEntry />,\n  ]);\n  const [checkCollection, setCheckCollection] = useState<GridRowSelectionModel>(\n    []\n  );\n  const [checkSelectedCollection, setCheckSelectedCollection] =\n    useState<GridRowSelectionModel>([]);\n  const [accountingEntry, setAccountingEntry] = useState<GridRowSelectionModel>(\n    []\n  );\n  const [debitModalCollection, setDebitModalCollection] =\n    useState<GridRowSelectionModel>([]);\n  const [openSelectedCheckModal, setOpenSelectedCheckModal] = useState(false);\n  const datePickerRef = useRef<HTMLElement>(null);\n  const reloadIDButtonRef = useRef<HTMLButtonElement>(null);\n  const datePickerModalRef = useRef<HTMLElement>(null);\n  const explanationInputRef = useRef<HTMLInputElement>(null);\n  const submitButton = useRef<HTMLButtonElement>(null);\n  const searchReturnChecks = useRef<HTMLInputElement>(null);\n  const tableSelectedCheck = useRef<any>(null);\n  const tableAccountingEntryCheck = useRef<any>(null);\n  const tableSelectedCheckReturn = useRef<any>(null);\n\n  const { isLoading: LoadingReturnCheckLoading, refetch: RefetchReturnCheck } =\n    useQuery({\n      queryKey: \"return-check-id\",\n      queryFn: async () =>\n        await myAxios.get(`/task/accounting/get-new-return-check-id`, {\n          headers: {\n            Authorization: `Bearer ${user?.accessToken}`,\n          },\n        }),\n      refetchOnWindowFocus: false,\n      onSuccess: (data) => {\n        const response = data as any;\n    \n        dispatch({\n          type: \"UPDATE_FIELD\",\n          field: \"RefNo\",\n          value: response.data.returnCheckID[0].return_check_id,\n        });\n        dispatch({\n          type: \"UPDATE_FIELD\",\n          field: \"Sub_RefNo\",\n          value: response.data.returnCheckID[0].return_check_id,\n        });\n      },\n    });\n  const { isLoading: LoadingCheckList, refetch: refetchCheckList } = useQuery({\n    queryKey: \"check-list\",\n    queryFn: async () =>\n      await myAxios.get(\n        `/task/accounting/get-check-list?checkListSearch=${state.searchCheckList}`,\n        {\n          headers: {\n            Authorization: `Bearer ${user?.accessToken}`,\n          },\n        }\n      ),\n    onSuccess: (res) => {\n      const response = res as any;\n      setCheckCollection(response.data.checkList);\n    },\n  });\n  const { isLoading: modalSelectedCheckLoading, mutate: modalSelectedMutate } =\n    useMutation({\n      mutationKey: \"selected-check-modal\",\n      mutationFn: async (variables: any) =>\n        myAxios.post(\n          \"/task/accounting/get-modal-return-check-data\",\n          variables,\n          {\n            headers: {\n              Authorization: `Bearer ${user?.accessToken}`,\n            },\n          }\n        ),\n      onSuccess: (res) => {\n        const response = res as any;\n        const credit = response.data.credit[0];\n        const debit = response.data.debit[0];\n        console.log(response)\n        setDebitModalCollection(response.data.debit);\n\n        dispatchModal({\n          type: \"UPDATE_FIELD\",\n          field: \"AccountName\",\n          value: credit.Acct_Title,\n        });\n        dispatchModal({\n          type: \"UPDATE_FIELD\",\n          field: \"AccountID\",\n          value: credit.Account_ID,\n        });\n        dispatchModal({\n          type: \"UPDATE_FIELD\",\n          field: \"IDNo\",\n          value: debit.ID_No,\n        });\n        dispatchModal({\n          type: \"UPDATE_FIELD\",\n          field: \"Short\",\n          value: debit.CRLoanName,\n        });\n\n        dispatchModal({\n          type: \"UPDATE_FIELD\",\n          field: \"depoBankName\",\n          value: credit.IDNo,\n        });\n        dispatchModal({\n          type: \"UPDATE_FIELD\",\n          field: \"depoBankIdentity\",\n          value:credit.Identity  ,\n        });\n\n        dispatchModal({\n          type: \"UPDATE_FIELD\",\n          field: \"Short\",\n          value: debit.CRLoanName,\n        });\n        dispatchModal({\n          type: \"UPDATE_FIELD\",\n          field: \"Short\",\n          value: debit.CRLoanName,\n        });\n\n        dispatchModal({\n          type: \"UPDATE_FIELD\",\n          field: \"SubAccount\",\n          value: debit.SubAcctName,\n        });\n        dispatchModal({\n          type: \"UPDATE_FIELD\",\n          field: \"BranchCode\",\n          value: debit.SubAcctCode,\n        });\n        dispatchModal({\n          type: \"UPDATE_FIELD\",\n          field: \"Amount\",\n          value: response.data.debit\n            .reduce(\n              (sum: any, obj: any) =>\n                sum + parseFloat(obj.Credit.replace(/,/g, \"\")),\n              0\n            )\n            .toLocaleString(\"en-US\", {\n              style: \"decimal\",\n              minimumFractionDigits: 2,\n              maximumFractionDigits: 2,\n            }),\n        });\n        setOpenSelectedCheckModal(true);\n      },\n    });\n  const {\n    isLoading: getSearchReturnCheckInfoLoading,\n    mutate: getSearchReturnCheckInfoMutate,\n  } = useMutation({\n    mutationKey: \"selected-search-return-check\",\n    mutationFn: async (variables: any) =>\n      myAxios.post(\n        \"/task/accounting/get-search-selected-checks-information\",\n        variables,\n        {\n          headers: {\n            Authorization: `Bearer ${user?.accessToken}`,\n          },\n        }\n      ),\n    onSuccess: (res) => {\n      const response = res as any;\n      const selectedRow = response.data.selected[0];\n\n      const selectedChecks = response.data.selected.map((itm: any) => {\n        itm.Amount = parseFloat(\n          itm.Amount.toString().replace(/,/g, \"\")\n        ).toLocaleString(\"en-US\", {\n          style: \"decimal\",\n          minimumFractionDigits: 2,\n          maximumFractionDigits: 2,\n        });\n        return itm;\n      });\n      setAccountingEntry(response.data.accountingEntry);\n      setCheckSelectedCollection(selectedChecks);\n      setNewStateValue(dispatch, {\n        ...state,\n        ...{\n          RefNo: selectedRow.RC_No,\n          Sub_RefNo: selectedRow.RC_No,\n          DateReturn: selectedRow.RC_Date,\n          Explanation: selectedRow.Explanation,\n          returnMode: \"edit\",\n        },\n      });\n    },\n  });\n  const { isLoading: addReturnCheckLoading, mutate: addReturnCheckMutate } =\n    useMutation({\n      mutationKey: \"selected-check-modal\",\n      mutationFn: async (variables: any) =>\n        myAxios.post(\"/task/accounting/add-return-check\", variables, {\n          headers: {\n            Authorization: `Bearer ${user?.accessToken}`,\n          },\n        }),\n      onSuccess: (res) => {\n        const response = res as any;\n\n        if (response.data.isClearableError) {\n          RefetchReturnCheck();\n          refetchCheckList();\n          setCheckSelectedCollection([]);\n          setAccountingEntry([]);\n          dispatch({\n            type: \"UPDATE_FIELD\",\n            field: \"returnMode\",\n            value: \"\",\n          });\n          return Swal.fire({\n            position: \"center\",\n            icon: \"success\",\n            title: response.data.message,\n            timer: 1500,\n          });\n        }\n\n        return Swal.fire({\n          position: \"center\",\n          icon: \"warning\",\n          title: response.data.message,\n          timer: 1500,\n        });\n      },\n    });\n  const {\n    ModalComponent: ReturnChecksModal,\n    openModal: openReturnChecksModal,\n    isLoading: isLoadingReturnChecksModal,\n    closeModal: closeReturnChecksModal,\n  } = useQueryModalTable({\n    link: {\n      url: \"/task/accounting/search-return-checks\",\n      queryUrlName: \"searchReturnChecks\",\n    },\n    columns: [\n      { field: \"RC_Date\", headerName: \"Date\", width: 150 },\n      { field: \"RC_No\", headerName: \"Slip Code\", width: 170 },\n      {\n        field: \"Explanation\",\n        headerName: \"Bank Account\",\n        flex: 1,\n      },\n    ],\n    queryKey: \"return-checks-search\",\n    uniqueId: \"RC_No\",\n    responseDataKey: \"returnCheckSearch\",\n    onSelected: (selectedRowData) => {\n      dispatch({\n        type: \"UPDATE_FIELD\",\n        field: \"returnMode\",\n        value: \"edit\",\n      });\n      getSearchReturnCheckInfoMutate({\n        RC_No: selectedRowData[0].RC_No,\n      });\n      closeReturnChecksModal();\n    },\n    onCloseFunction: (value: any) => {\n      dispatch({ type: \"UPDATE_FIELD\", field: \"search\", value });\n    },\n    searchRef: searchReturnChecks,\n  });\n\n  const handleInputChange = (e: any) => {\n    const { name, value } = e.target;\n    dispatch({ type: \"UPDATE_FIELD\", field: name, value });\n  };\n  const handleModalInputChange = (e: any) => {\n    const { name, value } = e.target;\n    dispatchModal({ type: \"UPDATE_FIELD\", field: name, value });\n  };\n  function handleOnSave(e: any) {\n    e.preventDefault();\n\n    if (state.Explanation === \"\") {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: \"Please provide an explanation\",\n        timer: 1500,\n      }).then((result) => {\n        wait(350).then(() => {\n          explanationInputRef.current?.focus();\n        });\n      });\n    }\n    if (checkSelectedCollection.length <= 0) {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: \"Please provide return entry!\",\n        timer: 1500,\n      });\n    }\n    const credit = accountingEntry\n      .reduce(\n        (sum: any, obj: any) => sum + parseFloat(obj.Credit.replace(/,/g, \"\")),\n        0\n      )\n      .toLocaleString(\"en-US\", {\n        style: \"decimal\",\n        minimumFractionDigits: 2,\n        maximumFractionDigits: 2,\n      });\n    const debit = accountingEntry\n      .reduce(\n        (sum: any, obj: any) => sum + parseFloat(obj.Debit.replace(/,/g, \"\")),\n        0\n      )\n      .toLocaleString(\"en-US\", {\n        style: \"decimal\",\n        minimumFractionDigits: 2,\n        maximumFractionDigits: 2,\n      });\n\n    if (credit !== debit) {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: \"Accounting entry must be equal in Debit and Credit amount!\",\n        timer: 1500,\n      }).then(() => {\n        wait(300).then(() => {\n          goTo(3);\n        });\n      });\n    }\n   \n    if (state.returnMode === \"edit\") {\n      codeCondfirmationAlert({\n        isUpdate: true,\n        cb: (userCodeConfirmation) => {\n          addReturnCheckMutate({\n            selected: checkSelectedCollection,\n            accountingEntry,\n            RefNo: state.RefNo,\n            Sub_RefNo: state.Sub_RefNo,\n            DateReturn: state.DateReturn,\n            Explanation: state.Explanation,\n            ModalDateReturn: stateModal.ModalDateReturn,\n            ReturnReason: stateModal.ReturnReason,\n            AccountName: stateModal.AccountName,\n            AccountID: stateModal.AccountID,\n            Amount: stateModal.Amount,\n            SubAccount: stateModal.SubAccount,\n            BranchCode: stateModal.BranchCode,\n            IDNo: stateModal.IDNo,\n            Short: stateModal.Short,\n            Check_No: stateModal.Check_No,\n            isUpdated: state.returnMode === \"edit\",\n            userCodeConfirmation,\n          });\n        },\n      });\n    } else {\n      saveCondfirmationAlert({\n        isConfirm: () => {\n          addReturnCheckMutate({\n            selected: checkSelectedCollection,\n            accountingEntry,\n            RefNo: state.RefNo,\n            Sub_RefNo: state.Sub_RefNo,\n            DateReturn: state.DateReturn,\n            Explanation: state.Explanation,\n            ModalDateReturn: stateModal.ModalDateReturn,\n            ReturnReason: stateModal.ReturnReason,\n            AccountName: stateModal.AccountName,\n            AccountID: stateModal.AccountID,\n            Amount: stateModal.Amount,\n            SubAccount: stateModal.SubAccount,\n            BranchCode: stateModal.BranchCode,\n            IDNo: stateModal.IDNo,\n            Short: stateModal.Short,\n            Check_No: stateModal.Check_No,\n            isUpdated: state.returnMode === \"edit\",\n          });\n        },\n      });\n    }\n  }\n  function LoadSelectedCheckInSelectedTable(selectedRowValue: any) {\n    const selectedCheck = {\n      Temp_OR: `${selectedRowValue.Official_Receipt}${(\n        checkCollection.length + 1\n      )\n        .toString()\n        .padStart(2, \"0\")}`,\n      OR_NO: selectedRowValue.Official_Receipt,\n      OR_Date: selectedRowValue.Date_OR,\n      DepoSlip: selectedRowValue.DepoSlip,\n      DepoDate: selectedRowValue.DepoDate,\n      Check_No: selectedRowValue.Check_No,\n      Check_Date: selectedRowValue.Check_Date,\n      Amount: selectedRowValue.Amount,\n      Bank: selectedRowValue.Bank,\n      Bank_Account: selectedRowValue.BankAccount,\n      Reason: stateModal.ReturnReason,\n      Return_Date: new Date(stateModal.ModalDateReturn).toLocaleDateString(\n        \"en-US\",\n        {\n          month: \"2-digit\",\n          day: \"2-digit\",\n          year: \"numeric\",\n        }\n      ),\n      TempID: selectedRowValue.TempID,\n    };\n    setCheckSelectedCollection((d: any) => {\n      return [...d, selectedCheck];\n    });\n  }\n\n  const handleAccept = () => {\n    const totalDebit = debitModalCollection\n      .reduce(\n        (sum: any, obj: any) => sum + parseFloat(obj.Credit.replace(/,/g, \"\")),\n        0\n      )\n      .toLocaleString(\"en-US\", {\n        style: \"decimal\",\n        minimumFractionDigits: 2,\n        maximumFractionDigits: 2,\n      });\n\n    if (stateModal.Amount !== totalDebit) {\n      flushSync(() => {\n        setOpenSelectedCheckModal(false);\n      });\n      return Swal.fire({\n        text: \"Debit must eequal to Credit!\",\n        icon: \"warning\",\n        showCancelButton: false,\n        timer: 1500,\n        position: \"center\",\n      });\n    }\n    if (tableSelectedCheckReturn.current?.getSelectedRows()) {\n      const selectRow = tableSelectedCheckReturn.current?.getSelectedRows();\n      const selected = selectRow[selectRow.length - 1];\n      setCheckSelectedCollection((d) => {\n        d = d.filter((item: any) => item.TempID !== selected.TempID);\n        return d;\n      });\n      setAccountingEntry((d) => {\n        d = d.filter((item: any) => item.Check_No !== selected.Check_No);\n        return d;\n      });\n\n      LoadSelectedCheckInSelectedTable({\n        ...selected,\n        Official_Receipt: selected.OR_NO,\n        Date_OR: selected.OR_Date,\n        BankAccount: selected.Bank_Account,\n      });\n    } else {\n      const selectRow = tableSelectedCheck.current?.getSelectedRows();\n      const selected = selectRow[selectRow.length - 1];\n\n      LoadSelectedCheckInSelectedTable(selected);\n    }\n\n    function generateTempId(array: Array<any>) {\n      const lastItem =\n        array.length > 0 ? array[array.length - 1].TempID : \"000\";\n      const numericPart = (parseInt(lastItem.match(/\\d+/)[0]) + 1)\n        .toString()\n        .padStart(3, \"0\");\n      return numericPart;\n    }\n    //debit\n    debitModalCollection.forEach((item: any) => {\n      setAccountingEntry((d: any) => {\n        return [\n          ...d,\n          {\n            Code: item.CRCode,\n            AccountName: item.CRTitle,\n            Debit: item.Credit,\n            Credit: \"0.00\",\n            IDNo: item.ID_No,\n            Identity: item.Short,\n            SubAcct: item.SubAcctCode,\n            SubAcctName: item.SubAcctName,\n            Check_No: stateModal.subSelectedChecks.Check_No,\n            Bank: stateModal.subSelectedChecks.Bank,\n            Check_Date: stateModal.subSelectedChecks.Check_Date,\n            Check_Return: stateModal.ModalDateReturn,\n            Check_Reason: stateModal.ReturnReason,\n            PK: stateModal.subSelectedChecks.Check_No,\n            DepoDate: stateModal.subSelectedChecks.DepoDate,\n            Date_Collection: stateModal.subSelectedChecks.Date_Collection,\n            TempID: generateTempId(d),\n          },\n        ];\n      });\n    });\n\n    //cash\n    console.log(stateModal)\n    setAccountingEntry((d: any) => {\n      d = [\n        ...d,\n        {\n          Code: stateModal.AccountID,\n          AccountName: stateModal.AccountName,\n          Debit: \"0.00\",\n          Credit: stateModal.Amount,\n          IDNo: stateModal.depoBankName,\n          Identity: stateModal.depoBankIdentity,\n          SubAcct: stateModal.BranchCode,\n          SubAcctName: stateModal.SubAccount,\n          Check_No: stateModal.subSelectedChecks.Check_No,\n          Bank: stateModal.subSelectedChecks.Bank,\n          Check_Date: stateModal.subSelectedChecks.Check_Date,\n          Check_Return: stateModal.ModalDateReturn,\n          Check_Reason: stateModal.ReturnReason,\n          PK: stateModal.subSelectedChecks.Check_No,\n          DepoDate: stateModal.subSelectedChecks.DepoDate,\n          Date_Collection: stateModal.subSelectedChecks.Date_Collection,\n          TempID: generateTempId(d),\n        },\n      ];\n      return d;\n    });\n\n    setOpenSelectedCheckModal(false);\n    tableSelectedCheck.current?.removeSelection();\n    tableSelectedCheckReturn.current?.removeSelection();\n  };\n\n  const isFieldDisable = state.returnMode === \"\";\n\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        flexDirection: \"column\",\n        width: \"100%\",\n        height: \"100%\",\n        flex: 1,\n      }}\n    >\n      <div\n        style={{\n          display: \"flex\",\n          alignItems: \"center\",\n          columnGap: \"5px\",\n        }}\n      >\n        {isLoadingReturnChecksModal ? (\n          <LoadingButton loading={isLoadingReturnChecksModal} />\n        ) : (\n          <TextField\n            label=\"Search\"\n            size=\"small\"\n            name=\"search\"\n            value={state.search}\n            onChange={handleInputChange}\n            onKeyDown={(e) => {\n              if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n                e.preventDefault();\n                return openReturnChecksModal(\n                  (e.target as HTMLInputElement).value\n                );\n              }\n            }}\n            InputProps={{\n              style: { height: \"27px\", fontSize: \"14px\" },\n            }}\n            sx={{\n              width: \"300px\",\n              height: \"27px\",\n              \".MuiFormLabel-root\": { fontSize: \"14px\" },\n              \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n            }}\n          />\n        )}\n\n        {state.returnMode === \"\" && (\n          <Button\n            sx={{\n              height: \"30px\",\n              fontSize: \"11px\",\n            }}\n            variant=\"contained\"\n            startIcon={<AddIcon sx={{ width: 15, height: 15 }} />}\n            id=\"entry-header-save-button\"\n            onClick={() => {\n              dispatch({\n                type: \"UPDATE_FIELD\",\n                field: \"returnMode\",\n                value: \"add\",\n              });\n            }}\n          >\n            New\n          </Button>\n        )}\n        <LoadingButton\n          sx={{\n            height: \"30px\",\n            fontSize: \"11px\",\n          }}\n          id=\"save-entry-header\"\n          color=\"primary\"\n          variant=\"contained\"\n          type=\"submit\"\n          onClick={handleOnSave}\n          disabled={state.returnMode === \"\"}\n          startIcon={<SaveIcon sx={{ width: 15, height: 15 }} />}\n          loading={addReturnCheckLoading}\n        >\n          {state.returnMode === \"edit\" ? \"Update\" : \"Save\"}\n        </LoadingButton>\n        {state.returnMode !== \"\" && (\n          <Button\n            sx={{\n              height: \"30px\",\n              fontSize: \"11px\",\n            }}\n            variant=\"contained\"\n            startIcon={<CloseIcon sx={{ width: 15, height: 15 }} />}\n            color=\"error\"\n            onClick={() => {\n              Swal.fire({\n                title: \"Are you sure?\",\n                text: \"You won't be able to revert this!\",\n                icon: \"warning\",\n                showCancelButton: true,\n                confirmButtonColor: \"#3085d6\",\n                cancelButtonColor: \"#d33\",\n                confirmButtonText: \"Yes, cancel it!\",\n              }).then((result) => {\n                if (result.isConfirmed) {\n                  refetchCheckList();\n                  setCheckSelectedCollection([]);\n                  setAccountingEntry([]);\n                  dispatch({\n                    type: \"UPDATE_FIELD\",\n                    field: \"returnMode\",\n                    value: \"\",\n                  });\n                  setNewStateValue(dispatch, initialState);\n                  RefetchReturnCheck();\n                }\n              });\n            }}\n          >\n            Cancel\n          </Button>\n        )}\n      </div>\n      <br />\n      <form\n        onKeyDown={(e) => {\n          if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n            e.preventDefault();\n            return;\n          }\n        }}\n        style={{\n          display: \"flex\",\n          gap: \"10px\",\n        }}\n      >\n        {LoadingReturnCheckLoading ? (\n          <LoadingButton loading={LoadingReturnCheckLoading} />\n        ) : (\n          <FormControl\n            sx={{\n              width: \"200px\",\n              \".MuiFormLabel-root\": {\n                fontSize: \"14px\",\n                background: \"white\",\n                zIndex: 99,\n                padding: \"0 3px\",\n              },\n              \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n            }}\n            variant=\"outlined\"\n            size=\"small\"\n            disabled={isFieldDisable}\n          >\n            <InputLabel htmlFor=\"return-check-id-field\">Ref. No.</InputLabel>\n            <OutlinedInput\n              sx={{\n                height: \"27px\",\n                fontSize: \"14px\",\n              }}\n              // inputRef={checkBankRef}\n              disabled={isFieldDisable}\n              fullWidth\n              label=\"Ref. No.\"\n              name=\"RefNo\"\n              value={state.RefNo}\n              onChange={handleInputChange}\n              onKeyDown={(e) => {\n                if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n                  return handleOnSave(e);\n                }\n              }}\n              readOnly={user?.department !== \"UCSMI\"}\n              id=\"return-check-id-field\"\n              endAdornment={\n                <InputAdornment position=\"end\">\n                  <IconButton\n                    ref={reloadIDButtonRef}\n                    disabled={isFieldDisable}\n                    aria-label=\"search-client\"\n                    color=\"secondary\"\n                    edge=\"end\"\n                    onClick={() => {\n                      RefetchReturnCheck();\n                    }}\n                  >\n                    <RestartAltIcon />\n                  </IconButton>\n                </InputAdornment>\n              }\n            />\n          </FormControl>\n        )}\n        <CustomDatePicker\n          disabled={isFieldDisable}\n          label=\"Date Returned\"\n          onChange={(value: any) => {\n            dispatch({\n              type: \"UPDATE_FIELD\",\n              field: \"DateReturn\",\n              value: value,\n            });\n          }}\n          value={new Date(state.DateReturn)}\n          onKeyDown={(e: any) => {\n            if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n              const timeout = setTimeout(() => {\n                datePickerRef.current?.querySelector(\"button\")?.click();\n                clearTimeout(timeout);\n              }, 150);\n            }\n          }}\n          textField={{\n            InputLabelProps: {\n              style: {\n                fontSize: \"14px\",\n              },\n            },\n            InputProps: {\n              style: { height: \"27px\", fontSize: \"14px\" },\n            },\n          }}\n          datePickerRef={datePickerRef}\n        />\n        <TextField\n          disabled={isFieldDisable}\n          fullWidth\n          label=\"Explanation\"\n          size=\"small\"\n          name=\"Explanation\"\n          value={state.Explanation}\n          onChange={handleInputChange}\n          onKeyDown={(e: any) => {\n            if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n              return;\n            }\n          }}\n          InputProps={{\n            style: { height: \"27px\", fontSize: \"14px\" },\n            readOnly: true,\n          }}\n          sx={{\n            flex: 1,\n            \".MuiFormLabel-root\": { fontSize: \"14px\" },\n            \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n          }}\n          inputRef={explanationInputRef}\n        />\n        <button\n          ref={submitButton}\n          style={{ display: \"none\" }}\n          type=\"submit\"\n        ></button>\n      </form>\n      <br />\n      <div\n        style={{\n          display: \"flex\",\n          justifyContent: \"space-between\",\n          alignItems: \"center\",\n        }}\n      >\n        <div>\n          {buttons.map((item, idx) => {\n            return (\n              <button\n                key={idx}\n                style={{\n                  border: \"none\",\n                  outline: \"none\",\n                  backgroundColor: \"rgba(51, 51, 51, 0.05)\",\n                  borderWidth: \"0\",\n                  color: currentStepIndex === idx ? \"#7e22ce\" : \"#333333\",\n                  cursor: \"pointer\",\n                  display: \"inline-block\",\n                  fontFamily: `\"Haas Grot Text R Web\", \"Helvetica Neue\", Helvetica, Arial, sans-serif`,\n                  fontSize: \"14px\",\n                  fontWeight: \"500\",\n                  lineHeight: \"20px\",\n                  listStyle: \"none\",\n                  margin: \"0\",\n                  padding: \"10px 12px\",\n                  textAlign: \"center\",\n                  transition: \"all 200ms\",\n                  verticalAlign: \"baseline\",\n                  whiteSpace: \"nowrap\",\n                  userSelect: \"none\",\n                  touchAction: \"manipulation\",\n                  position: \"relative\",\n                  overflow: \"hidden\",\n                }}\n                onClick={() => goTo(idx)}\n              >\n                <span\n                  style={{\n                    position: \"absolute\",\n                    top: 0,\n                    bottom: 0,\n                    left: 0,\n                    right: 0,\n                    background: \"rgba(206, 214, 211, 0.18)\",\n                    transition: \"all 200ms\",\n                    transform: slideAnimation(currentStepIndex, idx),\n                  }}\n                ></span>\n                {item.title}\n              </button>\n            );\n          })}\n        </div>\n        <div>\n          Total Amount:{\" \"}\n          <strong>\n            {accountingEntry\n              .reduce(\n                (sum: any, obj: any) =>\n                  sum + parseFloat(obj.Credit.replace(/,/g, \"\")),\n                0\n              )\n              .toLocaleString(\"en-US\", {\n                style: \"decimal\",\n                minimumFractionDigits: 2,\n                maximumFractionDigits: 2,\n              })}\n          </strong>\n        </div>\n      </div>\n      <br />\n      <ReturnCheckContext.Provider\n        value={{\n          checkCollection,\n          checkSelectedCollection,\n          accountingEntry,\n          LoadingCheckList,\n          addReturnCheckLoading,\n          tableSelectedCheck,\n          dispatchModal,\n          modalSelectedMutate,\n          getSearchReturnCheckInfoLoading,\n          debitModalCollection,\n          tableAccountingEntryCheck,\n          tableSelectedCheckReturn,\n          modalSelectedCheckLoading,\n          myAxios,\n          user,\n          setCheckCollection,\n          openSelectedCheckModal,\n          setOpenSelectedCheckModal,\n          currentStepIndex,\n          fireModal,\n          stateModal,\n          datePickerModalRef,\n          setAccountingEntry,\n          handleModalInputChange,\n          LoadSelectedCheckInSelectedTable,\n          setCheckSelectedCollection,\n        }}\n      >\n        <div\n          style={{\n            display: \"flex\",\n            flexDirection: \"column\",\n            flex: 1,\n          }}\n          id=\"container\"\n        >\n          {step}\n          {ReturnChecksModal}\n          <Modal\n            open={openSelectedCheckModal}\n            onClose={() => {\n              setOpenSelectedCheckModal(false);\n              tableSelectedCheck.current?.removeSelection();\n              tableSelectedCheckReturn.current?.removeSelection();\n            }}\n            aria-labelledby=\"modal-modal-title\"\n            aria-describedby=\"modal-modal-description\"\n            onKeyDown={(e) => {\n              if (\n                currentStepIndex === 1 &&\n                (e.code === \"Backspace\" || e.code === \"Delete\")\n              ) {\n                setOpenSelectedCheckModal(false);\n\n                fireModal({\n                  onConfirmCallback: () => {\n                    setCheckSelectedCollection((d) =>\n                      d.filter((itm: any) => {\n                        return (\n                          itm.TempID.toString() !== stateModal.TempID.toString()\n                        );\n                      })\n                    );\n                    setAccountingEntry((d) => {\n                      return d.filter((itm: any) => {\n                        return (\n                          itm.Check_No.split(\"-\")[0] !==\n                          stateModal.Check_No.toString()\n                        );\n                      });\n                    });\n                  },\n\n                  onCancelCallback: () => {\n                    setOpenSelectedCheckModal(false);\n                    tableSelectedCheck.current?.removeSelection();\n                    tableSelectedCheckReturn.current?.removeSelection();\n                  },\n                });\n              }\n              if (\n                currentStepIndex === 0 &&\n                (e.code === \"Enter\" || e.code === \"NumpadEnter\")\n              ) {\n                handleAccept();\n              }\n            }}\n          >\n            <Box\n              sx={{\n                position: \"absolute\" as \"absolute\",\n                top: \"50%\",\n                left: \"50%\",\n                transform: \"translate(-50%, -50%)\",\n                width: \"80%\",\n                bgcolor: \"background.paper\",\n                p: 3,\n                boxSizing: \"border-box\",\n              }}\n            >\n              <IconButton\n                style={{\n                  position: \"absolute\",\n                  top: \"10px\",\n                  right: \"10px\",\n                }}\n                // disabled={!addNew}\n                aria-label=\"search-client\"\n                onClick={() => {\n                  setOpenSelectedCheckModal(false);\n                  tableSelectedCheck.current?.removeSelection();\n                  tableSelectedCheckReturn.current?.removeSelection();\n                  dispatchModal({\n                    type: \"UPDATE_FIELD\",\n                    field: \"TempID\",\n                    value: \"\",\n                  });\n                  dispatchModal({\n                    type: \"UPDATE_FIELD\",\n                    field: \"subSelectedChecks\",\n                    value: {},\n                  });\n                }}\n              >\n                <CloseIcon />\n              </IconButton>\n              <Typography id=\"modal-modal-title\" variant=\"body1\" component=\"h2\">\n                Return Detail and Accounting Entry (Check No.:\n                <strong>{stateModal.Check_No}</strong>)\n              </Typography>\n              <fieldset\n                style={{\n                  display: \"flex\",\n                  columnGap: \"10px\",\n                  padding: \"10px\",\n                  border: \"1px solid #cbd5e1\",\n                  borderRadius: \"5px\",\n                  marginTop: \"20px\",\n                }}\n              >\n                <legend style={{ fontSize: \"14px\" }}>Return Detail</legend>\n                <FormControl\n                  size=\"small\"\n                  variant=\"outlined\"\n                  fullWidth\n                  sx={{\n                    \".MuiFormLabel-root\": {\n                      fontSize: \"14px\",\n                      background: \"white\",\n                      zIndex: 99,\n                      padding: \"0 3px\",\n                    },\n                    \".MuiFormLabel-root[data-shrink=false]\": { top: \"-1px\" },\n                  }}\n                >\n                  <InputLabel id=\"label-selection-reason\">\n                    Return Reason\n                  </InputLabel>\n                  <Select\n                    labelId=\"label-selection-reason\"\n                    value={stateModal.ReturnReason}\n                    name=\"ReturnReason\"\n                    onChange={handleModalInputChange}\n                    autoWidth\n                    sx={{\n                      height: \"27px\",\n                      fontSize: \"14px\",\n                    }}\n                  >\n                    <MenuItem value=\"DAIF\">DAIF</MenuItem>\n                    <MenuItem value={\"DAUD\"}>DAUD</MenuItem>\n                    <MenuItem value={\"AC\"}>ACCOUNT CLOSED</MenuItem>\n                    <MenuItem value={\"SPO\"}>SPO</MenuItem>\n                    <MenuItem value={\"SD\"}>SIGNATURE DIFFERS</MenuItem>\n                  </Select>\n                </FormControl>\n                <CustomDatePicker\n                  fullWidth={true}\n                  label=\"Date Returned\"\n                  onChange={(value: any) => {\n                    dispatchModal({\n                      type: \"UPDATE_FIELD\",\n                      field: \"ModalDateReturn\",\n                      value: value.toLocaleDateString(),\n                    });\n                  }}\n                  value={new Date(stateModal.ModalDateReturn)}\n                  onKeyDown={(e: any) => {\n                    if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n                      const timeout = setTimeout(() => {\n                        datePickerModalRef.current\n                          ?.querySelector(\"button\")\n                          ?.click();\n                        clearTimeout(timeout);\n                      }, 150);\n                    }\n                  }}\n                  datePickerRef={datePickerModalRef}\n                  textField={{\n                    InputLabelProps: {\n                      style: {\n                        fontSize: \"14px\",\n                      },\n                    },\n                    InputProps: {\n                      style: { height: \"27px\", fontSize: \"14px\" },\n                    },\n                  }}\n                />\n              </fieldset>\n              <fieldset\n                style={{\n                  display: \"flex\",\n                  columnGap: \"10px\",\n                  padding: \"10px\",\n                  border: \"1px solid #cbd5e1\",\n                  borderRadius: \"5px\",\n                  marginTop: \"5px\",\n                }}\n              >\n                <legend style={{ fontSize: \"14px\" }}>Credit Entry</legend>\n                <div\n                  style={{\n                    display: \"flex\",\n                    gap: \"10px\",\n                    width: \"100%\",\n                  }}\n                >\n                  <TextField\n                    size=\"small\"\n                    label=\"Account Name\"\n                    name=\"AccountName\"\n                    value={stateModal.Short}\n                    onChange={handleModalInputChange}\n                    InputProps={{\n                      readOnly: true,\n                      style: { height: \"27px\", fontSize: \"14px\" },\n                    }}\n                    sx={{\n                      flex: 1,\n                      \".MuiFormLabel-root\": { fontSize: \"14px\" },\n                      \".MuiFormLabel-root[data-shrink=false]\": { top: \"-1px\" },\n                    }}\n                  />\n                  <TextField\n                    size=\"small\"\n                    label=\"Account ID\"\n                    name=\"AccountID\"\n                    value={stateModal.AccountID}\n                    onChange={handleModalInputChange}\n                    InputProps={{\n                      readOnly: true,\n                      style: {\n                        height: \"27px\",\n                        fontSize: \"14px\",\n                        width: \"200px\",\n                      },\n                    }}\n                    sx={{\n                      \".MuiFormLabel-root\": { fontSize: \"14px\" },\n                      \".MuiFormLabel-root[data-shrink=false]\": { top: \"-1px\" },\n                    }}\n                  />\n                  <TextField\n                    size=\"small\"\n                    label=\"Amount\"\n                    name=\"Amount\"\n                    value={stateModal.Amount}\n                    onChange={handleModalInputChange}\n                    InputProps={{\n                      readOnly: true,\n                      style: {\n                        height: \"27px\",\n                        fontSize: \"14px\",\n                        width: \"200px\",\n                      },\n                    }}\n                    sx={{\n                      \".MuiFormLabel-root\": { fontSize: \"14px\" },\n                      \".MuiFormLabel-root[data-shrink=false]\": { top: \"-1px\" },\n                    }}\n                  />\n                  <TextField\n                    size=\"small\"\n                    label=\"Sub Account\"\n                    name=\"SubAccount\"\n                    value={stateModal.SubAccount}\n                    onChange={handleModalInputChange}\n                    InputProps={{\n                      readOnly: true,\n                      style: {\n                        height: \"27px\",\n                        fontSize: \"14px\",\n                        width: \"200px\",\n                      },\n                    }}\n                    sx={{\n                      \".MuiFormLabel-root\": { fontSize: \"14px\" },\n                      \".MuiFormLabel-root[data-shrink=false]\": { top: \"-1px\" },\n                    }}\n                  />\n                </div>\n              </fieldset>\n              <fieldset\n                style={{\n                  display: \"flex\",\n                  columnGap: \"10px\",\n                  border: \"1px solid #cbd5e1\",\n                  borderRadius: \"5px\",\n                  marginTop: \"5px\",\n                }}\n              >\n                <legend style={{ fontSize: \"14px\" }}>Debit Entry</legend>\n                <div\n                  style={{\n                    marginTop: \"10px\",\n                    width: \"100%\",\n                    position: \"relative\",\n                    height: \"300px\",\n                  }}\n                >\n                  <div\n                    style={{\n                      marginTop: \"10px\",\n                      width: \"100%\",\n                      position: \"relative\",\n                    }}\n                  >\n                    <Box\n                      style={{\n                        height: \"300px\",\n                        width: \"100%\",\n                        overflowX: \"scroll\",\n                        position: \"absolute\",\n                      }}\n                    >\n                      <Table\n                        isLoading={modalSelectedCheckLoading}\n                        columns={modalDebitEntryColumn}\n                        rows={debitModalCollection}\n                        table_id={\"TempID\"}\n                        isSingleSelection={true}\n                        isRowFreeze={true}\n                        checkboxSelection={false}\n                        footerChildren={() => <DebitFooterComponent />}\n                        footerPaginationPosition=\"left-right\"\n                        showFooterSelectedCount={false}\n                      />\n                    </Box>\n                  </div>\n                </div>\n              </fieldset>\n              <div\n                style={{\n                  display: \"flex\",\n                  justifyContent: \"flex-end\",\n                  gap: \"20px\",\n                  marginTop: \"15px\",\n                }}\n              >\n                <div>\n                  <Button\n                    color=\"success\"\n                    variant=\"contained\"\n                    onClick={handleAccept}\n                    style={{ marginRight: \"10px\" }}\n                    startIcon={<CheckCircleOutlineIcon />}\n                    sx={{\n                      height: \"30px\",\n                      fontSize: \"14px\",\n                      textTransform: \"none\",\n                    }}\n                  >\n                    Accept\n                  </Button>\n                  <Button\n                    color=\"error\"\n                    variant=\"contained\"\n                    onClick={() => {\n                      setOpenSelectedCheckModal(false);\n                      tableSelectedCheck.current?.removeSelection();\n                      tableSelectedCheckReturn.current?.removeSelection();\n\n                      dispatchModal({\n                        type: \"UPDATE_FIELD\",\n                        field: \"TempID\",\n                        value: \"\",\n                      });\n                      dispatchModal({\n                        type: \"UPDATE_FIELD\",\n                        field: \"subSelectedChecks\",\n                        value: {},\n                      });\n                      // setIsSelectedFromTobeReturnTable(false);\n                    }}\n                    startIcon={<NotInterestedIcon />}\n                    sx={{\n                      height: \"30px\",\n                      fontSize: \"14px\",\n                      textTransform: \"none\",\n                    }}\n                  >\n                    Cancel\n                  </Button>\n                </div>\n              </div>\n            </Box>\n          </Modal>\n          <ConfirmationModal />\n        </div>\n      </ReturnCheckContext.Provider>\n    </div>\n  );\n}\n\nconst styles: any = {\n  overlay: {\n    position: \"fixed\",\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    backgroundColor: \"rgba(0, 0, 0, 0.5)\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n  modal: {\n    backgroundColor: \"#fff\",\n    padding: \"20px\",\n    borderRadius: \"5px\",\n    textAlign: \"center\",\n    width: \"300px\",\n  },\n  button: {\n    margin: \"0 10px\",\n    background: \"white\",\n    fontFamily: '\"Roboto\", sans-serif',\n    color: \"#475569\",\n    padding: \"5px 10px\",\n  },\n};\n\nconst useConfirmation = () => {\n  const [isOpen, setIsOpen] = useState(false);\n  const [onConfirm, setOnConfirm] = useState(() => () => {});\n  const [onCancel, setOnCancel] = useState(() => () => {});\n\n  const fireModal = (p: any) => {\n    setIsOpen(true);\n    setOnConfirm(() => p.onConfirmCallback);\n    setOnCancel(() => p.onCancelCallback);\n  };\n\n  const closeModal = () => {\n    onCancel();\n    setIsOpen(false);\n  };\n\n  const confirm = () => {\n    onConfirm();\n    setIsOpen(false);\n  };\n\n  const ConfirmationModal = () => {\n    const okRef = useRef<HTMLButtonElement>(null);\n    useEffect(() => {\n      if (isOpen) {\n        okRef.current?.focus();\n      }\n    }, []);\n    if (!isOpen) return null;\n\n    return (\n      <div style={styles.overlay}>\n        <div style={styles.modal}>\n          <p style={{ color: \"black\" }}>Do you want to proceed?</p>\n          <button ref={okRef} onClick={confirm} style={styles.button}>\n            Yes\n          </button>\n          <button onClick={closeModal} style={styles.button}>\n            No\n          </button>\n        </div>\n      </div>\n    );\n  };\n\n  return {\n    ConfirmationModal,\n    fireModal,\n  };\n};\nfunction SelectedCheck() {\n  const {\n    checkCollection,\n    LoadingCheckList,\n    dispatchModal,\n    modalSelectedMutate,\n    checkSelectedCollection,\n    getSearchReturnCheckInfoLoading,\n    tableSelectedCheck,\n    myAxios,\n    setCheckCollection,\n    user,\n  } = useContext(ReturnCheckContext);\n  const inputRef = useRef<HTMLInputElement>(null);\n  const checkColumns = [\n    {\n      field: \"DepoSlip\",\n      headerName: \"Deposit Slip\",\n      minWidth: 140,\n    },\n    {\n      field: \"DepoDate\",\n      headerName: \"Deposit Date\",\n      minWidth: 140,\n    },\n    {\n      field: \"Check_No\",\n      headerName: \"Check No\",\n      minWidth: 140,\n    },\n    {\n      field: \"Check_Date\",\n      headerName: \"Check Date\",\n      minWidth: 140,\n    },\n    {\n      field: \"Amount\",\n      headerName: \"Amount\",\n      minWidth: 160,\n      align: \"right\",\n    },\n    {\n      field: \"Bank\",\n      headerName: \"Bank\",\n      minWidth: 300,\n    },\n  ];\n\n  const { isLoading: LoadingCheckListOnSearch, mutate } = useMutation({\n    mutationKey: \"check-list\",\n    mutationFn: async (variable: any) =>\n      await myAxios.get(\n        `/task/accounting/get-check-list?checkListSearch=${variable.searchCheckList}`,\n        {\n          headers: {\n            Authorization: `Bearer ${user?.accessToken}`,\n          },\n        }\n      ),\n    onSuccess: (res) => {\n      const response = res as any;\n      setCheckCollection(response.data.checkList);\n    },\n  });\n  const mainId = generateRandomClass();\n\n  return (\n    <React.Fragment>\n      <TextField\n        inputRef={inputRef}\n        label=\"Search by check no.\"\n        name=\"searchCheckList\"\n        onKeyDown={(e) => {\n          if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n            mutate({\n              searchCheckList: inputRef.current?.value,\n            });\n          }\n          // if(e.code === 'ArrowDown'){\n          //   alert('qweqwe')\n          // }\n\n          keyBoardSelectionTable(\n            e,\n            mainId,\n            inputRef?.current as HTMLInputElement\n          );\n        }}\n        InputProps={{\n          style: { height: \"27px\", fontSize: \"14px\" },\n\n          inputRef: inputRef,\n        }}\n        sx={{\n          \".MuiFormLabel-root\": { fontSize: \"14px\" },\n          \".MuiFormLabel-root[data-shrink=false]\": { top: \"-13px\" },\n        }}\n      />\n      <div style={{ marginTop: \"10px\", width: \"100%\", position: \"relative\" }}>\n        <div\n          className={mainId}\n          style={{\n            height: `${\n              (document.getElementById(\"container\")?.getBoundingClientRect()\n                .height as number) - 30\n            }px`,\n            width: \"100%\",\n            overflowX: \"scroll\",\n            position: \"absolute\",\n          }}\n        >\n          <Table\n            ref={tableSelectedCheck}\n            isLoading={\n              LoadingCheckList ||\n              getSearchReturnCheckInfoLoading ||\n              LoadingCheckListOnSearch\n            }\n            columns={checkColumns}\n            rows={checkCollection}\n            table_id={\"TempID\"}\n            isSingleSelection={true}\n            isRowFreeze={true}\n            dataSelection={(selection, data, code) => {\n              const rowSelected = data.filter(\n                (item: any) => item.TempID === selection[0]\n              )[0];\n              if (rowSelected === undefined || rowSelected.length <= 0) {\n                return;\n              }\n              dispatchModal({\n                type: \"UPDATE_FIELD\",\n                field: \"subSelectedChecks\",\n                value: {\n                  Check_No: rowSelected.Check_No,\n                  Bank: rowSelected.Bank,\n                  Check_Date: rowSelected.Check_Date,\n                  PK: rowSelected.Check_No,\n                  DepoDate: rowSelected.DepoDate,\n                  Date_Collection: rowSelected.Date_OR,\n                  TempID: rowSelected.TempID,\n                },\n              });\n              dispatchModal({\n                type: \"UPDATE_FIELD\",\n                field: \"ReturnReason\",\n                value: \"DAIF\",\n              });\n              dispatchModal({\n                type: \"UPDATE_FIELD\",\n                field: \"TempID\",\n                value: rowSelected.TempID,\n              });\n              dispatchModal({\n                type: \"UPDATE_FIELD\",\n                field: \"Check_No\",\n                value: rowSelected.Check_No,\n              });\n\n              modalSelectedMutate({\n                BankAccount: rowSelected.BankAccount,\n                Official_Receipt: rowSelected.Official_Receipt,\n              });\n            }}\n            isRowSelectable={(params) =>\n              !checkSelectedCollection\n                .map((item: any) => item.Check_No)\n                .includes(params.row.Check_No)\n            }\n          />\n        </div>\n      </div>\n    </React.Fragment>\n  );\n}\nfunction SelectedCheckToBeReturn() {\n  const {\n    dispatchModal,\n    modalSelectedMutate,\n    checkSelectedCollection,\n    tableSelectedCheckReturn,\n  } = useContext(ReturnCheckContext);\n\n  const selectedCheckToBeReturnColumns = [\n    {\n      field: \"OR_NO\",\n      headerName: \"OR No.\",\n      minWidth: 170,\n    },\n    {\n      field: \"OR_Date\",\n      headerName: \"OR Date\",\n      minWidth: 160,\n    },\n    {\n      field: \"DepoSlip\",\n      headerName: \"Deposit Slip\",\n      minWidth: 160,\n    },\n    {\n      field: \"DepoDate\",\n      headerName: \"Deposit Date\",\n      minWidth: 160,\n    },\n    {\n      field: \"Check_No\",\n      headerName: \"Check No\",\n      minWidth: 160,\n    },\n    {\n      field: \"Check_Date\",\n      headerName: \"Check Date\",\n      minWidth: 160,\n    },\n    {\n      field: \"Amount\",\n      headerName: \"Amount\",\n      minWidth: 160,\n      align: \"right\",\n    },\n    {\n      field: \"Bank\",\n      headerName: \"Bank/Branch\",\n      minWidth: 160,\n    },\n    {\n      field: \"Bank_Account\",\n      headerName: \"Bank Account\",\n      minWidth: 160,\n    },\n    {\n      field: \"Reason\",\n      headerName: \"Reason\",\n      minWidth: 160,\n    },\n    {\n      field: \"Return_Date\",\n      headerName: \"Return Date\",\n      minWidth: 160,\n    },\n  ];\n\n  return (\n    <div style={{ marginTop: \"10px\", width: \"100%\", position: \"relative\" }}>\n      <Box\n        style={{\n          height: `${\n            (document.getElementById(\"container\")?.getBoundingClientRect()\n              .height as number) - 30\n          }px`,\n          width: \"100%\",\n          overflowX: \"scroll\",\n          position: \"absolute\",\n        }}\n      >\n        <Table\n          ref={tableSelectedCheckReturn}\n          isLoading={false}\n          columns={selectedCheckToBeReturnColumns}\n          rows={checkSelectedCollection}\n          table_id={\"TempID\"}\n          isSingleSelection={true}\n          isRowFreeze={true}\n          dataSelection={(selection, data, code) => {\n            const rowSelected = data.filter(\n              (item: any) => item.TempID === selection[0]\n            )[0];\n            if (rowSelected === undefined || rowSelected.length <= 0) {\n              return;\n            }\n            dispatchModal({\n              type: \"UPDATE_FIELD\",\n              field: \"subSelectedChecks\",\n              value: {\n                Check_No: rowSelected.Check_No,\n                Bank: rowSelected.Bank,\n                Check_Date: rowSelected.Check_Date,\n                PK: rowSelected.Check_No,\n                DepoDate: rowSelected.DepoDate,\n                Date_Collection: rowSelected.OR_Date,\n                TempID: rowSelected.TempID,\n              },\n            });\n            dispatchModal({\n              type: \"UPDATE_FIELD\",\n              field: \"ReturnReason\",\n              value: rowSelected.Reason,\n            });\n            dispatchModal({\n              type: \"UPDATE_FIELD\",\n              field: \"ModalDateReturn\",\n              value: rowSelected.Return_Date,\n            });\n            dispatchModal({\n              type: \"UPDATE_FIELD\",\n              field: \"TempID\",\n              value: rowSelected.TempID,\n            });\n            dispatchModal({\n              type: \"UPDATE_FIELD\",\n              field: \"Check_No\",\n              value: rowSelected.Check_No,\n            });\n\n            modalSelectedMutate({\n              BankAccount: rowSelected.Bank_Account,\n              Official_Receipt: rowSelected.OR_NO,\n            });\n          }}\n        />\n      </Box>\n    </div>\n  );\n}\nfunction AccountingEntry() {\n  const { accountingEntry, tableAccountingEntryCheck } =\n    useContext(ReturnCheckContext);\n  const accountingentryColumns = [\n    {\n      field: \"Code\",\n      headerName: \"Code\",\n      minWidth: 170,\n    },\n    {\n      field: \"AccountName\",\n      headerName: \"Account Name\",\n      minWidth: 160,\n    },\n    {\n      field: \"Debit\",\n      headerName: \"Debit\",\n      minWidth: 160,\n      align: \"right\",\n    },\n    {\n      field: \"Credit\",\n      headerName: \"Credit\",\n      minWidth: 160,\n      align: \"right\",\n    },\n    {\n      field: \"IDNo\",\n      headerName: \"ID No.\",\n      minWidth: 160,\n    },\n    {\n      field: \"Identity\",\n      headerName: \"Identity\",\n      minWidth: 160,\n    },\n    {\n      field: \"SubAcct\",\n      headerName: \"Sub Acct\",\n      minWidth: 160,\n    },\n    {\n      field: \"SubAcctName\",\n      headerName: \"Sub Acct Name\",\n      minWidth: 300,\n    },\n    {\n      field: \"Check_No\",\n      headerName: \"Check No\",\n      minWidth: 160,\n    },\n    {\n      field: \"Bank\",\n      headerName: \"Bank/Branch\",\n      minWidth: 160,\n    },\n    {\n      field: \"Check_Date\",\n      headerName: \"Check Date\",\n      minWidth: 160,\n    },\n    {\n      field: \"Check_Return\",\n      headerName: \"Check Return\",\n      minWidth: 160,\n    },\n    {\n      field: \"Check_Reason\",\n      headerName: \"Check Reason\",\n      minWidth: 160,\n    },\n    {\n      field: \"PK\",\n      headerName: \"PK\",\n      minWidth: 160,\n    },\n    {\n      field: \"DepoDate\",\n      headerName: \"Date Deposit\",\n      minWidth: 160,\n    },\n    {\n      field: \"Date_Collection\",\n      headerName: \"Date Collection\",\n      minWidth: 160,\n    },\n  ];\n  return (\n    <div style={{ marginTop: \"10px\", width: \"100%\", position: \"relative\" }}>\n      <Box\n        style={{\n          height: `${\n            (document.getElementById(\"container\")?.getBoundingClientRect()\n              .height as number) - 30\n          }px`,\n          width: \"100%\",\n          overflowX: \"scroll\",\n          position: \"absolute\",\n        }}\n      >\n        <Table\n          ref={tableAccountingEntryCheck}\n          isLoading={false}\n          columns={accountingentryColumns}\n          rows={accountingEntry}\n          table_id={\"TempID\"}\n          isSingleSelection={true}\n          isRowFreeze={true}\n          checkboxSelection={false}\n          footerPaginationPosition=\"left-right\"\n          footerChildren={() => <AccountingEntryFooterComponent />}\n          showFooterSelectedCount={false}\n        />\n      </Box>\n    </div>\n  );\n}\nfunction setNewStateValue(dispatch: any, obj: any) {\n  Object.entries(obj).forEach(([field, value]) => {\n    dispatch({ type: \"UPDATE_FIELD\", field, value });\n  });\n}\nfunction slideAnimation(activeButton: number, idx: number) {\n  if (activeButton === idx) {\n    return \"translateX(100%)\";\n  } else {\n    return \"translateX(0%)\";\n  }\n}\nfunction DebitFooterComponent() {\n  const { debitModalCollection } = useContext(ReturnCheckContext);\n  return (\n    <Box\n      sx={{\n        px: 2,\n        py: 1,\n        display: \"flex\",\n        justifyContent: \"flex-end\",\n        borderTop: \"2px solid #e2e8f0\",\n      }}\n    >\n      <strong>\n        Total:{\" \"}\n        {debitModalCollection\n          .reduce(\n            (sum: any, obj: any) =>\n              sum + parseFloat(obj.Credit.replace(/,/g, \"\")),\n            0\n          )\n          .toLocaleString(\"en-US\", {\n            style: \"decimal\",\n            minimumFractionDigits: 2,\n            maximumFractionDigits: 2,\n          })}\n      </strong>\n    </Box>\n  );\n}\nfunction AccountingEntryFooterComponent() {\n  const { accountingEntry } = useContext(ReturnCheckContext);\n  return (\n    <Box\n      sx={{\n        px: 2,\n        py: 1,\n        display: \"flex\",\n        justifyContent: \"flex-end\",\n        borderTop: \"2px solid #e2e8f0\",\n      }}\n    >\n      <span style={{ marginRight: \"10px\" }}>Total:</span>\n      <input\n        style={{\n          fontWeight: \"bold\",\n        }}\n        type=\"text\"\n        readOnly={true}\n        value={accountingEntry\n          .reduce(\n            (sum: any, obj: any) =>\n              sum + parseFloat(obj.Credit.replace(/,/g, \"\")),\n            0\n          )\n          .toLocaleString(\"en-US\", {\n            style: \"decimal\",\n            minimumFractionDigits: 2,\n            maximumFractionDigits: 2,\n          })}\n      />\n      <input\n        style={{\n          fontWeight: \"bold\",\n        }}\n        type=\"text\"\n        readOnly={true}\n        value={accountingEntry\n          .reduce(\n            (sum: any, obj: any) =>\n              sum + parseFloat(obj.Debit.replace(/,/g, \"\")),\n            0\n          )\n          .toLocaleString(\"en-US\", {\n            style: \"decimal\",\n            minimumFractionDigits: 2,\n            maximumFractionDigits: 2,\n          })}\n      />\n    </Box>\n  );\n}\n","import { useState, ReactElement } from \"react\";\n\nexport default function useMultipleComponent(steps: ReactElement[]) {\n  const [currentStepIndex, setCurrentStepIndex] = useState(0);\n\n  function next() {\n    setCurrentStepIndex((i) => {\n      if (i >= steps.length - 1) {\n        return i;\n      }\n      return i + 1;\n    });\n  }\n  function back() {\n    setCurrentStepIndex((i) => {\n      if (i <= 0) {\n        return i;\n      }\n      return i + 1;\n    });\n  }\n  function goTo(index: number) {\n    setCurrentStepIndex(index);\n  }\n  \n  return {\n    step: steps[currentStepIndex],\n    goTo,\n    back,\n    next,\n    isFirstStep: currentStepIndex !== 0,\n    isLastStep: currentStepIndex === steps.length - 1,\n    currentStepIndex,\n  };\n}\n","import { useContext, useState } from \"react\";\nimport { useQuery } from \"react-query\";\nimport { AuthContext, User } from \"../components/AuthContext\";\nimport {\n  GridRowSelectionModel,\n  GridCellParams,\n  GridTreeNode,\n} from \"@mui/x-data-grid\";\nimport ModalWithTable from \"../components/ModalWithTable\";\nimport { flushSync } from \"react-dom\";\nimport { AxiosResponse, AxiosInstance } from \"axios\";\nimport { GridRowParams } from \"@mui/x-data-grid\";\ninterface QueryModalTableParamsType {\n  link?: {\n    url: string;\n    queryUrlName: string;\n  };\n  uniqueId: string;\n  queryKey: string;\n  responseDataKey: string;\n  columns: Array<any>;\n  onSelected?: (selectedRowData: Array<any>, data: Array<any>) => void;\n  onRemoveSelected?: (data: Array<any>) => void;\n  onSuccess?: (data: any) => void;\n  searchRef?: React.RefObject<HTMLInputElement>;\n  onCellKeyDown?: any;\n  onCloseFunction?: (search: any) => void;\n  CustomizeAxios?: (\n    myAxios: AxiosInstance,\n    user: User | null,\n    link: QueryModalTableParamsType[\"link\"],\n    search?: string\n  ) => Promise<AxiosResponse<any, any>>;\n  isRowSelectable?: ((params: GridRowParams<any>) => boolean) | undefined;\n  getCellClassName?:\n    | ((params: GridCellParams<any, any, any, GridTreeNode>) => string)\n    | undefined;\n}\n\nasync function CustomizeAxiosFunc(\n  myAxios: AxiosInstance,\n  user: User | null,\n  link: QueryModalTableParamsType[\"link\"],\n  search: string = \"\"\n) {\n  return myAxios.get(`${link?.url}?${link?.queryUrlName}=${search}`, {\n    headers: {\n      Authorization: `Bearer ${user?.accessToken}`,\n    },\n  });\n}\n\nconst useQueryModalTable = ({\n  link,\n  uniqueId,\n  queryKey,\n  responseDataKey,\n  columns,\n  onSelected = () => {},\n  onRemoveSelected = () => {},\n  onSuccess = () => {},\n  searchRef,\n  onCellKeyDown,\n  onCloseFunction = () => {},\n  CustomizeAxios = CustomizeAxiosFunc,\n  isRowSelectable,\n  getCellClassName,\n}: QueryModalTableParamsType) => {\n  const { myAxios, user } = useContext(AuthContext);\n  const [show, setShowModal] = useState(false);\n  const [rows, setRows] = useState<GridRowSelectionModel>([]);\n  async function customizeAxiostool(search: string = \"\") {\n    return await CustomizeAxios(myAxios, user, link, search);\n  }\n  const { isLoading, refetch } = useQuery({\n    queryKey: queryKey,\n    queryFn: async () => await customizeAxiostool(),\n    onSuccess: (res) => {\n      const response = res as any;\n      setRows(response.data[responseDataKey]);\n      onSuccess(response);\n    },\n    refetchOnWindowFocus: false,\n  });\n\n  const openModal = (search: string = \"\") => {\n    flushSync(() => {\n      setShowModal(true);\n    });\n    if (searchRef?.current) {\n      searchRef.current.value = search;\n      customizeAxiostool(search).then((res: any) => {\n        if (!res?.data.success) {\n          return alert(`Error : ${res?.data.message}`);\n        }\n        const response = res as any;\n        setRows(response.data[responseDataKey]);\n        if (searchRef?.current) searchRef.current.focus();\n      });\n    }\n  };\n\n  const closeModal = () => {\n    setShowModal(false);\n    if (onCloseFunction) {\n      onCloseFunction(searchRef?.current?.value);\n    }\n  };\n\n  const ModalComponent = (\n    <ModalWithTable\n      getCellClassName={getCellClassName}\n      searchRef={searchRef}\n      showModal={show}\n      onCloseModal={() => {\n        setShowModal(false);\n        if (onCloseFunction) {\n          onCloseFunction(searchRef?.current?.value);\n        }\n      }}\n      onClickCloseIcon={() => {\n        setShowModal(false);\n        if (onCloseFunction) {\n          onCloseFunction(searchRef?.current?.value);\n        }\n      }}\n      searchOnChange={(e) => {\n        // myAxios\n        //   .get(`${link.url}?${link.queryUrlName}=${e.target.value}`, {\n        //     headers: {\n        //       Authorization: `Bearer ${user?.accessToken}`,\n        //     },\n        //   })\n        //   .then((res: any) => {\n        //     if (!res?.data.success) {\n        //       return alert(`Error : ${res?.data.message}`);\n        //     }\n        //     const response = res as any;\n        //     setRows(response.data[responseDataKey]);\n        //   });\n      }}\n      onSearchKeyEnter={(value) => {\n        customizeAxiostool(value).then((res: any) => {\n          if (!res?.data.success) {\n            return alert(`Error : ${res?.data.message}`);\n          }\n          const response = res as any;\n          setRows(response.data[responseDataKey]);\n        });\n      }}\n      onCellKeyDown={onCellKeyDown}\n      height={300}\n      isLoading={isLoading}\n      queryKey={queryKey}\n      columns={columns}\n      onSelectionChange={(rowSelectionModel, data) => {\n        if (rowSelectionModel.length <= 0) {\n          return onRemoveSelected(data);\n        }\n        const selectedIDs = new Set(rowSelectionModel);\n        const selectedRowData = data.filter((row: any) => {\n          return selectedIDs.has(row[uniqueId].toString());\n        });\n        if (selectedRowData.length <= 0) return;\n        onSelected(selectedRowData, data);\n      }}\n      id={uniqueId}\n      rows={rows}\n      setRows={setRows}\n      isRowSelectable={isRowSelectable}\n    />\n  );\n\n  return {\n    show,\n    rows,\n    isLoading,\n    openModal,\n    closeModal,\n    ModalComponent,\n    refetch,\n  };\n};\n\nexport default useQueryModalTable;\n","import Swal from \"sweetalert2\";\n\nexport function codeCondfirmationAlert(props: {\n  cb: (userCodeConfirmation: string) => void;\n  isUpdate: boolean;\n  isConfirm?: () => void;\n  isDeclined?: () => void;\n  text?: string;\n}) {\n  Swal.fire({\n    title: `Are you sure!`,\n    html: props?.text\n      ? props?.text\n      : props.isUpdate\n      ? `Are you sure you want to make this change?`\n      : \"Are you sure you want to delete this?\",\n    icon: \"warning\",\n    input: \"text\",\n    inputAttributes: {\n      autocapitalize: \"off\",\n    },\n    showCancelButton: true,\n    confirmButtonText: \"Save\",\n    confirmButtonColor: \"green\",\n    showLoaderOnConfirm: true,\n    preConfirm: async (userCodeConfirmation) => {\n      try {\n        props.cb(userCodeConfirmation);\n      } catch (error) {\n        Swal.showValidationMessage(`\n            Request failed: ${error}\n          `);\n      }\n    },\n    allowOutsideClick: () => !Swal.isLoading(),\n  }).then((result) => {\n    if (result.isConfirmed) {\n      if (props.isConfirm) {\n        return props.isConfirm();\n      }\n    }\n    if (props.isDeclined) {\n      props.isDeclined();\n    }\n  });\n}\n\nexport function saveCondfirmationAlert(props: {\n  isConfirm?: () => void;\n  isDeclined?: () => void;\n  text?: string;\n}) {\n  Swal.fire({\n    title: \"Are you sure?\",\n    text: props?.text ? props?.text : \"Do you want to proceed with saving?\",\n    icon: \"warning\",\n    showCancelButton: true,\n    confirmButtonColor: \"#3085d6\",\n    cancelButtonColor: \"#d33\",\n    confirmButtonText: \"Yes, save it!\",\n  }).then((result) => {\n    if (result.isConfirmed) {\n      if (props.isConfirm) {\n        return props.isConfirm();\n      }\n    }\n    if (props.isDeclined) {\n      props.isDeclined();\n    }\n  });\n}\n","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\"\n}), 'Add');\nexports.default = _default;","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M16.59 7.58 10 14.17l-3.59-3.58L5 12l5 5 8-8zM12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z\"\n}), 'CheckCircleOutline');\nexports.default = _default;","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.42 0-8-3.58-8-8 0-1.85.63-3.55 1.69-4.9L16.9 18.31C15.55 19.37 13.85 20 12 20zm6.31-3.1L7.1 5.69C8.45 4.63 10.15 4 12 4c4.42 0 8 3.58 8 8 0 1.85-.63 3.55-1.69 4.9z\"\n}), 'NotInterested');\nexports.default = _default;","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 5V2L8 6l4 4V7c3.31 0 6 2.69 6 6 0 2.97-2.17 5.43-5 5.91v2.02c3.95-.49 7-3.85 7-7.93 0-4.42-3.58-8-8-8zm-6 8c0-1.65.67-3.15 1.76-4.24L6.34 7.34C4.9 8.79 4 10.79 4 13c0 4.08 3.05 7.44 7 7.93v-2.02c-2.83-.48-5-2.94-5-5.91z\"\n}), 'RestartAlt');\nexports.default = _default;","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M17 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V7l-4-4zm-5 16c-1.66 0-3-1.34-3-3s1.34-3 3-3 3 1.34 3 3-1.34 3-3 3zm3-10H5V5h10v4z\"\n}), 'Save');\nexports.default = _default;","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}"],"names":["CustomDatePicker","_ref","label","name","onChange","value","onKeyDown","inputRef","datePickerRef","fullWidth","textField","_ref$minWidth","minWidth","rest","_objectWithoutProperties","_excluded","_jsx","LocalizationProvider","dateAdapter","AdapterDateFns","children","DatePicker","_objectSpread","floatingLabelStyle","color","ref","slotProps","size","InputLabelProps","sx","fieldset","borderColor","fontSize","top","style","position","left","transform","width","bgcolor","boxShadow","p","heigth","ModalWithTable","height","isLoading","columns","queryKey","onSelectionChange","rows","setRows","id","onCloseModal","showModal","onClickCloseIcon","searchOnChange","_ref$title","title","searchRef","_ref$onSearchKeyEnter","onCellKeyDown","onSearchKeyEnter","isRowSelectable","getCellClassName","mainId","generateRandomClass","Modal","open","onClose","_jsxs","Box","Typography","variant","component","mb","TextField","marginBottom","InputProps","e","_searchRef$current","code","preventDefault","current","keyBoardSelectionTable","className","concat","Table","isSingleSelection","isRowFreeze","dataSelection","selection","data","table_id","right","IconButton","onClick","CloseIcon","Math","floor","random","el","_rows$","document","querySelectorAll","classList","add","firstRowParent","querySelector","firstInput","focus","event","MouseEvent","bubbles","cancelable","view","window","dispatchEvent","addEventListener","es","key","remove","keyBoardUpDown","forEach","idx","_rows$idx","_rows","_rows$idx2","_rows2","length","TableContext","createContext","rowSelectionModel","footerChildren","footerPaginationPosition","showFooterSelectedCount","forwardRef","_ref$CustomFooterComp","CustomFooterComponent","DefaultooterComponent","_ref$checkboxSelectio","checkboxSelection","_ref$footerChildren","_ref$footerPagination","_ref$showFooterSelect","_useState","useState","_useState2","_slicedToArray","selectedRows","setSelectedRows","useImperativeHandle","removeSelection","getSelectedRows","filter","item","includes","freezeArray","Provider","DataGrid","slots","loadingOverlay","LinearProgress","footer","initialState","pagination","paginationModel","pageSize","loading","getRowId","row","col","hide","showCellVerticalBorder","showColumnVerticalBorder","rowHeight","columnHeaderHeight","pageSizeOptions","fill","background","padding","display","fontWeight","onRowSelectionModelChange","selectionSet","Set","s","has","__","rowNode","_toConsumableArray","disableVirtualization","Pagination","_ref2","page","onPageChange","apiRef","useGridApiContext","pageCount","useGridSelector","gridPageCountSelector","MuiPagination","count","newPage","CustomPagination","props","GridPagination","ActionsComponent","_useContext","useContext","columnGap","justifyContent","px","alignItems","flexDirection","flex","RefNo","Sub_RefNo","DateReturn","Date","Explanation","search","returnMode","searchCheckList","initialModalState","ModalDateReturn","toLocaleDateString","ReturnReason","AccountName","AccountID","Amount","SubAccount","BranchCode","IDNo","Short","Check_No","TempID","updateAmount","updateAmountID","depoBankName","depoBankIdentity","subSelectedChecks","ReturnCheckContext","checkCollection","checkSelectedCollection","accountingEntry","LoadingCheckList","addReturnCheckLoading","tableSelectedCheck","tableAccountingEntryCheck","tableSelectedCheckReturn","dispatchModal","modalSelectedMutate","getSearchReturnCheckInfoLoading","modalSelectedCheckLoading","debitModalCollection","myAxios","user","setCheckCollection","openSelectedCheckModal","setOpenSelectedCheckModal","currentStepIndex","fireModal","stateModal","datePickerModalRef","setAccountingEntry","handleModalInputChange","LoadSelectedCheckInSelectedTable","setCheckSelectedCollection","buttons","index","modalDebitEntryColumn","field","headerName","align","reducer","state","action","type","_defineProperty","ReturnCheck","_queryFn","_queryFn2","_mutationFn","_mutationFn2","_mutationFn3","_useConfirmation","useConfirmation","ConfirmationModal","AuthContext","_useReducer","useReducer","_useReducer2","dispatch","_useReducer3","_useReducer4","_useMultipleComponent","useMultipleComponent","SelectedCheck","SelectedCheckToBeReturn","AccountingEntry","step","goTo","_useState3","_useState4","_useState5","_useState6","_useState7","_useState8","setDebitModalCollection","_useState9","_useState10","useRef","reloadIDButtonRef","explanationInputRef","submitButton","searchReturnChecks","_useQuery","useQuery","queryFn","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","get","headers","Authorization","accessToken","abrupt","sent","stop","apply","arguments","refetchOnWindowFocus","onSuccess","response","returnCheckID","return_check_id","LoadingReturnCheckLoading","RefetchReturnCheck","refetch","_useQuery2","_callee2","_context2","res","checkList","refetchCheckList","_useMutation","useMutation","mutationKey","mutationFn","_x","_callee3","variables","_context3","post","credit","debit","console","log","Acct_Title","Account_ID","ID_No","CRLoanName","Identity","SubAcctName","SubAcctCode","reduce","sum","obj","parseFloat","Credit","replace","toLocaleString","minimumFractionDigits","maximumFractionDigits","mutate","_useMutation2","_x2","_callee4","_context4","selectedRow","selected","selectedChecks","map","itm","toString","setNewStateValue","RC_No","RC_Date","getSearchReturnCheckInfoMutate","_useMutation3","_x3","_callee5","_context5","isClearableError","Swal","icon","message","timer","addReturnCheckMutate","_useQueryModalTable","useQueryModalTable","link","url","queryUrlName","uniqueId","responseDataKey","onSelected","selectedRowData","closeReturnChecksModal","onCloseFunction","ReturnChecksModal","ModalComponent","openReturnChecksModal","openModal","isLoadingReturnChecksModal","closeModal","handleInputChange","_e$target","target","_e$target2","handleOnSave","then","result","wait","_explanationInputRef$","Debit","codeCondfirmationAlert","isUpdate","cb","userCodeConfirmation","isUpdated","saveCondfirmationAlert","isConfirm","selectedRowValue","selectedCheck","Temp_OR","Official_Receipt","padStart","OR_NO","OR_Date","Date_OR","DepoSlip","DepoDate","Check_Date","Bank","Bank_Account","BankAccount","Reason","Return_Date","month","day","year","d","handleAccept","_tableSelectedCheckRe","_tableSelectedCheck$c2","_tableSelectedCheckRe3","totalDebit","flushSync","text","showCancelButton","_tableSelectedCheckRe2","selectRow","_tableSelectedCheck$c","generateTempId","array","lastItem","parseInt","match","Code","CRCode","CRTitle","SubAcct","Check_Return","Check_Reason","PK","Date_Collection","isFieldDisable","LoadingButton","Button","startIcon","AddIcon","disabled","SaveIcon","confirmButtonColor","cancelButtonColor","confirmButtonText","isConfirmed","gap","FormControl","zIndex","InputLabel","htmlFor","OutlinedInput","readOnly","department","endAdornment","InputAdornment","edge","RestartAltIcon","timeout","setTimeout","_datePickerRef$curren","_datePickerRef$curren2","click","clearTimeout","border","outline","backgroundColor","borderWidth","cursor","fontFamily","lineHeight","listStyle","margin","textAlign","transition","verticalAlign","whiteSpace","userSelect","touchAction","overflow","bottom","slideAnimation","_tableSelectedCheck$c3","_tableSelectedCheckRe4","onConfirmCallback","split","onCancelCallback","_tableSelectedCheck$c4","_tableSelectedCheckRe5","boxSizing","_tableSelectedCheck$c5","_tableSelectedCheckRe6","borderRadius","marginTop","Select","labelId","autoWidth","MenuItem","_datePickerModalRef$c","_datePickerModalRef$c2","overflowX","DebitFooterComponent","marginRight","CheckCircleOutlineIcon","textTransform","_tableSelectedCheck$c6","_tableSelectedCheckRe7","NotInterestedIcon","styles","overlay","modal","button","_useState11","_useState12","isOpen","setIsOpen","_useState13","_useState14","onConfirm","setOnConfirm","_useState15","_useState16","onCancel","setOnCancel","confirm","okRef","useEffect","_okRef$current","_mutationFn4","_document$getElementB","_useContext2","_useMutation4","_x4","_callee6","variable","_context6","LoadingCheckListOnSearch","React","_inputRef$current","getElementById","getBoundingClientRect","rowSelected","undefined","params","_document$getElementB2","_useContext3","_document$getElementB3","_useContext4","AccountingEntryFooterComponent","Object","entries","activeButton","py","borderTop","steps","setCurrentStepIndex","back","i","isFirstStep","isLastStep","CustomizeAxiosFunc","_CustomizeAxiosFunc","_args","_customizeAxiostool","_ref$onSelected","_ref$onRemoveSelected","onRemoveSelected","_ref$onSuccess","_ref$onCloseFunction","_ref$CustomizeAxios","CustomizeAxios","show","setShowModal","customizeAxiostool","_args2","success","alert","_searchRef$current2","_searchRef$current3","selectedIDs","_preConfirm","html","input","inputAttributes","autocapitalize","showLoaderOnConfirm","preConfirm","error","allowOutsideClick","isDeclined","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","source","excluded","getOwnPropertySymbols","sourceSymbolKeys","indexOf","prototype","propertyIsEnumerable","call"],"sourceRoot":""}