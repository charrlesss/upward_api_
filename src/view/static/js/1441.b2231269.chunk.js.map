{"version":3,"file":"static/js/1441.b2231269.chunk.js","mappings":"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","sources":["components/DatePicker.tsx","components/NumberFormat.tsx","feautures/Admin/Task/Accounting/PettyCash.tsx","../node_modules/@mui/icons-material/PersonSearch.js","../node_modules/@mui/icons-material/RestartAlt.js"],"sourcesContent":["import { LocalizationProvider } from \"@mui/x-date-pickers/LocalizationProvider\";\nimport { AdapterDateFns } from \"@mui/x-date-pickers/AdapterDateFns\";\nimport { DatePicker } from \"@mui/x-date-pickers\";\nexport default function CustomDatePicker({\n  label,\n  name,\n  onChange,\n  value,\n  onKeyDown,\n  inputRef,\n  datePickerRef,\n  fullWidth,\n  textField,\n  minWidth = \"200px\",\n  ...rest\n}: any) {\n  return (\n    <LocalizationProvider dateAdapter={AdapterDateFns}>\n      <DatePicker\n      floatingLabelStyle={{color: \"black\" }}\n        value={value}\n        onChange={onChange}\n        ref={datePickerRef}\n        slotProps={{\n          textField: {\n            size: \"small\",\n            label,\n            name,\n            onKeyDown,\n            inputRef: inputRef,\n            fullWidth,\n\n            ...textField,\n          },\n        }}\n        InputLabelProps={{\n          sx: {\n            color: \"black\",\n          },\n        }}\n        sx={{\n          minWidth,\n          fieldset: { borderColor: \"black\" },\n          \".MuiFormLabel-root\": { fontSize: \"14px\" },\n          \".MuiFormLabel-root[data-shrink=false]\": {\n            top: \"-5px\",\n          },\n        }}\n        {...rest}\n      />\n    </LocalizationProvider>\n  );\n}\n","import React from \"react\";\nimport { NumericFormat, NumericFormatProps } from \"react-number-format\";\n\ninterface CustomProps {\n  onChange: (event: { target: { name: string; value: string } }) => void;\n  name: string;\n}\n\nexport const NumericFormatCustom = React.forwardRef<\n  NumericFormatProps,\n  CustomProps\n>(function NumericFormatCustom(props, ref) {\n  const { onChange, ...other } = props;\n\n  return (\n    <NumericFormat\n      {...other}\n      getInputRef={ref}\n      onValueChange={(values) => {\n        onChange({\n          target: {\n            name: props.name,\n            value: values.value,\n          },\n        });\n      }}\n      allowNegative={false}\n      thousandSeparator\n      valueIsNumericString\n      //   prefix=\"$\"\n    />\n  );\n});\n","import { useReducer, useContext, useState, useRef } from \"react\";\nimport {\n  TextField,\n  Button,\n  FormControl,\n  InputAdornment,\n  IconButton,\n  InputLabel,\n  OutlinedInput,\n  Autocomplete,\n  MenuItem,\n  Select,\n  Box,\n} from \"@mui/material\";\nimport CustomDatePicker from \"../../../../components/DatePicker\";\nimport LoadingButton from \"@mui/lab/LoadingButton\";\nimport AddIcon from \"@mui/icons-material/Add\";\nimport SaveIcon from \"@mui/icons-material/Save\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport Swal from \"sweetalert2\";\nimport { AuthContext } from \"../../../../components/AuthContext\";\nimport RestartAltIcon from \"@mui/icons-material/RestartAlt\";\nimport { useMutation, useQuery, QueryClient } from \"react-query\";\nimport { NumericFormatCustom } from \"../../../../components/NumberFormat\";\nimport useQueryModalTable from \"../../../../hooks/useQueryModalTable\";\nimport PersonSearchIcon from \"@mui/icons-material/PersonSearch\";\nimport { wait } from \"../../../../lib/wait\";\nimport { GridRowSelectionModel } from \"@mui/x-data-grid\";\nimport Table from \"../../../../components/Table\";\nimport {\n  codeCondfirmationAlert,\n  saveCondfirmationAlert,\n} from \"../../../../lib/confirmationAlert\";\nimport ManageAccountsIcon from \"@mui/icons-material/ManageAccounts\";\n\nconst initialState = {\n  sub_refNo: \"\",\n  refNo: \"\",\n  datePetty: new Date(),\n  payee: \"\",\n  explanation: \"\",\n  transactionPurpose: \"\",\n  transactionCode: \"\",\n  transactionTitle: \"\",\n  transactionShort: \"\",\n  clientName: \"\",\n  clientID: \"\",\n  amount: \"\",\n  invoice: \"\",\n  option: \"non-vat\",\n  search: \"\",\n  pettyCashMode: \"\",\n};\nexport const reducer = (state: any, action: any) => {\n  switch (action.type) {\n    case \"UPDATE_FIELD\":\n      return {\n        ...state,\n        [action.field]: action.value,\n      };\n    default:\n      return state;\n  }\n};\nconst selectedCollectionColumns = [\n  { field: \"purpose\", headerName: \"Purpose\", flex: 1, minWidth: 400 },\n  { field: \"amount\", headerName: \"Amount\", minWidth: 170 },\n  {\n    field: \"usage\",\n    headerName: \"Usage\",\n    flex: 1,\n    minWidth: 300,\n  },\n  { field: \"accountID\", headerName: \"Account ID\", flex: 1, minWidth: 300 },\n  { field: \"sub_account\", headerName: \"Sub Account\", minWidth: 80 },\n  { field: \"clientID\", headerName: \"ID No\", minWidth: 100 },\n  // hide\n  { field: \"clientName\", headerName: \"Name\", flex: 1, minWidth: 300 },\n  { field: \"accountCode\", headerName: \"Accoount Code\", minWidth: 200 },\n  {\n    field: \"accountShort\",\n    headerName: \"Account Short\",\n    flex: 1,\n    minWidth: 200,\n  },\n  { field: \"vatType\", headerName: \"Vat Type\", flex: 1, minWidth: 100 },\n  { field: \"invoice\", headerName: \"Invoice\", flex: 1, minWidth: 100 },\n  { field: \"TempID\", headerName: \"TempId\", hide: true },\n];\n\nexport const chartColumn = [\n  { field: \"Acct_Code\", headerName: \"Code\", flex: 1 },\n  { field: \"Acct_Title\", headerName: \"Title\", flex: 1 },\n  { field: \"Short\", headerName: \"Short Name\", flex: 1 },\n];\n\nexport default function PettyCash() {\n  const refParent = useRef<HTMLDivElement>(null);\n  const { myAxios, user } = useContext(AuthContext);\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const [editTransaction, setEditTransaction] = useState({\n    edit: false,\n    updateId: \"\",\n  });\n  const [pettyCash, setPettyCash] = useState<GridRowSelectionModel>([]);\n  const datePickerRef = useRef<HTMLElement>(null);\n  const reloadIDButtonRef = useRef<HTMLButtonElement>(null);\n  const payeeInputRef = useRef<HTMLInputElement>(null);\n  const explanationInputRef = useRef<HTMLInputElement>(null);\n  const invoiceInputRef = useRef<HTMLInputElement>(null);\n  let creditTransactionRef = useRef<HTMLInputElement>(null);\n  const amountRef = useRef<HTMLInputElement>(null);\n  const pdcSearchInput = useRef<HTMLInputElement>(null);\n  const queryClient = new QueryClient();\n  const isDisableField = state.pettyCashMode === \"\";\n  const table = useRef<any>(null);\n  const chartAccountSearchRef = useRef<HTMLInputElement>(null);\n\n  const {\n    isLoading: loadingPettyCashIdGenerator,\n    refetch: refetchettyCashIdGenerator,\n  } = useQuery({\n    queryKey: \"petty-cash-id-generator\",\n    queryFn: async () =>\n      await myAxios.get(`/task/accounting/get-petty-cash-id`, {\n        headers: {\n          Authorization: `Bearer ${user?.accessToken}`,\n        },\n      }),\n    refetchOnWindowFocus: false,\n    onSuccess: (data) => {\n      const response = data as any;\n      dispatch({\n        type: \"UPDATE_FIELD\",\n        field: \"refNo\",\n        value: response.data.pettyCashId[0].petty_cash_id,\n      });\n      dispatch({\n        type: \"UPDATE_FIELD\",\n        field: \"sub_refNo\",\n        value: response.data.pettyCashId[0].petty_cash_id,\n      });\n    },\n  });\n  const {\n    isLoading: loadingAddUpdatePettyCash,\n    mutate: mutateAddUpdatePettyCash,\n  } = useMutation({\n    mutationKey: \"add-update-petty-cash\",\n    mutationFn: async (variables: any) =>\n      await myAxios.post(`/task/accounting/add-petty-cash`, variables, {\n        headers: {\n          Authorization: `Bearer ${user?.accessToken}`,\n        },\n      }),\n    onSuccess: (data) => {\n      const response = data as any;\n      if (response.data.success) {\n        initialState.pettyCashMode = \"\";\n        setNewStateValue(dispatch, initialState);\n        refetchettyCashIdGenerator();\n        setPettyCash([]);\n        queryClient.invalidateQueries(\"petty-cash-search\");\n        return Swal.fire({\n          position: \"center\",\n          icon: \"success\",\n          title: response.data.message,\n          timer: 1500,\n        });\n      }\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: response.data.message,\n        timer: 1500,\n      });\n    },\n  });\n  const {\n    isLoading: isLoadingLoadSelectedPettyCash,\n    mutate: mutateLoadSelectedPettyCash,\n  } = useMutation({\n    mutationKey: \"load-selected-petty-cash\",\n    mutationFn: async (variables: any) =>\n      await myAxios.post(\n        `/task/accounting/load-selected-petty-cash`,\n        variables,\n        {\n          headers: {\n            Authorization: `Bearer ${user?.accessToken}`,\n          },\n        }\n      ),\n    onSuccess: (data) => {\n      const response = data as any;\n      const loadPettyCash = response.data.loadSelectedPettyCash;\n\n      setNewStateValue(dispatch, {\n        ...state,\n        ...{\n          sub_refNo: loadPettyCash[0].PC_No,\n          refNo: loadPettyCash[0].PC_No,\n          datePetty: loadPettyCash[0].PC_Date,\n          payee: loadPettyCash[0].Payee,\n          explanation: loadPettyCash[0].Explanation,\n          pettyCashMode: \"edit\",\n        },\n      });\n      setPettyCash(loadPettyCash);\n    },\n  });\n\n  const {\n    ModalComponent: ModalChartAccount,\n    openModal: openChartAccount,\n    isLoading: isLoadingChartAccount,\n    closeModal: closeChartAccount,\n  } = useQueryModalTable({\n    link: {\n      url: \"/reference/get-chart-accounts\",\n      queryUrlName: \"chartAccountSearch\",\n    },\n    columns: chartColumn,\n    queryKey: \"get-chart-accounts\",\n    uniqueId: \"Acct_Code\",\n    responseDataKey: \"chartAccount\",\n    onSelected: (selectedRowData) => {\n      dispatch({\n        type: \"UPDATE_FIELD\",\n        field: \"transactionCode\",\n        value: selectedRowData[0].Acct_Code,\n      });\n      dispatch({\n        type: \"UPDATE_FIELD\",\n        field: \"transactionTitle\",\n        value: selectedRowData[0].Acct_Title,\n      });\n      dispatch({\n        type: \"UPDATE_FIELD\",\n        field: \"transactionShort\",\n        value: selectedRowData[0].Short,\n      });\n      closeChartAccount();\n    },\n\n    searchRef: chartAccountSearchRef,\n  });\n\n  const {\n    ModalComponent: ModalClientIDs,\n    openModal: openCliendIDsModal,\n    isLoading: isLoadingClientIdsModal,\n    closeModal: closeCliendIDsModal,\n  } = useQueryModalTable({\n    link: {\n      url: \"/task/accounting/search-pdc-policy-id\",\n      queryUrlName: \"searchPdcPolicyIds\",\n    },\n    columns: [\n      { field: \"Type\", headerName: \"Type\", width: 130 },\n      { field: \"IDNo\", headerName: \"ID No.\", width: 200 },\n      {\n        field: \"Name\",\n        headerName: \"Name\",\n        flex: 1,\n      },\n      {\n        field: \"ID\",\n        headerName: \"ID\",\n        flex: 1,\n        hide: true,\n      },\n    ],\n    queryKey: \"collection-polidy-ids\",\n    uniqueId: \"IDNo\",\n    responseDataKey: \"clientsId\",\n    onSelected: (selectedRowData, data) => {\n      dispatch({\n        type: \"UPDATE_FIELD\",\n        field: \"clientName\",\n        value: selectedRowData[0].Name,\n      });\n      dispatch({\n        type: \"UPDATE_FIELD\",\n        field: \"clientID\",\n        value: selectedRowData[0].IDNo,\n      });\n      closeCliendIDsModal();\n    },\n    searchRef: pdcSearchInput,\n  });\n  const {\n    ModalComponent: ModalSearchPettyCash,\n    openModal: openModalSearchPettyCash,\n    isLoading: isLoadingModalSearchPettyCash,\n    closeModal: closeModalSearchPettyCash,\n  } = useQueryModalTable({\n    link: {\n      url: \"/task/accounting/search-petty-cash\",\n      queryUrlName: \"searchPettyCash\",\n    },\n    columns: [\n      { field: \"PC_Date\", headerName: \"Type\", width: 130 },\n      { field: \"PC_No\", headerName: \"ID No.\", width: 200 },\n      {\n        field: \"Payee\",\n        headerName: \"Name\",\n        flex: 1,\n      },\n      {\n        field: \"Explanation\",\n        headerName: \"ID\",\n        flex: 1,\n      },\n      {\n        field: \"Explanation\",\n        headerName: \"ID\",\n        flex: 1,\n        hide: true,\n      },\n    ],\n    queryKey: \"petty-cash-search\",\n    uniqueId: \"PC_No\",\n    responseDataKey: \"searchPettyCash\",\n    onSelected: (selectedRowData) => {\n      mutateLoadSelectedPettyCash({ PC_No: selectedRowData[0].PC_No });\n      dispatch({\n        type: \"UPDATE_FIELD\",\n        field: \"pettyCashMode\",\n        value: \"edit\",\n      });\n      closeModalSearchPettyCash();\n    },\n    onCloseFunction: (value: any) => {\n      dispatch({ type: \"UPDATE_FIELD\", field: \"search\", value });\n    },\n    searchRef: pdcSearchInput,\n  });\n  const handleInputChange = (e: any) => {\n    const { name, value } = e.target;\n    dispatch({ type: \"UPDATE_FIELD\", field: name, value });\n  };\n  function handleOnSave() {\n    if (state.payee.length >= 200) {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: \"Payee is too long!\",\n        timer: 1500,\n      });\n    }\n    if (state.invoice.length >= 200) {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: \"Invoice is too long!\",\n        timer: 1500,\n      });\n    }\n    if (state.amount.length >= 200) {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: \"Amount is too long!\",\n        timer: 1500,\n      });\n    }\n    if (state.clientID.length >= 200) {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: \"Usage is too long!\",\n        timer: 1500,\n      });\n    }\n    if (state.payee === \"\") {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: \"Please provide payee!\",\n        timer: 1500,\n      }).then((result) => {\n        wait(300).then(() => {\n          payeeInputRef.current?.focus();\n        });\n      });\n    }\n    if (state.explanation === \"\") {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: \"Please provide explanation!\",\n        timer: 1500,\n      }).then((result) => {\n        wait(300).then(() => {\n          explanationInputRef.current?.focus();\n        });\n      });\n    }\n    if (pettyCash.length <= 0) {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: \"Please provide transaction entry!\",\n        timer: 1500,\n      });\n    }\n    if (state.pettyCashMode === \"edit\") {\n      codeCondfirmationAlert({\n        isUpdate: true,\n        cb: (userCodeConfirmation) => {\n          mutateAddUpdatePettyCash({\n            refNo: state.refNo,\n            datePetty: state.datePetty,\n            payee: state.payee,\n            explanation: state.explanation,\n            hasSelected: state.pettyCashMode === \"edit\",\n            pettyCash,\n            userCodeConfirmation,\n          });\n        },\n      });\n    } else {\n      saveCondfirmationAlert({\n        isConfirm: () => {\n          mutateAddUpdatePettyCash({\n            refNo: state.refNo,\n            datePetty: state.datePetty,\n            payee: state.payee,\n            explanation: state.explanation,\n            hasSelected: state.pettyCashMode === \"edit\",\n            pettyCash,\n          });\n        },\n      });\n    }\n  }\n  function handleAddTransaction() {\n    if (state.transactionCode === \"\") {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: \"Please provide transaction\",\n        timer: 1500,\n      }).then(() => {\n        wait(300).then(() => {\n          creditTransactionRef.current?.focus();\n        });\n      });\n    }\n    if (state.clientID === \"\") {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: \"Please provide usage\",\n        timer: 1500,\n      }).then(() => {\n        wait(300).then(() => {\n          openCliendIDsModal();\n        });\n      });\n    }\n    if (state.amount === \"\" || parseFloat(state.amount.replace(/,/g, \"\")) < 1) {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: \"Please provide proper amount\",\n        timer: 1500,\n      }).then(() => {\n        wait(300).then(() => {\n          amountRef.current?.focus();\n        });\n      });\n    }\n    setPettyCash((d) => {\n      let FirstTempId = \"\";\n      if (editTransaction.edit) {\n        FirstTempId = editTransaction.updateId;\n      } else {\n        FirstTempId = generateID(\n          d.length ? (d[d.length - 1] as any).TempID : \"000\"\n        );\n      }\n\n      const addPettyCashTransaction: Array<any> = [];\n      d = d.filter((item: any) => item.TempID !== FirstTempId);\n\n      addPettyCashTransaction.push({\n        purpose: state.transactionPurpose,\n        amount: parseFloat(state.amount).toLocaleString(\"en-US\", {\n          style: \"decimal\",\n          minimumFractionDigits: 2,\n          maximumFractionDigits: 2,\n        }),\n        usage: `${state.clientName} > ${state.clientID} > HO`,\n        accountID: `${state.transactionShort} > ${state.transactionCode}`,\n        sub_account: \"HO\",\n        clientID: state.clientID,\n        clientName: state.clientName,\n        accountCode: state.transactionCode,\n        accountShort: state.transactionShort,\n        vatType: state.option.toUpperCase(),\n        invoice: state.invoice,\n        TempID: FirstTempId,\n      });\n\n      if (state.transactionPurpose !== \"Input Tax\" && state.option === \"vat\") {\n        const SecondTempId = generateID((d[d.length - 1] as any).TempID);\n        const taxableAmount = parseFloat(state.amount.replace(/,/g, \"\")) / 1.12;\n        const inputTax = taxableAmount * 0.12;\n        addPettyCashTransaction.push({\n          purpose: state.transactionPurpose,\n          amount: parseFloat(inputTax.toFixed(2)).toLocaleString(\"en-US\", {\n            style: \"decimal\",\n            minimumFractionDigits: 2,\n            maximumFractionDigits: 2,\n          }),\n          usage: `${state.clientName} > ${state.clientID} > HO`,\n          accountID: `${state.transactionShort} > ${state.transactionCode}`,\n          sub_account: \"HO\",\n          clientID: state.clientID,\n          clientName: state.clientName,\n          accountCode: \"1.06.02\",\n          accountShort: \"Input Tax\",\n          vatType: state.option.toUpperCase(),\n          invoice: state.invoice,\n          TempID: SecondTempId,\n        });\n      }\n\n      function generateID(lastItem: any) {\n        const numericPart = (parseInt(lastItem.match(/\\d+/)[0]) + 1)\n          .toString()\n          .padStart(3, \"0\");\n        return numericPart;\n      }\n\n      d = [...d, ...addPettyCashTransaction];\n      return d;\n    });\n    initialState.datePetty = state.datePetty;\n    initialState.payee = state.payee;\n    initialState.explanation = state.explanation;\n    initialState.pettyCashMode = state.pettyCashMode;\n    initialState.sub_refNo = state.sub_refNo;\n    initialState.refNo = state.refNo;\n    setNewStateValue(dispatch, initialState);\n    setEditTransaction({ edit: false, updateId: \"\" });\n  }\n\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        flexDirection: \"column\",\n        width: \"100%\",\n        height: \"100%\",\n        flex: 1,\n      }}\n    >\n      <div\n        style={{\n          display: \"flex\",\n          alignItems: \"center\",\n          columnGap: \"5px\",\n        }}\n      >\n        {isLoadingModalSearchPettyCash ? (\n          <LoadingButton loading={isLoadingModalSearchPettyCash} />\n        ) : (\n          <TextField\n            label=\"Search\"\n            size=\"small\"\n            name=\"search\"\n            value={state.search}\n            onChange={handleInputChange}\n            onKeyDown={(e) => {\n              if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n                e.preventDefault();\n                return openModalSearchPettyCash(\n                  (e.target as HTMLInputElement).value\n                );\n              }\n            }}\n            InputProps={{\n              style: { height: \"27px\", fontSize: \"14px\" },\n            }}\n            sx={{\n              width: \"300px\",\n              height: \"27px\",\n              \".MuiFormLabel-root\": { fontSize: \"14px\" },\n              \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n            }}\n          />\n        )}\n        {state.pettyCashMode === \"\" && (\n          <Button\n            sx={{\n              height: \"30px\",\n              fontSize: \"11px\",\n            }}\n            variant=\"contained\"\n            startIcon={<AddIcon sx={{ width: 15, height: 15 }} />}\n            id=\"entry-header-save-button\"\n            onClick={() => {\n              dispatch({\n                type: \"UPDATE_FIELD\",\n                field: \"pettyCashMode\",\n                value: \"add\",\n              });\n            }}\n          >\n            New\n          </Button>\n        )}\n        <LoadingButton\n          sx={{\n            height: \"30px\",\n            fontSize: \"11px\",\n          }}\n          id=\"save-entry-header\"\n          color=\"primary\"\n          variant=\"contained\"\n          type=\"submit\"\n          onClick={handleOnSave}\n          disabled={state.pettyCashMode === \"\"}\n          startIcon={<SaveIcon sx={{ width: 15, height: 15 }} />}\n          loading={loadingAddUpdatePettyCash}\n        >\n          {state.pettyCashMode === \"edit\" ? \"Update\" : \"Save\"}\n        </LoadingButton>\n        {state.pettyCashMode !== \"\" && (\n          <Button\n            sx={{\n              height: \"30px\",\n              fontSize: \"11px\",\n            }}\n            variant=\"contained\"\n            startIcon={<CloseIcon sx={{ width: 15, height: 15 }} />}\n            color=\"error\"\n            onClick={() => {\n              Swal.fire({\n                title: \"Are you sure?\",\n                text: \"You won't be able to revert this!\",\n                icon: \"warning\",\n                showCancelButton: true,\n                confirmButtonColor: \"#3085d6\",\n                cancelButtonColor: \"#d33\",\n                confirmButtonText: \"Yes, cancel it!\",\n              }).then((result) => {\n                if (result.isConfirmed) {\n                  initialState.pettyCashMode = \"\";\n                  setNewStateValue(dispatch, initialState);\n                  refetchettyCashIdGenerator();\n                  setPettyCash([]);\n                }\n              });\n            }}\n          >\n            Cancel\n          </Button>\n        )}\n      </div>\n      <fieldset\n        style={{\n          border: \"1px solid #cbd5e1\",\n          borderRadius: \"5px\",\n          position: \"relative\",\n          width: \"100%\",\n          height: \"auto\",\n          display: \"flex\",\n          marginTop: \"10px\",\n          gap: \"10px\",\n          padding: \"15px\",\n        }}\n      >\n        {loadingPettyCashIdGenerator ? (\n          <LoadingButton loading={loadingPettyCashIdGenerator} />\n        ) : (\n          <FormControl\n            sx={{\n              width: \"160px\",\n              \".MuiFormLabel-root\": {\n                fontSize: \"14px\",\n                background: \"white\",\n                zIndex: 99,\n                padding: \"0 3px\",\n              },\n              \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n            }}\n            variant=\"outlined\"\n            size=\"small\"\n            disabled={isDisableField}\n          >\n            <InputLabel htmlFor=\"return-check-id-field\">Ref. No.</InputLabel>\n            <OutlinedInput\n              sx={{\n                height: \"27px\",\n                fontSize: \"14px\",\n              }}\n              disabled={isDisableField}\n              label=\"Ref. No.\"\n              name=\"refNo\"\n              value={state.refNo}\n              onChange={handleInputChange}\n              onKeyDown={(e) => {\n                if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n                  e.preventDefault();\n                  return handleOnSave();\n                }\n              }}\n              readOnly={user?.department !== \"UCSMI\"}\n              id=\"return-check-id-field\"\n              endAdornment={\n                <InputAdornment position=\"end\">\n                  <IconButton\n                    ref={reloadIDButtonRef}\n                    disabled={isDisableField}\n                    aria-label=\"search-client\"\n                    color=\"secondary\"\n                    edge=\"end\"\n                    onClick={() => {\n                      refetchettyCashIdGenerator();\n                    }}\n                  >\n                    <RestartAltIcon />\n                  </IconButton>\n                </InputAdornment>\n              }\n            />\n          </FormControl>\n        )}\n        <CustomDatePicker\n          fullWidth={false}\n          disabled={isDisableField}\n          label=\"Date\"\n          onChange={(value: any) => {\n            dispatch({\n              type: \"UPDATE_FIELD\",\n              field: \"datePetty\",\n              value: value,\n            });\n          }}\n          value={new Date(state.datePetty)}\n          onKeyDown={(e: any) => {\n            if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n              const timeout = setTimeout(() => {\n                datePickerRef.current?.querySelector(\"button\")?.click();\n                clearTimeout(timeout);\n              }, 150);\n            }\n          }}\n          textField={{\n            InputLabelProps: {\n              style: {\n                fontSize: \"14px\",\n              },\n            },\n            InputProps: {\n              style: { height: \"27px\", fontSize: \"14px\" },\n            },\n          }}\n          datePickerRef={datePickerRef}\n        />\n        <TextField\n          disabled={isDisableField}\n          label=\"Payee\"\n          size=\"small\"\n          name=\"payee\"\n          value={state.payee}\n          onChange={handleInputChange}\n          onKeyDown={(e) => {\n            if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n              e.preventDefault();\n              return handleOnSave();\n            }\n          }}\n          InputProps={{\n            style: { height: \"27px\", fontSize: \"14px\", width: \"280px\" },\n          }}\n          sx={{\n            \".MuiFormLabel-root\": { fontSize: \"14px\" },\n            \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n          }}\n          inputRef={payeeInputRef}\n        />\n        <TextField\n          disabled={isDisableField}\n          label=\"Explanation\"\n          size=\"small\"\n          name=\"explanation\"\n          value={state.explanation}\n          onChange={handleInputChange}\n          onKeyDown={(e) => {\n            if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n              e.preventDefault();\n              return handleOnSave();\n            }\n          }}\n          InputProps={{\n            style: { height: \"27px\", fontSize: \"14px\" },\n          }}\n          sx={{\n            flex: 1,\n            \".MuiFormLabel-root\": { fontSize: \"14px\" },\n            \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n          }}\n          inputRef={explanationInputRef}\n        />\n      </fieldset>\n      <fieldset\n        style={{\n          border: \"1px solid #cbd5e1\",\n          borderRadius: \"5px\",\n          position: \"relative\",\n          width: \"100%\",\n          height: \"auto\",\n          marginTop: \"10px\",\n          padding: \"15px\",\n        }}\n      >\n        <div\n          style={{\n            display: \"flex\",\n            gap: \"10px\",\n          }}\n        >\n  \n\n          {isLoadingChartAccount ? (\n            <LoadingButton loading={isLoadingChartAccount} />\n          ) : (\n            <FormControl\n              variant=\"outlined\"\n              size=\"small\"\n              disabled={isDisableField}\n              sx={{\n                width: \"350px\",\n                \".MuiFormLabel-root\": {\n                  fontSize: \"14px\",\n                  background: \"white\",\n                  zIndex: 99,\n                  padding: \"0 3px\",\n                },\n                \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n              }}\n            >\n              <InputLabel htmlFor=\"chart-account-id\">Account</InputLabel>\n              <OutlinedInput\n                sx={{\n                  height: \"27px\",\n                  fontSize: \"14px\",\n                }}\n                disabled={isDisableField}\n                fullWidth\n                label=\"Account\"\n                name=\"transactionTitle\"\n                value={state.transactionTitle}\n                onChange={handleInputChange}\n                onKeyDown={(e) => {\n                  if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n                    e.preventDefault();\n                    return openChartAccount(state.transactionTitle);\n                  }\n                }}\n                id=\"chart-account-id\"\n                endAdornment={\n                  <InputAdornment position=\"end\">\n                    <IconButton\n                      disabled={isDisableField}\n                      aria-label=\"search-client\"\n                      color=\"secondary\"\n                      edge=\"end\"\n                      onClick={() => {\n                        openChartAccount(state.transactionTitle);\n                      }}\n                    >\n                      <ManageAccountsIcon />\n                    </IconButton>\n                  </InputAdornment>\n                }\n              />\n            </FormControl>\n          )}\n\n          {isLoadingClientIdsModal ? (\n            <LoadingButton loading={isLoadingClientIdsModal} />\n          ) : (\n            <FormControl\n              sx={{\n                minWidth: \"400px\",\n                \".MuiFormLabel-root\": {\n                  fontSize: \"14px\",\n                  background: \"white\",\n                  zIndex: 99,\n                  padding: \"0 3px\",\n                },\n                \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n              }}\n              variant=\"outlined\"\n              size=\"small\"\n              disabled={isDisableField}\n            >\n              <InputLabel htmlFor=\"client-list\">Usage</InputLabel>\n              <OutlinedInput\n                sx={{\n                  height: \"27px\",\n                  fontSize: \"14px\",\n                }}\n                disabled={isDisableField}\n                label=\"Usage\"\n                name=\"clientName\"\n                value={state.clientName}\n                onChange={handleInputChange}\n                onKeyDown={(e) => {\n                  if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n                    e.preventDefault();\n                    return openCliendIDsModal(state.clientName);\n                  }\n                }}\n                id=\"client-list\"\n                endAdornment={\n                  <InputAdornment position=\"end\">\n                    <IconButton\n                      ref={reloadIDButtonRef}\n                      disabled={isDisableField}\n                      color=\"secondary\"\n                      edge=\"end\"\n                      onClick={() => {\n                        openCliendIDsModal(state.clientName);\n                      }}\n                    >\n                      <PersonSearchIcon />\n                    </IconButton>\n                  </InputAdornment>\n                }\n              />\n            </FormControl>\n          )}\n          <Select\n            labelId=\"label-selection-reason\"\n            value={state.option}\n            name=\"option\"\n            onChange={handleInputChange}\n            disabled={isDisableField}\n            autoWidth\n            sx={{\n              height: \"27px\",\n              fontSize: \"14px\",\n              width: \"200px\",\n            }}\n          >\n            <MenuItem value=\"vat\">VAT</MenuItem>\n            <MenuItem value={\"non-vat\"}>NON-VAT</MenuItem>\n          </Select>\n        </div>\n        <div\n          style={{\n            display: \"flex\",\n            gap: \"10px\",\n            marginTop: \"10px\",\n          }}\n        >\n          <TextField\n            sx={{\n              \".MuiFormLabel-root\": { fontSize: \"14px\" },\n              \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n            }}\n            disabled={isDisableField}\n            name=\"amount\"\n            label=\"Amount\"\n            size=\"small\"\n            value={state.amount}\n            onChange={handleInputChange}\n            placeholder=\"0.00\"\n            InputProps={{\n              inputComponent: NumericFormatCustom as any,\n              inputRef: amountRef,\n              style: { height: \"27px\", fontSize: \"14px\", width: \"200px\" },\n            }}\n            onBlur={() => {\n              dispatch({\n                type: \"UPDATE_FIELD\",\n                field: \"amount\",\n                value: parseFloat(state.amount.replace(/,/g, \"\")).toFixed(2),\n              });\n            }}\n            onKeyDown={(e) => {\n              if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n                e.preventDefault();\n                return handleAddTransaction();\n              }\n            }}\n          />\n          <TextField\n            sx={{\n              \".MuiFormLabel-root\": { fontSize: \"14px\" },\n              \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n            }}\n            InputProps={{\n              inputRef: amountRef,\n              style: { height: \"27px\", fontSize: \"14px\", width: \"300px\" },\n            }}\n            disabled={isDisableField}\n            label=\"Invoice\"\n            size=\"small\"\n            name=\"invoice\"\n            value={state.invoice}\n            onChange={handleInputChange}\n            onKeyDown={(e: any) => {\n              if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n                e.preventDefault();\n                return handleAddTransaction();\n              }\n            }}\n            inputRef={invoiceInputRef}\n          />\n          <Button\n            disabled={isDisableField}\n            color=\"success\"\n            variant=\"contained\"\n            style={{ gridArea: \"button\", height: \"27px\", fontSize: \"14px\" }}\n            startIcon={<AddIcon />}\n            onClick={() => {\n              handleAddTransaction();\n            }}\n          >\n            {editTransaction.edit ? \"Update Transaction\" : \"add Transaction\"}\n          </Button>\n        </div>\n      </fieldset>\n      <div\n        ref={refParent}\n        style={{\n          marginTop: \"10px\",\n          width: \"100%\",\n          position: \"relative\",\n          flex: 1,\n        }}\n      >\n        <Box\n          style={{\n            height: `${refParent.current?.getBoundingClientRect().height}px`,\n            width: \"100%\",\n            overflowX: \"scroll\",\n            position: \"absolute\",\n          }}\n        >\n          <Table\n            ref={table}\n            isLoading={\n              loadingAddUpdatePettyCash || isLoadingLoadSelectedPettyCash\n            }\n            columns={selectedCollectionColumns}\n            rows={pettyCash}\n            table_id={\"TempID\"}\n            isSingleSelection={true}\n            isRowFreeze={false}\n            dataSelection={(selection, data, code) => {\n              const rowSelected = data.filter(\n                (item: any) => item.TempID === selection[0]\n              )[0];\n              if (rowSelected === undefined || rowSelected.length <= 0) {\n                setEditTransaction({\n                  edit: false,\n                  updateId: \"\",\n                });\n                setNewStateValue(dispatch, {\n                  ...state,\n                  ...{\n                    transactionPurpose: \"\",\n                    transactionCode: \"\",\n                    transactionTitle: \"\",\n                    transactionShort: \"\",\n                    clientName: \"\",\n                    clientID: \"\",\n                    amount: \"\",\n                    invoice: \"\",\n                    option: \"non-vat\",\n                  },\n                });\n                return;\n              }\n\n              if (code === \"Delete\" || code === \"Backspace\") {\n                Swal.fire({\n                  title: \"Are you sure?\",\n                  text: `You won't to delete this Check No. ${rowSelected.Check_No}`,\n                  icon: \"warning\",\n                  showCancelButton: true,\n                  confirmButtonColor: \"#3085d6\",\n                  cancelButtonColor: \"#d33\",\n                  confirmButtonText: \"Yes, delete it!\",\n                }).then((result) => {\n                  if (result.isConfirmed) {\n                    return setPettyCash((dt) => {\n                      return dt.filter(\n                        (item: any) => item.TempID !== selection[0]\n                      );\n                    });\n                  }\n                  table.current?.removeSelection();\n                });\n                return;\n              }\n              setNewStateValue(dispatch, {\n                ...state,\n                ...{\n                  transactionPurpose: rowSelected.purpose,\n                  transactionCode: rowSelected.accountCode,\n                  transactionTitle: rowSelected.purpose,\n                  transactionShort: rowSelected.DRShort,\n                  clientName: rowSelected.clientName,\n                  clientID: rowSelected.clientID,\n                  amount: rowSelected.amount,\n                  invoice: rowSelected.invoice,\n                  option: rowSelected.vatType.toLowerCase(),\n                },\n              });\n              setEditTransaction({\n                edit: true,\n                updateId: rowSelected.TempID,\n              });\n            }}\n          />\n        </Box>\n      </div>\n      {ModalClientIDs}\n      {ModalSearchPettyCash}\n      {ModalChartAccount}\n    </div>\n  );\n}\n\nfunction setNewStateValue(dispatch: any, obj: any) {\n  Object.entries(obj).forEach(([field, value]) => {\n    dispatch({ type: \"UPDATE_FIELD\", field, value });\n  });\n}\n","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)([/*#__PURE__*/(0, _jsxRuntime.jsx)(\"circle\", {\n  cx: \"10\",\n  cy: \"8\",\n  r: \"4\"\n}, \"0\"), /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M10.35 14.01C7.62 13.91 2 15.27 2 18v2h9.54c-2.47-2.76-1.23-5.89-1.19-5.99zm9.08 4.01c.36-.59.57-1.28.57-2.02 0-2.21-1.79-4-4-4s-4 1.79-4 4 1.79 4 4 4c.74 0 1.43-.22 2.02-.57L20.59 22 22 20.59l-2.57-2.57zM16 18c-1.1 0-2-.9-2-2s.9-2 2-2 2 .9 2 2-.9 2-2 2z\"\n}, \"1\")], 'PersonSearch');\nexports.default = _default;","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 5V2L8 6l4 4V7c3.31 0 6 2.69 6 6 0 2.97-2.17 5.43-5 5.91v2.02c3.95-.49 7-3.85 7-7.93 0-4.42-3.58-8-8-8zm-6 8c0-1.65.67-3.15 1.76-4.24L6.34 7.34C4.9 8.79 4 10.79 4 13c0 4.08 3.05 7.44 7 7.93v-2.02c-2.83-.48-5-2.94-5-5.91z\"\n}), 'RestartAlt');\nexports.default = _default;"],"names":["CustomDatePicker","_ref","label","name","onChange","value","onKeyDown","inputRef","datePickerRef","fullWidth","textField","_ref$minWidth","minWidth","rest","_objectWithoutProperties","_excluded","_jsx","LocalizationProvider","dateAdapter","AdapterDateFns","children","DatePicker","_objectSpread","floatingLabelStyle","color","ref","slotProps","size","InputLabelProps","sx","fieldset","borderColor","fontSize","top","NumericFormatCustom","React","props","other","NumericFormat","getInputRef","onValueChange","values","target","allowNegative","thousandSeparator","valueIsNumericString","initialState","sub_refNo","refNo","datePetty","Date","payee","explanation","transactionPurpose","transactionCode","transactionTitle","transactionShort","clientName","clientID","amount","invoice","option","search","pettyCashMode","reducer","state","action","type","_defineProperty","field","selectedCollectionColumns","headerName","flex","hide","chartColumn","PettyCash","_queryFn","_mutationFn","_mutationFn2","_refParent$current","refParent","useRef","_useContext","useContext","AuthContext","myAxios","user","_useReducer","useReducer","_useReducer2","_slicedToArray","dispatch","_useState","useState","edit","updateId","_useState2","editTransaction","setEditTransaction","_useState3","_useState4","pettyCash","setPettyCash","reloadIDButtonRef","payeeInputRef","explanationInputRef","invoiceInputRef","creditTransactionRef","amountRef","pdcSearchInput","queryClient","QueryClient","isDisableField","table","chartAccountSearchRef","_useQuery","useQuery","queryKey","queryFn","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","get","headers","Authorization","concat","accessToken","abrupt","sent","stop","apply","arguments","refetchOnWindowFocus","onSuccess","data","response","pettyCashId","petty_cash_id","loadingPettyCashIdGenerator","isLoading","refetchettyCashIdGenerator","refetch","_useMutation","useMutation","mutationKey","mutationFn","_x","_callee2","variables","_context2","post","success","setNewStateValue","invalidateQueries","Swal","position","icon","title","message","timer","loadingAddUpdatePettyCash","mutateAddUpdatePettyCash","mutate","_useMutation2","_x2","_callee3","_context3","loadPettyCash","loadSelectedPettyCash","PC_No","PC_Date","Payee","Explanation","isLoadingLoadSelectedPettyCash","mutateLoadSelectedPettyCash","_useQueryModalTable","useQueryModalTable","link","url","queryUrlName","columns","uniqueId","responseDataKey","onSelected","selectedRowData","Acct_Code","Acct_Title","Short","closeChartAccount","searchRef","ModalChartAccount","ModalComponent","openChartAccount","openModal","isLoadingChartAccount","closeModal","_useQueryModalTable2","width","Name","IDNo","closeCliendIDsModal","ModalClientIDs","openCliendIDsModal","isLoadingClientIdsModal","_useQueryModalTable3","closeModalSearchPettyCash","onCloseFunction","ModalSearchPettyCash","openModalSearchPettyCash","isLoadingModalSearchPettyCash","handleInputChange","e","_e$target","handleOnSave","length","then","result","wait","_payeeInputRef$curren","current","focus","_explanationInputRef$","codeCondfirmationAlert","isUpdate","cb","userCodeConfirmation","hasSelected","saveCondfirmationAlert","isConfirm","handleAddTransaction","_creditTransactionRef","parseFloat","replace","_amountRef$current","d","FirstTempId","generateID","TempID","addPettyCashTransaction","filter","item","push","purpose","toLocaleString","style","minimumFractionDigits","maximumFractionDigits","usage","accountID","sub_account","accountCode","accountShort","vatType","toUpperCase","SecondTempId","inputTax","toFixed","lastItem","parseInt","match","toString","padStart","_toConsumableArray","_jsxs","display","flexDirection","height","alignItems","columnGap","LoadingButton","loading","TextField","code","preventDefault","InputProps","Button","variant","startIcon","AddIcon","id","onClick","disabled","SaveIcon","CloseIcon","text","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","isConfirmed","border","borderRadius","marginTop","gap","padding","FormControl","background","zIndex","InputLabel","htmlFor","OutlinedInput","readOnly","department","endAdornment","InputAdornment","IconButton","edge","RestartAltIcon","timeout","setTimeout","_datePickerRef$curren","_datePickerRef$curren2","querySelector","click","clearTimeout","ManageAccountsIcon","PersonSearchIcon","Select","labelId","autoWidth","MenuItem","placeholder","inputComponent","onBlur","gridArea","Box","getBoundingClientRect","overflowX","Table","rows","table_id","isSingleSelection","isRowFreeze","dataSelection","selection","rowSelected","undefined","DRShort","toLowerCase","Check_No","_table$current","dt","removeSelection","obj","Object","entries","forEach","_ref2","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","cx","cy","r"],"sourceRoot":""}