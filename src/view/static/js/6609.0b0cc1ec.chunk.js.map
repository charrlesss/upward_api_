{"version":3,"file":"static/js/6609.0b0cc1ec.chunk.js","mappings":"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","sources":["feautures/Admin/Reference/PettyCashTransaction.tsx","../node_modules/@mui/icons-material/Delete.js","../node_modules/@mui/material/colors/pink.js"],"sourcesContent":["import React, { useContext, useState, useRef, useReducer } from \"react\";\nimport {\n  Box,\n  TextField,\n  Button,\n  FormControlLabel,\n  Checkbox,\n  IconButton,\n  FormControl,\n  InputLabel,\n  OutlinedInput,\n  InputAdornment,\n} from \"@mui/material\";\nimport ManageAccountsIcon from \"@mui/icons-material/ManageAccounts\";\nimport AddIcon from \"@mui/icons-material/Add\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\nimport { GridRowSelectionModel } from \"@mui/x-data-grid\";\nimport { pink } from \"@mui/material/colors\";\nimport { AuthContext } from \"../../../components/AuthContext\";\nimport { useMutation, useQuery, useQueryClient } from \"react-query\";\nimport Swal from \"sweetalert2\";\nimport { wait } from \"../../../lib/wait\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport SaveIcon from \"@mui/icons-material/Save\";\nimport useQueryModalTable from \"../../../hooks/useQueryModalTable\";\nimport { LoadingButton } from \"@mui/lab\";\nimport Table from \"../../../components/Table\";\nimport {\n  codeCondfirmationAlert,\n  saveCondfirmationAlert,\n} from \"../../../lib/confirmationAlert\";\nimport PageHelmet from \"../../../components/Helmet\";\n\nconst initialState = {\n  Purpose: \"\",\n  Short: \"\",\n  Acct_Code: \"\",\n  mode: \"\",\n  search: \"\",\n  Inactive: false,\n};\n\nexport const reducer = (state: any, action: any) => {\n  switch (action.type) {\n    case \"UPDATE_FIELD\":\n      return {\n        ...state,\n        [action.field]: action.value,\n      };\n    default:\n      return state;\n  }\n};\n\nexport const pettyCashtransactionColumn = [\n  { field: \"Petty_Log\", headerName: \"ID#\", hide: true },\n  { field: \"Purpose\", headerName: \"Description\", flex: 1 },\n  { field: \"Acct_Code\", headerName: \"Code\", flex: 1 },\n  { field: \"Short\", headerName: \"Account Name\", flex: 1 },\n  { field: \"Inactive\", headerName: \"Inactive\", flex: 1 },\n];\n\nexport const chartColumn = [\n  { field: \"Acct_Code\", headerName: \"Code\", flex: 1 },\n  { field: \"Acct_Title\", headerName: \"Title\", flex: 1 },\n  { field: \"Short\", headerName: \"Short Name\", flex: 1 },\n];\n\nconst queryKey = \"petty-cash-transaction\";\n\nexport default function PettyCashTransaction() {\n  const refParent = useRef<HTMLDivElement>(null);\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const { myAxios, user } = useContext(AuthContext);\n  const [rows, setRows] = useState<GridRowSelectionModel>([]);\n  const table = useRef<any>(null);\n  const chartAccountSearchRef = useRef<HTMLInputElement>(null);\n\n  const queryClient = useQueryClient();\n\n  const { isLoading, refetch: refetchTransactionSearch } = useQuery({\n    queryKey,\n    queryFn: async () =>\n      await myAxios.get(\n        `/reference/get-petty-cash-transaction?pettyCashtTransactionSearch=${state.search}`,\n        {\n          headers: {\n            Authorization: `Bearer ${user?.accessToken}`,\n          },\n        }\n      ),\n    onSuccess: (res) => {\n      setRows((res as any)?.data.pettyCashTransaction);\n    },\n  });\n  const { mutate: mutateAdd, isLoading: loadingAdd } = useMutation({\n    mutationKey: queryKey,\n    mutationFn: async (variables: any) => {\n      return await myAxios.post(\n        \"/reference/add-petty-cash-transaction\",\n        variables,\n        {\n          headers: {\n            Authorization: `Bearer ${user?.accessToken}`,\n          },\n        }\n      );\n    },\n    onSuccess,\n  });\n  const { mutate: mutateEdit, isLoading: loadingEdit } = useMutation({\n    mutationKey: queryKey,\n    mutationFn: async (variables: any) => {\n      return await myAxios.post(\n        \"/reference/update-petty-cash-transaction\",\n        variables,\n        {\n          headers: {\n            Authorization: `Bearer ${user?.accessToken}`,\n          },\n        }\n      );\n    },\n    onSuccess,\n  });\n  const { mutate: mutateDelete, isLoading: loadingDelete } = useMutation({\n    mutationKey: queryKey,\n    mutationFn: async (variables: any) => {\n      return await myAxios.post(\n        \"/reference/delete-petty-cash-transaction\",\n        variables,\n        {\n          headers: {\n            Authorization: `Bearer ${user?.accessToken}`,\n          },\n        }\n      );\n    },\n    onSuccess,\n  });\n\n  const {\n    ModalComponent: ModalChartAccount,\n    openModal: openChartAccount,\n    isLoading: isLoadingChartAccount,\n    closeModal: closeChartAccount,\n  } = useQueryModalTable({\n    link: {\n      url: \"/reference/get-chart-accounts\",\n      queryUrlName: \"chartAccountSearch\",\n    },\n    columns: chartColumn,\n    queryKey: \"get-chart-accounts\",\n    uniqueId: \"Acct_Code\",\n    responseDataKey: \"chartAccount\",\n    onSelected: (selectedRowData) => {\n      dispatch({\n        type: \"UPDATE_FIELD\",\n        field: \"Short\",\n        value: selectedRowData[0].Acct_Title,\n      });\n      dispatch({\n        type: \"UPDATE_FIELD\",\n        field: \"Acct_Code\",\n        value: selectedRowData[0].Acct_Code,\n      });\n      closeChartAccount();\n    },\n\n    searchRef: chartAccountSearchRef,\n  });\n\n  const handleInputChange = (e: any) => {\n    const { name, value } = e.target;\n    dispatch({ type: \"UPDATE_FIELD\", field: name, value });\n  };\n\n  function handleOnSave(e: any) {\n    if (state.Purpose === \"\") {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: \"Purpose is required!\",\n        showConfirmButton: false,\n        timer: 1500,\n      });\n    }\n    if (state.Short === \"\") {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: \"Short is required!\",\n        showConfirmButton: false,\n        timer: 1500,\n      });\n    }\n\n    if (state.Purpose.length >= 200) {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"success\",\n        title: \"Purpose is too long!\",\n        showConfirmButton: false,\n        timer: 1500,\n      });\n    }\n\n    e.preventDefault();\n    if (state.mode === \"edit\") {\n      codeCondfirmationAlert({\n        isUpdate: true,\n        cb: (userCodeConfirmation) => {\n          mutateEdit({ ...state, userCodeConfirmation });\n        },\n      });\n    } else {\n      saveCondfirmationAlert({\n        isConfirm: () => {\n          mutateAdd(state);\n        },\n      });\n    }\n  }\n\n  function onSuccess(res: any) {\n    if (res.data.success) {\n      queryClient.invalidateQueries(queryKey);\n      resetModule();\n      return Swal.fire({\n        position: \"center\",\n        icon: \"success\",\n        title: res.data.message,\n        showConfirmButton: false,\n        timer: 1500,\n      });\n    }\n\n    Swal.fire({\n      position: \"center\",\n      icon: \"error\",\n      title: res.data.message,\n      showConfirmButton: false,\n      timer: 1500,\n    });\n  }\n\n  function resetModule() {\n    setNewStateValue(dispatch, initialState);\n    table.current?.removeSelection();\n    wait(500).then(() => {\n      refetchTransactionSearch();\n    });\n  }\n  return (\n   <>\n     <PageHelmet title=\"Petty Cash Transaction\" />\n    <div\n      style={{\n        display: \"flex\",\n        flexDirection: \"column\",\n        width: \"100%\",\n        height: \"100%\",\n        flex: 1,\n        padding: \"5px\"\n\n      }}\n    >\n      {/* <Box>\n        <Typography variant=\"h5\" sx={{ marginBottom: \"10px\" }}>\n          Petty Cash Details\n        </Typography>\n      </Box> */}\n      <Box\n        sx={(theme) => ({\n          display: \"flex\",\n          alignItems: \"center\",\n          columnGap: \"20px\",\n          [theme.breakpoints.down(\"sm\")]: {\n            flexDirection: \"column\",\n            alignItems: \"flex-start\",\n            flex: 1,\n            marginBottom: \"15px\",\n          },\n        })}\n      >\n        <div\n          style={{\n            marginTop: \"10px\",\n            marginBottom: \"12px\",\n            width: \"100%\",\n          }}\n        >\n          <TextField\n            label=\"Search\"\n            fullWidth\n            size=\"small\"\n            type=\"text\"\n            name=\"search\"\n            value={state.search}\n            onChange={handleInputChange}\n            InputProps={{\n              style: { height: \"27px\", fontSize: \"14px\" },\n            }}\n            sx={{\n              width: \"500px\",\n              height: \"27px\",\n              \".MuiFormLabel-root\": { fontSize: \"14px\" },\n              \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n            }}\n            onKeyDown={(e) => {\n              if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n                e.preventDefault();\n                return refetchTransactionSearch();\n              }\n            }}\n          />\n        </div>\n        <div\n          style={{\n            display: \"flex\",\n            alignItems: \"center\",\n            columnGap: \"20px\",\n          }}\n        >\n          <div\n            style={{\n              display: \"flex\",\n              alignItems: \"center\",\n              columnGap: \"5px\",\n            }}\n          >\n            {state.mode === \"\" && (\n              <Button\n                variant=\"contained\"\n                startIcon={<AddIcon />}\n                id=\"entry-header-save-button\"\n                onClick={() => {\n                  handleInputChange({ target: { value: \"add\", name: \"mode\" } });\n                }}\n                sx={{\n                  height: \"30px\",\n                  fontSize: \"11px\",\n                }}\n              >\n                New\n              </Button>\n            )}\n\n            <LoadingButton\n              id=\"save-entry-header\"\n              color=\"primary\"\n              variant=\"contained\"\n              type=\"submit\"\n              onClick={handleOnSave}\n              disabled={state.mode === \"\"}\n              startIcon={<SaveIcon />}\n              loading={loadingAdd || loadingEdit}\n              sx={{\n                height: \"30px\",\n                fontSize: \"11px\",\n              }}\n            >\n              Save\n            </LoadingButton>\n            {state.mode !== \"\" && (\n              <Button\n                variant=\"contained\"\n                startIcon={<CloseIcon />}\n                color=\"error\"\n                sx={{\n                  height: \"30px\",\n                  fontSize: \"11px\",\n                }}\n                onClick={() => {\n                  Swal.fire({\n                    title: \"Are you sure?\",\n                    text: \"You won't be able to revert this!\",\n                    icon: \"warning\",\n                    showCancelButton: true,\n                    confirmButtonColor: \"#3085d6\",\n                    cancelButtonColor: \"#d33\",\n                    confirmButtonText: \"Yes, cancel it!\",\n                  }).then((result) => {\n                    if (result.isConfirmed) {\n                      resetModule();\n                    }\n                  });\n                }}\n              >\n                Cancel\n              </Button>\n            )}\n\n            <LoadingButton\n              id=\"save-entry-header\"\n              variant=\"contained\"\n              sx={{\n                height: \"30px\",\n                fontSize: \"11px\",\n                backgroundColor: pink[500],\n                \"&:hover\": {\n                  backgroundColor: pink[600],\n                },\n              }}\n              loading={loadingDelete}\n              disabled={state.mode !== \"edit\"}\n              startIcon={<DeleteIcon />}\n              onClick={() => {\n                codeCondfirmationAlert({\n                  isUpdate: false,\n                  cb: (userCodeConfirmation) => {\n                    mutateDelete({\n                      Petty_Log: state.Petty_Log,\n                      userCodeConfirmation,\n                    });\n                  },\n                });\n              }}\n            >\n              Delete\n            </LoadingButton>\n          </div>\n        </div>\n      </Box>\n      <form\n        onSubmit={handleOnSave}\n        onKeyDown={(e) => {\n          if ([\"Short\"].includes((e.target as any).name)) {\n            if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n              e.preventDefault();\n            }\n            return;\n          }\n          if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n            e.preventDefault();\n            handleOnSave(e);\n            return;\n          }\n        }}\n      >\n        <Box\n          sx={(theme) => ({\n            display: \"flex\",\n            columnGap: \"15px\",\n            flexDirection: \"row\",\n            alignItems: \"center\",\n            [theme.breakpoints.down(\"md\")]: {\n              flexDirection: \"column\",\n              rowGap: \"10px\",\n            },\n          })}\n        >\n          {!isLoading && (\n            <React.Fragment>\n              <TextField\n                required\n                variant=\"outlined\"\n                size=\"small\"\n                label=\"Purpose\"\n                name=\"Purpose\"\n                value={state.Purpose}\n                onChange={handleInputChange}\n                disabled={state.mode === \"\"}\n                InputProps={{\n                  style: { height: \"27px\", fontSize: \"14px\" },\n                }}\n                sx={{\n                  flex: 1,\n                  height: \"27px\",\n                  \".MuiFormLabel-root\": { fontSize: \"14px\" },\n                  \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n                }}\n              />\n\n              {isLoadingChartAccount ? (\n                <LoadingButton loading={isLoadingChartAccount} />\n              ) : (\n                <FormControl\n                  variant=\"outlined\"\n                  size=\"small\"\n                  disabled={state.mode === \"\"}\n                  sx={{\n                    width: \"350px\",\n                    \".MuiFormLabel-root\": {\n                      fontSize: \"14px\",\n                      background: \"white\",\n                      zIndex: 99,\n                      padding: \"0 3px\",\n                    },\n                    \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n                  }}\n                >\n                  <InputLabel htmlFor=\"chart-account-id\">Account</InputLabel>\n                  <OutlinedInput\n                    sx={{\n                      height: \"27px\",\n                      fontSize: \"14px\",\n                    }}\n                    disabled={state.mode === \"\"}\n                    fullWidth\n                    label=\"Account\"\n                    name=\"Short\"\n                    value={state.Short}\n                    onChange={handleInputChange}\n                    onKeyDown={(e) => {\n                      if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n                        e.preventDefault();\n                        return openChartAccount(state.Short);\n                      }\n                    }}\n                    id=\"chart-account-id\"\n                    endAdornment={\n                      <InputAdornment position=\"end\">\n                        <IconButton\n                          disabled={state.mode === \"\"}\n                          aria-label=\"search-client\"\n                          color=\"secondary\"\n                          edge=\"end\"\n                          onClick={() => {\n                            openChartAccount(state.Short);\n                          }}\n                        >\n                          <ManageAccountsIcon />\n                        </IconButton>\n                      </InputAdornment>\n                    }\n                  />\n                </FormControl>\n              )}\n\n              <FormControlLabel\n                sx={{\n                  \".MuiTypography-root\": {\n                    fontSize: \"14px\",\n                  },\n                }}\n                control={\n                  <Checkbox\n                    disabled={state.mode === \"\"}\n                    size=\"small\"\n                    name=\"Inactive\"\n                    checked={state.Inactive}\n                    onChange={(e) => {\n                      dispatch({\n                        type: \"UPDATE_FIELD\",\n                        field: \"Inactive\",\n                        value: e.target.checked,\n                      });\n                    }}\n                  />\n                }\n                label=\"Mark as Inactive\"\n              />\n            </React.Fragment>\n          )}\n        </Box>\n      </form>\n      <div\n        ref={refParent}\n        style={{\n          marginTop: \"10px\",\n          width: \"100%\",\n          position: \"relative\",\n          flex: 1,\n        }}\n      >\n        <Box\n          style={{\n            height: `${refParent.current?.getBoundingClientRect().height}px`,\n            width: \"100%\",\n            overflowX: \"scroll\",\n            position: \"absolute\",\n          }}\n        >\n          <Table\n            ref={table}\n            isLoading={isLoading || loadingAdd || loadingEdit || loadingDelete}\n            columns={pettyCashtransactionColumn}\n            rows={rows}\n            table_id={\"Petty_Log\"}\n            isSingleSelection={true}\n            isRowFreeze={false}\n            dataSelection={(selection, data, code) => {\n              const rowSelected = data.filter(\n                (item: any) => item.Petty_Log === selection[0]\n              )[0];\n              if (rowSelected === undefined || rowSelected.length <= 0) {\n                setNewStateValue(dispatch, initialState);\n                handleInputChange({ target: { value: \"\", name: \"mode\" } });\n\n                return;\n              }\n              handleInputChange({ target: { value: \"edit\", name: \"mode\" } });\n              if (code === \"Delete\" || code === \"Backspace\") {\n                codeCondfirmationAlert({\n                  isUpdate: false,\n                  cb: (userCodeConfirmation) => {\n                    mutateDelete({\n                      Petty_Log: rowSelected.Petty_Log,\n                      userCodeConfirmation,\n                    });\n                  },\n                });\n                return;\n              }\n              const newState = {\n                ...rowSelected,\n                Inactive: rowSelected.Inactive !== \"NO\",\n              };\n              setNewStateValue(dispatch, newState);\n            }}\n          />\n        </Box>\n      </div>\n      {ModalChartAccount}\n    </div>\n   </>\n  );\n}\nexport function setNewStateValue(dispatch: any, obj: any) {\n  Object.entries(obj).forEach(([field, value]) => {\n    dispatch({ type: \"UPDATE_FIELD\", field, value });\n  });\n}\n","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\"\n}), 'Delete');\nexports.default = _default;","const pink = {\n  50: '#fce4ec',\n  100: '#f8bbd0',\n  200: '#f48fb1',\n  300: '#f06292',\n  400: '#ec407a',\n  500: '#e91e63',\n  600: '#d81b60',\n  700: '#c2185b',\n  800: '#ad1457',\n  900: '#880e4f',\n  A100: '#ff80ab',\n  A200: '#ff4081',\n  A400: '#f50057',\n  A700: '#c51162'\n};\nexport default pink;"],"names":["initialState","Purpose","Short","Acct_Code","mode","search","Inactive","reducer","state","action","type","_objectSpread","_defineProperty","field","value","pettyCashtransactionColumn","headerName","hide","flex","chartColumn","queryKey","PettyCashTransaction","_queryFn","_mutationFn","_mutationFn2","_mutationFn3","_refParent$current","refParent","useRef","_useReducer","useReducer","_useReducer2","_slicedToArray","dispatch","_useContext","useContext","AuthContext","myAxios","user","_useState","useState","_useState2","rows","setRows","table","chartAccountSearchRef","queryClient","useQueryClient","_useQuery","useQuery","queryFn","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","get","concat","headers","Authorization","accessToken","abrupt","sent","stop","apply","arguments","onSuccess","res","data","pettyCashTransaction","isLoading","refetchTransactionSearch","refetch","_useMutation","useMutation","mutationKey","mutationFn","_x","_callee2","variables","_context2","post","mutateAdd","mutate","loadingAdd","_useMutation2","_x2","_callee3","_context3","mutateEdit","loadingEdit","_useMutation3","_x3","_callee4","_context4","mutateDelete","loadingDelete","_useQueryModalTable","useQueryModalTable","link","url","queryUrlName","columns","uniqueId","responseDataKey","onSelected","selectedRowData","Acct_Title","closeChartAccount","searchRef","ModalChartAccount","ModalComponent","openChartAccount","openModal","isLoadingChartAccount","closeModal","handleInputChange","e","_e$target","target","name","handleOnSave","Swal","position","icon","title","showConfirmButton","timer","length","preventDefault","codeCondfirmationAlert","isUpdate","cb","userCodeConfirmation","saveCondfirmationAlert","isConfirm","success","invalidateQueries","resetModule","message","_table$current","setNewStateValue","current","removeSelection","wait","then","_jsxs","_Fragment","children","_jsx","PageHelmet","style","display","flexDirection","width","height","padding","Box","sx","theme","alignItems","columnGap","breakpoints","down","marginBottom","marginTop","TextField","label","fullWidth","size","onChange","InputProps","fontSize","top","onKeyDown","code","Button","variant","startIcon","AddIcon","id","onClick","LoadingButton","color","disabled","SaveIcon","loading","CloseIcon","text","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","result","isConfirmed","backgroundColor","pink","DeleteIcon","Petty_Log","onSubmit","includes","rowGap","React","required","FormControl","background","zIndex","InputLabel","htmlFor","OutlinedInput","endAdornment","InputAdornment","IconButton","edge","ManageAccountsIcon","FormControlLabel","control","Checkbox","checked","ref","getBoundingClientRect","overflowX","Table","table_id","isSingleSelection","isRowFreeze","dataSelection","selection","rowSelected","filter","item","undefined","newState","obj","Object","entries","forEach","_ref3","_ref4","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d","A100","A200","A400","A700"],"sourceRoot":""}