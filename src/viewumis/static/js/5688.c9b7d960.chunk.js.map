{"version":3,"file":"static/js/5688.c9b7d960.chunk.js","mappings":"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","sources":["feautures/Admin/Task/Accounting/CheckPulloutApproved.tsx","../node_modules/@mui/icons-material/Add.js","../node_modules/@mui/icons-material/Save.js"],"sourcesContent":["import { LoadingButton } from \"@mui/lab\";\r\nimport { useContext, useRef } from \"react\";\r\nimport { useMutation, useQuery } from \"react-query\";\r\nimport { AuthContext } from \"../../../../components/AuthContext\";\r\nimport { SelectInput, TextInput } from \"../../../../components/UpwardFields\";\r\nimport {\r\n  DataGridViewMultiSelectionReact,\r\n  useUpwardTableModalSearchSafeMode,\r\n} from \"../../../../components/DataGridViewReact\";\r\nimport { Button } from \"@mui/material\";\r\nimport Swal from \"sweetalert2\";\r\nimport { Loading } from \"../../../../components/Loading\";\r\nimport PageHelmet from \"../../../../components/Helmet\";\r\nimport \"../../../../style/monbileview/accounting/pullout.css\";\r\nimport SearchIcon from \"@mui/icons-material/Search\";\r\nimport { formatNumber } from \"./ReturnCheck\";\r\nimport { wait } from \"@testing-library/user-event/dist/utils\";\r\n\r\nconst column = [\r\n  {\r\n    key: \"row_count\",\r\n    label: \"#\",\r\n    width: 30,\r\n  },\r\n  {\r\n    key: \"Check_Date\",\r\n    label: \"Date\",\r\n    width: 80,\r\n  },\r\n  {\r\n    key: \"Bank\",\r\n    label: \"Bank\",\r\n    width: 150,\r\n  },\r\n  { key: \"CheckNo\", label: \"Check No\", width: 150 },\r\n  { key: \"Check_Amnt\", label: \"Amount\", width: 120, type: \"number\" },\r\n];\r\nexport default function CheckPulloutApproved() {\r\n  const { myAxios, user } = useContext(AuthContext);\r\n  const table = useRef<any>(null);\r\n\r\n  const rcpnRef = useRef<HTMLInputElement>(null);\r\n  const ppnoRef = useRef<HTMLInputElement>(null);\r\n  const nameRef = useRef<HTMLInputElement>(null);\r\n  const reasonRef = useRef<HTMLInputElement>(null);\r\n  const codeRef = useRef<HTMLInputElement>(null);\r\n\r\n  const btnAddRef = useRef<HTMLButtonElement>(null);\r\n\r\n  const { isLoading: isLoadingLoadDetails, mutate: mutateDetails } =\r\n    useMutation({\r\n      mutationKey: \"load-details\",\r\n      mutationFn: async (variable: any) =>\r\n        await myAxios.post(\r\n          `/task/accounting/pullout/approved/load-details`,\r\n          variable,\r\n          {\r\n            headers: {\r\n              Authorization: `Bearer ${user?.accessToken}`,\r\n            },\r\n          }\r\n        ),\r\n      onSuccess(res) {\r\n        const details = res?.data.details.map((itm: any) => {\r\n          return {\r\n            ...itm,\r\n            Check_Amnt: formatNumber(\r\n              parseFloat(itm.Check_Amnt.toString().replace(/,/g, \"\"))\r\n            ),\r\n          };\r\n        });\r\n\r\n        if (ppnoRef.current) ppnoRef.current.value = details[0].PNNo;\r\n        if (nameRef.current) nameRef.current.value = details[0].Name;\r\n        if (reasonRef.current) reasonRef.current.value = details[0].Reason;\r\n        table.current.setDataFormated(details);\r\n      },\r\n    });\r\n\r\n  const { mutate: mutatePrint, isLoading: isLoadingPrint } = useMutation({\r\n    mutationKey: \"print\",\r\n    mutationFn: async (variables: any) => {\r\n      return await myAxios.post(\r\n        \"/task/accounting/pullout/approved/print\",\r\n        variables,\r\n        {\r\n          responseType: \"arraybuffer\",\r\n          headers: {\r\n            Authorization: `Bearer ${user?.accessToken}`,\r\n          },\r\n        }\r\n      );\r\n    },\r\n    onSuccess: (response) => {\r\n      const pdfBlob = new Blob([response.data], { type: \"application/pdf\" });\r\n      const pdfUrl = URL.createObjectURL(pdfBlob);\r\n\r\n      window.open(\r\n        `/${\r\n          process.env.REACT_APP_DEPARTMENT\r\n        }/dashboard/report?pdf=${encodeURIComponent(pdfUrl)}`,\r\n        \"_blank\"\r\n      );\r\n    },\r\n  });\r\n\r\n  const { isLoading: isLoadingConfirmCode, mutate: mutateConfirmCode } =\r\n    useMutation({\r\n      mutationKey: \"confirm-code\",\r\n      mutationFn: async (variable: any) =>\r\n        await myAxios.post(\r\n          `/task/accounting/pullout/approved/confirm-code`,\r\n          variable,\r\n          {\r\n            headers: {\r\n              Authorization: `Bearer ${user?.accessToken}`,\r\n            },\r\n          }\r\n        ),\r\n      onSuccess(res) {\r\n        if (res.data.success) {\r\n          Swal.fire({\r\n            text: res.data.message,\r\n            icon: \"success\",\r\n            timer: 1500,\r\n          })\r\n            .then(() => {\r\n              mutatePrint({\r\n                state: {\r\n                  PNo: ppnoRef.current?.value,\r\n                  Name: nameRef.current?.value,\r\n                  rcpnNo: rcpnRef.current?.value,\r\n                  reportTitle: \"\",\r\n                },\r\n                tableData: table.current.getData().map((itm: Array<any>) => {\r\n                  return {\r\n                    Check_No: itm[3],\r\n                    Check_Date: itm[1],\r\n                    BankName: itm[2],\r\n                    Check_Amnt: itm[4],\r\n                    seq: itm[0],\r\n                  };\r\n                }),\r\n              });\r\n            })\r\n            .finally(() => {\r\n              table.current.resetTable();\r\n              if (rcpnRef.current) rcpnRef.current.value = \"\";\r\n              if (ppnoRef.current) ppnoRef.current.value = \"\";\r\n              if (nameRef.current) nameRef.current.value = \"\";\r\n              if (reasonRef.current) reasonRef.current.value = \"\";\r\n              if (codeRef.current) codeRef.current.value = \"\";\r\n            });\r\n        } else {\r\n          Swal.fire({\r\n            text: res.data.message,\r\n            icon: \"warning\",\r\n            showCancelButton: true,\r\n            confirmButtonColor: \"#3085d6\",\r\n            cancelButtonColor: \"#d33\",\r\n            confirmButtonText: \"Yes, confirm it!\",\r\n          });\r\n        }\r\n      },\r\n    });\r\n\r\n  const {\r\n    UpwardTableModalSearch: RcpnNoSearchUpwardTableModalSearch,\r\n    openModal: rcpnNoSearchOpenModal,\r\n    closeModal: rcpnNoSearchCloseModal,\r\n  } = useUpwardTableModalSearchSafeMode({\r\n    link: \"/task/accounting/pullout/reqeust/get-rcpn-no\",\r\n    column: [{ key: \"RCPNo\", label: \"RCPN No.\", width: 400 }],\r\n    getSelectedItem: async (rowItm: any, _: any, rowIdx: any, __: any) => {\r\n      if (rowItm) {\r\n        mutateDetails({\r\n          RCPNo: rowItm[0],\r\n        });\r\n\r\n        if (rcpnRef.current) {\r\n          rcpnRef.current.value = rowItm[0];\r\n        }\r\n        rcpnNoSearchCloseModal();\r\n      }\r\n    },\r\n  });\r\n\r\n  const { isLoading: isLoadingConfirm, mutate: mutateConfirm } = useMutation({\r\n    mutationKey: \"confirm\",\r\n    mutationFn: async (variable: any) =>\r\n      await myAxios.post(\r\n        `/task/accounting/pullout/approved/confirm`,\r\n        variable,\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${user?.accessToken}`,\r\n          },\r\n        }\r\n      ),\r\n    onSuccess(res) {\r\n      if (res.data.success) {\r\n        return Swal.fire({\r\n          title: \"Are you sure?\",\r\n          text: res.data.message,\r\n          icon: \"warning\",\r\n          showCancelButton: true,\r\n          confirmButtonColor: \"#3085d6\",\r\n          cancelButtonColor: \"#d33\",\r\n          confirmButtonText: \"Yes, confirm it!\",\r\n        }).then((result) => {\r\n          if (result.isConfirmed) {\r\n            const getData = table.current.getData();\r\n            const formatData = getData.map((itm: any) => {\r\n              return {\r\n                Check_Date: itm[1],\r\n                Bank: itm[2],\r\n                Check_No: itm[3],\r\n                Check_Amnt: itm[4],\r\n              };\r\n            });\r\n            mutateConfirmCode({\r\n              RCPNo: rcpnRef.current?.value,\r\n              PNNo: ppnoRef.current?.value,\r\n              reason: reasonRef.current?.value,\r\n              Name: nameRef.current?.value,\r\n              code: codeRef.current?.value,\r\n              selected: JSON.stringify(formatData),\r\n            });\r\n          }\r\n        });\r\n      }\r\n\r\n      alert(res.data.message);\r\n    },\r\n  });\r\n\r\n  return (\r\n    <div\r\n      className=\"main\"\r\n      style={{\r\n        flex: \"1\",\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        background: \"#F1F1F1\",\r\n      }}\r\n    >\r\n      <RcpnNoSearchUpwardTableModalSearch />\r\n      <PageHelmet title=\"Pullout Approved\" />\r\n      {(isLoadingLoadDetails ||\r\n        isLoadingConfirm ||\r\n        isLoadingConfirmCode ||\r\n        isLoadingPrint) && <Loading />}\r\n      <div\r\n        className=\"content\"\r\n        style={{\r\n          padding: \"10px\",\r\n          width: \"62%\",\r\n          border: \"1px sold black\",\r\n          height: \"500px\",\r\n          boxShadow: \"1px 1px 2px 2px black\",\r\n          display: \"flex\",\r\n          flexDirection: \"column\",\r\n          boxSizing: \"border-box\",\r\n        }}\r\n      >\r\n        <div\r\n          style={{\r\n            height: \"auto\",\r\n            boxSizing: \"border-box\",\r\n          }}\r\n        >\r\n          <TextInput\r\n            containerClassName=\"custom-input\"\r\n            containerStyle={{\r\n              width: \"50%\",\r\n              marginBottom: \"8px\",\r\n            }}\r\n            label={{\r\n              title: \"RCP No. :\",\r\n              style: {\r\n                fontSize: \"12px\",\r\n                fontWeight: \"bold\",\r\n                width: \"100px\",\r\n              },\r\n            }}\r\n            input={{\r\n              type: \"text\",\r\n              style: { width: \"calc(100% - 100px)\" },\r\n              onKeyDown: (e) => {\r\n                if (e.code === \"NumpadEnter\" || e.code === \"Enter\") {\r\n                  rcpnNoSearchOpenModal(e.currentTarget.value);\r\n                }\r\n              },\r\n            }}\r\n            icon={<SearchIcon sx={{ fontSize: \"18px\" }} />}\r\n            onIconClick={(e) => {\r\n              e.preventDefault();\r\n              if (rcpnRef.current) {\r\n                rcpnNoSearchOpenModal(rcpnRef.current.value);\r\n              }\r\n            }}\r\n            inputRef={rcpnRef}\r\n          />\r\n\r\n          <TextInput\r\n            containerClassName=\"custom-input\"\r\n            containerStyle={{\r\n              width: \"50%\",\r\n              marginBottom: \"8px\",\r\n              marginLeft: \"50px\",\r\n            }}\r\n            label={{\r\n              title: \"PN No. :\",\r\n              style: {\r\n                fontSize: \"12px\",\r\n                fontWeight: \"bold\",\r\n                width: \"100px\",\r\n              },\r\n            }}\r\n            input={{\r\n              disabled: true,\r\n              type: \"text\",\r\n              style: { width: \"calc(100% - 100px)\" },\r\n            }}\r\n            inputRef={ppnoRef}\r\n          />\r\n\r\n          <TextInput\r\n            containerClassName=\"custom-input\"\r\n            containerStyle={{\r\n              width: \"50%\",\r\n              marginBottom: \"8px\",\r\n              marginLeft: \"50px\",\r\n            }}\r\n            label={{\r\n              title: \"Client :\",\r\n              style: {\r\n                fontSize: \"12px\",\r\n                fontWeight: \"bold\",\r\n                width: \"100px\",\r\n              },\r\n            }}\r\n            input={{\r\n              disabled: true,\r\n              type: \"text\",\r\n              style: { width: \"calc(100% - 100px)\" },\r\n            }}\r\n            inputRef={nameRef}\r\n          />\r\n          <TextInput\r\n            containerClassName=\"custom-input\"\r\n            containerStyle={{\r\n              width: \"50%\",\r\n              marginBottom: \"8px\",\r\n              marginLeft: \"50px\",\r\n            }}\r\n            label={{\r\n              title: \"Reason :\",\r\n              style: {\r\n                fontSize: \"12px\",\r\n                fontWeight: \"bold\",\r\n                width: \"100px\",\r\n              },\r\n            }}\r\n            input={{\r\n              disabled: true,\r\n              type: \"text\",\r\n              style: { width: \"calc(100% - 100px)\" },\r\n            }}\r\n            inputRef={reasonRef}\r\n          />\r\n        </div>\r\n        <DataGridViewMultiSelectionReact\r\n          isTableSelectable={false}\r\n          ref={table}\r\n          columns={column}\r\n          rows={[]}\r\n          containerStyle={{\r\n            flex: 1,\r\n          }}\r\n          getSelectedItem={(rowItm: any) => {\r\n            if (rowItm) {\r\n            }\r\n          }}\r\n        />\r\n        <div\r\n          style={{\r\n            height: \"35px\",\r\n            display: \"flex\",\r\n            justifyContent: \"flex-end\",\r\n            alignItems: \"center\",\r\n            columnGap: \"5px\",\r\n          }}\r\n        >\r\n          <TextInput\r\n            containerClassName=\"custom-input\"\r\n            label={{\r\n              title: \"Authentication Code:\",\r\n              style: {\r\n                fontSize: \"12px\",\r\n                fontWeight: \"bold\",\r\n                width: \"140px\",\r\n              },\r\n            }}\r\n            input={{\r\n              type: \"text\",\r\n              style: { width: \"300px\" },\r\n              onKeyDown: (e) => {\r\n                if (e.key === \"Enter\" || e.key === \"NumEnter\") {\r\n                  mutateConfirm({\r\n                    RCPNo: rcpnRef.current?.value,\r\n                    code: e.currentTarget.value,\r\n                  });\r\n                }\r\n              },\r\n            }}\r\n            inputRef={codeRef}\r\n          />\r\n          <Button\r\n            ref={btnAddRef}\r\n            variant=\"contained\"\r\n            color=\"info\"\r\n            style={{\r\n              height: \"25px\",\r\n              fontSize: \"12px\",\r\n            }}\r\n            onClick={(e) => {\r\n              mutateConfirm({\r\n                RCPNo: rcpnRef.current?.value,\r\n                code: codeRef.current?.value,\r\n              });\r\n            }}\r\n          >\r\n            Confirm\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\"\n}), 'Add');\nexports.default = _default;","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M17 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V7l-4-4zm-5 16c-1.66 0-3-1.34-3-3s1.34-3 3-3 3 1.34 3 3-1.34 3-3 3zm3-10H5V5h10v4z\"\n}), 'Save');\nexports.default = _default;"],"names":["column","key","label","width","type","CheckPulloutApproved","_mutationFn","_mutationFn2","_mutationFn3","_getSelectedItem","_mutationFn4","_useContext","useContext","AuthContext","myAxios","user","table","useRef","rcpnRef","ppnoRef","nameRef","reasonRef","codeRef","btnAddRef","_useMutation","useMutation","mutationKey","mutationFn","_x","_asyncToGenerator","_regeneratorRuntime","mark","_callee","variable","wrap","_context","prev","next","post","headers","Authorization","concat","accessToken","abrupt","sent","stop","apply","arguments","onSuccess","res","details","data","map","itm","_objectSpread","Check_Amnt","formatNumber","parseFloat","toString","replace","current","value","PNNo","Name","Reason","setDataFormated","isLoadingLoadDetails","isLoading","mutateDetails","mutate","_useMutation2","_x2","_callee2","variables","_context2","responseType","response","pdfBlob","Blob","pdfUrl","URL","createObjectURL","window","open","process","encodeURIComponent","mutatePrint","isLoadingPrint","_useMutation3","_x3","_callee3","_context3","success","Swal","text","message","icon","timer","then","_ppnoRef$current","_nameRef$current","_rcpnRef$current","state","PNo","rcpnNo","reportTitle","tableData","getData","Check_No","Check_Date","BankName","seq","finally","resetTable","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","isLoadingConfirmCode","mutateConfirmCode","_useUpwardTableModalS","useUpwardTableModalSearchSafeMode","link","getSelectedItem","_x4","_x5","_x6","_x7","_callee4","rowItm","_","rowIdx","__","_context4","RCPNo","rcpnNoSearchCloseModal","RcpnNoSearchUpwardTableModalSearch","UpwardTableModalSearch","rcpnNoSearchOpenModal","openModal","closeModal","_useMutation4","_x8","_callee5","_context5","title","result","isConfirmed","_rcpnRef$current2","_ppnoRef$current2","_reasonRef$current","_nameRef$current2","_codeRef$current","formatData","Bank","reason","code","selected","JSON","stringify","alert","isLoadingConfirm","mutateConfirm","_jsxs","className","style","flex","display","justifyContent","alignItems","background","children","_jsx","PageHelmet","Loading","padding","border","height","boxShadow","flexDirection","boxSizing","TextInput","containerClassName","containerStyle","marginBottom","fontSize","fontWeight","input","onKeyDown","e","currentTarget","SearchIcon","sx","onIconClick","preventDefault","inputRef","marginLeft","disabled","DataGridViewMultiSelectionReact","isTableSelectable","ref","columns","rows","columnGap","_rcpnRef$current3","Button","variant","color","onClick","_rcpnRef$current4","_codeRef$current2","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d"],"sourceRoot":""}