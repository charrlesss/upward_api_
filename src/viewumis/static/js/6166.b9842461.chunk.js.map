{"version":3,"file":"static/js/6166.b9842461.chunk.js","mappings":"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","sources":["feautures/Admin/Reference/Entry/IDEntry.tsx","hooks/useUrlParams.tsx"],"sourcesContent":["import { useState, lazy, Suspense } from \"react\";\nimport { Box, Chip } from \"@mui/material\";\nimport useUrlParams from \"../../../../hooks/useUrlParams\";\nimport { User } from \"../../../../components/AuthContext\";\nimport { AxiosInstance } from \"axios\";\nimport { Loading } from \"../../../../components/Loading\";\nimport \"../../../../style/monbileview/reference/reference.css\";\n\ntype classificationType =\n  | \"Client\"\n  | \"Employee\"\n  | \"Agent\"\n  | \"Fixed Assets\"\n  | \"Supplier\"\n  | \"Others\";\n\nconst Client = lazy(() => import(\"./EntryComponents/Client\"));\nconst Employee = lazy(() => import(\"./EntryComponents/Employee\"));\nconst Agent = lazy(() => import(\"./EntryComponents/Agent\"));\nconst FixedAssets = lazy(() => import(\"./EntryComponents/FixedAssets\"));\nconst Supplier = lazy(() => import(\"./EntryComponents/Supplier\"));\nconst Others = lazy(() => import(\"./EntryComponents/Others\"));\n\nconst components = [\n  {\n    component: <Client />,\n    classification: \"Client\",\n  },\n  {\n    component: <Employee />,\n    classification: \"Employee\",\n  },\n  {\n    component: <Agent />,\n    classification: \"Agent\",\n  },\n  {\n    component: <FixedAssets />,\n    classification: \"Fixed Assets\",\n  },\n  {\n    component: <Supplier />,\n    classification: \"Supplier\",\n  },\n  {\n    component: <Others />,\n    classification: \"Others\",\n  },\n];\n\nfunction GetComponentByClassfication(classification: string) {\n  return components.filter((item) =>\n    item.classification.includes(classification)\n  )[0].component;\n}\n\nfunction LoadingEntry() {\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        position: \"fixed\",\n        top: \"0\",\n        bottom: \"0\",\n        left: \"0\",\n        right: \"0\",\n        background: \"#F1F1F1\",\n      }}\n    >\n      <div>\n        <Loading />\n      </div>\n    </div>\n  );\n}\n\nexport default function IDEntry() {\n  const { searchParams, setSearchParams } = useUrlParams();\n  const [renderComponent, setRenderComponent] = useState<JSX.Element | null>(\n    GetComponentByClassfication(searchParams.get(\"classification\") as string)\n  );\n\n  const classification = searchParams.get(\n    \"classification\"\n  ) as classificationType;\n\n  const handleClick = (e: any) => {\n    setSearchParams((prev) => {\n      prev.set(\"selected\", \"\");\n      prev.set(\"classification\", e.target.textContent);\n      return prev;\n    });\n    setRenderComponent(GetComponentByClassfication(e.target.textContent));\n  };\n\n  return (\n    <div\n      style={{\n        width: \"100%\",\n        height: \"100%\",\n        flex: 1,\n        display: \"flex\",\n        flexDirection: \"column\",\n        padding: \"5px\",\n        position:\"relative\",\n      }}\n    >\n      <div>\n        <ChipsButton\n          classification={classification}\n          ClassificationData={components}\n          handleClick={handleClick}\n          disabled={false}\n        />\n      </div>\n      <Suspense fallback={<LoadingEntry />}>{renderComponent}</Suspense>\n    </div>\n  );\n}\n\nexport async function RequestNewID(\n  myAxios: AxiosInstance,\n  user: User | null,\n  data: { sign: string; type: string }\n) {\n  return await myAxios.post(\"/reference/id-entry-generate-id\", data, {\n    headers: { Authorization: `Bearer ${user?.accessToken}` },\n  });\n}\n\nfunction ChipsButton({\n  handleClick,\n  ClassificationData,\n  classification,\n  disabled,\n}: {\n  handleClick: any;\n  ClassificationData: Array<{ classification: string }>;\n  classification: string;\n  disabled?: boolean;\n}) {\n  return (\n    <div\n      className=\"button-chips-container\"\n      style={{\n        display: \"flex\",\n        columnGap: \"5px\",\n        marginBottom: \"12px\",\n      }}\n    >\n      {ClassificationData.map((item, idx) => {\n        return (\n          <Chip\n            disabled={item.classification.includes(classification) || disabled}\n            color={\n              item.classification.includes(classification) ? \"error\" : \"default\"\n            }\n            label={item.classification}\n            key={idx}\n            variant=\"outlined\"\n            onClick={handleClick}\n          />\n        );\n      })}\n    </div>\n  );\n}\n","import { useSearchParams } from \"react-router-dom\";\n\nexport default function useUrlParams() {\n  const [searchParams, setSearchParams] = useSearchParams({\n    drawer: \"true\",\n    classification: \"Client\",\n    selected: \"\",\n    entrySearch: \"\",\n    page: \"1\",\n    pageSize: \"100\",\n    policySearch: \"\",\n    subaccountSearch: \"\",\n    mortgageeSearch: \"\",\n    sublineSearch: \"\",\n    ratesSearch: \"\",\n    ctplSearch: \"\",\n    bankSearch:'',\n    chartAccountSearch:'',\n    transactionCodeSearch:'',\n    pettyCashtTransactionSearch:'',\n    bankAccountSearch:'',\n  });\n\n  return {\n    searchParams,\n    setSearchParams,\n  };\n}\n"],"names":["Client","lazy","Employee","Agent","FixedAssets","Supplier","Others","components","component","_jsx","classification","GetComponentByClassfication","filter","item","includes","LoadingEntry","style","display","justifyContent","alignItems","position","top","bottom","left","right","background","children","Loading","IDEntry","_useUrlParams","useUrlParams","searchParams","setSearchParams","_useState","useState","get","_useState2","_slicedToArray","renderComponent","setRenderComponent","_jsxs","width","height","flex","flexDirection","padding","ChipsButton","ClassificationData","handleClick","e","prev","set","target","textContent","disabled","Suspense","fallback","RequestNewID","_x","_x2","_x3","_RequestNewID","_asyncToGenerator","_regeneratorRuntime","mark","_callee","myAxios","user","data","wrap","_context","next","post","headers","Authorization","concat","accessToken","abrupt","sent","stop","apply","arguments","_ref","className","columnGap","marginBottom","map","idx","Chip","color","label","variant","onClick","_useSearchParams","useSearchParams","drawer","selected","entrySearch","page","pageSize","policySearch","subaccountSearch","mortgageeSearch","sublineSearch","ratesSearch","ctplSearch","bankSearch","chartAccountSearch","transactionCodeSearch","pettyCashtTransactionSearch","bankAccountSearch","_useSearchParams2"],"sourceRoot":""}