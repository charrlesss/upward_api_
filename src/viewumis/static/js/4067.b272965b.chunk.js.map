{"version":3,"file":"static/js/4067.b272965b.chunk.js","mappings":"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","sources":["feautures/Admin/Reference/Entry/EntryComponents/Employee.tsx","../node_modules/@mui/icons-material/Delete.js","../node_modules/@mui/material/colors/pink.js"],"sourcesContent":["import React, { useContext, useEffect, useRef, useState } from \"react\";\nimport { Button } from \"@mui/material\";\nimport { AuthContext } from \"../../../../../components/AuthContext\";\nimport { useMutation, useQuery } from \"react-query\";\nimport Swal from \"sweetalert2\";\nimport { LoadingButton } from \"@mui/lab\";\nimport AddIcon from \"@mui/icons-material/Add\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport SaveIcon from \"@mui/icons-material/Save\";\nimport { wait } from \"../../../../../lib/wait\";\nimport { pink } from \"@mui/material/colors\";\nimport {\n  codeCondfirmationAlert,\n  saveCondfirmationAlert,\n} from \"../../../../../lib/confirmationAlert\";\nimport PageHelmet from \"../../../../../components/Helmet\";\nimport {\n  SelectInput,\n  TextAreaInput,\n  TextInput,\n} from \"../../../../../components/UpwardFields\";\nimport SearchIcon from \"@mui/icons-material/Search\";\nimport { DataGridViewReact } from \"../../../../../components/DataGridViewReact\";\nimport { Loading } from \"../../../../../components/Loading\";\nimport { Autocomplete } from \"../../../Task/Accounting/PettyCash\";\nconst employeeColumn = [\n  { key: \"entry_employee_id\", label: \"ID\", width: 130 },\n  { key: \"firstname\", label: \"First Name\", width: 200 },\n  {\n    key: \"lastname\",\n    label: \"Last Name\",\n    width: 200,\n  },\n  {\n    key: \"middlename\",\n    label: \"Middle Name\",\n    width: 200,\n  },\n  {\n    key: \"suffix\",\n    label: \"Suffix\",\n    width: 130,\n  },\n  {\n    key: \"NewShortName\",\n    label: \"Sub Account\",\n    width: 130,\n  },\n\n  {\n    key: \"address\",\n    label: \"Address\",\n    width: 500,\n  },\n  {\n    key: \"createdAt\",\n    label: \"Created At\",\n    width: 130,\n    hide: true,\n  },\n];\nexport default function Employee() {\n  const { myAxios, user } = useContext(AuthContext);\n  const [mode, setMode] = useState(\"\");\n\n  const tableRef = useRef<any>(null);\n  const searchInputRef = useRef<HTMLInputElement>(null);\n\n  const clientIdRef = useRef<HTMLInputElement>(null);\n  const firstnameRef = useRef<HTMLInputElement>(null);\n  const middleRef = useRef<HTMLInputElement>(null);\n  const lastnameRef = useRef<HTMLInputElement>(null);\n\n  const fullnameRef = useRef<HTMLTextAreaElement>(null);\n  const authorizeRepRef = useRef<HTMLInputElement>(null);\n\n  const suffixRef = useRef<HTMLInputElement>(null);\n  const _subAccount = useRef<any>(null);\n  const subAccount = useRef<HTMLSelectElement>(null);\n  const branchCodeRef = useRef(\"\");\n  const addressRef = useRef<HTMLTextAreaElement>(null);\n\n  const { isLoading: loadingClientId, refetch: refetchClientId } = useQuery({\n    queryKey: \"employee-generate-id\",\n    queryFn: async () =>\n      await myAxios.post(\n        \"/reference/id-entry-generate-id\",\n        { sign: \"M\", type: \"entry employee\" },\n        {\n          headers: { Authorization: `Bearer ${user?.accessToken}` },\n        }\n      ),\n    refetchOnWindowFocus: false,\n    onSuccess: (res) => {\n      wait(100).then(() => {\n        if (clientIdRef.current) {\n          clientIdRef.current.value = res.data.generateID;\n        }\n      });\n    },\n  });\n\n  const { mutate: mutateAdd, isLoading: loadingAdd } = useMutation({\n    mutationKey: \"add-client\",\n    mutationFn: async (variables: any) =>\n      await myAxios.post(\"/reference/id-entry-employee\", variables, {\n        headers: { Authorization: `Bearer ${user?.accessToken}` },\n      }),\n    onSuccess,\n  });\n  const { mutate: mutateEdit, isLoading: loadingEdit } = useMutation({\n    mutationKey: \"edit-employee\",\n    mutationFn: async (variables: any) =>\n      await myAxios.post(`/reference/id-entry-employee-update`, variables, {\n        headers: { Authorization: `Bearer ${user?.accessToken}` },\n      }),\n    onSuccess,\n  });\n  const { mutate: mutateDelete, isLoading: loadingDelete } = useMutation({\n    mutationKey: \"delete-client\",\n    mutationFn: async (variables: any) =>\n      await myAxios.post(`/reference/entry-delete?entry=Employee`, variables, {\n        headers: {\n          Authorization: `Bearer ${user?.accessToken}`,\n        },\n      }),\n    onSuccess,\n  });\n  const { isLoading: isLoadingSearch, mutate: mutateSearch } = useMutation({\n    mutationKey: \"search\",\n    mutationFn: async (variables: any) =>\n      await myAxios.post(`/reference/search-entry`, variables, {\n        headers: { Authorization: `Bearer ${user?.accessToken}` },\n      }),\n    onSuccess: (res) => {\n      console.log(res);\n      tableRef.current.setDataFormated((res as any)?.data.entry);\n    },\n  });\n  const { isLoading: subAccountLoading, refetch: refetchSubAcct } = useQuery({\n    queryKey: \"sub-accounts\",\n    queryFn: async () =>\n      await myAxios.get(`/reference/sub-account`, {\n        headers: { Authorization: `Bearer ${user?.accessToken}` },\n      }),\n    onSuccess: (res) => {\n      wait(100).then(() => {\n        if (_subAccount.current)\n          _subAccount.current.setDataSource(res.data?.subAccount);\n        wait(100).then(() => {\n          const data = res.data?.subAccount.filter(\n            (itm: any) => itm.Acronym === \"HO\"\n          );\n\n          if (subAccount.current) subAccount.current.value = data[0].ShortName;\n          branchCodeRef.current = data[0].Sub_Acct;\n        });\n      });\n    },\n  });\n\n  const mutateSearchRef = useRef(mutateSearch);\n  useEffect(() => {\n    mutateSearchRef.current({\n      search: \"\",\n      entry: \"Employee\",\n    });\n  }, []);\n\n  function onSuccess(res: any) {\n    if (res.data.success) {\n      resetField();\n      setMode(\"\");\n      tableRef.current.setSelectedRow(null);\n      tableRef.current.resetCheckBox();\n\n      mutateSearchRef.current({\n        search: \"\",\n        entry: \"Employee\",\n      });\n\n      return Swal.fire({\n        position: \"center\",\n        icon: \"success\",\n        title: res.data.message,\n        showConfirmButton: false,\n        timer: 1500,\n      });\n    }\n    Swal.fire({\n      position: \"center\",\n      icon: \"error\",\n      title: res.data.message,\n      showConfirmButton: false,\n      timer: 1500,\n    });\n  }\n  function handleOnSave(e: any) {\n    if (firstnameRef.current?.value === \"\") {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"error\",\n        title: \"Firstname is required!\",\n        showConfirmButton: false,\n        timer: 1500,\n      });\n    }\n\n    if (subAccount.current?.value === \"\") {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"error\",\n        title: \"Sub Account is required!\",\n        showConfirmButton: false,\n        timer: 1500,\n      });\n    }\n\n    const state = {\n      entry_employee_id: clientIdRef.current?.value,\n      firstname: firstnameRef.current?.value.toLocaleUpperCase(),\n      middlename: middleRef.current?.value.toLocaleUpperCase(),\n      lastname: lastnameRef.current?.value.toLocaleUpperCase(),\n      company: fullnameRef.current?.value.toLocaleUpperCase(),\n      auth_representative: authorizeRepRef.current?.value,\n      suffix: suffixRef.current?.value,\n      sub_account: branchCodeRef.current,\n      address: addressRef.current?.value,\n    };\n    e.preventDefault();\n    if (mode === \"edit\") {\n      codeCondfirmationAlert({\n        isUpdate: true,\n        cb: (userCodeConfirmation) => {\n          mutateEdit({ ...state, userCodeConfirmation });\n        },\n      });\n    } else {\n      saveCondfirmationAlert({\n        isConfirm: () => {\n          mutateAdd(state);\n        },\n      });\n    }\n  }\n  function resetField() {\n    wait(100).then(() => {\n      if (firstnameRef.current) {\n        firstnameRef.current.value = \"\";\n      }\n      if (middleRef.current) {\n        middleRef.current.value = \"\";\n      }\n      if (lastnameRef.current) {\n        lastnameRef.current.value = \"\";\n      }\n\n      if (suffixRef.current) {\n        suffixRef.current.value = \"\";\n      }\n      if (addressRef.current) {\n        addressRef.current.value = \"\";\n      }\n      branchCodeRef.current = \"\";\n\n      refetchClientId();\n      refetchSubAcct();\n    });\n  }\n\n  return (\n    <>\n      <PageHelmet title=\"ID Entry - Employee\" />\n      {isLoadingSearch && <Loading />}\n      <div\n        style={{\n          display: \"flex\",\n          columnGap: \"10px\",\n          marginBottom: \"10px\",\n        }}\n      >\n        <TextInput\n          containerClassName=\"custom-input\"\n          containerStyle={{\n            width: \"500px\",\n          }}\n          label={{\n            title: \"Search: \",\n            style: {\n              fontSize: \"12px\",\n              fontWeight: \"bold\",\n              width: \"70px\",\n            },\n          }}\n          input={{\n            className: \"search-input-up-on-key-down\",\n            type: \"search\",\n            onKeyDown: (e) => {\n              if (e.key === \"Enter\" || e.key === \"NumpadEnter\") {\n                e.preventDefault();\n                mutateSearch({\n                  search: e.currentTarget.value,\n                  entry: \"Employee\",\n                });\n              }\n            },\n            style: { width: \"100%\" },\n          }}\n          icon={<SearchIcon sx={{ fontSize: \"18px\" }} />}\n          onIconClick={(e) => {\n            e.preventDefault();\n            if (searchInputRef.current) {\n              mutateSearch({\n                search: searchInputRef.current.value,\n                entry: \"Employee\",\n              });\n            }\n          }}\n          inputRef={searchInputRef}\n        />\n        <div\n          className=\"button-action-desktop\"\n          style={{\n            display: \"flex\",\n            alignItems: \"center\",\n            columnGap: \"5px\",\n            marginLeft: \"10px\",\n          }}\n        >\n          {mode === \"\" && (\n            <Button\n              variant=\"contained\"\n              startIcon={<AddIcon />}\n              id=\"entry-header-save-button\"\n              sx={{\n                height: \"22px\",\n                fontSize: \"11px\",\n              }}\n              onClick={() => {\n                refetchClientId();\n                setMode(\"add\");\n              }}\n            >\n              New\n            </Button>\n          )}\n          <LoadingButton\n            id=\"save-entry-header\"\n            color=\"primary\"\n            variant=\"contained\"\n            type=\"submit\"\n            sx={{\n              height: \"22px\",\n              fontSize: \"11px\",\n            }}\n            onClick={handleOnSave}\n            startIcon={<SaveIcon />}\n            disabled={mode === \"\"}\n            loading={loadingAdd || loadingEdit}\n          >\n            Save\n          </LoadingButton>\n\n          <LoadingButton\n            disabled={mode === \"\"}\n            id=\"save-entry-header\"\n            variant=\"contained\"\n            sx={{\n              height: \"22px\",\n              fontSize: \"11px\",\n              backgroundColor: pink[500],\n              \"&:hover\": {\n                backgroundColor: pink[600],\n              },\n            }}\n            loading={loadingDelete}\n            startIcon={<DeleteIcon />}\n            onClick={() => {\n              codeCondfirmationAlert({\n                isUpdate: false,\n                cb: (userCodeConfirmation) => {\n                  mutateDelete({\n                    id: clientIdRef.current?.value,\n                    userCodeConfirmation,\n                  });\n                },\n              });\n            }}\n          >\n            Delete\n          </LoadingButton>\n          {mode !== \"\" && (\n            <Button\n              sx={{\n                height: \"22px\",\n                fontSize: \"11px\",\n              }}\n              variant=\"contained\"\n              startIcon={<CloseIcon />}\n              color=\"error\"\n              onClick={() => {\n                Swal.fire({\n                  title: \"Are you sure?\",\n                  text: \"You won't be able to revert this!\",\n                  icon: \"warning\",\n                  showCancelButton: true,\n                  confirmButtonColor: \"#3085d6\",\n                  cancelButtonColor: \"#d33\",\n                  confirmButtonText: \"Yes, cancel it!\",\n                }).then((result) => {\n                  if (result.isConfirmed) {\n                    resetField();\n                    setMode(\"\");\n                    tableRef.current.setSelectedRow(null);\n                    tableRef.current.resetCheckBox();\n                  }\n                });\n              }}\n            >\n              Cancel\n            </Button>\n          )}\n        </div>\n      </div>\n      <div\n        className=\"container-fields-custom-client\"\n        style={{\n          display: \"flex\",\n          columnGap: \"20px\",\n        }}\n      >\n        <div\n          style={{\n            display: \"flex\",\n            flexDirection: \"column\",\n            rowGap: \"5px\",\n            flex: 1,\n          }}\n        >\n          {loadingClientId ? (\n            <LoadingButton loading={loadingClientId} />\n          ) : (\n            <TextInput\n              containerClassName=\"custom-input\"\n              label={{\n                title: \"Employee ID : \",\n                style: {\n                  fontSize: \"12px\",\n                  fontWeight: \"bold\",\n                  width: \"130px\",\n                },\n              }}\n              input={{\n                disabled: mode === \"\",\n                readOnly: true,\n                type: \"text\",\n                style: { width: \"100%\", height: \"22px\" },\n                onKeyDown: (e) => {\n                  if (e.code === \"NumpadEnter\" || e.code === \"Enter\") {\n                    firstnameRef.current?.focus();\n                  }\n                },\n              }}\n              inputRef={clientIdRef}\n            />\n          )}\n\n          <TextInput\n            containerClassName=\"custom-input\"\n            label={{\n              title: \"First Name : \",\n              style: {\n                fontSize: \"12px\",\n                fontWeight: \"bold\",\n                width: \"130px\",\n              },\n            }}\n            input={{\n              disabled: mode === \"\",\n              type: \"text\",\n              style: {\n                width: \"100%\",\n                height: \"22px\",\n                textTransform: \"uppercase\",\n              },\n              onKeyDown: (e) => {\n                if (e.code === \"NumpadEnter\" || e.code === \"Enter\") {\n                  middleRef.current?.focus();\n                }\n              },\n            }}\n            inputRef={firstnameRef}\n          />\n          <TextInput\n            containerClassName=\"custom-input\"\n            label={{\n              title: \"Middle Name : \",\n              style: {\n                fontSize: \"12px\",\n                fontWeight: \"bold\",\n                width: \"130px\",\n              },\n            }}\n            input={{\n              disabled: mode === \"\",\n              type: \"text\",\n              style: {\n                width: \"100%\",\n                height: \"22px\",\n                textTransform: \"uppercase\",\n              },\n              onKeyDown: (e) => {\n                if (e.code === \"NumpadEnter\" || e.code === \"Enter\") {\n                  lastnameRef.current?.focus();\n                }\n              },\n            }}\n            inputRef={middleRef}\n          />\n          <TextInput\n            containerClassName=\"custom-input\"\n            label={{\n              title: \"Last Name : \",\n              style: {\n                fontSize: \"12px\",\n                fontWeight: \"bold\",\n                width: \"130px\",\n              },\n            }}\n            input={{\n              disabled: mode === \"\",\n              type: \"text\",\n              style: {\n                width: \"100%\",\n                height: \"22px\",\n                textTransform: \"uppercase\",\n              },\n              onKeyDown: (e) => {\n                if (e.code === \"NumpadEnter\" || e.code === \"Enter\") {\n                  suffixRef.current?.focus();\n                }\n              },\n            }}\n            inputRef={lastnameRef}\n          />\n          <TextInput\n            containerClassName=\"custom-input\"\n            label={{\n              title: \"Suffix : \",\n              style: {\n                fontSize: \"12px\",\n                fontWeight: \"bold\",\n                width: \"130px\",\n              },\n            }}\n            input={{\n              disabled: mode === \"\",\n              type: \"text\",\n              style: { width: \"100%\", height: \"22px\" },\n              onKeyDown: (e) => {\n                if (e.code === \"NumpadEnter\" || e.code === \"Enter\") {\n                  subAccount.current?.focus();\n                }\n              },\n            }}\n            inputRef={suffixRef}\n          />\n        </div>\n        <div\n          className=\"clear-margin custom-padding\"\n          style={{\n            display: \"flex\",\n            flexDirection: \"column\",\n            rowGap: \"5px\",\n            marginBottom: \"40px\",\n            flex: 1,\n          }}\n        >\n          {subAccountLoading ? (\n            <LoadingButton loading={subAccountLoading} />\n          ) : (\n            <Autocomplete\n              disableInput={mode === \"\"}\n              ref={_subAccount}\n              containerStyle={{\n                width: \"100%\",\n              }}\n              label={{\n                title: \"Sub Account : \",\n                style: {\n                  fontSize: \"12px\",\n                  fontWeight: \"bold\",\n                  width: \"110px\",\n                },\n              }}\n              DisplayMember={\"ShortName\"}\n              DataSource={[]}\n              inputRef={subAccount}\n              input={{\n                style: {\n                  width: \"100%\",\n                },\n              }}\n              onChange={(selected: any, e: any) => {\n                if (subAccount.current)\n                  subAccount.current.value = selected.ShortName;\n                console.log(selected);\n\n                branchCodeRef.current = selected.Sub_Acct;\n              }}\n              onKeydown={(e: any) => {\n                if (e.key === \"Enter\" || e.key === \"NumpadEnter\") {\n                  e.preventDefault();\n                  addressRef.current?.focus();\n                }\n              }}\n            />\n          )}\n\n          <TextAreaInput\n            containerClassName=\"custom-input\"\n            containerStyle={{\n              alignItems: \"flex-start\",\n            }}\n            label={{\n              title: \"Address : \",\n              style: {\n                fontSize: \"12px\",\n                fontWeight: \"bold\",\n                width: \"110px\",\n              },\n            }}\n            textarea={{\n              disabled: mode === \"\",\n              style: { width: \"100%\", height: \"100px\" },\n              onKeyDown: (e) => {\n                e.stopPropagation();\n                if (\n                  (e.code === \"NumpadEnter\" && !e.shiftKey) ||\n                  (e.code === \"Enter\" && !e.shiftKey)\n                ) {\n                }\n              },\n            }}\n            _inputRef={addressRef}\n          />\n        </div>\n      </div>\n      <div\n      className=\"add-padding\"\n        style={{\n          display: \"flex\",\n          flexDirection: \"column\",\n          width: \"100%\",\n          height: \"100%\",\n          flex: 1,\n        }}\n      >\n        <DataGridViewReact\n          height=\"340px\"\n          ref={tableRef}\n          rows={[]}\n          columns={employeeColumn}\n          getSelectedItem={(rowSelected: any, _: any, RowIndex: any) => {\n            if (rowSelected) {\n              setMode(\"edit\");\n              wait(100).then(() => {\n                if (clientIdRef.current) {\n                  clientIdRef.current.value = rowSelected[0];\n                }\n                if (firstnameRef.current) {\n                  firstnameRef.current.value = rowSelected[1];\n                }\n                if (middleRef.current) {\n                  middleRef.current.value = rowSelected[2];\n                }\n                if (lastnameRef.current) {\n                  lastnameRef.current.value = rowSelected[3];\n                }\n                if (suffixRef.current) {\n                  suffixRef.current.value = rowSelected[4];\n                }\n                if (subAccount.current) {\n                  subAccount.current.value = rowSelected[5];\n                }\n\n                if (addressRef.current) {\n                  addressRef.current.value = rowSelected[6];\n                }\n              });\n            } else {\n              tableRef.current.setSelectedRow(null);\n              tableRef.current.resetCheckBox();\n              resetField();\n              setMode(\"\");\n              return;\n            }\n          }}\n          onKeyDown={(rowSelected: any, RowIndex: any, e: any) => {\n            if (e.code === \"Delete\" || e.code === \"Backspace\") {\n              wait(100).then(() => {\n                codeCondfirmationAlert({\n                  isUpdate: false,\n                  cb: (userCodeConfirmation) => {\n                    mutateDelete({\n                      id: rowSelected[0],\n                      userCodeConfirmation,\n                    });\n                  },\n                });\n              });\n              return;\n            }\n          }}\n        />\n      </div>\n      <div\n        className=\"button-action-mobile\"\n        style={{\n          display: \"flex\",\n          alignItems: \"center\",\n          columnGap: \"5px\",\n        }}\n      >\n        {mode === \"\" && (\n          <Button\n            variant=\"contained\"\n            startIcon={<AddIcon />}\n            id=\"entry-header-save-button\"\n            sx={{\n              height: \"22px\",\n              fontSize: \"11px\",\n            }}\n            onClick={() => {\n              refetchClientId();\n              setMode(\"add\");\n            }}\n          >\n            New\n          </Button>\n        )}\n        <LoadingButton\n          id=\"save-entry-header\"\n          color=\"primary\"\n          variant=\"contained\"\n          type=\"submit\"\n          sx={{\n            height: \"22px\",\n            fontSize: \"11px\",\n          }}\n          onClick={handleOnSave}\n          startIcon={<SaveIcon />}\n          disabled={mode === \"\"}\n          loading={loadingAdd || loadingEdit}\n        >\n          Save\n        </LoadingButton>\n\n        <LoadingButton\n          disabled={mode === \"\"}\n          id=\"save-entry-header\"\n          variant=\"contained\"\n          sx={{\n            height: \"22px\",\n            fontSize: \"11px\",\n            backgroundColor: pink[500],\n            \"&:hover\": {\n              backgroundColor: pink[600],\n            },\n          }}\n          loading={loadingDelete}\n          startIcon={<DeleteIcon />}\n          onClick={() => {\n            codeCondfirmationAlert({\n              isUpdate: false,\n              cb: (userCodeConfirmation) => {\n                mutateDelete({\n                  id: clientIdRef.current?.value,\n                  userCodeConfirmation,\n                });\n              },\n            });\n          }}\n        >\n          Delete\n        </LoadingButton>\n        {mode !== \"\" && (\n          <Button\n            sx={{\n              height: \"22px\",\n              fontSize: \"11px\",\n            }}\n            variant=\"contained\"\n            startIcon={<CloseIcon />}\n            color=\"error\"\n            onClick={() => {\n              Swal.fire({\n                title: \"Are you sure?\",\n                text: \"You won't be able to revert this!\",\n                icon: \"warning\",\n                showCancelButton: true,\n                confirmButtonColor: \"#3085d6\",\n                cancelButtonColor: \"#d33\",\n                confirmButtonText: \"Yes, cancel it!\",\n              }).then((result) => {\n                if (result.isConfirmed) {\n                  resetField();\n                  setMode(\"\");\n                  tableRef.current.setSelectedRow(null);\n                  tableRef.current.resetCheckBox();\n                }\n              });\n            }}\n          >\n            Cancel\n          </Button>\n        )}\n      </div>\n    </>\n  );\n}\n","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\"\n}), 'Delete');\nexports.default = _default;","const pink = {\n  50: '#fce4ec',\n  100: '#f8bbd0',\n  200: '#f48fb1',\n  300: '#f06292',\n  400: '#ec407a',\n  500: '#e91e63',\n  600: '#d81b60',\n  700: '#c2185b',\n  800: '#ad1457',\n  900: '#880e4f',\n  A100: '#ff80ab',\n  A200: '#ff4081',\n  A400: '#f50057',\n  A700: '#c51162'\n};\nexport default pink;"],"names":["employeeColumn","key","label","width","hide","Employee","_queryFn","_mutationFn","_mutationFn2","_mutationFn3","_mutationFn4","_queryFn2","_useContext","useContext","AuthContext","myAxios","user","_useState","useState","_useState2","_slicedToArray","mode","setMode","tableRef","useRef","searchInputRef","clientIdRef","firstnameRef","middleRef","lastnameRef","fullnameRef","authorizeRepRef","suffixRef","_subAccount","subAccount","branchCodeRef","addressRef","_useQuery","useQuery","queryKey","queryFn","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","post","sign","type","headers","Authorization","concat","accessToken","abrupt","sent","stop","apply","arguments","refetchOnWindowFocus","onSuccess","res","wait","then","current","value","data","generateID","loadingClientId","isLoading","refetchClientId","refetch","_useMutation","useMutation","mutationKey","mutationFn","_x","_callee2","variables","_context2","mutateAdd","mutate","loadingAdd","_useMutation2","_x2","_callee3","_context3","mutateEdit","loadingEdit","_useMutation3","_x3","_callee4","_context4","mutateDelete","loadingDelete","_useMutation4","_x4","_callee5","_context5","console","log","setDataFormated","entry","isLoadingSearch","mutateSearch","_useQuery2","_callee6","_context6","get","_res$data","setDataSource","_res$data2","filter","itm","Acronym","ShortName","Sub_Acct","subAccountLoading","refetchSubAcct","mutateSearchRef","success","resetField","setSelectedRow","resetCheckBox","search","Swal","position","icon","title","message","showConfirmButton","timer","handleOnSave","e","_firstnameRef$current","_subAccount$current","_clientIdRef$current","_firstnameRef$current2","_middleRef$current","_lastnameRef$current","_fullnameRef$current","_authorizeRepRef$curr","_suffixRef$current","_addressRef$current","state","entry_employee_id","firstname","toLocaleUpperCase","middlename","lastname","company","auth_representative","suffix","sub_account","address","preventDefault","codeCondfirmationAlert","isUpdate","cb","userCodeConfirmation","_objectSpread","saveCondfirmationAlert","isConfirm","useEffect","_jsxs","_Fragment","children","_jsx","PageHelmet","Loading","style","display","columnGap","marginBottom","TextInput","containerClassName","containerStyle","fontSize","fontWeight","input","className","onKeyDown","currentTarget","SearchIcon","sx","onIconClick","inputRef","alignItems","marginLeft","Button","variant","startIcon","AddIcon","id","height","onClick","LoadingButton","color","SaveIcon","disabled","loading","backgroundColor","pink","DeleteIcon","_clientIdRef$current2","CloseIcon","text","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","result","isConfirmed","flexDirection","rowGap","flex","readOnly","_firstnameRef$current3","code","focus","textTransform","_middleRef$current2","_lastnameRef$current2","_suffixRef$current2","_subAccount$current2","Autocomplete","disableInput","ref","DisplayMember","DataSource","onChange","selected","onKeydown","_addressRef$current2","TextAreaInput","textarea","stopPropagation","shiftKey","_inputRef","DataGridViewReact","rows","columns","getSelectedItem","rowSelected","_","RowIndex","_clientIdRef$current3","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d","A100","A200","A400","A700"],"sourceRoot":""}