{"version":3,"file":"static/js/3307.e61d1269.chunk.js","mappings":"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","sources":["feautures/Admin/Task/Accounting/ReturnCheck.tsx","../node_modules/@mui/icons-material/Autorenew.js"],"sourcesContent":["import { Button } from \"@mui/material\";\nimport { SelectInput, TextInput } from \"../../../../components/UpwardFields\";\nimport { wait } from \"../../../../lib/wait\";\nimport Swal from \"sweetalert2\";\nimport AddIcon from \"@mui/icons-material/Add\";\nimport SaveIcon from \"@mui/icons-material/Save\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport SearchIcon from \"@mui/icons-material/Search\";\nimport {\n  useRef,\n  useState,\n  forwardRef,\n  useImperativeHandle,\n  useContext,\n  useEffect,\n} from \"react\";\nimport AutorenewIcon from \"@mui/icons-material/Autorenew\";\nimport { format } from \"date-fns\";\nimport {\n  DataGridViewReact,\n  useUpwardTableModalSearchSafeMode,\n} from \"../../../../components/DataGridViewReact\";\nimport { useMutation, useQuery } from \"react-query\";\nimport { AuthContext } from \"../../../../components/AuthContext\";\nimport { Loading } from \"../../../../components/Loading\";\nimport {\n  codeCondfirmationAlert,\n  saveCondfirmationAlert,\n} from \"../../../../lib/confirmationAlert\";\nimport \"../../../../style/monbileview/accounting/returnchecks.css\";\n\nexport default function ReturnCheck() {\n  const { user, myAxios } = useContext(AuthContext);\n  const [mode, setMode] = useState(\"\");\n  const returnCheckComponentRef = useRef<any>(null);\n  const inputSearchRef = useRef<HTMLInputElement>(null);\n  const refNoRef = useRef<HTMLInputElement>(null);\n  const refDate = useRef<HTMLInputElement>(null);\n  const refExp = useRef<HTMLInputElement>(null);\n\n  const {\n    isLoading: isLoadingReturnChecksSave,\n    mutate: mutateReturnChecksSave,\n  } = useMutation({\n    mutationKey: \"save\",\n    mutationFn: async (variable: any) =>\n      await myAxios.post(`/task/accounting/return-checks/save`, variable, {\n        headers: {\n          Authorization: `Bearer ${user?.accessToken}`,\n        },\n      }),\n    onSuccess(res) {\n      if (res.data.success) {\n        resetReturnChecks();\n        return Swal.fire({\n          position: \"center\",\n          icon: \"success\",\n          title: res.data.message,\n          showConfirmButton: false,\n          timer: 1500,\n        });\n      }\n      Swal.fire({\n        position: \"center\",\n        icon: \"error\",\n        title: res.data.message,\n        showConfirmButton: false,\n        timer: 1500,\n      });\n    },\n  });\n\n  const {\n    isLoading: isLoadingReturnChecksUpdate,\n    mutate: mutateReturnChecksUpdate,\n  } = useMutation({\n    mutationKey: \"save\",\n    mutationFn: async (variable: any) =>\n      await myAxios.post(`/task/accounting/return-checks/update`, variable, {\n        headers: {\n          Authorization: `Bearer ${user?.accessToken}`,\n        },\n      }),\n    onSuccess(res) {\n      if (res.data.success) {\n        resetReturnChecks();\n        return Swal.fire({\n          position: \"center\",\n          icon: \"success\",\n          title: res.data.message,\n          showConfirmButton: false,\n          timer: 1500,\n        });\n      }\n      Swal.fire({\n        position: \"center\",\n        icon: \"error\",\n        title: res.data.message,\n        showConfirmButton: false,\n        timer: 1500,\n      });\n    },\n  });\n  const { isLoading: isLoadingReturnChecksID, refetch } = useQuery({\n    queryKey: \"generate-id\",\n    queryFn: async () =>\n      await myAxios.get(`/task/accounting/return-checks/generate-id`, {\n        headers: {\n          Authorization: `Bearer ${user?.accessToken}`,\n        },\n      }),\n    refetchOnWindowFocus: false,\n    onSuccess(res) {\n      wait(100).then(() => {\n        if (refNoRef.current) {\n          refNoRef.current.value = res.data.newRefCode;\n        }\n      });\n    },\n  });\n\n  const {\n    isLoading: isLoadingReturnChecksSearchSelectedSave,\n    mutate: mutateReturnChecksSearchSelectedSave,\n  } = useMutation({\n    mutationKey: \"selected-search\",\n    mutationFn: async (variable: any) =>\n      await myAxios.post(\n        `/task/accounting/return-checks/return-checks-search-selected`,\n        variable,\n        {\n          headers: {\n            Authorization: `Bearer ${user?.accessToken}`,\n          },\n        }\n      ),\n    onSuccess(res) {\n      const data1 = JSON.parse(res.data.data1);\n      const data2 = JSON.parse(res.data.data2);\n      console.log(data1);\n      if (data1.length > 0) {\n        if (refNoRef.current) {\n          refNoRef.current.value = data1[0].RC_No;\n        }\n        if (refDate.current) {\n          refDate.current.value = format(\n            new Date(data1[0].RC_Date),\n            \"yyyy-MM-dd\"\n          );\n        }\n        if (refExp.current) {\n          refExp.current.value = data1[0].Explanation;\n        }\n        const newSelectedCheck: any = [];\n\n        for (let index = 0; index < data1.length; index++) {\n          newSelectedCheck.push([\n            data1[index].ORNum,\n            format(new Date(data1[index].Date_Collect), \"MM/dd/yyy\"),\n            data1[index].SlipCode,\n            format(new Date(data1[index].Date_Deposit), \"MM/dd/yyy\"),\n            data1[index].Check_No,\n            format(new Date(data1[index].Check_Date), \"MM/dd/yyy\"),\n            formatNumber(\n              parseFloat(data1[index].Amount.toString().replace(/,/g, \"\"))\n            ),\n            data1[index].Bank,\n            data1[index].BankAccnt,\n            data1[index].Reason,\n            format(new Date(data1[index].Date_Return), \"MM/dd/yyy\"),\n          ]);\n        }\n\n        returnCheckComponentRef.current.refSelectedCheckToBeReturned.current.table.current.setData(\n          newSelectedCheck\n        );\n        if (returnCheckComponentRef.current.tssAmountRef.current) {\n          returnCheckComponentRef.current.tssAmountRef.current.value = `Total Amount:   ${formatNumber(\n            getSum(data1, \"Amount\")\n          )}`;\n        }\n\n        if (data2.length > 0) {\n          const newAccoutningEntry: any = [];\n          for (let index = 0; index < data2.length; index++) {\n            newAccoutningEntry.push([\n              data2[index].GL_Acct,\n              data2[index].cGL_Acct,\n              formatNumber(\n                parseFloat(data2[index].Debit.toString().replace(/,/g, \"\"))\n              ),\n              formatNumber(\n                parseFloat(data2[index].Credit.toString().replace(/,/g, \"\"))\n              ),\n              data2[index].ID_No,\n              data2[index].cID_No,\n              data2[index].Sub_Acct,\n              data2[index].cSub_Acct,\n              data2[index].Check_No,\n              data2[index].Check_Bank,\n              format(new Date(data2[index].Check_Date), \"MM/dd/yyy\"),\n              format(new Date(data2[index].Check_Return), \"MM/dd/yyy\"),\n              data2[index].Check_Reason,\n              data2[index].Check_No,\n              format(new Date(data2[index].Check_Deposit), \"MM/dd/yyy\"),\n              format(new Date(data2[index].Check_Collect), \"MM/dd/yyy\"),\n            ]);\n          }\n          returnCheckComponentRef.current.refAccountingEntry.current.table.current.setData(\n            newAccoutningEntry\n          );\n\n          if (\n            returnCheckComponentRef.current.refAccountingEntry.current.debitRef\n              .current\n          ) {\n            returnCheckComponentRef.current.refAccountingEntry.current.debitRef.current.value =\n              formatNumber(getSum(data2, \"Debit\"));\n          }\n\n          if (\n            returnCheckComponentRef.current.refAccountingEntry.current.creditRef\n              .current\n          ) {\n            returnCheckComponentRef.current.refAccountingEntry.current.creditRef.current.value =\n              formatNumber(getSum(data2, \"Credit\"));\n          }\n        }\n\n        setMode(\"update\");\n      }\n    },\n  });\n  const {\n    UpwardTableModalSearch: SearchReturnCheckUpwardTableModalSearch,\n    openModal: searchReturnCheckCreditOpenModal,\n    closeModal: searchReturnCheckCreditCloseModal,\n  } = useUpwardTableModalSearchSafeMode({\n    link: \"/task/accounting/return-checks/return-checks-search\",\n    column: [\n      { key: \"RefDate\", label: \"Ref. Date\", width: 120 },\n      { key: \"RefNo\", label: \"Ref. No.\", width: 100 },\n      { key: \"Explanation\", label: \"Explanation\", width: 200 },\n    ],\n    getSelectedItem: async (rowItm: any, _: any, rowIdx: any, __: any) => {\n      if (rowItm) {\n        wait(100).then(() => {\n          mutateReturnChecksSearchSelectedSave({ RefNo: rowItm[1] });\n        });\n        searchReturnCheckCreditCloseModal();\n      }\n    },\n  });\n\n  const handleOnSave = () => {\n    // tabRef.current.test();\n    if (refExp.current?.value === \"\") {\n      alert(\"Pease provide an explanation\");\n      refExp.current?.focus();\n      return;\n    }\n    const dgvSelChecks =\n      returnCheckComponentRef.current.refSelectedCheckToBeReturned.current.table.current.getData();\n    const dgvAccountingEntry =\n      returnCheckComponentRef.current.refAccountingEntry.current.table.current.getData();\n\n    if (dgvSelChecks.length <= 0) {\n      alert(\"Please provide return entry\");\n      return;\n    }\n    if (mode === \"add\") {\n      saveCondfirmationAlert({\n        isConfirm: () => {\n          mutateReturnChecksSave({\n            dgvSelChecks,\n            dgvAccountingEntry,\n            refNo: refNoRef.current?.value,\n            date: refDate.current?.value,\n            explanation: refExp.current?.value,\n            mode,\n          });\n        },\n      });\n    } else {\n      codeCondfirmationAlert({\n        isUpdate: true,\n        cb: (userCodeConfirmation) => {\n          mutateReturnChecksUpdate({\n            dgvSelChecks,\n            dgvAccountingEntry,\n            refNo: refNoRef.current?.value,\n            date: refDate.current?.value,\n            explanation: refExp.current?.value,\n            mode,\n            userCodeConfirmation,\n          });\n        },\n      });\n    }\n  };\n\n  function resetReturnChecks() {\n    setMode(\"\");\n    refetch();\n    if (refDate.current) {\n      refDate.current.value = format(new Date(), \"yyyy-MM-dd\");\n    }\n    if (refExp.current) {\n      refExp.current.value = \"Returned Checks\";\n    }\n\n    returnCheckComponentRef.current.refSelectCheck.current.table.current.resetCheckBox();\n    returnCheckComponentRef.current.refSelectCheck.current.table.current.setSelectedRow(\n      null\n    );\n    returnCheckComponentRef.current.refSelectCheck.current.table.current.setData(\n      []\n    );\n    returnCheckComponentRef.current.refSelectCheck.current.refetchList();\n\n    returnCheckComponentRef.current.refSelectedCheckToBeReturned.current.table.current.resetCheckBox();\n    returnCheckComponentRef.current.refSelectedCheckToBeReturned.current.table.current.setSelectedRow(\n      null\n    );\n    returnCheckComponentRef.current.refSelectedCheckToBeReturned.current.table.current.setData(\n      []\n    );\n\n    returnCheckComponentRef.current.refAccountingEntry.current.table.current.resetCheckBox();\n    returnCheckComponentRef.current.refAccountingEntry.current.table.current.setSelectedRow(\n      null\n    );\n    returnCheckComponentRef.current.refAccountingEntry.current.table.current.setData(\n      []\n    );\n\n    if (\n      returnCheckComponentRef.current.refAccountingEntry.current.debitRef\n        .current\n    ) {\n      returnCheckComponentRef.current.refAccountingEntry.current.debitRef.current.value =\n        \"0.00\";\n    }\n\n    if (\n      returnCheckComponentRef.current.refAccountingEntry.current.creditRef\n        .current\n    ) {\n      returnCheckComponentRef.current.refAccountingEntry.current.creditRef.current.value =\n        \"0.00\";\n    }\n\n    returnCheckComponentRef.current.tssAmountRef.current.value = `Total Amount:   0.00`;\n  }\n\n  return (\n    <>\n      {(isLoadingReturnChecksSave ||\n        isLoadingReturnChecksID ||\n        isLoadingReturnChecksSearchSelectedSave ||\n        isLoadingReturnChecksUpdate) && <Loading />}\n      <div\n        className=\"main\"\n        style={{\n          display: \"flex\",\n          flexDirection: \"column\",\n          width: \"100%\",\n          height: \"auto\",\n          flex: 1,\n          padding: \"5px\",\n          background: \"#F1F1F1\",\n        }}\n      >\n        <div\n          style={{\n            display: \"flex\",\n            alignItems: \"center\",\n            columnGap: \"5px\",\n            marginBottom: \"10px\",\n          }}\n        >\n          <TextInput\n            containerClassName=\"search-input\"\n            label={{\n              title: \"Search: \",\n              style: {\n                fontSize: \"12px\",\n                fontWeight: \"bold\",\n                width: \"50px\",\n              },\n            }}\n            input={{\n              className: \"search-input-up-on-key-down\",\n              type: \"search\",\n              onKeyDown: (e) => {\n                if (e.key === \"Enter\" || e.key === \"NumpadEnter\") {\n                  e.preventDefault();\n                  searchReturnCheckCreditOpenModal(e.currentTarget.value);\n                }\n              },\n              style: { width: \"500px\" },\n            }}\n            icon={<SearchIcon sx={{ fontSize: \"18px\" }} />}\n            onIconClick={(e) => {\n              e.preventDefault();\n              if (inputSearchRef.current)\n                searchReturnCheckCreditOpenModal(inputSearchRef.current.value);\n            }}\n            inputRef={inputSearchRef}\n          />\n          <div\n            className=\"return-checks-desktop-buttons\"\n            style={{\n              display: \"flex\",\n              alignItems: \"center\",\n              columnGap: \"10px\",\n            }}\n          >\n            {mode === \"\" && (\n              <Button\n                sx={{\n                  height: \"22px\",\n                  fontSize: \"11px\",\n                }}\n                variant=\"contained\"\n                startIcon={<AddIcon sx={{ width: 15, height: 15 }} />}\n                id=\"entry-header-save-button\"\n                onClick={() => {\n                  setMode(\"add\");\n                }}\n              >\n                New\n              </Button>\n            )}\n            {mode !== \"\" && (\n              <Button\n                sx={{\n                  height: \"22px\",\n                  fontSize: \"11px\",\n                }}\n                id=\"save-entry-header\"\n                color=\"primary\"\n                variant=\"contained\"\n                type=\"submit\"\n                startIcon={<SaveIcon sx={{ width: 15, height: 15 }} />}\n                onClick={handleOnSave}\n              >\n                Save\n              </Button>\n            )}\n            <Button\n              sx={{\n                height: \"22px\",\n                fontSize: \"11px\",\n              }}\n              disabled={mode === \"\"}\n              variant=\"contained\"\n              startIcon={<CloseIcon sx={{ width: 15, height: 15 }} />}\n              color=\"error\"\n              onClick={() => {\n                Swal.fire({\n                  title: \"Are you sure?\",\n                  text: \"You won't be able to revert this!\",\n                  icon: \"warning\",\n                  showCancelButton: true,\n                  confirmButtonColor: \"#3085d6\",\n                  cancelButtonColor: \"#d33\",\n                  confirmButtonText: \"Yes, cancel it!\",\n                }).then((result) => {\n                  if (result.isConfirmed) {\n                    wait(100).then(() => {\n                      resetReturnChecks();\n                    });\n                  }\n                });\n              }}\n            >\n              Cancel\n            </Button>\n          </div>\n        </div>\n        <div\n          className=\"layer-one\"\n          style={{\n            display: \"flex\",\n            width: \"100%\",\n            padding: \"10px 40px\",\n            flexDirection: \"column\",\n            rowGap: \"10px\",\n            border: \"1px solid #64748b\",\n            marginBottom: \"10px\",\n          }}\n        >\n          <div\n            className=\"content\"\n            style={{\n              display: \"flex\",\n              columnGap: \"200px\",\n            }}\n          >\n            <TextInput\n              containerClassName=\"custom-input\"\n              label={{\n                title: \"Ref No.: \",\n                style: {\n                  fontSize: \"12px\",\n                  fontWeight: \"bold\",\n                  width: \"100px\",\n                },\n              }}\n              input={{\n                disabled: mode === \"\",\n                // readOnly: true,\n                className: \"ref_no\",\n                type: \"text\",\n                style: { width: \"200px\" },\n                defaultValue: \"\",\n              }}\n              inputRef={refNoRef}\n              icon={<AutorenewIcon sx={{ fontSize: \"18px\" }} />}\n              onIconClick={(e) => {\n                e.preventDefault();\n                // RefetchDepositSlipCode();\n              }}\n            />\n            <TextInput\n              containerClassName=\"custom-input\"\n              label={{\n                title: \"Date : \",\n                style: {\n                  fontSize: \"12px\",\n                  fontWeight: \"bold\",\n                  width: \"70px\",\n                },\n              }}\n              input={{\n                disabled: mode === \"\",\n                defaultValue: format(new Date(), \"yyyy-MM-dd\"),\n                className: \"date\",\n                type: \"date\",\n                style: { width: \"200px\" },\n              }}\n              inputRef={refDate}\n            />\n          </div>\n          <TextInput\n            containerClassName=\"custom-input\"\n            label={{\n              title: \"Explanation : \",\n              style: {\n                fontSize: \"12px\",\n                fontWeight: \"bold\",\n                width: \"100px\",\n              },\n            }}\n            input={{\n              disabled: mode === \"\",\n              className: \"exp\",\n              type: \"text\",\n              style: { width: \"670px\" },\n              defaultValue: \"Returned Checks\",\n            }}\n            inputRef={refExp}\n          />\n        </div>\n        <TabPage ref={returnCheckComponentRef} mode={mode} />\n        <div\n          className=\"return-checks-mobile-buttons\"\n          style={{\n            display: \"none\",\n            alignItems: \"center\",\n            columnGap: \"10px\",\n          }}\n        >\n          {mode === \"\" && (\n            <Button\n              sx={{\n                height: \"22px\",\n                fontSize: \"11px\",\n              }}\n              variant=\"contained\"\n              startIcon={<AddIcon sx={{ width: 15, height: 15 }} />}\n              id=\"entry-header-save-button\"\n              onClick={() => {\n                setMode(\"add\");\n              }}\n            >\n              New\n            </Button>\n          )}\n          {mode !== \"\" && (\n            <Button\n              sx={{\n                height: \"22px\",\n                fontSize: \"11px\",\n              }}\n              id=\"save-entry-header\"\n              color=\"primary\"\n              variant=\"contained\"\n              type=\"submit\"\n              startIcon={<SaveIcon sx={{ width: 15, height: 15 }} />}\n              onClick={handleOnSave}\n            >\n              Save\n            </Button>\n          )}\n          <Button\n            sx={{\n              height: \"22px\",\n              fontSize: \"11px\",\n            }}\n            disabled={mode === \"\"}\n            variant=\"contained\"\n            startIcon={<CloseIcon sx={{ width: 15, height: 15 }} />}\n            color=\"error\"\n            onClick={() => {\n              Swal.fire({\n                title: \"Are you sure?\",\n                text: \"You won't be able to revert this!\",\n                icon: \"warning\",\n                showCancelButton: true,\n                confirmButtonColor: \"#3085d6\",\n                cancelButtonColor: \"#d33\",\n                confirmButtonText: \"Yes, cancel it!\",\n              }).then((result) => {\n                if (result.isConfirmed) {\n                  wait(100).then(() => {\n                    resetReturnChecks();\n                  });\n                }\n              });\n            }}\n          >\n            Cancel\n          </Button>\n        </div>\n      </div>\n\n      <SearchReturnCheckUpwardTableModalSearch />\n    </>\n  );\n}\n\nconst TabPage = forwardRef(({ mode }: any, ref) => {\n  const [activeTab, setActiveTab] = useState(0);\n  const [buttonPosition, setButtonPosition] = useState<any>({});\n  const buttonsRef = useRef<Array<HTMLButtonElement | null>>([]);\n  const refSelectCheck = useRef<any>(null);\n  const refSelectedCheckToBeReturned = useRef<any>(null);\n  const refAccountingEntry = useRef<any>(null);\n  const tssAmountRef = useRef<HTMLInputElement>(null);\n  const chkFndRef = useRef<HTMLInputElement>(null);\n\n  const tabs = [\n    {\n      id: 0,\n      label: \"Select Check\",\n      content: (\n        <SelectCheck\n          ref={refSelectCheck}\n          refSelectedCheckToBeReturned={refSelectedCheckToBeReturned}\n          refAccountingEntry={refAccountingEntry}\n          tssAmountRef={tssAmountRef}\n          chkFndRef={chkFndRef}\n          mode={mode}\n        />\n      ),\n    },\n    {\n      id: 1,\n      label: \"Selected Check To Be Returned\",\n      content: (\n        <SelectedCheckToBeReturned\n          ref={refSelectedCheckToBeReturned}\n          refAccountingEntry={refAccountingEntry}\n        />\n      ),\n    },\n    {\n      id: 2,\n      label: \"Accounting Entry\",\n      content: <AccountingEntry ref={refAccountingEntry} />,\n    },\n  ];\n\n  useEffect(() => {\n    setButtonPosition(buttonsRef.current[0]?.getBoundingClientRect());\n  }, []);\n\n  useImperativeHandle(ref, () => ({\n    test: () => {\n      refSelectCheck.current.test();\n      refSelectedCheckToBeReturned.current.test();\n      refAccountingEntry.current.test();\n    },\n    refSelectCheck,\n    refSelectedCheckToBeReturned,\n    refAccountingEntry,\n    tssAmountRef,\n  }));\n\n  return (\n    <div\n      style={{\n        flex: 1,\n        display: \"flex\",\n        flexDirection: \"column\",\n      }}\n    >\n      {/* Tab Buttons */}\n      <div style={{ display: \"flex\" }}>\n        {tabs.map((tab, index) => (\n          <button\n            className=\"return-checks-buttons\"\n            ref={(el) => (buttonsRef.current[index] = el)}\n            key={tab.id}\n            onClick={(el) => {\n              setActiveTab(tab.id);\n              setButtonPosition(el.currentTarget.getBoundingClientRect());\n            }}\n            style={{\n              width: \"auto\",\n              fontSize: \"11px\",\n              padding: \"10px\",\n              cursor: \"pointer\",\n              backgroundColor: activeTab === tab.id ? \"white\" : \"transparent\",\n              color: activeTab === tab.id ? \"#0074cc\" : \"#000\",\n              border: \"none\",\n              borderRight:\n                activeTab === tab.id\n                  ? tab.id === 0\n                    ? \"none\"\n                    : \"1px solid #0074cc\"\n                  : tab.id === 0\n                  ? \"none\"\n                  : \"1px solid #64748b\",\n              borderLeft:\n                activeTab === tab.id\n                  ? tab.id === 2\n                    ? \"none\"\n                    : \"1px solid #0074cc\"\n                  : tab.id === 2\n                  ? \"none\"\n                  : \"1px solid #64748b\",\n              borderTop:\n                activeTab === tab.id\n                  ? \"1px solid #0074cc\"\n                  : \"1px solid #64748b\",\n\n              // borderBottom:\n              //   activeTab === tab.id ? \"2px solid #007BFF\" : \"2px solid #ccc\",\n              textTransform: \"uppercase\",\n              fontWeight: \"bold\",\n            }}\n          >\n            {tab.label}\n          </button>\n        ))}\n      </div>\n\n      {/* Render All Tab Contents */}\n      <div\n        style={{\n          padding: \"7px\",\n          flex: 1,\n          display: \"flex\",\n          // borderTop: \"2px solid #007BFF\",\n          position: \"relative\",\n          flexDirection: \"column\",\n        }}\n      >\n        <div\n          style={{\n            position: \"absolute\",\n            top: \"-2px\",\n            left: 0,\n            width: `${(buttonPosition?.left as number) - 5 || 0}px`,\n            height: \"1px\",\n            background: \"#64748b\",\n          }}\n        ></div>\n        <div\n          style={{\n            position: \"absolute\",\n            top: \"-2px\",\n            right: 0,\n            left: `${(buttonPosition?.right as number) - 5 || 0}px`,\n            height: \"1px\",\n            background: \"#64748b\",\n          }}\n        ></div>\n        {tabs.map((tab) => (\n          <div\n            key={tab.id}\n            style={{\n              display: activeTab === tab.id ? \"flex\" : \"none\", // Show only the active tab\n              flex: 1,\n              flexDirection: \"column\",\n            }}\n          >\n            {tab.content}\n          </div>\n        ))}\n        <div\n          className=\"total-container\"\n          style={{\n            display: \"flex\",\n            justifyContent: \"space-between\",\n            paddingTop: \"5px\",\n          }}\n        >\n          <input\n            ref={chkFndRef}\n            readOnly={true}\n            defaultValue={\"0.00\"}\n            style={{\n              textAlign: \"left\",\n              fontWeight: \"bold\",\n              width: \"200px\",\n              border: \"none\",\n            }}\n          />\n          <input\n            ref={tssAmountRef}\n            readOnly={true}\n            defaultValue={\"0.00\"}\n            style={{\n              textAlign: \"right\",\n              fontWeight: \"bold\",\n              width: \"200px\",\n              border: \"none\",\n            }}\n          />\n        </div>\n      </div>\n    </div>\n  );\n});\nconst columnsSelectCheck = [\n  { key: \"Deposit_Slip\", label: \"Deposit_Slip\", width: 100 },\n  { key: \"Depo_Date\", label: \"Depo_Date\", width: 130 },\n  {\n    key: \"Check_No\",\n    label: \"Check_No\",\n    width: 200,\n  },\n  {\n    key: \"Check_Date\",\n    label: \"Check_Date\",\n    width: 200,\n  },\n  {\n    key: \"Amount\",\n    label: \"Amount\",\n    width: 200,\n  },\n  {\n    key: \"Bank\",\n    label: \"Bank\",\n    width: 200,\n  },\n  {\n    key: \"Official_Receipt\",\n    label: \"Official_Receipt\",\n    width: 100,\n  },\n  {\n    key: \"Date_OR\",\n    label: \"Date_OR\",\n    width: 100,\n  },\n  {\n    key: \"BankAccount\",\n    label: \"BankAccount\",\n    width: 0,\n    hide: true,\n  },\n  {\n    key: \"_formatted_date\",\n    label: \"_formatted_date\",\n    width: 0,\n    hide: true,\n  },\n];\nconst columnsSelectedCheckToBeReturned = [\n  { key: \"ORNo\", label: \"OR No.\", width: 80 },\n  { key: \"ORDate\", label: \"OR Date\", width: 130 },\n  {\n    key: \"DepoSlip\",\n    label: \"Depo Slip\",\n    width: 130,\n  },\n  {\n    key: \"DepoDate\",\n    label: \"Depo Date\",\n    width: 130,\n  },\n  {\n    key: \"CheckNo\",\n    label: \"Check No.\",\n    width: 130,\n  },\n  {\n    key: \"CheckDate\",\n    label: \"Check Date\",\n    width: 130,\n  },\n  {\n    key: \"Amount\",\n    label: \"Amount\",\n    width: 130,\n  },\n  {\n    key: \"Bank\",\n    label: \"Bank/Branch\",\n    width: 100,\n  },\n  {\n    key: \"BankAccount\",\n    label: \"Bank Account\",\n    width: 200,\n  },\n  {\n    key: \"Reason\",\n    label: \"Reason\",\n    width: 200,\n  },\n  {\n    key: \"ReturnDate\",\n    label: \"Return Date\",\n    width: 200,\n  },\n];\nconst columnsAccountingEntry = [\n  { key: \"Code\", label: \"Code\", width: 80 },\n  { key: \"AccountName\", label: \"Account Name\", width: 130 },\n  {\n    key: \"Debit\",\n    label: \"Debit\",\n    width: 130,\n  },\n  {\n    key: \"Credit\",\n    label: \"Credit\",\n    width: 130,\n  },\n  {\n    key: \"IDNo\",\n    label: \"ID No.\",\n    width: 130,\n  },\n  {\n    key: \"Identity\",\n    label: \"Identity\",\n    width: 130,\n  },\n  {\n    key: \"SubAcct\",\n    label: \"Sub Acct\",\n    width: 130,\n  },\n  {\n    key: \"SubAcctName\",\n    label: \"Sub Acct Name\",\n    width: 130,\n  },\n  {\n    key: \"CheckNo\",\n    label: \"Check No\",\n    width: 100,\n  },\n  {\n    key: \"Bank\",\n    label: \"Bank/Branch\",\n    width: 200,\n  },\n  {\n    key: \"CheckDate\",\n    label: \"Check Date\",\n    width: 100,\n  },\n  {\n    key: \"CheckReturn\",\n    label: \"Check Return\",\n    width: 100,\n  },\n  {\n    key: \"CheckReason\",\n    label: \"Check Reason\",\n    width: 200,\n  },\n  {\n    key: \"PK\",\n    label: \"PK\",\n    width: 100,\n  },\n  {\n    key: \"DateDeposit\",\n    label: \"Date Deposit\",\n    width: 100,\n  },\n  {\n    key: \"DateCollection\",\n    label: \"Date Collection\",\n    width: 100,\n  },\n];\nconst SelectCheck = forwardRef(\n  (\n    {\n      refAccountingEntry,\n      refSelectedCheckToBeReturned,\n      tssAmountRef,\n      chkFndRef,\n      mode,\n    }: any,\n    ref\n  ) => {\n    const { user, myAxios } = useContext(AuthContext);\n    const searchSelectCheckRef = useRef<HTMLInputElement>(null);\n    const table = useRef<any>(null);\n    const modalReturnCheckEntriesRef = useRef<any>(null);\n\n    const { isLoading: isLoadingCheckSelected, mutate: mutateCheckSelected } =\n      useMutation({\n        mutationKey: \"load-details\",\n        mutationFn: async (variable: any) =>\n          await myAxios.post(`/task/accounting/get-check-list`, variable, {\n            headers: {\n              Authorization: `Bearer ${user?.accessToken}`,\n            },\n          }),\n        onSuccess(res) {\n          table.current.setDataFormated(res.data.checkList);\n          if (chkFndRef.current) {\n            chkFndRef.current.value = `Check Found: Top ${res.data.checkList.length}`;\n          }\n        },\n      });\n    const mutateCheckSelectedRef = useRef<any>(mutateCheckSelected);\n    useEffect(() => {\n      mutateCheckSelectedRef.current({\n        search: searchSelectCheckRef.current?.value,\n      });\n    }, []);\n    useImperativeHandle(ref, () => ({\n      test: () => {\n        alert(\"qweqweqweqwe1\");\n      },\n      refetchList: () => {\n        mutateCheckSelectedRef.current({\n          search: \"\",\n        });\n      },\n      table,\n    }));\n\n    return (\n      <div\n        style={{\n          display: \"flex\",\n          flex: 1,\n          flexDirection: \"column\",\n          rowGap: \"10px\",\n        }}\n      >\n        {isLoadingCheckSelected && <Loading />}\n        <TextInput\n          label={{\n            title: \"Search: \",\n            style: {\n              fontSize: \"12px\",\n              fontWeight: \"bold\",\n              width: \"50px\",\n            },\n          }}\n          input={{\n            className: \"search-input-up-on-key-down\",\n            type: \"search\",\n            onKeyDown: (e) => {\n              if (e.key === \"Enter\" || e.key === \"NumpadEnter\") {\n                e.preventDefault();\n                mutateCheckSelectedRef.current({\n                  search: e.currentTarget.value,\n                });\n              }\n            },\n            onChange: (e) => {\n              if (e.target.value === \"\") {\n                mutateCheckSelectedRef.current({\n                  search: \"\",\n                });\n              }\n            },\n            style: { width: \"100%\" },\n          }}\n          icon={<SearchIcon sx={{ fontSize: \"18px\" }} />}\n          onIconClick={(e) => {\n            e.preventDefault();\n            if (searchSelectCheckRef.current)\n              mutateCheckSelectedRef.current({\n                search: searchSelectCheckRef.current?.value,\n              });\n          }}\n          inputRef={searchSelectCheckRef}\n        />\n        <div\n          style={{\n            display: \"flex\",\n            flex: 1,\n          }}\n        >\n          <DataGridViewReact\n            disbaleTable={mode === \"\"}\n            ref={table}\n            columns={columnsSelectCheck}\n            rows={[]}\n            containerStyle={{\n              height: \"auto\",\n              minHeight: \"200px\",\n              flex: 1,\n            }}\n            getSelectedItem={(rowItm: any) => {\n              if (rowItm) {\n                wait(100).then(() => {\n                  const selectedChecks =\n                    refSelectedCheckToBeReturned.current.getSelectedCheck();\n                  if (selectedChecks.includes(rowItm[2])) {\n                    alert(`Check ${rowItm[2]} already exist!`);\n                    table.current.setSelectedRow(null);\n                    table.current.resetCheckBox();\n                    return;\n                  }\n                  modalReturnCheckEntriesRef.current.showModal();\n                  modalReturnCheckEntriesRef.current.setRefs({\n                    checkNo: rowItm[2],\n                    amount: rowItm[4],\n                  });\n                  modalReturnCheckEntriesRef.current.mutateEntries({\n                    ORNo: rowItm[6],\n                    Account_No: rowItm[8],\n                  });\n                  modalReturnCheckEntriesRef.current.selectItem(rowItm);\n                });\n              } else {\n                wait(100).then(() => {});\n              }\n            }}\n            onKeyDown={(rowItm: any, rowIdx: any, e: any) => {\n              if (e.code === \"Delete\" || e.code === \"Backspace\") {\n                const isConfim = window.confirm(\n                  `Are you sure you want to delete?`\n                );\n                if (isConfim) {\n                  return;\n                }\n              }\n            }}\n          />\n        </div>\n        <ModalReturnCheckEntries\n          ref={modalReturnCheckEntriesRef}\n          handleConfirm={(\n            e: any,\n            itm: Array<any>,\n            state: any,\n            tableData: Array<any>,\n            columns: Array<any>,\n            ref: any\n          ) => {\n            if (state.lblTextRef !== state.refAmount) {\n              return alert(\"Debit must equal to Credit!\");\n            }\n\n            const retDebit = tableData;\n            const RetReason =\n              ref.refReturnReason.current?.selectedIndex === 2\n                ? \"AC\"\n                : ref.refReturnReason.current?.value;\n            const RetDateRet = ref.refDateReturned.current?.value;\n            const retCredit: any = [];\n            retCredit[0] = state.refAccountID;\n            retCredit[1] = state.refAccountName;\n            retCredit[2] = state.refAmount;\n            retCredit[3] = state.refAcronym;\n            retCredit[4] = state.refSubAccount;\n            retCredit[5] = state.refAccountId;\n\n            // SelectedCheckToBeReturned\n            const newSelectedData = [\n              ...refSelectedCheckToBeReturned.current.table.current.getData(),\n              [\n                itm[6],\n                itm[7],\n                itm[0],\n                itm[1],\n                itm[2],\n                itm[3],\n                itm[4],\n                itm[5],\n                itm[8],\n                RetReason,\n                format(new Date(RetDateRet), \"MM/dd/yyyy\"),\n              ],\n            ];\n\n            refSelectedCheckToBeReturned.current.table.current.setData(\n              newSelectedData\n            );\n\n            if (tssAmountRef.current) {\n              tssAmountRef.current.value = `Total Amount:   ${formatNumber(\n                newSelectedData.reduce((total: number, row: any) => {\n                  total += parseFloat(row[6].replace(/,/g, \"\"));\n                  return total;\n                }, 0)\n              )}`;\n            }\n            let newSelectedDataAccountingEntry: any = [];\n            for (let i = 0; i < retDebit.length; i++) {\n              newSelectedDataAccountingEntry = [\n                ...refAccountingEntry.current.table.current.getData(),\n                [\n                  retDebit[i][0],\n                  retDebit[i][1],\n                  retDebit[i][2],\n                  \"0.00\",\n                  retDebit[i][3],\n                  retDebit[i][4],\n                  retDebit[i][5],\n                  retDebit[i][6],\n                  itm[2],\n                  itm[5],\n                  itm[3],\n                  format(new Date(RetDateRet), \"MM/dd/yyyy\"),\n                  RetReason,\n                  itm[2],\n                  itm[1],\n                  itm[7],\n                ],\n              ];\n            }\n            newSelectedDataAccountingEntry = [\n              ...newSelectedDataAccountingEntry,\n              [\n                retCredit[0],\n                retCredit[1],\n                \"0.00\",\n                retCredit[2],\n                retCredit[5],\n                \"\",\n                retCredit[3],\n                retCredit[4],\n                itm[2],\n                itm[5],\n                itm[3],\n                format(new Date(RetDateRet), \"MM/dd/yyyy\"),\n                RetReason,\n                itm[2],\n                itm[1],\n                itm[7],\n              ],\n            ];\n\n            refAccountingEntry.current.table.current.setData(\n              newSelectedDataAccountingEntry\n            );\n\n            const reformatData = newSelectedDataAccountingEntry.map(\n              (itm: any) => {\n                return {\n                  debit: itm[2],\n                  credit: itm[3],\n                };\n              }\n            );\n            if (refAccountingEntry.current.debitRef.current) {\n              refAccountingEntry.current.debitRef.current.value = formatNumber(\n                getSum(reformatData, \"debit\")\n              );\n            }\n\n            if (refAccountingEntry.current.creditRef.current) {\n              refAccountingEntry.current.creditRef.current.value = formatNumber(\n                getSum(reformatData, \"credit\")\n              );\n            }\n\n            // AccountingEntry\n          }}\n          handleCancel={(e: any) => {\n            table.current.setSelectedRow(null);\n            table.current.resetCheckBox();\n          }}\n        />\n      </div>\n    );\n  }\n);\nconst SelectedCheckToBeReturned = forwardRef(\n  ({ refAccountingEntry }: any, ref) => {\n    const table = useRef<any>(null);\n\n    useImperativeHandle(ref, () => ({\n      test: () => {\n        alert(\"qweqweqweqwe2\");\n      },\n      table,\n      getSelectedCheck: () => {\n        const checkList = table.current.getData();\n        if (checkList.length > 0) {\n          return checkList.map((itm: any) => {\n            return itm[4];\n          });\n        }\n        return [];\n      },\n    }));\n\n    return (\n      <div\n        style={{\n          display: \"flex\",\n          flex: 1,\n        }}\n      >\n        <DataGridViewReact\n          ref={table}\n          columns={columnsSelectedCheckToBeReturned}\n          rows={[]}\n          containerStyle={{\n            height: \"auto\",\n            flex: 1,\n            minHeight: \"200px\",\n          }}\n          getSelectedItem={(rowItm: any) => {\n            if (rowItm) {\n              wait(100).then(() => {});\n            } else {\n              wait(100).then(() => {});\n            }\n          }}\n          onKeyDown={(rowItm: any, rowIdx: any, e: any) => {\n            if (e.code === \"Delete\" || e.code === \"Backspace\") {\n              const isConfim = window.confirm(\n                `Are you sure you want to delete?`\n              );\n              if (isConfim) {\n                const data = table.current.getData();\n                data.splice(rowIdx, 1);\n                const accountingEntryData =\n                  refAccountingEntry.current.table.current.getData();\n                const deleteIndex = [];\n                for (\n                  let index = 0;\n                  index < accountingEntryData.length;\n                  index++\n                ) {\n                  if (rowItm[4] === accountingEntryData[index][8]) {\n                    deleteIndex.push(index);\n                  }\n                }\n\n                table.current.setData(data);\n                refAccountingEntry.current.table.current.setData(\n                  removeIndices(accountingEntryData, deleteIndex)\n                );\n\n                return;\n              }\n            }\n          }}\n        />\n      </div>\n    );\n  }\n);\n\nconst AccountingEntry = forwardRef((props: any, ref) => {\n  const table = useRef<any>(null);\n  const debitRef = useRef<HTMLInputElement>(null);\n  const creditRef = useRef<HTMLInputElement>(null);\n  useImperativeHandle(ref, () => ({\n    test: () => {\n      alert(\"qweqweqweqwe3\");\n    },\n    table,\n    debitRef,\n    creditRef,\n  }));\n\n  return (\n    <>\n      <div\n        style={{\n          display: \"flex\",\n          flex: 1,\n        }}\n      >\n        <DataGridViewReact\n          ref={table}\n          columns={columnsAccountingEntry}\n          rows={[]}\n          containerStyle={{\n            height: \"auto\",\n            flex: 1,\n            minHeight: \"200px\",\n          }}\n          getSelectedItem={(rowItm: any) => {\n            if (rowItm) {\n              wait(100).then(() => {});\n            } else {\n              wait(100).then(() => {});\n            }\n          }}\n          onKeyDown={(rowItm: any, rowIdx: any, e: any) => {\n            if (e.code === \"Delete\" || e.code === \"Backspace\") {\n              const isConfim = window.confirm(\n                `Are you sure you want to delete?`\n              );\n              if (isConfim) {\n                return;\n              }\n            }\n          }}\n        />\n      </div>\n      <div\n        className=\"total-container\"\n        style={{\n          display: \"flex\",\n          width: \"100%\",\n          justifyContent: \"flex-end\",\n          padding: \"5px 0\",\n          columnGap: \"5px\",\n        }}\n      >\n        <span\n          style={{ fontSize: \"13px\", fontWeight: \"bold\", marginRight: \"10px\" }}\n        >\n          Total:\n        </span>\n        <input\n          ref={debitRef}\n          readOnly={true}\n          defaultValue={\"0.00\"}\n          style={{\n            textAlign: \"right\",\n            fontWeight: \"bold\",\n            width: \"140px\",\n            border: \"none\",\n          }}\n        />\n        <input\n          ref={creditRef}\n          readOnly={true}\n          defaultValue={\"0.00\"}\n          style={{\n            textAlign: \"right\",\n            fontWeight: \"bold\",\n            width: \"140px\",\n            border: \"none\",\n          }}\n        />\n      </div>\n    </>\n  );\n});\nconst ModalReturnCheckEntries = forwardRef(\n  ({ handleConfirm, handleCancel, hasSelectedRow }: any, ref) => {\n    const modalRef = useRef<HTMLDivElement>(null);\n    const isMoving = useRef(false);\n    const offset = useRef({ x: 0, y: 0 });\n\n    const { user, myAxios } = useContext(AuthContext);\n    const table = useRef<any>(null);\n    const [showModal, setShowModal] = useState(false);\n    const [handleDelayClose, setHandleDelayClose] = useState(false);\n    const [selectedItem, setSelectedItem] = useState([]);\n    const [blick, setBlick] = useState(false);\n    const [checkNo, setcheckNo] = useState(\"\");\n    // return details\n    const refReturnReason = useRef<HTMLSelectElement>(null);\n    const refDateReturned = useRef<HTMLInputElement>(null);\n\n    // credit entry\n    const refAccountName = useRef<HTMLInputElement>(null);\n    const refAmount = useRef<HTMLInputElement>(null);\n    const refAccountId = useRef<HTMLInputElement>(null);\n    const refSubAccount = useRef<HTMLInputElement>(null);\n\n    const refAccountID = useRef(\"\");\n    const refAcronym = useRef(\"\");\n\n    const lblTextRef = useRef<HTMLInputElement>(null);\n\n    const { isLoading: isLoadingEntries, mutate: mutateEntries } = useMutation({\n      mutationKey: \"load-details\",\n      mutationFn: async (variable: any) =>\n        await myAxios.post(\n          `/task/accounting/return-check/load-entries`,\n          variable,\n          {\n            headers: {\n              Authorization: `Bearer ${user?.accessToken}`,\n            },\n          }\n        ),\n      onSuccess(res) {\n        const dt1 = res.data.dt1;\n        const dt2 = res.data.dt2;\n        if (dt1.length > 0) {\n          if (refAccountId.current) {\n            refAccountId.current.value = dt1[0].IDNo;\n          }\n          if (refAccountName.current) {\n            refAccountName.current.value = dt1[0].Short;\n          }\n          if (refSubAccount.current) {\n            refSubAccount.current.value = \"Head Office\";\n          }\n          refAcronym.current = \"HO\";\n          refAccountID.current = dt1[0].Account_ID;\n        }\n\n        if (dt2.length > 0) {\n          const data = dt2.map((itm: any) => {\n            return {\n              CRCode: itm.CRCode,\n              CRTitle: itm.CRTitle,\n              Credit: itm.Credit,\n              CRLoanID: itm.CRLoanID,\n              CRLoanName: itm.CRLoanName,\n              SAcctCode: itm.SubAcct,\n              SAcctName: itm.ShortName,\n            };\n          });\n          table.current.setDataFormated(data);\n        }\n\n        if (lblTextRef.current)\n          lblTextRef.current.value = formatNumber(getSum(dt2, \"Debit\"));\n      },\n    });\n\n    const closeDelay = () => {\n      setHandleDelayClose(true);\n      setTimeout(() => {\n        setShowModal(false);\n        setHandleDelayClose(false);\n        handleCancel();\n      }, 100);\n    };\n\n    useImperativeHandle(ref, () => ({\n      showModal: () => {\n        setShowModal(true);\n      },\n      clsoeModal: () => {\n        setShowModal(false);\n      },\n      getRefs: () => {\n        const refs = {};\n        return refs;\n      },\n      selectItem: (itm: any) => {\n        setSelectedItem(itm);\n      },\n      setRefs: (props: any) => {\n        setcheckNo(props.checkNo);\n        wait(100).then(() => {\n          if (refAmount.current) refAmount.current.value = props.amount;\n          if (refReturnReason.current) refReturnReason.current.value = \"DAIF\";\n        });\n      },\n      mutateEntries: (variables: string) => {\n        mutateEntries(variables);\n      },\n      closeDelay,\n    }));\n\n    const columns = [\n      { key: \"CRCode\", label: \"Code\", width: 90 },\n      { key: \"CRTitle\", label: \"Account Name\", width: 200 },\n      {\n        key: \"Credit\",\n        label: \"Amount\",\n        width: 110,\n      },\n      {\n        key: \"CRLoanID\",\n        label: \"ID No\",\n        width: 200,\n      },\n      {\n        key: \"CRLoanName\",\n        label: \"Identity\",\n        width: 200,\n      },\n      {\n        key: \"SAcctCode\",\n        label: \"Sub Account\",\n        width: 100,\n      },\n      {\n        key: \"SAcctName\",\n        label: \"Sub Account Name\",\n        width: 200,\n      },\n    ];\n\n    const handleMouseDown = (e: any) => {\n      if (!modalRef.current) return;\n\n      isMoving.current = true;\n      offset.current = {\n        x: e.clientX - modalRef.current.offsetLeft,\n        y: e.clientY - modalRef.current.offsetTop,\n      };\n\n      document.addEventListener(\"mousemove\", handleMouseMove);\n      document.addEventListener(\"mouseup\", handleMouseUp);\n    };\n\n    // Move modal with mouse\n    const handleMouseMove = (e: any) => {\n      if (!isMoving.current || !modalRef.current) return;\n\n      modalRef.current.style.left = `${e.clientX - offset.current.x}px`;\n      modalRef.current.style.top = `${e.clientY - offset.current.y}px`;\n    };\n\n    // Stop moving when releasing mouse\n    const handleMouseUp = () => {\n      isMoving.current = false;\n      document.removeEventListener(\"mousemove\", handleMouseMove);\n      document.removeEventListener(\"mouseup\", handleMouseUp);\n    };\n\n    return showModal ? (\n      <>\n        {isLoadingEntries && <Loading />}\n        <div\n          className=\"modal-accounting-entry-shadow\"\n          style={{\n            position: \"fixed\",\n            top: 0,\n            bottom: 0,\n            left: 0,\n            right: 0,\n            background: \"transparent\",\n            zIndex: \"88\",\n          }}\n          onClick={() => {\n            setBlick(true);\n            setTimeout(() => {\n              setBlick(false);\n            }, 250);\n          }}\n        ></div>\n        <div\n          className=\"modal-accounting-entry\"\n          ref={modalRef}\n          style={{\n            height: blick ? \"402px\" : \"400px\",\n            width: blick ? \"60.3%\" : \"60%\",\n            border: \"1px solid #64748b\",\n            position: \"absolute\",\n            left: \"50%\",\n            top: \"35%\",\n            transform: \"translate(-50%, -75%)\",\n            display: \"flex\",\n            flexDirection: \"column\",\n            zIndex: handleDelayClose ? -100 : 100,\n            opacity: handleDelayClose ? 0 : 1,\n            transition: \"all 150ms\",\n            boxShadow: \"3px 6px 32px -7px rgba(0,0,0,0.75)\",\n          }}\n        >\n          <div\n            style={{\n              height: \"22px\",\n              background: \"white\",\n              display: \"flex\",\n              justifyContent: \"space-between\",\n              padding: \"5px\",\n              position: \"relative\",\n              alignItems: \"center\",\n              cursor: \"grab\",\n            }}\n            onMouseDown={handleMouseDown}\n          >\n            <span\n              className=\"modal-title\"\n              style={{ fontSize: \"13px\", fontWeight: \"bold\" }}\n            >\n              Return Detail and Accounting Entry (Check No.: {checkNo})\n            </span>\n            <button\n              className=\"btn-check-exit-modal\"\n              style={{\n                padding: \"0 5px\",\n                borderRadius: \"0px\",\n                background: \"white\",\n                color: \"black\",\n                height: \"22px\",\n                position: \"absolute\",\n                top: 0,\n                right: 0,\n              }}\n              onClick={() => {\n                closeDelay();\n              }}\n            >\n              <CloseIcon sx={{ fontSize: \"22px\" }} />\n            </button>\n          </div>\n          <div\n            style={{\n              flex: 1,\n              background: \"#F1F1F1\",\n              padding: \"5px\",\n              display: \"flex\",\n              flexDirection: \"column\",\n            }}\n          >\n            <div\n              style={{\n                display: \"flex\",\n                columnGap: \"5px\",\n                height: \"auto\",\n              }}\n              className=\"modal-content\"\n            >\n              <div\n                style={{\n                  height: \"auto\",\n                  display: \"flex\",\n                  flexDirection: \"column\",\n                  padding: \"10px\",\n                  rowGap: \"20px\",\n                }}\n              >\n                <div\n                  style={{\n                    height: \"auto\",\n                    padding: \"10px\",\n                    display: \"flex\",\n                    width: \"100%\",\n                    border: \"1px solid #64748b\",\n                    position: \"relative\",\n                  }}\n                >\n                  <span\n                    style={{\n                      position: \"absolute\",\n                      top: \"-15px\",\n                      left: \"20px\",\n                      background: \"#F1F1F1\",\n                      padding: \"0 5px\",\n                      fontSize: \"14px\",\n                      fontWeight: \"bold\",\n                    }}\n                  >\n                    Return Detail\n                  </span>\n                  <div\n                    className=\"modal-layer-one\"\n                    style={{\n                      display: \"flex\",\n                      columnGap: \"50px\",\n                    }}\n                  >\n                    <SelectInput\n                      containerStyle={{ width: \"100%\" }}\n                      label={{\n                        title: \"Return Reason : \",\n                        style: {\n                          fontSize: \"12px\",\n                          fontWeight: \"bold\",\n                          width: \"100px\",\n                        },\n                      }}\n                      selectRef={refReturnReason}\n                      select={{\n                        style: { width: \"calc(85% - 100px)\", height: \"22px\" },\n                        defaultValue: \"\",\n                      }}\n                      datasource={[\n                        { key: \"DAIF\", value: \"DAIF\" },\n                        { key: \"DAUD\", value: \"DAUD\" },\n                        { key: \"Account Closed\", value: \"Account Closed\" },\n                        { key: \"SPO\", value: \"SPO\" },\n                        {\n                          key: \"Account under Garnishment\",\n                          value: \"Account under Garnishment\",\n                        },\n                        {\n                          key: \"Unauthorized Signature\",\n                          value: \"Unauthorized Signature\",\n                        },\n                      ]}\n                      values={\"value\"}\n                      display={\"key\"}\n                    />\n                    <TextInput\n                      containerClassName=\"custom-input\"\n                      label={{\n                        title: \"Return Date : \",\n                        style: {\n                          fontSize: \"12px\",\n                          fontWeight: \"bold\",\n                          width: \"100px\",\n                        },\n                      }}\n                      input={{\n                        defaultValue: format(new Date(), \"yyyy-MM-dd\"),\n                        className: \"date\",\n                        type: \"date\",\n                        style: { width: \"200px\" },\n                      }}\n                      inputRef={refDateReturned}\n                    />\n                  </div>\n                </div>\n                <div\n                  style={{\n                    height: \"auto\",\n                    padding: \"10px\",\n                    display: \"flex\",\n                    width: \"100%\",\n                    border: \"1px solid #64748b\",\n                    position: \"relative\",\n                  }}\n                >\n                  <span\n                    style={{\n                      position: \"absolute\",\n                      top: \"-15px\",\n                      left: \"20px\",\n                      background: \"#F1F1F1\",\n                      padding: \"0 5px\",\n                      fontSize: \"14px\",\n                      fontWeight: \"bold\",\n                    }}\n                  >\n                    Credit Entry\n                  </span>\n                  <div\n                    className=\"modal-layer-two\"\n                    style={{\n                      display: \"flex\",\n                      flexDirection: \"column\",\n                      rowGap: \"10px\",\n                      height: \"auto\",\n                    }}\n                  >\n                    <div\n                      className=\"content\"\n                      style={{\n                        display: \"flex\",\n                        columnGap: \"50px\",\n                      }}\n                    >\n                      <TextInput\n                        containerClassName=\"custom-input\"\n                        label={{\n                          title: \"Account Name : \",\n                          style: {\n                            fontSize: \"12px\",\n                            fontWeight: \"bold\",\n                            width: \"100px\",\n                          },\n                        }}\n                        input={{\n                          readOnly: true,\n                          className: \"ref_no\",\n                          type: \"text\",\n                          style: { width: \"200px\" },\n                        }}\n                        inputRef={refAccountName}\n                      />\n                      <TextInput\n                        containerClassName=\"custom-input\"\n                        label={{\n                          title: \"Account ID : \",\n                          style: {\n                            fontSize: \"12px\",\n                            fontWeight: \"bold\",\n                            width: \"100px\",\n                          },\n                        }}\n                        input={{\n                          readOnly: true,\n                          className: \"account-id\",\n                          type: \"text\",\n                          style: { width: \"200px\" },\n                        }}\n                        inputRef={refAccountId}\n                      />\n                    </div>\n                    <div\n                      className=\"content\"\n                      style={{\n                        display: \"flex\",\n                        columnGap: \"50px\",\n                      }}\n                    >\n                      <TextInput\n                        containerClassName=\"custom-input\"\n                        label={{\n                          title: \"Amount : \",\n                          style: {\n                            fontSize: \"12px\",\n                            fontWeight: \"bold\",\n                            width: \"100px\",\n                          },\n                        }}\n                        input={{\n                          readOnly: true,\n                          className: \"ref_no\",\n                          type: \"text\",\n                          style: { width: \"200px\" },\n                        }}\n                        inputRef={refAmount}\n                      />\n                      <TextInput\n                        containerClassName=\"custom-input\"\n                        label={{\n                          title: \"Sub Account : \",\n                          style: {\n                            fontSize: \"12px\",\n                            fontWeight: \"bold\",\n                            width: \"100px\",\n                          },\n                        }}\n                        input={{\n                          readOnly: true,\n                          className: \"sub-account\",\n                          type: \"text\",\n                          style: { width: \"200px\" },\n                        }}\n                        inputRef={refSubAccount}\n                      />\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div\n                className=\"modal-buttons\"\n                style={{\n                  width: \"100px\",\n                  display: \"flex\",\n                  flexDirection: \"column\",\n                  alignItems: \"center\",\n                  justifyContent: \"center\",\n                  rowGap: \"20px\",\n                  height: \"auto\",\n                }}\n              >\n                <BlinkingButton\n                  style={{\n                    width: \"80px\",\n                    height: \"50px\",\n                    border: \"1px solid #153002\",\n                    fontSize: \"12px\",\n                    padding: 0,\n                    margin: 0,\n                    boxSizing: \"border-box\",\n                    background: \"#8fbc8b\",\n                    color: \"black\",\n                    display: \"flex\",\n                    flexDirection: \"column\",\n                    justifyContent: \"center\",\n                    alignItems: \"center\",\n                    fontFamily: \"arial\",\n                    cursor: \"pointer\",\n                    position: \"relative\",\n                  }}\n                  onClick={(e: any) => {\n                    const data = table.current.getData();\n                    const state = {\n                      refReturnReason: refReturnReason.current?.value,\n                      refDateReturned: refDateReturned.current?.value,\n                      refAccountName: refAccountName.current?.value,\n                      refAmount: refAmount.current?.value,\n                      refAccountId: refAccountId.current?.value,\n                      refSubAccount: refSubAccount.current?.value,\n                      refAccountID: refAccountID.current,\n                      refAcronym: refAcronym.current,\n                      lblTextRef: lblTextRef.current?.value,\n                    };\n                    const ref = {\n                      refReturnReason,\n                      refDateReturned,\n                      refAccountName,\n                      refAmount,\n                      refAccountId,\n                      refSubAccount,\n                      refAccountID,\n                      refAcronym,\n                      lblTextRef,\n                    };\n                    handleConfirm(e, selectedItem, state, data, columns, ref);\n                    closeDelay();\n                  }}\n                >\n                  <span\n                    style={{\n                      position: \"absolute\",\n                      top: \"2px\",\n                    }}\n                  >\n                    <svg\n                      xmlns=\"http://www.w3.org/2000/svg\"\n                      width=\"22px\"\n                      height=\"22px\"\n                      viewBox=\"0 0 24 24\"\n                      fill=\"none\"\n                    >\n                      <path\n                        d=\"M8.5 12.5L10.5 14.5L15.5 9.5\"\n                        stroke=\"white\"\n                        strokeWidth=\"1.5\"\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                      />\n                      <path\n                        d=\"M7 3.33782C8.47087 2.48697 10.1786 2 12 2C17.5228 2 22 6.47715 22 12C22 17.5228 17.5228 22 12 22C6.47715 22 2 17.5228 2 12C2 10.1786 2.48697 8.47087 3.33782 7\"\n                        stroke=\"#a5e15b\"\n                        strokeWidth=\"1.5\"\n                        strokeLinecap=\"round\"\n                      />\n                    </svg>\n                  </span>\n                  <span\n                    className=\"button-tittle\"\n                    style={{\n                      position: \"absolute\",\n                      top: \"25px\",\n                    }}\n                  >\n                    Accept\n                  </span>\n                </BlinkingButton>\n                <BlinkingButton\n                  style={{\n                    width: \"80px\",\n                    height: \"50px\",\n                    border: \"1px solid #153002\",\n                    fontSize: \"12px\",\n                    padding: 0,\n                    margin: 0,\n                    boxSizing: \"border-box\",\n                    background: \"#8fbc8b\",\n                    color: \"black\",\n                    display: \"flex\",\n                    flexDirection: \"column\",\n                    justifyContent: \"center\",\n                    alignItems: \"center\",\n                    fontFamily: \"arial\",\n                    cursor: \"pointer\",\n                    position: \"relative\",\n                  }}\n                  onClick={(e: any) => {\n                    handleCancel(e);\n                    closeDelay();\n                  }}\n                >\n                  <span\n                    style={{\n                      position: \"absolute\",\n                      top: \"2px\",\n                    }}\n                  >\n                    <svg\n                      xmlns=\"http://www.w3.org/2000/svg\"\n                      fill=\"red\"\n                      width=\"21px\"\n                      height=\"21px\"\n                      viewBox=\"0 0 36 36\"\n                      version=\"1.1\"\n                      preserveAspectRatio=\"xMidYMid meet\"\n                    >\n                      <title>ban-line</title>\n                      <path\n                        className=\"clr-i-outline clr-i-outline-path-1\"\n                        d=\"M18,2A16,16,0,1,0,34,18,16,16,0,0,0,18,2ZM4,18A13.93,13.93,0,0,1,7.43,8.85L27.15,28.57A14,14,0,0,1,4,18Zm24.57,9.15L8.85,7.43A14,14,0,0,1,28.57,27.15Z\"\n                      />\n                      <rect\n                        x=\"0\"\n                        y=\"0\"\n                        width=\"36\"\n                        height=\"36\"\n                        fillOpacity=\"0\"\n                      />\n                    </svg>\n                  </span>\n                  <span\n                    className=\"button-tittle\"\n                    style={{\n                      position: \"absolute\",\n                      top: \"25px\",\n                    }}\n                  >\n                    Cancel\n                  </span>\n                </BlinkingButton>\n              </div>\n            </div>\n            <div\n              style={{\n                flex: 1,\n              }}\n            >\n              <DataGridViewReact\n                ref={table}\n                columns={columns}\n                rows={[]}\n                containerStyle={{\n                  height: \"200px\",\n                  flex: 1,\n                }}\n                getSelectedItem={(rowItm: any) => {\n                  if (rowItm) {\n                    wait(100).then(() => {});\n                  } else {\n                    wait(100).then(() => {});\n                  }\n                }}\n                onKeyDown={(rowItm: any, rowIdx: any, e: any) => {\n                  if (e.code === \"Delete\" || e.code === \"Backspace\") {\n                    const isConfim = window.confirm(\n                      `Are you sure you want to delete?`\n                    );\n                    if (isConfim) {\n                      return;\n                    }\n                  }\n                }}\n              />\n            </div>\n            <input\n              style={{\n                width: \"100%\",\n                textAlign: \"right\",\n                fontWeight: \"bold\",\n                paddingRight: \"10px\",\n              }}\n              ref={lblTextRef}\n              defaultValue={\"0.00\"}\n              readOnly\n            />\n          </div>\n          <style>\n            {`\n              .btn-check-exit-modal:hover{\n                background:red !important;\n                color:white !important;\n              }\n            `}\n          </style>\n        </div>\n      </>\n    ) : null;\n  }\n);\nconst BlinkingButton = ({ onClick, style, children }: any) => {\n  const uniClass = `btn-${Date.now()}-${Math.random()\n    .toString(36)\n    .substr(2, 9)}`;\n  const [isBlinking, setIsBlinking] = useState(false);\n\n  const handleClick = (e: any) => {\n    setIsBlinking(true); // Start blinking\n    setTimeout(() => setIsBlinking(false), 200); // Stop blinking after 1 second\n    onClick(e);\n  };\n  return (\n    <>\n      <button\n        className={`${uniClass} ${\n          isBlinking ? \"blinking\" : \"\"\n        } blinking-button-access-class`}\n        onClick={handleClick}\n        style={style}\n      >\n        {children}\n      </button>\n      <style>\n        {`\n        .${uniClass} {\n          padding: 10px 20px;\n          font-size: 16px;\n          color: white;\n          border: ${isBlinking ? \"2px solid #153002 !important\" : \"none \"};\n          border-radius: 5px;\n          cursor: pointer;\n          transition: background-color 0.3s ease;\n\n        }\n\n        .${uniClass}:hover {\n          background-color:rgb(145, 177, 142) !important;\n        }\n\n        /* Blink animation */\n        @keyframes blink {\n          0% {\n            opacity: 1;\n          }\n          50% {\n            opacity: 0.5;\n          }\n          100% {\n            opacity: 1;\n          }\n        }\n\n        .blinking {\n          animation: blink 0.5s linear infinite;\n        }\n                `}\n      </style>\n    </>\n  );\n};\nexport function formatNumber(num: number) {\n  return (num || 0).toLocaleString(\"en-US\", {\n    minimumFractionDigits: 2,\n    maximumFractionDigits: 2,\n  });\n}\nexport function getSum(data: Array<any>, key: string): number {\n  if (data.length <= 0) {\n    return 0;\n  }\n  return data.reduce((total: number, row: any) => {\n    total += parseFloat(row[key].toString().replace(/,/g, \"\"));\n    return total;\n  }, 0);\n}\nfunction removeIndices(arr: any, indices: any) {\n  const toRemove = new Set(indices); // Use Set for faster lookup\n  return arr.filter((_: any, index: any) => !toRemove.has(index));\n}\n","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 6v3l4-4-4-4v3c-4.42 0-8 3.58-8 8 0 1.57.46 3.03 1.24 4.26L6.7 14.8c-.45-.83-.7-1.79-.7-2.8 0-3.31 2.69-6 6-6zm6.76 1.74L17.3 9.2c.44.84.7 1.79.7 2.8 0 3.31-2.69 6-6 6v-3l-4 4 4 4v-3c4.42 0 8-3.58 8-8 0-1.57-.46-3.03-1.24-4.26z\"\n}), 'Autorenew');\nexports.default = _default;"],"names":["ReturnCheck","_mutationFn","_mutationFn2","_queryFn","_mutationFn3","_getSelectedItem","_useContext","useContext","AuthContext","user","myAxios","_useState","useState","_useState2","_slicedToArray","mode","setMode","returnCheckComponentRef","useRef","inputSearchRef","refNoRef","refDate","refExp","_useMutation","useMutation","mutationKey","mutationFn","_x","_asyncToGenerator","_regeneratorRuntime","mark","_callee","variable","wrap","_context","prev","next","post","headers","Authorization","concat","accessToken","abrupt","sent","stop","apply","arguments","onSuccess","res","data","success","resetReturnChecks","Swal","position","icon","title","message","showConfirmButton","timer","isLoadingReturnChecksSave","isLoading","mutateReturnChecksSave","mutate","_useMutation2","_x2","_callee2","_context2","isLoadingReturnChecksUpdate","mutateReturnChecksUpdate","_useQuery","useQuery","queryKey","queryFn","_callee3","_context3","get","refetchOnWindowFocus","wait","then","current","value","newRefCode","isLoadingReturnChecksID","refetch","_useMutation3","_x3","_callee4","_context4","data1","JSON","parse","data2","console","log","length","RC_No","format","Date","RC_Date","Explanation","newSelectedCheck","index","push","ORNum","Date_Collect","SlipCode","Date_Deposit","Check_No","Check_Date","formatNumber","parseFloat","Amount","toString","replace","Bank","BankAccnt","Reason","Date_Return","refSelectedCheckToBeReturned","table","setData","tssAmountRef","getSum","newAccoutningEntry","GL_Acct","cGL_Acct","Debit","Credit","ID_No","cID_No","Sub_Acct","cSub_Acct","Check_Bank","Check_Return","Check_Reason","Check_Deposit","Check_Collect","refAccountingEntry","debitRef","creditRef","isLoadingReturnChecksSearchSelectedSave","mutateReturnChecksSearchSelectedSave","_useUpwardTableModalS","useUpwardTableModalSearchSafeMode","link","column","key","label","width","getSelectedItem","_x4","_x5","_x6","_x7","_callee5","rowItm","_","rowIdx","__","_context5","RefNo","searchReturnCheckCreditCloseModal","SearchReturnCheckUpwardTableModalSearch","UpwardTableModalSearch","searchReturnCheckCreditOpenModal","openModal","closeModal","handleOnSave","_refExp$current","_refExp$current2","alert","focus","dgvSelChecks","getData","dgvAccountingEntry","saveCondfirmationAlert","isConfirm","_refNoRef$current","_refDate$current","_refExp$current3","refNo","date","explanation","codeCondfirmationAlert","isUpdate","cb","userCodeConfirmation","_refNoRef$current2","_refDate$current2","_refExp$current4","refSelectCheck","resetCheckBox","setSelectedRow","refetchList","_jsxs","_Fragment","children","_jsx","Loading","className","style","display","flexDirection","height","flex","padding","background","alignItems","columnGap","marginBottom","TextInput","containerClassName","fontSize","fontWeight","input","type","onKeyDown","e","preventDefault","currentTarget","SearchIcon","sx","onIconClick","inputRef","Button","variant","startIcon","AddIcon","id","onClick","color","SaveIcon","disabled","CloseIcon","text","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","result","isConfirmed","rowGap","border","defaultValue","AutorenewIcon","TabPage","ref","forwardRef","_ref","_useState3","_useState4","activeTab","setActiveTab","_useState5","_useState6","buttonPosition","setButtonPosition","buttonsRef","chkFndRef","tabs","content","SelectCheck","SelectedCheckToBeReturned","AccountingEntry","useEffect","_buttonsRef$current$","getBoundingClientRect","useImperativeHandle","test","map","tab","el","cursor","backgroundColor","borderRight","borderLeft","borderTop","textTransform","top","left","right","justifyContent","paddingTop","readOnly","textAlign","columnsSelectCheck","hide","columnsSelectedCheckToBeReturned","columnsAccountingEntry","_ref2","_mutationFn4","_useContext2","searchSelectCheckRef","modalReturnCheckEntriesRef","_useMutation4","_x8","_callee6","_context6","setDataFormated","checkList","isLoadingCheckSelected","mutateCheckSelected","mutateCheckSelectedRef","_searchSelectCheckRef","search","onChange","target","_searchSelectCheckRef2","DataGridViewReact","disbaleTable","columns","rows","containerStyle","minHeight","getSelectedCheck","includes","showModal","setRefs","checkNo","amount","mutateEntries","ORNo","Account_No","selectItem","code","window","confirm","ModalReturnCheckEntries","handleConfirm","itm","state","tableData","_ref$refReturnReason$","_ref$refReturnReason$2","_ref$refDateReturned$","lblTextRef","refAmount","retDebit","RetReason","refReturnReason","selectedIndex","RetDateRet","refDateReturned","retCredit","refAccountID","refAccountName","refAcronym","refSubAccount","refAccountId","newSelectedData","_toConsumableArray","reduce","total","row","newSelectedDataAccountingEntry","i","reformatData","debit","credit","handleCancel","_ref3","splice","accountingEntryData","deleteIndex","arr","indices","toRemove","Set","filter","has","removeIndices","props","marginRight","_ref4","_mutationFn5","modalRef","hasSelectedRow","isMoving","offset","x","y","_useContext3","_useState7","_useState8","setShowModal","_useState9","_useState10","handleDelayClose","setHandleDelayClose","_useState11","_useState12","selectedItem","setSelectedItem","_useState13","_useState14","blick","setBlick","_useState15","_useState16","setcheckNo","_useMutation5","_x9","_callee7","_context7","dt1","dt2","IDNo","Short","Account_ID","CRCode","CRTitle","CRLoanID","CRLoanName","SAcctCode","SubAcct","SAcctName","ShortName","isLoadingEntries","closeDelay","setTimeout","clsoeModal","getRefs","variables","handleMouseMove","clientX","clientY","handleMouseUp","document","removeEventListener","bottom","zIndex","transform","opacity","transition","boxShadow","onMouseDown","offsetLeft","offsetTop","addEventListener","borderRadius","SelectInput","selectRef","select","datasource","values","BlinkingButton","margin","boxSizing","fontFamily","_refReturnReason$curr","_refDateReturned$curr","_refAccountName$curre","_refAmount$current","_refAccountId$current","_refSubAccount$curren","_lblTextRef$current","xmlns","viewBox","fill","d","stroke","strokeWidth","strokeLinecap","strokeLinejoin","version","preserveAspectRatio","fillOpacity","paddingRight","_ref5","uniClass","now","Math","random","substr","_useState17","_useState18","isBlinking","setIsBlinking","num","toLocaleString","minimumFractionDigits","maximumFractionDigits","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx"],"sourceRoot":""}