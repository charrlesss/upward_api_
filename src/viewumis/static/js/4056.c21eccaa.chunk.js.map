{"version":3,"file":"static/js/4056.c21eccaa.chunk.js","mappings":"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","sources":["components/Helmet.tsx","feautures/Admin/Dashboard.tsx","../node_modules/@mui/icons-material/Search.js"],"sourcesContent":["\r\nimport { Helmet } from \"react-helmet\";\r\n\r\nconst PageHelmet = ({ title = '' }: { title: string }) => {\r\n    const imgUrl = process.env.REACT_APP_IMAGE_URL;\r\n    const department = process.env.REACT_APP_DEPARTMENT\r\n    return (\r\n        <Helmet>\r\n            <title>{`${department} - ${title}`}</title>\r\n            <link rel=\"icon\" type=\"image/png\" href={`${imgUrl}/logo.png`} />\r\n        </Helmet>\r\n    );\r\n};\r\n\r\nexport default PageHelmet;","import { useEffect, useState, useRef } from \"react\";\nimport { myAxios } from \"../../lib/axios\";\nimport { useContext } from \"react\";\nimport { AuthContext } from \"../../components/AuthContext\";\nimport \"../../style/dashboard.css\";\nimport PageHelmet from \"../../components/Helmet\";\nimport { DataGridViewReact } from \"../../components/DataGridViewReact\";\nimport { useMutation } from \"react-query\";\nimport { Loading } from \"../../components/Loading\";\n\nconst policyColumn = [\n  { key: \"AssuredName\", label: \"Assured Name\", width: 300 },\n  { key: \"PolicyNo\", label: \"Policy No.\", width: 200 },\n  {\n    key: \"InsuredValue\",\n    label: \"Insured Value\",\n    width: 120,\n    type: \"number\",\n  },\n  { key: \"unit\", label: \"Unit\", width: 270 },\n  { key: \"ChassisNo\", label: \"Chassis No.\", width: 160 },\n  { key: \"DateExpired\", label: \"Date Expired\", width: 100 },\n];\nconst POLICYTABLE = () => {\n  const tableRef = useRef<any>(null);\n  // const [laoding, setLoading] = useState(false);\n  // const { user } = useContext(AuthContext);\n\n  // useEffect(() => {\n  //   setLoading(true);\n  //   myAxios\n  //     .get(`/get-renewal-this-month?policy=${policy}`, {\n  //       headers: {\n  //         Authorization: `Bearer ${user?.accessToken}`,\n  //       },\n  //     })\n  //     .then((data) => {\n  //       setLoading(false);\n  //       console.log(data?.data.renewal);\n  //       if (tableRef.current)\n  //         tableRef.current.setDataFormated(data?.data.renewal);\n  //     });\n  // }, [user, policy]);\n\n  // const width = window.innerWidth - 50;\n  // const height = window.innerHeight - 145;\n  // if (laoding) {\n  //   return <div style={{ textAlign: \"center\" }}>Loading...</div>;\n  // }\n  return (\n    <div\n      style={{\n        flex: 1,\n        display: \"flex\",\n      }}\n    >\n      <DataGridViewReact\n        containerStyle={{\n          flex: 1,\n          height: \"auto\",\n        }}\n        ref={tableRef}\n        width=\"100%\"\n        height=\"350px\"\n        columns={policyColumn}\n        getSelectedItem={(\n          rowItm: any,\n          colItm: any,\n          rowIdx: any,\n          colIdx: any\n        ) => {}}\n        onKeyDown={(rowSelected: any, RowIndex: any, e: any) => {}}\n      />\n    </div>\n  );\n};\nconst tabs = [\n  {\n    id: 0,\n    label: \"TPL Policy\",\n    policy: \"TPL\",\n  },\n  {\n    id: 1,\n    label: \"COM Policy\",\n    policy: \"COM\",\n  },\n  {\n    id: 2,\n    label: \"CGL Policy\",\n    policy: \"CGL\",\n  },\n  {\n    id: 3,\n    label: \"FIRE Policy\",\n    policy: \"FIRE\",\n  },\n  {\n    id: 4,\n    label: \"MAR Policy\",\n    policy: \"MAR\",\n  },\n  {\n    id: 5,\n    label: \"PA Policy\",\n    policy: \"PA\",\n  },\n];\n\nexport default function Dashboard() {\n  const { myAxios, user } = useContext(AuthContext);\n  const tableRef = useRef<any>(null);\n  const [activeTab, setActiveTab] = useState(0);\n  const [buttonPosition, setButtonPosition] = useState<any>({});\n  const buttonsRef = useRef<Array<HTMLButtonElement | null>>([]);\n\n  const { mutate: mutateSearchPolicy, isLoading: isLoadingSearchPolicy } =\n    useMutation({\n      mutationKey: \"search-policy\",\n      mutationFn: async (variables: any) => {\n        return await myAxios.post(\"/get-renewal-this-month\", variables, {\n          headers: {\n            Authorization: `Bearer ${user?.accessToken}`,\n          },\n        });\n      },\n      onSuccess: (res) => {\n        tableRef.current.setDataFormated(res?.data.renewal);\n      },\n    });\n\n  const mutateSearchPolicyRef = useRef<any>(mutateSearchPolicy);\n\n  useEffect(() => {\n    mutateSearchPolicyRef.current({\n      policy: \"TPL\",\n    });\n  }, []);\n\n  return (\n    <>\n      {isLoadingSearchPolicy && <Loading />}\n      <div\n        id=\"main\"\n        style={{\n          flex: 1,\n          position: \"relative\",\n          display: \"flex\",\n          flexDirection: \"column\",\n          width: \"100%\",\n          height: \"100%\",\n          padding: \"5px\",\n          background: \"#F1F1F1\",\n          // rowGap:\"0px\"\n        }}\n      >\n        <PageHelmet title={\"Dashboard\"} />\n        <div\n          className=\"mobile-title\"\n          style={{\n            borderTop: \"1px solid #64748b\",\n            borderRight: \"1px solid #64748b\",\n            display: \"none\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n            background: \"#3EA1E2\",\n            color: \"white\",\n            padding: \"5px\",\n            margin: 0,\n          }}\n        >\n          RENEWAL NOTICE\n        </div>\n        <div\n          style={{\n            display: \"flex\",\n            padding: 0,\n            margin: 0,\n          }}\n        >\n          {tabs.map((tab, index) => (\n            <button\n              ref={(el) => (buttonsRef.current[index] = el)}\n              key={tab.id}\n              onClick={(el) => {\n                setActiveTab(tab.id);\n                setButtonPosition(el.currentTarget.getBoundingClientRect());\n                mutateSearchPolicyRef.current({\n                  policy: tab.policy,\n                });\n              }}\n              style={{\n                width: \"auto\",\n                fontSize: \"11px\",\n                padding: \"10px\",\n                cursor: \"pointer\",\n                backgroundColor: activeTab === tab.id ? \"white\" : \"transparent\",\n                color: activeTab === tab.id ? \"#0074cc\" : \"#000\",\n                border: \"none\",\n                borderRight:\n                  activeTab === tab.id\n                    ? tab.id === 0\n                      ? \"none\"\n                      : \"1px solid #0074cc\"\n                    : tab.id === 0\n                    ? \"none\"\n                    : \"1px solid #64748b\",\n                borderLeft:\n                  activeTab === tab.id\n                    ? tab.id === 2\n                      ? \"none\"\n                      : \"1px solid #0074cc\"\n                    : tab.id === 2\n                    ? \"none\"\n                    : \"1px solid #64748b\",\n                borderTop:\n                  activeTab === tab.id\n                    ? \"1px solid #0074cc\"\n                    : \"1px solid #64748b\",\n\n                // borderBottom:\n                //   activeTab === tab.id ? \"2px solid #007BFF\" : \"2px solid #ccc\",\n                textTransform: \"uppercase\",\n                fontWeight: \"bold\",\n              }}\n            >\n              {tab.label}\n            </button>\n          ))}\n          <div\n            className=\"desktop-title\"\n            style={{\n              flex: 1,\n              borderTop: \"1px solid #64748b\",\n              borderRight: \"1px solid #64748b\",\n              display: \"flex\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n              background: \"#3EA1E2\",\n              color: \"white\",\n            }}\n          >\n            RENEWAL NOTICE\n          </div>\n        </div>\n        <div\n          style={{\n            // padding: \"7px\",\n            flex: 1,\n            display: \"flex\",\n            // borderTop: \"2px solid #007BFF\",\n            position: \"relative\",\n            flexDirection: \"column\",\n          }}\n        >\n          <div\n            style={{\n              position: \"absolute\",\n              top: \"-20px\",\n              left: 0,\n              width: `${(buttonPosition?.left as number) - 5 || 0}px`,\n              height: \"1px\",\n              background: \"#64748b\",\n            }}\n          ></div>\n          <div\n            style={{\n              position: \"absolute\",\n              top: \"-20px\",\n              right: 0,\n              left: `${(buttonPosition?.right as number) - 5 || 0}px`,\n              height: \"1px\",\n              background: \"#64748b\",\n            }}\n          ></div>\n          <div\n            style={{\n              display: \"flex\",\n              flex: 1,\n              flexDirection: \"column\",\n            }}\n          >\n            <DataGridViewReact\n              containerStyle={{\n                flex: 1,\n                height: \"auto\",\n              }}\n              ref={tableRef}\n              width=\"100%\"\n              height=\"350px\"\n              columns={policyColumn}\n              getSelectedItem={(\n                rowItm: any,\n                colItm: any,\n                rowIdx: any,\n                colIdx: any\n              ) => {}}\n              onKeyDown={(rowSelected: any, RowIndex: any, e: any) => {}}\n            />\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z\"\n}), 'Search');\nexports.default = _default;"],"names":["_ref","_ref$title","title","_jsxs","Helmet","children","_jsx","concat","process","rel","type","href","policyColumn","key","label","width","tabs","id","policy","Dashboard","_mutationFn","_useContext","useContext","AuthContext","myAxios","user","tableRef","useRef","_useState","useState","_useState2","_slicedToArray","activeTab","setActiveTab","_useState3","_useState4","buttonPosition","setButtonPosition","buttonsRef","_useMutation","useMutation","mutationKey","mutationFn","_x","_asyncToGenerator","_regeneratorRuntime","mark","_callee","variables","wrap","_context","prev","next","post","headers","Authorization","accessToken","abrupt","sent","stop","apply","arguments","onSuccess","res","current","setDataFormated","data","renewal","mutateSearchPolicy","mutate","isLoadingSearchPolicy","isLoading","mutateSearchPolicyRef","useEffect","_Fragment","Loading","style","flex","position","display","flexDirection","height","padding","background","PageHelmet","className","borderTop","borderRight","justifyContent","alignItems","color","margin","map","tab","index","ref","el","onClick","currentTarget","getBoundingClientRect","fontSize","cursor","backgroundColor","border","borderLeft","textTransform","fontWeight","top","left","right","DataGridViewReact","containerStyle","columns","getSelectedItem","rowItm","colItm","rowIdx","colIdx","onKeyDown","rowSelected","RowIndex","e","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d"],"sourceRoot":""}