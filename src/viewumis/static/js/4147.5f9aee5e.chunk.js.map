{"version":3,"file":"static/js/4147.5f9aee5e.chunk.js","mappings":"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","sources":["components/DatePicker.tsx","components/NumberFormat.tsx","feautures/Admin/Task/Claims/Claims.tsx","components/Table.tsx","components/ModalWithTable.tsx","hooks/useQueryModalTable.tsx","lib/confirmationAlert.ts","../node_modules/@mui/icons-material/Article.js","../node_modules/@mui/icons-material/CloudDownload.js","../node_modules/@mui/icons-material/CloudUpload.js","../node_modules/@mui/icons-material/Delete.js","../node_modules/@mui/icons-material/HighlightOff.js","../node_modules/@mui/icons-material/RemoveRedEye.js","../node_modules/@mui/icons-material/Visibility.js"],"sourcesContent":["import { LocalizationProvider } from \"@mui/x-date-pickers/LocalizationProvider\";\nimport { AdapterDateFns } from \"@mui/x-date-pickers/AdapterDateFns\";\nimport { DatePicker } from \"@mui/x-date-pickers\";\nexport default function CustomDatePicker({\n  label,\n  name,\n  onChange,\n  value,\n  onKeyDown,\n  inputRef,\n  datePickerRef,\n  fullWidth,\n  textField,\n  minWidth = \"200px\",\n  ...rest\n}: any) {\n  return (\n    <LocalizationProvider dateAdapter={AdapterDateFns}>\n      <DatePicker\n      floatingLabelStyle={{color: \"black\" }}\n        value={value}\n        onChange={onChange}\n        ref={datePickerRef}\n        slotProps={{\n          textField: {\n            size: \"small\",\n            label,\n            name,\n            onKeyDown,\n            inputRef: inputRef,\n            fullWidth,\n\n            ...textField,\n          },\n        }}\n        InputLabelProps={{\n          sx: {\n            color: \"black\",\n          },\n        }}\n        sx={{\n          minWidth,\n          fieldset: { borderColor: \"black\" },\n          \".MuiFormLabel-root\": { fontSize: \"14px\" },\n          \".MuiFormLabel-root[data-shrink=false]\": {\n            top: \"-5px\",\n          },\n        }}\n        {...rest}\n      />\n    </LocalizationProvider>\n  );\n}\n","import React from \"react\";\nimport { NumericFormat, NumericFormatProps } from \"react-number-format\";\n\ninterface CustomProps {\n  onChange: (event: { target: { name: string; value: string } }) => void;\n  name: string;\n}\n\nexport const NumericFormatCustom = React.forwardRef<\n  NumericFormatProps,\n  CustomProps\n>(function NumericFormatCustom(props, ref) {\n  const { onChange, ...other } = props;\n\n  return (\n    <NumericFormat\n      {...other}\n      getInputRef={ref}\n      onValueChange={(values) => {\n        onChange({\n          target: {\n            name: props.name,\n            value: values.value,\n          },\n        });\n      }}\n      allowNegative={false}\n      thousandSeparator\n      valueIsNumericString\n      //   prefix=\"$\"\n    />\n  );\n});\n","import React, {\n  useContext,\n  useId,\n  useReducer,\n  useRef,\n  useState,\n  useEffect,\n  useImperativeHandle,\n  forwardRef,\n} from \"react\";\nimport useQueryModalTable from \"../../../../hooks/useQueryModalTable\";\nimport {\n  Button,\n  FormControl,\n  IconButton,\n  InputAdornment,\n  InputLabel,\n  MenuItem,\n  OutlinedInput,\n  Select,\n  TextField,\n  Menu,\n  Stack,\n} from \"@mui/material\";\nimport LoadingButton from \"@mui/lab/LoadingButton\";\nimport PersonSearchIcon from \"@mui/icons-material/PersonSearch\";\nimport { AuthContext } from \"../../../../components/AuthContext\";\nimport CloudDownloadIcon from \"@mui/icons-material/CloudDownload\";\nimport RemoveRedEyeIcon from \"@mui/icons-material/RemoveRedEye\";\nimport HighlightOffIcon from \"@mui/icons-material/HighlightOff\";\nimport CloudUploadIcon from \"@mui/icons-material/CloudUpload\";\nimport CustomDatePicker from \"../../../../components/DatePicker\";\nimport { useMutation, useQuery } from \"react-query\";\nimport RestartAltIcon from \"@mui/icons-material/RestartAlt\";\nimport Swal from \"sweetalert2\";\nimport { flushSync } from \"react-dom\";\nimport { codeCondfirmationAlert } from \"../../../../lib/confirmationAlert\";\nimport ReactDOMServer from \"react-dom/server\";\nimport format from \"date-fns/format\";\nimport \"../../../../style/claim.css\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\nimport VisibilityIcon from \"@mui/icons-material/Visibility\";\nimport { grey } from \"@mui/material/colors\";\nimport { NumericFormatCustom } from \"../../../../components/NumberFormat\";\nimport ArticleIcon from \"@mui/icons-material/Article\";\n\nconst initialClaimState = {\n  claims_id: \"\",\n  dateReported: null,\n  dateAccident: null,\n  dateInspected: null,\n  department: 1,\n  remarks: \"\",\n  search: \"\",\n  mode: \"\",\n  claim_no: \"\",\n};\nconst initialPolicyState = {\n  policy: \"\",\n  claim_type: 0,\n  insurance: \"\",\n  PolicyNo: \"\",\n  PlateNo: \"\",\n  Model: \"\",\n  BodyType: \"\",\n  Make: \"\",\n  ChassisNo: \"\",\n  MotorNo: \"\",\n  ORNo: \"\",\n  CoverNo: \"\",\n  BLTFileNo: \"\",\n  AssuredName: \"\",\n  IDNo: \"\",\n  totaDue: \"00.00\",\n  totalpaid: \"00.00\",\n  balance: \"00.00\",\n  remitted: \"00.00\",\n  Account: \"\",\n  status: 0,\n  DateFrom: \"\",\n  DateTo: \"\",\n  DateReceived: null,\n  DateClaim: null,\n  AmountClaim: \"\",\n  AmountApproved: \"\",\n  NameTPPD: \"\",\n};\nconst claimType = [\n  \"OWN DAMAGE\",\n  \"CARNAP\",\n  \"VTPL-PROPERTY DAMAGE\",\n  \"VTPL-BODILY INJURY\",\n  \"THIRD PARTY-DEATH\",\n];\nconst basicDocuments = [\n  { label: \"Policy\", name: \"policyFile\" },\n  { label: \"ENDORCEMENT\", name: \"endorsement\" },\n  { label: \"OR of Premium Payment\", name: \"OPP\" },\n  {\n    label: \"Official Receipt and Certificate of Registration\",\n    name: \"ORCR\",\n  },\n  {\n    label: \"Drivers License and Official Receipt\",\n    name: \"DLOR\",\n  },\n  { label: \"Police Report\", name: \"PR\" },\n  { label: \"Driver's Affidavit\", name: \"DA\" },\n  { label: \"Stencil of Motor and Chassis No.\", name: \"SMCN\" },\n];\nconst insuranceDocuments = [\n  { label: \"LOA\", name: \"loa\" },\n  { label: \"Offer Letter\", name: \"offerLetter\" },\n  { label: \"Comparative Evaluation\", name: \"CE\" },\n];\nconst claimsStatus = [\n  \"Ongoing Repair\",\n  \"With Offer Letter\",\n  \"With Lacking Documents\",\n  \"With LOA\",\n  \"Submitted to Insurance Company\",\n  \"For Evaluation\",\n  \"For Inspection\",\n  \"For Check Preparation\",\n  \"Denied\",\n  \"Done\",\n  \"\",\n];\nconst renderFields = () => {\n  const arrs = [\n    [\n      { label: \"Copies of Colored Picture\", name: \"ct1_1\" },\n      { label: \"Copy of Repair Estimate\", name: \"ct1_2\" },\n    ],\n    [\n      { label: \"Complaint Sheet\", name: \"ct2_1\" },\n      { label: \"Alarm Sheet\", name: \"ct2_2\" },\n      { label: \"Original Keys\", name: \"ct2_3\" },\n      { label: \"Certificate of NO RECOVERY\", name: \"ct2_4\" },\n    ],\n    [\n      { label: \"Copies of Colored Picture\", name: \"ct3_1\" },\n      { label: \"Copy of Repair Estimate\", name: \"ct3_2\" },\n      { label: \"Certificate of Registration and OR\", name: \"ct3_3\" },\n      { label: \"Photocopy of Driver's license\", name: \"ct3_4\" },\n      { label: \"Certificate of NO Claim from Insurer\", name: \"ct3_5\" },\n    ],\n    [\n      { label: \"Medical Certificate\", name: \"ct4_1\" },\n      { label: \"Receipt of Medicine/Drugs\", name: \"ct4_2\" },\n      { label: \"Hospital Bill\", name: \"ct4_3\" },\n      { label: \"Birth Certificate\", name: \"ct4_4\" },\n      { label: \"Affidavit of Desistance\", name: \"ct4_5\" },\n    ],\n    [\n      { label: \"Death Certificate, ID\", name: \"ct5_1\" },\n      { label: \"Marriage Contract \", name: \"ct5_2\" },\n      { label: \"Funeral/Burial Official Receipts\", name: \"ct5_3\" },\n    ],\n  ];\n  return arrs;\n};\nexport const reducer = (state: any, action: any) => {\n  switch (action.type) {\n    case \"UPDATE_FIELD\":\n      return {\n        ...state,\n        [action.field]: action.value,\n      };\n    default:\n      return state;\n  }\n};\n\nfunction Claims() {\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\n  const [claimsSubmited, setClaimsSubmited] = useState([]);\n  const { myAxios, user } = useContext(AuthContext);\n  const [claimState, claimDispatch] = useReducer(reducer, initialClaimState);\n  const [policyState, policyDispatch] = useReducer(reducer, initialPolicyState);\n  const [listofClaim, setListofClaim] = useState<Array<any>>([]);\n  const [showModal, setShowModal] = useState(false);\n  const searchClaimInputRef = useRef<HTMLInputElement>(null);\n  const policySearchInputRef = useRef<HTMLInputElement>(null);\n  const datePickerRef = useRef<HTMLElement>(null);\n  const dateAccidentRef = useRef<HTMLElement>(null);\n  const dateInspectedRef = useRef<HTMLElement>(null);\n  const { isLoading: isLoadingClaimsId, refetch: refetchClaimsId } = useQuery({\n    queryKey: \"get-claims-id\",\n    queryFn: async () =>\n      await myAxios.get(`/task/claims/claims/get-claims-id`, {\n        headers: {\n          Authorization: `Bearer ${user?.accessToken}`,\n        },\n      }),\n    refetchOnWindowFocus: false,\n    onSuccess(res) {\n      claimDispatch({\n        type: \"UPDATE_FIELD\",\n        field: \"claims_id\",\n        value: res.data.claim_id[0].id,\n      });\n    },\n  });\n  const open = Boolean(anchorEl);\n  const handleClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n    setAnchorEl(event.currentTarget);\n  };\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n  const handleInputChange = (e: any) => {\n    const { name, value } = e.target;\n    claimDispatch({ type: \"UPDATE_FIELD\", field: name, value });\n  };\n  const { isLoading: isLoadingSelectedSearch, mutate: mutateSelectedSearch } =\n    useMutation({\n      mutationFn: (variable: any) => {\n        return myAxios.post(\n          \"/task/claims/claims/selected-search-claims\",\n          variable,\n          {\n            headers: {\n              Authorization: `Bearer ${user?.accessToken}`,\n            },\n          }\n        );\n      },\n      onSuccess(res) {\n        const formattedSelectedData = res.data.formattedSelectedData;\n        const claims_id = res.data.claims_id;\n        const policyTypeContainer: Array<any> = [];\n        formattedSelectedData.map(async (item: any) => {\n          policyTypeContainer.push(\n            parseInt(item.policyState.claim_type?.toString())\n          );\n          const basicDocuments: Array<any> = item.basicFileCustom;\n          const otherDocuments: Array<any> = item.otherFileCustom;\n          const insuranceDocuments: Array<any> = item.insuranceFileCustom;\n          const newObjContainerBasic = await formatDataToDocument(\n            basicDocuments,\n            `${process.env.REACT_APP_IMAGE_URL}claim-files/${claims_id}/${item.id}/Basic-Document/`\n          );\n\n          const newObjContainerOther = await formatDataToDocument(\n            otherDocuments,\n            `${process.env.REACT_APP_IMAGE_URL}claim-files/${claims_id}/${item.id}/Other-Document/`\n          );\n\n          const newObjContainerInsurance = await formatDataToDocument(\n            insuranceDocuments,\n            `${process.env.REACT_APP_IMAGE_URL}claim-files/${claims_id}/${item.id}/Insurance-Document/`\n          );\n\n          item.basicFileCustom = await Promise.all(newObjContainerBasic);\n          item.otherFileCustom = await Promise.all(newObjContainerOther);\n          item.insuranceFileCustom = await Promise.all(\n            newObjContainerInsurance\n          );\n\n          return item;\n        });\n        async function formatDataToDocument(\n          dataDocument: Array<any>,\n          url: string\n        ) {\n          const newObjContainer: Array<any> = [];\n          for (let index = 0; index < dataDocument.length; index++) {\n            const basicItem = dataDocument[index];\n            const mainURL = `${url}/${basicItem.uniqueFilename}`;\n            const response = await fetch(mainURL);\n            const blob = await response.blob();\n            const file = new File([blob], basicItem.fileName, {\n              type: basicItem.fileType,\n            });\n            const reader = new FileReader();\n            newObjContainer.push(\n              new Promise((resolve, reject) => {\n                reader.onload = function (event) {\n                  resolve({\n                    fileContent: event.target?.result,\n                    datakey: basicItem.datakey,\n                    fileName: basicItem.fileName,\n                    fileType: basicItem.fileType,\n                    file,\n                  });\n                };\n                reader.onerror = function (event) {\n                  reject(new Error(\"Error reading file: \" + file.name));\n                };\n                reader.readAsDataURL(file);\n              })\n            );\n          }\n          return newObjContainer;\n        }\n        setListofClaim(policyTypeContainer);\n        setNewStateValue(policyDispatch, formattedSelectedData[0].policyState);\n        setClaimsSubmited(formattedSelectedData);\n      },\n    });\n  const { isLoading: isLoadingClaimSave, mutate: mutateClaimSave } =\n    useMutation({\n      mutationKey: \"save-claim\",\n      mutationFn: async (variable: any) =>\n        await myAxios.post(\"/task/claims/claims/save\", variable, {\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${user?.accessToken}`,\n          },\n        }),\n      onSuccess(res) {\n        const response = res as any;\n\n        if (response.data.success) {\n          setNewStateValue(claimDispatch, initialClaimState);\n          setNewStateValue(policyDispatch, initialPolicyState);\n          setClaimsSubmited([]);\n          refetchClaimsId();\n\n          return Swal.fire({\n            position: \"center\",\n            icon: \"success\",\n            title: response.data.message,\n            timer: 1500,\n          });\n        }\n        return Swal.fire({\n          position: \"center\",\n          icon: \"warning\",\n          title: response.data.message,\n          timer: 1500,\n        });\n      },\n    });\n  const {\n    isLoading: isLoadingClaimSelectedPolicyDetails,\n    mutate: mutateClaimSelectedPolicyDetails,\n  } = useMutation({\n    mutationKey: \"get-selected-policy-details\",\n    mutationFn: async (variable: any) =>\n      await myAxios.post(\n        \"/task/claims/claims/get-selected-policy-details\",\n        variable,\n        {\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${user?.accessToken}`,\n          },\n        }\n      ),\n    onSuccess(res) {\n      const response = res as any;\n\n      if (response.data.success && response.data.data.length > 0) {\n        console.log(response);\n        setNewStateValue(policyDispatch, response.data.data[0]);\n      }\n      closePolicyModal();\n    },\n  });\n  const {\n    ModalComponent: SearchClaimModal,\n    isLoading: isLoadingClaimModal,\n    openModal: openClaimModal,\n    closeModal: closeClaimModal,\n  } = useQueryModalTable({\n    link: {\n      url: \"/task/claims/claims/search-claims\",\n      queryUrlName: \"searchClaims\",\n    },\n    columns: [\n      { field: \"claims_id\", headerName: \"Ref No.\", width: 300 },\n      { field: \"AssuredName\", headerName: \"Name\", width: 350 },\n      { field: \"PolicyNo\", headerName: \"Policy No.\", width: 200 },\n      { field: \"IDNo\", headerName: \"ID No.\", width: 200 },\n      { field: \"ChassisNo\", headerName: \"Chassis No.\", width: 200 },\n      { field: \"MotorNo\", headerName: \"Motor No.\", width: 200 },\n      { field: \"PlateNo\", headerName: \"Plate No.\", width: 200 },\n    ],\n    queryKey: \"search-claims\",\n    uniqueId: \"claims_id\",\n    responseDataKey: \"claims\",\n    onSelected: (selectedRowData) => {\n      mutateSelectedSearch({ selectedRowData });\n      setNewStateValue(claimDispatch, {\n        claims_id: selectedRowData[0].claims_id,\n        dateReported: selectedRowData[0].dateReported,\n        dateAccident: selectedRowData[0].dateAccident,\n        dateInspected: selectedRowData[0].dateInspected,\n        department: parseInt(selectedRowData[0].department),\n        remarks: selectedRowData[0].remarks,\n        claim_no: \"\",\n        mode: \"update\",\n      });\n      closeClaimModal();\n    },\n    searchRef: searchClaimInputRef,\n  });\n  const {\n    ModalComponent: PolicyModal,\n    isLoading: isLoadingPolicyModal,\n    openModal: openPolicyModal,\n    closeModal: closePolicyModal,\n  } = useQueryModalTable({\n    link: {\n      url: \"/task/claims/claims/get-policy\",\n      queryUrlName: \"searchPolicy\",\n    },\n    columns: [\n      { field: \"PolicyNo\", headerName: \"Policy No.\", width: 300 },\n      { field: \"AssuredName\", headerName: \"Name.\", width: 350 },\n      { field: \"IDNo\", headerName: \"ID No.\", width: 200 },\n      { field: \"ChassisNo\", headerName: \"Chassis No.\", width: 200 },\n    ],\n    queryKey: \"get-policy\",\n    uniqueId: \"PolicyNo\",\n    responseDataKey: \"claimPolicy\",\n    onSelected: (selectedRowData) => {\n      setNewStateValue(policyDispatch, selectedRowData[0]);\n      mutateClaimSelectedPolicyDetails({\n        PolicyNo: selectedRowData[0].PolicyNo,\n      });\n    },\n    searchRef: policySearchInputRef,\n  });\n\n  function sortList(data: any) {\n    if (data.length <= 0) {\n      return [];\n    }\n    const sortedData = data.sort((a: any, b: any) => {\n      if (a.id < b.id) {\n        return -1;\n      }\n      if (a.id > b.id) {\n        return 1;\n      }\n      return 0;\n    });\n    return sortedData;\n  }\n  const handleTdClick = (itm: any) => {\n    flushSync(() => {\n      setShowModal(true);\n    });\n    const groupByLabel = (arr: any) => {\n      const grouped: any = {};\n      arr.forEach((item: any) => {\n        if (!grouped[item.datakey]) {\n          grouped[item.datakey] = [];\n        }\n        grouped[item.datakey].push(item);\n      });\n\n      return Object.entries(grouped);\n    };\n    const displayFile = (groupedData: Array<any>) => {\n      groupedData.forEach(([datakey, items]: any) => {\n        const fileList = new DataTransfer();\n        const input = document.querySelector(\n          `#${datakey} input`\n        ) as HTMLInputElement;\n        items.forEach((itm: any) => {\n          fileList.items.add(itm.file);\n        });\n        input.files = fileList.files;\n        input.dispatchEvent(new Event(\"change\", { bubbles: true }));\n      });\n    };\n    setNewStateValue(policyDispatch, itm.policyState);\n    displayFile(groupByLabel(itm.basicFileCustom));\n    displayFile(groupByLabel(itm.otherFileCustom));\n    displayFile(groupByLabel(itm.insuranceFileCustom));\n    handleInputChange({\n      target: { name: \"claim_no\", value: itm.id },\n    });\n  };\n\n  const clickClaimInformationSheet = () => {\n    localStorage.setItem(\"paper-width\", \"8.5in\");\n    localStorage.setItem(\"paper-height\", \"13in\");\n    let printString = (claimdsDetails: any) => {\n      return (\n        <div>\n          <div\n            style={{\n              borderBottom: \"3px solid black\",\n            }}\n          >\n            <h3\n              style={{\n                textAlign: \"center\",\n                fontWeight: \"bold\",\n              }}\n            >\n              {claimdsDetails.department === 0\n                ? \"UPWARD INSURANCE SERVICES AND MANAGEMENT INC.\"\n                : \"UPWARD CONSULTANT SERVICES AND MANAGEMENT INC.\"}\n            </h3>\n          </div>\n          <h1\n            style={{\n              textAlign: \"center\",\n              fontWeight: \"bolder\",\n            }}\n          >\n            CLAIMS INFORMATION SHEET\n          </h1>\n          <p\n            style={{\n              textAlign: \"right\",\n              fontSize: \"16px\",\n              fontWeight: \"bold\",\n            }}\n          >\n            <p\n              style={{\n                textAlign: \"right\",\n                fontSize: \"16px\",\n              }}\n            >\n              <span style={{ fontWeight: \"bolder\" }}>CLAIM NO.: </span>\n              <span style={{ fontWeight: \"bold\" }}>\n                {\" \"}\n                {claimdsDetails.claims_id}\n              </span>\n            </p>\n          </p>\n          <div\n            style={{\n              minHeight: \"200px\",\n              maxHeight: \"auto\",\n              marginBottom: \"20px\",\n              display: \"flex\",\n              border: \"2px solid black\",\n            }}\n          >\n            <div\n              style={{\n                flex: 1,\n                minHeight: \"200px\",\n                maxHeight: \"auto\",\n                borderRight: \"2px solid black\",\n                display: \"flex\",\n                flexDirection: \"column\",\n                rowGap: \"5px\",\n              }}\n            >\n              <div\n                style={{\n                  width: \"100%\",\n                  display: \"flex\",\n                  padding: \"0 10px\",\n                  boxSizing: \"border-box\",\n                }}\n              >\n                <span\n                  style={{\n                    flex: 1,\n                    textAlign: \"left\",\n                    fontWeight: \"bolder\",\n                  }}\n                >\n                  Assured's Name\n                </span>\n                <span style={{ width: \"40px\", textAlign: \"left\" }}>:</span>\n                <span\n                  style={{\n                    flex: 1,\n                    textAlign: \"left\",\n                    fontWeight: \"bold\",\n                  }}\n                >\n                  {claimdsDetails.AssuredName}\n                </span>\n              </div>\n              <div\n                style={{\n                  width: \"100%\",\n                  display: \"flex\",\n                  padding: \"0 10px\",\n                  boxSizing: \"border-box\",\n                }}\n              >\n                <span\n                  style={{\n                    flex: 1,\n                    textAlign: \"left\",\n                    fontWeight: \"bolder\",\n                  }}\n                >\n                  Unit Insured\n                </span>\n                <span style={{ width: \"40px\", textAlign: \"left\" }}>:</span>\n                <span\n                  style={{\n                    flex: 1,\n                    textAlign: \"left\",\n                    fontWeight: \"bold\",\n                  }}\n                >\n                  {claimdsDetails.policy === \"COM\" ||\n                  claimdsDetails.policy === \"TPL\"\n                    ? `${claimdsDetails.Model} ${claimdsDetails.Make} ${claimdsDetails.BodyType}`\n                    : `${\n                        claimdsDetails.policy === \"PA\"\n                          ? \"Group Personal Accident\"\n                          : claimdsDetails.policy\n                      }`}\n                </span>\n              </div>\n              {claimdsDetails.policy === \"VPolicy\" && (\n                <>\n                  <div\n                    style={{\n                      width: \"100%\",\n                      display: \"flex\",\n                      padding: \"0 10px\",\n                      boxSizing: \"border-box\",\n                    }}\n                  >\n                    <span\n                      style={{\n                        flex: 1,\n                        textAlign: \"left\",\n                        fontWeight: \"bolder\",\n                      }}\n                    >\n                      Engine No.\n                    </span>\n                    <span style={{ width: \"40px\", textAlign: \"left\" }}>:</span>\n                    <span\n                      style={{\n                        flex: 1,\n                        textAlign: \"left\",\n                        fontWeight: \"bold\",\n                      }}\n                    >\n                      {claimdsDetails.MotorNo}\n                    </span>\n                  </div>\n                  <div\n                    style={{\n                      width: \"100%\",\n                      display: \"flex\",\n                      padding: \"0 10px\",\n                      boxSizing: \"border-box\",\n                    }}\n                  >\n                    <span\n                      style={{\n                        flex: 1,\n                        textAlign: \"left\",\n                        fontWeight: \"bolder\",\n                      }}\n                    >\n                      Chassis No.\n                    </span>\n                    <span style={{ width: \"40px\", textAlign: \"left\" }}>:</span>\n                    <span\n                      style={{\n                        flex: 1,\n                        textAlign: \"left\",\n                        fontWeight: \"bold\",\n                      }}\n                    >\n                      {claimdsDetails.ChassisNo}\n                    </span>\n                  </div>\n                </>\n              )}\n              <div\n                style={{\n                  width: \"100%\",\n                  display: \"flex\",\n                  padding: \"0 10px\",\n                  boxSizing: \"border-box\",\n                }}\n              >\n                <span\n                  style={{\n                    flex: 1,\n                    textAlign: \"left\",\n                    fontWeight: \"bolder\",\n                  }}\n                >\n                  Inception\n                </span>\n                <span style={{ width: \"40px\", textAlign: \"left\" }}>:</span>\n                <span\n                  style={{\n                    flex: 1,\n                    textAlign: \"left\",\n                    fontWeight: \"bold\",\n                  }}\n                >\n                  {`${format(\n                    new Date(claimdsDetails.DateFrom),\n                    \"MMMM d, yyyy\"\n                  )} - ${format(new Date(claimdsDetails.DateTo), \"yyyy\")}`}\n                </span>\n              </div>\n\n              <div\n                style={{\n                  width: \"100%\",\n                  display: \"flex\",\n                  padding: \"0 10px\",\n                  boxSizing: \"border-box\",\n                }}\n              >\n                <span\n                  style={{\n                    flex: 1,\n                    textAlign: \"left\",\n                    fontWeight: \"bolder\",\n                  }}\n                >\n                  Type of Claim\n                </span>\n                <span style={{ width: \"40px\", textAlign: \"left\" }}>:</span>\n                <div style={{ flex: 1 }}>\n                  {listofClaim.map((d: any, idx) => {\n                    return (\n                      <p\n                        style={{\n                          textAlign: \"left\",\n                          fontWeight: \"bold\",\n                          padding: \"0\",\n                          margin: \"0\",\n                        }}\n                        key={idx}\n                      >\n                        {claimType[d]}\n                      </p>\n                    );\n                  })}\n                </div>\n              </div>\n            </div>\n            <div\n              style={{\n                width: \"220px\",\n                alignSelf: \"self-start\",\n                minHeight: \"200px\",\n                maxHeight: \"auto\",\n                display: \"flex\",\n                flexDirection: \"column\",\n              }}\n            >\n              <div\n                style={{\n                  flex: 1,\n                  borderBottom: \"2px solid black\",\n                  padding: \"0 10px\",\n                }}\n              >\n                <p\n                  style={{\n                    fontWeight: \"bolder\",\n                    marginLeft: 0,\n                    marginTop: 0,\n                    marginRight: 0,\n                    marginBottom: \"10px\",\n                    padding: 0,\n                  }}\n                >\n                  Date Prepared:\n                </p>\n                <p\n                  style={{\n                    fontWeight: \"bold\",\n                    margin: 0,\n                    padding: 0,\n                  }}\n                >\n                  {format(new Date(), \"MMMM d, yyyy\")}\n                </p>\n              </div>\n              <div\n                style={{\n                  flex: 1,\n                  borderBottom: \"2px solid black\",\n                  padding: \"0 10px\",\n                }}\n              >\n                <p\n                  style={{\n                    fontWeight: \"bolder\",\n                    marginLeft: 0,\n                    marginTop: 0,\n                    marginRight: 0,\n                    marginBottom: \"10px\",\n                    padding: 0,\n                  }}\n                >\n                  Policy No.\n                </p>\n                <p\n                  style={{\n                    fontWeight: \"bold\",\n                    margin: 0,\n                    padding: 0,\n                  }}\n                >\n                  {claimdsDetails.PolicyNo}\n                </p>\n              </div>\n              <div\n                style={{\n                  flex: 1,\n                  padding: \"0 10px\",\n                }}\n              >\n                <p\n                  style={{\n                    fontWeight: \"bolder\",\n                    marginLeft: 0,\n                    marginTop: 0,\n                    marginRight: 0,\n                    marginBottom: \"10px\",\n                    padding: 0,\n                  }}\n                >\n                  Date of Accident\n                </p>\n                <p\n                  style={{\n                    fontWeight: \"bold\",\n                    margin: 0,\n                    padding: 0,\n                  }}\n                >\n                  {format(new Date(claimState.dateAccident), \"MMMM d, yyyy\")}\n                </p>\n              </div>\n            </div>\n          </div>\n          <div\n            style={{\n              border: \"2px solid black\",\n              height: \"170px\",\n              position: \"relative\",\n            }}\n          >\n            <p\n              style={{\n                borderBottom: \"2px solid black\",\n                padding: \"2px 5px\",\n                margin: \"0\",\n                fontWeight: \"bold\",\n                textAlign: \"left\",\n              }}\n            >\n              {claimdsDetails.department === 0\n                ? \"Under Writer\"\n                : \"Insurance Coordinator\"}\n            </p>\n            <p\n              style={{\n                width: \"200px\",\n                borderTop: \"2px solid black\",\n                padding: \"0\",\n                margin: \"0\",\n                fontWeight: \"bold\",\n                position: \"absolute\",\n                right: \"0\",\n                bottom: \"20px\",\n                textAlign: \"center\",\n              }}\n            >\n              {claimdsDetails.department === 0\n                ? \"Angelo Dacula\"\n                : \"Rina Fernandez\"}\n            </p>\n          </div>\n          <div\n            style={{\n              borderBottom: \"2px solid black\",\n              borderLeft: \"2px solid black\",\n              borderRight: \"2px solid black\",\n              height: \"170px\",\n              position: \"relative\",\n            }}\n          >\n            <p\n              style={{\n                borderBottom: \"2px solid black\",\n                padding: \"2px 5px\",\n                margin: \"0\",\n                fontWeight: \"bold\",\n                textAlign: \"left\",\n              }}\n            >\n              Accounting\n            </p>\n            <p\n              style={{\n                width: \"200px\",\n                borderTop: \"2px solid black\",\n                padding: \"0\",\n                margin: \"0\",\n                fontWeight: \"bold\",\n                position: \"absolute\",\n                right: \"0\",\n                bottom: \"20px\",\n                textAlign: \"center\",\n              }}\n            >\n              Gina Rondina\n            </p>\n            <div\n              style={{\n                padding: \"2px 5px\",\n                margin: \"0\",\n                fontWeight: \"bold\",\n                height: \"100%\",\n                display: \"flex\",\n                flexDirection: \"column\",\n                alignItems: \"center\",\n              }}\n            >\n              <div>\n                <div\n                  style={{\n                    textAlign: \"left\",\n                  }}\n                >\n                  <span\n                    style={{\n                      margin: 0,\n                      padding: 0,\n                    }}\n                  >\n                    {parseFloat(\n                      claimdsDetails.balance.toString().replace(/,/, \"\")\n                    ) <= 0\n                      ? \"Fully Paid,\"\n                      : \"Not Fully Paid,\"}\n                  </span>\n                  <span\n                    style={{\n                      margin: 0,\n                      padding: 0,\n                    }}\n                  >\n                    {parseFloat(\n                      claimdsDetails.balance.toString().replace(/,/, \"\")\n                    ) <= 0\n                      ? \"\"\n                      : ` Total balance : ${claimdsDetails.balance}`}\n                  </span>\n                </div>\n                <div>\n                  <span>\n                    {parseFloat(\n                      claimdsDetails.remitted.toString().replace(/,/, \"\")\n                    ) <= 0\n                      ? \"Not Remitted\"\n                      : \"Remitted\"}\n                  </span>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div\n            style={{\n              borderBottom: \"2px solid black\",\n              borderLeft: \"2px solid black\",\n              borderRight: \"2px solid black\",\n              height: \"170px\",\n              marginBottom: \"20px\",\n            }}\n          >\n            <p\n              style={{\n                padding: \"2px 5px\",\n                margin: \"0\",\n                fontWeight: \"bold\",\n                textAlign: \"left\",\n              }}\n            >\n              Remarks:\n            </p>\n            <pre\n              style={{\n                padding: \"2px 5px\",\n                margin: \"0\",\n                fontWeight: \"bold\",\n                textAlign: \"left\",\n                fontSize: \"15px\",\n              }}\n            >\n              {claimdsDetails.remarks}\n            </pre>\n          </div>\n          <div\n            style={{\n              border: \"2px solid black\",\n              height: \"140px\",\n              display: \"flex\",\n              justifyContent: \"space-around\",\n              flexDirection: \"column\",\n            }}\n          >\n            <p\n              style={{\n                padding: \"2px\",\n                margin: \"0\",\n              }}\n            >\n              <span\n                style={{\n                  fontWeight: \"bold\",\n                }}\n              >\n                Prepared by\n              </span>\n              <span\n                style={{\n                  margin: \"0\",\n                  fontWeight: \"bold\",\n                  marginLeft: \"100px\",\n                }}\n              >\n                Checked by\n              </span>\n            </p>\n            <div\n              style={{\n                display: \"flex\",\n                width: \"100%\",\n                height: \"auto\",\n                justifyContent: \"space-between\",\n                padding: \"0 10px\",\n                boxSizing: \"border-box\",\n              }}\n            >\n              <div style={{ textAlign: \"center\" }}>\n                <p\n                  style={{\n                    fontWeight: \"bolder\",\n                    fontSize: \"19px \",\n                    margin: 0,\n                    padding: 0,\n                  }}\n                >\n                  Pio Mendoza\n                </p>\n                <p\n                  style={{\n                    fontSize: \"13px\",\n                    fontWeight: \"bold\",\n                    margin: 0,\n                    padding: 0,\n                  }}\n                >\n                  Claims Officer\n                </p>\n              </div>\n              <div\n                style={{\n                  display: \"flex\",\n                  justifyContent: \"space-between\",\n                }}\n              >\n                <div style={{ textAlign: \"center\" }}>\n                  <p\n                    style={{\n                      fontWeight: \"bolder\",\n                      margin: 0,\n                      padding: 0,\n                      fontSize: \"19px \",\n                    }}\n                  >\n                    Mary Grace Lanera\n                  </p>\n                  <p\n                    style={{\n                      fontSize: \"13px\",\n                      fontWeight: \"bold\",\n                      margin: 0,\n                      padding: 0,\n                    }}\n                  >\n                    Operations Supervisor\n                  </p>\n                </div>\n              </div>\n              <div\n                style={{\n                  display: \"flex\",\n                  justifyContent: \"space-between\",\n                }}\n              >\n                <div style={{ textAlign: \"center\" }}>\n                  <p\n                    style={{\n                      fontWeight: \"bolder\",\n                      margin: 0,\n                      padding: 0,\n                      fontSize: \"19px \",\n                    }}\n                  >\n                    Leo Aquino\n                  </p>\n                  <p\n                    style={{\n                      fontSize: \"13px\",\n                      fontWeight: \"bold\",\n                      margin: 0,\n                      padding: 0,\n                    }}\n                  >\n                    General Manager\n                  </p>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      );\n    };\n    flushSync(() => {\n      const elementString = ReactDOMServer.renderToString(\n        printString({\n          ...claimState,\n          ...policyState,\n        })\n      );\n\n      localStorage.setItem(\"printString\", elementString);\n    });\n    window.open(\"/dashboard/print\", \"_blank\");\n\n    handleClose();\n  };\n  if (isLoadingClaimSelectedPolicyDetails) {\n    return <div>Loading...</div>;\n  }\n\n  return (\n    <div\n      style={{ display: \"flex\", columnGap: \"10px\", flexDirection: \"column\" }}\n    >\n      <div style={{ display: \"flex\", columnGap: \"10px\" }}>\n        {isLoadingClaimModal ? (\n          <LoadingButton loading={isLoadingClaimModal} />\n        ) : (\n          <FormControl\n            sx={{\n              width: \"400px\",\n              \".MuiFormLabel-root\": {\n                fontSize: \"14px\",\n                background: \"white\",\n                zIndex: 99,\n                padding: \"0 3px\",\n              },\n              \".MuiFormLabel-root[data-shrink=false]\": {\n                top: \"-5px\",\n              },\n            }}\n            variant=\"outlined\"\n            size=\"small\"\n          >\n            <InputLabel htmlFor=\"search-claim-id\">Search</InputLabel>\n            <OutlinedInput\n              sx={{\n                height: \"27px\",\n                fontSize: \"14px\",\n                legend: {\n                  background: \"red\",\n                },\n              }}\n              inputRef={policySearchInputRef}\n              name=\"search\"\n              value={claimState.search}\n              onChange={handleInputChange}\n              id=\"search-claim-id\"\n              onKeyDown={(e) => {\n                if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n                  return openClaimModal(claimState.search);\n                }\n              }}\n              endAdornment={\n                <InputAdornment position=\"end\">\n                  <IconButton\n                    onClick={() => {\n                      openClaimModal(claimState.search);\n                    }}\n                    edge=\"end\"\n                    color=\"secondary\"\n                  >\n                    <PersonSearchIcon />\n                  </IconButton>\n                </InputAdornment>\n              }\n              label=\"Search\"\n            />\n          </FormControl>\n        )}\n        {isLoadingClaimsId ? (\n          <LoadingButton loading={isLoadingClaimsId} />\n        ) : (\n          <FormControl\n            variant=\"outlined\"\n            size=\"small\"\n            sx={{\n              width: \"140px\",\n              \".MuiFormLabel-root\": {\n                fontSize: \"14px\",\n                background: \"white\",\n                zIndex: 99,\n                padding: \"0 3px\",\n              },\n              \".MuiFormLabel-root[data-shrink=false]\": { top: \"-1px\" },\n            }}\n          >\n            <InputLabel htmlFor=\"claims_id\">Claim ID.</InputLabel>\n            <OutlinedInput\n              sx={{\n                height: \"27px\",\n                fontSize: \"14px\",\n              }}\n              fullWidth\n              label=\"Claim ID.\"\n              name=\"claims_id\"\n              value={claimState.claims_id}\n              onChange={handleInputChange}\n              onKeyDown={(e) => {\n                if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n                  e.preventDefault();\n                  return refetchClaimsId();\n                }\n              }}\n              readOnly={true}\n              id=\"claims_id\"\n              endAdornment={\n                <InputAdornment position=\"end\">\n                  <IconButton\n                    color=\"secondary\"\n                    edge=\"end\"\n                    onClick={() => {\n                      refetchClaimsId();\n                    }}\n                  >\n                    <RestartAltIcon />\n                  </IconButton>\n                </InputAdornment>\n              }\n            />\n          </FormControl>\n        )}\n        <div>\n          <Button\n            disabled={claimState.mode !== \"update\"}\n            id=\"basic-button\"\n            aria-controls={open ? \"basic-menu\" : undefined}\n            aria-haspopup=\"true\"\n            aria-expanded={open ? \"true\" : undefined}\n            onClick={handleClick}\n            sx={{\n              height: \"30px\",\n              fontSize: \"11px\",\n              color: \"white\",\n              backgroundColor: grey[600],\n              \"&:hover\": {\n                backgroundColor: grey[700],\n              },\n            }}\n          >\n            Print\n          </Button>\n          <Menu\n            id=\"basic-menu\"\n            anchorEl={anchorEl}\n            open={open}\n            onClose={handleClose}\n            MenuListProps={{\n              \"aria-labelledby\": \"basic-button\",\n            }}\n          >\n            <MenuItem onClick={clickClaimInformationSheet}>\n              Claim Information Sheet\n            </MenuItem>\n          </Menu>\n        </div>\n        <Button\n          id=\"basic-button\"\n          aria-haspopup=\"true\"\n          sx={{\n            height: \"30px\",\n            fontSize: \"11px\",\n          }}\n          color=\"primary\"\n          variant=\"contained\"\n          onClick={() => {\n            if (policyState.PolicyNo === \"\") {\n              Swal.fire({\n                title: \"Opppss!\",\n                text: `You need to select policy first!`,\n                icon: \"warning\",\n                showCancelButton: true,\n                confirmButtonColor: \"#3085d6\",\n                cancelButtonColor: \"#d33\",\n                confirmButtonText: `Yes, select policy!`,\n              }).then((result) => {\n                if (result.isConfirmed) {\n                  openPolicyModal(policyState.PolicyNo);\n                }\n              });\n              return;\n            }\n            setNewStateValue(policyDispatch, {\n              claim_type: 0,\n              status: 0,\n              DateReceived: null,\n              DateClaim: null,\n              AmountClaim: \"\",\n              AmountApproved: \"\",\n              NameTPPD: \"\",\n            });\n            setShowModal(true);\n          }}\n        >\n          ADD\n        </Button>\n        <LoadingButton\n          loading={isLoadingClaimSave}\n          id=\"basic-button\"\n          aria-haspopup=\"true\"\n          sx={{\n            height: \"30px\",\n            fontSize: \"11px\",\n          }}\n          variant=\"contained\"\n          color=\"success\"\n          onClick={() => {\n            Swal.fire({\n              title: \"Are you sure?\",\n              text: `You want to ${\n                claimState.mode === \"update\" ? \"save changes!\" : \"save it!\"\n              }`,\n              icon: \"warning\",\n              showCancelButton: true,\n              confirmButtonColor: \"#3085d6\",\n              cancelButtonColor: \"#d33\",\n              confirmButtonText: `Yes, ${\n                claimState.mode === \"update\" ? \"save changes!\" : \"save it!\"\n              } `,\n            }).then(async (result) => {\n              if (result.isConfirmed) {\n                if (claimState.mode === \"update\") {\n                  return codeCondfirmationAlert({\n                    isUpdate: true,\n                    cb: (userCodeConfirmation) => {\n                      mutateClaimSave({\n                        ...claimState,\n                        claimsSubmited,\n                        userCodeConfirmation,\n                      });\n                    },\n                  });\n                } else {\n                  return mutateClaimSave({ ...claimState, claimsSubmited });\n                }\n              }\n            });\n          }}\n        >\n          {claimState.mode === \"update\" ? \"SAVE CHANGES\" : \"SAVE\"}\n        </LoadingButton>\n        {claimState.mode === \"update\" && (\n          <Button\n            variant=\"contained\"\n            color=\"error\"\n            aria-haspopup=\"true\"\n            sx={{\n              height: \"30px\",\n              fontSize: \"11px\",\n            }}\n            onClick={() => {\n              Swal.fire({\n                title: \"Are you sure?\",\n                text: `You want to discard the changes!`,\n                icon: \"warning\",\n                showCancelButton: true,\n                confirmButtonColor: \"#3085d6\",\n                cancelButtonColor: \"#d33\",\n                confirmButtonText: \"Yes, discard it!\",\n              }).then(async (result) => {\n                if (result.isConfirmed) {\n                  setNewStateValue(claimDispatch, initialClaimState);\n                  setNewStateValue(policyDispatch, initialPolicyState);\n                  setClaimsSubmited([]);\n                  refetchClaimsId();\n                }\n              });\n            }}\n          >\n            Discard Changes\n          </Button>\n        )}\n        {policyState.PolicyNo !== \"\" && claimState.mode !== \"update\" && (\n          <Button\n            id=\"basic-button\"\n            aria-haspopup=\"true\"\n            sx={{\n              height: \"30px\",\n              fontSize: \"11px\",\n            }}\n            color=\"error\"\n            variant=\"contained\"\n            onClick={() => {\n              Swal.fire({\n                title: \"Are you sure?\",\n                text: `You want to cancel!`,\n                icon: \"warning\",\n                showCancelButton: true,\n                confirmButtonColor: \"#3085d6\",\n                cancelButtonColor: \"#d33\",\n                confirmButtonText: `Yes, Cancel it!`,\n              }).then(async (result) => {\n                if (result.isConfirmed) {\n                  setNewStateValue(claimDispatch, initialClaimState);\n                  setNewStateValue(policyDispatch, initialPolicyState);\n                  setClaimsSubmited([]);\n                  refetchClaimsId();\n                }\n              });\n            }}\n          >\n            CANCEL\n          </Button>\n        )}\n      </div>\n      <div style={{ display: \"flex\", marginTop: \"20px\", columnGap: \"10px\" }}>\n        <CustomDatePicker\n          textField={{\n            InputLabelProps: {\n              style: {\n                fontSize: \"14px\",\n              },\n            },\n            InputProps: {\n              style: { height: \"27px\", fontSize: \"14px\" },\n            },\n          }}\n          label=\"Date Reported\"\n          onChange={(value: any) => {\n            claimDispatch({\n              type: \"UPDATE_FIELD\",\n              field: \"dateReported\",\n              value: value,\n            });\n          }}\n          value={\n            claimState.dateReported ? new Date(claimState.dateReported) : null\n          }\n          onKeyDown={(e: any) => {\n            if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n              const timeout = setTimeout(() => {\n                datePickerRef.current?.querySelector(\"button\")?.click();\n                clearTimeout(timeout);\n              }, 150);\n            }\n          }}\n          datePickerRef={datePickerRef}\n        />\n        <CustomDatePicker\n          textField={{\n            InputLabelProps: {\n              style: {\n                fontSize: \"14px\",\n              },\n            },\n            InputProps: {\n              style: { height: \"27px\", fontSize: \"14px\" },\n            },\n          }}\n          label=\"Date Accident\"\n          onChange={(value: any) => {\n            claimDispatch({\n              type: \"UPDATE_FIELD\",\n              field: \"dateAccident\",\n              value: value,\n            });\n          }}\n          value={\n            claimState.dateAccident ? new Date(claimState.dateAccident) : null\n          }\n          onKeyDown={(e: any) => {\n            if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n              const timeout = setTimeout(() => {\n                dateAccidentRef.current?.querySelector(\"button\")?.click();\n                clearTimeout(timeout);\n              }, 150);\n            }\n          }}\n          datePickerRef={dateAccidentRef}\n        />\n        <CustomDatePicker\n          textField={{\n            InputLabelProps: {\n              style: {\n                fontSize: \"14px\",\n              },\n            },\n            InputProps: {\n              style: { height: \"27px\", fontSize: \"14px\" },\n            },\n          }}\n          label=\"Date Inspected\"\n          onChange={(value: any) => {\n            claimDispatch({\n              type: \"UPDATE_FIELD\",\n              field: \"dateInspected\",\n              value: value,\n            });\n          }}\n          value={\n            claimState.dateInspected ? new Date(claimState.dateInspected) : null\n          }\n          onKeyDown={(e: any) => {\n            if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n              const timeout = setTimeout(() => {\n                dateInspectedRef.current?.querySelector(\"button\")?.click();\n                clearTimeout(timeout);\n              }, 150);\n            }\n          }}\n          datePickerRef={dateInspectedRef}\n        />\n        <FormControl\n          sx={{\n            width: \"200px\",\n            \".MuiFormLabel-root\": {\n              fontSize: \"14px\",\n              background: \"white\",\n              zIndex: 99,\n              padding: \"0 3px\",\n            },\n            \".MuiFormLabel-root[data-shrink=false]\": { top: \"-12px\" },\n          }}\n        >\n          <InputLabel id=\"department-field\">Department</InputLabel>\n          <Select\n            labelId=\"department-field\"\n            value={claimState.department}\n            onChange={handleInputChange}\n            label=\"department\"\n            size=\"small\"\n            name=\"department\"\n            sx={{\n              height: \"27px\",\n              fontSize: \"14px\",\n            }}\n            fullWidth\n          >\n            {[\"UMIS\", \"UCSMI\"].map((itm, idx) => {\n              return (\n                <MenuItem key={idx} value={idx}>\n                  {itm}\n                </MenuItem>\n              );\n            })}\n          </Select>\n        </FormControl>\n        <TextField\n          name=\"remarks\"\n          label=\"Remarks\"\n          size=\"small\"\n          value={claimState.remarks}\n          onChange={handleInputChange}\n          InputProps={{\n            style: {\n              height: \"27px\",\n              fontSize: \"14px\",\n              color: \"whie\",\n            },\n          }}\n          sx={{\n            width: \"100%\",\n            \".MuiFormLabel-root\": { fontSize: \"14px\" },\n            \".MuiFormLabel-root[data-shrink=false]\": {\n              top: \"-5px\",\n            },\n          }}\n        />\n      </div>\n      <fieldset\n        style={{\n          display: \"flex\",\n          columnGap: \"15px\",\n          padding: \"10px\",\n          border: \"1px solid #cbd5e1\",\n          borderRadius: \"5px\",\n          position: \"relative\",\n        }}\n      >\n        <legend>Policy Details</legend>\n        <div\n          style={{\n            display: \"flex\",\n            width: \"100%\",\n            gap: \"15px\",\n            flexDirection: \"column\",\n          }}\n        >\n          <div\n            style={{\n              flex: \"1\",\n              display: \"grid\",\n              gridTemplateColumns: \"repeat(4,1fr)\",\n              gap: \"7px\",\n            }}\n          >\n            {isLoadingPolicyModal ? (\n              <LoadingButton loading={isLoadingPolicyModal} />\n            ) : (\n              <FormControl\n                sx={{\n                  width: \"100%\",\n                  \".MuiFormLabel-root\": {\n                    fontSize: \"14px\",\n                    background: \"white\",\n                    zIndex: 99,\n                    padding: \"0 3px\",\n                  },\n                  \".MuiFormLabel-root[data-shrink=false]\": {\n                    top: \"-5px\",\n                  },\n                }}\n                variant=\"outlined\"\n                size=\"small\"\n              >\n                <InputLabel htmlFor=\"policy-no\">Policy No.</InputLabel>\n                <OutlinedInput\n                  sx={{\n                    height: \"27px\",\n                    fontSize: \"14px\",\n                    legend: {\n                      background: \"red\",\n                    },\n                  }}\n                  inputRef={policySearchInputRef}\n                  name=\"PolicyNo\"\n                  value={policyState.PolicyNo}\n                  onChange={handleInputChange}\n                  id=\"policy-no\"\n                  onKeyDown={(e) => {\n                    if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n                      return openPolicyModal(policyState.PolicyNo);\n                    }\n                  }}\n                  endAdornment={\n                    <InputAdornment position=\"end\">\n                      <IconButton\n                        disabled={policyState.mode === \"\"}\n                        onClick={() => {\n                          openPolicyModal(policyState.PolicyNo);\n                        }}\n                        edge=\"end\"\n                        color=\"secondary\"\n                      >\n                        <PersonSearchIcon />\n                      </IconButton>\n                    </InputAdornment>\n                  }\n                  label=\"Policy No.\"\n                />\n              </FormControl>\n            )}\n            <TextField\n              name=\"policy\"\n              label=\"Policy\"\n              size=\"small\"\n              value={policyState.policy}\n              onChange={handleInputChange}\n              InputProps={{\n                style: {\n                  height: \"27px\",\n                  fontSize: \"14px\",\n                  color: \"whie\",\n                },\n                readOnly: true,\n              }}\n              sx={{\n                \".MuiFormLabel-root\": { fontSize: \"14px\" },\n                \".MuiFormLabel-root[data-shrink=false]\": {\n                  top: \"-5px\",\n                },\n              }}\n            />\n            <TextField\n              name=\"AssuredName\"\n              label=\"Assured Name\"\n              size=\"small\"\n              value={policyState.AssuredName}\n              onChange={handleInputChange}\n              InputProps={{\n                style: {\n                  height: \"27px\",\n                  fontSize: \"14px\",\n                  color: \"whie\",\n                },\n                readOnly: true,\n              }}\n              sx={{\n                gridColumn: \"3/ span 2\",\n                width: \"100%\",\n                \".MuiFormLabel-root\": { fontSize: \"14px\" },\n                \".MuiFormLabel-root[data-shrink=false]\": {\n                  top: \"-5px\",\n                },\n              }}\n            />\n            <TextField\n              name=\"Account\"\n              label=\"Account Insurance\"\n              size=\"small\"\n              value={policyState.Account}\n              onChange={handleInputChange}\n              InputProps={{\n                style: { height: \"27px\", fontSize: \"14px\" },\n                readOnly: true,\n              }}\n              sx={{\n                width: \"100%\",\n                \".MuiFormLabel-root\": { fontSize: \"14px\" },\n                \".MuiFormLabel-root[data-shrink=false]\": {\n                  top: \"-5px\",\n                },\n              }}\n            />\n            <TextField\n              name=\"Model\"\n              label=\"Model\"\n              size=\"small\"\n              value={policyState.Model}\n              onChange={handleInputChange}\n              InputProps={{\n                style: { height: \"27px\", fontSize: \"14px\" },\n                readOnly: true,\n              }}\n              sx={{\n                width: \"100%\",\n                \".MuiFormLabel-root\": { fontSize: \"14px\" },\n                \".MuiFormLabel-root[data-shrink=false]\": {\n                  top: \"-5px\",\n                },\n              }}\n            />\n            <TextField\n              name=\"PlateNo\"\n              label=\"Plate No\"\n              size=\"small\"\n              value={policyState.PlateNo}\n              onChange={handleInputChange}\n              InputProps={{\n                style: { height: \"27px\", fontSize: \"14px\" },\n                readOnly: true,\n              }}\n              sx={{\n                width: \"100%\",\n                \".MuiFormLabel-root\": { fontSize: \"14px\" },\n                \".MuiFormLabel-root[data-shrink=false]\": {\n                  top: \"-5px\",\n                },\n              }}\n            />\n            <TextField\n              name=\"ChassisNo\"\n              label=\"Chassis No\"\n              size=\"small\"\n              value={policyState.ChassisNo}\n              onChange={handleInputChange}\n              InputProps={{\n                style: { height: \"27px\", fontSize: \"14px\" },\n                readOnly: true,\n              }}\n              sx={{\n                width: \"100%\",\n                \".MuiFormLabel-root\": { fontSize: \"14px\" },\n                \".MuiFormLabel-root[data-shrink=false]\": {\n                  top: \"-5px\",\n                },\n              }}\n            />\n            <TextField\n              name=\"MotorNo.\"\n              label=\"Motor No\"\n              size=\"small\"\n              value={policyState.MotorNo}\n              onChange={handleInputChange}\n              InputProps={{\n                style: { height: \"27px\", fontSize: \"14px\" },\n                readOnly: true,\n              }}\n              sx={{\n                width: \"100%\",\n                \".MuiFormLabel-root\": { fontSize: \"14px\" },\n                \".MuiFormLabel-root[data-shrink=false]\": {\n                  top: \"-5px\",\n                },\n              }}\n            />\n            <TextField\n              name=\"CoverNo\"\n              label=\"Cover No\"\n              size=\"small\"\n              value={policyState.CoverNo}\n              onChange={handleInputChange}\n              InputProps={{\n                style: { height: \"27px\", fontSize: \"14px\" },\n                readOnly: true,\n              }}\n              sx={{\n                width: \"100%\",\n                \".MuiFormLabel-root\": { fontSize: \"14px\" },\n                \".MuiFormLabel-root[data-shrink=false]\": {\n                  top: \"-5px\",\n                },\n              }}\n            />\n            <TextField\n              name=\"BLTFileNo\"\n              label=\"BLTFileNo\"\n              size=\"small\"\n              value={policyState.BLTFileNo}\n              onChange={handleInputChange}\n              InputProps={{\n                style: { height: \"27px\", fontSize: \"14px\" },\n                readOnly: true,\n              }}\n              sx={{\n                width: \"100%\",\n                \".MuiFormLabel-root\": { fontSize: \"14px\" },\n                \".MuiFormLabel-root[data-shrink=false]\": {\n                  top: \"-5px\",\n                },\n              }}\n            />\n            <TextField\n              name=\"BodyType\"\n              label=\"Body Type\"\n              size=\"small\"\n              value={policyState.BodyType}\n              onChange={handleInputChange}\n              InputProps={{\n                style: { height: \"27px\", fontSize: \"14px\" },\n                readOnly: true,\n              }}\n              sx={{\n                width: \"100%\",\n                \".MuiFormLabel-root\": { fontSize: \"14px\" },\n                \".MuiFormLabel-root[data-shrink=false]\": {\n                  top: \"-5px\",\n                },\n              }}\n            />\n            <TextField\n              name=\"Make\"\n              label=\"Make\"\n              size=\"small\"\n              value={policyState.Make}\n              onChange={handleInputChange}\n              InputProps={{\n                style: { height: \"27px\", fontSize: \"14px\" },\n                readOnly: true,\n              }}\n              sx={{\n                width: \"100%\",\n                \".MuiFormLabel-root\": { fontSize: \"14px\" },\n                \".MuiFormLabel-root[data-shrink=false]\": {\n                  top: \"-5px\",\n                },\n              }}\n            />\n            <TextField\n              name=\"ORNo\"\n              label=\"OR No.\"\n              size=\"small\"\n              value={policyState.ORNo}\n              onChange={handleInputChange}\n              InputProps={{\n                style: { height: \"27px\", fontSize: \"14px\" },\n                readOnly: true,\n              }}\n              sx={{\n                width: \"100%\",\n                \".MuiFormLabel-root\": { fontSize: \"14px\" },\n                \".MuiFormLabel-root[data-shrink=false]\": {\n                  top: \"-5px\",\n                },\n              }}\n            />\n          </div>\n          <div\n            style={{\n              display: \"grid\",\n              gap: \"15px\",\n              flex: \"1\",\n              gridTemplateColumns: \"repeat(4,1fr)\",\n            }}\n          >\n            <fieldset\n              style={{\n                display: \"flex\",\n                gap: \"15px\",\n                border: \"1px solid #cbd5e1\",\n                borderRadius: \"5px\",\n                gridTemplateColumns: \"repeat(4,1fr)\",\n                gridColumn: \"1 / span 3\",\n              }}\n            >\n              <legend>Client Payment</legend>\n              <TextField\n                name=\"totaDue\"\n                label=\"Total Due\"\n                size=\"small\"\n                value={policyState.totaDue}\n                onChange={handleInputChange}\n                InputProps={{\n                  style: { height: \"27px\", fontSize: \"14px\" },\n                  readOnly: true,\n                }}\n                sx={{\n                  width: \"100%\",\n                  \".MuiFormLabel-root\": { fontSize: \"14px\" },\n                  \".MuiFormLabel-root[data-shrink=false]\": {\n                    top: \"-5px\",\n                  },\n                }}\n              />\n              <TextField\n                name=\"totalpaid\"\n                label=\"Total Paid\"\n                size=\"small\"\n                value={policyState.totalpaid}\n                onChange={handleInputChange}\n                InputProps={{\n                  style: { height: \"27px\", fontSize: \"14px\" },\n                  readOnly: true,\n                }}\n                sx={{\n                  width: \"100%\",\n                  \".MuiFormLabel-root\": { fontSize: \"14px\" },\n                  \".MuiFormLabel-root[data-shrink=false]\": {\n                    top: \"-5px\",\n                  },\n                }}\n              />\n              <TextField\n                name=\"balance\"\n                label=\"Balance\"\n                size=\"small\"\n                value={policyState.balance}\n                onChange={handleInputChange}\n                InputProps={{\n                  style: { height: \"27px\", fontSize: \"14px\" },\n                  readOnly: true,\n                }}\n                sx={{\n                  width: \"100%\",\n                  \".MuiFormLabel-root\": { fontSize: \"14px\" },\n                  \".MuiFormLabel-root[data-shrink=false]\": {\n                    top: \"-5px\",\n                  },\n                }}\n              />\n            </fieldset>\n            <fieldset\n              style={{\n                display: \"flex\",\n                border: \"1px solid #cbd5e1\",\n                borderRadius: \"5px\",\n              }}\n            >\n              <legend>Insurance Payment</legend>\n              <TextField\n                name=\"remitted\"\n                label=\"Remitted\"\n                size=\"small\"\n                value={policyState.remitted}\n                onChange={handleInputChange}\n                InputProps={{\n                  style: { height: \"27px\", fontSize: \"14px\" },\n                  readOnly: true,\n                }}\n                sx={{\n                  width: \"100%\",\n                  \".MuiFormLabel-root\": { fontSize: \"14px\" },\n                  \".MuiFormLabel-root[data-shrink=false]\": {\n                    top: \"-5px\",\n                  },\n                }}\n              />\n            </fieldset>\n          </div>\n        </div>\n      </fieldset>\n      <div\n        style={{\n          marginTop: \"20px\",\n          border: \"1px solid #94a3b8\",\n          minHeight: \"600px\",\n        }}\n      >\n        <h1 style={{ textAlign: \"center\" }}>LIST OF CLAIMS</h1>\n        <div style={{ padding: \"20px\", display: \"flex\", flexWrap: \"wrap\" }}>\n          <table\n            style={{\n              borderCollapse: \"collapse\",\n              width: \"100%\",\n              fontSize: \"13px\",\n            }}\n            className=\"claim-list\"\n          >\n            <thead>\n              <tr style={{ borderBottom: \"1px solid black\" }}>\n                <th>ACTION</th>\n                <th>CLAIM TYPE</th>\n                <th>STATUS</th>\n                <th>DATE RECEIVED</th>\n                <th>DATE CLAIM</th>\n                <th>AMOUNT CLAIM</th>\n                <th>AMOUNT APPROVED</th>\n              </tr>\n            </thead>\n            <tbody>\n              {claimsSubmited.length > 0 &&\n                sortList(claimsSubmited)?.map((itm: any, idx: number) => {\n                  const statusArray = claimsStatus.sort();\n                  return (\n                    <tr key={idx}>\n                      <td className=\"left\">\n                        <Stack\n                          direction=\"row\"\n                          alignItems=\"center\"\n                          spacing={1}\n                          justifyContent={\"center\"}\n                        >\n                          <IconButton\n                            size=\"small\"\n                            color=\"secondary\"\n                            onClick={() => handleTdClick(itm)}\n                          >\n                            <VisibilityIcon fontSize=\"inherit\" />\n                          </IconButton>\n                          <IconButton\n                            size=\"small\"\n                            color=\"info\"\n                            onClick={() => {\n                              const title = document.createElement(\"h1\");\n                              const div = document.createElement(\"div\");\n                              const content = document.createElement(\"div\");\n                              title.textContent = \"Claim Summary\";\n                              const contentchild =\n                                document.createElement(\"div\");\n                              const buttonClose =\n                                document.createElement(\"button\");\n                              const body = document.body;\n\n                              const basic = itm.basicFileCustom.map(\n                                (d: any) => d.datakey\n                              );\n\n                              const uniqueBasicArray = basic.filter(\n                                (item: any, index: number) =>\n                                  basic.indexOf(item) === index\n                              );\n\n                              const other = itm.otherFileCustom.map(\n                                (d: any) => d.datakey\n                              );\n                              const uniqueOtherArray = other.filter(\n                                (item: any, index: number) =>\n                                  other.indexOf(item) === index\n                              );\n\n                              const insuranceFile = itm.insuranceFileCustom.map(\n                                (d: any) => d.datakey\n                              );\n\n                              const uniqueInsuranceArray = insuranceFile.filter(\n                                (item: any, index: number) =>\n                                  insuranceFile.indexOf(item) === index\n                              );\n\n                              const tableString = (\n                                <table style={{ fontSize: \"12px\" }}>\n                                  <tbody>\n                                    <tr>\n                                      <td className=\"datakey\">Claim Type</td>\n                                      <td>\n                                        {claimType[itm.policyState.claim_type]}\n                                      </td>\n                                    </tr>\n                                    <tr>\n                                      <td className=\"datakey\">Status</td>\n                                      <td>\n                                        {statusArray[itm.policyState.status]}\n                                      </td>\n                                    </tr>\n                                    <tr>\n                                      <td className=\"datakey\">Date Received</td>\n                                      <td>\n                                        {itm.policyState.DateReceived\n                                          ? format(\n                                              new Date(\n                                                itm.policyState.DateReceived\n                                              ),\n                                              \"yyyy/MM/dd\"\n                                            )\n                                          : \"Not Set\"}\n                                      </td>\n                                    </tr>\n                                    <tr>\n                                      <td className=\"datakey\">Date Claim</td>\n                                      <td>\n                                        {itm.policyState.DateClaim\n                                          ? format(\n                                              new Date(\n                                                itm.policyState.DateClaim\n                                              ),\n                                              \"yyyy/MM/dd\"\n                                            )\n                                          : \"Not Set\"}\n                                      </td>\n                                    </tr>\n                                    <tr>\n                                      <td className=\"datakey\">Amount Claim</td>\n                                      <td>\n                                        {itm.policyState.AmountClaim ?? \"\"}\n                                      </td>\n                                    </tr>\n                                    <tr>\n                                      <td className=\"datakey\">\n                                        Amount Approved\n                                      </td>\n                                      <td>\n                                        {itm.policyState.AmountApproved ?? \"\"}\n                                      </td>\n                                    </tr>\n                                    {itm.policyState.claim_type > 1 && (\n                                      <tr>\n                                        <td className=\"datakey\">\n                                          Name of Third Party\n                                        </td>\n                                        <td>{itm.policyState.NameTPPD}</td>\n                                      </tr>\n                                    )}\n                                    <tr\n                                      style={{\n                                        borderTop: \"1px solid black\",\n                                        borderBottom: \"1px solid black\",\n                                      }}\n                                    >\n                                      <td\n                                        colSpan={2}\n                                        style={{\n                                          fontWeight: \"bolder\",\n                                          padding: \"5px\",\n                                          color: \"#d97706\",\n                                        }}\n                                      >\n                                        Basic Document\n                                      </td>\n                                    </tr>\n                                    {basicDocuments.map((itm, idx) => {\n                                      return (\n                                        <tr key={idx}>\n                                          <td className=\"datakey\">\n                                            {itm.label}\n                                          </td>\n                                          <td>\n                                            {uniqueBasicArray.includes(\n                                              itm.name\n                                            ) ? (\n                                              <span style={{ color: \"green\" }}>\n                                                <svg\n                                                  xmlns=\"http://www.w3.org/2000/svg\"\n                                                  width=\"20px\"\n                                                  height=\"20px\"\n                                                  viewBox=\"0 0 24 24\"\n                                                  fill=\"none\"\n                                                >\n                                                  <path\n                                                    d=\"M4 14L9 19L20 8M6 8.88889L9.07692 12L16 5\"\n                                                    stroke=\"green\"\n                                                    strokeWidth=\"2\"\n                                                    strokeLinecap=\"round\"\n                                                    strokeLinejoin=\"round\"\n                                                  />\n                                                </svg>\n                                              </span>\n                                            ) : (\n                                              <span style={{ color: \"grey\" }}>\n                                                <svg\n                                                  xmlns=\"http://www.w3.org/2000/svg\"\n                                                  width=\"15px\"\n                                                  height=\"15px\"\n                                                  viewBox=\"0 0 24 24\"\n                                                  fill=\"none\"\n                                                >\n                                                  <path\n                                                    d=\"M20.7457 3.32851C20.3552 2.93798 19.722 2.93798 19.3315 3.32851L12.0371 10.6229L4.74275 3.32851C4.35223 2.93798 3.71906 2.93798 3.32854 3.32851C2.93801 3.71903 2.93801 4.3522 3.32854 4.74272L10.6229 12.0371L3.32856 19.3314C2.93803 19.722 2.93803 20.3551 3.32856 20.7457C3.71908 21.1362 4.35225 21.1362 4.74277 20.7457L12.0371 13.4513L19.3315 20.7457C19.722 21.1362 20.3552 21.1362 20.7457 20.7457C21.1362 20.3551 21.1362 19.722 20.7457 19.3315L13.4513 12.0371L20.7457 4.74272C21.1362 4.3522 21.1362 3.71903 20.7457 3.32851Z\"\n                                                    fill=\"grey\"\n                                                  />\n                                                </svg>\n                                              </span>\n                                            )}\n                                          </td>\n                                        </tr>\n                                      );\n                                    })}\n                                    <tr\n                                      style={{\n                                        borderTop: \"1px solid black\",\n                                        borderBottom: \"1px solid black\",\n                                      }}\n                                    >\n                                      <td\n                                        colSpan={2}\n                                        style={{\n                                          fontWeight: \"bolder\",\n                                          padding: \"5px\",\n                                          color: \"#d97706\",\n                                        }}\n                                      >\n                                        Other Document\n                                      </td>\n                                    </tr>\n                                    {renderFields()[\n                                      itm.policyState.claim_type\n                                    ].map((itm, idx) => {\n                                      return (\n                                        <tr key={idx}>\n                                          <td className=\"datakey\">\n                                            {itm.label}\n                                          </td>\n                                          <td>\n                                            {uniqueOtherArray.includes(\n                                              itm.name\n                                            ) ? (\n                                              <span style={{ color: \"green\" }}>\n                                                <svg\n                                                  xmlns=\"http://www.w3.org/2000/svg\"\n                                                  width=\"20px\"\n                                                  height=\"20px\"\n                                                  viewBox=\"0 0 24 24\"\n                                                  fill=\"none\"\n                                                >\n                                                  <path\n                                                    d=\"M4 14L9 19L20 8M6 8.88889L9.07692 12L16 5\"\n                                                    stroke=\"green\"\n                                                    strokeWidth=\"2\"\n                                                    strokeLinecap=\"round\"\n                                                    strokeLinejoin=\"round\"\n                                                  />\n                                                </svg>\n                                              </span>\n                                            ) : (\n                                              <span style={{ color: \"grey\" }}>\n                                                <svg\n                                                  xmlns=\"http://www.w3.org/2000/svg\"\n                                                  width=\"15px\"\n                                                  height=\"15px\"\n                                                  viewBox=\"0 0 24 24\"\n                                                  fill=\"none\"\n                                                >\n                                                  <path\n                                                    d=\"M20.7457 3.32851C20.3552 2.93798 19.722 2.93798 19.3315 3.32851L12.0371 10.6229L4.74275 3.32851C4.35223 2.93798 3.71906 2.93798 3.32854 3.32851C2.93801 3.71903 2.93801 4.3522 3.32854 4.74272L10.6229 12.0371L3.32856 19.3314C2.93803 19.722 2.93803 20.3551 3.32856 20.7457C3.71908 21.1362 4.35225 21.1362 4.74277 20.7457L12.0371 13.4513L19.3315 20.7457C19.722 21.1362 20.3552 21.1362 20.7457 20.7457C21.1362 20.3551 21.1362 19.722 20.7457 19.3315L13.4513 12.0371L20.7457 4.74272C21.1362 4.3522 21.1362 3.71903 20.7457 3.32851Z\"\n                                                    fill=\"grey\"\n                                                  />\n                                                </svg>\n                                              </span>\n                                            )}\n                                          </td>\n                                        </tr>\n                                      );\n                                    })}\n                                    <tr\n                                      style={{\n                                        borderTop: \"1px solid black\",\n                                        borderBottom: \"1px solid black\",\n                                      }}\n                                    >\n                                      <td\n                                        colSpan={2}\n                                        style={{\n                                          fontWeight: \"bolder\",\n                                          padding: \"5px\",\n                                          color: \"#d97706\",\n                                        }}\n                                      >\n                                        Insurance Documents\n                                      </td>\n                                    </tr>\n                                    {insuranceDocuments.map((itm, idx) => {\n                                      return (\n                                        <tr key={idx}>\n                                          <td className=\"datakey\">\n                                            {itm.label}\n                                          </td>\n                                          <td>\n                                            {uniqueInsuranceArray.includes(\n                                              itm.name\n                                            ) ? (\n                                              <span style={{ color: \"green\" }}>\n                                                <svg\n                                                  xmlns=\"http://www.w3.org/2000/svg\"\n                                                  width=\"20px\"\n                                                  height=\"20px\"\n                                                  viewBox=\"0 0 24 24\"\n                                                  fill=\"none\"\n                                                >\n                                                  <path\n                                                    d=\"M4 14L9 19L20 8M6 8.88889L9.07692 12L16 5\"\n                                                    stroke=\"green\"\n                                                    strokeWidth=\"2\"\n                                                    strokeLinecap=\"round\"\n                                                    strokeLinejoin=\"round\"\n                                                  />\n                                                </svg>\n                                              </span>\n                                            ) : (\n                                              <span style={{ color: \"grey\" }}>\n                                                <svg\n                                                  xmlns=\"http://www.w3.org/2000/svg\"\n                                                  width=\"15px\"\n                                                  height=\"15px\"\n                                                  viewBox=\"0 0 24 24\"\n                                                  fill=\"none\"\n                                                >\n                                                  <path\n                                                    d=\"M20.7457 3.32851C20.3552 2.93798 19.722 2.93798 19.3315 3.32851L12.0371 10.6229L4.74275 3.32851C4.35223 2.93798 3.71906 2.93798 3.32854 3.32851C2.93801 3.71903 2.93801 4.3522 3.32854 4.74272L10.6229 12.0371L3.32856 19.3314C2.93803 19.722 2.93803 20.3551 3.32856 20.7457C3.71908 21.1362 4.35225 21.1362 4.74277 20.7457L12.0371 13.4513L19.3315 20.7457C19.722 21.1362 20.3552 21.1362 20.7457 20.7457C21.1362 20.3551 21.1362 19.722 20.7457 19.3315L13.4513 12.0371L20.7457 4.74272C21.1362 4.3522 21.1362 3.71903 20.7457 3.32851Z\"\n                                                    fill=\"grey\"\n                                                  />\n                                                </svg>\n                                              </span>\n                                            )}\n                                          </td>\n                                        </tr>\n                                      );\n                                    })}\n                                  </tbody>\n                                </table>\n                              );\n                              const elementString =\n                                ReactDOMServer.renderToString(tableString);\n                              contentchild.innerHTML = elementString;\n\n                              div.appendChild(content);\n                              content.appendChild(buttonClose);\n                              content.appendChild(title);\n                              content.appendChild(contentchild);\n                              div.className = \"summary-modal \";\n                              content.className = \"content \";\n                              div.id = \"summary-modal\";\n\n                              buttonClose?.addEventListener(\"click\", () => {\n                                body.removeChild(div);\n                              });\n                              content?.addEventListener(\"click\", (e) => {\n                                e.stopPropagation();\n                              });\n\n                              div?.addEventListener(\"click\", () => {\n                                body.removeChild(div);\n                              });\n                              buttonClose.innerHTML = `\n                              <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewBox=\"0 0 24 24\" fill=\"none\">\n                              <path d=\"M20.7457 3.32851C20.3552 2.93798 19.722 2.93798 19.3315 3.32851L12.0371 10.6229L4.74275 3.32851C4.35223 2.93798 3.71906 2.93798 3.32854 3.32851C2.93801 3.71903 2.93801 4.3522 3.32854 4.74272L10.6229 12.0371L3.32856 19.3314C2.93803 19.722 2.93803 20.3551 3.32856 20.7457C3.71908 21.1362 4.35225 21.1362 4.74277 20.7457L12.0371 13.4513L19.3315 20.7457C19.722 21.1362 20.3552 21.1362 20.7457 20.7457C21.1362 20.3551 21.1362 19.722 20.7457 19.3315L13.4513 12.0371L20.7457 4.74272C21.1362 4.3522 21.1362 3.71903 20.7457 3.32851Z\" fill=\"#0F0F0F\"/>\n                              </svg>\n                              `;\n\n                              body.appendChild(div);\n                            }}\n                          >\n                            <ArticleIcon fontSize=\"inherit\" />\n                          </IconButton>\n                          <IconButton\n                            size=\"small\"\n                            color=\"error\"\n                            onClick={() => {\n                              Swal.fire({\n                                title: \"Are you sure?\",\n                                text: `You want to delete it!, won't be able to revert this!`,\n                                icon: \"warning\",\n                                showCancelButton: true,\n                                confirmButtonColor: \"#3085d6\",\n                                cancelButtonColor: \"#d33\",\n                                confirmButtonText: \"Yes, Delete it!\",\n                              }).then(async (result) => {\n                                if (result.isConfirmed) {\n                                  setClaimsSubmited((d) => {\n                                    d = d.filter((d: any) => d.id !== itm.id);\n                                    return d;\n                                  });\n                                }\n                              });\n                            }}\n                          >\n                            <DeleteIcon fontSize=\"inherit\" />\n                          </IconButton>\n                        </Stack>\n                      </td>\n                      <td onDoubleClick={() => handleTdClick(itm)}>\n                        {claimType[itm.policyState.claim_type]}\n                      </td>\n                      <td onDoubleClick={() => handleTdClick(itm)}>\n                        {statusArray[itm.policyState.status] === \"\"\n                          ? \"Status not set\"\n                          : statusArray[itm.policyState.status]}\n                      </td>\n                      <td\n                        onDoubleClick={() => handleTdClick(itm)}\n                        className=\"center\"\n                      >\n                        {itm.policyState.DateReceived\n                          ? format(\n                              new Date(itm.policyState.DateReceived),\n                              \"yyyy-MM-dd\"\n                            )\n                          : \"Date Received not set\"}\n                      </td>\n                      <td\n                        onDoubleClick={() => handleTdClick(itm)}\n                        className=\"center\"\n                      >\n                        {itm.policyState.DateClaim\n                          ? format(\n                              new Date(itm.policyState.DateClaim),\n                              \"yyyy-MM-dd\"\n                            )\n                          : \"Date Claim not set\"}\n                      </td>\n\n                      <td\n                        onDoubleClick={() => handleTdClick(itm)}\n                        className=\"center\"\n                      >\n                        {itm.policyState.AmountClaim === \"\"\n                          ? \"0.00\"\n                          : itm.policyState.AmountClaim}\n                      </td>\n                      <td\n                        onDoubleClick={() => handleTdClick(itm)}\n                        className=\"center\"\n                      >\n                        {itm.policyState.AmountApproved === \"\"\n                          ? \"0.00\"\n                          : itm.policyState.AmountApproved}\n                      </td>\n                    </tr>\n                  );\n                })}\n            </tbody>\n          </table>\n        </div>\n      </div>\n      {SearchClaimModal}\n      {showModal && (\n        <div\n          style={{\n            position: \"absolute\",\n            top: 0,\n            bottom: 0,\n            left: 0,\n            right: 0,\n            background: \"rgba(158, 155, 157, 0.31)\",\n            zIndex: \"999\",\n            display: \"flex\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n          }}\n        >\n          <div\n            style={{\n              width: \"90%\",\n              height: \"90%\",\n              overflow: \"auto\",\n              background: \"white\",\n              padding: \"20px\",\n              margin: \"auto\",\n              zIndex: \"9929\",\n              boxShadow: \" -1px 1px 13px 6px rgba(0,0,0,0.54)\",\n            }}\n          >\n            <ClaimModal\n              handleCloseModal={() => {\n                setShowModal(false);\n              }}\n              setClaimsSubmited={setClaimsSubmited}\n              claim_no={claimState.claim_no}\n              policyState={policyState}\n              policyDispatch={policyDispatch}\n              claimDispatch={claimDispatch}\n            />\n          </div>\n        </div>\n      )}\n      {isLoadingSelectedSearch && (\n        <div\n          style={{\n            position: \"absolute\",\n            top: \"0\",\n            left: \"0\",\n            right: \"0\",\n            bottom: \"0\",\n            background: \"rgba(158, 155, 157, 0.31)\",\n            zIndex: \"999\",\n            display: \"flex\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n          }}\n        >\n          <img\n            src={`${process.env.REACT_APP_IMAGE_URL}image/loading.gif`}\n            style={{ width: \"80px\", height: \"80px\" }}\n            alt=\"we\"\n          />\n        </div>\n      )}\n      {PolicyModal}\n    </div>\n  );\n}\n\nfunction ClaimModal({\n  handleCloseModal,\n  setClaimsSubmited,\n  claim_no,\n  policyDispatch,\n  policyState,\n  claimDispatch,\n}: any) {\n  const otherFileInputRef = useRef<any>(null);\n  const DateReceivedRef = useRef<HTMLDivElement>(null);\n  const DateClaimceivedRef = useRef<HTMLDivElement>(null);\n  const AmountClaimInputRef = useRef<HTMLInputElement>(null);\n  const AmountApprovedInputRef = useRef<HTMLInputElement>(null);\n  const handleInputChange = (e: any) => {\n    const { name, value } = e.target;\n    policyDispatch({ type: \"UPDATE_FIELD\", field: name, value });\n  };\n  const handleModalSave = () => {\n    Swal.fire({\n      title: \"Are you sure?\",\n      text: `You want to save it!, won't be able to revert this!`,\n      icon: \"warning\",\n      showCancelButton: true,\n      confirmButtonColor: \"#3085d6\",\n      cancelButtonColor: \"#d33\",\n      confirmButtonText: \"Yes, Save it!\",\n    }).then(async (result) => {\n      function filetransfer(arr: Array<any>, fileBasicPromises: Array<any>) {\n        const dataFile: any = [];\n        arr.forEach((itm) => {\n          const input: any = document.querySelector(`#${itm.name} input`);\n          const files = input.files;\n          dataFile.push({\n            files,\n            datakey: itm.name,\n          });\n          if (files.length > 0) {\n            for (let i = 0; i < files.length; i++) {\n              const file = files[i];\n              const reader = new FileReader();\n              fileBasicPromises.push(\n                new Promise((resolve, reject) => {\n                  reader.onload = function (event) {\n                    resolve({\n                      datakey: itm.name,\n                      fileName: file.name,\n                      fileContent: event.target?.result,\n                      fileType: file.type,\n                      file,\n                    });\n                  };\n                  reader.onerror = function (event) {\n                    reject(new Error(\"Error reading file: \" + file.name));\n                  };\n                  reader.readAsDataURL(file);\n                })\n              );\n            }\n          }\n        });\n        return fileBasicPromises;\n      }\n      if (result.isConfirmed) {\n        const fileBasicPromises: Array<any> = [];\n        filetransfer(basicDocuments, fileBasicPromises);\n\n        let fileOtherPromises: Array<any> = [];\n        renderFields().forEach((parent) => {\n          filetransfer(parent, fileOtherPromises);\n        });\n\n        const fileInsurancePromises: Array<any> = [];\n        filetransfer(insuranceDocuments, fileInsurancePromises);\n\n        const basicFileCustom = await Promise.all(fileBasicPromises);\n        const otherFileCustom = await Promise.all(fileOtherPromises);\n        const insuranceFileCustom = await Promise.all(fileInsurancePromises);\n\n        setClaimsSubmited((d: any) => {\n          let id = \"\";\n\n          if (claim_no && claim_no.trim() !== \"\") {\n            id = claim_no;\n            d = d.filter((itm: any) => itm.id !== claim_no);\n          } else {\n            id = padNumber(d.length + 1, 3);\n          }\n\n          d.push({\n            id,\n            policyState,\n            basicFileCustom,\n            otherFileCustom,\n            insuranceFileCustom,\n          });\n          return d;\n        });\n        claimDispatch({\n          type: \"UPDATE_FIELD\",\n          field: \"claim_no\",\n          value: \"\",\n        });\n        handleInputChange({\n          target: {\n            name: \"claim_type\",\n            value: 0,\n          },\n        });\n        handleInputChange({\n          target: {\n            name: \"status\",\n            value: 0,\n          },\n        });\n        handleCloseModal();\n      }\n      function padNumber(number: number, length: number) {\n        return String(number).padStart(length, \"0\");\n      }\n    });\n  };\n\n  return (\n    <>\n      <div\n        style={{\n          width: \"100%\",\n          height: \"auto\",\n          position: \"relative\",\n        }}\n      >\n        <div\n          style={{\n            height: \"30px\",\n            marginBottom: \"20px\",\n            display: \"flex\",\n            justifyContent: \"space-between\",\n            gap: \"10px\",\n          }}\n        >\n          <div\n            style={{\n              width: \"100%\",\n              display: \"flex\",\n              gap: \"10px\",\n              justifyContent: \"flex-end\",\n              padding: \"10px 20px\",\n            }}\n          >\n            <div\n              style={{\n                display: \"flex\",\n                columnGap: \"10px\",\n              }}\n            >\n              <Button\n                id=\"basic-button\"\n                aria-haspopup=\"true\"\n                sx={{\n                  height: \"30px\",\n                  fontSize: \"11px\",\n                }}\n                variant=\"contained\"\n                color=\"success\"\n                onClick={handleModalSave}\n              >\n                SAVE\n              </Button>\n              <Button\n                id=\"basic-button\"\n                aria-haspopup=\"true\"\n                sx={{\n                  height: \"30px\",\n                  fontSize: \"11px\",\n                }}\n                variant=\"contained\"\n                color=\"error\"\n                onClick={() => {\n                  Swal.fire({\n                    title: \"Are you sure?\",\n                    text: `You want to cancel it!, won't be able to revert this!`,\n                    icon: \"warning\",\n                    showCancelButton: true,\n                    confirmButtonColor: \"#3085d6\",\n                    cancelButtonColor: \"#d33\",\n                    confirmButtonText: \"Yes, Cancel it!\",\n                  }).then(async (result) => {\n                    if (result.isConfirmed) {\n                      claimDispatch({\n                        type: \"UPDATE_FIELD\",\n                        field: \"claim_no\",\n                        value: \"\",\n                      });\n                      handleInputChange({\n                        target: {\n                          name: \"claim_type\",\n                          value: 0,\n                        },\n                      });\n                      handleInputChange({\n                        target: {\n                          name: \"status\",\n                          value: 0,\n                        },\n                      });\n                      handleCloseModal();\n                      return;\n                    }\n                  });\n                }}\n              >\n                CANCEL\n              </Button>\n            </div>\n          </div>\n        </div>\n        <div>\n          <div style={{ display: \"flex\", gap: \"10px\", flexWrap: \"wrap\" }}>\n            <FormControl\n              sx={{\n                width: \"300px\",\n                marginRight: \"10px\",\n                \".MuiFormLabel-root\": {\n                  fontSize: \"14px\",\n                  background: \"white\",\n                  zIndex: 99,\n                  padding: \"0 3px\",\n                },\n                \".MuiFormLabel-root[data-shrink=false]\": { top: \"-12px\" },\n              }}\n            >\n              <InputLabel id=\"claim-type\">Claim Types</InputLabel>\n              <Select\n                labelId=\"claim-type\"\n                value={policyState.claim_type}\n                onChange={(e) => {\n                  handleInputChange(e);\n                  otherFileInputRef.current?.resetFileUpload();\n                }}\n                label=\"Claim Types\"\n                size=\"small\"\n                name=\"claim_type\"\n                sx={{\n                  height: \"27px\",\n                  fontSize: \"14px\",\n                }}\n                fullWidth\n              >\n                {claimType.map((itm, idx) => {\n                  return (\n                    <MenuItem key={idx} value={idx}>\n                      {itm}\n                    </MenuItem>\n                  );\n                })}\n              </Select>\n            </FormControl>\n            <FormControl\n              sx={{\n                width: \"300px\",\n                marginRight: \"10px\",\n                \".MuiFormLabel-root\": {\n                  fontSize: \"14px\",\n                  background: \"white\",\n                  zIndex: 99,\n                  padding: \"0 3px\",\n                },\n                \".MuiFormLabel-root[data-shrink=false]\": { top: \"-12px\" },\n              }}\n            >\n              <InputLabel id=\"status\">Status</InputLabel>\n              <Select\n                labelId=\"status\"\n                value={policyState.status}\n                onChange={handleInputChange}\n                label=\"Status\"\n                size=\"small\"\n                name=\"status\"\n                sx={{\n                  height: \"27px\",\n                  fontSize: \"14px\",\n                }}\n                fullWidth\n              >\n                {claimsStatus.sort().map((itm, idx) => {\n                  return (\n                    <MenuItem key={idx} value={idx}>\n                      {itm}\n                    </MenuItem>\n                  );\n                })}\n              </Select>\n            </FormControl>\n            <CustomDatePicker\n              textField={{\n                InputLabelProps: {\n                  style: {\n                    fontSize: \"14px\",\n                  },\n                },\n                InputProps: {\n                  style: { height: \"27px\", fontSize: \"14px\" },\n                },\n              }}\n              label=\"Date Received\"\n              onChange={(value: any) => {\n                policyDispatch({\n                  type: \"UPDATE_FIELD\",\n                  field: \"DateReceived\",\n                  value: value,\n                });\n              }}\n              value={\n                policyState.DateReceived\n                  ? new Date(policyState.DateReceived)\n                  : null\n              }\n              onKeyDown={(e: any) => {\n                if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n                  const timeout = setTimeout(() => {\n                    DateReceivedRef.current?.querySelector(\"button\")?.click();\n                    clearTimeout(timeout);\n                  }, 150);\n                }\n              }}\n              datePickerRef={DateReceivedRef}\n            />\n            <CustomDatePicker\n              textField={{\n                InputLabelProps: {\n                  style: {\n                    fontSize: \"14px\",\n                  },\n                },\n                InputProps: {\n                  style: { height: \"27px\", fontSize: \"14px\" },\n                },\n              }}\n              label=\"Date of Claim\"\n              onChange={(value: any) => {\n                policyDispatch({\n                  type: \"UPDATE_FIELD\",\n                  field: \"DateClaim\",\n                  value: value,\n                });\n              }}\n              value={\n                policyState.DateClaim ? new Date(policyState.DateClaim) : null\n              }\n              onKeyDown={(e: any) => {\n                if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n                  const timeout = setTimeout(() => {\n                    DateClaimceivedRef.current\n                      ?.querySelector(\"button\")\n                      ?.click();\n                    clearTimeout(timeout);\n                  }, 150);\n                }\n              }}\n              datePickerRef={DateClaimceivedRef}\n            />\n            <TextField\n              label=\"Amount Claim\"\n              size=\"small\"\n              name=\"AmountClaim\"\n              value={policyState.AmountClaim}\n              onChange={handleInputChange}\n              onBlur={() => {\n                policyDispatch({\n                  type: \"UPDATE_FIELD\",\n                  field: \"AmountClaim\",\n                  value: parseFloat(\n                    (policyState.AmountClaim === \"\"\n                      ? \"0\"\n                      : policyState.AmountClaim\n                    ).replace(/,/g, \"\")\n                  ).toFixed(2),\n                });\n              }}\n              InputProps={{\n                inputComponent: NumericFormatCustom as any,\n                inputRef: AmountClaimInputRef,\n                style: { height: \"27px\", fontSize: \"14px\" },\n              }}\n              sx={{\n                width: \"160px\",\n                \".MuiFormLabel-root\": { fontSize: \"14px\" },\n                \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n              }}\n            />\n            <TextField\n              label=\"Amount Approved\"\n              size=\"small\"\n              name=\"AmountApproved\"\n              value={policyState.AmountApproved}\n              onChange={handleInputChange}\n              onBlur={() => {\n                policyDispatch({\n                  type: \"UPDATE_FIELD\",\n                  field: \"AmountApproved\",\n                  value: parseFloat(\n                    (policyState.AmountApproved === \"\"\n                      ? \"0\"\n                      : policyState.AmountApproved\n                    ).replace(/,/g, \"\")\n                  ).toFixed(2),\n                });\n              }}\n              InputProps={{\n                inputComponent: NumericFormatCustom as any,\n                inputRef: AmountApprovedInputRef,\n                style: { height: \"27px\", fontSize: \"14px\" },\n              }}\n              sx={{\n                width: \"160px\",\n                \".MuiFormLabel-root\": { fontSize: \"14px\" },\n                \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n              }}\n            />\n            {policyState.claim_type > 1 && (\n              <TextField\n                name=\"NameTPPD\"\n                label=\"Name of Third Party\"\n                size=\"small\"\n                value={policyState.NameTPPD}\n                onChange={handleInputChange}\n                InputProps={{\n                  style: {\n                    height: \"27px\",\n                    fontSize: \"14px\",\n                    color: \"whie\",\n                  },\n                }}\n                sx={{\n                  width: \"400px\",\n                  \".MuiFormLabel-root\": { fontSize: \"14px\" },\n                  \".MuiFormLabel-root[data-shrink=false]\": {\n                    top: \"-5px\",\n                  },\n                }}\n              />\n            )}\n          </div>\n          <fieldset\n            style={{\n              marginTop: \"10px\",\n              display: \"flex\",\n              columnGap: \"10px\",\n              padding: \"15px\",\n              border: \"1px solid #cbd5e1\",\n              borderRadius: \"5px\",\n            }}\n          >\n            <legend>Basic Documents</legend>\n            <BasicDocument state={policyState} />\n          </fieldset>\n          <fieldset\n            style={{\n              marginTop: \"10px\",\n              display: \"flex\",\n              columnGap: \"10px\",\n              padding: \"15px\",\n              border: \"1px solid #cbd5e1\",\n              borderRadius: \"5px\",\n            }}\n          >\n            <legend>Other Documents</legend>\n            <OtherDocument\n              state={policyState}\n              otherFileInputRef={otherFileInputRef}\n            />\n          </fieldset>\n          <fieldset\n            style={{\n              marginTop: \"10px\",\n              display: \"flex\",\n              columnGap: \"10px\",\n              padding: \"15px\",\n              border: \"1px solid #cbd5e1\",\n              borderRadius: \"5px\",\n            }}\n          >\n            <legend>Insurance Documents</legend>\n            <InsuranceDocument state={policyState} />\n          </fieldset>\n        </div>\n      </div>\n    </>\n  );\n}\nfunction BasicDocument({ state }: any) {\n  const [activeListBasicDocument, setActiveListBasicDocument] =\n    useState(\"policyFile\");\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        width: \"100%\",\n        height: \"500px\",\n        maxHeight: \"500px\",\n        flexDirection: \"column\",\n      }}\n    >\n      <div\n        style={{\n          display: \"flex\",\n          paddingRight: \"10px\",\n          minWidth: \"300px\",\n        }}\n      >\n        {basicDocuments.map((itm, idx) => {\n          return (\n            <MyButton\n              key={idx}\n              itm={itm}\n              setActiveListBasicDocument={setActiveListBasicDocument}\n              activeListBasicDocument={activeListBasicDocument}\n              disabled={state.mode === \"\"}\n            />\n          );\n        })}\n      </div>\n      {basicDocuments.map((itm, idx) => {\n        return (\n          <div\n            key={idx}\n            style={{\n              flex: 1,\n              width: \"100%\",\n              position: \"relative\",\n              display: itm.name === activeListBasicDocument ? \"block\" : \"none\",\n            }}\n            id={itm.name}\n          >\n            <FileUploadInput />\n          </div>\n        );\n      })}\n    </div>\n  );\n}\nexport default Claims;\nfunction OtherDocument({ state, otherFileInputRef }: any) {\n  const [activeListBasicDocument, setActiveListBasicDocument] =\n    useState(\"policyFile\");\n\n  useEffect(() => {\n    const data = renderFields();\n    setActiveListBasicDocument(data[state.claim_type][0].name);\n  }, [state.claim_type]);\n\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        width: \"100%\",\n        height: \"500px\",\n        maxHeight: \"500px\",\n        flexDirection: \"column\",\n      }}\n    >\n      <div\n        style={{\n          display: \"flex\",\n          paddingRight: \"10px\",\n          minWidth: \"300px\",\n        }}\n      >\n        {renderFields().map((r, Ridx) => {\n          return (\n            <div\n              key={Ridx}\n              style={{\n                display: state.claim_type === Ridx ? \"block\" : \"none\",\n              }}\n            >\n              {r.map((c, cIdx) => {\n                return (\n                  <MyButton\n                    key={cIdx}\n                    itm={c}\n                    setActiveListBasicDocument={setActiveListBasicDocument}\n                    activeListBasicDocument={activeListBasicDocument}\n                    disabled={state.mode === \"\"}\n                  />\n                );\n              })}\n            </div>\n          );\n        })}\n      </div>\n      {renderFields().map((r, Ridx) => {\n        return (\n          <React.Fragment key={Ridx}>\n            {r.map((c, cIdx) => {\n              return (\n                <div\n                  key={cIdx}\n                  style={{\n                    flex: 1,\n                    width: \"100%\",\n                    position: \"relative\",\n                    display:\n                      c.name === activeListBasicDocument ? \"block\" : \"none\",\n                  }}\n                  id={c.name}\n                >\n                  <FileUploadInput ref={otherFileInputRef} />\n                </div>\n              );\n            })}\n          </React.Fragment>\n        );\n      })}\n    </div>\n  );\n}\nfunction InsuranceDocument({ state }: any) {\n  const [activeListBasicDocument, setActiveListBasicDocument] = useState(\"loa\");\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        width: \"100%\",\n        height: \"500px\",\n        maxHeight: \"500px\",\n        flexDirection: \"column\",\n      }}\n    >\n      <div\n        style={{\n          display: \"flex\",\n          paddingRight: \"10px\",\n          minWidth: \"300px\",\n        }}\n      >\n        {insuranceDocuments.map((itm, idx) => {\n          return (\n            <MyButton\n              key={idx}\n              itm={itm}\n              setActiveListBasicDocument={setActiveListBasicDocument}\n              activeListBasicDocument={activeListBasicDocument}\n              disabled={state.mode === \"\"}\n            />\n          );\n        })}\n      </div>\n      {insuranceDocuments.map((itm, idx) => {\n        return (\n          <div\n            key={idx}\n            style={{\n              flex: 1,\n              width: \"100%\",\n              position: \"relative\",\n              display: itm.name === activeListBasicDocument ? \"block\" : \"none\",\n            }}\n            id={itm.name}\n          >\n            <FileUploadInput />\n          </div>\n        );\n      })}\n    </div>\n  );\n}\nfunction MyButton({\n  setActiveListBasicDocument,\n  activeListBasicDocument,\n  itm,\n  disabled,\n}: any) {\n  const [isHovered, setIsHovered] = useState(false);\n  const handleMouseEnter = () => {\n    setIsHovered(true);\n  };\n\n  const handleMouseLeave = () => {\n    setIsHovered(false);\n  };\n\n  return (\n    <button\n      onClick={() => {\n        setActiveListBasicDocument(itm.name);\n      }}\n      onMouseEnter={handleMouseEnter}\n      onMouseLeave={handleMouseLeave}\n      style={{\n        padding: \"10px\",\n        fontSize: \"13px\",\n        cursor: \"pointer\",\n        background:\n          activeListBasicDocument === itm.name\n            ? \"black\"\n            : isHovered\n            ? \"#f1f5f9\"\n            : \"transparent\",\n        color: activeListBasicDocument === itm.name ? \"white\" : \"black\",\n        border: \"none\",\n        textAlign: \"left\",\n      }}\n    >\n      {itm.label}\n    </button>\n  );\n}\nexport function setNewStateValue(dispatch: any, obj: any) {\n  Object.entries(obj).forEach(([field, value]) => {\n    dispatch({ type: \"UPDATE_FIELD\", field, value });\n  });\n}\nexport const FileUploadInput = forwardRef((props, ref) => {\n  const [selectedFiles, setSelectedFiles] = useState<Array<File>>([]);\n  const id = useId();\n  const fileInput = useRef<HTMLInputElement>(null);\n  const [isDragging, setIsDragging] = useState(false);\n  const handleDragLeave = (e: React.DragEvent<HTMLDivElement>) => {\n    e.preventDefault();\n    setIsDragging(false);\n  };\n  const handleDragEnter = (e: React.DragEvent<HTMLDivElement>) => {\n    e.preventDefault();\n    setIsDragging(true);\n  };\n  const handleDrop = (e: React.DragEvent<HTMLDivElement>) => {\n    e.preventDefault();\n    const fileList = e.dataTransfer.files;\n    const files = Array.from(fileList);\n    const newFiles = [...selectedFiles, ...files];\n    setIsDragging(false);\n    if (checkFile(newFiles)) {\n      fileInput.current?.click();\n      return alert(\"file is not valid Extention!\");\n    } else {\n      setSelectedFiles(newFiles);\n    }\n  };\n  const handleFileChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const fileList = e.target.files as FileList;\n\n    const files = Array.from(fileList);\n    const newFiles = [...selectedFiles, ...files];\n    if (checkFile(newFiles)) {\n      return alert(\"file is not valid Extention!\");\n    }\n    setSelectedFiles(newFiles);\n  };\n\n  useEffect(() => {\n    if (selectedFiles.length <= 0) return;\n    function arrayToFileList(filesArray: Array<File>) {\n      const dataTransfer = new DataTransfer();\n      filesArray.forEach((file) => {\n        dataTransfer.items.add(file);\n      });\n      return dataTransfer.files;\n    }\n    const fileList = arrayToFileList(selectedFiles);\n    if (fileInput.current) {\n      fileInput.current.files = fileList;\n    }\n  }, [selectedFiles]);\n\n  useImperativeHandle(ref, () => ({\n    resetFileUpload: () => {\n      setSelectedFiles([]);\n    },\n  }));\n\n  return (\n    <>\n      <button\n        onClick={() => {\n          setSelectedFiles([]);\n          const form = document.getElementById(id)\n            ?.parentElement as HTMLFormElement;\n          form.reset();\n        }}\n        id=\"reset-buton\"\n        style={{\n          display: \"none\",\n        }}\n      >\n        resetALl\n      </button>\n      <div>\n        <div\n          style={{\n            display: \"flex\",\n            flexWrap: \"wrap\",\n            gap: \"5px\",\n            height: \"400px\",\n            width: \"100%\",\n            background: \"#f8fafc\",\n            overflow: \"auto\",\n            border: isDragging ? \"1px solid #c026d3\" : \"1px solid #cbd5e1\",\n            boxSizing: \"border-box\",\n            padding: \"10px\",\n          }}\n          onDragEnter={handleDragEnter}\n          onDragOver={(e) => e.preventDefault()}\n          onDragLeave={handleDragLeave}\n          onDrop={handleDrop}\n        >\n          <div\n            style={{\n              height: \"auto\",\n              width: \"100%\",\n              display: \"flex\",\n              flexWrap: \"wrap\",\n              ...(selectedFiles.length <= 0 && {\n                alignItems: \"center\",\n                textAlign: \"center\",\n                justifyContent: \"center\",\n              }),\n              gap: \"10px\",\n              marginBottom: \"50px\",\n            }}\n            onDragEnter={handleDragEnter}\n            onDragOver={(e) => e.preventDefault()}\n            onDragLeave={handleDragLeave}\n            onDrop={handleDrop}\n          >\n            {selectedFiles.length <= 0 ? (\n              <CloudUploadIcon\n                sx={{ fontSize: \"8em\", color: \"#d1d5db\", zIndex: \"2\" }}\n              />\n            ) : (\n              selectedFiles.map((itm, idx) => {\n                return (\n                  <DisplayFile\n                    key={idx}\n                    itm={itm}\n                    selectedFiles={selectedFiles}\n                    setSelectedFiles={setSelectedFiles}\n                    fileInput={fileInput}\n                  />\n                );\n              })\n            )}\n          </div>\n        </div>\n        <div\n          style={{\n            position: \"absolute\",\n            top: \"50%\",\n            left: \"50%\",\n            transform: \"translate(-50%,-50%)\",\n          }}\n          draggable={false}\n        ></div>\n      </div>\n      <form\n        style={{\n          position: \"absolute\",\n          bottom: \"1px\",\n          left: \"1px\",\n          right: \"1px\",\n          zIndex: \"4\",\n        }}\n      >\n        <label\n          style={{\n            display: \"block\",\n            fontSize: \"13px\",\n            fontWeight: \"500\",\n            textAlign: \"center\",\n            cursor: \"pointer\",\n            padding: \" 10px\",\n            background: \"#0d9488\",\n            color: \"white\",\n          }}\n          htmlFor={id}\n        >\n          Click to Upload File\n        </label>\n        <input\n          ref={fileInput}\n          style={{ display: \"none\" }}\n          id={id}\n          type=\"file\"\n          onChange={handleFileChange}\n          accept=\".jpg,.jpeg,.png,.pdf\"\n          multiple\n        />\n      </form>\n    </>\n  );\n});\nexport function DisplayFile({\n  itm,\n  selectedFiles,\n  setSelectedFiles,\n  fileInput,\n}: {\n  itm: File;\n  selectedFiles: Array<File>;\n  setSelectedFiles: React.Dispatch<React.SetStateAction<File[]>>;\n  fileInput: React.RefObject<HTMLInputElement>;\n}) {\n  const objectUrl = URL.createObjectURL(itm);\n  return (\n    <div\n      id=\"image-card\"\n      style={{\n        position: \"relative\",\n        width: \"200px\",\n        height: \"200px\",\n        textAlign: \"center\",\n        boxShadow: \"10px 10px 28px -7px rgba(0,0,0,0.75)\",\n        border: \"1px solid #cbd5e1\",\n      }}\n    >\n      {itm.type.startsWith(\"image/\") ? (\n        <div\n          style={{\n            width: \"100%\",\n            height: \"100%\",\n            display: \"flex\",\n            alignItems: \"center\",\n          }}\n        >\n          <img\n            src={objectUrl}\n            alt=\"img-sss\"\n            style={{ width: \"100%\", height: \"auto\" }}\n          />\n        </div>\n      ) : (\n        <iframe\n          title=\"dasdseasd\"\n          src={objectUrl}\n          style={{ width: \"100%\" }}\n        ></iframe>\n      )}\n      <div\n        style={{\n          position: \"absolute\",\n          bottom: \"0\",\n          left: \"0\",\n          right: \"0\",\n          background: \"white\",\n          padding: \"5px\",\n          display: \"flex\",\n          columnGap: \"10px\",\n          justifyContent: \"center\",\n        }}\n      >\n        <IconButton\n          color=\"primary\"\n          edge=\"end\"\n          onClick={() => {\n            window.open(objectUrl, \"_blank\");\n          }}\n        >\n          <RemoveRedEyeIcon />\n        </IconButton>\n        <IconButton\n          color=\"success\"\n          edge=\"end\"\n          onClick={() => {\n            var downloadLink: any = document.createElement(\"a\");\n            downloadLink.href = objectUrl;\n            downloadLink.download = itm.name;\n            downloadLink.click();\n          }}\n        >\n          <CloudDownloadIcon />\n        </IconButton>\n        <IconButton\n          color=\"error\"\n          edge=\"end\"\n          onClick={() => {\n            const filesToRemove = [itm.name];\n            const filteredFiles = selectedFiles.filter((file) => file !== itm);\n            setSelectedFiles(filteredFiles);\n            const newFileList = filterFileList(\n              fileInput.current?.files as FileList,\n              filesToRemove\n            );\n            if (fileInput.current && fileInput.current.files) {\n              fileInput.current.files = newFileList;\n            }\n            function filterFileList(\n              fileList: FileList,\n              filesToRemove: Array<string>\n            ) {\n              const dataTransfer = new DataTransfer();\n              for (let i = 0; i < fileList.length; i++) {\n                if (!filesToRemove.includes(fileList[i].name)) {\n                  dataTransfer.items.add(fileList[i]);\n                }\n              }\n              return dataTransfer.files;\n            }\n          }}\n        >\n          <HighlightOffIcon />\n        </IconButton>\n      </div>\n    </div>\n  );\n}\nexport function checkFile(newFiles: Array<File>) {\n  let isNotExt = false;\n  const fileTypes = [\"application/pdf\", \"image/jpg\", \"image/jpeg\", \"image/png\"];\n  const newFileTpes = newFiles.map((itm) => itm.type);\n  newFileTpes.forEach((fileType) => {\n    if (!fileTypes.includes(fileType)) {\n      isNotExt = true;\n      return;\n    }\n  });\n  return isNotExt;\n}\n","import {\n  useState,\n  useContext,\n  createContext,\n  ReactElement,\n  forwardRef,\n  useImperativeHandle,\n} from \"react\";\nimport { Box, LinearProgress } from \"@mui/material\";\nimport {\n  DataGrid,\n  GridSlotsComponentsProps,\n  gridPageCountSelector,\n  GridPagination,\n  useGridApiContext,\n  useGridSelector,\n  GridRowSelectionModel,\n  GridColDef,\n  GridRowParams,\n  GridCellParams,\n  GridTreeNode,\n} from \"@mui/x-data-grid\";\nimport { TablePaginationProps } from \"@mui/material/TablePagination\";\nimport MuiPagination from \"@mui/material/Pagination\";\n\ninterface TableProps {\n  isLoading: boolean;\n  columns: Array<any>;\n  rows: Array<any>;\n  table_id: string;\n  isSingleSelection: boolean;\n  isRowFreeze: boolean;\n  dataSelection?: (selection: any, data: any, code: string | null) => void;\n  CustomFooterComponent?: any;\n  isRowSelectable?: ((params: GridRowParams<any>) => boolean) | undefined;\n  getCellClassName?:\n    | ((params: GridCellParams<any, any, any, GridTreeNode>) => string)\n    | undefined;\n  footerChildren?: (\n    rowSelectionModel: GridRowSelectionModel,\n    rows: Array<any>\n  ) => ReactElement;\n  footerPaginationPosition?: string;\n  showFooterSelectedCount?: boolean;\n  checkboxSelection?: boolean | undefined;\n}\n\nconst TableContext = createContext<{\n  rowSelectionModel: GridRowSelectionModel;\n  rows: Array<any>;\n  footerPaginationPosition?: string;\n  showFooterSelectedCount?: boolean;\n  footerChildren: (\n    rowSelectionModel: GridRowSelectionModel,\n    rows: Array<any>\n  ) => ReactElement;\n}>({\n  rows: [],\n  rowSelectionModel: [],\n  footerChildren: () => <div></div>,\n  footerPaginationPosition: \"right-left\",\n  showFooterSelectedCount: true,\n});\nconst Table = forwardRef(\n  (\n    {\n      isLoading,\n      columns,\n      rows,\n      table_id,\n      isSingleSelection,\n      isRowFreeze,\n      dataSelection,\n      CustomFooterComponent = DefaultooterComponent,\n      isRowSelectable,\n      getCellClassName,\n      checkboxSelection = true,\n      footerChildren = (\n        rowSelectionModel: GridRowSelectionModel,\n        rows: Array<any>\n      ) => <div></div>,\n      footerPaginationPosition = \"right-left\",\n      showFooterSelectedCount = true,\n    }: TableProps,\n    ref\n  ) => {\n    const [selectedRows, setSelectedRows] = useState<any>([]);\n\n    useImperativeHandle(ref, () => ({\n      removeSelection: () => {\n        setSelectedRows([]);\n      },\n      getSelectedRows: () => {\n        return rows.filter((item: any) =>\n          selectedRows?.includes(item[table_id])\n        );\n      },\n      setSelectedRows: (data: Array<any>) => {\n        setSelectedRows(data);\n      },\n    }));\n\n    function onSelectionChange(selection: any, data: any, code: string | null) {\n      if (dataSelection) {\n        dataSelection(selection, data, code);\n      }\n    }\n    let freezeArray: Array<any> = [];\n\n    return (\n      <TableContext.Provider\n        value={{\n          showFooterSelectedCount,\n          footerPaginationPosition,\n          rowSelectionModel: selectedRows,\n          rows,\n          footerChildren,\n        }}\n      >\n        <DataGrid\n          slots={{\n            loadingOverlay: LinearProgress,\n            footer: CustomFooterComponent,\n          }}\n          initialState={{\n            pagination: { paginationModel: { pageSize: 100 } },\n          }}\n          loading={isLoading}\n          getRowId={(row) => row[table_id]}\n          columns={columns.filter((col: any) => !col.hide) as GridColDef<any>[]}\n          rows={rows}\n          showCellVerticalBorder={true}\n          showColumnVerticalBorder={true}\n          checkboxSelection={checkboxSelection}\n          rowSelectionModel={selectedRows}\n          rowHeight={25}\n          columnHeaderHeight={35}\n          pageSizeOptions={[10, 20, 35, 50, 75, 100]}\n          sx={{\n            \"& .cash\": {\n              color: \"#ec4899\",\n            },\n            \"& .check\": {\n              color: \"#0891b2\",\n            },\n            \"& .approved\": {\n              color: \"green\",\n            },\n            \"& .pending\": {\n              color: \"orange\",\n            },\n            \"& .disapproved\": {\n              color: \"red\",\n            },\n            \"& .normal\": {\n              color: \"red\",\n            },\n            \"& .MuiDataGrid-row.Mui-selected:hover\": {\n              color: \"black\",\n              \"& .MuiSvgIcon-root \": {\n                fill: \"#3b82f6\",\n              },\n            },\n            \"& .hover-keyboard\": {\n              background: \"#2563eb\",\n              color: \"white\",\n              \"& .MuiSvgIcon-root \": {\n                fill: \"white\",\n              },\n            },\n            \"& .MuiDataGrid-row:hover\": {\n              background: \"#2563eb\",\n              color: \"white\",\n              \"& .MuiSvgIcon-root \": {\n                fill: \"white\",\n              },\n            },\n            \"& .MuiDataGrid-row.hover\": {\n              background: \"#2563eb\",\n              color: \"white\",\n              \"& .MuiSvgIcon-root \": {\n                fill: \"white\",\n              },\n            },\n            \"& .MuiTablePagination-root p \": {\n              padding: \"0 !important\",\n            },\n\n            ...{\n              \"& .MuiDataGrid-columnHeaders\": {\n                background: \"#64748b\",\n                color: \"white\",\n                fontSize: \"14px\",\n                // borderBottomColor: \"#38bdf8\",\n              },\n              \"& .MuiDataGrid-columnHeaderCheckbox .MuiDataGrid-columnHeaderTitleContainer .MuiSvgIcon-root \":\n                {\n                  display: isSingleSelection || isRowFreeze ? \"none\" : \"block\",\n                  fill: \"white\",\n                },\n              \"& .MuiDataGrid-columnHeaderCheckbox .MuiDataGrid-columnHeaderTitleContainer input \":\n                {\n                  display: isSingleSelection || isRowFreeze ? \"none\" : \"block\",\n                },\n            },\n            ...{\n              fontSize: 13,\n              fontWeight: 500,\n              \"& .MuiDataGrid-checkboxInput\": {\n                height: \"27px\",\n                width: \"27px\",\n              },\n              \"& .MuiDataGrid-checkboxInput svg\": {\n                height: \"20px\",\n                width: \"20px\",\n              },\n            },\n          }}\n          // onRowDoubleClick={(e, r) => {\n          //   console.log(e, r);\n          // }}\n\n          onRowSelectionModelChange={(selection) => {\n            if (isRowFreeze) {\n              if (selection.length <= 0) return;\n              freezeArray = selection;\n              if (selectedRows.includes(freezeArray[freezeArray.length - 1]))\n                return;\n\n              setSelectedRows(selection);\n\n              onSelectionChange([selection[selection.length - 1]], rows, null);\n              return;\n            }\n\n            if (!isRowFreeze && isSingleSelection) {\n              if (selectedRows && selectedRows?.length > 0) {\n                const selectionSet = new Set(selectedRows);\n                setSelectedRows(\n                  selection.filter((s: any) => !selectionSet.has(s))\n                );\n              } else {\n                setSelectedRows(selection);\n              }\n            } else {\n              setSelectedRows(selection);\n            }\n\n            onSelectionChange([selection[selection.length - 1]], rows, null);\n          }}\n          onCellKeyDown={(__: any, key: any) => {\n            const keyFinding = [\"NumpadEnter\", \"Enter\", \"Delete\", \"Backspace\"];\n            if (!keyFinding.includes(key.code)) {\n              return;\n            }\n            key.preventDefault();\n            if (key.code === \"Enter\" || key.code === \"NumpadEnter\") {\n              if (isSingleSelection && !isRowFreeze) {\n                return setSelectedRows((data: any) => {\n                  if (data && data.length > 0 && data[0] === __.rowNode.id) {\n                    onSelectionChange([], rows, key.code);\n                    return [];\n                  }\n                  onSelectionChange([__.rowNode.id], rows, key.code);\n                  return [__.rowNode.id];\n                });\n              } else {\n                setSelectedRows((data: any) => {\n                  if (\n                    data &&\n                    !isRowFreeze &&\n                    data.length > 0 &&\n                    data.includes(__.rowNode.id)\n                  ) {\n                    data = data.filter((item: any) => item !== __.rowNode.id);\n                    onSelectionChange([], rows, key.code);\n                    return data;\n                  }\n                  if (\n                    data &&\n                    isRowFreeze &&\n                    data.length > 0 &&\n                    data.includes(__.rowNode.id)\n                  ) {\n                    return data;\n                  }\n                  onSelectionChange([__.rowNode.id], rows, key.code);\n                  return [...data, __.rowNode.id];\n                });\n              }\n              return;\n            }\n            if (key.code === \"Delete\" || key.code === \"Backspace\") {\n              setSelectedRows([__.rowNode.id]);\n              return onSelectionChange([__.rowNode.id], rows, key.code);\n            }\n          }}\n          disableVirtualization\n          isRowSelectable={isRowSelectable}\n          getCellClassName={getCellClassName}\n        />\n      </TableContext.Provider>\n    );\n  }\n);\n\nexport default Table;\nfunction Pagination({\n  page,\n  onPageChange,\n  className,\n}: Pick<TablePaginationProps, \"page\" | \"onPageChange\" | \"className\">) {\n  const apiRef = useGridApiContext();\n  const pageCount = useGridSelector(apiRef, gridPageCountSelector);\n\n  return (\n    <MuiPagination\n      variant=\"outlined\"\n      color=\"primary\"\n      className={className}\n      count={pageCount}\n      page={page + 1}\n      onChange={(event, newPage) => {\n        onPageChange(event as any, newPage - 1);\n      }}\n    />\n  );\n}\n\nfunction CustomPagination(props: any) {\n  return <GridPagination ActionsComponent={Pagination} {...props} />;\n}\nfunction DefaultooterComponent(\n  props: NonNullable<GridSlotsComponentsProps[\"footer\"]>\n) {\n  const {\n    rowSelectionModel,\n    showFooterSelectedCount,\n    footerPaginationPosition,\n    footerChildren,\n    rows,\n  } = useContext(TableContext);\n  return (\n    <Box\n      sx={{\n        columnGap: \"50px\",\n        display: \"flex\",\n        width: \"100%\",\n        justifyContent: \"space-between\",\n        px: 3,\n        alignItems: \"center\",\n        flexDirection:\n          footerPaginationPosition === \"right-left\" ? \"row-reverse\" : \"row\",\n      }}\n    >\n      <CustomPagination {...props} />\n      <Box\n        sx={{\n          display: \"flex\",\n          justifyContent:\n            footerPaginationPosition === \"right-left\"\n              ? \"flex-start\"\n              : \"flex-end\",\n          flex: 1,\n          alignItems: \"center\",\n        }}\n      >\n        {showFooterSelectedCount && (\n          <div>Selected:{rowSelectionModel?.length}</div>\n        )}\n        <div>{footerChildren(rowSelectionModel, rows)}</div>\n      </Box>\n    </Box>\n  );\n}\n","import React from \"react\";\nimport {\n  GridRowSelectionModel,\n  GridRowParams,\n  GridCellParams,\n  GridTreeNode,\n} from \"@mui/x-data-grid\";\nimport { Modal, Box, Typography, IconButton, TextField } from \"@mui/material\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport Table from \"./Table\";\n\ninterface ModalWithTableParams {\n  height: number;\n  isLoading: boolean;\n  queryKey: string;\n  columns: Array<any>;\n  onSelectionChange: (rowSelectionModel: Array<any>, data: Array<any>) => void;\n  setRows: React.Dispatch<React.SetStateAction<GridRowSelectionModel>>;\n  rows: GridRowSelectionModel;\n  id: string;\n  onCloseModal: () => void;\n  onClickCloseIcon: () => void;\n  showModal: boolean;\n  searchOnChange:\n  | React.ChangeEventHandler<HTMLInputElement | HTMLTextAreaElement>\n  | undefined;\n  title?: string;\n  searchRef?: React.RefObject<HTMLInputElement>;\n  onCellKeyDown?: any;\n  onSearchKeyEnter?: (search: string) => void;\n  isRowSelectable?: ((params: GridRowParams<any>) => boolean) | undefined;\n  getCellClassName?:\n  | ((params: GridCellParams<any, any, any, GridTreeNode>) => string)\n  | undefined;\n}\n\nconst style = {\n  position: \"absolute\" as \"absolute\",\n  top: \"50%\",\n  left: \"50%\",\n  transform: \"translate(-50%, -50%)\",\n  width: \"80%\",\n  bgcolor: \"background.paper\",\n  boxShadow: 24,\n  p: 4,\n  heigth: \"auto\",\n};\n\nexport default function ModalWithTable({\n  height,\n  isLoading,\n  queryKey,\n  columns,\n  onSelectionChange,\n  setRows,\n  rows,\n  id,\n  onCloseModal,\n  showModal,\n  onClickCloseIcon,\n  searchOnChange,\n  title = \"\",\n  searchRef,\n  onCellKeyDown,\n  onSearchKeyEnter = () => { },\n  isRowSelectable,\n  getCellClassName,\n}: ModalWithTableParams) {\n  const mainId = generateRandomClass();\n\n  return (\n    <Modal\n      open={showModal}\n      onClose={onCloseModal}\n      aria-labelledby=\"modal-modal-title\"\n      aria-describedby=\"modal-modal-description\"\n    >\n      <Box sx={style}>\n        <Typography id=\"modal-modal-title\" variant=\"h6\" component=\"h2\" mb={2}>\n          {title}\n        </Typography>\n        <TextField\n          size=\"small\"\n          label=\"Search\"\n          sx={{ marginBottom: \"10px\" }}\n          fullWidth\n          onChange={searchOnChange}\n          InputProps={{\n            inputRef: searchRef,\n          }}\n          onKeyDown={(e) => {\n            if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n              e.preventDefault();\n              onSearchKeyEnter(searchRef?.current?.value as string);\n            }\n            keyBoardSelectionTable(\n              e,\n              mainId,\n              searchRef?.current as HTMLInputElement\n            );\n          }}\n        />\n        <div\n          className={`${mainId} main-table-selection-container`}\n          style={{ position: \"relative\", height: `${height + 20}px` }}\n        >\n          <Table\n            isSingleSelection={true}\n            isRowFreeze={false}\n            columns={columns}\n            isLoading={isLoading}\n            dataSelection={(selection, data, code) => {\n              onSelectionChange(selection, data);\n            }}\n            table_id={id}\n            rows={rows}\n            isRowSelectable={isRowSelectable}\n            getCellClassName={getCellClassName}\n          />\n        </div>\n\n        <div style={{ position: \"absolute\", top: \"10px\", right: \"10px\" }}>\n          <IconButton\n            aria-label=\"search-client\"\n            color=\"secondary\"\n            onClick={onClickCloseIcon}\n          >\n            <CloseIcon />\n          </IconButton>\n        </div>\n      </Box>\n    </Modal>\n  );\n}\n\nexport function generateRandomClass() {\n  const randomNumber = Math.floor(Math.random() * 10000);\n  const randomClass = \"main-\" + randomNumber;\n  return randomClass;\n}\n\nfunction keyBoardUpDown(className: string, el: HTMLElement) {\n  const firstRowParent = document.querySelector(\n    `.${className} .MuiDataGrid-row`\n  );\n  const firstInput = firstRowParent?.querySelector(\"input\");\n  firstInput?.focus();\n  const event = new MouseEvent(\"mouseenter\", {\n    bubbles: true,\n    cancelable: true,\n    view: window,\n  });\n  firstRowParent?.dispatchEvent(event);\n  firstInput?.addEventListener(\"keydown\", (es: any) => {\n    if (es.key === \"ArrowUp\") {\n      es.preventDefault();\n      el.focus();\n    }\n    if (es.key === \"ArrowUp\") {\n      firstRowParent?.classList.remove(\"hover-keyboard\");\n    }\n  });\n}\n\nexport function keyBoardSelectionTable(\n  e: React.KeyboardEvent<HTMLDivElement>,\n  className: string,\n  el: HTMLElement\n) {\n  const mainId = className;\n  if (e.code === \"ArrowDown\") {\n    const rows = document.querySelectorAll(`.${mainId} .MuiDataGrid-row`);\n    e.preventDefault();\n    rows[0]?.classList.add(\"hover-keyboard\");\n    keyBoardUpDown(className, el);\n    rows.forEach((el, idx) => {\n      el.addEventListener(\"keydown\", (es: any) => {\n        if (es.key === \"ArrowUp\") {\n          if (idx <= 0) {\n            return;\n          }\n\n          es.preventDefault();\n          rows[idx]?.classList.remove(\"hover-keyboard\");\n          rows[idx - 1]?.classList.add(\"hover-keyboard\");\n          return;\n        }\n        if (es.key === \"ArrowDown\") {\n          es.preventDefault();\n          if (idx >= rows.length - 1) {\n            return;\n          }\n          rows[idx]?.classList.remove(\"hover-keyboard\");\n          rows[idx + 1]?.classList.add(\"hover-keyboard\");\n        }\n      });\n    });\n  }\n}\n","import { useContext, useState } from \"react\";\nimport { useQuery } from \"react-query\";\nimport { AuthContext, User } from \"../components/AuthContext\";\nimport {\n  GridRowSelectionModel,\n  GridCellParams,\n  GridTreeNode,\n} from \"@mui/x-data-grid\";\nimport ModalWithTable from \"../components/ModalWithTable\";\nimport { flushSync } from \"react-dom\";\nimport { AxiosResponse, AxiosInstance } from \"axios\";\nimport { GridRowParams } from \"@mui/x-data-grid\";\ninterface QueryModalTableParamsType {\n  link?: {\n    url: string;\n    queryUrlName: string;\n  };\n  uniqueId: string;\n  queryKey: string;\n  responseDataKey: string;\n  columns: Array<any>;\n  onSelected?: (selectedRowData: Array<any>, data: Array<any>) => void;\n  onRemoveSelected?: (data: Array<any>) => void;\n  onSuccess?: (data: any) => void;\n  searchRef?: React.RefObject<HTMLInputElement>;\n  onCellKeyDown?: any;\n  onCloseFunction?: (search: any) => void;\n  CustomizeAxios?: (\n    myAxios: AxiosInstance,\n    user: User | null,\n    link: QueryModalTableParamsType[\"link\"],\n    search?: string\n  ) => Promise<AxiosResponse<any, any>>;\n  isRowSelectable?: ((params: GridRowParams<any>) => boolean) | undefined;\n  getCellClassName?:\n    | ((params: GridCellParams<any, any, any, GridTreeNode>) => string)\n    | undefined;\n}\n\nasync function CustomizeAxiosFunc(\n  myAxios: AxiosInstance,\n  user: User | null,\n  link: QueryModalTableParamsType[\"link\"],\n  search: string = \"\"\n) {\n  return myAxios.get(`${link?.url}?${link?.queryUrlName}=${search}`, {\n    headers: {\n      Authorization: `Bearer ${user?.accessToken}`,\n    },\n  });\n}\n\nconst useQueryModalTable = ({\n  link,\n  uniqueId,\n  queryKey,\n  responseDataKey,\n  columns,\n  onSelected = () => {},\n  onRemoveSelected = () => {},\n  onSuccess = () => {},\n  searchRef,\n  onCellKeyDown,\n  onCloseFunction = () => {},\n  CustomizeAxios = CustomizeAxiosFunc,\n  isRowSelectable,\n  getCellClassName,\n}: QueryModalTableParamsType) => {\n  const { myAxios, user } = useContext(AuthContext);\n  const [show, setShowModal] = useState(false);\n  const [rows, setRows] = useState<GridRowSelectionModel>([]);\n  async function customizeAxiostool(search: string = \"\") {\n    return await CustomizeAxios(myAxios, user, link, search);\n  }\n  const { isLoading, refetch } = useQuery({\n    queryKey: queryKey,\n    queryFn: async () => await customizeAxiostool(),\n    onSuccess: (res) => {\n      const response = res as any;\n      setRows(response.data[responseDataKey]);\n      onSuccess(response);\n    },\n    refetchOnWindowFocus: false,\n  });\n\n  const openModal = (search: string = \"\") => {\n    flushSync(() => {\n      setShowModal(true);\n    });\n    if (searchRef?.current) {\n      searchRef.current.value = search;\n      customizeAxiostool(search).then((res: any) => {\n        if (!res?.data.success) {\n          return alert(`Error : ${res?.data.message}`);\n        }\n        const response = res as any;\n        setRows(response.data[responseDataKey]);\n        if (searchRef?.current) searchRef.current.focus();\n      });\n    }\n  };\n\n  const closeModal = () => {\n    setShowModal(false);\n    if (onCloseFunction) {\n      onCloseFunction(searchRef?.current?.value);\n    }\n  };\n\n  const ModalComponent = (\n    <ModalWithTable\n      getCellClassName={getCellClassName}\n      searchRef={searchRef}\n      showModal={show}\n      onCloseModal={() => {\n        setShowModal(false);\n        if (onCloseFunction) {\n          onCloseFunction(searchRef?.current?.value);\n        }\n      }}\n      onClickCloseIcon={() => {\n        setShowModal(false);\n        if (onCloseFunction) {\n          onCloseFunction(searchRef?.current?.value);\n        }\n      }}\n      searchOnChange={(e) => {\n        // myAxios\n        //   .get(`${link.url}?${link.queryUrlName}=${e.target.value}`, {\n        //     headers: {\n        //       Authorization: `Bearer ${user?.accessToken}`,\n        //     },\n        //   })\n        //   .then((res: any) => {\n        //     if (!res?.data.success) {\n        //       return alert(`Error : ${res?.data.message}`);\n        //     }\n        //     const response = res as any;\n        //     setRows(response.data[responseDataKey]);\n        //   });\n      }}\n      onSearchKeyEnter={(value) => {\n        customizeAxiostool(value).then((res: any) => {\n          if (!res?.data.success) {\n            return alert(`Error : ${res?.data.message}`);\n          }\n          const response = res as any;\n          setRows(response.data[responseDataKey]);\n        });\n      }}\n      onCellKeyDown={onCellKeyDown}\n      height={300}\n      isLoading={isLoading}\n      queryKey={queryKey}\n      columns={columns}\n      onSelectionChange={(rowSelectionModel, data) => {\n        if (rowSelectionModel.length <= 0) {\n          return onRemoveSelected(data);\n        }\n        const selectedIDs = new Set(rowSelectionModel);\n        const selectedRowData = data.filter((row: any) => {\n          return selectedIDs.has(row[uniqueId].toString());\n        });\n        if (selectedRowData.length <= 0) return;\n        onSelected(selectedRowData, data);\n      }}\n      id={uniqueId}\n      rows={rows}\n      setRows={setRows}\n      isRowSelectable={isRowSelectable}\n    />\n  );\n\n  return {\n    show,\n    rows,\n    isLoading,\n    openModal,\n    closeModal,\n    ModalComponent,\n    refetch,\n  };\n};\n\nexport default useQueryModalTable;\n","import Swal from \"sweetalert2\";\n\nexport function codeCondfirmationAlert(props: {\n  cb: (userCodeConfirmation: string) => void;\n  isUpdate: boolean;\n  isConfirm?: () => void;\n  isDeclined?: () => void;\n  text?: string;\n  title?: string;\n  saveTitle?: string;\n  cancelTitle?: string;\n}) {\n  Swal.fire({\n    title: props?.title ? props?.title :`Are you sure!`,\n    html: props?.text\n      ? props?.text\n      : props.isUpdate\n      ? `Are you sure you want to make this change?`\n      : \"Are you sure you want to delete this?\",\n    icon: \"warning\",\n    input: \"text\",\n    inputAttributes: {\n      autocapitalize: \"off\",\n    },\n    showCancelButton: true,\n    confirmButtonText: props?.saveTitle ? props?.saveTitle : \"Save\",\n    confirmButtonColor: \"green\",\n    showLoaderOnConfirm: true,\n    cancelButtonText: props?.cancelTitle ? props?.cancelTitle : \"Cancel\",\n    cancelButtonColor: \"#d33\",\n    preConfirm: async (userCodeConfirmation) => {\n      try {\n        props.cb(userCodeConfirmation);\n      } catch (error) {\n        Swal.showValidationMessage(`\n            Request failed: ${error}\n          `);\n      }\n    },\n    allowOutsideClick: () => !Swal.isLoading(),\n  }).then((result) => {\n    if (result.isConfirmed) {\n      if (props.isConfirm) {\n        return props.isConfirm();\n      }\n    }\n    if (props.isDeclined) {\n      props.isDeclined();\n    }\n  });\n}\n\nexport function saveCondfirmationAlert(props: {\n  isConfirm?: () => void;\n  isDeclined?: () => void;\n  text?: string;\n}) {\n  Swal.fire({\n    title: \"Are you sure?\",\n    text: props?.text ? props?.text : \"Do you want to proceed with saving?\",\n    icon: \"warning\",\n    showCancelButton: true,\n    confirmButtonColor: \"#3085d6\",\n    cancelButtonColor: \"#d33\",\n    confirmButtonText: \"Yes, save it!\",\n  }).then((result) => {\n    if (result.isConfirmed) {\n      if (props.isConfirm) {\n        return props.isConfirm();\n      }\n    }\n    if (props.isDeclined) {\n      props.isDeclined();\n    }\n  });\n}\n","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-5 14H7v-2h7v2zm3-4H7v-2h10v2zm0-4H7V7h10v2z\"\n}), 'Article');\nexports.default = _default;","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19.35 10.04C18.67 6.59 15.64 4 12 4 9.11 4 6.6 5.64 5.35 8.04 2.34 8.36 0 10.91 0 14c0 3.31 2.69 6 6 6h13c2.76 0 5-2.24 5-5 0-2.64-2.05-4.78-4.65-4.96zM17 13l-5 5-5-5h3V9h4v4h3z\"\n}), 'CloudDownload');\nexports.default = _default;","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19.35 10.04C18.67 6.59 15.64 4 12 4 9.11 4 6.6 5.64 5.35 8.04 2.34 8.36 0 10.91 0 14c0 3.31 2.69 6 6 6h13c2.76 0 5-2.24 5-5 0-2.64-2.05-4.78-4.65-4.96zM14 13v4h-4v-4H7l5-5 5 5h-3z\"\n}), 'CloudUpload');\nexports.default = _default;","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\"\n}), 'Delete');\nexports.default = _default;","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M14.59 8 12 10.59 9.41 8 8 9.41 10.59 12 8 14.59 9.41 16 12 13.41 14.59 16 16 14.59 13.41 12 16 9.41 14.59 8zM12 2C6.47 2 2 6.47 2 12s4.47 10 10 10 10-4.47 10-10S17.53 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8z\"\n}), 'HighlightOff');\nexports.default = _default;","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 4.5C7 4.5 2.73 7.61 1 12c1.73 4.39 6 7.5 11 7.5s9.27-3.11 11-7.5c-1.73-4.39-6-7.5-11-7.5zM12 17c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5zm0-8c-1.66 0-3 1.34-3 3s1.34 3 3 3 3-1.34 3-3-1.34-3-3-3z\"\n}), 'RemoveRedEye');\nexports.default = _default;","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 4.5C7 4.5 2.73 7.61 1 12c1.73 4.39 6 7.5 11 7.5s9.27-3.11 11-7.5c-1.73-4.39-6-7.5-11-7.5zM12 17c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5zm0-8c-1.66 0-3 1.34-3 3s1.34 3 3 3 3-1.34 3-3-1.34-3-3-3z\"\n}), 'Visibility');\nexports.default = _default;"],"names":["CustomDatePicker","_ref","label","name","onChange","value","onKeyDown","inputRef","datePickerRef","fullWidth","textField","_ref$minWidth","minWidth","rest","_objectWithoutProperties","_excluded","_jsx","LocalizationProvider","dateAdapter","AdapterDateFns","children","DatePicker","_objectSpread","floatingLabelStyle","color","ref","slotProps","size","InputLabelProps","sx","fieldset","borderColor","fontSize","top","NumericFormatCustom","React","props","other","NumericFormat","getInputRef","onValueChange","values","target","allowNegative","thousandSeparator","valueIsNumericString","initialClaimState","claims_id","dateReported","dateAccident","dateInspected","department","remarks","search","mode","claim_no","initialPolicyState","policy","claim_type","insurance","PolicyNo","PlateNo","Model","BodyType","Make","ChassisNo","MotorNo","ORNo","CoverNo","BLTFileNo","AssuredName","IDNo","totaDue","totalpaid","balance","remitted","Account","status","DateFrom","DateTo","DateReceived","DateClaim","AmountClaim","AmountApproved","NameTPPD","claimType","basicDocuments","insuranceDocuments","claimsStatus","renderFields","reducer","state","action","type","_defineProperty","field","ClaimModal","_ref8","handleCloseModal","setClaimsSubmited","policyDispatch","policyState","claimDispatch","otherFileInputRef","useRef","DateReceivedRef","DateClaimceivedRef","AmountClaimInputRef","AmountApprovedInputRef","handleInputChange","e","_e$target2","_Fragment","_jsxs","style","width","height","position","marginBottom","display","justifyContent","gap","padding","columnGap","Button","id","variant","onClick","_ref9","Swal","title","text","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","then","_x10","_asyncToGenerator","_regeneratorRuntime","mark","_callee10","result","filetransfer","fileBasicPromises","fileOtherPromises","fileInsurancePromises","basicFileCustom","otherFileCustom","insuranceFileCustom","padNumber","wrap","_context11","prev","next","number","length","String","padStart","arr","dataFile","forEach","itm","files","document","querySelector","concat","push","datakey","_loop2","file","i","reader","FileReader","Promise","resolve","reject","onload","event","_event$target2","fileName","fileContent","fileType","onerror","Error","readAsDataURL","isConfirmed","parent","all","sent","d","trim","filter","stop","apply","arguments","_ref10","_x11","_callee11","_context12","abrupt","flexWrap","FormControl","marginRight","background","zIndex","InputLabel","Select","labelId","_otherFileInputRef$cu","current","resetFileUpload","map","idx","MenuItem","sort","InputProps","Date","code","timeout","setTimeout","_DateReceivedRef$curr","_DateReceivedRef$curr2","click","clearTimeout","_DateClaimceivedRef$c","_DateClaimceivedRef$c2","TextField","onBlur","parseFloat","replace","toFixed","inputComponent","marginTop","border","borderRadius","BasicDocument","OtherDocument","InsuranceDocument","_ref11","_useState7","useState","_useState8","_slicedToArray","activeListBasicDocument","setActiveListBasicDocument","maxHeight","flexDirection","paddingRight","MyButton","disabled","flex","FileUploadInput","_queryFn","_mutationFn","_mutationFn2","_sortList","data","_React$useState","_React$useState2","anchorEl","setAnchorEl","_useState","_useState2","claimsSubmited","_useContext","useContext","AuthContext","myAxios","user","_useReducer","useReducer","_useReducer2","claimState","_useReducer3","_useReducer4","_useState3","_useState4","listofClaim","setListofClaim","_useState5","_useState6","showModal","setShowModal","searchClaimInputRef","policySearchInputRef","dateAccidentRef","dateInspectedRef","_useQuery","useQuery","queryKey","queryFn","_callee","_context","get","headers","Authorization","accessToken","refetchOnWindowFocus","onSuccess","res","claim_id","isLoadingClaimsId","isLoading","refetchClaimsId","refetch","open","Boolean","handleClose","_e$target","_useMutation","useMutation","mutationFn","variable","post","_formatDataToDocument","formattedSelectedData","policyTypeContainer","formatDataToDocument","_x2","_x3","_callee3","dataDocument","url","newObjContainer","_loop","index","_context4","basicItem","mainURL","response","blob","_context3","uniqueFilename","fetch","File","_event$target","delegateYield","_x","_callee2","item","_item$policyState$cla","otherDocuments","newObjContainerBasic","newObjContainerOther","newObjContainerInsurance","_context2","parseInt","toString","process","setNewStateValue","isLoadingSelectedSearch","mutateSelectedSearch","mutate","_useMutation2","mutationKey","_x4","_callee4","_context5","success","message","timer","isLoadingClaimSave","mutateClaimSave","_useMutation3","_x5","_callee5","_context6","console","log","closePolicyModal","isLoadingClaimSelectedPolicyDetails","mutateClaimSelectedPolicyDetails","_useQueryModalTable","useQueryModalTable","link","queryUrlName","columns","headerName","uniqueId","responseDataKey","onSelected","selectedRowData","closeClaimModal","searchRef","SearchClaimModal","ModalComponent","isLoadingClaimModal","openClaimModal","openModal","closeModal","_useQueryModalTable2","PolicyModal","isLoadingPolicyModal","openPolicyModal","handleTdClick","flushSync","groupByLabel","grouped","Object","entries","displayFile","groupedData","_ref2","_ref3","items","fileList","DataTransfer","input","add","dispatchEvent","Event","bubbles","LoadingButton","loading","htmlFor","OutlinedInput","legend","endAdornment","InputAdornment","IconButton","edge","PersonSearchIcon","preventDefault","readOnly","RestartAltIcon","undefined","currentTarget","backgroundColor","grey","Menu","onClose","MenuListProps","localStorage","setItem","claimdsDetails","elementString","ReactDOMServer","borderBottom","textAlign","fontWeight","minHeight","borderRight","rowGap","boxSizing","format","margin","alignSelf","marginLeft","borderTop","right","bottom","borderLeft","alignItems","window","_ref4","_x6","_callee6","_context7","codeCondfirmationAlert","isUpdate","cb","userCodeConfirmation","_ref5","_x7","_callee7","_context8","_ref6","_x8","_callee8","_context9","_datePickerRef$curren","_datePickerRef$curren2","_dateAccidentRef$curr","_dateAccidentRef$curr2","_dateInspectedRef$cur","_dateInspectedRef$cur2","gridTemplateColumns","gridColumn","borderCollapse","className","a","b","statusArray","Stack","direction","spacing","VisibilityIcon","_itm$policyState$Amou","_itm$policyState$Amou2","createElement","div","content","textContent","contentchild","buttonClose","body","basic","uniqueBasicArray","indexOf","uniqueOtherArray","insuranceFile","uniqueInsuranceArray","tableString","colSpan","includes","xmlns","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","innerHTML","appendChild","addEventListener","removeChild","stopPropagation","ArticleIcon","_ref7","_x9","_callee9","_context10","DeleteIcon","onDoubleClick","left","overflow","boxShadow","src","alt","_ref12","_useState9","_useState10","useEffect","r","Ridx","c","cIdx","_ref13","_useState11","_useState12","_ref14","_useState13","_useState14","isHovered","setIsHovered","onMouseEnter","onMouseLeave","cursor","dispatch","obj","_ref15","_ref16","forwardRef","_useState15","_useState16","selectedFiles","setSelectedFiles","useId","fileInput","_useState17","_useState18","isDragging","setIsDragging","handleDragLeave","handleDragEnter","handleDrop","_fileInput$current","dataTransfer","Array","from","newFiles","_toConsumableArray","checkFile","alert","filesArray","arrayToFileList","useImperativeHandle","_document$getElementB","getElementById","parentElement","reset","onDragEnter","onDragOver","onDragLeave","onDrop","CloudUploadIcon","DisplayFile","transform","draggable","accept","multiple","_ref17","objectUrl","URL","createObjectURL","startsWith","RemoveRedEyeIcon","downloadLink","href","download","CloudDownloadIcon","_fileInput$current2","filesToRemove","filteredFiles","newFileList","filterFileList","HighlightOffIcon","isNotExt","fileTypes","TableContext","createContext","rows","rowSelectionModel","footerChildren","footerPaginationPosition","showFooterSelectedCount","table_id","isSingleSelection","isRowFreeze","dataSelection","_ref$CustomFooterComp","CustomFooterComponent","DefaultooterComponent","isRowSelectable","getCellClassName","_ref$checkboxSelectio","checkboxSelection","_ref$footerChildren","_ref$footerPagination","_ref$showFooterSelect","selectedRows","setSelectedRows","onSelectionChange","selection","removeSelection","getSelectedRows","freezeArray","Provider","DataGrid","slots","loadingOverlay","LinearProgress","footer","initialState","pagination","paginationModel","pageSize","getRowId","row","col","hide","showCellVerticalBorder","showColumnVerticalBorder","rowHeight","columnHeaderHeight","pageSizeOptions","onRowSelectionModelChange","selectionSet","Set","s","has","onCellKeyDown","__","key","rowNode","disableVirtualization","Pagination","page","onPageChange","apiRef","useGridApiContext","pageCount","useGridSelector","gridPageCountSelector","MuiPagination","count","newPage","CustomPagination","GridPagination","ActionsComponent","Box","px","bgcolor","p","heigth","ModalWithTable","setRows","onCloseModal","onClickCloseIcon","searchOnChange","_ref$title","_ref$onSearchKeyEnter","onSearchKeyEnter","mainId","Math","floor","random","Modal","Typography","component","mb","_searchRef$current","el","_rows$","querySelectorAll","classList","firstRowParent","firstInput","focus","MouseEvent","cancelable","view","es","remove","keyBoardUpDown","_rows$idx","_rows","_rows$idx2","_rows2","keyBoardSelectionTable","Table","CloseIcon","CustomizeAxiosFunc","_CustomizeAxiosFunc","_args","_customizeAxiostool","_ref$onSelected","_ref$onRemoveSelected","onRemoveSelected","_ref$onSuccess","_ref$onCloseFunction","onCloseFunction","_ref$CustomizeAxios","CustomizeAxios","show","customizeAxiostool","_args2","_searchRef$current2","_searchRef$current3","selectedIDs","_preConfirm","html","inputAttributes","autocapitalize","saveTitle","showLoaderOnConfirm","cancelButtonText","cancelTitle","preConfirm","error","allowOutsideClick","isConfirm","isDeclined","saveCondfirmationAlert","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx"],"sourceRoot":""}