{"version":3,"file":"static/js/9937.d772140c.chunk.js","mappings":"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","sources":["feautures/Admin/Task/Accounting/Collections.tsx","components/Table.tsx","components/ModalWithTable.tsx","hooks/useQueryModalTable.tsx","../node_modules/@mui/icons-material/AccountBox.js","../node_modules/@mui/icons-material/Forward.js","../node_modules/@mui/icons-material/LocalPrintshop.js"],"sourcesContent":["import {\n  useContext,\n  useState,\n  useRef,\n  forwardRef,\n  useEffect,\n  useImperativeHandle,\n} from \"react\";\nimport { Button, IconButton } from \"@mui/material\";\nimport AddIcon from \"@mui/icons-material/Add\";\nimport { useMutation, useQuery } from \"react-query\";\nimport Swal from \"sweetalert2\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport SaveIcon from \"@mui/icons-material/Save\";\nimport { AuthContext } from \"../../../../components/AuthContext\";\nimport { wait } from \"../../../../lib/wait\";\nimport LoadingButton from \"@mui/lab/LoadingButton\";\nimport useQueryModalTable from \"../../../../hooks/useQueryModalTable\";\nimport RestartAltIcon from \"@mui/icons-material/RestartAlt\";\nimport {\n  codeCondfirmationAlert,\n  saveCondfirmationAlert,\n} from \"../../../../lib/confirmationAlert\";\nimport PageHelmet from \"../../../../components/Helmet\";\nimport {\n  SelectInput,\n  TextAreaInput,\n  TextFormatedInput,\n  TextInput,\n} from \"../../../../components/UpwardFields\";\nimport ForwardIcon from \"@mui/icons-material/Forward\";\nimport { Autocomplete } from \"./PettyCash\";\nimport AccountBoxIcon from \"@mui/icons-material/AccountBox\";\nimport SearchIcon from \"@mui/icons-material/Search\";\nimport useExecuteQueryFromClient from \"../../../../lib/executeQueryFromClient\";\nimport LocalPrintshopIcon from \"@mui/icons-material/LocalPrintshop\";\nimport {\n  DataGridViewReact,\n  useUpwardTableModalSearch,\n  useUpwardTableModalSearchSafeMode,\n} from \"../../../../components/DataGridViewReact\";\nimport { Loading } from \"../../../../components/Loading\";\nimport { formatNumber } from \"./ReturnCheck\";\nimport { format, isValid, parse } from \"date-fns\";\nimport \"../../../../style/monbileview/accounting/collection.css\";\n\nexport const debitColumn = [\n  { key: \"Payment\", label: \"Payment\", flex: 1, width: 170 },\n  {\n    key: \"Amount\",\n    label: \"Amount\",\n    flex: 1,\n    width: 170,\n    type: \"number\",\n  },\n  { key: \"Check_No\", label: \"Check No\", width: 170 },\n  { key: \"Check_Date\", label: \"Check Date\", width: 170 },\n  { key: \"Bank_Branch\", label: \"Bank/Branch\", width: 300 },\n  { key: \"Acct_Code\", label: \"DR Code\", width: 170 },\n  { key: \"Acct_Title\", label: \"DR Title\", width: 300 },\n  { key: \"Deposit_Slip\", label: \"Deposit Slip\", width: 170 },\n  { key: \"Cntr\", label: \"Cntr\", width: 170 },\n  { key: \"Remarks\", label: \"Remarks\", width: 300 },\n  { key: \"TC\", label: \"TC\", width: 170 },\n  { key: \"Bank\", label: \"Bank\", hide: true },\n  { key: \"BankName\", label: \"BankName\", hide: true },\n];\nexport const creditColumn = [\n  { key: \"transaction\", label: \"Transaction\", width: 200 },\n  { key: \"amount\", label: \"Amount\", width: 150, type: \"number\" },\n  { key: \"Name\", label: \"Name\", width: 350 },\n  { key: \"Remarks\", label: \"Remarks\", width: 350 },\n  { key: \"VATType\", label: \"VAT Type\", width: 150 },\n  { key: \"invoiceNo\", label: \"Invoice No\", width: 250 },\n  { key: \"Code\", label: \"Code\", width: 150 },\n  { key: \"Title\", label: \"Title\", width: 350 },\n  { key: \"TC\", label: \"TC\", width: 200 },\n  { key: \"Account_No\", label: \"Accoount No.\", width: 180 },\n];\n\nconst queryKeyPaymentType = \"payment-type-code\";\nconst queryKeyNewORNumber = \"new-or-number\";\n\nexport default function Collection() {\n  const debitTable = useRef<any>(null);\n  const creditTable = useRef<any>(null);\n  const modalCheckRef = useRef<any>(null);\n\n  const [paymentType, setPaymentType] = useState(\"CSH\");\n  const [totalDebit, setTotalDebit] = useState(0);\n  const [totalCredit, setTotalCredit] = useState(0);\n  const [collectionMode, setCollectionMode] = useState(\"\");\n\n  // SEARCH COLLECTION\n  const searchRef = useRef<HTMLInputElement>(null);\n\n  // first layer fields\n  const ornoSubRef = useRef(\"\");\n  const ornoRef = useRef<HTMLInputElement>(null);\n  const dateRef = useRef<HTMLInputElement>(null);\n  const pnClientRef = useRef<HTMLInputElement>(null);\n  const clientNameRef = useRef<HTMLInputElement>(null);\n  const IDNo = useRef(\"\");\n\n  // second layer fields\n  const paymentTypeRef = useRef<HTMLSelectElement>(null);\n  const amountDebitRef = useRef<HTMLInputElement>(null);\n  const buttonCshSave = useRef<HTMLButtonElement>(null);\n  const buttonCheckSave = useRef<HTMLButtonElement>(null);\n  const buttonCheckList = useRef<HTMLButtonElement>(null);\n\n  // third layer fields\n  const transactionRef = useRef<HTMLSelectElement>(null);\n  const amountCreditRef = useRef<HTMLInputElement>(null);\n  const faoRef = useRef<HTMLInputElement>(null);\n  const remarksRef = useRef<HTMLTextAreaElement>(null);\n  const vatTypeRef = useRef<HTMLSelectElement>(null);\n  const invoiceRef = useRef<HTMLInputElement>(null);\n  const foaIDNoRef = useRef(\"\");\n  const accCodeRef = useRef(\"\");\n  const accTitleRef = useRef(\"\");\n  const accTCRef = useRef(\"\");\n\n  const { myAxios, user } = useContext(AuthContext);\n  const { executeQueryToClient } = useExecuteQueryFromClient();\n\n  const disableFields = collectionMode === \"\";\n\n  const { UpwardTableModalSearch, openModal, closeModal } =\n    useUpwardTableModalSearch({\n      column: [\n        { key: \"Check_No\", label: \"Check No\", width: 100 },\n        { key: \"Check_Date\", label: \"Check Date\", width: 100 },\n        {\n          key: \"Amount\",\n          label: \"Amount\",\n          width: 90,\n          type: \"number\",\n        },\n        {\n          key: \"Bank_Branch\",\n          label: \"Bank Branch\",\n          width: 200,\n        },\n        {\n          key: \"Remarks\",\n          label: \"Remarks\",\n          width: 200,\n          hide: true,\n        },\n      ],\n      query: (search: string) => {\n        if (pnClientRef.current) {\n          return `\n            SELECT \n               Check_No AS Check_No, \n               date_FORMAT(Check_Date,'%b. %d, %Y') AS Check_Date,\n              FORMAT(CAST(REPLACE(Check_Amnt, ',', '') AS DECIMAL(10,2)), 2) AS Amount,\n              CONCAT(Bank.Bank, '/', Branch) AS Bank_Branch\n            FROM pdc as PDC \n            left join bank as Bank  on Bank.Bank_Code = PDC.Bank\n            WHERE (\n              Check_No LIKE '%${search}%' \n              OR PDC.Bank  LIKE '%${search}%' \n              OR Branch LIKE '%${search}%') \n              AND (PNo = '${pnClientRef.current.value}' ) \n              AND (ORNum IS NULL OR ORNum = '')\n            ORDER BY PDC.Check_Date\n        `;\n        }\n        return ``;\n      },\n      getSelectedItem: async (rowItm: any, _: any, rowIdx: any, __: any) => {\n        if (rowItm) {\n          if (pnClientRef.current) {\n            const dt = await executeQueryToClient(`\n            SELECT \n              Check_No, \n              Check_Date, \n              Check_Amnt, \n              bank.Bank as Bank, \n              CONCAT(bank.Bank, '/', Branch)  AS BName, \n              Branch, \n              Remarks \n            FROM pdc \n            LEFT JOIN bank  ON pdc.Bank = bank.Bank_Code\n            WHERE PNo = '${pnClientRef.current.value}' AND Check_No = '${rowItm[0]}'`);\n\n            const checkDetails = dt?.data.data[0];\n\n            wait(100).then(() => {\n              if (modalCheckRef.current) {\n                if (modalCheckRef.current.checknoRef.current) {\n                  modalCheckRef.current.checknoRef.current.value =\n                    checkDetails.Check_No;\n                }\n                if (modalCheckRef.current.bankRef.current) {\n                  modalCheckRef.current.bankRef.current.value =\n                    checkDetails.Bank;\n                }\n                if (modalCheckRef.current.branchRef.current) {\n                  modalCheckRef.current.branchRef.current.value =\n                    checkDetails.Branch;\n                }\n                if (modalCheckRef.current.remarksRef.current) {\n                  modalCheckRef.current.remarksRef.current.value =\n                    checkDetails.Remarks;\n                }\n                if (modalCheckRef.current.checkdateRef.current) {\n                  modalCheckRef.current.checkdateRef.current.value =\n                    checkDetails.Check_Date;\n                }\n                if (modalCheckRef.current.amountRef.current) {\n                  modalCheckRef.current.amountRef.current.value =\n                    checkDetails.Check_Amnt;\n                }\n                if (modalCheckRef.current.bankRefName.current) {\n                  modalCheckRef.current.bankRefName.current =\n                    checkDetails.BName;\n                }\n              }\n            });\n\n            saveCheckDebit(\n              {\n                amountRef: { current: { value: checkDetails.Check_Amnt } },\n                checknoRef: { current: { value: checkDetails.Check_No } },\n                checkdateRef: { current: { value: checkDetails.Check_Date } },\n                branchRef: { current: { value: checkDetails.Branch } },\n                remarksRef: { current: { value: checkDetails.Remarks } },\n                bankRef: { current: { value: checkDetails.Bank } },\n                bankRefName: { current: checkDetails.BName },\n              },\n              false\n            );\n            closeModal();\n            wait(250).then(() => {\n              buttonCheckList.current?.focus();\n            });\n          }\n        }\n      },\n    });\n\n  const { isLoading: paymentTypeLoading, data: transactionDesc } = useQuery({\n    queryKey: queryKeyPaymentType,\n    queryFn: async () =>\n      await myAxios.get(`/task/accounting/get-transaction-code-title`, {\n        headers: {\n          Authorization: `Bearer ${user?.accessToken}`,\n        },\n      }),\n    refetchOnWindowFocus: false,\n  });\n  //CLIENT MODAL\n  const {\n    UpwardTableModalSearch: ClientUpwardTableModalSearch,\n    openModal: clientOpenModal,\n    closeModal: clientCloseModal,\n  } = useUpwardTableModalSearchSafeMode({\n    size: \"medium\",\n    link: \"/task/accounting/search-pdc-policy-id\",\n    column: [\n      { key: \"Type\", label: \"Type\", width: 130 },\n      { key: \"IDNo\", label: \"ID No.\", width: 150 },\n      {\n        key: \"Name\",\n        label: \"Name\",\n        width: 300,\n      },\n      {\n        key: \"ID\",\n        label: \"ID\",\n        hide: true,\n      },\n      {\n        key: \"client_id\",\n        label: \"client_id\",\n        hide: true,\n      },\n    ],\n    getSelectedItem: async (rowItm: any, _: any, rowIdx: any, __: any) => {\n      if (rowItm) {\n        wait(100).then(() => {\n          console.log(rowItm);\n\n          IDNo.current = rowItm[4];\n          if (pnClientRef.current) {\n            pnClientRef.current.value = rowItm[1];\n          }\n          if (clientNameRef.current) {\n            clientNameRef.current.value = rowItm[2] ?? \"\";\n          }\n          paymentTypeRef.current?.focus();\n        });\n        clientCloseModal();\n      }\n    },\n  });\n\n  //CLIENT MODAL CREDIT\n  const {\n    UpwardTableModalSearch: ClientCreditUpwardTableModalSearch,\n    openModal: clientCreditOpenModal,\n    closeModal: clientCreditCloseModal,\n  } = useUpwardTableModalSearchSafeMode({\n    size: \"medium\",\n    link: \"/task/accounting/search-pdc-policy-id\",\n    column: [\n      { key: \"Type\", label: \"Type\", width: 130 },\n      { key: \"IDNo\", label: \"ID No.\", width: 150 },\n      {\n        key: \"Name\",\n        label: \"Name\",\n        width: 300,\n      },\n      {\n        key: \"ID\",\n        label: \"ID\",\n        hide: true,\n      },\n      {\n        key: \"client_id\",\n        label: \"client_id\",\n        hide: true,\n      },\n    ],\n    getSelectedItem: async (rowItm: any, _: any, rowIdx: any, __: any) => {\n      if (rowItm) {\n        wait(100).then(() => {\n          foaIDNoRef.current = rowItm[1];\n          if (faoRef.current) {\n            faoRef.current.value = rowItm[2] ?? \"\";\n          }\n          remarksRef.current?.focus();\n        });\n        clientCreditCloseModal();\n      }\n    },\n  });\n\n  // Search Collection\n  const {\n    UpwardTableModalSearch: SearchCollectionUpwardTableModalSearch,\n    openModal: searchCollectionCreditOpenModal,\n    closeModal: searchCollectionCreditCloseModal,\n  } = useUpwardTableModalSearchSafeMode({\n    size: \"medium\",\n    link: \"/task/accounting/search-collection\",\n    column: [\n      { key: \"Date_OR\", label: \"OR Date\", width: 100 },\n      { key: \"ORNo\", label: \"OR No.\", width: 100 },\n      { key: \"Name\", label: \"Name\", width: 400 },\n    ],\n    getSelectedItem: async (rowItm: any, _: any, rowIdx: any, __: any) => {\n      if (rowItm) {\n        wait(100).then(() => {\n          resetCredit(false);\n          resetDebit(false);\n          mutateCollectionDataSearch({ ORNo: rowItm[1] });\n        });\n        searchCollectionCreditCloseModal();\n      }\n    },\n  });\n\n  const {\n    isLoading: loadingCollectionDataSearch,\n    mutate: mutateCollectionDataSearch,\n  } = useMutation({\n    mutationKey: \"get-collection-data-search\",\n    mutationFn: async (variables: any) =>\n      await myAxios.post(\n        `/task/accounting/get-collection-data-search`,\n        variables,\n        {\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${user?.accessToken}`,\n          },\n        }\n      ),\n    onSuccess: (res) => {\n      const response = res as any;\n      const dataCollection = response.data.collection;\n\n      if (\n        ornoRef.current &&\n        dateRef.current &&\n        pnClientRef.current &&\n        clientNameRef.current\n      ) {\n        ornoRef.current.value = dataCollection[0].ORNo;\n        dateRef.current.value = dataCollection[0].Date_OR;\n        pnClientRef.current.value = dataCollection[0].ID_No;\n        clientNameRef.current.value = dataCollection[0].Short;\n      }\n\n      const debit: Array<any> = [];\n      const credit: Array<any> = [];\n\n      for (let i = 0; i <= dataCollection.length - 1; i++) {\n        if (\n          dataCollection[i].Payment !== null &&\n          dataCollection[i].Payment.toString() !== \"\"\n        ) {\n          console.log(dataCollection[i]);\n\n          const isCash = dataCollection[i].Payment.toLowerCase() === \"cash\";\n          debit.push({\n            Payment: dataCollection[i].Payment,\n            Amount: formatNumber(\n              parseFloat(dataCollection[i].Debit.toString().replace(/,/g, \"\"))\n            ),\n            Check_No: isCash ? \"\" : dataCollection[i].Check_No,\n            Check_Date: isCash\n              ? \"\"\n              : format(new Date(dataCollection[i].Check_Date), \"yyyy-MM-dd\"),\n            Bank_Branch: isCash ? \"\" : dataCollection[i].Bank,\n            Acct_Code: dataCollection[i].DRCode,\n            Acct_Title: dataCollection[i].DRTitle,\n            Deposit_Slip: dataCollection[i].SlipCode,\n            Cntr: \"\",\n            Remarks: dataCollection[i].DRRemarks,\n            TC: isCash ? \"CSH\" : \"CHK\",\n            Bank: dataCollection[i].Bank_Code,\n            BankName: dataCollection[i].BankName,\n          });\n        }\n\n        if (\n          dataCollection[i].Purpose !== null &&\n          dataCollection[i].Purpose.toString() !== \"\"\n        ) {\n          credit.push({\n            temp_id: `${i}`,\n            transaction: dataCollection[i].Purpose,\n            amount: formatNumber(\n              parseFloat(dataCollection[i].Credit.toString().replace(/,/g, \"\"))\n            ),\n            Remarks: dataCollection[i].CRRemarks,\n            Code: dataCollection[i].CRCode,\n            Title: dataCollection[i].CRTitle,\n            TC: dataCollection[i].TC,\n            Account_No: dataCollection[i].CRLoanID,\n            Name: dataCollection[i].CRLoanName,\n            VATType: dataCollection[i].CRVATType,\n            invoiceNo: dataCollection[i].CRInvoiceNo,\n          });\n        }\n      }\n\n      debitTable.current.setDataFormated(debit);\n      creditTable.current.setDataFormated(credit);\n      setTotalDebit(\n        debit.reduce(\n          (sum: any, subArray: any) =>\n            sum + parseFloat(subArray.Amount.replace(/,/g, \"\")),\n          0\n        )\n      );\n      setTotalCredit(\n        credit.reduce(\n          (sum: any, subArray: any) =>\n            sum + parseFloat(subArray.amount.replace(/,/g, \"\")),\n          0\n        )\n      );\n      setCollectionMode(\"update\");\n    },\n  });\n\n  const { isLoading: NewORNoLoading, refetch: refetchNewOR } = useQuery({\n    queryKey: queryKeyNewORNumber,\n    queryFn: async () =>\n      await myAxios.get(`/task/accounting/get-new-or-number`, {\n        headers: {\n          Authorization: `Bearer ${user?.accessToken}`,\n        },\n      }),\n    refetchOnWindowFocus: false,\n    onSuccess: (res) => {\n      const response = res as any;\n      wait(100).then(() => {\n        ornoSubRef.current = response.data?.ORNo[0].collectionID;\n        if (ornoRef.current) {\n          ornoRef.current.value = response.data?.ORNo[0].collectionID;\n        }\n      });\n    },\n  });\n  const { mutate, isLoading: loadingAddNew } = useMutation({\n    mutationKey: \"add-update-collection\",\n    mutationFn: async (variables: any) => {\n      if (collectionMode === \"update\") {\n        delete variables.mode;\n        return await myAxios.post(\n          \"/task/accounting/update-collection\",\n          variables,\n          {\n            headers: {\n              Authorization: `Bearer ${user?.accessToken}`,\n            },\n          }\n        );\n      }\n      delete variables.mode;\n      return await myAxios.post(\"/task/accounting/add-collection\", variables, {\n        headers: {\n          Authorization: `Bearer ${user?.accessToken}`,\n        },\n      });\n    },\n    onSuccess: (res) => {\n      if (res.data.success) {\n        resetCollection();\n        return Swal.fire({\n          position: \"center\",\n          icon: \"success\",\n          title: res.data.message,\n          showConfirmButton: false,\n          timer: 1500,\n        });\n      }\n      Swal.fire({\n        position: \"center\",\n        icon: \"error\",\n        title: res.data.message,\n        showConfirmButton: false,\n        timer: 1500,\n      });\n    },\n  });\n  const { mutate: mutatePrint, isLoading: isLoadingPrint } = useMutation({\n    mutationKey: \"print\",\n    mutationFn: async (variables: any) => {\n      return await myAxios.post(\"/task/accounting/print-or\", variables, {\n        responseType: \"arraybuffer\",\n        headers: {\n          Authorization: `Bearer ${user?.accessToken}`,\n        },\n      });\n    },\n    onSuccess: (response) => {\n      const pdfBlob = new Blob([response.data], { type: \"application/pdf\" });\n      const pdfUrl = URL.createObjectURL(pdfBlob);\n      window.open(\n        `/${\n          process.env.REACT_APP_DEPARTMENT\n        }/dashboard/report?pdf=${encodeURIComponent(pdfUrl)}`,\n        \"_blank\"\n      );\n    },\n  });\n  function resetCollection() {\n    wait(100).then(() => {\n      refetchNewOR();\n      resetFields();\n      resetCredit(false);\n      resetDebit(false);\n      debitTable.current?.setData([]);\n      creditTable.current?.setData([]);\n      pnClientRef.current?.focus();\n      setTotalCredit(0);\n      setTotalDebit(0);\n    });\n  }\n  async function saveCashDebit(value: string, paymentType: string) {\n    const amount = parseFloat(value.replace(/,/g, \"\"));\n    if (isNaN(amount) || amount <= 0) {\n      amountDebitRef.current?.focus();\n      return alert(\"Please provide amount!\");\n    }\n    const getSelectedRow = debitTable.current.getSelectedRow();\n    const debitTableData = debitTable.current.getData();\n\n    if (getSelectedRow !== null) {\n      debitTableData[getSelectedRow][1] = amount.toLocaleString(\"en-US\", {\n        minimumFractionDigits: 2,\n        maximumFractionDigits: 2,\n      });\n      debitTable.current.setData(debitTableData);\n      debitTable.current.setSelectedRow(null);\n      debitTable.current.resetCheckBox();\n      debitTable.current.resetCheckBox();\n      setTotalDebit(\n        debitTableData.reduce(\n          (sum: any, subArray: any) =>\n            sum + parseFloat(subArray[1].replace(/,/g, \"\")),\n          0\n        )\n      );\n    } else {\n      const dd = await executeQueryToClient(\n        `select * from transaction_code LEFT JOIN chart_account ON transaction_code.Acct_Code = chart_account.Acct_Code WHERE Code = 'CSH'`\n      );\n\n      const data = {\n        Payment: \"Cash\",\n        Amount: amount.toLocaleString(\"en-US\", {\n          minimumFractionDigits: 2,\n          maximumFractionDigits: 2,\n        }),\n        Check_No: \"\",\n        Check_Date: \"\",\n        Bank_Branch: \"\",\n        Acct_Code: dd.data?.data[0].Acct_Code,\n        Acct_Title: dd.data?.data[0].Acct_Title,\n        Deposit_Slip: \"\",\n        Cntr: \"\",\n        Remarks: \"\",\n        TC: paymentType,\n        Bank: \"\",\n        BankName: \"\",\n      };\n      const newDataFormatted = debitTableData.map((itm: any) => {\n        let newItm = {\n          Payment: itm[0],\n          Amount: itm[1],\n          Check_No: itm[2],\n          Check_Date: itm[3],\n          Bank_Branch: itm[4],\n          Acct_Code: itm[5],\n          Acct_Title: itm[6],\n          Deposit_Slip: itm[7],\n          Cntr: itm[8],\n          Remarks: itm[9],\n          TC: itm[10],\n          Bank: itm[11],\n          BankName: itm[12],\n        };\n        return newItm;\n      });\n      const newDataTable = [...newDataFormatted, data];\n      debitTable.current.setDataFormated(newDataTable);\n      setTotalDebit(\n        newDataTable.reduce(\n          (sum: any, subArray: any) =>\n            sum + parseFloat(subArray.Amount.replace(/,/g, \"\")),\n          0\n        )\n      );\n    }\n\n    if (amountDebitRef.current) {\n      amountDebitRef.current.value = \"\";\n      amountDebitRef.current?.focus();\n    }\n  }\n  function saveCheckDebit(refs: any, autoClose = true) {\n    wait(100).then(async () => {\n      // const refs = modalCheckRef.current.getRefs()\n\n      const amount = parseFloat(\n        refs.amountRef.current?.value.replace(/,/g, \"\")\n      );\n      const checkno = refs.checknoRef.current?.value;\n      const checkdate = refs.checkdateRef.current?.value;\n      const branch = refs.branchRef.current?.value;\n      const remarks = refs.remarksRef.current?.value;\n      const bank = refs.bankRef.current?.value;\n      const bankRefName = refs.bankRefName.current;\n      const getSelectedRow = debitTable.current.getSelectedRow();\n\n      if (\n        debitTable.current.checkNoIsExist(checkno) &&\n        getSelectedRow === null\n      ) {\n        return alert(`check no is already exist`);\n      }\n\n      if (getSelectedRow !== null) {\n        const debitTableData = debitTable.current.getData();\n        debitTableData[getSelectedRow][1] = amount.toLocaleString(\"en-US\", {\n          minimumFractionDigits: 2,\n          maximumFractionDigits: 2,\n        });\n        debitTableData[getSelectedRow][2] = checkno;\n        debitTableData[getSelectedRow][3] = checkdate;\n        debitTableData[getSelectedRow][4] = `${bank}/${branch}`;\n        debitTableData[getSelectedRow][9] = remarks;\n        debitTableData[getSelectedRow][11] = bank;\n        debitTableData[getSelectedRow][12] = bankRefName;\n        debitTable.current.setData(debitTableData);\n        debitTable.current.setSelectedRow(null);\n        debitTable.current.resetCheckBox();\n        setTotalDebit(\n          debitTableData.reduce(\n            (sum: any, subArray: any) =>\n              sum + parseFloat(subArray[1].replace(/,/g, \"\")),\n            0\n          )\n        );\n      } else {\n        const dd = await executeQueryToClient(\n          `select * from transaction_code LEFT JOIN chart_account ON transaction_code.Acct_Code = chart_account.Acct_Code WHERE Code = 'CHK'`\n        );\n        const data = {\n          Payment: \"Check\",\n          Amount: amount.toLocaleString(\"en-US\", {\n            minimumFractionDigits: 2,\n            maximumFractionDigits: 2,\n          }),\n          Check_No: checkno,\n          Check_Date: checkdate,\n          Bank_Branch: `${bank}/${branch}`,\n          Acct_Code: dd.data?.data[0].Acct_Code,\n          Acct_Title: dd.data?.data[0].Acct_Title,\n          Deposit_Slip: \"\",\n          Cntr: \"\",\n          Remarks: remarks,\n          TC: paymentType,\n          Bank: bank,\n          BankName: bankRefName,\n        };\n        const debitTableData = debitTable.current.getData();\n        const newDataFormatted = debitTableData.map((itm: any) => {\n          let newItm = {\n            Payment: itm[0],\n            Amount: itm[1],\n            Check_No: itm[2],\n            Check_Date: itm[3],\n            Bank_Branch: itm[4],\n            Acct_Code: itm[5],\n            Acct_Title: itm[6],\n            Deposit_Slip: itm[7],\n            Cntr: itm[8],\n            Remarks: itm[9],\n            TC: itm[10],\n            Bank: itm[11],\n            BankName: itm[12],\n          };\n          return newItm;\n        });\n        const newDataTable = [...newDataFormatted, data];\n        debitTable.current.setDataFormated(newDataTable);\n        setTotalDebit(\n          newDataTable.reduce(\n            (sum: any, subArray: any) =>\n              sum + parseFloat(subArray.Amount.replace(/,/g, \"\")),\n            0\n          )\n        );\n      }\n\n      if (autoClose) {\n        modalCheckRef.current.closeDelay();\n      }\n    });\n  }\n  async function saveCredit() {\n    if (\n      (transactionRef.current && transactionRef.current.value === \"\") ||\n      (transactionRef.current && transactionRef.current.value === null) ||\n      (transactionRef.current && transactionRef.current.value === undefined)\n    ) {\n      transactionRef.current.focus();\n      return alert(`Please select a transaction!`);\n    }\n    if (transactionRef.current) {\n      const dd = await executeQueryToClient(\n        `SELECT * FROM transaction_code where Description = \"${transactionRef.current.value}\"`\n      );\n      if (dd.data.data?.length <= 0) {\n        return alert(\"Transaction not yet defined!\");\n      }\n    }\n    if (amountCreditRef.current) {\n      if (\n        isNaN(parseFloat(amountCreditRef.current.value.replace(/,/g, \"\"))) ||\n        parseFloat(amountCreditRef.current.value.replace(/,/g, \"\")) <= 0\n      ) {\n        amountCreditRef.current.focus();\n        return alert(\"Please provide amount!\");\n      }\n    }\n    if (invoiceRef.current && invoiceRef.current.value === \"\") {\n      invoiceRef.current.focus();\n      return alert(\"Please provide invoice!\");\n    }\n    if (foaIDNoRef.current === \"\") {\n      faoRef.current?.focus();\n      return alert(\"Please provide usage!\");\n    }\n\n    const getSelectedRow = creditTable.current.getSelectedRow();\n\n    if (getSelectedRow !== null) {\n      const creditTableData = creditTable.current.getData();\n      creditTableData[getSelectedRow][0] = transactionRef.current?.value;\n      creditTableData[getSelectedRow][1] = amountCreditRef.current?.value;\n      creditTableData[getSelectedRow][2] = faoRef.current?.value;\n      creditTableData[getSelectedRow][3] = remarksRef.current?.value;\n      creditTableData[getSelectedRow][4] = vatTypeRef.current?.value;\n      creditTableData[getSelectedRow][5] = invoiceRef.current?.value;\n      creditTableData[getSelectedRow][6] = accCodeRef.current;\n      creditTableData[getSelectedRow][7] = accTitleRef.current;\n      creditTableData[getSelectedRow][8] = accTCRef.current;\n      creditTableData[getSelectedRow][9] = foaIDNoRef.current;\n\n      creditTable.current.setData(creditTableData);\n      creditTable.current.setSelectedRow(null);\n      creditTable.current.resetCheckBox();\n      setTotalCredit(\n        creditTableData.reduce(\n          (sum: any, subArray: any) =>\n            sum + parseFloat(subArray[1].replace(/,/g, \"\")),\n          0\n        )\n      );\n    } else {\n      const data = {\n        transaction: transactionRef.current?.value,\n        amount: amountCreditRef.current?.value,\n        Name: faoRef.current?.value,\n        Remarks: remarksRef.current?.value,\n        VATType: vatTypeRef.current?.value,\n        invoiceNo: invoiceRef.current?.value,\n        Code: accCodeRef.current,\n        Title: accTitleRef.current,\n        TC: accTCRef.current,\n        Account_No: foaIDNoRef.current,\n      };\n\n      const creditTableData = creditTable.current.getData();\n      const newDataFormatted = creditTableData.map((itm: any) => {\n        let newItm = {\n          transaction: itm[0],\n          amount: itm[1],\n          Name: itm[2],\n          Remarks: itm[3],\n          VATType: itm[4],\n          invoiceNo: itm[5],\n          Code: itm[6],\n          Title: itm[7],\n          TC: itm[8],\n          Account_No: itm[9],\n        };\n        return newItm;\n      });\n      const newCreditTableData = [...newDataFormatted, data];\n      creditTable.current.setDataFormated(newCreditTableData);\n      setTotalCredit(\n        newCreditTableData.reduce(\n          (sum: any, subArray: any) =>\n            sum + parseFloat(subArray.amount.replace(/,/g, \"\")),\n          0\n        )\n      );\n    }\n\n    if (vatTypeRef.current && vatTypeRef.current.value === \"VAT\") {\n      const dd = await executeQueryToClient(\n        `select chart_account.Acct_Code,chart_account.Acct_Title from transaction_code LEFT JOIN chart_account ON transaction_code.Acct_Code = chart_account.Acct_Code WHERE Description = 'Output Tax'`\n      );\n      const TC = await executeQueryToClient(\n        `select Code from transaction_code WHERE Description = 'Output Tax' `\n      );\n\n      let taxableamt = 0;\n      let inputtax = 0;\n\n      if (amountCreditRef.current) {\n        taxableamt =\n          parseFloat(amountCreditRef.current.value.replace(/,/g, \"\")) / 1.12;\n        inputtax = taxableamt * 0.12;\n      }\n\n      const debitTableData = creditTable.current.getData();\n\n      if (getSelectedRow !== null) {\n        const newData: any = [];\n        newData[0] = \"Output Tax\";\n        newData[1] = inputtax.toLocaleString(\"en-US\", {\n          minimumFractionDigits: 2,\n          maximumFractionDigits: 2,\n        });\n        newData[2] = faoRef.current?.value;\n        newData[3] = remarksRef.current?.value;\n        newData[4] = \"VAT\";\n        newData[5] = invoiceRef.current?.value;\n        newData[6] = dd.data?.data[0].Acct_Code;\n        newData[7] = dd.data?.data[0].Acct_Title;\n        newData[8] = TC.data?.data[0].Code;\n        newData[9] = foaIDNoRef.current;\n\n        debitTableData[getSelectedRow][1] = taxableamt.toLocaleString(\"en-US\", {\n          minimumFractionDigits: 2,\n          maximumFractionDigits: 2,\n        });\n\n        debitTableData.splice(getSelectedRow + 1, 0, newData);\n        creditTable.current.setData(debitTableData);\n      } else {\n        const newData: any = [];\n        newData[0] = \"Output Tax\";\n        newData[1] = inputtax.toLocaleString(\"en-US\", {\n          minimumFractionDigits: 2,\n          maximumFractionDigits: 2,\n        });\n        newData[2] = faoRef.current?.value;\n        newData[3] = remarksRef.current?.value;\n        newData[4] = \"VAT\";\n        newData[5] = invoiceRef.current?.value;\n        newData[6] = dd.data?.data[0].Acct_Code;\n        newData[7] = dd.data?.data[0].Acct_Title;\n        newData[8] = TC.data?.data[0].Code;\n        newData[9] = foaIDNoRef.current;\n\n        debitTableData[debitTableData.length] = newData;\n        debitTableData[debitTableData.length - 2][1] =\n          taxableamt.toLocaleString(\"en-US\", {\n            minimumFractionDigits: 2,\n            maximumFractionDigits: 2,\n          });\n        creditTable.current.setData(debitTableData);\n      }\n    }\n    resetCredit();\n  }\n  function resetFields() {\n    wait(100).then(() => {\n      if (dateRef.current) {\n        dateRef.current.value = format(new Date(), \"yyyy-MM-dd\");\n      }\n      if (pnClientRef.current) {\n        pnClientRef.current.value = \"\";\n      }\n      if (clientNameRef.current) {\n        clientNameRef.current.value = \"\";\n      }\n      IDNo.current = \"\";\n    });\n  }\n  function resetDebit(setFocus = true) {\n    modalCheckRef.current?.closeDelay();\n    setPaymentType(\"CSH\");\n    if (paymentTypeRef.current) {\n      paymentTypeRef.current.value = \"CSH\";\n    }\n    wait(100).then(() => {\n      if (amountDebitRef.current) {\n        amountDebitRef.current.value = \"\";\n        if (setFocus) amountDebitRef.current?.focus();\n      }\n    });\n  }\n  function resetCredit(setFocus = true) {\n    wait(100).then(() => {\n      if (transactionRef.current) {\n        transactionRef.current.value = \"\";\n      }\n      if (amountCreditRef.current) {\n        amountCreditRef.current.value = \"0.00\";\n      }\n      if (faoRef.current) {\n        faoRef.current.value = \"\";\n      }\n      if (remarksRef.current) {\n        remarksRef.current.value = \"\";\n      }\n      if (vatTypeRef.current) {\n        vatTypeRef.current.value = \"Non-VAT\";\n      }\n      if (invoiceRef.current) {\n        invoiceRef.current.value = \"\";\n      }\n      accCodeRef.current = \"\";\n      accTitleRef.current = \"\";\n      accTCRef.current = \"\";\n      foaIDNoRef.current = \"\";\n      if (setFocus) transactionRef.current?.focus();\n    });\n  }\n  function handleOnAdd() {\n    setCollectionMode(\"add\");\n    resetCollection();\n  }\n  function handleOnSave() {\n    const debitTableData = debitTable.current.getData();\n    const creditTableData = creditTable.current.getData();\n\n    if (ornoRef.current && ornoRef.current.value === \"\") {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: \"Please provide OR number\",\n        timer: 1500,\n      });\n    } else if (pnClientRef.current && pnClientRef.current.value === \"\") {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: \"Please provide PN/Client ID\",\n        timer: 1500,\n      }).then(() => {\n        wait(350).then(() => {\n          if (pnClientRef.current) clientOpenModal(pnClientRef.current?.value);\n        });\n      });\n    } else if (debitTableData.length <= 0) {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: \"Please provide debit entry\",\n        timer: 1500,\n      }).then(() => {\n        wait(300).then(() => {\n          paymentTypeRef.current?.focus();\n        });\n      });\n    } else if (creditTableData.length <= 0) {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: \"Please provide credit entry\",\n        timer: 1500,\n      }).then(() => {\n        wait(300).then(() => {\n          transactionRef.current?.focus();\n        });\n      });\n    } else if (\n      parseFloat(\n        debitTableData.reduce(\n          (sum: any, obj: any) =>\n            sum + parseFloat(obj[1].toString().replace(/,/g, \"\")),\n          0\n        )\n      ).toFixed(2) !==\n      parseFloat(\n        creditTableData.reduce(\n          (sum: any, obj: any) =>\n            sum + parseFloat(obj[1].toString().replace(/,/g, \"\")),\n          0\n        )\n      ).toFixed(2)\n    ) {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title:\n          \"Transaction is not balanced. Check if the amount you entered are correct!\",\n        timer: 1500,\n      });\n    }\n\n    const creditTableDataFormatted = creditTableData.map((itm: any) => {\n      let newItm = {\n        transaction: itm[0],\n        amount: itm[1],\n        Name: itm[2],\n        Remarks: itm[3],\n        VATType: itm[4],\n        invoiceNo: itm[5],\n        Code: itm[6],\n        Title: itm[7],\n        TC: itm[8],\n        Account_No: itm[9],\n      };\n      return newItm;\n    });\n\n    const debitTableDataFormatted = debitTableData.map((itm: any) => {\n      let newItm = {\n        Payment: itm[0],\n        Amount: itm[1],\n        Check_No: itm[2],\n        Check_Date: itm[3],\n        Bank_Branch: itm[4],\n        Acct_Code: itm[5],\n        Acct_Title: itm[6],\n        Deposit_Slip: itm[7],\n        Cntr: itm[8],\n        Remarks: itm[9],\n        TC: itm[10],\n        Bank: itm[11],\n        BankName: itm[12],\n      };\n      return newItm;\n    });\n\n    const state = {\n      ORNo: ornoRef.current?.value,\n      Date: dateRef.current?.value,\n      PNo: pnClientRef.current?.value,\n      Name: clientNameRef.current?.value,\n      debit: JSON.stringify(debitTableDataFormatted),\n      credit: JSON.stringify(creditTableDataFormatted),\n    };\n\n    if (collectionMode === \"update\") {\n      codeCondfirmationAlert({\n        isUpdate: true,\n        cb: (userCodeConfirmation) => {\n          mutate({ ...state, userCodeConfirmation, mode: \"\" });\n        },\n      });\n    } else {\n      saveCondfirmationAlert({\n        isConfirm: () => {\n          mutate({ ...state, mode: \"\" });\n        },\n      });\n    }\n  }\n  function handleOnClose() {\n    Swal.fire({\n      title: \"Are you sure?\",\n      text: \"You won't be able to revert this!\",\n      icon: \"warning\",\n      showCancelButton: true,\n      confirmButtonColor: \"#3085d6\",\n      cancelButtonColor: \"#d33\",\n      confirmButtonText: \"Yes, cancel it!\",\n    }).then((result) => {\n      if (result.isConfirmed) {\n        setCollectionMode(\"\");\n        resetCollection();\n      }\n    });\n  }\n  function handleOnPrint() {\n    if (ornoRef.current)\n      mutatePrint({\n        ORNo: ornoRef.current.value,\n        reportTitle:\n          process.env.REACT_APP_DEPARTMENT === \"UMIS\"\n            ? \"UPWARD MANAGEMENT INSURANCE SERVICES\"\n            : \"UPWARD CONSULTANCY SERVICES AND MANAGEMENT INC.\",\n      });\n  }\n\n  return (\n    <div\n      className=\"main\"\n      style={{\n        height: \"auto\",\n        width: \"100%\",\n        background: \"#F1F1F1\",\n        // border:\"1px solid red\"\n      }}\n    >\n      <SearchCollectionUpwardTableModalSearch />\n      <ClientUpwardTableModalSearch />\n      <ClientCreditUpwardTableModalSearch />\n      <PageHelmet title=\"Collection\" />\n      <UpwardTableModalSearch />\n      <ModalCheck\n        ref={modalCheckRef}\n        handleOnSave={() => {\n          const refs = modalCheckRef.current.getRefs();\n          saveCheckDebit(refs);\n        }}\n        handleOnClose={() => {\n          debitTable.current.setSelectedRow(null);\n          debitTable.current.resetCheckBox();\n          buttonCheckSave.current?.focus();\n        }}\n      />\n\n      {(loadingAddNew || isLoadingPrint || loadingCollectionDataSearch) && (\n        <Loading />\n      )}\n\n      <div\n        style={{\n          width: \"100%\",\n          height: \"20%\",\n          display: \"flex\",\n          flexDirection: \"column\",\n          padding: \"5px\",\n        }}\n      >\n        <div\n          style={{\n            height: \"30px\",\n            display: \"flex\",\n            columnGap: \"10px\",\n          }}\n        >\n          <TextInput\n            containerClassName=\"search-input\"\n            containerStyle={{ width: \"550px\" }}\n            label={{\n              title: \"Search: \",\n              style: {\n                fontSize: \"12px\",\n                fontWeight: \"bold\",\n                width: \"50px\",\n              },\n            }}\n            input={{\n              className: \"search-input-up-on-key-down\",\n              type: \"search\",\n              onKeyDown: (e) => {\n                if (e.key === \"Enter\" || e.key === \"NumpadEnter\") {\n                  e.preventDefault();\n                  searchCollectionCreditOpenModal(e.currentTarget.value);\n                }\n              },\n              style: { width: \"500px\", height: \"22px\" },\n            }}\n            icon={<SearchIcon sx={{ fontSize: \"18px\" }} />}\n            onIconClick={(e) => {\n              e.preventDefault();\n              if (searchRef.current)\n                searchCollectionCreditOpenModal(searchRef.current.value);\n            }}\n            inputRef={searchRef}\n          />\n          <div\n            className=\"collection-desktop-buttons\"\n            style={{\n              display: \"flex\",\n              alignItems: \"center\",\n              columnGap: \"10px\",\n            }}\n          >\n            <IconButton\n              aria-label=\"add\"\n              size=\"small\"\n              color=\"info\"\n              onClick={handleOnAdd}\n            >\n              <AddIcon />\n            </IconButton>\n            <IconButton\n              disabled={disableFields}\n              aria-label=\"save\"\n              size=\"small\"\n              color=\"success\"\n              onClick={handleOnSave}\n            >\n              <SaveIcon />\n            </IconButton>\n            <IconButton\n              disabled={collectionMode !== \"update\"}\n              aria-label=\"print\"\n              size=\"small\"\n              color=\"secondary\"\n              onClick={handleOnPrint}\n            >\n              <LocalPrintshopIcon />\n            </IconButton>\n            <IconButton\n              disabled={disableFields}\n              aria-label=\"print\"\n              size=\"small\"\n              color=\"error\"\n              onClick={handleOnClose}\n            >\n              <CloseIcon />\n            </IconButton>\n          </div>\n        </div>\n        <div\n          className=\"layer-one\"\n          style={{\n            flex: 1,\n            border: \"1px solid #64748b\",\n            display: \"flex\",\n            alignItems: \"center\",\n            columnGap: \"50px\",\n            padding: \"5px\",\n            width: \"100%\",\n          }}\n        >\n          <div\n            className=\"layer-content\"\n            style={{\n              display: \"flex\",\n              flexDirection: \"column\",\n              rowGap: \"5px\",\n              width: \"50%\",\n            }}\n          >\n            {NewORNoLoading ? (\n              <LoadingButton loading={NewORNoLoading} />\n            ) : (\n              <TextInput\n                containerClassName=\"custom-input\"\n                containerStyle={{\n                  width: \"320px\",\n                }}\n                label={{\n                  title: \"OR No. : \",\n                  style: {\n                    fontSize: \"12px\",\n                    fontWeight: \"bold\",\n                    width: \"70px\",\n                  },\n                }}\n                input={{\n                  disabled: disableFields,\n                  readOnly: true,\n                  type: \"text\",\n                  style: { width: \"250px\" },\n                  onKeyDown: (e) => {\n                    if (e.code === \"NumpadEnter\" || e.code === \"Enter\") {\n                      refetchNewOR();\n                    }\n                  },\n                }}\n                disableIcon={collectionMode !== \"add\"}\n                inputRef={ornoRef}\n                icon={<RestartAltIcon sx={{ fontSize: \"18px\" }} />}\n                onIconClick={(e) => {\n                  e.preventDefault();\n                  refetchNewOR();\n                }}\n              />\n            )}\n            <TextInput\n              containerClassName=\"custom-input\"\n              label={{\n                title: \"Date : \",\n                style: {\n                  fontSize: \"12px\",\n                  fontWeight: \"bold\",\n                  width: \"70px\",\n                },\n              }}\n              input={{\n                disabled: disableFields,\n                type: \"date\",\n                style: { width: \"250px\" },\n                defaultValue: format(new Date(), \"yyyy-MM-dd\"),\n                onKeyDown: (e) => {\n                  if (e.code === \"NumpadEnter\" || e.code === \"Enter\") {\n                    pnClientRef.current?.focus();\n                  }\n                },\n              }}\n              inputRef={dateRef}\n            />\n          </div>\n          <div\n            className=\"layer-content\"\n            style={{\n              display: \"flex\",\n              flexDirection: \"column\",\n              rowGap: \"5px\",\n              width: \"50%\",\n            }}\n          >\n            <TextInput\n              containerClassName=\"custom-input\"\n              containerStyle={{\n                width: \"60%\",\n              }}\n              label={{\n                title: \"PN/Client ID : \",\n                style: {\n                  fontSize: \"12px\",\n                  fontWeight: \"bold\",\n                  width: \"100px\",\n                },\n              }}\n              input={{\n                disabled: disableFields,\n                type: \"text\",\n                style: { flex: 1 },\n                onKeyDown: (e) => {\n                  if (e.code === \"NumpadEnter\" || e.code === \"Enter\") {\n                    clientOpenModal(e.currentTarget.value);\n                  }\n                },\n              }}\n              icon={<AccountBoxIcon sx={{ fontSize: \"18px\" }} />}\n              onIconClick={(e) => {\n                e.preventDefault();\n                if (pnClientRef.current) {\n                  clientOpenModal(pnClientRef.current.value);\n                }\n              }}\n              inputRef={pnClientRef}\n            />\n            <TextInput\n              containerClassName=\"custom-input\"\n              label={{\n                title: \"Client Name : \",\n                style: {\n                  fontSize: \"12px\",\n                  fontWeight: \"bold\",\n                  width: \"100px\",\n                },\n              }}\n              input={{\n                disabled: disableFields,\n                type: \"text\",\n                style: { width: \"80%\" },\n                onKeyDown: (e) => {\n                  if (e.code === \"NumpadEnter\" || e.code === \"Enter\") {\n                  }\n                },\n              }}\n              inputRef={clientNameRef}\n            />\n          </div>\n        </div>\n      </div>\n      <div style={{ height: \"10px\" }}></div>\n      <ContentContainer\n        containerClassName=\"first\"\n        title={\"Particulars (Debit)\"}\n        firstContent={\n          <div\n            style={{\n              display: \"flex\",\n              flexDirection: \"column\",\n              rowGap: \"5px\",\n              width: \"100%\",\n            }}\n          >\n            <div\n              style={{\n                display: \"flex\",\n                alignItems: \"center\",\n                columnGap: \"15px\",\n                marginTop: \"5px\",\n                flex: 1,\n              }}\n            >\n              <SelectInput\n                containerStyle={{ width: \"100%\" }}\n                label={{\n                  title: \"Payment Type : \",\n                  style: {\n                    fontSize: \"12px\",\n                    fontWeight: \"bold\",\n                    width: \"100px\",\n                  },\n                }}\n                selectRef={paymentTypeRef}\n                select={{\n                  disabled: disableFields,\n                  style: { flex: 1, height: \"22px\" },\n                  value: paymentType,\n                  onKeyDown: (e) => {\n                    if (e.code === \"NumpadEnter\" || e.code === \"Enter\") {\n                      e.preventDefault();\n                      amountDebitRef.current?.focus();\n                    }\n                  },\n                  onChange: (e) => {\n                    if (e.target.value === \"CHK\" && amountDebitRef.current) {\n                      amountDebitRef.current.value = \"0.00\";\n                      wait(100).then(() => {\n                        buttonCheckSave.current?.focus();\n                      });\n                    }\n                    setPaymentType(e.target.value);\n                  },\n                }}\n                datasource={[\n                  { key: \"Cash\", value: \"CSH\" },\n                  { key: \"Check\", value: \"CHK\" },\n                ]}\n                values={\"value\"}\n                display={\"key\"}\n              />\n              <button\n                ref={buttonCheckSave}\n                disabled={paymentType === \"CSH\"}\n                className={`custom-btn ripple-button ${\n                  paymentType === \"CSH\" ? \"disabled\" : \"not-disabled\"\n                }`}\n                style={{\n                  padding: \"0 5px\",\n                  borderRadius: \"0px\",\n                  color: \"white\",\n                  height: \"22px\",\n                  background: paymentType === \"CSH\" ? \"#8fc993\" : \"#1b5e20\",\n                }}\n                onClick={(e) => {\n                  modalCheckRef.current?.showModal();\n                  wait(100).then(() => {\n                    modalCheckRef.current?.checknoRef.current?.focus();\n                  });\n                }}\n              >\n                <AddIcon sx={{ fontSize: \"22px\" }} />\n              </button>\n            </div>\n            <div\n              style={{\n                display: \"flex\",\n                alignItems: \"center\",\n                columnGap: \"15px\",\n              }}\n            >\n              <TextFormatedInput\n                containerStyle={{\n                  flex: 1,\n                }}\n                label={{\n                  title: \"Amount : \",\n                  style: {\n                    fontSize: \"12px\",\n                    fontWeight: \"bold\",\n                    width: \"100px\",\n                  },\n                }}\n                input={{\n                  disabled: paymentType === \"CHK\" || disableFields,\n                  type: \"text\",\n                  style: { width: \"calc(100% - 100px)\" },\n                  onKeyDown: (e) => {\n                    if (e.code === \"NumpadEnter\" || e.code === \"Enter\") {\n                      buttonCshSave.current?.click();\n                    }\n                  },\n                }}\n                inputRef={amountDebitRef}\n              />\n              <button\n                ref={buttonCshSave}\n                disabled={paymentType === \"CHK\"}\n                className={`custom-btn ripple-button ${\n                  paymentType === \"CHK\" ? \"disabled\" : \"not-disabled\"\n                }`}\n                style={{\n                  padding: \"0 5px\",\n                  borderRadius: \"0px\",\n                  color: \"white\",\n                  height: \"22px\",\n                  background: paymentType === \"CHK\" ? \"#8fc993\" : \"#1b5e20\",\n                }}\n                onClick={(e) => {\n                  if (amountDebitRef.current && paymentTypeRef.current) {\n                    saveCashDebit(\n                      amountDebitRef.current.value,\n                      paymentTypeRef.current.value\n                    );\n                  }\n                }}\n              >\n                <ForwardIcon sx={{ fontSize: \"20px\" }} />\n              </button>\n            </div>\n            <Button\n              className=\"add-chk-button\"\n              ref={buttonCheckList}\n              disabled={paymentType === \"CSH\"}\n              startIcon={<AddIcon />}\n              sx={{\n                height: \"30px\",\n                fontSize: \"11px\",\n                marginTop: \"20px\",\n              }}\n              color=\"success\"\n              variant=\"contained\"\n              onClick={() => {\n                openModal(\"\");\n              }}\n            >\n              Add Check from PDC Entry\n            </Button>\n          </div>\n        }\n        secondContent={\n          <div\n            style={{\n              position: \"relative\",\n              height: \"100%\",\n              width: \"100%\",\n              flex: 1,\n              display: \"flex\",\n              flexDirection: \"column\",\n            }}\n          >\n            <DataGridViewReact\n              ref={debitTable}\n              columns={debitColumn}\n              rows={[]}\n              containerStyle={{\n                height: \"auto\",\n                minHeight: \"130px\",\n                flex: 1,\n              }}\n              getSelectedItem={async (rowItm: any) => {\n                if (rowItm) {\n                  console.log(rowItm);\n                  if (rowItm[0] === \"Cash\") {\n                    wait(100).then(() => {\n                      if (amountDebitRef.current)\n                        amountDebitRef.current.value = rowItm[1];\n                    });\n                  } else {\n                    if (rowItm[7] && rowItm[7] !== \"\") {\n                      debitTable.current.resetCheckBox();\n                      debitTable.current.setSelectedRow(null);\n                      buttonCheckSave.current?.focus();\n                      return alert(\n                        ` Unable to edit. Check No [${rowItm[2]}] already deposited!`\n                      );\n                    }\n                    if (rowItm[8] && rowItm[8] !== \"\") {\n                      debitTable.current.resetCheckBox();\n                      debitTable.current.setSelectedRow(null);\n                      buttonCheckSave.current?.focus();\n                      return alert(\n                        ` Unable to edit. Check No [${rowItm[2]}] is a PDC reference!`\n                      );\n                    }\n                    const strBank = rowItm[4].split(\"/\");\n                    const BankName = await executeQueryToClient(\n                      `select * from bank where Bank_Code = '${strBank[0]}'`\n                    );\n                    modalCheckRef.current?.showModal();\n\n                    wait(100).then(() => {\n                      if (modalCheckRef.current) {\n                        if (modalCheckRef.current.checknoRef.current) {\n                          modalCheckRef.current.checknoRef.current.value =\n                            rowItm[2];\n                        }\n                        if (modalCheckRef.current.bankRef.current) {\n                          modalCheckRef.current.bankRef.current.value =\n                            strBank[0];\n                        }\n                        if (modalCheckRef.current.branchRef.current) {\n                          modalCheckRef.current.branchRef.current.value =\n                            strBank[1];\n                        }\n                        if (modalCheckRef.current.remarksRef.current) {\n                          modalCheckRef.current.remarksRef.current.value =\n                            rowItm[9];\n                        }\n                        if (modalCheckRef.current.checkdateRef.current) {\n                          modalCheckRef.current.checkdateRef.current.value =\n                            rowItm[3];\n                        }\n                        if (modalCheckRef.current.amountRef.current) {\n                          modalCheckRef.current.amountRef.current.value =\n                            rowItm[1];\n                        }\n                        if (modalCheckRef.current.bankRefName.current) {\n                          modalCheckRef.current.bankRefName.current =\n                            BankName.data.data[0].Bank;\n                        }\n                      }\n                    });\n                  }\n                } else {\n                  wait(100).then(() => {\n                    if (amountDebitRef.current)\n                      amountDebitRef.current.value = \"0.00\";\n                  });\n                }\n              }}\n              onKeyDown={(rowItm: any, rowIdx: any, e: any) => {\n                if (e.code === \"Delete\" || e.code === \"Backspace\") {\n                  const isConfim = window.confirm(\n                    `Are you sure you want to delete?`\n                  );\n                  if (isConfim) {\n                    const debitTableData = debitTable.current.getData();\n                    debitTableData.splice(rowIdx, 1);\n                    debitTable.current.setData(debitTableData);\n                    setTotalDebit(\n                      debitTableData.reduce(\n                        (sum: any, subArray: any) =>\n                          sum + parseFloat(subArray[1].replace(/,/g, \"\")),\n                        0\n                      )\n                    );\n                    return;\n                  }\n                }\n              }}\n            />\n            <div\n              style={{\n                fontSize: \"13px\",\n                textAlign: \"right\",\n                border: \"1px solid #d1cdcd\",\n                background: \"#dcdcdc\",\n                fontWeight: \"bold\",\n              }}\n            >\n              {totalDebit.toLocaleString(\"en-US\", {\n                minimumFractionDigits: 2,\n                maximumFractionDigits: 2,\n              })}\n            </div>\n          </div>\n        }\n        contentStyle={`\n          .custom-btn.not-disabled:hover{\n            background:#154f19 !important;\n          }\n          `}\n      />\n      <div style={{ height: \"10px\" }}></div>\n      <ContentContainer\n        containerClassName=\"second\"\n        title={\"Particulars Breakdown (Credit)\"}\n        firstContent={\n          <div\n            style={{\n              display: \"flex\",\n              rowGap: \"5px\",\n              flexDirection: \"column\",\n            }}\n          >\n            <label\n              htmlFor=\"auto-solo-collection\"\n              style={{\n                fontSize: \"12px\",\n                fontWeight: \"bold\",\n                marginTop: \"5px\",\n              }}\n            >\n              Transaction :\n            </label>\n            <div\n              style={{\n                display: \"flex\",\n                alignItems: \"center\",\n                columnGap: \"15px\",\n                flex: 1,\n              }}\n            >\n              {paymentTypeLoading ? (\n                <LoadingButton loading={paymentTypeLoading} />\n              ) : (\n                <div style={{ flex: 1 }}>\n                  <Autocomplete\n                    label={{\n                      title: \" \",\n                      style: {\n                        width: \"0px\",\n                        display: \"none\",\n                      },\n                    }}\n                    input={{\n                      id: \"auto-solo-collection\",\n                      style: {\n                        width: \"100%\",\n                        flex: 1,\n                      },\n                    }}\n                    width={\"100%\"}\n                    DisplayMember={\"Description\"}\n                    DataSource={transactionDesc?.data.transactionDesc}\n                    disableInput={disableFields}\n                    inputRef={transactionRef}\n                    onChange={(selected: any, e: any) => {\n                      console.log(selected);\n                      if (transactionRef.current)\n                        transactionRef.current.value = selected.Description;\n\n                      accCodeRef.current = selected.Acct_Code;\n                      accTitleRef.current = selected.Acct_Title;\n                      accTCRef.current = selected.Code;\n                    }}\n                    onKeydown={(e: any) => {\n                      if (e.key === \"Enter\" || e.key === \"NumpadEnter\") {\n                        e.preventDefault();\n                        amountCreditRef.current?.focus();\n                      }\n                    }}\n                  />\n                </div>\n              )}\n              <button\n                className=\"custom-btn ripple-button\"\n                style={{\n                  background: \"#1b5e20\",\n                  padding: \"0 5px\",\n                  borderRadius: \"0px\",\n                  color: \"white\",\n                  height: \"22px\",\n                }}\n                onClick={() => {\n                  wait(100).then(() => {\n                    if (transactionRef.current) {\n                      transactionRef.current.value = \"\";\n                    }\n                    if (amountCreditRef.current) {\n                      amountCreditRef.current.value = \"0.00\";\n                    }\n                    if (faoRef.current) {\n                      faoRef.current.value = \"\";\n                    }\n                    if (remarksRef.current) {\n                      remarksRef.current.value = \"\";\n                    }\n                    if (vatTypeRef.current) {\n                      vatTypeRef.current.value = \"Non-VAT\";\n                    }\n                    if (invoiceRef.current) {\n                      invoiceRef.current.value = \"\";\n                    }\n                    accCodeRef.current = \"\";\n                    accTitleRef.current = \"\";\n                    accTCRef.current = \"\";\n                    foaIDNoRef.current = \"\";\n                    transactionRef.current?.focus();\n                    creditTable.current.resetCheckBox();\n                    creditTable.current.setSelectedRow(null);\n                  });\n                }}\n              >\n                <AddIcon sx={{ fontSize: \"22px\" }} />\n              </button>\n            </div>\n            <div\n              style={{\n                display: \"flex\",\n                alignItems: \"center\",\n                columnGap: \"15px\",\n                width: \"100%\",\n                flex: 1,\n              }}\n            >\n              <TextFormatedInput\n                containerStyle={{\n                  flex: 1,\n                }}\n                label={{\n                  title: \"Amount : \",\n                  style: {\n                    fontSize: \"12px\",\n                    fontWeight: \"bold\",\n                    width: \"70px\",\n                  },\n                }}\n                input={{\n                  disabled: disableFields,\n                  type: \"text\",\n                  style: { flex: 1, width: \"100%\" },\n                  onKeyDown: (e) => {\n                    if (e.code === \"NumpadEnter\" || e.code === \"Enter\") {\n                      faoRef.current?.focus();\n                    }\n                  },\n                }}\n                inputRef={amountCreditRef}\n              />\n\n              <button\n                className=\"custom-btn ripple-button\"\n                style={{\n                  background: \"#1b5e20\",\n                  padding: \"0 5px\",\n                  borderRadius: \"0px\",\n                  color: \"white\",\n                  height: \"22px\",\n                }}\n                onClick={() => {\n                  saveCredit();\n                }}\n              >\n                <ForwardIcon sx={{ fontSize: \"22px\" }} />\n              </button>\n            </div>\n\n            <TextInput\n              containerStyle={{\n                width: \"100%\",\n              }}\n              label={{\n                title: \"FAO : \",\n                style: {\n                  fontSize: \"12px\",\n                  fontWeight: \"bold\",\n                  width: \"70px\",\n                },\n              }}\n              input={{\n                disabled: disableFields,\n                type: \"text\",\n                style: { flex: 1 },\n                onKeyDown: (e) => {\n                  if (e.code === \"NumpadEnter\" || e.code === \"Enter\") {\n                    clientCreditOpenModal(e.currentTarget.value);\n                  }\n                },\n              }}\n              icon={<AccountBoxIcon sx={{ fontSize: \"18px\" }} />}\n              onIconClick={(e) => {\n                e.preventDefault();\n                if (faoRef.current) {\n                  clientCreditOpenModal(faoRef.current.value);\n                }\n              }}\n              inputRef={faoRef}\n            />\n\n            <TextAreaInput\n              label={{\n                title: \"Remarks : \",\n                style: {\n                  fontSize: \"12px\",\n                  fontWeight: \"bold\",\n                  width: \"70px\",\n                },\n              }}\n              textarea={{\n                disabled: disableFields,\n                rows: 3,\n                style: { flex: 1 },\n                onKeyDown: (e) => {\n                  e.stopPropagation();\n                  if (\n                    (e.code === \"NumpadEnter\" && !e.shiftKey) ||\n                    (e.code === \"Enter\" && !e.shiftKey)\n                  ) {\n                    vatTypeRef.current?.focus();\n                  }\n                },\n              }}\n              _inputRef={remarksRef}\n            />\n            <SelectInput\n              label={{\n                title: \"Vat Type : \",\n                style: {\n                  fontSize: \"12px\",\n                  fontWeight: \"bold\",\n                  width: \"70px\",\n                },\n              }}\n              selectRef={vatTypeRef}\n              select={{\n                disabled: disableFields,\n                style: { flex: 1, height: \"22px\" },\n                defaultValue: \"Non-VAT\",\n                onKeyDown: (e) => {\n                  if (e.code === \"NumpadEnter\" || e.code === \"Enter\") {\n                    e.preventDefault();\n                    invoiceRef.current?.focus();\n                  }\n                },\n              }}\n              datasource={[\n                { key: \"VAT\", value: \"VAT\" },\n                { key: \"Non-VAT\", value: \"Non-VAT\" },\n              ]}\n              values={\"value\"}\n              display={\"key\"}\n            />\n            <TextInput\n              label={{\n                title: \"Invoice : \",\n                style: {\n                  fontSize: \"12px\",\n                  fontWeight: \"bold\",\n                  width: \"70px\",\n                },\n              }}\n              input={{\n                disabled: disableFields,\n                type: \"text\",\n                style: { flex: 1 },\n                onKeyDown: (e) => {\n                  if (e.code === \"NumpadEnter\" || e.code === \"Enter\") {\n                    saveCredit();\n                  }\n                },\n              }}\n              inputRef={invoiceRef}\n            />\n          </div>\n        }\n        secondContent={\n          <div\n            style={{\n              position: \"relative\",\n              height: \"100%\",\n              width: \"100%\",\n              flex: 1,\n              display: \"flex\",\n              flexDirection: \"column\",\n            }}\n          >\n            <DataGridViewReact\n              ref={creditTable}\n              columns={creditColumn}\n              rows={[]}\n              containerStyle={{\n                height: \"auto\",\n                flex: 1,\n              }}\n              getSelectedItem={(rowItm: any) => {\n                if (rowItm) {\n                  wait(100).then(() => {\n                    if (transactionRef.current) {\n                      transactionRef.current.value = rowItm[0];\n                    }\n                    if (amountCreditRef.current) {\n                      amountCreditRef.current.value = rowItm[1];\n                    }\n                    if (faoRef.current) {\n                      faoRef.current.value = rowItm[2];\n                    }\n                    if (remarksRef.current) {\n                      remarksRef.current.value = rowItm[3];\n                    }\n                    if (vatTypeRef.current) {\n                      vatTypeRef.current.value = rowItm[4];\n                    }\n                    if (invoiceRef.current) {\n                      invoiceRef.current.value = rowItm[5];\n                    }\n                    accCodeRef.current = rowItm[6];\n                    accTitleRef.current = rowItm[7];\n                    accTCRef.current = rowItm[8];\n                    foaIDNoRef.current = rowItm[9];\n                  });\n                } else {\n                  wait(100).then(() => {\n                    if (transactionRef.current) {\n                      transactionRef.current.value = \"\";\n                    }\n                    if (amountCreditRef.current) {\n                      amountCreditRef.current.value = \"0.00\";\n                    }\n                    if (faoRef.current) {\n                      faoRef.current.value = \"\";\n                    }\n                    if (remarksRef.current) {\n                      remarksRef.current.value = \"\";\n                    }\n                    if (vatTypeRef.current) {\n                      vatTypeRef.current.value = \"Non-VAT\";\n                    }\n                    if (invoiceRef.current) {\n                      invoiceRef.current.value = \"\";\n                    }\n                    accCodeRef.current = \"\";\n                    accTitleRef.current = \"\";\n                    accTCRef.current = \"\";\n                    foaIDNoRef.current = \"\";\n                  });\n                }\n              }}\n              onKeyDown={(rowItm: any, rowIdx: any, e: any) => {\n                if (e.code === \"Delete\" || e.code === \"Backspace\") {\n                  const isConfim = window.confirm(\n                    `Are you sure you want to delete?`\n                  );\n                  if (isConfim) {\n                    const creditTableData = creditTable.current.getData();\n                    creditTableData.splice(rowIdx, 1);\n                    creditTable.current.setData(creditTableData);\n                    setTotalCredit(\n                      creditTableData.reduce(\n                        (sum: any, subArray: any) =>\n                          sum + parseFloat(subArray[1].replace(/,/g, \"\")),\n                        0\n                      )\n                    );\n                    return;\n                  }\n                }\n              }}\n            />\n            <div\n              style={{\n                fontSize: \"13px\",\n                textAlign: \"right\",\n                border: \"1px solid #d1cdcd\",\n                background: \"#dcdcdc\",\n                fontWeight: \"bold\",\n              }}\n            >\n              {totalCredit.toLocaleString(\"en-US\", {\n                minimumFractionDigits: 2,\n                maximumFractionDigits: 2,\n              })}\n            </div>\n          </div>\n        }\n        contentStyle={`\n          .custom-btn.not-disabled:hover{\n            background:#154f19 !important;\n          }\n            .custom-btn:focus{\n              outline:3px solid #2563eb;\n            }\n        `}\n      />\n      <div\n        className=\"collection-mobile-buttons\"\n        style={{\n          display: \"none\",\n          alignItems: \"center\",\n          columnGap: \"10px\",\n        }}\n      >\n        <IconButton\n          aria-label=\"add\"\n          size=\"small\"\n          color=\"info\"\n          onClick={handleOnAdd}\n        >\n          <AddIcon />\n        </IconButton>\n        <IconButton\n          disabled={disableFields}\n          aria-label=\"save\"\n          size=\"small\"\n          color=\"success\"\n          onClick={handleOnSave}\n        >\n          <SaveIcon />\n        </IconButton>\n        <IconButton\n          disabled={collectionMode !== \"update\"}\n          aria-label=\"print\"\n          size=\"small\"\n          color=\"secondary\"\n          onClick={handleOnPrint}\n        >\n          <LocalPrintshopIcon />\n        </IconButton>\n        <IconButton\n          disabled={disableFields}\n          aria-label=\"print\"\n          size=\"small\"\n          color=\"error\"\n          onClick={handleOnClose}\n        >\n          <CloseIcon />\n        </IconButton>\n      </div>\n    </div>\n  );\n}\n\nexport const ContentContainer = ({\n  firstContent,\n  secondContent,\n  title,\n  contentStyle,\n  containerClassName,\n}: any) => {\n  return (\n    <div\n      className={`main-container-controller  ${containerClassName}`}\n      style={{\n        width: \"100%\",\n        height: \"auto\",\n        display: \"flex\",\n        padding: \"5px\",\n      }}\n    >\n      <style>{contentStyle}</style>\n      <div\n        className=\"container-controller\"\n        style={{\n          flex: 1,\n          display: \"flex\",\n          width: \"100%\",\n          border: \"1px solid #64748b\",\n          position: \"relative\",\n        }}\n      >\n        <span\n          style={{\n            position: \"absolute\",\n            top: \"-15px\",\n            left: \"20px\",\n            background: \"#F1F1F1\",\n            padding: \"0 5px\",\n            fontSize: \"14px\",\n            fontWeight: \"bold\",\n          }}\n        >\n          {title}\n        </span>\n        <div\n          className=\"first-content\"\n          style={{\n            width: \"30%\",\n            height: \"100%\",\n            padding: \"10px 5px\",\n            boxSizing: \"border-box\",\n          }}\n        >\n          {firstContent}\n        </div>\n        <div\n          className=\"second-content\"\n          style={{\n            width: \"70%\",\n            height: \"100%\",\n            padding: \"10px 5px\",\n            boxSizing: \"border-box\",\n          }}\n        >\n          {secondContent}\n        </div>\n      </div>\n    </div>\n  );\n};\nconst ModalCheck = forwardRef(({ handleOnSave, handleOnClose }: any, ref) => {\n  const [showModal, setShowModal] = useState(false);\n  const [handleDelayClose, setHandleDelayClose] = useState(false);\n  const [blick, setBlick] = useState(false);\n\n  const checknoRef = useRef<HTMLInputElement>(null);\n  const bankRef = useRef<HTMLInputElement>(null);\n  const branchRef = useRef<HTMLInputElement>(null);\n  const remarksRef = useRef<HTMLTextAreaElement>(null);\n  const checkdateRef = useRef<HTMLInputElement>(null);\n  const amountRef = useRef<HTMLInputElement>(null);\n  const bankRefName = useRef(\"\");\n  const searchModalInputRef = useRef<HTMLInputElement>(null);\n\n  const closeDelay = () => {\n    setHandleDelayClose(true);\n    setTimeout(() => {\n      setShowModal(false);\n      setHandleDelayClose(false);\n      handleOnClose();\n    }, 100);\n  };\n  const closeDelayRef = useRef<any>(closeDelay);\n\n  useImperativeHandle(ref, () => ({\n    showModal: () => {\n      setShowModal(true);\n    },\n    clsoeModal: () => {\n      setShowModal(false);\n    },\n    getRefs: () => {\n      const refs = {\n        checknoRef,\n        bankRef,\n        branchRef,\n        remarksRef,\n        checkdateRef,\n        amountRef,\n        bankRefName,\n      };\n      return refs;\n    },\n    checknoRef,\n    bankRef,\n    branchRef,\n    remarksRef,\n    checkdateRef,\n    amountRef,\n    bankRefName,\n    searchModalInputRef,\n    closeDelay,\n  }));\n\n  const {\n    ModalComponent: ModalSearchBanks,\n    openModal: openModalSearchBanks,\n    closeModal: closeModalSearchBanks,\n    isLoading: isLoadingModalSearchbanks,\n  } = useQueryModalTable({\n    link: {\n      url: \"/task/accounting/search-pdc-banks\",\n      queryUrlName: \"searchPdcBanks\",\n    },\n    columns: [\n      { field: \"Bank_Code\", headerName: \"Code\", width: 130 },\n      { field: \"Bank\", headerName: \"Bank Name\", flex: 1 },\n    ],\n    queryKey: \"collection-banks\",\n    uniqueId: \"Bank_Code\",\n    responseDataKey: \"pdcBanks\",\n    onSelected: (selectedRowData, data) => {\n      wait(100).then(() => {\n        bankRefName.current = selectedRowData[0].Bank_Code;\n        if (bankRef.current) {\n          bankRef.current.value = selectedRowData[0].Bank;\n        }\n        branchRef.current?.focus();\n      });\n      closeModalSearchBanks();\n    },\n\n    searchRef: searchModalInputRef,\n  });\n\n  useEffect(() => {\n    window.addEventListener(\"keydown\", (e: any) => {\n      if (e.key === \"Escape\") {\n        closeDelayRef.current();\n      }\n    });\n  }, []);\n\n  return showModal ? (\n    <>\n      <div\n        style={{\n          position: \"fixed\",\n          top: 0,\n          bottom: 0,\n          left: 0,\n          right: 0,\n          background: \"transparent\",\n          zIndex: \"88\",\n        }}\n        onClick={() => {\n          setBlick(true);\n          setTimeout(() => {\n            setBlick(false);\n          }, 250);\n        }}\n      ></div>\n      <div\n        className=\"modal-add-check\"\n        style={{\n          height: blick ? \"202px\" : \"200px\",\n          width: blick ? \"60.3%\" : \"60%\",\n          border: \"1px solid #64748b\",\n          position: \"absolute\",\n          left: \"50%\",\n          top: \"50%\",\n          transform: \"translate(-50%, -75%)\",\n          display: \"flex\",\n          flexDirection: \"column\",\n          zIndex: handleDelayClose ? -100 : 100,\n          opacity: handleDelayClose ? 0 : 1,\n          transition: \"all 150ms\",\n          boxShadow: \"3px 6px 32px -7px rgba(0,0,0,0.75)\",\n        }}\n      >\n        <div\n          style={{\n            height: \"22px\",\n            background: \"white\",\n            display: \"flex\",\n            justifyContent: \"space-between\",\n            padding: \"5px\",\n            position: \"relative\",\n            alignItems: \"center\",\n          }}\n        >\n          <span style={{ fontSize: \"13px\", fontWeight: \"bold\" }}>\n            Check Details\n          </span>\n          <button\n            className=\"btn-check-exit-modal\"\n            style={{\n              padding: \"0 5px\",\n              borderRadius: \"0px\",\n              background: \"white\",\n              color: \"black\",\n              height: \"22px\",\n              position: \"absolute\",\n              top: 0,\n              right: 0,\n            }}\n            onClick={() => {\n              closeDelay();\n            }}\n          >\n            <CloseIcon sx={{ fontSize: \"22px\" }} />\n          </button>\n        </div>\n        <div\n          className=\"main-content\"\n          style={{\n            flex: 1,\n            background: \"#F1F1F1\",\n            padding: \"5px\",\n            display: \"flex\",\n          }}\n        >\n          <div\n            style={{\n              width: \"55%\",\n              display: \"flex\",\n              flexDirection: \"column\",\n              rowGap: \"5px\",\n              padding: \"10px\",\n            }}\n          >\n            <TextInput\n              label={{\n                title: \"Check No. : \",\n                style: {\n                  fontSize: \"12px\",\n                  fontWeight: \"bold\",\n                  width: \"70px\",\n                },\n              }}\n              input={{\n                type: \"text\",\n                style: { width: \"160px\" },\n                onKeyDown: (e) => {\n                  if (e.code === \"NumpadEnter\" || e.code === \"Enter\") {\n                    bankRef.current?.focus();\n                  }\n                },\n              }}\n              inputRef={checknoRef}\n            />\n            {isLoadingModalSearchbanks ? (\n              <LoadingButton loading={isLoadingModalSearchbanks} />\n            ) : (\n              <TextInput\n                containerStyle={{\n                  width: \"370px\",\n                }}\n                label={{\n                  title: \"Bank : \",\n                  style: {\n                    fontSize: \"12px\",\n                    fontWeight: \"bold\",\n                    width: \"70px\",\n                  },\n                }}\n                input={{\n                  disabled: false,\n                  type: \"text\",\n                  style: { width: \"300px\" },\n                  onKeyDown: (e) => {\n                    if (e.code === \"NumpadEnter\" || e.code === \"Enter\") {\n                      openModalSearchBanks(e.currentTarget.value);\n                    }\n                  },\n                }}\n                icon={<AccountBoxIcon sx={{ fontSize: \"18px\" }} />}\n                onIconClick={(e) => {\n                  e.preventDefault();\n                  if (bankRef.current) {\n                    openModalSearchBanks(bankRef.current.value);\n                  }\n                }}\n                inputRef={bankRef}\n              />\n            )}\n            <TextInput\n              label={{\n                title: \"Branch : \",\n                style: {\n                  fontSize: \"12px\",\n                  fontWeight: \"bold\",\n                  width: \"70px\",\n                },\n              }}\n              input={{\n                type: \"text\",\n                style: { width: \"300px\" },\n                onKeyDown: (e) => {\n                  if (e.code === \"NumpadEnter\" || e.code === \"Enter\") {\n                    remarksRef.current?.focus();\n                  }\n                },\n              }}\n              inputRef={branchRef}\n            />\n            <TextAreaInput\n              label={{\n                title: \"Remarks : \",\n                style: {\n                  fontSize: \"12px\",\n                  fontWeight: \"bold\",\n                  width: \"70px\",\n                },\n              }}\n              textarea={{\n                rows: 4,\n                style: { width: \"300px\" },\n                onKeyDown: (e) => {\n                  e.stopPropagation();\n                  if (\n                    (e.code === \"NumpadEnter\" && !e.shiftKey) ||\n                    (e.code === \"Enter\" && !e.shiftKey)\n                  ) {\n                    checkdateRef.current?.focus();\n                  }\n                },\n              }}\n              _inputRef={remarksRef}\n            />\n          </div>\n          <div\n            style={{\n              width: \"45%\",\n              display: \"flex\",\n              flexDirection: \"column\",\n              rowGap: \"5px\",\n              position: \"relative\",\n              padding: \"10px\",\n              alignItems: \"flex-end\",\n            }}\n          >\n            <TextInput\n              label={{\n                title: \"Date : \",\n                style: {\n                  fontSize: \"12px\",\n                  fontWeight: \"bold\",\n                  width: \"70px\",\n                },\n              }}\n              input={{\n                type: \"date\",\n                style: { width: \"200px\" },\n                defaultValue: format(new Date(), \"yyyy-MM-dd\"),\n                onKeyDown: (e) => {\n                  if (e.code === \"NumpadEnter\" || e.code === \"Enter\") {\n                    amountRef.current?.focus();\n                  }\n                },\n              }}\n              inputRef={checkdateRef}\n            />\n            <TextFormatedInput\n              label={{\n                title: \"Amount : \",\n                style: {\n                  fontSize: \"12px\",\n                  fontWeight: \"bold\",\n                  width: \"70px\",\n                },\n              }}\n              input={{\n                type: \"text\",\n                style: { width: \"200px\" },\n                onKeyDown: (e) => {\n                  if (e.code === \"NumpadEnter\" || e.code === \"Enter\") {\n                    if (handleOnSave) {\n                      if (!validateDate(checkdateRef.current?.value)) {\n                        return alert(\"Not Valid Date!\");\n                      }\n\n                      handleOnSave();\n                    }\n                  }\n                },\n              }}\n              inputRef={amountRef}\n            />\n            <div\n              className=\"modal-add-check-buttons\"\n              style={{\n                display: \"flex\",\n                columnGap: \"10px\",\n                flex: 1,\n                justifyContent: \"flex-end\",\n                alignItems: \"flex-end\",\n              }}\n            >\n              <Button\n                variant=\"contained\"\n                color=\"success\"\n                style={{\n                  height: \"22px\",\n                  fontSize: \"12px\",\n                }}\n                onClick={(e) => {\n                  if (handleOnSave) {\n                    if (!validateDate(checkdateRef.current?.value)) {\n                      return alert(\"Not Valid Date!\");\n                    }\n                    handleOnSave();\n                  }\n                }}\n              >\n                OK\n              </Button>\n              <Button\n                variant=\"contained\"\n                color=\"success\"\n                style={{\n                  height: \"22px\",\n                  fontSize: \"12px\",\n                }}\n                onClick={(e) => {\n                  closeDelay();\n                }}\n              >\n                Cancel\n              </Button>\n            </div>\n          </div>\n        </div>\n        {ModalSearchBanks}\n        <style>\n          {`\n              .btn-check-exit-modal:hover{\n                background:red !important;\n                color:white !important;\n              }\n            `}\n        </style>\n      </div>\n    </>\n  ) : null;\n});\n\nconst validateDate = (dateStr: any, dateFormat = \"yyyy-MM-dd\") => {\n  const parsedDate = parse(dateStr, dateFormat, new Date());\n  const isDateValid =\n    isValid(parsedDate) && format(parsedDate, dateFormat) === dateStr;\n  return isDateValid;\n};\n","import {\n  useState,\n  useContext,\n  createContext,\n  ReactElement,\n  forwardRef,\n  useImperativeHandle,\n} from \"react\";\nimport { Box, LinearProgress } from \"@mui/material\";\nimport {\n  DataGrid,\n  GridSlotsComponentsProps,\n  gridPageCountSelector,\n  GridPagination,\n  useGridApiContext,\n  useGridSelector,\n  GridRowSelectionModel,\n  GridColDef,\n  GridRowParams,\n  GridCellParams,\n  GridTreeNode,\n} from \"@mui/x-data-grid\";\nimport { TablePaginationProps } from \"@mui/material/TablePagination\";\nimport MuiPagination from \"@mui/material/Pagination\";\n\ninterface TableProps {\n  isLoading: boolean;\n  columns: Array<any>;\n  rows: Array<any>;\n  table_id: string;\n  isSingleSelection: boolean;\n  isRowFreeze: boolean;\n  dataSelection?: (selection: any, data: any, code: string | null) => void;\n  CustomFooterComponent?: any;\n  isRowSelectable?: ((params: GridRowParams<any>) => boolean) | undefined;\n  getCellClassName?:\n    | ((params: GridCellParams<any, any, any, GridTreeNode>) => string)\n    | undefined;\n  footerChildren?: (\n    rowSelectionModel: GridRowSelectionModel,\n    rows: Array<any>\n  ) => ReactElement;\n  footerPaginationPosition?: string;\n  showFooterSelectedCount?: boolean;\n  checkboxSelection?: boolean | undefined;\n}\n\nconst TableContext = createContext<{\n  rowSelectionModel: GridRowSelectionModel;\n  rows: Array<any>;\n  footerPaginationPosition?: string;\n  showFooterSelectedCount?: boolean;\n  footerChildren: (\n    rowSelectionModel: GridRowSelectionModel,\n    rows: Array<any>\n  ) => ReactElement;\n}>({\n  rows: [],\n  rowSelectionModel: [],\n  footerChildren: () => <div></div>,\n  footerPaginationPosition: \"right-left\",\n  showFooterSelectedCount: true,\n});\nconst Table = forwardRef(\n  (\n    {\n      isLoading,\n      columns,\n      rows,\n      table_id,\n      isSingleSelection,\n      isRowFreeze,\n      dataSelection,\n      CustomFooterComponent = DefaultooterComponent,\n      isRowSelectable,\n      getCellClassName,\n      checkboxSelection = true,\n      footerChildren = (\n        rowSelectionModel: GridRowSelectionModel,\n        rows: Array<any>\n      ) => <div></div>,\n      footerPaginationPosition = \"right-left\",\n      showFooterSelectedCount = true,\n    }: TableProps,\n    ref\n  ) => {\n    const [selectedRows, setSelectedRows] = useState<any>([]);\n\n    useImperativeHandle(ref, () => ({\n      removeSelection: () => {\n        setSelectedRows([]);\n      },\n      getSelectedRows: () => {\n        return rows.filter((item: any) =>\n          selectedRows?.includes(item[table_id])\n        );\n      },\n      setSelectedRows: (data: Array<any>) => {\n        setSelectedRows(data);\n      },\n    }));\n\n    function onSelectionChange(selection: any, data: any, code: string | null) {\n      if (dataSelection) {\n        dataSelection(selection, data, code);\n      }\n    }\n    let freezeArray: Array<any> = [];\n\n    return (\n      <TableContext.Provider\n        value={{\n          showFooterSelectedCount,\n          footerPaginationPosition,\n          rowSelectionModel: selectedRows,\n          rows,\n          footerChildren,\n        }}\n      >\n        <DataGrid\n          slots={{\n            loadingOverlay: LinearProgress,\n            footer: CustomFooterComponent,\n          }}\n          initialState={{\n            pagination: { paginationModel: { pageSize: 100 } },\n          }}\n          loading={isLoading}\n          getRowId={(row) => row[table_id]}\n          columns={columns.filter((col: any) => !col.hide) as GridColDef<any>[]}\n          rows={rows}\n          showCellVerticalBorder={true}\n          showColumnVerticalBorder={true}\n          checkboxSelection={checkboxSelection}\n          rowSelectionModel={selectedRows}\n          rowHeight={25}\n          columnHeaderHeight={35}\n          pageSizeOptions={[10, 20, 35, 50, 75, 100]}\n          sx={{\n            \"& .cash\": {\n              color: \"#ec4899\",\n            },\n            \"& .check\": {\n              color: \"#0891b2\",\n            },\n            \"& .approved\": {\n              color: \"green\",\n            },\n            \"& .pending\": {\n              color: \"orange\",\n            },\n            \"& .disapproved\": {\n              color: \"red\",\n            },\n            \"& .normal\": {\n              color: \"red\",\n            },\n            \"& .MuiDataGrid-row.Mui-selected:hover\": {\n              color: \"black\",\n              \"& .MuiSvgIcon-root \": {\n                fill: \"#3b82f6\",\n              },\n            },\n            \"& .hover-keyboard\": {\n              background: \"#2563eb\",\n              color: \"white\",\n              \"& .MuiSvgIcon-root \": {\n                fill: \"white\",\n              },\n            },\n            \"& .MuiDataGrid-row:hover\": {\n              background: \"#2563eb\",\n              color: \"white\",\n              \"& .MuiSvgIcon-root \": {\n                fill: \"white\",\n              },\n            },\n            \"& .MuiDataGrid-row.hover\": {\n              background: \"#2563eb\",\n              color: \"white\",\n              \"& .MuiSvgIcon-root \": {\n                fill: \"white\",\n              },\n            },\n            \"& .MuiTablePagination-root p \": {\n              padding: \"0 !important\",\n            },\n\n            ...{\n              \"& .MuiDataGrid-columnHeaders\": {\n                background: \"#64748b\",\n                color: \"white\",\n                fontSize: \"14px\",\n                // borderBottomColor: \"#38bdf8\",\n              },\n              \"& .MuiDataGrid-columnHeaderCheckbox .MuiDataGrid-columnHeaderTitleContainer .MuiSvgIcon-root \":\n                {\n                  display: isSingleSelection || isRowFreeze ? \"none\" : \"block\",\n                  fill: \"white\",\n                },\n              \"& .MuiDataGrid-columnHeaderCheckbox .MuiDataGrid-columnHeaderTitleContainer input \":\n                {\n                  display: isSingleSelection || isRowFreeze ? \"none\" : \"block\",\n                },\n            },\n            ...{\n              fontSize: 13,\n              fontWeight: 500,\n              \"& .MuiDataGrid-checkboxInput\": {\n                height: \"27px\",\n                width: \"27px\",\n              },\n              \"& .MuiDataGrid-checkboxInput svg\": {\n                height: \"20px\",\n                width: \"20px\",\n              },\n            },\n          }}\n          // onRowDoubleClick={(e, r) => {\n          //   console.log(e, r);\n          // }}\n\n          onRowSelectionModelChange={(selection) => {\n            if (isRowFreeze) {\n              if (selection.length <= 0) return;\n              freezeArray = selection;\n              if (selectedRows.includes(freezeArray[freezeArray.length - 1]))\n                return;\n\n              setSelectedRows(selection);\n\n              onSelectionChange([selection[selection.length - 1]], rows, null);\n              return;\n            }\n\n            if (!isRowFreeze && isSingleSelection) {\n              if (selectedRows && selectedRows?.length > 0) {\n                const selectionSet = new Set(selectedRows);\n                setSelectedRows(\n                  selection.filter((s: any) => !selectionSet.has(s))\n                );\n              } else {\n                setSelectedRows(selection);\n              }\n            } else {\n              setSelectedRows(selection);\n            }\n\n            onSelectionChange([selection[selection.length - 1]], rows, null);\n          }}\n          onCellKeyDown={(__: any, key: any) => {\n            const keyFinding = [\"NumpadEnter\", \"Enter\", \"Delete\", \"Backspace\"];\n            if (!keyFinding.includes(key.code)) {\n              return;\n            }\n            key.preventDefault();\n            if (key.code === \"Enter\" || key.code === \"NumpadEnter\") {\n              if (isSingleSelection && !isRowFreeze) {\n                return setSelectedRows((data: any) => {\n                  if (data && data.length > 0 && data[0] === __.rowNode.id) {\n                    onSelectionChange([], rows, key.code);\n                    return [];\n                  }\n                  onSelectionChange([__.rowNode.id], rows, key.code);\n                  return [__.rowNode.id];\n                });\n              } else {\n                setSelectedRows((data: any) => {\n                  if (\n                    data &&\n                    !isRowFreeze &&\n                    data.length > 0 &&\n                    data.includes(__.rowNode.id)\n                  ) {\n                    data = data.filter((item: any) => item !== __.rowNode.id);\n                    onSelectionChange([], rows, key.code);\n                    return data;\n                  }\n                  if (\n                    data &&\n                    isRowFreeze &&\n                    data.length > 0 &&\n                    data.includes(__.rowNode.id)\n                  ) {\n                    return data;\n                  }\n                  onSelectionChange([__.rowNode.id], rows, key.code);\n                  return [...data, __.rowNode.id];\n                });\n              }\n              return;\n            }\n            if (key.code === \"Delete\" || key.code === \"Backspace\") {\n              setSelectedRows([__.rowNode.id]);\n              return onSelectionChange([__.rowNode.id], rows, key.code);\n            }\n          }}\n          disableVirtualization\n          isRowSelectable={isRowSelectable}\n          getCellClassName={getCellClassName}\n        />\n      </TableContext.Provider>\n    );\n  }\n);\n\nexport default Table;\nfunction Pagination({\n  page,\n  onPageChange,\n  className,\n}: Pick<TablePaginationProps, \"page\" | \"onPageChange\" | \"className\">) {\n  const apiRef = useGridApiContext();\n  const pageCount = useGridSelector(apiRef, gridPageCountSelector);\n\n  return (\n    <MuiPagination\n      variant=\"outlined\"\n      color=\"primary\"\n      className={className}\n      count={pageCount}\n      page={page + 1}\n      onChange={(event, newPage) => {\n        onPageChange(event as any, newPage - 1);\n      }}\n    />\n  );\n}\n\nfunction CustomPagination(props: any) {\n  return <GridPagination ActionsComponent={Pagination} {...props} />;\n}\nfunction DefaultooterComponent(\n  props: NonNullable<GridSlotsComponentsProps[\"footer\"]>\n) {\n  const {\n    rowSelectionModel,\n    showFooterSelectedCount,\n    footerPaginationPosition,\n    footerChildren,\n    rows,\n  } = useContext(TableContext);\n  return (\n    <Box\n      sx={{\n        columnGap: \"50px\",\n        display: \"flex\",\n        width: \"100%\",\n        justifyContent: \"space-between\",\n        px: 3,\n        alignItems: \"center\",\n        flexDirection:\n          footerPaginationPosition === \"right-left\" ? \"row-reverse\" : \"row\",\n      }}\n    >\n      <CustomPagination {...props} />\n      <Box\n        sx={{\n          display: \"flex\",\n          justifyContent:\n            footerPaginationPosition === \"right-left\"\n              ? \"flex-start\"\n              : \"flex-end\",\n          flex: 1,\n          alignItems: \"center\",\n        }}\n      >\n        {showFooterSelectedCount && (\n          <div>Selected:{rowSelectionModel?.length}</div>\n        )}\n        <div>{footerChildren(rowSelectionModel, rows)}</div>\n      </Box>\n    </Box>\n  );\n}\n","import React from \"react\";\nimport {\n  GridRowSelectionModel,\n  GridRowParams,\n  GridCellParams,\n  GridTreeNode,\n} from \"@mui/x-data-grid\";\nimport { Modal, Box, Typography, IconButton, TextField } from \"@mui/material\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport Table from \"./Table\";\n\ninterface ModalWithTableParams {\n  height: number;\n  isLoading: boolean;\n  queryKey: string;\n  columns: Array<any>;\n  onSelectionChange: (rowSelectionModel: Array<any>, data: Array<any>) => void;\n  setRows: React.Dispatch<React.SetStateAction<GridRowSelectionModel>>;\n  rows: GridRowSelectionModel;\n  id: string;\n  onCloseModal: () => void;\n  onClickCloseIcon: () => void;\n  showModal: boolean;\n  searchOnChange:\n  | React.ChangeEventHandler<HTMLInputElement | HTMLTextAreaElement>\n  | undefined;\n  title?: string;\n  searchRef?: React.RefObject<HTMLInputElement>;\n  onCellKeyDown?: any;\n  onSearchKeyEnter?: (search: string) => void;\n  isRowSelectable?: ((params: GridRowParams<any>) => boolean) | undefined;\n  getCellClassName?:\n  | ((params: GridCellParams<any, any, any, GridTreeNode>) => string)\n  | undefined;\n}\n\nconst style = {\n  position: \"absolute\" as \"absolute\",\n  top: \"50%\",\n  left: \"50%\",\n  transform: \"translate(-50%, -50%)\",\n  width: \"80%\",\n  bgcolor: \"background.paper\",\n  boxShadow: 24,\n  p: 4,\n  heigth: \"auto\",\n};\n\nexport default function ModalWithTable({\n  height,\n  isLoading,\n  queryKey,\n  columns,\n  onSelectionChange,\n  setRows,\n  rows,\n  id,\n  onCloseModal,\n  showModal,\n  onClickCloseIcon,\n  searchOnChange,\n  title = \"\",\n  searchRef,\n  onCellKeyDown,\n  onSearchKeyEnter = () => { },\n  isRowSelectable,\n  getCellClassName,\n}: ModalWithTableParams) {\n  const mainId = generateRandomClass();\n\n  return (\n    <Modal\n      open={showModal}\n      onClose={onCloseModal}\n      aria-labelledby=\"modal-modal-title\"\n      aria-describedby=\"modal-modal-description\"\n    >\n      <Box sx={style}>\n        <Typography id=\"modal-modal-title\" variant=\"h6\" component=\"h2\" mb={2}>\n          {title}\n        </Typography>\n        <TextField\n          size=\"small\"\n          label=\"Search\"\n          sx={{ marginBottom: \"10px\" }}\n          fullWidth\n          onChange={searchOnChange}\n          InputProps={{\n            inputRef: searchRef,\n          }}\n          onKeyDown={(e) => {\n            if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n              e.preventDefault();\n              onSearchKeyEnter(searchRef?.current?.value as string);\n            }\n            keyBoardSelectionTable(\n              e,\n              mainId,\n              searchRef?.current as HTMLInputElement\n            );\n          }}\n        />\n        <div\n          className={`${mainId} main-table-selection-container`}\n          style={{ position: \"relative\", height: `${height + 20}px` }}\n        >\n          <Table\n            isSingleSelection={true}\n            isRowFreeze={false}\n            columns={columns}\n            isLoading={isLoading}\n            dataSelection={(selection, data, code) => {\n              onSelectionChange(selection, data);\n            }}\n            table_id={id}\n            rows={rows}\n            isRowSelectable={isRowSelectable}\n            getCellClassName={getCellClassName}\n          />\n        </div>\n\n        <div style={{ position: \"absolute\", top: \"10px\", right: \"10px\" }}>\n          <IconButton\n            aria-label=\"search-client\"\n            color=\"secondary\"\n            onClick={onClickCloseIcon}\n          >\n            <CloseIcon />\n          </IconButton>\n        </div>\n      </Box>\n    </Modal>\n  );\n}\n\nexport function generateRandomClass() {\n  const randomNumber = Math.floor(Math.random() * 10000);\n  const randomClass = \"main-\" + randomNumber;\n  return randomClass;\n}\n\nfunction keyBoardUpDown(className: string, el: HTMLElement) {\n  const firstRowParent = document.querySelector(\n    `.${className} .MuiDataGrid-row`\n  );\n  const firstInput = firstRowParent?.querySelector(\"input\");\n  firstInput?.focus();\n  const event = new MouseEvent(\"mouseenter\", {\n    bubbles: true,\n    cancelable: true,\n    view: window,\n  });\n  firstRowParent?.dispatchEvent(event);\n  firstInput?.addEventListener(\"keydown\", (es: any) => {\n    if (es.key === \"ArrowUp\") {\n      es.preventDefault();\n      el.focus();\n    }\n    if (es.key === \"ArrowUp\") {\n      firstRowParent?.classList.remove(\"hover-keyboard\");\n    }\n  });\n}\n\nexport function keyBoardSelectionTable(\n  e: React.KeyboardEvent<HTMLDivElement>,\n  className: string,\n  el: HTMLElement\n) {\n  const mainId = className;\n  if (e.code === \"ArrowDown\") {\n    const rows = document.querySelectorAll(`.${mainId} .MuiDataGrid-row`);\n    e.preventDefault();\n    rows[0]?.classList.add(\"hover-keyboard\");\n    keyBoardUpDown(className, el);\n    rows.forEach((el, idx) => {\n      el.addEventListener(\"keydown\", (es: any) => {\n        if (es.key === \"ArrowUp\") {\n          if (idx <= 0) {\n            return;\n          }\n\n          es.preventDefault();\n          rows[idx]?.classList.remove(\"hover-keyboard\");\n          rows[idx - 1]?.classList.add(\"hover-keyboard\");\n          return;\n        }\n        if (es.key === \"ArrowDown\") {\n          es.preventDefault();\n          if (idx >= rows.length - 1) {\n            return;\n          }\n          rows[idx]?.classList.remove(\"hover-keyboard\");\n          rows[idx + 1]?.classList.add(\"hover-keyboard\");\n        }\n      });\n    });\n  }\n}\n","import { useContext, useState } from \"react\";\nimport { useQuery } from \"react-query\";\nimport { AuthContext, User } from \"../components/AuthContext\";\nimport {\n  GridRowSelectionModel,\n  GridCellParams,\n  GridTreeNode,\n} from \"@mui/x-data-grid\";\nimport ModalWithTable from \"../components/ModalWithTable\";\nimport { flushSync } from \"react-dom\";\nimport { AxiosResponse, AxiosInstance } from \"axios\";\nimport { GridRowParams } from \"@mui/x-data-grid\";\ninterface QueryModalTableParamsType {\n  link?: {\n    url: string;\n    queryUrlName: string;\n  };\n  uniqueId: string;\n  queryKey: string;\n  responseDataKey: string;\n  columns: Array<any>;\n  onSelected?: (selectedRowData: Array<any>, data: Array<any>) => void;\n  onRemoveSelected?: (data: Array<any>) => void;\n  onSuccess?: (data: any) => void;\n  searchRef?: React.RefObject<HTMLInputElement>;\n  onCellKeyDown?: any;\n  onCloseFunction?: (search: any) => void;\n  CustomizeAxios?: (\n    myAxios: AxiosInstance,\n    user: User | null,\n    link: QueryModalTableParamsType[\"link\"],\n    search?: string\n  ) => Promise<AxiosResponse<any, any>>;\n  isRowSelectable?: ((params: GridRowParams<any>) => boolean) | undefined;\n  getCellClassName?:\n    | ((params: GridCellParams<any, any, any, GridTreeNode>) => string)\n    | undefined;\n}\n\nasync function CustomizeAxiosFunc(\n  myAxios: AxiosInstance,\n  user: User | null,\n  link: QueryModalTableParamsType[\"link\"],\n  search: string = \"\"\n) {\n  return myAxios.get(`${link?.url}?${link?.queryUrlName}=${search}`, {\n    headers: {\n      Authorization: `Bearer ${user?.accessToken}`,\n    },\n  });\n}\n\nconst useQueryModalTable = ({\n  link,\n  uniqueId,\n  queryKey,\n  responseDataKey,\n  columns,\n  onSelected = () => {},\n  onRemoveSelected = () => {},\n  onSuccess = () => {},\n  searchRef,\n  onCellKeyDown,\n  onCloseFunction = () => {},\n  CustomizeAxios = CustomizeAxiosFunc,\n  isRowSelectable,\n  getCellClassName,\n}: QueryModalTableParamsType) => {\n  const { myAxios, user } = useContext(AuthContext);\n  const [show, setShowModal] = useState(false);\n  const [rows, setRows] = useState<GridRowSelectionModel>([]);\n  async function customizeAxiostool(search: string = \"\") {\n    return await CustomizeAxios(myAxios, user, link, search);\n  }\n  const { isLoading, refetch } = useQuery({\n    queryKey: queryKey,\n    queryFn: async () => await customizeAxiostool(),\n    onSuccess: (res) => {\n      const response = res as any;\n      setRows(response.data[responseDataKey]);\n      onSuccess(response);\n    },\n    refetchOnWindowFocus: false,\n  });\n\n  const openModal = (search: string = \"\") => {\n    flushSync(() => {\n      setShowModal(true);\n    });\n    if (searchRef?.current) {\n      searchRef.current.value = search;\n      customizeAxiostool(search).then((res: any) => {\n        if (!res?.data.success) {\n          return alert(`Error : ${res?.data.message}`);\n        }\n        const response = res as any;\n        setRows(response.data[responseDataKey]);\n        if (searchRef?.current) searchRef.current.focus();\n      });\n    }\n  };\n\n  const closeModal = () => {\n    setShowModal(false);\n    if (onCloseFunction) {\n      onCloseFunction(searchRef?.current?.value);\n    }\n  };\n\n  const ModalComponent = (\n    <ModalWithTable\n      getCellClassName={getCellClassName}\n      searchRef={searchRef}\n      showModal={show}\n      onCloseModal={() => {\n        setShowModal(false);\n        if (onCloseFunction) {\n          onCloseFunction(searchRef?.current?.value);\n        }\n      }}\n      onClickCloseIcon={() => {\n        setShowModal(false);\n        if (onCloseFunction) {\n          onCloseFunction(searchRef?.current?.value);\n        }\n      }}\n      searchOnChange={(e) => {\n        // myAxios\n        //   .get(`${link.url}?${link.queryUrlName}=${e.target.value}`, {\n        //     headers: {\n        //       Authorization: `Bearer ${user?.accessToken}`,\n        //     },\n        //   })\n        //   .then((res: any) => {\n        //     if (!res?.data.success) {\n        //       return alert(`Error : ${res?.data.message}`);\n        //     }\n        //     const response = res as any;\n        //     setRows(response.data[responseDataKey]);\n        //   });\n      }}\n      onSearchKeyEnter={(value) => {\n        customizeAxiostool(value).then((res: any) => {\n          if (!res?.data.success) {\n            return alert(`Error : ${res?.data.message}`);\n          }\n          const response = res as any;\n          setRows(response.data[responseDataKey]);\n        });\n      }}\n      onCellKeyDown={onCellKeyDown}\n      height={300}\n      isLoading={isLoading}\n      queryKey={queryKey}\n      columns={columns}\n      onSelectionChange={(rowSelectionModel, data) => {\n        if (rowSelectionModel.length <= 0) {\n          return onRemoveSelected(data);\n        }\n        const selectedIDs = new Set(rowSelectionModel);\n        const selectedRowData = data.filter((row: any) => {\n          return selectedIDs.has(row[uniqueId].toString());\n        });\n        if (selectedRowData.length <= 0) return;\n        onSelected(selectedRowData, data);\n      }}\n      id={uniqueId}\n      rows={rows}\n      setRows={setRows}\n      isRowSelectable={isRowSelectable}\n    />\n  );\n\n  return {\n    show,\n    rows,\n    isLoading,\n    openModal,\n    closeModal,\n    ModalComponent,\n    refetch,\n  };\n};\n\nexport default useQueryModalTable;\n","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-7 3c1.93 0 3.5 1.57 3.5 3.5S13.93 13 12 13s-3.5-1.57-3.5-3.5S10.07 6 12 6zm7 13H5v-.23c0-.62.28-1.2.76-1.58C7.47 15.82 9.64 15 12 15s4.53.82 6.24 2.19c.48.38.76.97.76 1.58V19z\"\n}), 'AccountBox');\nexports.default = _default;","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 8V4l8 8-8 8v-4H4V8z\"\n}), 'Forward');\nexports.default = _default;","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19 8H5c-1.66 0-3 1.34-3 3v6h4v4h12v-4h4v-6c0-1.66-1.34-3-3-3zm-3 11H8v-5h8v5zm3-7c-.55 0-1-.45-1-1s.45-1 1-1 1 .45 1 1-.45 1-1 1zm-1-9H6v4h12V3z\"\n}), 'LocalPrintshop');\nexports.default = _default;"],"names":["debitColumn","key","label","flex","width","type","hide","creditColumn","queryKeyPaymentType","queryKeyNewORNumber","Collection","_getSelectedItem","_queryFn","_getSelectedItem2","_getSelectedItem3","_getSelectedItem4","_mutationFn","_queryFn2","_mutationFn2","_mutationFn3","_saveCashDebit","_saveCredit","_ref2","debitTable","useRef","creditTable","modalCheckRef","_useState","useState","_useState2","_slicedToArray","paymentType","setPaymentType","_useState3","_useState4","totalDebit","setTotalDebit","_useState5","_useState6","totalCredit","setTotalCredit","_useState7","_useState8","collectionMode","setCollectionMode","searchRef","ornoSubRef","ornoRef","dateRef","pnClientRef","clientNameRef","IDNo","paymentTypeRef","amountDebitRef","buttonCshSave","buttonCheckSave","buttonCheckList","transactionRef","amountCreditRef","faoRef","remarksRef","vatTypeRef","invoiceRef","foaIDNoRef","accCodeRef","accTitleRef","accTCRef","_useContext","useContext","AuthContext","myAxios","user","executeQueryToClient","useExecuteQueryFromClient","disableFields","_useUpwardTableModalS","useUpwardTableModalSearch","column","query","search","current","concat","value","getSelectedItem","_x","_x2","_x3","_x4","_asyncToGenerator","_regeneratorRuntime","mark","_callee","rowItm","_","rowIdx","__","dt","checkDetails","wrap","_context","prev","next","sent","data","wait","then","checknoRef","Check_No","bankRef","Bank","branchRef","Branch","Remarks","checkdateRef","Check_Date","amountRef","Check_Amnt","bankRefName","BName","saveCheckDebit","closeModal","_buttonCheckList$curr","focus","stop","apply","arguments","UpwardTableModalSearch","openModal","_useQuery","useQuery","queryKey","queryFn","_callee2","_context2","get","headers","Authorization","accessToken","abrupt","refetchOnWindowFocus","paymentTypeLoading","isLoading","transactionDesc","_useUpwardTableModalS2","useUpwardTableModalSearchSafeMode","size","link","_x5","_x6","_x7","_x8","_callee3","_context3","_paymentTypeRef$curre","_rowItm$","console","log","clientCloseModal","ClientUpwardTableModalSearch","clientOpenModal","_useUpwardTableModalS3","_x9","_x10","_x11","_x12","_callee4","_context4","_remarksRef$current","_rowItm$2","clientCreditCloseModal","ClientCreditUpwardTableModalSearch","clientCreditOpenModal","_useUpwardTableModalS4","_x13","_x14","_x15","_x16","_callee5","_context5","resetCredit","resetDebit","mutateCollectionDataSearch","ORNo","searchCollectionCreditCloseModal","SearchCollectionUpwardTableModalSearch","searchCollectionCreditOpenModal","_useMutation","useMutation","mutationKey","mutationFn","_x17","_callee6","variables","_context6","post","onSuccess","res","dataCollection","collection","Date_OR","ID_No","Short","debit","credit","i","length","Payment","toString","isCash","toLowerCase","push","Amount","formatNumber","parseFloat","Debit","replace","format","Date","Bank_Branch","Acct_Code","DRCode","Acct_Title","DRTitle","Deposit_Slip","SlipCode","Cntr","DRRemarks","TC","Bank_Code","BankName","Purpose","temp_id","transaction","amount","Credit","CRRemarks","Code","CRCode","Title","CRTitle","Account_No","CRLoanID","Name","CRLoanName","VATType","CRVATType","invoiceNo","CRInvoiceNo","setDataFormated","reduce","sum","subArray","loadingCollectionDataSearch","mutate","_useQuery2","_callee7","_context7","response","_response$data","_response$data2","collectionID","NewORNoLoading","refetchNewOR","refetch","_useMutation2","_x18","_callee8","_context8","mode","success","resetCollection","Swal","position","icon","title","message","showConfirmButton","timer","loadingAddNew","_useMutation3","_x19","_callee9","_context9","responseType","pdfBlob","Blob","pdfUrl","URL","createObjectURL","window","open","process","encodeURIComponent","mutatePrint","isLoadingPrint","_debitTable$current","_creditTable$current","_pnClientRef$current","setData","refs","autoClose","undefined","_callee11","_refs$amountRef$curre","_refs$checknoRef$curr","_refs$checkdateRef$cu","_refs$branchRef$curre","_refs$remarksRef$curr","_refs$bankRef$current","checkno","checkdate","branch","remarks","bank","getSelectedRow","debitTableData","_dd$data3","_dd$data4","dd","_debitTableData","newDataFormatted","newDataTable","_context11","checkNoIsExist","alert","getData","toLocaleString","minimumFractionDigits","maximumFractionDigits","setSelectedRow","resetCheckBox","map","itm","_toConsumableArray","closeDelay","saveCredit","_callee12","_dd$data$data","_faoRef$current","_transactionRef$curre","_amountCreditRef$curr","_faoRef$current2","_remarksRef$current2","_vatTypeRef$current","_invoiceRef$current","creditTableData","_transactionRef$curre2","_amountCreditRef$curr2","_faoRef$current3","_remarksRef$current3","_vatTypeRef$current2","_invoiceRef$current2","_creditTableData","newCreditTableData","_dd","taxableamt","inputtax","_faoRef$current4","_remarksRef$current4","_invoiceRef$current3","_dd$data5","_dd$data6","_TC$data","newData","_faoRef$current5","_remarksRef$current5","_invoiceRef$current4","_dd$data7","_dd$data8","_TC$data2","_newData","_context12","isNaN","splice","_modalCheckRef$curren","setFocus","_amountDebitRef$curre3","_transactionRef$curre3","handleOnAdd","handleOnSave","_ornoRef$current","_dateRef$current","_pnClientRef$current3","_clientNameRef$curren","_pnClientRef$current2","_paymentTypeRef$curre2","_transactionRef$curre4","obj","toFixed","creditTableDataFormatted","debitTableDataFormatted","state","PNo","JSON","stringify","codeCondfirmationAlert","isUpdate","cb","userCodeConfirmation","_objectSpread","saveCondfirmationAlert","isConfirm","handleOnClose","text","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","result","isConfirmed","handleOnPrint","reportTitle","_jsxs","className","style","height","background","children","_jsx","PageHelmet","ModalCheck","ref","getRefs","_buttonCheckSave$curr","Loading","display","flexDirection","padding","columnGap","TextInput","containerClassName","containerStyle","fontSize","fontWeight","input","onKeyDown","e","preventDefault","currentTarget","SearchIcon","sx","onIconClick","inputRef","alignItems","IconButton","color","onClick","AddIcon","disabled","SaveIcon","LocalPrintshopIcon","CloseIcon","border","rowGap","LoadingButton","loading","readOnly","code","disableIcon","RestartAltIcon","defaultValue","_pnClientRef$current4","AccountBoxIcon","ContentContainer","firstContent","marginTop","SelectInput","selectRef","select","_amountDebitRef$curre4","onChange","target","_buttonCheckSave$curr2","datasource","values","borderRadius","_modalCheckRef$curren2","showModal","_modalCheckRef$curren3","_modalCheckRef$curren4","TextFormatedInput","_buttonCshSave$curren","click","_x20","_x21","_callee10","_amountDebitRef$curre","_dd$data","_dd$data2","_amountDebitRef$curre2","_context10","saveCashDebit","ForwardIcon","Button","startIcon","variant","secondContent","DataGridViewReact","columns","rows","minHeight","_x22","_callee13","_modalCheckRef$curren5","_buttonCheckSave$curr3","_buttonCheckSave$curr4","strBank","_context13","split","confirm","textAlign","contentStyle","htmlFor","Autocomplete","id","DisplayMember","DataSource","disableInput","selected","Description","onKeydown","_amountCreditRef$curr3","_transactionRef$curre5","_faoRef$current6","TextAreaInput","textarea","_vatTypeRef$current3","stopPropagation","shiftKey","_inputRef","_invoiceRef$current5","_ref3","top","left","boxSizing","forwardRef","_ref4","_useState9","_useState10","setShowModal","_useState11","_useState12","handleDelayClose","setHandleDelayClose","_useState13","_useState14","blick","setBlick","searchModalInputRef","setTimeout","closeDelayRef","useImperativeHandle","clsoeModal","_useQueryModalTable","useQueryModalTable","url","queryUrlName","field","headerName","uniqueId","responseDataKey","onSelected","selectedRowData","_branchRef$current","closeModalSearchBanks","ModalSearchBanks","ModalComponent","openModalSearchBanks","isLoadingModalSearchbanks","useEffect","addEventListener","_Fragment","bottom","right","zIndex","transform","opacity","transition","boxShadow","justifyContent","_bankRef$current","_remarksRef$current6","_checkdateRef$current","_amountRef$current","_checkdateRef$current2","validateDate","_checkdateRef$current3","dateStr","dateFormat","parsedDate","parse","isValid","TableContext","createContext","rowSelectionModel","footerChildren","footerPaginationPosition","showFooterSelectedCount","_ref","table_id","isSingleSelection","isRowFreeze","dataSelection","_ref$CustomFooterComp","CustomFooterComponent","DefaultooterComponent","isRowSelectable","getCellClassName","_ref$checkboxSelectio","checkboxSelection","_ref$footerChildren","_ref$footerPagination","_ref$showFooterSelect","selectedRows","setSelectedRows","onSelectionChange","selection","removeSelection","getSelectedRows","filter","item","includes","freezeArray","Provider","DataGrid","slots","loadingOverlay","LinearProgress","footer","initialState","pagination","paginationModel","pageSize","getRowId","row","col","showCellVerticalBorder","showColumnVerticalBorder","rowHeight","columnHeaderHeight","pageSizeOptions","fill","onRowSelectionModelChange","selectionSet","Set","s","has","onCellKeyDown","rowNode","disableVirtualization","Pagination","page","onPageChange","apiRef","useGridApiContext","pageCount","useGridSelector","gridPageCountSelector","MuiPagination","count","event","newPage","CustomPagination","props","GridPagination","ActionsComponent","Box","px","bgcolor","p","heigth","ModalWithTable","setRows","onCloseModal","onClickCloseIcon","searchOnChange","_ref$title","_ref$onSearchKeyEnter","onSearchKeyEnter","mainId","Math","floor","random","Modal","onClose","Typography","component","mb","TextField","marginBottom","fullWidth","InputProps","_searchRef$current","el","_rows$","document","querySelectorAll","classList","add","firstRowParent","querySelector","firstInput","MouseEvent","bubbles","cancelable","view","dispatchEvent","es","remove","keyBoardUpDown","forEach","idx","_rows$idx","_rows","_rows$idx2","_rows2","keyBoardSelectionTable","Table","CustomizeAxiosFunc","_CustomizeAxiosFunc","_args","_customizeAxiostool","_ref$onSelected","_ref$onRemoveSelected","onRemoveSelected","_ref$onSuccess","_ref$onCloseFunction","onCloseFunction","_ref$CustomizeAxios","CustomizeAxios","show","customizeAxiostool","_args2","flushSync","_searchRef$current2","_searchRef$current3","selectedIDs","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d"],"sourceRoot":""}