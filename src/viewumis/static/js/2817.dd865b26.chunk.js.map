{"version":3,"file":"static/js/2817.dd865b26.chunk.js","mappings":"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","sources":["components/Helmet.tsx","feautures/Admin/Task/Accounting/PostDateChecks.tsx","../node_modules/@mui/icons-material/AccountBox.js","../node_modules/@mui/icons-material/Add.js","../node_modules/@mui/icons-material/Download.js","../node_modules/@mui/icons-material/DriveFolderUpload.js","../node_modules/@mui/icons-material/Save.js"],"sourcesContent":["\r\nimport { Helmet } from \"react-helmet\";\r\n\r\nconst PageHelmet = ({ title = '' }: { title: string }) => {\r\n    const imgUrl = process.env.REACT_APP_IMAGE_URL;\r\n    const department = process.env.REACT_APP_DEPARTMENT\r\n    return (\r\n        <Helmet>\r\n            <title>{`${department} - ${title}`}</title>\r\n            <link rel=\"icon\" type=\"image/png\" href={`${imgUrl}/logo.png`} />\r\n        </Helmet>\r\n    );\r\n};\r\n\r\nexport default PageHelmet;","import React, {\n  useContext,\n  useState,\n  useRef,\n  useEffect,\n  useCallback,\n  useImperativeHandle,\n  forwardRef,\n} from \"react\";\nimport { Box, Button, IconButton, MenuItem, Menu } from \"@mui/material\";\nimport AddIcon from \"@mui/icons-material/Add\";\nimport { useMutation, useQuery } from \"react-query\";\nimport Swal from \"sweetalert2\";\nimport SaveIcon from \"@mui/icons-material/Save\";\nimport { AuthContext } from \"../../../../components/AuthContext\";\nimport PersonSearchIcon from \"@mui/icons-material/PersonSearch\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport { LoadingButton } from \"@mui/lab\";\nimport RestartAltIcon from \"@mui/icons-material/RestartAlt\";\nimport DownloadIcon from \"@mui/icons-material/Download\";\nimport {\n  codeCondfirmationAlert,\n  saveCondfirmationAlert,\n} from \"../../../../lib/confirmationAlert\";\nimport DriveFolderUploadIcon from \"@mui/icons-material/DriveFolderUpload\";\nimport { DisplayFile, checkFile } from \"../Claims/Claims\";\nimport { grey } from \"@mui/material/colors\";\nimport {\n  TextAreaInput,\n  TextFormatedInput,\n  TextInput,\n} from \"../../../../components/UpwardFields\";\nimport { format } from \"date-fns\";\nimport PageHelmet from \"../../../../components/Helmet\";\nimport { wait } from \"@testing-library/user-event/dist/utils\";\nimport SearchIcon from \"@mui/icons-material/Search\";\nimport {\n  DataGridViewReact,\n  useUpwardTableModalSearchSafeMode,\n} from \"../../../../components/DataGridViewReact\";\nimport { Loading } from \"../../../../components/Loading\";\nimport AccountBoxIcon from \"@mui/icons-material/AccountBox\";\nimport \"../../../../style/monbileview/accounting/pdc.css\";\n\nexport const reducer = (state: any, action: any) => {\n  switch (action.type) {\n    case \"UPDATE_FIELD\":\n      return {\n        ...state,\n        [action.field]: action.value,\n      };\n    default:\n      return state;\n  }\n};\nexport const pdcColumn = [\n  { key: \"Check_No\", label: \"Check No.\", width: 150 },\n  { key: \"Check_Date\", label: \"Check Date\", width: 150 },\n  { key: \"Check_Amnt\", label: \"Amount\", width: 150, type: \"number\" },\n  { key: \"BankName\", label: \"Bank\", width: 200 },\n  { key: \"Branch\", label: \"Branch\", width: 200 },\n  {\n    key: \"Check_Remarks\",\n    label: \"Checked Remarks\",\n    width: 350,\n  },\n  { key: \"Deposit_Slip\", label: \"Deposit Slip\", width: 150 },\n  { key: \"DateDeposit\", label: \"Date Deposit\", width: 150 },\n  { key: \"OR_No\", label: \"OR Num\", width: 150 },\n  { key: \"BankCode\", label: \"Bank Code\", width: 150, hide: true },\n];\nexport const pdcSearchColumn = [\n  { field: \"Date\", headerName: \"Date Received\", width: 160 },\n  { field: \"Ref_No\", headerName: \"Ref No.\", width: 160 },\n  {\n    field: \"Name\",\n    headerName: \"Name\",\n    flex: 1,\n  },\n];\nexport const pdcBanksColumn = [\n  { field: \"Bank_Code\", headerName: \"Code\", width: 130 },\n  { field: \"Bank\", headerName: \"Bank Name\", flex: 1 },\n];\n\nexport default function PostDateChecks() {\n  const modalCheckRef = useRef<any>(null);\n  const tableRef = useRef<any>(null);\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\n  const open = Boolean(anchorEl);\n  const handleClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n    setAnchorEl(event.currentTarget);\n  };\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n  const [isDragging, setIsDragging] = useState(false);\n  const [selectedFiles, setSelectedFiles] = useState<Array<File>>([]);\n  const [showModal, setShowModal] = useState(false);\n\n  const searchInputRef = useRef<HTMLInputElement>(null);\n\n  const [hasSelectedRow, setHasSelectedRow] = useState(null);\n  const [pdcMode, setPdcMode] = useState(\"\");\n\n  const { myAxios, user } = useContext(AuthContext);\n\n  // pdc form save button\n  const fileInputRef = useRef<HTMLInputElement>(null);\n  const savePDCButtonRef = useRef<HTMLButtonElement>(null);\n\n  const addRefButton = useRef<HTMLButtonElement>(null);\n\n  const subRefNoRef = useRef(\"\");\n  const PNoRef = useRef(\"\");\n  const subAccountRef = useRef(\"\");\n\n  const refNoRef = useRef<HTMLInputElement>(null);\n  const dateRef = useRef<HTMLInputElement>(null);\n  const remakrsRef = useRef<HTMLTextAreaElement>(null);\n  const pnRef = useRef<HTMLInputElement>(null);\n  const branchRef = useRef<HTMLInputElement>(null);\n  const clientnameRef = useRef<HTMLTextAreaElement>(null);\n\n  const { isLoading: newRefNumberLoading, refetch: refetchNewRefNumber } =\n    useQuery({\n      queryKey: \"new-ref-number\",\n      queryFn: async () => {\n        return await myAxios.get(\"/task/accounting/pdc-new-ref-number\", {\n          headers: {\n            Authorization: `Bearer ${user?.accessToken}`,\n          },\n        });\n      },\n      refetchOnWindowFocus: false,\n      onSuccess: (res) => {\n        const response = res as any;\n        wait(100).then(() => {\n          subRefNoRef.current = response.data.RefNo[0].pdcID;\n          if (refNoRef.current) {\n            refNoRef.current.value = response.data.RefNo[0].pdcID;\n          }\n        });\n      },\n    });\n  const { mutate, isLoading: loadingAddNew } = useMutation({\n    mutationKey: \"update-pdc\",\n    mutationFn: async (variables: any) => {\n      if (pdcMode === \"update\") {\n        delete variables.mode;\n        return await myAxios.post(\"/task/accounting/update-pdc\", variables, {\n          headers: {\n            Authorization: `Bearer ${user?.accessToken}`,\n          },\n        });\n      }\n\n      delete variables.mode;\n      return await myAxios.post(\"/task/accounting/add-pdc\", variables, {\n        headers: {\n          Authorization: `Bearer ${user?.accessToken}`,\n        },\n      });\n    },\n    onSuccess: (res) => {\n      if (res.data.success) {\n        resetPDC();\n        return Swal.fire({\n          position: \"center\",\n          icon: \"success\",\n          title: res.data.message,\n          showConfirmButton: false,\n          timer: 1500,\n        });\n      }\n\n      Swal.fire({\n        position: \"center\",\n        icon: \"error\",\n        title: res.data.message,\n        showConfirmButton: false,\n        timer: 1500,\n      });\n    },\n  });\n  //selecte search\n\n  const { mutate: mutateSelectedSearch, isLoading: isLoadingSelectedSearch } =\n    useMutation({\n      mutationKey: \"get-search-pdc-check\",\n      mutationFn: async (variables: any) =>\n        await myAxios.post(\"/task/accounting/get-search-pdc-check\", variables, {\n          headers: {\n            Authorization: `Bearer ${user?.accessToken}`,\n          },\n        }),\n      onSuccess: async (res) => {\n        if (!res?.data.success) {\n          return alert(`Error : ${res?.data.message}`);\n        }\n\n        const response = res as any;\n        const Ref_No = response.data.getSearchPDCCheck[0].Ref_No;\n        if (response.data.upload[0]) {\n          const uploadFiles = JSON.parse(response.data.upload[0]?.upload);\n          const newObjContainerBasic = await formatDataToDocument(\n            uploadFiles,\n            `${process.env.REACT_APP_IMAGE_URL}pdc/${Ref_No}`\n          );\n          const fileSelected = await Promise.all(newObjContainerBasic);\n          setSelectedFiles(fileSelected);\n        }\n        async function formatDataToDocument(\n          dataDocument: Array<any>,\n          url: string\n        ) {\n          const newObjContainer: Array<any> = [];\n          for (let index = 0; index < dataDocument.length; index++) {\n            const basicItem = dataDocument[index];\n            const mainURL = `${url}/${basicItem.uniqueFilename}`;\n            const response = await fetch(mainURL);\n            const blob = await response.blob();\n            const file = new File([blob], basicItem.fileName, {\n              type: basicItem.fileType,\n            });\n            const reader = new FileReader();\n            newObjContainer.push(\n              new Promise((resolve, reject) => {\n                reader.onload = function (event) {\n                  resolve(file);\n                };\n                reader.onerror = function (event) {\n                  reject(new Error(\"Error reading file: \" + file.name));\n                };\n                reader.readAsDataURL(file);\n              })\n            );\n          }\n          return newObjContainer;\n        }\n        const data = response.data.getSearchPDCCheck.map((itm: any) => {\n          itm.Check_Date = format(new Date(itm.Check_Date), \"MM/dd/yyyy\");\n          itm.DateDeposit = itm.DateDeposit\n            ? format(new Date(itm.DateDeposit), \"MM/dd/yyyy\")\n            : \"\";\n          itm.Check_Amnt = formatNumber(\n            parseFloat(itm.Check_Amnt.toString().replace(/,/g, \"\"))\n          );\n          return itm;\n        });\n        tableRef.current.setDataFormated(data);\n\n        if (refNoRef.current) {\n          refNoRef.current.value = response.data.getSearchPDCCheck[0].Ref_No;\n        }\n        if (clientnameRef.current) {\n          clientnameRef.current.value = response.data.getSearchPDCCheck[0].Name;\n        }\n        if (dateRef.current) {\n          dateRef.current.value = response.data.getSearchPDCCheck[0].Date;\n        }\n        if (pnRef.current) {\n          pnRef.current.value = response.data.getSearchPDCCheck[0].PNo;\n        }\n        if (branchRef.current) {\n          branchRef.current.value = response.data.getSearchPDCCheck[0].Acronym;\n        }\n        if (remakrsRef.current) {\n          remakrsRef.current.value = response.data.getSearchPDCCheck[0].Remarks;\n        }\n        PNoRef.current = response.data.getSearchPDCCheck[0].IDNo;\n        subAccountRef.current = response.data.getSearchPDCCheck[0].sub_account;\n      },\n    });\n\n  // policy ids search table modal\n  const {\n    UpwardTableModalSearch: ClientUpwardTableModalSearch,\n    openModal: clientOpenModal,\n    closeModal: clientCloseModal,\n  } = useUpwardTableModalSearchSafeMode({\n    size: \"large\",\n    link: \"/task/accounting/search-pdc-policy-id\",\n    column: [\n      { key: \"Type\", label: \"Type\", width: 100 },\n      { key: \"IDNo\", label: \"ID No.\", width: 120 },\n      {\n        key: \"Name\",\n        label: \"Name\",\n        width: 350,\n      },\n      { key: \"chassis\", label: \"Chassis No.\", width: 200 },\n      {\n        key: \"remarks\",\n        label: \"remarks\",\n        width: 0,\n        hide: true,\n      },\n      {\n        key: \"client_id\",\n        label: \"client_id\",\n        width: 0,\n        hide: true,\n      },\n      {\n        key: \"Acronym\",\n        label: \"Acronym\",\n        width: 0,\n        hide: true,\n      },\n      {\n        key: \"sub_account\",\n        label: \"sub_account\",\n        width: 0,\n        hide: true,\n      },\n    ],\n    getSelectedItem: async (rowItm: any, _: any, rowIdx: any, __: any) => {\n      if (rowItm) {\n        wait(100).then(() => {\n          PNoRef.current = rowItm[5];\n          subAccountRef.current = rowItm[7];\n          if (pnRef.current) {\n            pnRef.current.value = rowItm[1];\n          }\n          if (clientnameRef.current) {\n            clientnameRef.current.value = rowItm[2];\n          }\n          if (branchRef.current) {\n            branchRef.current.value = rowItm[6];\n          }\n          if (rowItm[4] && rowItm[4] !== \"\") {\n            if (remakrsRef.current) {\n              remakrsRef.current.value = rowItm[4];\n            }\n          }\n        });\n        clientCloseModal();\n      }\n    },\n  });\n\n  // pdc search table modal\n  const {\n    UpwardTableModalSearch: PDCUpwardTableModalSearch,\n    openModal: pdcOpenModal,\n    closeModal: pdcCloseModal,\n  } = useUpwardTableModalSearchSafeMode({\n    link: \"/task/accounting/search-pdc\",\n    column: [\n      { key: \"Date\", label: \"Date Received\", width: 90 },\n      { key: \"Ref_No\", label: \"Ref No.\", width: 70 },\n      {\n        key: \"Name\",\n        label: \"Name\",\n        width: 320,\n      },\n    ],\n    getSelectedItem: async (rowItm: any, _: any, rowIdx: any, __: any) => {\n      if (rowItm) {\n        wait(100).then(() => {\n          console.log(rowItm[2]);\n          mutateSelectedSearch({ ref_no: rowItm[1] });\n          setPdcMode(\"update\");\n        });\n        pdcCloseModal();\n      }\n    },\n  });\n  const handleOnSave = useCallback(\n    async (e: any) => {\n      const pdcTableData = tableRef.current.getDataFormatted();\n\n      if (pnRef.current && pnRef.current.value === \"\") {\n        return Swal.fire({\n          position: \"center\",\n          icon: \"warning\",\n          title: \"Please provide loan information!\",\n          timer: 1500,\n        }).then(() => {\n          setTimeout(() => {\n            pnRef.current?.click();\n          }, 350);\n        });\n      }\n      if (pdcTableData.length <= 0) {\n        return Swal.fire({\n          position: \"center\",\n          icon: \"warning\",\n          title: \"Please provide entry!\",\n          timer: 1500,\n        });\n      }\n\n      const filePromises: Array<any> = [];\n      function fileTransfer(filePromises: Array<any>) {\n        const files = selectedFiles;\n        if (files.length > 0) {\n          for (let i = 0; i < files.length; i++) {\n            const file = files[i];\n            const reader = new FileReader();\n            filePromises.push(\n              new Promise((resolve, reject) => {\n                reader.onload = function (event) {\n                  resolve({\n                    datakey: \"pdc_file\",\n                    fileName: file.name,\n                    fileContent: event.target?.result,\n                    fileType: file.type,\n                    file,\n                  });\n                };\n                reader.onerror = function (event) {\n                  reject(new Error(\"Error reading file: \" + file.name));\n                };\n                reader.readAsDataURL(file);\n              })\n            );\n          }\n        }\n      }\n      fileTransfer(filePromises);\n      const fileToSave = await Promise.all(filePromises);\n      const stateSubmited = {\n        Ref_No: refNoRef.current?.value,\n        PNo: pnRef.current?.value,\n        IDNo: PNoRef.current,\n        Date: dateRef.current?.value,\n        Name: clientnameRef.current?.value,\n        Remarks: remakrsRef.current?.value,\n        Branch: branchRef.current?.value,\n        checks: JSON.stringify(pdcTableData),\n      };\n      if (pdcMode === \"update\") {\n        codeCondfirmationAlert({\n          isUpdate: true,\n          cb: (userCodeConfirmation) => {\n            mutate({ ...stateSubmited, userCodeConfirmation, fileToSave });\n          },\n        });\n      } else {\n        saveCondfirmationAlert({\n          isConfirm: () => {\n            mutate({ ...stateSubmited, fileToSave });\n          },\n        });\n      }\n    },\n    [mutate, selectedFiles, pdcMode]\n  );\n  const handleDragLeave = (e: React.DragEvent<HTMLDivElement>) => {\n    e.preventDefault();\n    setIsDragging(false);\n  };\n  const handleDragEnter = (e: React.DragEvent<HTMLDivElement>) => {\n    e.preventDefault();\n    setIsDragging(true);\n  };\n  const handleDrop = (e: React.DragEvent<HTMLDivElement>) => {\n    e.preventDefault();\n    const fileList = e.dataTransfer.files;\n    const files = Array.from(fileList);\n    const newFiles = [...selectedFiles, ...files];\n    setIsDragging(false);\n    if (checkFile(newFiles)) {\n      fileInputRef.current?.click();\n      return alert(\"file is not valid Extention!\");\n    } else {\n      setSelectedFiles(newFiles);\n    }\n  };\n  const { mutate: mutatePrint, isLoading: isLoadingPrint } = useMutation({\n    mutationKey: \"print\",\n    mutationFn: async (variables: any) => {\n      return await myAxios.post(\"/task/accounting/print\", variables, {\n        responseType: \"arraybuffer\",\n        headers: {\n          Authorization: `Bearer ${user?.accessToken}`,\n        },\n      });\n    },\n    onSuccess: (response) => {\n      const pdfBlob = new Blob([response.data], { type: \"application/pdf\" });\n      const pdfUrl = URL.createObjectURL(pdfBlob);\n\n      window.open(\n        `/${\n          process.env.REACT_APP_DEPARTMENT\n        }/dashboard/report?pdf=${encodeURIComponent(pdfUrl)}`,\n        \"_blank\"\n      );\n    },\n  });\n  const clickPDCReceipt = () => {\n    const pdcTableData = tableRef.current.getDataFormatted();\n    const state = {\n      Ref_No: refNoRef.current?.value,\n      PNo: pnRef.current?.value,\n      IDNo: PNoRef.current,\n      Date: dateRef.current?.value,\n      Name: clientnameRef.current?.value,\n      Remarks: remakrsRef.current?.value,\n      Branch: branchRef.current?.value,\n    };\n    mutatePrint({\n      printOption: \"receipt\",\n      pdcTableData,\n      state,\n      reportTitle:\n        process.env.REACT_APP_DEPARTMENT === \"UMIS\"\n          ? \"UPWARD MANAGEMENT INSURANCE SERVICES\"\n          : \"UPWARD CONSULTANCY SERVICES AND MANAGEMENT INC.\",\n    });\n  };\n  const clickPDCLabeling = () => {\n    const state = {\n      name: clientnameRef.current?.value,\n      pno: pnRef.current?.value,\n      ref: refNoRef.current?.value,\n      department: process.env.REACT_APP_DEPARTMENT,\n    };\n    mutatePrint({\n      printOption: \"labeling\",\n      pdcTableData: [],\n      state,\n      reportTitle:\n        process.env.REACT_APP_DEPARTMENT === \"UMIS\"\n          ? \"UPWARD MANAGEMENT INSURANCE SERVICES\"\n          : \"UPWARD CONSULTANCY SERVICES AND MANAGEMENT INC.\",\n    });\n  };\n  function resetPDC() {\n    setPdcMode(\"\");\n    tableRef.current.setSelectedRow(null);\n    tableRef.current.resetCheckBox();\n    tableRef.current.setData([]);\n    refetchNewRefNumber();\n\n    if (dateRef.current) {\n      dateRef.current.value = format(new Date(), \"yyyy-MM-dd\");\n    }\n    if (remakrsRef.current) {\n      remakrsRef.current.value = \"\";\n    }\n    if (pnRef.current) {\n      pnRef.current.value = \"\";\n    }\n    if (branchRef.current) {\n      branchRef.current.value = \"\";\n    }\n    if (clientnameRef.current) {\n      clientnameRef.current.value = \"\";\n    }\n  }\n  function formatNumber(num: number) {\n    return (num || 0).toLocaleString(\"en-US\", {\n      minimumFractionDigits: 2,\n      maximumFractionDigits: 2,\n    });\n  }\n  function handleCheckDetailsSave() {\n    if (\n      modalCheckRef.current.getRefs().checknoRef.current &&\n      modalCheckRef.current.getRefs().bankRef.current &&\n      modalCheckRef.current.getRefs().branchRef.current &&\n      modalCheckRef.current.getRefs().remarksRef.current &&\n      modalCheckRef.current.getRefs().checkdateRef.current &&\n      modalCheckRef.current.getRefs().amountRef.current\n    ) {\n      const tableRows = tableRef.current.getDataFormatted();\n      const selectedIndex = tableRef.current.getSelectedRow();\n\n      const filteredChecks = tableRows.filter((itm: any) => {\n        return (\n          modalCheckRef.current.getRefs().checknoRef.current &&\n          modalCheckRef.current.getRefs().checknoRef.current.value ===\n            itm.Check_No\n        );\n      });\n\n      if (filteredChecks.length > 0 && selectedIndex === null) {\n        alert(\"check no. is already exist!\");\n        modalCheckRef.current.getRefs().checknoRef.current.focus();\n        return;\n      }\n      if (modalCheckRef.current.getRefs().checknoRef.current.value === \"\") {\n        alert(\"check no. is required!\");\n        modalCheckRef.current.getRefs().checknoRef.current.focus();\n        return;\n      } else if (modalCheckRef.current.getRefs().bankRef.current.value === \"\") {\n        alert(\"bank is required!\");\n        modalCheckRef.current.getRefs().bankRef.current.focus();\n        return;\n      } else if (\n        modalCheckRef.current.getRefs().branchRef.current.value === \"\"\n      ) {\n        alert(\"branch is required!\");\n        modalCheckRef.current.getRefs().bankRef.current.focus();\n        return;\n      } else if (\n        !isValidDate(modalCheckRef.current.getRefs().checkdateRef.current.value)\n      ) {\n        alert(\"invalid date!\");\n        modalCheckRef.current.getRefs().checkdateRef.current.focus();\n        return;\n      } else if (\n        isNaN(\n          parseFloat(\n            modalCheckRef.current\n              .getRefs()\n              .amountRef.current?.value.toString()\n              .replace(/,/g, \"\")\n          )\n        )\n      ) {\n        alert(\"amount must be greater than 0!\");\n        modalCheckRef.current.getRefs().amountRef.current.focus();\n        return;\n      }\n\n      if (\n        modalCheckRef.current.getRefs().checknoRef.current &&\n        modalCheckRef.current.getRefs().bankRef.current &&\n        modalCheckRef.current.getRefs().branchRef.current &&\n        modalCheckRef.current.getRefs().remarksRef.current &&\n        modalCheckRef.current.getRefs().checkdateRef.current &&\n        modalCheckRef.current.getRefs().amountRef.current\n      ) {\n        if (selectedIndex !== null) {\n          const selectedRow = tableRef.current.getData();\n\n          let isCheckFind = selectedRow\n            .map((itm: any) => itm[0])\n            .includes(modalCheckRef.current.getRefs().checknoRef.current.value);\n          console.log(isCheckFind);\n          if (isCheckFind) {\n            selectedRow[selectedIndex][0] =\n              modalCheckRef.current.getRefs().checknoRef.current.value;\n            selectedRow[selectedIndex][1] = format(\n              new Date(\n                modalCheckRef.current.getRefs().checkdateRef.current.value\n              ),\n              \"MM/dd/yyyy\"\n            );\n            selectedRow[selectedIndex][2] = formatNumber(\n              parseNumber(\n                modalCheckRef.current\n                  .getRefs()\n                  .amountRef.current?.value.toString()\n                  .replace(/,/g, \"\")\n              )\n            );\n\n            selectedRow[selectedIndex][3] =\n              modalCheckRef.current.getRefs().bankRef.current.value;\n            selectedRow[selectedIndex][4] =\n              modalCheckRef.current.getRefs().branchRef.current.value;\n            selectedRow[selectedIndex][5] =\n              modalCheckRef.current.getRefs().remarksRef.current.value;\n            selectedRow[selectedIndex][6] =\n              modalCheckRef.current.getRefs()._slipCodeRef.current;\n            selectedRow[selectedIndex][7] =\n              modalCheckRef.current.getRefs()._slipDateRef.current;\n            selectedRow[selectedIndex][8] =\n              modalCheckRef.current.getRefs()._checkOR.current;\n            selectedRow[selectedIndex][9] =\n              modalCheckRef.current.getRefs().bankCode.current;\n\n            tableRef.current.setData(selectedRow);\n            tableRef.current.setSelectedRow(null);\n            tableRef.current.resetCheckBox();\n            setHasSelectedRow(null);\n            modalCheckRef.current.clsoeModal();\n\n            return;\n          }\n\n          const checkCount =\n            parseInt(\n              modalCheckRef.current.getRefs()._checkcountRef.current.value\n            ) <= 0\n              ? 1\n              : parseInt(\n                  modalCheckRef.current.getRefs()._checkcountRef.current.value\n                );\n          const newData: any = [];\n          for (let i = 0; i < checkCount; i++) {\n            newData.push([\n              incrementStringNumbers(\n                modalCheckRef.current.getRefs().checknoRef.current.value,\n                i\n              ),\n              incrementDate(\n                modalCheckRef.current.getRefs().checkdateRef.current.value,\n                i\n              ),\n              formatNumber(\n                parseNumber(\n                  modalCheckRef.current\n                    .getRefs()\n                    .amountRef.current?.value.toString()\n                    .replace(/,/g, \"\")\n                )\n              ),\n              modalCheckRef.current.getRefs().bankRef.current.value,\n              modalCheckRef.current.getRefs().branchRef.current.value,\n              modalCheckRef.current.getRefs().remarksRef.current.value,\n              modalCheckRef.current.getRefs()._slipCodeRef.current,\n              modalCheckRef.current.getRefs()._slipDateRef.current,\n              modalCheckRef.current.getRefs()._checkOR.current,\n              modalCheckRef.current.getRefs().bankCode.current,\n            ]);\n          }\n\n          tableRef.current.setData([...tableRef.current.getData(), ...newData]);\n          modalCheckRef.current.clsoeModal();\n\n          return;\n        } else {\n          const checkCount =\n            parseInt(\n              modalCheckRef.current.getRefs()._checkcountRef.current.value\n            ) <= 0\n              ? 1\n              : parseInt(\n                  modalCheckRef.current.getRefs()._checkcountRef.current.value\n                );\n          const newData: any = [];\n          for (let i = 0; i < checkCount; i++) {\n            newData.push([\n              incrementStringNumbers(\n                modalCheckRef.current.getRefs().checknoRef.current.value,\n                i\n              ),\n              incrementDate(\n                modalCheckRef.current.getRefs().checkdateRef.current.value,\n                i\n              ),\n              formatNumber(\n                parseNumber(\n                  modalCheckRef.current\n                    .getRefs()\n                    .amountRef.current?.value.toString()\n                    .replace(/,/g, \"\")\n                )\n              ),\n              modalCheckRef.current.getRefs().bankRef.current.value,\n              modalCheckRef.current.getRefs().branchRef.current.value,\n              modalCheckRef.current.getRefs().remarksRef.current.value,\n              modalCheckRef.current.getRefs()._slipCodeRef.current,\n              modalCheckRef.current.getRefs()._slipDateRef.current,\n              modalCheckRef.current.getRefs()._checkOR.current,\n              modalCheckRef.current.getRefs().bankCode.current,\n            ]);\n          }\n\n          tableRef.current.setData([...tableRef.current.getData(), ...newData]);\n          modalCheckRef.current.clsoeModal();\n        }\n      }\n    }\n  }\n  useEffect(() => {\n    const handleKeyDown = (event: any) => {\n      if ((event.ctrlKey || event.metaKey) && event.key === \"s\") {\n        event.preventDefault();\n        handleOnSave(event);\n      }\n    };\n\n    window.addEventListener(\"keydown\", handleKeyDown);\n    return () => {\n      window.removeEventListener(\"keydown\", handleKeyDown);\n    };\n  }, [handleOnSave]);\n\n  const isDisableField = pdcMode === \"\";\n\n  return (\n    <>\n      <ModalCheck\n        ref={modalCheckRef}\n        handleOnSave={() => {\n          handleCheckDetailsSave();\n          // modalCheckRef.current.clsoeModal();\n        }}\n        handleOnClose={() => {\n          tableRef.current.setSelectedRow(null);\n          tableRef.current.resetCheckBox();\n\n          // buttonCheckSave.current?.focus();\n        }}\n        hasSelectedRow={hasSelectedRow}\n      />\n      <ClientUpwardTableModalSearch />\n      <PDCUpwardTableModalSearch />\n      <PageHelmet title=\"PDC\" />\n      {(loadingAddNew || isLoadingSelectedSearch || isLoadingPrint) && (\n        <Loading />\n      )}\n      <div\n        className=\"pdc-main\"\n        style={{\n          width: \"100%\",\n          height: \"100%\",\n          flex: 1,\n          padding: \"10px\",\n          backgroundColor: \"#F1F1F1\",\n          flexDirection: \"column\",\n          display: \"flex\",\n          boxSizing: \"border-box\",\n          marginBottom: \"20px\",\n        }}\n      >\n        <Box\n          sx={(theme) => ({\n            display: \"flex\",\n            alignItems: \"center\",\n            columnGap: \"20px\",\n            boxSizing: \"border-box\",\n          })}\n        >\n          <div\n            style={{\n              display: \"flex\",\n              alignItems: \"center\",\n              columnGap: \"5px\",\n              marginBottom: \"15px\",\n              boxSizing: \"border-box\",\n              width: \"100%\",\n            }}\n          >\n            <TextInput\n              containerClassName=\"pdc-search-input\"\n              label={{\n                title: \"Search: \",\n                style: {\n                  fontSize: \"12px\",\n                  fontWeight: \"bold\",\n                  width: \"50px\",\n                },\n              }}\n              input={{\n                className: \"search-input-up-on-key-down \",\n                type: \"search\",\n                onKeyDown: (e) => {\n                  if (e.key === \"Enter\" || e.key === \"NumpadEnter\") {\n                    e.preventDefault();\n                    pdcOpenModal(e.currentTarget.value);\n                  }\n                },\n                style: { width: \"500px\" },\n              }}\n              icon={<SearchIcon sx={{ fontSize: \"18px\" }} />}\n              onIconClick={(e) => {\n                e.preventDefault();\n                if (searchInputRef.current)\n                  pdcOpenModal(searchInputRef.current.value);\n              }}\n              inputRef={searchInputRef}\n            />\n            <div\n              className=\"pdc-desktop-buttons\"\n              style={{\n                display: \"flex\",\n                alignItems: \"center\",\n                columnGap: \"5px\",\n              }}\n            >\n              {pdcMode === \"\" && (\n                <Button\n                  sx={{\n                    height: \"22px\",\n                    fontSize: \"11px\",\n                  }}\n                  variant=\"contained\"\n                  startIcon={<AddIcon sx={{ width: 15, height: 15 }} />}\n                  id=\"entry-header-save-button\"\n                  color=\"primary\"\n                  onClick={() => {\n                    setPdcMode(\"add\");\n                  }}\n                >\n                  New\n                </Button>\n              )}\n              <LoadingButton\n                sx={{\n                  height: \"22px\",\n                  fontSize: \"11px\",\n                }}\n                ref={savePDCButtonRef}\n                id=\"save-entry-header\"\n                color=\"success\"\n                variant=\"contained\"\n                type=\"submit\"\n                onClick={handleOnSave}\n                disabled={pdcMode === \"\"}\n                loading={loadingAddNew}\n                startIcon={<SaveIcon sx={{ width: 15, height: 15 }} />}\n              >\n                Save\n              </LoadingButton>\n              {(pdcMode === \"add\" || pdcMode === \"update\") && (\n                <Button\n                  sx={{\n                    height: \"22px\",\n                    fontSize: \"11px\",\n                  }}\n                  variant=\"contained\"\n                  startIcon={<CloseIcon sx={{ width: 15, height: 15 }} />}\n                  onClick={() => {\n                    Swal.fire({\n                      title: \"Are you sure?\",\n                      text: \"You won't be able to revert this!\",\n                      icon: \"warning\",\n                      showCancelButton: true,\n                      confirmButtonColor: \"#3085d6\",\n                      cancelButtonColor: \"#d33\",\n                      confirmButtonText: \"Yes, cancel it!\",\n                    }).then((result) => {\n                      if (result.isConfirmed) {\n                        resetPDC();\n                      }\n                    });\n                  }}\n                  color=\"error\"\n                >\n                  Cancel\n                </Button>\n              )}\n              <Button\n                sx={{\n                  height: \"22px\",\n                  fontSize: \"11px\",\n                }}\n                disabled={pdcMode === \"\"}\n                variant=\"contained\"\n                startIcon={<AddIcon sx={{ width: 15, height: 15 }} />}\n                onClick={() => {\n                  wait(100).then(() => {\n                    const tableRows = tableRef.current.getDataFormatted();\n                    const getLastCheck_No: any =\n                      tableRows[tableRows.length - 1];\n                    if (modalCheckRef.current.getRefs().checknoRef.current) {\n                      modalCheckRef.current.getRefs().checknoRef.current.value =\n                        incrementCheckNo(getLastCheck_No?.Check_No);\n                    }\n                    tableRef.current.setSelectedRow(null);\n                    tableRef.current.resetCheckBox();\n\n                    setHasSelectedRow(null);\n                    modalCheckRef.current.getRefs().checknoRef.current?.focus();\n                  });\n                  modalCheckRef.current?.showModal();\n                }}\n                ref={addRefButton}\n              >\n                Add Check\n              </Button>\n              <div>\n                <Button\n                  disabled={pdcMode !== \"update\"}\n                  id=\"basic-button\"\n                  aria-controls={open ? \"basic-menu\" : undefined}\n                  aria-haspopup=\"true\"\n                  aria-expanded={open ? \"true\" : undefined}\n                  onClick={handleClick}\n                  sx={{\n                    height: \"22px\",\n                    fontSize: \"11px\",\n                    color: \"white\",\n                    backgroundColor: grey[600],\n                    \"&:hover\": {\n                      backgroundColor: grey[700],\n                    },\n                  }}\n                >\n                  Print\n                </Button>\n                <Menu\n                  id=\"basic-menu\"\n                  anchorEl={anchorEl}\n                  open={open}\n                  onClose={handleClose}\n                  MenuListProps={{\n                    \"aria-labelledby\": \"basic-button\",\n                  }}\n                >\n                  <MenuItem onClick={clickPDCReceipt}>PDC Receipt</MenuItem>\n                  <MenuItem onClick={clickPDCLabeling}>PDC Labeling</MenuItem>\n                </Menu>\n              </div>\n            </div>\n          </div>\n        </Box>\n        <form\n          className=\"pdc-form\"\n          onKeyDown={(e) => {\n            if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n              e.preventDefault();\n              return;\n            }\n          }}\n          style={{\n            marginBottom: \"20px\",\n          }}\n        >\n          <div\n            style={{\n              display: \"flex\",\n              columnGap: \"15px\",\n              flexDirection: \"row\",\n            }}\n          >\n            <div\n              className=\"pdc-form-holder-content\"\n              style={{\n                display: \"flex\",\n                gap: \"10px\",\n                width: \"100%\",\n              }}\n            >\n              <fieldset\n                style={\n                  {\n                    flex: 1,\n                    display: \"flex\",\n                    flexDirection: \"column\",\n                    gap: \"10px\",\n                    padding: \"15px\",\n                    border: \"1px solid #cbd5e1\",\n                    borderRadius: \"5px\",\n                  } as any\n                }\n              >\n                <div\n                  className=\"pdc-form-holder-content-fieldset-div\"\n                  style={{\n                    display: \"flex\",\n                    gap: \"15px\",\n                  }}\n                >\n                  {newRefNumberLoading ? (\n                    <LoadingButton loading={newRefNumberLoading} />\n                  ) : (\n                    <TextInput\n                      containerClassName=\"pdc-reference-no-input\"\n                      label={{\n                        title: \"Ref No.\",\n                        style: {\n                          fontSize: \"12px\",\n                          fontWeight: \"bold\",\n                          width: \"85px\",\n                        },\n                      }}\n                      input={{\n                        readOnly: true,\n                        disabled: isDisableField,\n                        type: \"text\",\n                        style: { width: \"300px\" },\n                        onKeyDown: (e) => {\n                          if (e.key === \"Enter\" || e.key === \"NumpadEnter\") {\n                            e.preventDefault();\n                            dateRef.current?.focus();\n                          }\n                        },\n                      }}\n                      inputRef={refNoRef}\n                      icon={\n                        <RestartAltIcon\n                          sx={{\n                            fontSize: \"18px\",\n                            color: isDisableField ? \"gray\" : \"black\",\n                          }}\n                        />\n                      }\n                      disableIcon={pdcMode !== \"add\"}\n                      onIconClick={(e) => {\n                        e.preventDefault();\n                        refetchNewRefNumber();\n                      }}\n                    />\n                  )}\n\n                  <TextInput\n                    containerClassName=\"pdc-date-input\"\n                    label={{\n                      title: \"Date : \",\n                      style: {\n                        fontSize: \"12px\",\n                        fontWeight: \"bold\",\n                        width: \"85px\",\n                      },\n                    }}\n                    input={{\n                      disabled: isDisableField,\n                      type: \"date\",\n                      defaultValue: format(new Date(), \"yyyy-MM-dd\"),\n                      style: { width: \"190px\" },\n                      onKeyDown: (e) => {\n                        if (e.code === \"NumpadEnter\" || e.code === \"Enter\") {\n                          remakrsRef.current?.focus();\n                        }\n                      },\n                    }}\n                    inputRef={dateRef}\n                  />\n                </div>\n\n                <TextAreaInput\n                  label={{\n                    title: \"Remarks : \",\n                    style: {\n                      fontSize: \"12px\",\n                      fontWeight: \"bold\",\n                      width: \"85px\",\n                    },\n                  }}\n                  textarea={{\n                    rows: 2,\n                    disabled: isDisableField,\n                    style: { flex: 1 },\n                    onKeyDown: (e) => {\n                      e.stopPropagation();\n                      if (\n                        (e.code === \"NumpadEnter\" && !e.shiftKey) ||\n                        (e.code === \"Enter\" && !e.shiftKey)\n                      ) {\n                        pnRef.current?.focus();\n                      }\n                    },\n                  }}\n                  _inputRef={remakrsRef}\n                />\n              </fieldset>\n              <fieldset\n                style={\n                  {\n                    flex: 1,\n                    display: \"flex\",\n                    gap: \"10px\",\n                    padding: \" 15px\",\n                    border: \"1px solid #cbd5e1\",\n                    borderRadius: \"5px\",\n                    flexDirection: \"column\",\n                    boxSizing: \"border-box\",\n                  } as any\n                }\n              >\n                <div\n                  className=\"pdc-form-holder-content-fieldset-div\"\n                  style={{\n                    width: \"100%\",\n                    flex: 1,\n                    display: \"flex\",\n                    gap: \"15px\",\n                    boxSizing: \"border-box\",\n                  }}\n                >\n                  <TextInput\n                    containerClassName=\"pdc-pn-client-id-input\"\n                    label={{\n                      title: \"PN/Client ID : \",\n                      style: {\n                        fontSize: \"12px\",\n                        fontWeight: \"bold\",\n                        width: \"85px\",\n                      },\n                    }}\n                    input={{\n                      disabled: isDisableField,\n                      type: \"text\",\n                      style: { width: \"250px\", height: \"22px\" },\n                      onKeyDown: (e) => {\n                        if (e.key === \"Enter\" || e.key === \"NumpadEnter\") {\n                          e.preventDefault();\n                          if (pnRef.current) {\n                            clientOpenModal(pnRef.current.value);\n                          }\n                        }\n                      },\n                    }}\n                    inputRef={pnRef}\n                    icon={\n                      <PersonSearchIcon\n                        sx={{\n                          fontSize: \"18px\",\n                          color: isDisableField ? \"gray\" : \"black\",\n                        }}\n                      />\n                    }\n                    onIconClick={(e) => {\n                      e.preventDefault();\n                      if (pnRef.current) {\n                        clientOpenModal(pnRef.current.value);\n                      }\n                    }}\n                    disableIcon={isDisableField}\n                  />\n                  <TextInput\n                    label={{\n                      title: \"Branch : \",\n                      style: {\n                        fontSize: \"12px\",\n                        fontWeight: \"bold\",\n                        width: \"85px\",\n                      },\n                    }}\n                    input={{\n                      disabled: isDisableField,\n                      type: \"text\",\n                      style: { width: \"auto\", height: \"22px\" },\n                      onKeyDown: (e) => {\n                        if (e.code === \"NumpadEnter\" || e.code === \"Enter\") {\n                          clientnameRef.current?.focus();\n                        }\n                      },\n                    }}\n                    inputRef={branchRef}\n                  />\n                </div>\n\n                <div\n                  className=\"pdc-form-holder-content-fieldset-div\"\n                  style={{ width: \"100%\", display: \"flex\", columnGap: \"10px\" }}\n                >\n                  <TextAreaInput\n                    containerClassName=\"pdc-client-name-input\"\n                    label={{\n                      title: \"Client Name : \",\n                      style: {\n                        fontSize: \"12px\",\n                        fontWeight: \"bold\",\n                        width: \"85px\",\n                      },\n                    }}\n                    textarea={{\n                      rows: 2,\n                      disabled: isDisableField,\n                      style: { width: \"325px\" },\n                      onKeyDown: (e) => {\n                        e.stopPropagation();\n                        if (\n                          (e.code === \"NumpadEnter\" && !e.shiftKey) ||\n                          (e.code === \"Enter\" && !e.shiftKey)\n                        ) {\n                          savePDCButtonRef.current?.click();\n                        }\n                      },\n                    }}\n                    _inputRef={clientnameRef}\n                  />\n                  <Button\n                    sx={{\n                      height: \"27px\",\n                      fontSize: \"11px\",\n                    }}\n                    disabled={pdcMode === \"\"}\n                    variant=\"contained\"\n                    startIcon={<DownloadIcon sx={{ width: 15, height: 15 }} />}\n                    onClick={() => {\n                      setShowModal(true);\n                    }}\n                  >\n                    Upload Check\n                  </Button>\n                </div>\n              </fieldset>\n            </div>\n          </div>\n        </form>\n        <DataGridViewReact\n          containerStyle={{\n            flex: 1,\n            height: \"auto\",\n          }}\n          disbaleTable={isDisableField}\n          ref={tableRef}\n          rows={[]}\n          columns={pdcColumn}\n          showSequence={true}\n          getSelectedItem={(rowSelected: any, _: any, RowIndex: any) => {\n            if (rowSelected) {\n              if (\n                (rowSelected[6] && rowSelected[6] !== \"\") ||\n                (rowSelected[7] && rowSelected[7] !== \"\") ||\n                (rowSelected[8] && rowSelected[8] !== \"\")\n              ) {\n                setHasSelectedRow(null);\n                tableRef.current.setSelectedRow(null);\n                tableRef.current.resetCheckBox();\n\n                return Swal.fire({\n                  position: \"center\",\n                  icon: \"warning\",\n                  title: `Unable to delete. Check No ${rowSelected[0]} is already ${rowSelected[8]} issued of OR!`,\n                  showConfirmButton: false,\n                  timer: 1500,\n                });\n              }\n              setHasSelectedRow(RowIndex);\n              modalCheckRef.current?.showModal();\n              wait(100).then(() => {\n                if (\n                  modalCheckRef.current.getRefs().checknoRef.current &&\n                  modalCheckRef.current.getRefs().bankRef.current &&\n                  modalCheckRef.current.getRefs().branchRef.current &&\n                  modalCheckRef.current.getRefs().remarksRef.current &&\n                  modalCheckRef.current.getRefs().checkdateRef.current &&\n                  modalCheckRef.current.getRefs().amountRef.current\n                ) {\n                  modalCheckRef.current.getRefs().checknoRef.current.value =\n                    rowSelected[0];\n                  modalCheckRef.current.getRefs().checkdateRef.current.value =\n                    format(new Date(rowSelected[1]), \"yyyy-MM-dd\");\n                  modalCheckRef.current.getRefs().amountRef.current.value =\n                    formatNumber(parseFloat(rowSelected[2].replace(/,/g, \"\")));\n                  modalCheckRef.current.getRefs().bankRef.current.value =\n                    rowSelected[3];\n                  modalCheckRef.current.getRefs().branchRef.current.value =\n                    rowSelected[4];\n                  modalCheckRef.current.getRefs().remarksRef.current.value =\n                    rowSelected[5];\n                  modalCheckRef.current.getRefs()._slipCodeRef.current =\n                    rowSelected[6] || \"\";\n                  modalCheckRef.current.getRefs()._slipDateRef.current =\n                    rowSelected[7] || \"\";\n                  modalCheckRef.current.getRefs()._checkOR.current =\n                    rowSelected[8] || \"\";\n                  modalCheckRef.current.getRefs().bankCode.current =\n                    rowSelected[9];\n\n                  modalCheckRef.current.getRefs().bankRef.current.focus();\n                }\n              });\n            } else {\n              setHasSelectedRow(null);\n            }\n          }}\n          onKeyDown={(rowSelected: any, RowIndex: any, e: any) => {\n            if (e.code === \"Delete\" || e.code === \"Backspace\") {\n              if (\n                (rowSelected[6] && rowSelected[6] !== \"\") ||\n                (rowSelected[7] && rowSelected[7] !== \"\") ||\n                (rowSelected[8] && rowSelected[8] !== \"\")\n              ) {\n                setHasSelectedRow(null);\n                tableRef.current.setSelectedRow(null);\n                tableRef.current.resetCheckBox();\n\n                return Swal.fire({\n                  position: \"center\",\n                  icon: \"warning\",\n                  title: `Unable to delete. Check No ${rowSelected[0]} is already ${rowSelected[8]} issued of OR!`,\n                  showConfirmButton: false,\n                  timer: 1500,\n                });\n              }\n\n              Swal.fire({\n                title: \"Are you sure?\",\n                text: `You won't to delete this Check No. ${rowSelected[0]}`,\n                icon: \"warning\",\n                showCancelButton: true,\n                confirmButtonColor: \"#3085d6\",\n                cancelButtonColor: \"#d33\",\n                confirmButtonText: \"Yes, delete it!\",\n              }).then((result) => {\n                if (result.isConfirmed) {\n                  setTimeout(() => {\n                    const newData = tableRef.current.getData();\n                    newData.splice(RowIndex, 1);\n                    tableRef.current.setData(newData);\n\n                    setHasSelectedRow(null);\n                    tableRef.current.setSelectedRow(null);\n                    tableRef.current.resetCheckBox();\n                  }, 100);\n                }\n              });\n            }\n          }}\n        />\n        <div\n          style={{\n            display: showModal ? \"flex\" : \"none\",\n            position: \"absolute\",\n            top: 0,\n            bottom: 0,\n            left: 0,\n            right: 0,\n            background: \"rgba(158, 155, 157, 0.31)\",\n            zIndex: \"999\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n          }}\n        >\n          <div\n            style={{\n              width: \"90%\",\n              height: \"90%\",\n            }}\n          >\n            <div\n              style={{\n                width: \"90%\",\n                height: \"90%\",\n                overflow: \"auto\",\n                background: \"white\",\n                padding: \"20px\",\n                margin: \"auto\",\n                zIndex: \"9929\",\n                boxShadow: \" -1px 1px 13px 6px rgba(0,0,0,0.54)\",\n                position: \"relative\",\n              }}\n            >\n              <div\n                style={{\n                  height: \"100%\",\n                  width: \"100%\",\n                  position: \"relative\",\n                  display: \"flex\",\n                  justifyContent: \"center\",\n                  alignItems: \"center\",\n                  flexDirection: \"column\",\n                }}\n              >\n                <IconButton\n                  sx={{\n                    position: \"absolute\",\n                    right: \"5px\",\n                    top: \"5px\",\n                  }}\n                  onClick={() => {\n                    setShowModal(false);\n                  }}\n                >\n                  <CloseIcon />\n                </IconButton>\n                <div\n                  style={{\n                    width: \"100%\",\n                    height: \"500px\",\n                    border: isDragging ? \"5px dashed green\" : \"5px dashed grey\",\n                    overflow: \"auto\",\n                    padding: \"10px\",\n                  }}\n                  onDragEnter={handleDragEnter}\n                  onDragOver={(e) => e.preventDefault()}\n                  onDragLeave={handleDragLeave}\n                  onDrop={handleDrop}\n                >\n                  <div\n                    id=\"upload-container\"\n                    style={{\n                      width: \"100%\",\n                      height: \"100%\",\n                      display: \"flex\",\n                      gap: \"10px\",\n                      flexWrap: \"wrap\",\n                    }}\n                    onDragEnter={handleDragEnter}\n                    onDragOver={(e) => e.preventDefault()}\n                    onDragLeave={handleDragLeave}\n                    onDrop={handleDrop}\n                  >\n                    {selectedFiles.map((itm, idx) => {\n                      return (\n                        <DisplayFile\n                          key={idx}\n                          itm={itm}\n                          selectedFiles={selectedFiles}\n                          setSelectedFiles={setSelectedFiles}\n                          fileInput={fileInputRef}\n                        />\n                      );\n                    })}\n                  </div>\n                  {selectedFiles.length <= 0 && (\n                    <div\n                      style={{\n                        position: \"absolute\",\n                        top: \"50%\",\n                        left: \"50%\",\n                        transform: \"translate(-50%,-50%)\",\n                        textAlign: \"center\",\n                      }}\n                    >\n                      <DriveFolderUploadIcon\n                        sx={{ fontSize: \"20em\", color: \"#64748b\" }}\n                      />\n                    </div>\n                  )}\n                  <input\n                    ref={fileInputRef}\n                    type=\"file\"\n                    multiple\n                    style={{ display: \"none\", background: \"white\" }}\n                    id=\"input-file\"\n                    onChange={(e) => {\n                      const fileList = e.target.files as FileList;\n                      const files = Array.from(fileList);\n                      const newFiles = [...selectedFiles, ...files];\n                      if (checkFile(newFiles)) {\n                        return alert(\"file is not valid Extention!\");\n                      }\n                      setSelectedFiles(newFiles);\n                    }}\n                  />\n                </div>\n                <div\n                  style={{\n                    width: \"100%\",\n                  }}\n                >\n                  <Button\n                    fullWidth\n                    onClick={() => {\n                      const inputFile = document.getElementById(\"input-file\");\n                      inputFile?.click();\n                    }}\n                  >\n                    CLick it to upload\n                  </Button>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div\n          className=\"pdc-mobile-buttons\"\n          style={{\n            display: \"flex\",\n            alignItems: \"center\",\n            columnGap: \"5px\",\n            justifyContent: \"center\",\n            zIndex: 999,\n          }}\n        >\n          {pdcMode === \"\" && (\n            <Button\n              sx={{\n                height: \"22px\",\n                fontSize: \"11px\",\n              }}\n              variant=\"contained\"\n              startIcon={<AddIcon sx={{ width: 15, height: 15 }} />}\n              id=\"entry-header-save-button\"\n              color=\"primary\"\n              onClick={() => {\n                setPdcMode(\"add\");\n              }}\n            >\n              New\n            </Button>\n          )}\n          <LoadingButton\n            sx={{\n              height: \"22px\",\n              fontSize: \"11px\",\n            }}\n            ref={savePDCButtonRef}\n            id=\"save-entry-header\"\n            color=\"success\"\n            variant=\"contained\"\n            type=\"submit\"\n            onClick={handleOnSave}\n            disabled={pdcMode === \"\"}\n            loading={loadingAddNew}\n            startIcon={<SaveIcon sx={{ width: 15, height: 15 }} />}\n          >\n            Save\n          </LoadingButton>\n          {(pdcMode === \"add\" || pdcMode === \"update\") && (\n            <Button\n              sx={{\n                height: \"22px\",\n                fontSize: \"11px\",\n              }}\n              variant=\"contained\"\n              startIcon={<CloseIcon sx={{ width: 15, height: 15 }} />}\n              onClick={() => {\n                Swal.fire({\n                  title: \"Are you sure?\",\n                  text: \"You won't be able to revert this!\",\n                  icon: \"warning\",\n                  showCancelButton: true,\n                  confirmButtonColor: \"#3085d6\",\n                  cancelButtonColor: \"#d33\",\n                  confirmButtonText: \"Yes, cancel it!\",\n                }).then((result) => {\n                  if (result.isConfirmed) {\n                    resetPDC();\n                  }\n                });\n              }}\n              color=\"error\"\n            >\n              Cancel\n            </Button>\n          )}\n          <Button\n            sx={{\n              height: \"22px\",\n              fontSize: \"11px\",\n            }}\n            disabled={pdcMode === \"\"}\n            variant=\"contained\"\n            startIcon={<AddIcon sx={{ width: 15, height: 15 }} />}\n            onClick={() => {\n              wait(100).then(() => {\n                const tableRows = tableRef.current.getDataFormatted();\n                const getLastCheck_No: any = tableRows[tableRows.length - 1];\n                if (modalCheckRef.current.getRefs().checknoRef.current) {\n                  modalCheckRef.current.getRefs().checknoRef.current.value =\n                    incrementCheckNo(getLastCheck_No?.Check_No);\n                }\n                tableRef.current.setSelectedRow(null);\n                tableRef.current.resetCheckBox();\n\n                setHasSelectedRow(null);\n                modalCheckRef.current.getRefs().checknoRef.current?.focus();\n              });\n              modalCheckRef.current?.showModal();\n            }}\n            ref={addRefButton}\n          >\n            Check\n          </Button>\n          <div>\n            <Button\n              disabled={pdcMode !== \"update\"}\n              id=\"basic-button\"\n              aria-controls={open ? \"basic-menu\" : undefined}\n              aria-haspopup=\"true\"\n              aria-expanded={open ? \"true\" : undefined}\n              onClick={handleClick}\n              sx={{\n                height: \"22px\",\n                fontSize: \"11px\",\n                color: \"white\",\n                backgroundColor: grey[600],\n                \"&:hover\": {\n                  backgroundColor: grey[700],\n                },\n              }}\n            >\n              Print\n            </Button>\n            <Menu\n              id=\"basic-menu\"\n              anchorEl={anchorEl}\n              open={open}\n              onClose={handleClose}\n              MenuListProps={{\n                \"aria-labelledby\": \"basic-button\",\n              }}\n            >\n              <MenuItem onClick={clickPDCReceipt}>PDC Receipt</MenuItem>\n              <MenuItem onClick={clickPDCLabeling}>PDC Labeling</MenuItem>\n            </Menu>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n\nconst ModalCheck = forwardRef(\n  ({ handleOnSave, handleOnClose, hasSelectedRow }: any, ref) => {\n    const modalRef = useRef<HTMLDivElement>(null);\n    const isMoving = useRef(false);\n    const offset = useRef({ x: 0, y: 0 });\n\n    const [showModal, setShowModal] = useState(false);\n    const [handleDelayClose, setHandleDelayClose] = useState(false);\n    const [blick, setBlick] = useState(false);\n\n    const checknoRef = useRef<HTMLInputElement>(null);\n    const bankRef = useRef<HTMLInputElement>(null);\n    const branchRef = useRef<HTMLInputElement>(null);\n    const remarksRef = useRef<HTMLTextAreaElement>(null);\n    const checkdateRef = useRef<HTMLInputElement>(null);\n    const amountRef = useRef<HTMLInputElement>(null);\n    const bankCode = useRef(\"\");\n    const _checkcountRef = useRef<HTMLInputElement>(null);\n    const searchModalInputRef = useRef<HTMLInputElement>(null);\n\n    const _slipCodeRef = useRef(\"\");\n    const _slipDateRef = useRef(\"\");\n    const _checkOR = useRef(\"\");\n\n    const closeDelay = () => {\n      setHandleDelayClose(true);\n      setTimeout(() => {\n        setShowModal(false);\n        setHandleDelayClose(false);\n        handleOnClose();\n      }, 100);\n    };\n    const closeDelayRef = useRef<any>(closeDelay);\n\n    useImperativeHandle(ref, () => ({\n      showModal: () => {\n        setShowModal(true);\n      },\n      clsoeModal: () => {\n        setShowModal(false);\n      },\n      getRefs: () => {\n        const refs = {\n          checknoRef,\n          bankRef,\n          branchRef,\n          remarksRef,\n          checkdateRef,\n          amountRef,\n          bankCode,\n          _checkcountRef,\n          _slipCodeRef,\n          _slipDateRef,\n          _checkOR,\n        };\n        return refs;\n      },\n      checknoRef,\n      bankRef,\n      branchRef,\n      remarksRef,\n      checkdateRef,\n      amountRef,\n      bankCode,\n      searchModalInputRef,\n      closeDelay,\n    }));\n\n    const {\n      UpwardTableModalSearch: BankUpwardTableModalSearch,\n      openModal: BankOpenModal,\n      closeModal: BankCloseModal,\n    } = useUpwardTableModalSearchSafeMode({\n      link: \"/task/accounting/search-pdc-banks\",\n      column: [\n        { key: \"Bank_Code\", label: \"Code\", width: 100 },\n        { key: \"Bank\", label: \"Bank Name\", width: 350 },\n      ],\n      getSelectedItem: async (rowItm: any, _: any, rowIdx: any, __: any) => {\n        if (rowItm) {\n          wait(100).then(() => {\n            bankCode.current = rowItm[0];\n            if (bankRef.current) {\n              bankRef.current.value = rowItm[1];\n            }\n            branchRef.current?.focus();\n          });\n          BankCloseModal();\n        }\n      },\n    });\n\n    useEffect(() => {\n      window.addEventListener(\"keydown\", (e: any) => {\n        if (e.key === \"Escape\") {\n          closeDelayRef.current();\n        }\n      });\n    }, []);\n\n    const handleMouseDown = (e: any) => {\n      if (!modalRef.current) return;\n\n      isMoving.current = true;\n      offset.current = {\n        x: e.clientX - modalRef.current.offsetLeft,\n        y: e.clientY - modalRef.current.offsetTop,\n      };\n\n      document.addEventListener(\"mousemove\", handleMouseMove);\n      document.addEventListener(\"mouseup\", handleMouseUp);\n    };\n\n    // Move modal with mouse\n    const handleMouseMove = (e: any) => {\n      if (!isMoving.current || !modalRef.current) return;\n\n      modalRef.current.style.left = `${e.clientX - offset.current.x}px`;\n      modalRef.current.style.top = `${e.clientY - offset.current.y}px`;\n    };\n\n    // Stop moving when releasing mouse\n    const handleMouseUp = () => {\n      isMoving.current = false;\n      document.removeEventListener(\"mousemove\", handleMouseMove);\n      document.removeEventListener(\"mouseup\", handleMouseUp);\n    };\n\n    return showModal ? (\n      <>\n        <BankUpwardTableModalSearch />\n        <div\n          style={{\n            position: \"fixed\",\n            top: 0,\n            bottom: 0,\n            left: 0,\n            right: 0,\n            background: \"transparent\",\n            zIndex: \"88\",\n          }}\n          onClick={() => {\n            setBlick(true);\n            setTimeout(() => {\n              setBlick(false);\n            }, 250);\n          }}\n        ></div>\n        <div\n          className=\"modal-add-check\"\n          ref={modalRef}\n          style={{\n            height: blick ? \"202px\" : \"200px\",\n            width: blick ? \"60.3%\" : \"60%\",\n            border: \"1px solid #64748b\",\n            position: \"absolute\",\n            left: \"50%\",\n            top: \"50%\",\n            transform: \"translate(-50%, -75%)\",\n            display: \"flex\",\n            flexDirection: \"column\",\n            zIndex: handleDelayClose ? -100 : 100,\n            opacity: handleDelayClose ? 0 : 1,\n            transition: \"all 150ms\",\n            boxShadow: \"3px 6px 32px -7px rgba(0,0,0,0.75)\",\n          }}\n        >\n          <div\n            style={{\n              height: \"22px\",\n              background: \"white\",\n              display: \"flex\",\n              justifyContent: \"space-between\",\n              padding: \"5px\",\n              position: \"relative\",\n              alignItems: \"center\",\n              cursor: \"grab\",\n            }}\n            onMouseDown={handleMouseDown}\n          >\n            <span style={{ fontSize: \"13px\", fontWeight: \"bold\" }}>\n              Check Details\n            </span>\n            <button\n              className=\"btn-check-exit-modal\"\n              style={{\n                padding: \"0 5px\",\n                borderRadius: \"0px\",\n                background: \"white\",\n                color: \"black\",\n                height: \"22px\",\n                position: \"absolute\",\n                top: 0,\n                right: 0,\n              }}\n              onClick={() => {\n                closeDelay();\n              }}\n            >\n              <CloseIcon sx={{ fontSize: \"22px\" }} />\n            </button>\n          </div>\n          <div\n            className=\"main-content\"\n            style={{\n              flex: 1,\n              background: \"#F1F1F1\",\n              padding: \"5px\",\n              display: \"flex\",\n            }}\n          >\n            <div\n              className=\"first-content\"\n              style={{\n                width: \"55%\",\n                display: \"flex\",\n                flexDirection: \"column\",\n                rowGap: \"5px\",\n                padding: \"10px\",\n              }}\n            >\n              <TextInput\n                label={{\n                  title: \"Check No. : \",\n                  style: {\n                    fontSize: \"12px\",\n                    fontWeight: \"bold\",\n                    width: \"70px\",\n                  },\n                }}\n                input={{\n                  type: \"text\",\n                  style: { width: \"160px\" },\n                  onKeyDown: (e) => {\n                    if (e.code === \"NumpadEnter\" || e.code === \"Enter\") {\n                      bankRef.current?.focus();\n                    }\n                  },\n                }}\n                inputRef={checknoRef}\n              />\n              <TextInput\n                containerStyle={{\n                  width: \"370px\",\n                }}\n                label={{\n                  title: \"Bank : \",\n                  style: {\n                    fontSize: \"12px\",\n                    fontWeight: \"bold\",\n                    width: \"70px\",\n                  },\n                }}\n                input={{\n                  disabled: false,\n                  type: \"text\",\n                  style: { width: \"300px\" },\n                  onKeyDown: (e) => {\n                    if (e.code === \"NumpadEnter\" || e.code === \"Enter\") {\n                      BankOpenModal(e.currentTarget.value);\n                    }\n                  },\n                }}\n                icon={<AccountBoxIcon sx={{ fontSize: \"18px\" }} />}\n                onIconClick={(e) => {\n                  e.preventDefault();\n                  if (bankRef.current) {\n                    BankOpenModal(bankRef.current.value);\n                  }\n                }}\n                inputRef={bankRef}\n              />\n              <TextInput\n                label={{\n                  title: \"Branch : \",\n                  style: {\n                    fontSize: \"12px\",\n                    fontWeight: \"bold\",\n                    width: \"70px\",\n                  },\n                }}\n                input={{\n                  type: \"text\",\n                  style: { width: \"300px\" },\n                  onKeyDown: (e) => {\n                    if (e.code === \"NumpadEnter\" || e.code === \"Enter\") {\n                      remarksRef.current?.focus();\n                    }\n                  },\n                }}\n                inputRef={branchRef}\n              />\n              <TextAreaInput\n                label={{\n                  title: \"Remarks : \",\n                  style: {\n                    fontSize: \"12px\",\n                    fontWeight: \"bold\",\n                    width: \"70px\",\n                  },\n                }}\n                textarea={{\n                  rows: 4,\n                  style: { width: \"300px\" },\n                  onKeyDown: (e) => {\n                    e.stopPropagation();\n                    if (\n                      (e.code === \"NumpadEnter\" && !e.shiftKey) ||\n                      (e.code === \"Enter\" && !e.shiftKey)\n                    ) {\n                      checkdateRef.current?.focus();\n                    }\n                  },\n                }}\n                _inputRef={remarksRef}\n              />\n            </div>\n            <div\n              className=\"second-content\"\n              style={{\n                width: \"45%\",\n                display: \"flex\",\n                flexDirection: \"column\",\n                rowGap: \"5px\",\n                position: \"relative\",\n                padding: \"10px\",\n                alignItems: \"flex-end\",\n              }}\n            >\n              <TextInput\n                label={{\n                  title: \"Date : \",\n                  style: {\n                    fontSize: \"12px\",\n                    fontWeight: \"bold\",\n                    width: \"90px\",\n                  },\n                }}\n                input={{\n                  type: \"date\",\n                  style: { width: \"200px\" },\n                  defaultValue: format(new Date(), \"yyyy-MM-dd\"),\n                  onKeyDown: (e) => {\n                    if (e.code === \"NumpadEnter\" || e.code === \"Enter\") {\n                      amountRef.current?.focus();\n                    }\n                  },\n                }}\n                inputRef={checkdateRef}\n              />\n              <TextFormatedInput\n                label={{\n                  title: \"Amount : \",\n                  style: {\n                    fontSize: \"12px\",\n                    fontWeight: \"bold\",\n                    width: \"90px\",\n                  },\n                }}\n                input={{\n                  placeholder: \"0.00\",\n                  defaultValue: \"\",\n                  type: \"text\",\n                  style: { width: \"200px\" },\n                  onKeyDown: (e) => {\n                    if (e.code === \"NumpadEnter\" || e.code === \"Enter\") {\n                      if (handleOnSave) {\n                        _checkcountRef.current?.focus();\n                      }\n                    }\n                  },\n                }}\n                inputRef={amountRef}\n              />\n              <TextInput\n                label={{\n                  title: \"Check Count : \",\n                  style: {\n                    fontSize: \"12px\",\n                    fontWeight: \"bold\",\n                    width: \"90px\",\n                  },\n                }}\n                input={{\n                  min: 1,\n                  defaultValue: \"1\",\n                  type: \"number\",\n                  style: { width: \"200px\", textAlign: \"right\" },\n                  onKeyDown: (e) => {\n                    if (e.code === \"NumpadEnter\" || e.code === \"Enter\") {\n                      handleOnSave();\n                    }\n                  },\n                  onFocus: (e) => {\n                    e.currentTarget.select();\n                  },\n                }}\n                inputRef={_checkcountRef}\n              />\n              <div\n              className=\"modal-add-check-buttons\"\n                style={{\n                  display: \"flex\",\n                  columnGap: \"10px\",\n                  flex: 1,\n                  justifyContent: \"flex-end\",\n                  alignItems: \"flex-end\",\n                }}\n              >\n                <Button\n                  variant=\"contained\"\n                  color=\"success\"\n                  style={{\n                    height: \"22px\",\n                    fontSize: \"12px\",\n                  }}\n                  onClick={(e) => {\n                    if (handleOnSave) {\n                      handleOnSave();\n                    }\n                  }}\n                >\n                  OK\n                </Button>\n                <Button\n                  variant=\"contained\"\n                  color=\"error\"\n                  style={{\n                    height: \"22px\",\n                    fontSize: \"12px\",\n                  }}\n                  onClick={(e) => {\n                    closeDelay();\n                  }}\n                >\n                  Cancel\n                </Button>\n              </div>\n            </div>\n          </div>\n          <style>\n            {`\n              .btn-check-exit-modal:hover{\n                background:red !important;\n                color:white !important;\n              }\n            `}\n          </style>\n        </div>\n      </>\n    ) : null;\n  }\n);\n\nexport function setNewStateValue(dispatch: any, obj: any) {\n  Object.entries(obj).forEach(([field, value]) => {\n    dispatch({ type: \"UPDATE_FIELD\", field, value });\n  });\n}\nexport function incrementCheckNo(Check_No: string) {\n  if (Check_No) {\n    let incrementedNumber = (parseInt(Check_No) + 1).toString();\n    while (incrementedNumber.length < Check_No.length) {\n      incrementedNumber = \"0\" + incrementedNumber;\n    }\n    return incrementedNumber;\n  }\n\n  return \"001\";\n}\n\nfunction parseNumber(value: any) {\n  return isNaN(value) || value === \"\" ? 0 : Number(value);\n}\nfunction incrementStringNumbers(str: string, increment: number) {\n  let num = parseInt(str);\n  num = num + increment;\n  return num.toString().padStart(str.length, \"0\");\n}\n\nfunction incrementDate(dateString: any, i: number) {\n  const currentDate = new Date(dateString);\n  return format(addMonths(currentDate, i), \"MM/dd/yyyy\");\n}\nfunction isValidDate(dateString: string): boolean {\n  const date = new Date(dateString);\n  return date instanceof Date && !isNaN(date.getTime());\n}\n\nfunction addMonths(date: Date, monthsToAdd: number) {\n  let newDate = new Date(date);\n  newDate.setMonth(newDate.getMonth() + monthsToAdd);\n\n  // Check if the day overflowed into the next month\n  if (newDate.getDate() !== date.getDate()) {\n    newDate.setDate(0); // Set to the last day of the previous month\n  }\n\n  return newDate;\n}\n","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-7 3c1.93 0 3.5 1.57 3.5 3.5S13.93 13 12 13s-3.5-1.57-3.5-3.5S10.07 6 12 6zm7 13H5v-.23c0-.62.28-1.2.76-1.58C7.47 15.82 9.64 15 12 15s4.53.82 6.24 2.19c.48.38.76.97.76 1.58V19z\"\n}), 'AccountBox');\nexports.default = _default;","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\"\n}), 'Add');\nexports.default = _default;","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M5 20h14v-2H5v2zM19 9h-4V3H9v6H5l7 7 7-7z\"\n}), 'Download');\nexports.default = _default;","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M20 6h-8l-2-2H4c-1.1 0-1.99.9-1.99 2L2 18c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V8c0-1.1-.9-2-2-2zm0 12H4V8h16v10zM8 13.01l1.41 1.41L11 12.84V17h2v-4.16l1.59 1.59L16 13.01 12.01 9 8 13.01z\"\n}), 'DriveFolderUpload');\nexports.default = _default;","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M17 3H5c-1.11 0-2 .9-2 2v14c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V7l-4-4zm-5 16c-1.66 0-3-1.34-3-3s1.34-3 3-3 3 1.34 3 3-1.34 3-3 3zm3-10H5V5h10v4z\"\n}), 'Save');\nexports.default = _default;"],"names":["_ref","_ref$title","title","_jsxs","Helmet","children","_jsx","concat","process","rel","type","href","reducer","state","action","_objectSpread","_defineProperty","field","value","pdcColumn","key","label","width","hide","pdcSearchColumn","headerName","flex","pdcBanksColumn","PostDateChecks","_queryFn","_mutationFn","_mutationFn2","_onSuccess","_getSelectedItem","_getSelectedItem2","_mutationFn3","modalCheckRef","useRef","tableRef","_React$useState","React","_React$useState2","_slicedToArray","anchorEl","setAnchorEl","open","Boolean","handleClick","event","currentTarget","handleClose","_useState","useState","_useState2","isDragging","setIsDragging","_useState3","_useState4","selectedFiles","setSelectedFiles","_useState5","_useState6","showModal","setShowModal","searchInputRef","_useState7","_useState8","hasSelectedRow","setHasSelectedRow","_useState9","_useState10","pdcMode","setPdcMode","_useContext","useContext","AuthContext","myAxios","user","fileInputRef","savePDCButtonRef","addRefButton","subRefNoRef","PNoRef","subAccountRef","refNoRef","dateRef","remakrsRef","pnRef","branchRef","clientnameRef","_useQuery","useQuery","queryKey","queryFn","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","get","headers","Authorization","accessToken","abrupt","sent","stop","apply","arguments","refetchOnWindowFocus","onSuccess","res","response","wait","then","current","data","RefNo","pdcID","newRefNumberLoading","isLoading","refetchNewRefNumber","refetch","_useMutation","useMutation","mutationKey","mutationFn","_x","_callee2","variables","_context2","mode","post","success","resetPDC","Swal","position","icon","message","showConfirmButton","timer","mutate","loadingAddNew","_useMutation2","_x2","_callee3","_context3","_x3","_callee5","_formatDataToDocument","Ref_No","_response$data$upload","uploadFiles","newObjContainerBasic","fileSelected","formatDataToDocument","_context6","_x4","_x5","_callee4","dataDocument","url","newObjContainer","_loop","index","_context5","basicItem","mainURL","blob","file","reader","_context4","uniqueFilename","fetch","File","fileName","fileType","FileReader","push","Promise","resolve","reject","onload","onerror","Error","name","readAsDataURL","length","delegateYield","alert","getSearchPDCCheck","upload","JSON","parse","all","map","itm","Check_Date","format","Date","DateDeposit","Check_Amnt","formatNumber","parseFloat","toString","replace","setDataFormated","Name","PNo","Acronym","Remarks","IDNo","sub_account","mutateSelectedSearch","isLoadingSelectedSearch","_useUpwardTableModalS","useUpwardTableModalSearchSafeMode","size","link","column","getSelectedItem","_x6","_x7","_x8","_x9","_callee6","rowItm","_","rowIdx","__","_context7","clientCloseModal","ClientUpwardTableModalSearch","UpwardTableModalSearch","clientOpenModal","openModal","closeModal","_useUpwardTableModalS2","_x10","_x11","_x12","_x13","_callee7","_context8","console","log","ref_no","pdcCloseModal","PDCUpwardTableModalSearch","pdcOpenModal","handleOnSave","useCallback","_x14","_callee8","e","_refNoRef$current","_pnRef$current2","_dateRef$current","_clientnameRef$curren","_remakrsRef$current","_branchRef$current","pdcTableData","filePromises","fileTransfer","fileToSave","stateSubmited","_context9","files","_loop2","i","_event$target","datakey","fileContent","target","result","getDataFormatted","setTimeout","_pnRef$current","click","Branch","checks","stringify","codeCondfirmationAlert","isUpdate","cb","userCodeConfirmation","saveCondfirmationAlert","isConfirm","handleDragLeave","preventDefault","handleDragEnter","handleDrop","_fileInputRef$current","fileList","dataTransfer","Array","from","newFiles","_toConsumableArray","checkFile","_useMutation3","_x15","_callee9","_context10","responseType","pdfBlob","Blob","pdfUrl","URL","createObjectURL","window","encodeURIComponent","mutatePrint","isLoadingPrint","clickPDCReceipt","_refNoRef$current2","_pnRef$current3","_dateRef$current2","_clientnameRef$curren2","_remakrsRef$current2","_branchRef$current2","printOption","reportTitle","clickPDCLabeling","_clientnameRef$curren3","_pnRef$current4","_refNoRef$current3","pno","ref","department","setSelectedRow","resetCheckBox","setData","num","toLocaleString","minimumFractionDigits","maximumFractionDigits","handleCheckDetailsSave","getRefs","checknoRef","bankRef","remarksRef","checkdateRef","amountRef","_modalCheckRef$curren","tableRows","selectedIndex","getSelectedRow","filter","Check_No","focus","dateString","date","isNaN","getTime","isValidDate","_modalCheckRef$curren2","selectedRow","getData","isCheckFind","includes","parseNumber","_slipCodeRef","_slipDateRef","_checkOR","bankCode","clsoeModal","checkCount","parseInt","_checkcountRef","newData","_modalCheckRef$curren3","incrementStringNumbers","incrementDate","_modalCheckRef$curren4","useEffect","handleKeyDown","ctrlKey","metaKey","addEventListener","removeEventListener","isDisableField","_Fragment","ModalCheck","handleOnClose","PageHelmet","Loading","className","style","height","padding","backgroundColor","flexDirection","display","boxSizing","marginBottom","Box","sx","theme","alignItems","columnGap","TextInput","containerClassName","fontSize","fontWeight","input","onKeyDown","SearchIcon","onIconClick","inputRef","Button","variant","startIcon","AddIcon","id","color","onClick","LoadingButton","disabled","loading","SaveIcon","CloseIcon","text","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","isConfirmed","_modalCheckRef$curren6","_modalCheckRef$curren5","getLastCheck_No","incrementCheckNo","undefined","grey","Menu","onClose","MenuListProps","MenuItem","code","gap","border","borderRadius","readOnly","_dateRef$current3","RestartAltIcon","disableIcon","defaultValue","_remakrsRef$current3","TextAreaInput","textarea","rows","_pnRef$current5","stopPropagation","shiftKey","_inputRef","PersonSearchIcon","_clientnameRef$curren4","_savePDCButtonRef$cur","DownloadIcon","DataGridViewReact","containerStyle","disbaleTable","columns","showSequence","rowSelected","RowIndex","_modalCheckRef$curren7","splice","top","bottom","left","right","background","zIndex","justifyContent","overflow","margin","boxShadow","IconButton","onDragEnter","onDragOver","onDragLeave","onDrop","flexWrap","idx","DisplayFile","fileInput","transform","textAlign","DriveFolderUploadIcon","multiple","onChange","fullWidth","inputFile","document","getElementById","_modalCheckRef$curren9","_modalCheckRef$curren8","forwardRef","_ref2","_getSelectedItem3","modalRef","isMoving","offset","x","y","_useState11","_useState12","_useState13","_useState14","handleDelayClose","setHandleDelayClose","_useState15","_useState16","blick","setBlick","searchModalInputRef","closeDelay","closeDelayRef","useImperativeHandle","_useUpwardTableModalS3","_x16","_x17","_x18","_x19","_callee10","_context11","_branchRef$current3","BankCloseModal","BankUpwardTableModalSearch","BankOpenModal","handleMouseMove","clientX","clientY","handleMouseUp","opacity","transition","cursor","onMouseDown","offsetLeft","offsetTop","rowGap","_bankRef$current","AccountBoxIcon","_remarksRef$current","_checkdateRef$current","_amountRef$current","TextFormatedInput","placeholder","_checkcountRef$curren","min","onFocus","select","setNewStateValue","dispatch","obj","Object","entries","forEach","_ref3","_ref4","incrementedNumber","Number","str","increment","padStart","currentDate","monthsToAdd","newDate","setMonth","getMonth","getDate","setDate","addMonths","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d"],"sourceRoot":""}