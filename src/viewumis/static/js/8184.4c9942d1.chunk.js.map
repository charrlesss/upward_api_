{"version":3,"file":"static/js/8184.4c9942d1.chunk.js","mappings":"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","sources":["components/NumberFormat.tsx","components/DatePicker.tsx","feautures/Admin/Task/Claims/Claims.tsx"],"sourcesContent":["import React from \"react\";\nimport { NumericFormat, NumericFormatProps } from \"react-number-format\";\n\ninterface CustomProps {\n  onChange: (event: { target: { name: string; value: string } }) => void;\n  name: string;\n}\n\nexport const NumericFormatCustom = React.forwardRef<\n  NumericFormatProps,\n  CustomProps\n>(function NumericFormatCustom(props, ref) {\n  const { onChange, ...other } = props;\n\n  return (\n    <NumericFormat\n      {...other}\n      getInputRef={ref}\n      onValueChange={(values) => {\n        onChange({\n          target: {\n            name: props.name,\n            value: values.value,\n          },\n        });\n      }}\n      allowNegative={false}\n      thousandSeparator\n      valueIsNumericString\n      //   prefix=\"$\"\n    />\n  );\n});\n","import { LocalizationProvider } from \"@mui/x-date-pickers/LocalizationProvider\";\nimport { AdapterDateFns } from \"@mui/x-date-pickers/AdapterDateFns\";\nimport { DatePicker } from \"@mui/x-date-pickers\";\nexport default function CustomDatePicker({\n  label,\n  name,\n  onChange,\n  value,\n  onKeyDown,\n  inputRef,\n  datePickerRef,\n  fullWidth,\n  textField,\n  minWidth = \"200px\",\n  ...rest\n}: any) {\n  return (\n    <LocalizationProvider dateAdapter={AdapterDateFns}>\n      <DatePicker\n      floatingLabelStyle={{color: \"black\" }}\n        value={value}\n        onChange={onChange}\n        ref={datePickerRef}\n        slotProps={{\n          textField: {\n            size: \"small\",\n            label,\n            name,\n            onKeyDown,\n            inputRef: inputRef,\n            fullWidth,\n\n            ...textField,\n          },\n        }}\n        InputLabelProps={{\n          sx: {\n            color: \"black\",\n          },\n        }}\n        sx={{\n          minWidth,\n          fieldset: { borderColor: \"black\" },\n          \".MuiFormLabel-root\": { fontSize: \"14px\" },\n          \".MuiFormLabel-root[data-shrink=false]\": {\n            top: \"-5px\",\n          },\n        }}\n        {...rest}\n      />\n    </LocalizationProvider>\n  );\n}\n","import React, {\n  useContext,\n  useId,\n  useReducer,\n  useRef,\n  useState,\n  useEffect,\n  useImperativeHandle,\n  forwardRef,\n} from \"react\";\nimport useQueryModalTable from \"../../../../hooks/useQueryModalTable\";\nimport {\n  Button,\n  FormControl,\n  IconButton,\n  InputAdornment,\n  InputLabel,\n  MenuItem,\n  OutlinedInput,\n  Select,\n  TextField,\n  Menu,\n  Stack,\n} from \"@mui/material\";\nimport LoadingButton from \"@mui/lab/LoadingButton\";\nimport PersonSearchIcon from \"@mui/icons-material/PersonSearch\";\nimport { AuthContext } from \"../../../../components/AuthContext\";\nimport CloudDownloadIcon from \"@mui/icons-material/CloudDownload\";\nimport RemoveRedEyeIcon from \"@mui/icons-material/RemoveRedEye\";\nimport HighlightOffIcon from \"@mui/icons-material/HighlightOff\";\nimport CloudUploadIcon from \"@mui/icons-material/CloudUpload\";\nimport CustomDatePicker from \"../../../../components/DatePicker\";\nimport { useMutation, useQuery } from \"react-query\";\nimport RestartAltIcon from \"@mui/icons-material/RestartAlt\";\nimport Swal from \"sweetalert2\";\nimport { flushSync } from \"react-dom\";\nimport { codeCondfirmationAlert } from \"../../../../lib/confirmationAlert\";\nimport ReactDOMServer from \"react-dom/server\";\nimport format from \"date-fns/format\";\nimport \"../../../../style/claim.css\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\nimport VisibilityIcon from \"@mui/icons-material/Visibility\";\nimport { grey } from \"@mui/material/colors\";\nimport { NumericFormatCustom } from \"../../../../components/NumberFormat\";\nimport ArticleIcon from \"@mui/icons-material/Article\";\n\nconst initialClaimState = {\n  claims_id: \"\",\n  dateReported: null,\n  dateAccident: null,\n  dateInspected: null,\n  department: 1,\n  remarks: \"\",\n  search: \"\",\n  mode: \"\",\n  claim_no: \"\",\n};\nconst initialPolicyState = {\n  policy: \"\",\n  claim_type: 0,\n  insurance: \"\",\n  PolicyNo: \"\",\n  PlateNo: \"\",\n  Model: \"\",\n  BodyType: \"\",\n  Make: \"\",\n  ChassisNo: \"\",\n  MotorNo: \"\",\n  ORNo: \"\",\n  CoverNo: \"\",\n  BLTFileNo: \"\",\n  AssuredName: \"\",\n  IDNo: \"\",\n  totaDue: \"00.00\",\n  totalpaid: \"00.00\",\n  balance: \"00.00\",\n  remitted: \"00.00\",\n  Account: \"\",\n  status: 0,\n  DateFrom: \"\",\n  DateTo: \"\",\n  DateReceived: null,\n  DateClaim: null,\n  AmountClaim: \"\",\n  AmountApproved: \"\",\n  NameTPPD: \"\",\n};\nconst claimType = [\n  \"OWN DAMAGE\",\n  \"CARNAP\",\n  \"VTPL-PROPERTY DAMAGE\",\n  \"VTPL-BODILY INJURY\",\n  \"THIRD PARTY-DEATH\",\n];\nconst basicDocuments = [\n  { label: \"Policy\", name: \"policyFile\" },\n  { label: \"ENDORCEMENT\", name: \"endorsement\" },\n  { label: \"OR of Premium Payment\", name: \"OPP\" },\n  {\n    label: \"Official Receipt and Certificate of Registration\",\n    name: \"ORCR\",\n  },\n  {\n    label: \"Drivers License and Official Receipt\",\n    name: \"DLOR\",\n  },\n  { label: \"Police Report\", name: \"PR\" },\n  { label: \"Driver's Affidavit\", name: \"DA\" },\n  { label: \"Stencil of Motor and Chassis No.\", name: \"SMCN\" },\n];\nconst insuranceDocuments = [\n  { label: \"LOA\", name: \"loa\" },\n  { label: \"Offer Letter\", name: \"offerLetter\" },\n  { label: \"Comparative Evaluation\", name: \"CE\" },\n];\nconst claimsStatus = [\n  \"Ongoing Repair\",\n  \"With Offer Letter\",\n  \"With Lacking Documents\",\n  \"With LOA\",\n  \"Submitted to Insurance Company\",\n  \"For Evaluation\",\n  \"For Inspection\",\n  \"For Check Preparation\",\n  \"Denied\",\n  \"Done\",\n  \"\",\n];\nconst renderFields = () => {\n  const arrs = [\n    [\n      { label: \"Copies of Colored Picture\", name: \"ct1_1\" },\n      { label: \"Copy of Repair Estimate\", name: \"ct1_2\" },\n    ],\n    [\n      { label: \"Complaint Sheet\", name: \"ct2_1\" },\n      { label: \"Alarm Sheet\", name: \"ct2_2\" },\n      { label: \"Original Keys\", name: \"ct2_3\" },\n      { label: \"Certificate of NO RECOVERY\", name: \"ct2_4\" },\n    ],\n    [\n      { label: \"Copies of Colored Picture\", name: \"ct3_1\" },\n      { label: \"Copy of Repair Estimate\", name: \"ct3_2\" },\n      { label: \"Certificate of Registration and OR\", name: \"ct3_3\" },\n      { label: \"Photocopy of Driver's license\", name: \"ct3_4\" },\n      { label: \"Certificate of NO Claim from Insurer\", name: \"ct3_5\" },\n    ],\n    [\n      { label: \"Medical Certificate\", name: \"ct4_1\" },\n      { label: \"Receipt of Medicine/Drugs\", name: \"ct4_2\" },\n      { label: \"Hospital Bill\", name: \"ct4_3\" },\n      { label: \"Birth Certificate\", name: \"ct4_4\" },\n      { label: \"Affidavit of Desistance\", name: \"ct4_5\" },\n    ],\n    [\n      { label: \"Death Certificate, ID\", name: \"ct5_1\" },\n      { label: \"Marriage Contract \", name: \"ct5_2\" },\n      { label: \"Funeral/Burial Official Receipts\", name: \"ct5_3\" },\n    ],\n  ];\n  return arrs;\n};\nexport const reducer = (state: any, action: any) => {\n  switch (action.type) {\n    case \"UPDATE_FIELD\":\n      return {\n        ...state,\n        [action.field]: action.value,\n      };\n    default:\n      return state;\n  }\n};\n\nfunction Claims() {\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\n  const [claimsSubmited, setClaimsSubmited] = useState([]);\n  const { myAxios, user } = useContext(AuthContext);\n  const [claimState, claimDispatch] = useReducer(reducer, initialClaimState);\n  const [policyState, policyDispatch] = useReducer(reducer, initialPolicyState);\n  const [listofClaim, setListofClaim] = useState<Array<any>>([]);\n  const [showModal, setShowModal] = useState(false);\n  const searchClaimInputRef = useRef<HTMLInputElement>(null);\n  const policySearchInputRef = useRef<HTMLInputElement>(null);\n  const datePickerRef = useRef<HTMLElement>(null);\n  const dateAccidentRef = useRef<HTMLElement>(null);\n  const dateInspectedRef = useRef<HTMLElement>(null);\n  const { isLoading: isLoadingClaimsId, refetch: refetchClaimsId } = useQuery({\n    queryKey: \"get-claims-id\",\n    queryFn: async () =>\n      await myAxios.get(`/task/claims/claims/get-claims-id`, {\n        headers: {\n          Authorization: `Bearer ${user?.accessToken}`,\n        },\n      }),\n    refetchOnWindowFocus: false,\n    onSuccess(res) {\n      claimDispatch({\n        type: \"UPDATE_FIELD\",\n        field: \"claims_id\",\n        value: res.data.claim_id[0].id,\n      });\n    },\n  });\n  const open = Boolean(anchorEl);\n  const handleClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n    setAnchorEl(event.currentTarget);\n  };\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n  const handleInputChange = (e: any) => {\n    const { name, value } = e.target;\n    claimDispatch({ type: \"UPDATE_FIELD\", field: name, value });\n  };\n  const { isLoading: isLoadingSelectedSearch, mutate: mutateSelectedSearch } =\n    useMutation({\n      mutationFn: (variable: any) => {\n        return myAxios.post(\n          \"/task/claims/claims/selected-search-claims\",\n          variable,\n          {\n            headers: {\n              Authorization: `Bearer ${user?.accessToken}`,\n            },\n          }\n        );\n      },\n      onSuccess(res) {\n        const formattedSelectedData = res.data.formattedSelectedData;\n        const claims_id = res.data.claims_id;\n        const policyTypeContainer: Array<any> = [];\n        formattedSelectedData.map(async (item: any) => {\n          policyTypeContainer.push(\n            parseInt(item.policyState.claim_type?.toString())\n          );\n          const basicDocuments: Array<any> = item.basicFileCustom;\n          const otherDocuments: Array<any> = item.otherFileCustom;\n          const insuranceDocuments: Array<any> = item.insuranceFileCustom;\n          const newObjContainerBasic = await formatDataToDocument(\n            basicDocuments,\n            `${process.env.REACT_APP_IMAGE_URL}claim-files/${claims_id}/${item.id}/Basic-Document/`\n          );\n\n          const newObjContainerOther = await formatDataToDocument(\n            otherDocuments,\n            `${process.env.REACT_APP_IMAGE_URL}claim-files/${claims_id}/${item.id}/Other-Document/`\n          );\n\n          const newObjContainerInsurance = await formatDataToDocument(\n            insuranceDocuments,\n            `${process.env.REACT_APP_IMAGE_URL}claim-files/${claims_id}/${item.id}/Insurance-Document/`\n          );\n\n          item.basicFileCustom = await Promise.all(newObjContainerBasic);\n          item.otherFileCustom = await Promise.all(newObjContainerOther);\n          item.insuranceFileCustom = await Promise.all(\n            newObjContainerInsurance\n          );\n\n          return item;\n        });\n        async function formatDataToDocument(\n          dataDocument: Array<any>,\n          url: string\n        ) {\n          const newObjContainer: Array<any> = [];\n          for (let index = 0; index < dataDocument.length; index++) {\n            const basicItem = dataDocument[index];\n            const mainURL = `${url}/${basicItem.uniqueFilename}`;\n            const response = await fetch(mainURL);\n            const blob = await response.blob();\n            const file = new File([blob], basicItem.fileName, {\n              type: basicItem.fileType,\n            });\n            const reader = new FileReader();\n            newObjContainer.push(\n              new Promise((resolve, reject) => {\n                reader.onload = function (event) {\n                  resolve({\n                    fileContent: event.target?.result,\n                    datakey: basicItem.datakey,\n                    fileName: basicItem.fileName,\n                    fileType: basicItem.fileType,\n                    file,\n                  });\n                };\n                reader.onerror = function (event) {\n                  reject(new Error(\"Error reading file: \" + file.name));\n                };\n                reader.readAsDataURL(file);\n              })\n            );\n          }\n          return newObjContainer;\n        }\n        setListofClaim(policyTypeContainer);\n        setNewStateValue(policyDispatch, formattedSelectedData[0].policyState);\n        setClaimsSubmited(formattedSelectedData);\n      },\n    });\n  const { isLoading: isLoadingClaimSave, mutate: mutateClaimSave } =\n    useMutation({\n      mutationKey: \"save-claim\",\n      mutationFn: async (variable: any) =>\n        await myAxios.post(\"/task/claims/claims/save\", variable, {\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${user?.accessToken}`,\n          },\n        }),\n      onSuccess(res) {\n        const response = res as any;\n\n        if (response.data.success) {\n          setNewStateValue(claimDispatch, initialClaimState);\n          setNewStateValue(policyDispatch, initialPolicyState);\n          setClaimsSubmited([]);\n          refetchClaimsId();\n\n          return Swal.fire({\n            position: \"center\",\n            icon: \"success\",\n            title: response.data.message,\n            timer: 1500,\n          });\n        }\n        return Swal.fire({\n          position: \"center\",\n          icon: \"warning\",\n          title: response.data.message,\n          timer: 1500,\n        });\n      },\n    });\n  const {\n    isLoading: isLoadingClaimSelectedPolicyDetails,\n    mutate: mutateClaimSelectedPolicyDetails,\n  } = useMutation({\n    mutationKey: \"get-selected-policy-details\",\n    mutationFn: async (variable: any) =>\n      await myAxios.post(\n        \"/task/claims/claims/get-selected-policy-details\",\n        variable,\n        {\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${user?.accessToken}`,\n          },\n        }\n      ),\n    onSuccess(res) {\n      const response = res as any;\n\n      if (response.data.success && response.data.data.length > 0) {\n        console.log(response);\n        setNewStateValue(policyDispatch, response.data.data[0]);\n      }\n      closePolicyModal();\n    },\n  });\n  const {\n    ModalComponent: SearchClaimModal,\n    isLoading: isLoadingClaimModal,\n    openModal: openClaimModal,\n    closeModal: closeClaimModal,\n  } = useQueryModalTable({\n    link: {\n      url: \"/task/claims/claims/search-claims\",\n      queryUrlName: \"searchClaims\",\n    },\n    columns: [\n      { field: \"claims_id\", headerName: \"Ref No.\", width: 300 },\n      { field: \"AssuredName\", headerName: \"Name\", width: 350 },\n      { field: \"PolicyNo\", headerName: \"Policy No.\", width: 200 },\n      { field: \"IDNo\", headerName: \"ID No.\", width: 200 },\n      { field: \"ChassisNo\", headerName: \"Chassis No.\", width: 200 },\n      { field: \"MotorNo\", headerName: \"Motor No.\", width: 200 },\n      { field: \"PlateNo\", headerName: \"Plate No.\", width: 200 },\n    ],\n    queryKey: \"search-claims\",\n    uniqueId: \"claims_id\",\n    responseDataKey: \"claims\",\n    onSelected: (selectedRowData) => {\n      mutateSelectedSearch({ selectedRowData });\n      setNewStateValue(claimDispatch, {\n        claims_id: selectedRowData[0].claims_id,\n        dateReported: selectedRowData[0].dateReported,\n        dateAccident: selectedRowData[0].dateAccident,\n        dateInspected: selectedRowData[0].dateInspected,\n        department: parseInt(selectedRowData[0].department),\n        remarks: selectedRowData[0].remarks,\n        claim_no: \"\",\n        mode: \"update\",\n      });\n      closeClaimModal();\n    },\n    searchRef: searchClaimInputRef,\n  });\n  const {\n    ModalComponent: PolicyModal,\n    isLoading: isLoadingPolicyModal,\n    openModal: openPolicyModal,\n    closeModal: closePolicyModal,\n  } = useQueryModalTable({\n    link: {\n      url: \"/task/claims/claims/get-policy\",\n      queryUrlName: \"searchPolicy\",\n    },\n    columns: [\n      { field: \"PolicyNo\", headerName: \"Policy No.\", width: 300 },\n      { field: \"AssuredName\", headerName: \"Name.\", width: 350 },\n      { field: \"IDNo\", headerName: \"ID No.\", width: 200 },\n      { field: \"ChassisNo\", headerName: \"Chassis No.\", width: 200 },\n    ],\n    queryKey: \"get-policy\",\n    uniqueId: \"PolicyNo\",\n    responseDataKey: \"claimPolicy\",\n    onSelected: (selectedRowData) => {\n      setNewStateValue(policyDispatch, selectedRowData[0]);\n      mutateClaimSelectedPolicyDetails({\n        PolicyNo: selectedRowData[0].PolicyNo,\n      });\n    },\n    searchRef: policySearchInputRef,\n  });\n\n  function sortList(data: any) {\n    if (data.length <= 0) {\n      return [];\n    }\n    const sortedData = data.sort((a: any, b: any) => {\n      if (a.id < b.id) {\n        return -1;\n      }\n      if (a.id > b.id) {\n        return 1;\n      }\n      return 0;\n    });\n    return sortedData;\n  }\n  const handleTdClick = (itm: any) => {\n    flushSync(() => {\n      setShowModal(true);\n    });\n    const groupByLabel = (arr: any) => {\n      const grouped: any = {};\n      arr.forEach((item: any) => {\n        if (!grouped[item.datakey]) {\n          grouped[item.datakey] = [];\n        }\n        grouped[item.datakey].push(item);\n      });\n\n      return Object.entries(grouped);\n    };\n    const displayFile = (groupedData: Array<any>) => {\n      groupedData.forEach(([datakey, items]: any) => {\n        const fileList = new DataTransfer();\n        const input = document.querySelector(\n          `#${datakey} input`\n        ) as HTMLInputElement;\n        items.forEach((itm: any) => {\n          fileList.items.add(itm.file);\n        });\n        input.files = fileList.files;\n        input.dispatchEvent(new Event(\"change\", { bubbles: true }));\n      });\n    };\n    setNewStateValue(policyDispatch, itm.policyState);\n    displayFile(groupByLabel(itm.basicFileCustom));\n    displayFile(groupByLabel(itm.otherFileCustom));\n    displayFile(groupByLabel(itm.insuranceFileCustom));\n    handleInputChange({\n      target: { name: \"claim_no\", value: itm.id },\n    });\n  };\n\n  const clickClaimInformationSheet = () => {\n    localStorage.setItem(\"paper-width\", \"8.5in\");\n    localStorage.setItem(\"paper-height\", \"13in\");\n    let printString = (claimdsDetails: any) => {\n      return (\n        <div>\n          <div\n            style={{\n              borderBottom: \"3px solid black\",\n            }}\n          >\n            <h3\n              style={{\n                textAlign: \"center\",\n                fontWeight: \"bold\",\n              }}\n            >\n              {claimdsDetails.department === 0\n                ? \"UPWARD INSURANCE SERVICES AND MANAGEMENT INC.\"\n                : \"UPWARD CONSULTANT SERVICES AND MANAGEMENT INC.\"}\n            </h3>\n          </div>\n          <h1\n            style={{\n              textAlign: \"center\",\n              fontWeight: \"bolder\",\n            }}\n          >\n            CLAIMS INFORMATION SHEET\n          </h1>\n          <p\n            style={{\n              textAlign: \"right\",\n              fontSize: \"16px\",\n              fontWeight: \"bold\",\n            }}\n          >\n            <p\n              style={{\n                textAlign: \"right\",\n                fontSize: \"16px\",\n              }}\n            >\n              <span style={{ fontWeight: \"bolder\" }}>CLAIM NO.: </span>\n              <span style={{ fontWeight: \"bold\" }}>\n                {\" \"}\n                {claimdsDetails.claims_id}\n              </span>\n            </p>\n          </p>\n          <div\n            style={{\n              minHeight: \"200px\",\n              maxHeight: \"auto\",\n              marginBottom: \"20px\",\n              display: \"flex\",\n              border: \"2px solid black\",\n            }}\n          >\n            <div\n              style={{\n                flex: 1,\n                minHeight: \"200px\",\n                maxHeight: \"auto\",\n                borderRight: \"2px solid black\",\n                display: \"flex\",\n                flexDirection: \"column\",\n                rowGap: \"5px\",\n              }}\n            >\n              <div\n                style={{\n                  width: \"100%\",\n                  display: \"flex\",\n                  padding: \"0 10px\",\n                  boxSizing: \"border-box\",\n                }}\n              >\n                <span\n                  style={{\n                    flex: 1,\n                    textAlign: \"left\",\n                    fontWeight: \"bolder\",\n                  }}\n                >\n                  Assured's Name\n                </span>\n                <span style={{ width: \"40px\", textAlign: \"left\" }}>:</span>\n                <span\n                  style={{\n                    flex: 1,\n                    textAlign: \"left\",\n                    fontWeight: \"bold\",\n                  }}\n                >\n                  {claimdsDetails.AssuredName}\n                </span>\n              </div>\n              <div\n                style={{\n                  width: \"100%\",\n                  display: \"flex\",\n                  padding: \"0 10px\",\n                  boxSizing: \"border-box\",\n                }}\n              >\n                <span\n                  style={{\n                    flex: 1,\n                    textAlign: \"left\",\n                    fontWeight: \"bolder\",\n                  }}\n                >\n                  Unit Insured\n                </span>\n                <span style={{ width: \"40px\", textAlign: \"left\" }}>:</span>\n                <span\n                  style={{\n                    flex: 1,\n                    textAlign: \"left\",\n                    fontWeight: \"bold\",\n                  }}\n                >\n                  {claimdsDetails.policy === \"COM\" ||\n                  claimdsDetails.policy === \"TPL\"\n                    ? `${claimdsDetails.Model} ${claimdsDetails.Make} ${claimdsDetails.BodyType}`\n                    : `${\n                        claimdsDetails.policy === \"PA\"\n                          ? \"Group Personal Accident\"\n                          : claimdsDetails.policy\n                      }`}\n                </span>\n              </div>\n              {claimdsDetails.policy === \"VPolicy\" && (\n                <>\n                  <div\n                    style={{\n                      width: \"100%\",\n                      display: \"flex\",\n                      padding: \"0 10px\",\n                      boxSizing: \"border-box\",\n                    }}\n                  >\n                    <span\n                      style={{\n                        flex: 1,\n                        textAlign: \"left\",\n                        fontWeight: \"bolder\",\n                      }}\n                    >\n                      Engine No.\n                    </span>\n                    <span style={{ width: \"40px\", textAlign: \"left\" }}>:</span>\n                    <span\n                      style={{\n                        flex: 1,\n                        textAlign: \"left\",\n                        fontWeight: \"bold\",\n                      }}\n                    >\n                      {claimdsDetails.MotorNo}\n                    </span>\n                  </div>\n                  <div\n                    style={{\n                      width: \"100%\",\n                      display: \"flex\",\n                      padding: \"0 10px\",\n                      boxSizing: \"border-box\",\n                    }}\n                  >\n                    <span\n                      style={{\n                        flex: 1,\n                        textAlign: \"left\",\n                        fontWeight: \"bolder\",\n                      }}\n                    >\n                      Chassis No.\n                    </span>\n                    <span style={{ width: \"40px\", textAlign: \"left\" }}>:</span>\n                    <span\n                      style={{\n                        flex: 1,\n                        textAlign: \"left\",\n                        fontWeight: \"bold\",\n                      }}\n                    >\n                      {claimdsDetails.ChassisNo}\n                    </span>\n                  </div>\n                </>\n              )}\n              <div\n                style={{\n                  width: \"100%\",\n                  display: \"flex\",\n                  padding: \"0 10px\",\n                  boxSizing: \"border-box\",\n                }}\n              >\n                <span\n                  style={{\n                    flex: 1,\n                    textAlign: \"left\",\n                    fontWeight: \"bolder\",\n                  }}\n                >\n                  Inception\n                </span>\n                <span style={{ width: \"40px\", textAlign: \"left\" }}>:</span>\n                <span\n                  style={{\n                    flex: 1,\n                    textAlign: \"left\",\n                    fontWeight: \"bold\",\n                  }}\n                >\n                  {`${format(\n                    new Date(claimdsDetails.DateFrom),\n                    \"MMMM d, yyyy\"\n                  )} - ${format(new Date(claimdsDetails.DateTo), \"yyyy\")}`}\n                </span>\n              </div>\n\n              <div\n                style={{\n                  width: \"100%\",\n                  display: \"flex\",\n                  padding: \"0 10px\",\n                  boxSizing: \"border-box\",\n                }}\n              >\n                <span\n                  style={{\n                    flex: 1,\n                    textAlign: \"left\",\n                    fontWeight: \"bolder\",\n                  }}\n                >\n                  Type of Claim\n                </span>\n                <span style={{ width: \"40px\", textAlign: \"left\" }}>:</span>\n                <div style={{ flex: 1 }}>\n                  {listofClaim.map((d: any, idx) => {\n                    return (\n                      <p\n                        style={{\n                          textAlign: \"left\",\n                          fontWeight: \"bold\",\n                          padding: \"0\",\n                          margin: \"0\",\n                        }}\n                        key={idx}\n                      >\n                        {claimType[d]}\n                      </p>\n                    );\n                  })}\n                </div>\n              </div>\n            </div>\n            <div\n              style={{\n                width: \"220px\",\n                alignSelf: \"self-start\",\n                minHeight: \"200px\",\n                maxHeight: \"auto\",\n                display: \"flex\",\n                flexDirection: \"column\",\n              }}\n            >\n              <div\n                style={{\n                  flex: 1,\n                  borderBottom: \"2px solid black\",\n                  padding: \"0 10px\",\n                }}\n              >\n                <p\n                  style={{\n                    fontWeight: \"bolder\",\n                    marginLeft: 0,\n                    marginTop: 0,\n                    marginRight: 0,\n                    marginBottom: \"10px\",\n                    padding: 0,\n                  }}\n                >\n                  Date Prepared:\n                </p>\n                <p\n                  style={{\n                    fontWeight: \"bold\",\n                    margin: 0,\n                    padding: 0,\n                  }}\n                >\n                  {format(new Date(), \"MMMM d, yyyy\")}\n                </p>\n              </div>\n              <div\n                style={{\n                  flex: 1,\n                  borderBottom: \"2px solid black\",\n                  padding: \"0 10px\",\n                }}\n              >\n                <p\n                  style={{\n                    fontWeight: \"bolder\",\n                    marginLeft: 0,\n                    marginTop: 0,\n                    marginRight: 0,\n                    marginBottom: \"10px\",\n                    padding: 0,\n                  }}\n                >\n                  Policy No.\n                </p>\n                <p\n                  style={{\n                    fontWeight: \"bold\",\n                    margin: 0,\n                    padding: 0,\n                  }}\n                >\n                  {claimdsDetails.PolicyNo}\n                </p>\n              </div>\n              <div\n                style={{\n                  flex: 1,\n                  padding: \"0 10px\",\n                }}\n              >\n                <p\n                  style={{\n                    fontWeight: \"bolder\",\n                    marginLeft: 0,\n                    marginTop: 0,\n                    marginRight: 0,\n                    marginBottom: \"10px\",\n                    padding: 0,\n                  }}\n                >\n                  Date of Accident\n                </p>\n                <p\n                  style={{\n                    fontWeight: \"bold\",\n                    margin: 0,\n                    padding: 0,\n                  }}\n                >\n                  {format(new Date(claimState.dateAccident), \"MMMM d, yyyy\")}\n                </p>\n              </div>\n            </div>\n          </div>\n          <div\n            style={{\n              border: \"2px solid black\",\n              height: \"170px\",\n              position: \"relative\",\n            }}\n          >\n            <p\n              style={{\n                borderBottom: \"2px solid black\",\n                padding: \"2px 5px\",\n                margin: \"0\",\n                fontWeight: \"bold\",\n                textAlign: \"left\",\n              }}\n            >\n              {claimdsDetails.department === 0\n                ? \"Under Writer\"\n                : \"Insurance Coordinator\"}\n            </p>\n            <p\n              style={{\n                width: \"200px\",\n                borderTop: \"2px solid black\",\n                padding: \"0\",\n                margin: \"0\",\n                fontWeight: \"bold\",\n                position: \"absolute\",\n                right: \"0\",\n                bottom: \"20px\",\n                textAlign: \"center\",\n              }}\n            >\n              {claimdsDetails.department === 0\n                ? \"Angelo Dacula\"\n                : \"Rina Fernandez\"}\n            </p>\n          </div>\n          <div\n            style={{\n              borderBottom: \"2px solid black\",\n              borderLeft: \"2px solid black\",\n              borderRight: \"2px solid black\",\n              height: \"170px\",\n              position: \"relative\",\n            }}\n          >\n            <p\n              style={{\n                borderBottom: \"2px solid black\",\n                padding: \"2px 5px\",\n                margin: \"0\",\n                fontWeight: \"bold\",\n                textAlign: \"left\",\n              }}\n            >\n              Accounting\n            </p>\n            <p\n              style={{\n                width: \"200px\",\n                borderTop: \"2px solid black\",\n                padding: \"0\",\n                margin: \"0\",\n                fontWeight: \"bold\",\n                position: \"absolute\",\n                right: \"0\",\n                bottom: \"20px\",\n                textAlign: \"center\",\n              }}\n            >\n              Gina Rondina\n            </p>\n            <div\n              style={{\n                padding: \"2px 5px\",\n                margin: \"0\",\n                fontWeight: \"bold\",\n                height: \"100%\",\n                display: \"flex\",\n                flexDirection: \"column\",\n                alignItems: \"center\",\n              }}\n            >\n              <div>\n                <div\n                  style={{\n                    textAlign: \"left\",\n                  }}\n                >\n                  <span\n                    style={{\n                      margin: 0,\n                      padding: 0,\n                    }}\n                  >\n                    {parseFloat(\n                      claimdsDetails.balance.toString().replace(/,/, \"\")\n                    ) <= 0\n                      ? \"Fully Paid,\"\n                      : \"Not Fully Paid,\"}\n                  </span>\n                  <span\n                    style={{\n                      margin: 0,\n                      padding: 0,\n                    }}\n                  >\n                    {parseFloat(\n                      claimdsDetails.balance.toString().replace(/,/, \"\")\n                    ) <= 0\n                      ? \"\"\n                      : ` Total balance : ${claimdsDetails.balance}`}\n                  </span>\n                </div>\n                <div>\n                  <span>\n                    {parseFloat(\n                      claimdsDetails.remitted.toString().replace(/,/, \"\")\n                    ) <= 0\n                      ? \"Not Remitted\"\n                      : \"Remitted\"}\n                  </span>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div\n            style={{\n              borderBottom: \"2px solid black\",\n              borderLeft: \"2px solid black\",\n              borderRight: \"2px solid black\",\n              height: \"170px\",\n              marginBottom: \"20px\",\n            }}\n          >\n            <p\n              style={{\n                padding: \"2px 5px\",\n                margin: \"0\",\n                fontWeight: \"bold\",\n                textAlign: \"left\",\n              }}\n            >\n              Remarks:\n            </p>\n            <pre\n              style={{\n                padding: \"2px 5px\",\n                margin: \"0\",\n                fontWeight: \"bold\",\n                textAlign: \"left\",\n                fontSize: \"15px\",\n              }}\n            >\n              {claimdsDetails.remarks}\n            </pre>\n          </div>\n          <div\n            style={{\n              border: \"2px solid black\",\n              height: \"140px\",\n              display: \"flex\",\n              justifyContent: \"space-around\",\n              flexDirection: \"column\",\n            }}\n          >\n            <p\n              style={{\n                padding: \"2px\",\n                margin: \"0\",\n              }}\n            >\n              <span\n                style={{\n                  fontWeight: \"bold\",\n                }}\n              >\n                Prepared by\n              </span>\n              <span\n                style={{\n                  margin: \"0\",\n                  fontWeight: \"bold\",\n                  marginLeft: \"100px\",\n                }}\n              >\n                Checked by\n              </span>\n            </p>\n            <div\n              style={{\n                display: \"flex\",\n                width: \"100%\",\n                height: \"auto\",\n                justifyContent: \"space-between\",\n                padding: \"0 10px\",\n                boxSizing: \"border-box\",\n              }}\n            >\n              <div style={{ textAlign: \"center\" }}>\n                <p\n                  style={{\n                    fontWeight: \"bolder\",\n                    fontSize: \"19px \",\n                    margin: 0,\n                    padding: 0,\n                  }}\n                >\n                  Pio Mendoza\n                </p>\n                <p\n                  style={{\n                    fontSize: \"13px\",\n                    fontWeight: \"bold\",\n                    margin: 0,\n                    padding: 0,\n                  }}\n                >\n                  Claims Officer\n                </p>\n              </div>\n              <div\n                style={{\n                  display: \"flex\",\n                  justifyContent: \"space-between\",\n                }}\n              >\n                <div style={{ textAlign: \"center\" }}>\n                  <p\n                    style={{\n                      fontWeight: \"bolder\",\n                      margin: 0,\n                      padding: 0,\n                      fontSize: \"19px \",\n                    }}\n                  >\n                    Mary Grace Lanera\n                  </p>\n                  <p\n                    style={{\n                      fontSize: \"13px\",\n                      fontWeight: \"bold\",\n                      margin: 0,\n                      padding: 0,\n                    }}\n                  >\n                    Operations Supervisor\n                  </p>\n                </div>\n              </div>\n              <div\n                style={{\n                  display: \"flex\",\n                  justifyContent: \"space-between\",\n                }}\n              >\n                <div style={{ textAlign: \"center\" }}>\n                  <p\n                    style={{\n                      fontWeight: \"bolder\",\n                      margin: 0,\n                      padding: 0,\n                      fontSize: \"19px \",\n                    }}\n                  >\n                    Leo Aquino\n                  </p>\n                  <p\n                    style={{\n                      fontSize: \"13px\",\n                      fontWeight: \"bold\",\n                      margin: 0,\n                      padding: 0,\n                    }}\n                  >\n                    General Manager\n                  </p>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      );\n    };\n    flushSync(() => {\n      const elementString = ReactDOMServer.renderToString(\n        printString({\n          ...claimState,\n          ...policyState,\n        })\n      );\n\n      localStorage.setItem(\"printString\", elementString);\n    });\n    window.open(\"/dashboard/print\", \"_blank\");\n\n    handleClose();\n  };\n  if (isLoadingClaimSelectedPolicyDetails) {\n    return <div>Loading...</div>;\n  }\n\n  return (\n    <div\n      style={{ display: \"flex\", columnGap: \"10px\", flexDirection: \"column\" }}\n    >\n      <div style={{ display: \"flex\", columnGap: \"10px\" }}>\n        {isLoadingClaimModal ? (\n          <LoadingButton loading={isLoadingClaimModal} />\n        ) : (\n          <FormControl\n            sx={{\n              width: \"400px\",\n              \".MuiFormLabel-root\": {\n                fontSize: \"14px\",\n                background: \"white\",\n                zIndex: 99,\n                padding: \"0 3px\",\n              },\n              \".MuiFormLabel-root[data-shrink=false]\": {\n                top: \"-5px\",\n              },\n            }}\n            variant=\"outlined\"\n            size=\"small\"\n          >\n            <InputLabel htmlFor=\"search-claim-id\">Search</InputLabel>\n            <OutlinedInput\n              sx={{\n                height: \"27px\",\n                fontSize: \"14px\",\n                legend: {\n                  background: \"red\",\n                },\n              }}\n              inputRef={policySearchInputRef}\n              name=\"search\"\n              value={claimState.search}\n              onChange={handleInputChange}\n              id=\"search-claim-id\"\n              onKeyDown={(e) => {\n                if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n                  return openClaimModal(claimState.search);\n                }\n              }}\n              endAdornment={\n                <InputAdornment position=\"end\">\n                  <IconButton\n                    onClick={() => {\n                      openClaimModal(claimState.search);\n                    }}\n                    edge=\"end\"\n                    color=\"secondary\"\n                  >\n                    <PersonSearchIcon />\n                  </IconButton>\n                </InputAdornment>\n              }\n              label=\"Search\"\n            />\n          </FormControl>\n        )}\n        {isLoadingClaimsId ? (\n          <LoadingButton loading={isLoadingClaimsId} />\n        ) : (\n          <FormControl\n            variant=\"outlined\"\n            size=\"small\"\n            sx={{\n              width: \"140px\",\n              \".MuiFormLabel-root\": {\n                fontSize: \"14px\",\n                background: \"white\",\n                zIndex: 99,\n                padding: \"0 3px\",\n              },\n              \".MuiFormLabel-root[data-shrink=false]\": { top: \"-1px\" },\n            }}\n          >\n            <InputLabel htmlFor=\"claims_id\">Claim ID.</InputLabel>\n            <OutlinedInput\n              sx={{\n                height: \"27px\",\n                fontSize: \"14px\",\n              }}\n              fullWidth\n              label=\"Claim ID.\"\n              name=\"claims_id\"\n              value={claimState.claims_id}\n              onChange={handleInputChange}\n              onKeyDown={(e) => {\n                if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n                  e.preventDefault();\n                  return refetchClaimsId();\n                }\n              }}\n              readOnly={true}\n              id=\"claims_id\"\n              endAdornment={\n                <InputAdornment position=\"end\">\n                  <IconButton\n                    color=\"secondary\"\n                    edge=\"end\"\n                    onClick={() => {\n                      refetchClaimsId();\n                    }}\n                  >\n                    <RestartAltIcon />\n                  </IconButton>\n                </InputAdornment>\n              }\n            />\n          </FormControl>\n        )}\n        <div>\n          <Button\n            disabled={claimState.mode !== \"update\"}\n            id=\"basic-button\"\n            aria-controls={open ? \"basic-menu\" : undefined}\n            aria-haspopup=\"true\"\n            aria-expanded={open ? \"true\" : undefined}\n            onClick={handleClick}\n            sx={{\n              height: \"30px\",\n              fontSize: \"11px\",\n              color: \"white\",\n              backgroundColor: grey[600],\n              \"&:hover\": {\n                backgroundColor: grey[700],\n              },\n            }}\n          >\n            Print\n          </Button>\n          <Menu\n            id=\"basic-menu\"\n            anchorEl={anchorEl}\n            open={open}\n            onClose={handleClose}\n            MenuListProps={{\n              \"aria-labelledby\": \"basic-button\",\n            }}\n          >\n            <MenuItem onClick={clickClaimInformationSheet}>\n              Claim Information Sheet\n            </MenuItem>\n          </Menu>\n        </div>\n        <Button\n          id=\"basic-button\"\n          aria-haspopup=\"true\"\n          sx={{\n            height: \"30px\",\n            fontSize: \"11px\",\n          }}\n          color=\"primary\"\n          variant=\"contained\"\n          onClick={() => {\n            if (policyState.PolicyNo === \"\") {\n              Swal.fire({\n                title: \"Opppss!\",\n                text: `You need to select policy first!`,\n                icon: \"warning\",\n                showCancelButton: true,\n                confirmButtonColor: \"#3085d6\",\n                cancelButtonColor: \"#d33\",\n                confirmButtonText: `Yes, select policy!`,\n              }).then((result) => {\n                if (result.isConfirmed) {\n                  openPolicyModal(policyState.PolicyNo);\n                }\n              });\n              return;\n            }\n            setNewStateValue(policyDispatch, {\n              claim_type: 0,\n              status: 0,\n              DateReceived: null,\n              DateClaim: null,\n              AmountClaim: \"\",\n              AmountApproved: \"\",\n              NameTPPD: \"\",\n            });\n            setShowModal(true);\n          }}\n        >\n          ADD\n        </Button>\n        <LoadingButton\n          loading={isLoadingClaimSave}\n          id=\"basic-button\"\n          aria-haspopup=\"true\"\n          sx={{\n            height: \"30px\",\n            fontSize: \"11px\",\n          }}\n          variant=\"contained\"\n          color=\"success\"\n          onClick={() => {\n            Swal.fire({\n              title: \"Are you sure?\",\n              text: `You want to ${\n                claimState.mode === \"update\" ? \"save changes!\" : \"save it!\"\n              }`,\n              icon: \"warning\",\n              showCancelButton: true,\n              confirmButtonColor: \"#3085d6\",\n              cancelButtonColor: \"#d33\",\n              confirmButtonText: `Yes, ${\n                claimState.mode === \"update\" ? \"save changes!\" : \"save it!\"\n              } `,\n            }).then(async (result) => {\n              if (result.isConfirmed) {\n                if (claimState.mode === \"update\") {\n                  return codeCondfirmationAlert({\n                    isUpdate: true,\n                    cb: (userCodeConfirmation) => {\n                      mutateClaimSave({\n                        ...claimState,\n                        claimsSubmited,\n                        userCodeConfirmation,\n                      });\n                    },\n                  });\n                } else {\n                  return mutateClaimSave({ ...claimState, claimsSubmited });\n                }\n              }\n            });\n          }}\n        >\n          {claimState.mode === \"update\" ? \"SAVE CHANGES\" : \"SAVE\"}\n        </LoadingButton>\n        {claimState.mode === \"update\" && (\n          <Button\n            variant=\"contained\"\n            color=\"error\"\n            aria-haspopup=\"true\"\n            sx={{\n              height: \"30px\",\n              fontSize: \"11px\",\n            }}\n            onClick={() => {\n              Swal.fire({\n                title: \"Are you sure?\",\n                text: `You want to discard the changes!`,\n                icon: \"warning\",\n                showCancelButton: true,\n                confirmButtonColor: \"#3085d6\",\n                cancelButtonColor: \"#d33\",\n                confirmButtonText: \"Yes, discard it!\",\n              }).then(async (result) => {\n                if (result.isConfirmed) {\n                  setNewStateValue(claimDispatch, initialClaimState);\n                  setNewStateValue(policyDispatch, initialPolicyState);\n                  setClaimsSubmited([]);\n                  refetchClaimsId();\n                }\n              });\n            }}\n          >\n            Discard Changes\n          </Button>\n        )}\n        {policyState.PolicyNo !== \"\" && claimState.mode !== \"update\" && (\n          <Button\n            id=\"basic-button\"\n            aria-haspopup=\"true\"\n            sx={{\n              height: \"30px\",\n              fontSize: \"11px\",\n            }}\n            color=\"error\"\n            variant=\"contained\"\n            onClick={() => {\n              Swal.fire({\n                title: \"Are you sure?\",\n                text: `You want to cancel!`,\n                icon: \"warning\",\n                showCancelButton: true,\n                confirmButtonColor: \"#3085d6\",\n                cancelButtonColor: \"#d33\",\n                confirmButtonText: `Yes, Cancel it!`,\n              }).then(async (result) => {\n                if (result.isConfirmed) {\n                  setNewStateValue(claimDispatch, initialClaimState);\n                  setNewStateValue(policyDispatch, initialPolicyState);\n                  setClaimsSubmited([]);\n                  refetchClaimsId();\n                }\n              });\n            }}\n          >\n            CANCEL\n          </Button>\n        )}\n      </div>\n      <div style={{ display: \"flex\", marginTop: \"20px\", columnGap: \"10px\" }}>\n        <CustomDatePicker\n          textField={{\n            InputLabelProps: {\n              style: {\n                fontSize: \"14px\",\n              },\n            },\n            InputProps: {\n              style: { height: \"27px\", fontSize: \"14px\" },\n            },\n          }}\n          label=\"Date Reported\"\n          onChange={(value: any) => {\n            claimDispatch({\n              type: \"UPDATE_FIELD\",\n              field: \"dateReported\",\n              value: value,\n            });\n          }}\n          value={\n            claimState.dateReported ? new Date(claimState.dateReported) : null\n          }\n          onKeyDown={(e: any) => {\n            if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n              const timeout = setTimeout(() => {\n                datePickerRef.current?.querySelector(\"button\")?.click();\n                clearTimeout(timeout);\n              }, 150);\n            }\n          }}\n          datePickerRef={datePickerRef}\n        />\n        <CustomDatePicker\n          textField={{\n            InputLabelProps: {\n              style: {\n                fontSize: \"14px\",\n              },\n            },\n            InputProps: {\n              style: { height: \"27px\", fontSize: \"14px\" },\n            },\n          }}\n          label=\"Date Accident\"\n          onChange={(value: any) => {\n            claimDispatch({\n              type: \"UPDATE_FIELD\",\n              field: \"dateAccident\",\n              value: value,\n            });\n          }}\n          value={\n            claimState.dateAccident ? new Date(claimState.dateAccident) : null\n          }\n          onKeyDown={(e: any) => {\n            if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n              const timeout = setTimeout(() => {\n                dateAccidentRef.current?.querySelector(\"button\")?.click();\n                clearTimeout(timeout);\n              }, 150);\n            }\n          }}\n          datePickerRef={dateAccidentRef}\n        />\n        <CustomDatePicker\n          textField={{\n            InputLabelProps: {\n              style: {\n                fontSize: \"14px\",\n              },\n            },\n            InputProps: {\n              style: { height: \"27px\", fontSize: \"14px\" },\n            },\n          }}\n          label=\"Date Inspected\"\n          onChange={(value: any) => {\n            claimDispatch({\n              type: \"UPDATE_FIELD\",\n              field: \"dateInspected\",\n              value: value,\n            });\n          }}\n          value={\n            claimState.dateInspected ? new Date(claimState.dateInspected) : null\n          }\n          onKeyDown={(e: any) => {\n            if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n              const timeout = setTimeout(() => {\n                dateInspectedRef.current?.querySelector(\"button\")?.click();\n                clearTimeout(timeout);\n              }, 150);\n            }\n          }}\n          datePickerRef={dateInspectedRef}\n        />\n        <FormControl\n          sx={{\n            width: \"200px\",\n            \".MuiFormLabel-root\": {\n              fontSize: \"14px\",\n              background: \"white\",\n              zIndex: 99,\n              padding: \"0 3px\",\n            },\n            \".MuiFormLabel-root[data-shrink=false]\": { top: \"-12px\" },\n          }}\n        >\n          <InputLabel id=\"department-field\">Department</InputLabel>\n          <Select\n            labelId=\"department-field\"\n            value={claimState.department}\n            onChange={handleInputChange}\n            label=\"department\"\n            size=\"small\"\n            name=\"department\"\n            sx={{\n              height: \"27px\",\n              fontSize: \"14px\",\n            }}\n            fullWidth\n          >\n            {[\"UMIS\", \"UCSMI\"].map((itm, idx) => {\n              return (\n                <MenuItem key={idx} value={idx}>\n                  {itm}\n                </MenuItem>\n              );\n            })}\n          </Select>\n        </FormControl>\n        <TextField\n          name=\"remarks\"\n          label=\"Remarks\"\n          size=\"small\"\n          value={claimState.remarks}\n          onChange={handleInputChange}\n          InputProps={{\n            style: {\n              height: \"27px\",\n              fontSize: \"14px\",\n              color: \"whie\",\n            },\n          }}\n          sx={{\n            width: \"100%\",\n            \".MuiFormLabel-root\": { fontSize: \"14px\" },\n            \".MuiFormLabel-root[data-shrink=false]\": {\n              top: \"-5px\",\n            },\n          }}\n        />\n      </div>\n      <fieldset\n        style={{\n          display: \"flex\",\n          columnGap: \"15px\",\n          padding: \"10px\",\n          border: \"1px solid #cbd5e1\",\n          borderRadius: \"5px\",\n          position: \"relative\",\n        }}\n      >\n        <legend>Policy Details</legend>\n        <div\n          style={{\n            display: \"flex\",\n            width: \"100%\",\n            gap: \"15px\",\n            flexDirection: \"column\",\n          }}\n        >\n          <div\n            style={{\n              flex: \"1\",\n              display: \"grid\",\n              gridTemplateColumns: \"repeat(4,1fr)\",\n              gap: \"7px\",\n            }}\n          >\n            {isLoadingPolicyModal ? (\n              <LoadingButton loading={isLoadingPolicyModal} />\n            ) : (\n              <FormControl\n                sx={{\n                  width: \"100%\",\n                  \".MuiFormLabel-root\": {\n                    fontSize: \"14px\",\n                    background: \"white\",\n                    zIndex: 99,\n                    padding: \"0 3px\",\n                  },\n                  \".MuiFormLabel-root[data-shrink=false]\": {\n                    top: \"-5px\",\n                  },\n                }}\n                variant=\"outlined\"\n                size=\"small\"\n              >\n                <InputLabel htmlFor=\"policy-no\">Policy No.</InputLabel>\n                <OutlinedInput\n                  sx={{\n                    height: \"27px\",\n                    fontSize: \"14px\",\n                    legend: {\n                      background: \"red\",\n                    },\n                  }}\n                  inputRef={policySearchInputRef}\n                  name=\"PolicyNo\"\n                  value={policyState.PolicyNo}\n                  onChange={handleInputChange}\n                  id=\"policy-no\"\n                  onKeyDown={(e) => {\n                    if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n                      return openPolicyModal(policyState.PolicyNo);\n                    }\n                  }}\n                  endAdornment={\n                    <InputAdornment position=\"end\">\n                      <IconButton\n                        disabled={policyState.mode === \"\"}\n                        onClick={() => {\n                          openPolicyModal(policyState.PolicyNo);\n                        }}\n                        edge=\"end\"\n                        color=\"secondary\"\n                      >\n                        <PersonSearchIcon />\n                      </IconButton>\n                    </InputAdornment>\n                  }\n                  label=\"Policy No.\"\n                />\n              </FormControl>\n            )}\n            <TextField\n              name=\"policy\"\n              label=\"Policy\"\n              size=\"small\"\n              value={policyState.policy}\n              onChange={handleInputChange}\n              InputProps={{\n                style: {\n                  height: \"27px\",\n                  fontSize: \"14px\",\n                  color: \"whie\",\n                },\n                readOnly: true,\n              }}\n              sx={{\n                \".MuiFormLabel-root\": { fontSize: \"14px\" },\n                \".MuiFormLabel-root[data-shrink=false]\": {\n                  top: \"-5px\",\n                },\n              }}\n            />\n            <TextField\n              name=\"AssuredName\"\n              label=\"Assured Name\"\n              size=\"small\"\n              value={policyState.AssuredName}\n              onChange={handleInputChange}\n              InputProps={{\n                style: {\n                  height: \"27px\",\n                  fontSize: \"14px\",\n                  color: \"whie\",\n                },\n                readOnly: true,\n              }}\n              sx={{\n                gridColumn: \"3/ span 2\",\n                width: \"100%\",\n                \".MuiFormLabel-root\": { fontSize: \"14px\" },\n                \".MuiFormLabel-root[data-shrink=false]\": {\n                  top: \"-5px\",\n                },\n              }}\n            />\n            <TextField\n              name=\"Account\"\n              label=\"Account Insurance\"\n              size=\"small\"\n              value={policyState.Account}\n              onChange={handleInputChange}\n              InputProps={{\n                style: { height: \"27px\", fontSize: \"14px\" },\n                readOnly: true,\n              }}\n              sx={{\n                width: \"100%\",\n                \".MuiFormLabel-root\": { fontSize: \"14px\" },\n                \".MuiFormLabel-root[data-shrink=false]\": {\n                  top: \"-5px\",\n                },\n              }}\n            />\n            <TextField\n              name=\"Model\"\n              label=\"Model\"\n              size=\"small\"\n              value={policyState.Model}\n              onChange={handleInputChange}\n              InputProps={{\n                style: { height: \"27px\", fontSize: \"14px\" },\n                readOnly: true,\n              }}\n              sx={{\n                width: \"100%\",\n                \".MuiFormLabel-root\": { fontSize: \"14px\" },\n                \".MuiFormLabel-root[data-shrink=false]\": {\n                  top: \"-5px\",\n                },\n              }}\n            />\n            <TextField\n              name=\"PlateNo\"\n              label=\"Plate No\"\n              size=\"small\"\n              value={policyState.PlateNo}\n              onChange={handleInputChange}\n              InputProps={{\n                style: { height: \"27px\", fontSize: \"14px\" },\n                readOnly: true,\n              }}\n              sx={{\n                width: \"100%\",\n                \".MuiFormLabel-root\": { fontSize: \"14px\" },\n                \".MuiFormLabel-root[data-shrink=false]\": {\n                  top: \"-5px\",\n                },\n              }}\n            />\n            <TextField\n              name=\"ChassisNo\"\n              label=\"Chassis No\"\n              size=\"small\"\n              value={policyState.ChassisNo}\n              onChange={handleInputChange}\n              InputProps={{\n                style: { height: \"27px\", fontSize: \"14px\" },\n                readOnly: true,\n              }}\n              sx={{\n                width: \"100%\",\n                \".MuiFormLabel-root\": { fontSize: \"14px\" },\n                \".MuiFormLabel-root[data-shrink=false]\": {\n                  top: \"-5px\",\n                },\n              }}\n            />\n            <TextField\n              name=\"MotorNo.\"\n              label=\"Motor No\"\n              size=\"small\"\n              value={policyState.MotorNo}\n              onChange={handleInputChange}\n              InputProps={{\n                style: { height: \"27px\", fontSize: \"14px\" },\n                readOnly: true,\n              }}\n              sx={{\n                width: \"100%\",\n                \".MuiFormLabel-root\": { fontSize: \"14px\" },\n                \".MuiFormLabel-root[data-shrink=false]\": {\n                  top: \"-5px\",\n                },\n              }}\n            />\n            <TextField\n              name=\"CoverNo\"\n              label=\"Cover No\"\n              size=\"small\"\n              value={policyState.CoverNo}\n              onChange={handleInputChange}\n              InputProps={{\n                style: { height: \"27px\", fontSize: \"14px\" },\n                readOnly: true,\n              }}\n              sx={{\n                width: \"100%\",\n                \".MuiFormLabel-root\": { fontSize: \"14px\" },\n                \".MuiFormLabel-root[data-shrink=false]\": {\n                  top: \"-5px\",\n                },\n              }}\n            />\n            <TextField\n              name=\"BLTFileNo\"\n              label=\"BLTFileNo\"\n              size=\"small\"\n              value={policyState.BLTFileNo}\n              onChange={handleInputChange}\n              InputProps={{\n                style: { height: \"27px\", fontSize: \"14px\" },\n                readOnly: true,\n              }}\n              sx={{\n                width: \"100%\",\n                \".MuiFormLabel-root\": { fontSize: \"14px\" },\n                \".MuiFormLabel-root[data-shrink=false]\": {\n                  top: \"-5px\",\n                },\n              }}\n            />\n            <TextField\n              name=\"BodyType\"\n              label=\"Body Type\"\n              size=\"small\"\n              value={policyState.BodyType}\n              onChange={handleInputChange}\n              InputProps={{\n                style: { height: \"27px\", fontSize: \"14px\" },\n                readOnly: true,\n              }}\n              sx={{\n                width: \"100%\",\n                \".MuiFormLabel-root\": { fontSize: \"14px\" },\n                \".MuiFormLabel-root[data-shrink=false]\": {\n                  top: \"-5px\",\n                },\n              }}\n            />\n            <TextField\n              name=\"Make\"\n              label=\"Make\"\n              size=\"small\"\n              value={policyState.Make}\n              onChange={handleInputChange}\n              InputProps={{\n                style: { height: \"27px\", fontSize: \"14px\" },\n                readOnly: true,\n              }}\n              sx={{\n                width: \"100%\",\n                \".MuiFormLabel-root\": { fontSize: \"14px\" },\n                \".MuiFormLabel-root[data-shrink=false]\": {\n                  top: \"-5px\",\n                },\n              }}\n            />\n            <TextField\n              name=\"ORNo\"\n              label=\"OR No.\"\n              size=\"small\"\n              value={policyState.ORNo}\n              onChange={handleInputChange}\n              InputProps={{\n                style: { height: \"27px\", fontSize: \"14px\" },\n                readOnly: true,\n              }}\n              sx={{\n                width: \"100%\",\n                \".MuiFormLabel-root\": { fontSize: \"14px\" },\n                \".MuiFormLabel-root[data-shrink=false]\": {\n                  top: \"-5px\",\n                },\n              }}\n            />\n          </div>\n          <div\n            style={{\n              display: \"grid\",\n              gap: \"15px\",\n              flex: \"1\",\n              gridTemplateColumns: \"repeat(4,1fr)\",\n            }}\n          >\n            <fieldset\n              style={{\n                display: \"flex\",\n                gap: \"15px\",\n                border: \"1px solid #cbd5e1\",\n                borderRadius: \"5px\",\n                gridTemplateColumns: \"repeat(4,1fr)\",\n                gridColumn: \"1 / span 3\",\n              }}\n            >\n              <legend>Client Payment</legend>\n              <TextField\n                name=\"totaDue\"\n                label=\"Total Due\"\n                size=\"small\"\n                value={policyState.totaDue}\n                onChange={handleInputChange}\n                InputProps={{\n                  style: { height: \"27px\", fontSize: \"14px\" },\n                  readOnly: true,\n                }}\n                sx={{\n                  width: \"100%\",\n                  \".MuiFormLabel-root\": { fontSize: \"14px\" },\n                  \".MuiFormLabel-root[data-shrink=false]\": {\n                    top: \"-5px\",\n                  },\n                }}\n              />\n              <TextField\n                name=\"totalpaid\"\n                label=\"Total Paid\"\n                size=\"small\"\n                value={policyState.totalpaid}\n                onChange={handleInputChange}\n                InputProps={{\n                  style: { height: \"27px\", fontSize: \"14px\" },\n                  readOnly: true,\n                }}\n                sx={{\n                  width: \"100%\",\n                  \".MuiFormLabel-root\": { fontSize: \"14px\" },\n                  \".MuiFormLabel-root[data-shrink=false]\": {\n                    top: \"-5px\",\n                  },\n                }}\n              />\n              <TextField\n                name=\"balance\"\n                label=\"Balance\"\n                size=\"small\"\n                value={policyState.balance}\n                onChange={handleInputChange}\n                InputProps={{\n                  style: { height: \"27px\", fontSize: \"14px\" },\n                  readOnly: true,\n                }}\n                sx={{\n                  width: \"100%\",\n                  \".MuiFormLabel-root\": { fontSize: \"14px\" },\n                  \".MuiFormLabel-root[data-shrink=false]\": {\n                    top: \"-5px\",\n                  },\n                }}\n              />\n            </fieldset>\n            <fieldset\n              style={{\n                display: \"flex\",\n                border: \"1px solid #cbd5e1\",\n                borderRadius: \"5px\",\n              }}\n            >\n              <legend>Insurance Payment</legend>\n              <TextField\n                name=\"remitted\"\n                label=\"Remitted\"\n                size=\"small\"\n                value={policyState.remitted}\n                onChange={handleInputChange}\n                InputProps={{\n                  style: { height: \"27px\", fontSize: \"14px\" },\n                  readOnly: true,\n                }}\n                sx={{\n                  width: \"100%\",\n                  \".MuiFormLabel-root\": { fontSize: \"14px\" },\n                  \".MuiFormLabel-root[data-shrink=false]\": {\n                    top: \"-5px\",\n                  },\n                }}\n              />\n            </fieldset>\n          </div>\n        </div>\n      </fieldset>\n      <div\n        style={{\n          marginTop: \"20px\",\n          border: \"1px solid #94a3b8\",\n          minHeight: \"600px\",\n        }}\n      >\n        <h1 style={{ textAlign: \"center\" }}>LIST OF CLAIMS</h1>\n        <div style={{ padding: \"20px\", display: \"flex\", flexWrap: \"wrap\" }}>\n          <table\n            style={{\n              borderCollapse: \"collapse\",\n              width: \"100%\",\n              fontSize: \"13px\",\n            }}\n            className=\"claim-list\"\n          >\n            <thead>\n              <tr style={{ borderBottom: \"1px solid black\" }}>\n                <th>ACTION</th>\n                <th>CLAIM TYPE</th>\n                <th>STATUS</th>\n                <th>DATE RECEIVED</th>\n                <th>DATE CLAIM</th>\n                <th>AMOUNT CLAIM</th>\n                <th>AMOUNT APPROVED</th>\n              </tr>\n            </thead>\n            <tbody>\n              {claimsSubmited.length > 0 &&\n                sortList(claimsSubmited)?.map((itm: any, idx: number) => {\n                  const statusArray = claimsStatus.sort();\n                  return (\n                    <tr key={idx}>\n                      <td className=\"left\">\n                        <Stack\n                          direction=\"row\"\n                          alignItems=\"center\"\n                          spacing={1}\n                          justifyContent={\"center\"}\n                        >\n                          <IconButton\n                            size=\"small\"\n                            color=\"secondary\"\n                            onClick={() => handleTdClick(itm)}\n                          >\n                            <VisibilityIcon fontSize=\"inherit\" />\n                          </IconButton>\n                          <IconButton\n                            size=\"small\"\n                            color=\"info\"\n                            onClick={() => {\n                              const title = document.createElement(\"h1\");\n                              const div = document.createElement(\"div\");\n                              const content = document.createElement(\"div\");\n                              title.textContent = \"Claim Summary\";\n                              const contentchild =\n                                document.createElement(\"div\");\n                              const buttonClose =\n                                document.createElement(\"button\");\n                              const body = document.body;\n\n                              const basic = itm.basicFileCustom.map(\n                                (d: any) => d.datakey\n                              );\n\n                              const uniqueBasicArray = basic.filter(\n                                (item: any, index: number) =>\n                                  basic.indexOf(item) === index\n                              );\n\n                              const other = itm.otherFileCustom.map(\n                                (d: any) => d.datakey\n                              );\n                              const uniqueOtherArray = other.filter(\n                                (item: any, index: number) =>\n                                  other.indexOf(item) === index\n                              );\n\n                              const insuranceFile = itm.insuranceFileCustom.map(\n                                (d: any) => d.datakey\n                              );\n\n                              const uniqueInsuranceArray = insuranceFile.filter(\n                                (item: any, index: number) =>\n                                  insuranceFile.indexOf(item) === index\n                              );\n\n                              const tableString = (\n                                <table style={{ fontSize: \"12px\" }}>\n                                  <tbody>\n                                    <tr>\n                                      <td className=\"datakey\">Claim Type</td>\n                                      <td>\n                                        {claimType[itm.policyState.claim_type]}\n                                      </td>\n                                    </tr>\n                                    <tr>\n                                      <td className=\"datakey\">Status</td>\n                                      <td>\n                                        {statusArray[itm.policyState.status]}\n                                      </td>\n                                    </tr>\n                                    <tr>\n                                      <td className=\"datakey\">Date Received</td>\n                                      <td>\n                                        {itm.policyState.DateReceived\n                                          ? format(\n                                              new Date(\n                                                itm.policyState.DateReceived\n                                              ),\n                                              \"yyyy/MM/dd\"\n                                            )\n                                          : \"Not Set\"}\n                                      </td>\n                                    </tr>\n                                    <tr>\n                                      <td className=\"datakey\">Date Claim</td>\n                                      <td>\n                                        {itm.policyState.DateClaim\n                                          ? format(\n                                              new Date(\n                                                itm.policyState.DateClaim\n                                              ),\n                                              \"yyyy/MM/dd\"\n                                            )\n                                          : \"Not Set\"}\n                                      </td>\n                                    </tr>\n                                    <tr>\n                                      <td className=\"datakey\">Amount Claim</td>\n                                      <td>\n                                        {itm.policyState.AmountClaim ?? \"\"}\n                                      </td>\n                                    </tr>\n                                    <tr>\n                                      <td className=\"datakey\">\n                                        Amount Approved\n                                      </td>\n                                      <td>\n                                        {itm.policyState.AmountApproved ?? \"\"}\n                                      </td>\n                                    </tr>\n                                    {itm.policyState.claim_type > 1 && (\n                                      <tr>\n                                        <td className=\"datakey\">\n                                          Name of Third Party\n                                        </td>\n                                        <td>{itm.policyState.NameTPPD}</td>\n                                      </tr>\n                                    )}\n                                    <tr\n                                      style={{\n                                        borderTop: \"1px solid black\",\n                                        borderBottom: \"1px solid black\",\n                                      }}\n                                    >\n                                      <td\n                                        colSpan={2}\n                                        style={{\n                                          fontWeight: \"bolder\",\n                                          padding: \"5px\",\n                                          color: \"#d97706\",\n                                        }}\n                                      >\n                                        Basic Document\n                                      </td>\n                                    </tr>\n                                    {basicDocuments.map((itm, idx) => {\n                                      return (\n                                        <tr key={idx}>\n                                          <td className=\"datakey\">\n                                            {itm.label}\n                                          </td>\n                                          <td>\n                                            {uniqueBasicArray.includes(\n                                              itm.name\n                                            ) ? (\n                                              <span style={{ color: \"green\" }}>\n                                                <svg\n                                                  xmlns=\"http://www.w3.org/2000/svg\"\n                                                  width=\"20px\"\n                                                  height=\"20px\"\n                                                  viewBox=\"0 0 24 24\"\n                                                  fill=\"none\"\n                                                >\n                                                  <path\n                                                    d=\"M4 14L9 19L20 8M6 8.88889L9.07692 12L16 5\"\n                                                    stroke=\"green\"\n                                                    strokeWidth=\"2\"\n                                                    strokeLinecap=\"round\"\n                                                    strokeLinejoin=\"round\"\n                                                  />\n                                                </svg>\n                                              </span>\n                                            ) : (\n                                              <span style={{ color: \"grey\" }}>\n                                                <svg\n                                                  xmlns=\"http://www.w3.org/2000/svg\"\n                                                  width=\"15px\"\n                                                  height=\"15px\"\n                                                  viewBox=\"0 0 24 24\"\n                                                  fill=\"none\"\n                                                >\n                                                  <path\n                                                    d=\"M20.7457 3.32851C20.3552 2.93798 19.722 2.93798 19.3315 3.32851L12.0371 10.6229L4.74275 3.32851C4.35223 2.93798 3.71906 2.93798 3.32854 3.32851C2.93801 3.71903 2.93801 4.3522 3.32854 4.74272L10.6229 12.0371L3.32856 19.3314C2.93803 19.722 2.93803 20.3551 3.32856 20.7457C3.71908 21.1362 4.35225 21.1362 4.74277 20.7457L12.0371 13.4513L19.3315 20.7457C19.722 21.1362 20.3552 21.1362 20.7457 20.7457C21.1362 20.3551 21.1362 19.722 20.7457 19.3315L13.4513 12.0371L20.7457 4.74272C21.1362 4.3522 21.1362 3.71903 20.7457 3.32851Z\"\n                                                    fill=\"grey\"\n                                                  />\n                                                </svg>\n                                              </span>\n                                            )}\n                                          </td>\n                                        </tr>\n                                      );\n                                    })}\n                                    <tr\n                                      style={{\n                                        borderTop: \"1px solid black\",\n                                        borderBottom: \"1px solid black\",\n                                      }}\n                                    >\n                                      <td\n                                        colSpan={2}\n                                        style={{\n                                          fontWeight: \"bolder\",\n                                          padding: \"5px\",\n                                          color: \"#d97706\",\n                                        }}\n                                      >\n                                        Other Document\n                                      </td>\n                                    </tr>\n                                    {renderFields()[\n                                      itm.policyState.claim_type\n                                    ].map((itm, idx) => {\n                                      return (\n                                        <tr key={idx}>\n                                          <td className=\"datakey\">\n                                            {itm.label}\n                                          </td>\n                                          <td>\n                                            {uniqueOtherArray.includes(\n                                              itm.name\n                                            ) ? (\n                                              <span style={{ color: \"green\" }}>\n                                                <svg\n                                                  xmlns=\"http://www.w3.org/2000/svg\"\n                                                  width=\"20px\"\n                                                  height=\"20px\"\n                                                  viewBox=\"0 0 24 24\"\n                                                  fill=\"none\"\n                                                >\n                                                  <path\n                                                    d=\"M4 14L9 19L20 8M6 8.88889L9.07692 12L16 5\"\n                                                    stroke=\"green\"\n                                                    strokeWidth=\"2\"\n                                                    strokeLinecap=\"round\"\n                                                    strokeLinejoin=\"round\"\n                                                  />\n                                                </svg>\n                                              </span>\n                                            ) : (\n                                              <span style={{ color: \"grey\" }}>\n                                                <svg\n                                                  xmlns=\"http://www.w3.org/2000/svg\"\n                                                  width=\"15px\"\n                                                  height=\"15px\"\n                                                  viewBox=\"0 0 24 24\"\n                                                  fill=\"none\"\n                                                >\n                                                  <path\n                                                    d=\"M20.7457 3.32851C20.3552 2.93798 19.722 2.93798 19.3315 3.32851L12.0371 10.6229L4.74275 3.32851C4.35223 2.93798 3.71906 2.93798 3.32854 3.32851C2.93801 3.71903 2.93801 4.3522 3.32854 4.74272L10.6229 12.0371L3.32856 19.3314C2.93803 19.722 2.93803 20.3551 3.32856 20.7457C3.71908 21.1362 4.35225 21.1362 4.74277 20.7457L12.0371 13.4513L19.3315 20.7457C19.722 21.1362 20.3552 21.1362 20.7457 20.7457C21.1362 20.3551 21.1362 19.722 20.7457 19.3315L13.4513 12.0371L20.7457 4.74272C21.1362 4.3522 21.1362 3.71903 20.7457 3.32851Z\"\n                                                    fill=\"grey\"\n                                                  />\n                                                </svg>\n                                              </span>\n                                            )}\n                                          </td>\n                                        </tr>\n                                      );\n                                    })}\n                                    <tr\n                                      style={{\n                                        borderTop: \"1px solid black\",\n                                        borderBottom: \"1px solid black\",\n                                      }}\n                                    >\n                                      <td\n                                        colSpan={2}\n                                        style={{\n                                          fontWeight: \"bolder\",\n                                          padding: \"5px\",\n                                          color: \"#d97706\",\n                                        }}\n                                      >\n                                        Insurance Documents\n                                      </td>\n                                    </tr>\n                                    {insuranceDocuments.map((itm, idx) => {\n                                      return (\n                                        <tr key={idx}>\n                                          <td className=\"datakey\">\n                                            {itm.label}\n                                          </td>\n                                          <td>\n                                            {uniqueInsuranceArray.includes(\n                                              itm.name\n                                            ) ? (\n                                              <span style={{ color: \"green\" }}>\n                                                <svg\n                                                  xmlns=\"http://www.w3.org/2000/svg\"\n                                                  width=\"20px\"\n                                                  height=\"20px\"\n                                                  viewBox=\"0 0 24 24\"\n                                                  fill=\"none\"\n                                                >\n                                                  <path\n                                                    d=\"M4 14L9 19L20 8M6 8.88889L9.07692 12L16 5\"\n                                                    stroke=\"green\"\n                                                    strokeWidth=\"2\"\n                                                    strokeLinecap=\"round\"\n                                                    strokeLinejoin=\"round\"\n                                                  />\n                                                </svg>\n                                              </span>\n                                            ) : (\n                                              <span style={{ color: \"grey\" }}>\n                                                <svg\n                                                  xmlns=\"http://www.w3.org/2000/svg\"\n                                                  width=\"15px\"\n                                                  height=\"15px\"\n                                                  viewBox=\"0 0 24 24\"\n                                                  fill=\"none\"\n                                                >\n                                                  <path\n                                                    d=\"M20.7457 3.32851C20.3552 2.93798 19.722 2.93798 19.3315 3.32851L12.0371 10.6229L4.74275 3.32851C4.35223 2.93798 3.71906 2.93798 3.32854 3.32851C2.93801 3.71903 2.93801 4.3522 3.32854 4.74272L10.6229 12.0371L3.32856 19.3314C2.93803 19.722 2.93803 20.3551 3.32856 20.7457C3.71908 21.1362 4.35225 21.1362 4.74277 20.7457L12.0371 13.4513L19.3315 20.7457C19.722 21.1362 20.3552 21.1362 20.7457 20.7457C21.1362 20.3551 21.1362 19.722 20.7457 19.3315L13.4513 12.0371L20.7457 4.74272C21.1362 4.3522 21.1362 3.71903 20.7457 3.32851Z\"\n                                                    fill=\"grey\"\n                                                  />\n                                                </svg>\n                                              </span>\n                                            )}\n                                          </td>\n                                        </tr>\n                                      );\n                                    })}\n                                  </tbody>\n                                </table>\n                              );\n                              const elementString =\n                                ReactDOMServer.renderToString(tableString);\n                              contentchild.innerHTML = elementString;\n\n                              div.appendChild(content);\n                              content.appendChild(buttonClose);\n                              content.appendChild(title);\n                              content.appendChild(contentchild);\n                              div.className = \"summary-modal \";\n                              content.className = \"content \";\n                              div.id = \"summary-modal\";\n\n                              buttonClose?.addEventListener(\"click\", () => {\n                                body.removeChild(div);\n                              });\n                              content?.addEventListener(\"click\", (e) => {\n                                e.stopPropagation();\n                              });\n\n                              div?.addEventListener(\"click\", () => {\n                                body.removeChild(div);\n                              });\n                              buttonClose.innerHTML = `\n                              <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20px\" height=\"20px\" viewBox=\"0 0 24 24\" fill=\"none\">\n                              <path d=\"M20.7457 3.32851C20.3552 2.93798 19.722 2.93798 19.3315 3.32851L12.0371 10.6229L4.74275 3.32851C4.35223 2.93798 3.71906 2.93798 3.32854 3.32851C2.93801 3.71903 2.93801 4.3522 3.32854 4.74272L10.6229 12.0371L3.32856 19.3314C2.93803 19.722 2.93803 20.3551 3.32856 20.7457C3.71908 21.1362 4.35225 21.1362 4.74277 20.7457L12.0371 13.4513L19.3315 20.7457C19.722 21.1362 20.3552 21.1362 20.7457 20.7457C21.1362 20.3551 21.1362 19.722 20.7457 19.3315L13.4513 12.0371L20.7457 4.74272C21.1362 4.3522 21.1362 3.71903 20.7457 3.32851Z\" fill=\"#0F0F0F\"/>\n                              </svg>\n                              `;\n\n                              body.appendChild(div);\n                            }}\n                          >\n                            <ArticleIcon fontSize=\"inherit\" />\n                          </IconButton>\n                          <IconButton\n                            size=\"small\"\n                            color=\"error\"\n                            onClick={() => {\n                              Swal.fire({\n                                title: \"Are you sure?\",\n                                text: `You want to delete it!, won't be able to revert this!`,\n                                icon: \"warning\",\n                                showCancelButton: true,\n                                confirmButtonColor: \"#3085d6\",\n                                cancelButtonColor: \"#d33\",\n                                confirmButtonText: \"Yes, Delete it!\",\n                              }).then(async (result) => {\n                                if (result.isConfirmed) {\n                                  setClaimsSubmited((d) => {\n                                    d = d.filter((d: any) => d.id !== itm.id);\n                                    return d;\n                                  });\n                                }\n                              });\n                            }}\n                          >\n                            <DeleteIcon fontSize=\"inherit\" />\n                          </IconButton>\n                        </Stack>\n                      </td>\n                      <td onDoubleClick={() => handleTdClick(itm)}>\n                        {claimType[itm.policyState.claim_type]}\n                      </td>\n                      <td onDoubleClick={() => handleTdClick(itm)}>\n                        {statusArray[itm.policyState.status] === \"\"\n                          ? \"Status not set\"\n                          : statusArray[itm.policyState.status]}\n                      </td>\n                      <td\n                        onDoubleClick={() => handleTdClick(itm)}\n                        className=\"center\"\n                      >\n                        {itm.policyState.DateReceived\n                          ? format(\n                              new Date(itm.policyState.DateReceived),\n                              \"yyyy-MM-dd\"\n                            )\n                          : \"Date Received not set\"}\n                      </td>\n                      <td\n                        onDoubleClick={() => handleTdClick(itm)}\n                        className=\"center\"\n                      >\n                        {itm.policyState.DateClaim\n                          ? format(\n                              new Date(itm.policyState.DateClaim),\n                              \"yyyy-MM-dd\"\n                            )\n                          : \"Date Claim not set\"}\n                      </td>\n\n                      <td\n                        onDoubleClick={() => handleTdClick(itm)}\n                        className=\"center\"\n                      >\n                        {itm.policyState.AmountClaim === \"\"\n                          ? \"0.00\"\n                          : itm.policyState.AmountClaim}\n                      </td>\n                      <td\n                        onDoubleClick={() => handleTdClick(itm)}\n                        className=\"center\"\n                      >\n                        {itm.policyState.AmountApproved === \"\"\n                          ? \"0.00\"\n                          : itm.policyState.AmountApproved}\n                      </td>\n                    </tr>\n                  );\n                })}\n            </tbody>\n          </table>\n        </div>\n      </div>\n      {SearchClaimModal}\n      {showModal && (\n        <div\n          style={{\n            position: \"absolute\",\n            top: 0,\n            bottom: 0,\n            left: 0,\n            right: 0,\n            background: \"rgba(158, 155, 157, 0.31)\",\n            zIndex: \"999\",\n            display: \"flex\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n          }}\n        >\n          <div\n            style={{\n              width: \"90%\",\n              height: \"90%\",\n              overflow: \"auto\",\n              background: \"white\",\n              padding: \"20px\",\n              margin: \"auto\",\n              zIndex: \"9929\",\n              boxShadow: \" -1px 1px 13px 6px rgba(0,0,0,0.54)\",\n            }}\n          >\n            <ClaimModal\n              handleCloseModal={() => {\n                setShowModal(false);\n              }}\n              setClaimsSubmited={setClaimsSubmited}\n              claim_no={claimState.claim_no}\n              policyState={policyState}\n              policyDispatch={policyDispatch}\n              claimDispatch={claimDispatch}\n            />\n          </div>\n        </div>\n      )}\n      {isLoadingSelectedSearch && (\n        <div\n          style={{\n            position: \"absolute\",\n            top: \"0\",\n            left: \"0\",\n            right: \"0\",\n            bottom: \"0\",\n            background: \"rgba(158, 155, 157, 0.31)\",\n            zIndex: \"999\",\n            display: \"flex\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n          }}\n        >\n          <img\n            src={`${process.env.REACT_APP_IMAGE_URL}image/loading.gif`}\n            style={{ width: \"80px\", height: \"80px\" }}\n            alt=\"we\"\n          />\n        </div>\n      )}\n      {PolicyModal}\n    </div>\n  );\n}\n\nfunction ClaimModal({\n  handleCloseModal,\n  setClaimsSubmited,\n  claim_no,\n  policyDispatch,\n  policyState,\n  claimDispatch,\n}: any) {\n  const otherFileInputRef = useRef<any>(null);\n  const DateReceivedRef = useRef<HTMLDivElement>(null);\n  const DateClaimceivedRef = useRef<HTMLDivElement>(null);\n  const AmountClaimInputRef = useRef<HTMLInputElement>(null);\n  const AmountApprovedInputRef = useRef<HTMLInputElement>(null);\n  const handleInputChange = (e: any) => {\n    const { name, value } = e.target;\n    policyDispatch({ type: \"UPDATE_FIELD\", field: name, value });\n  };\n  const handleModalSave = () => {\n    Swal.fire({\n      title: \"Are you sure?\",\n      text: `You want to save it!, won't be able to revert this!`,\n      icon: \"warning\",\n      showCancelButton: true,\n      confirmButtonColor: \"#3085d6\",\n      cancelButtonColor: \"#d33\",\n      confirmButtonText: \"Yes, Save it!\",\n    }).then(async (result) => {\n      function filetransfer(arr: Array<any>, fileBasicPromises: Array<any>) {\n        const dataFile: any = [];\n        arr.forEach((itm) => {\n          const input: any = document.querySelector(`#${itm.name} input`);\n          const files = input.files;\n          dataFile.push({\n            files,\n            datakey: itm.name,\n          });\n          if (files.length > 0) {\n            for (let i = 0; i < files.length; i++) {\n              const file = files[i];\n              const reader = new FileReader();\n              fileBasicPromises.push(\n                new Promise((resolve, reject) => {\n                  reader.onload = function (event) {\n                    resolve({\n                      datakey: itm.name,\n                      fileName: file.name,\n                      fileContent: event.target?.result,\n                      fileType: file.type,\n                      file,\n                    });\n                  };\n                  reader.onerror = function (event) {\n                    reject(new Error(\"Error reading file: \" + file.name));\n                  };\n                  reader.readAsDataURL(file);\n                })\n              );\n            }\n          }\n        });\n        return fileBasicPromises;\n      }\n      if (result.isConfirmed) {\n        const fileBasicPromises: Array<any> = [];\n        filetransfer(basicDocuments, fileBasicPromises);\n\n        let fileOtherPromises: Array<any> = [];\n        renderFields().forEach((parent) => {\n          filetransfer(parent, fileOtherPromises);\n        });\n\n        const fileInsurancePromises: Array<any> = [];\n        filetransfer(insuranceDocuments, fileInsurancePromises);\n\n        const basicFileCustom = await Promise.all(fileBasicPromises);\n        const otherFileCustom = await Promise.all(fileOtherPromises);\n        const insuranceFileCustom = await Promise.all(fileInsurancePromises);\n\n        setClaimsSubmited((d: any) => {\n          let id = \"\";\n\n          if (claim_no && claim_no.trim() !== \"\") {\n            id = claim_no;\n            d = d.filter((itm: any) => itm.id !== claim_no);\n          } else {\n            id = padNumber(d.length + 1, 3);\n          }\n\n          d.push({\n            id,\n            policyState,\n            basicFileCustom,\n            otherFileCustom,\n            insuranceFileCustom,\n          });\n          return d;\n        });\n        claimDispatch({\n          type: \"UPDATE_FIELD\",\n          field: \"claim_no\",\n          value: \"\",\n        });\n        handleInputChange({\n          target: {\n            name: \"claim_type\",\n            value: 0,\n          },\n        });\n        handleInputChange({\n          target: {\n            name: \"status\",\n            value: 0,\n          },\n        });\n        handleCloseModal();\n      }\n      function padNumber(number: number, length: number) {\n        return String(number).padStart(length, \"0\");\n      }\n    });\n  };\n\n  return (\n    <>\n      <div\n        style={{\n          width: \"100%\",\n          height: \"auto\",\n          position: \"relative\",\n        }}\n      >\n        <div\n          style={{\n            height: \"30px\",\n            marginBottom: \"20px\",\n            display: \"flex\",\n            justifyContent: \"space-between\",\n            gap: \"10px\",\n          }}\n        >\n          <div\n            style={{\n              width: \"100%\",\n              display: \"flex\",\n              gap: \"10px\",\n              justifyContent: \"flex-end\",\n              padding: \"10px 20px\",\n            }}\n          >\n            <div\n              style={{\n                display: \"flex\",\n                columnGap: \"10px\",\n              }}\n            >\n              <Button\n                id=\"basic-button\"\n                aria-haspopup=\"true\"\n                sx={{\n                  height: \"30px\",\n                  fontSize: \"11px\",\n                }}\n                variant=\"contained\"\n                color=\"success\"\n                onClick={handleModalSave}\n              >\n                SAVE\n              </Button>\n              <Button\n                id=\"basic-button\"\n                aria-haspopup=\"true\"\n                sx={{\n                  height: \"30px\",\n                  fontSize: \"11px\",\n                }}\n                variant=\"contained\"\n                color=\"error\"\n                onClick={() => {\n                  Swal.fire({\n                    title: \"Are you sure?\",\n                    text: `You want to cancel it!, won't be able to revert this!`,\n                    icon: \"warning\",\n                    showCancelButton: true,\n                    confirmButtonColor: \"#3085d6\",\n                    cancelButtonColor: \"#d33\",\n                    confirmButtonText: \"Yes, Cancel it!\",\n                  }).then(async (result) => {\n                    if (result.isConfirmed) {\n                      claimDispatch({\n                        type: \"UPDATE_FIELD\",\n                        field: \"claim_no\",\n                        value: \"\",\n                      });\n                      handleInputChange({\n                        target: {\n                          name: \"claim_type\",\n                          value: 0,\n                        },\n                      });\n                      handleInputChange({\n                        target: {\n                          name: \"status\",\n                          value: 0,\n                        },\n                      });\n                      handleCloseModal();\n                      return;\n                    }\n                  });\n                }}\n              >\n                CANCEL\n              </Button>\n            </div>\n          </div>\n        </div>\n        <div>\n          <div style={{ display: \"flex\", gap: \"10px\", flexWrap: \"wrap\" }}>\n            <FormControl\n              sx={{\n                width: \"300px\",\n                marginRight: \"10px\",\n                \".MuiFormLabel-root\": {\n                  fontSize: \"14px\",\n                  background: \"white\",\n                  zIndex: 99,\n                  padding: \"0 3px\",\n                },\n                \".MuiFormLabel-root[data-shrink=false]\": { top: \"-12px\" },\n              }}\n            >\n              <InputLabel id=\"claim-type\">Claim Types</InputLabel>\n              <Select\n                labelId=\"claim-type\"\n                value={policyState.claim_type}\n                onChange={(e) => {\n                  handleInputChange(e);\n                  otherFileInputRef.current?.resetFileUpload();\n                }}\n                label=\"Claim Types\"\n                size=\"small\"\n                name=\"claim_type\"\n                sx={{\n                  height: \"27px\",\n                  fontSize: \"14px\",\n                }}\n                fullWidth\n              >\n                {claimType.map((itm, idx) => {\n                  return (\n                    <MenuItem key={idx} value={idx}>\n                      {itm}\n                    </MenuItem>\n                  );\n                })}\n              </Select>\n            </FormControl>\n            <FormControl\n              sx={{\n                width: \"300px\",\n                marginRight: \"10px\",\n                \".MuiFormLabel-root\": {\n                  fontSize: \"14px\",\n                  background: \"white\",\n                  zIndex: 99,\n                  padding: \"0 3px\",\n                },\n                \".MuiFormLabel-root[data-shrink=false]\": { top: \"-12px\" },\n              }}\n            >\n              <InputLabel id=\"status\">Status</InputLabel>\n              <Select\n                labelId=\"status\"\n                value={policyState.status}\n                onChange={handleInputChange}\n                label=\"Status\"\n                size=\"small\"\n                name=\"status\"\n                sx={{\n                  height: \"27px\",\n                  fontSize: \"14px\",\n                }}\n                fullWidth\n              >\n                {claimsStatus.sort().map((itm, idx) => {\n                  return (\n                    <MenuItem key={idx} value={idx}>\n                      {itm}\n                    </MenuItem>\n                  );\n                })}\n              </Select>\n            </FormControl>\n            <CustomDatePicker\n              textField={{\n                InputLabelProps: {\n                  style: {\n                    fontSize: \"14px\",\n                  },\n                },\n                InputProps: {\n                  style: { height: \"27px\", fontSize: \"14px\" },\n                },\n              }}\n              label=\"Date Received\"\n              onChange={(value: any) => {\n                policyDispatch({\n                  type: \"UPDATE_FIELD\",\n                  field: \"DateReceived\",\n                  value: value,\n                });\n              }}\n              value={\n                policyState.DateReceived\n                  ? new Date(policyState.DateReceived)\n                  : null\n              }\n              onKeyDown={(e: any) => {\n                if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n                  const timeout = setTimeout(() => {\n                    DateReceivedRef.current?.querySelector(\"button\")?.click();\n                    clearTimeout(timeout);\n                  }, 150);\n                }\n              }}\n              datePickerRef={DateReceivedRef}\n            />\n            <CustomDatePicker\n              textField={{\n                InputLabelProps: {\n                  style: {\n                    fontSize: \"14px\",\n                  },\n                },\n                InputProps: {\n                  style: { height: \"27px\", fontSize: \"14px\" },\n                },\n              }}\n              label=\"Date of Claim\"\n              onChange={(value: any) => {\n                policyDispatch({\n                  type: \"UPDATE_FIELD\",\n                  field: \"DateClaim\",\n                  value: value,\n                });\n              }}\n              value={\n                policyState.DateClaim ? new Date(policyState.DateClaim) : null\n              }\n              onKeyDown={(e: any) => {\n                if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\n                  const timeout = setTimeout(() => {\n                    DateClaimceivedRef.current\n                      ?.querySelector(\"button\")\n                      ?.click();\n                    clearTimeout(timeout);\n                  }, 150);\n                }\n              }}\n              datePickerRef={DateClaimceivedRef}\n            />\n            <TextField\n              label=\"Amount Claim\"\n              size=\"small\"\n              name=\"AmountClaim\"\n              value={policyState.AmountClaim}\n              onChange={handleInputChange}\n              onBlur={() => {\n                policyDispatch({\n                  type: \"UPDATE_FIELD\",\n                  field: \"AmountClaim\",\n                  value: parseFloat(\n                    (policyState.AmountClaim === \"\"\n                      ? \"0\"\n                      : policyState.AmountClaim\n                    ).replace(/,/g, \"\")\n                  ).toFixed(2),\n                });\n              }}\n              InputProps={{\n                inputComponent: NumericFormatCustom as any,\n                inputRef: AmountClaimInputRef,\n                style: { height: \"27px\", fontSize: \"14px\" },\n              }}\n              sx={{\n                width: \"160px\",\n                \".MuiFormLabel-root\": { fontSize: \"14px\" },\n                \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n              }}\n            />\n            <TextField\n              label=\"Amount Approved\"\n              size=\"small\"\n              name=\"AmountApproved\"\n              value={policyState.AmountApproved}\n              onChange={handleInputChange}\n              onBlur={() => {\n                policyDispatch({\n                  type: \"UPDATE_FIELD\",\n                  field: \"AmountApproved\",\n                  value: parseFloat(\n                    (policyState.AmountApproved === \"\"\n                      ? \"0\"\n                      : policyState.AmountApproved\n                    ).replace(/,/g, \"\")\n                  ).toFixed(2),\n                });\n              }}\n              InputProps={{\n                inputComponent: NumericFormatCustom as any,\n                inputRef: AmountApprovedInputRef,\n                style: { height: \"27px\", fontSize: \"14px\" },\n              }}\n              sx={{\n                width: \"160px\",\n                \".MuiFormLabel-root\": { fontSize: \"14px\" },\n                \".MuiFormLabel-root[data-shrink=false]\": { top: \"-5px\" },\n              }}\n            />\n            {policyState.claim_type > 1 && (\n              <TextField\n                name=\"NameTPPD\"\n                label=\"Name of Third Party\"\n                size=\"small\"\n                value={policyState.NameTPPD}\n                onChange={handleInputChange}\n                InputProps={{\n                  style: {\n                    height: \"27px\",\n                    fontSize: \"14px\",\n                    color: \"whie\",\n                  },\n                }}\n                sx={{\n                  width: \"400px\",\n                  \".MuiFormLabel-root\": { fontSize: \"14px\" },\n                  \".MuiFormLabel-root[data-shrink=false]\": {\n                    top: \"-5px\",\n                  },\n                }}\n              />\n            )}\n          </div>\n          <fieldset\n            style={{\n              marginTop: \"10px\",\n              display: \"flex\",\n              columnGap: \"10px\",\n              padding: \"15px\",\n              border: \"1px solid #cbd5e1\",\n              borderRadius: \"5px\",\n            }}\n          >\n            <legend>Basic Documents</legend>\n            <BasicDocument state={policyState} />\n          </fieldset>\n          <fieldset\n            style={{\n              marginTop: \"10px\",\n              display: \"flex\",\n              columnGap: \"10px\",\n              padding: \"15px\",\n              border: \"1px solid #cbd5e1\",\n              borderRadius: \"5px\",\n            }}\n          >\n            <legend>Other Documents</legend>\n            <OtherDocument\n              state={policyState}\n              otherFileInputRef={otherFileInputRef}\n            />\n          </fieldset>\n          <fieldset\n            style={{\n              marginTop: \"10px\",\n              display: \"flex\",\n              columnGap: \"10px\",\n              padding: \"15px\",\n              border: \"1px solid #cbd5e1\",\n              borderRadius: \"5px\",\n            }}\n          >\n            <legend>Insurance Documents</legend>\n            <InsuranceDocument state={policyState} />\n          </fieldset>\n        </div>\n      </div>\n    </>\n  );\n}\nfunction BasicDocument({ state }: any) {\n  const [activeListBasicDocument, setActiveListBasicDocument] =\n    useState(\"policyFile\");\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        width: \"100%\",\n        height: \"500px\",\n        maxHeight: \"500px\",\n        flexDirection: \"column\",\n      }}\n    >\n      <div\n        style={{\n          display: \"flex\",\n          paddingRight: \"10px\",\n          minWidth: \"300px\",\n        }}\n      >\n        {basicDocuments.map((itm, idx) => {\n          return (\n            <MyButton\n              key={idx}\n              itm={itm}\n              setActiveListBasicDocument={setActiveListBasicDocument}\n              activeListBasicDocument={activeListBasicDocument}\n              disabled={state.mode === \"\"}\n            />\n          );\n        })}\n      </div>\n      {basicDocuments.map((itm, idx) => {\n        return (\n          <div\n            key={idx}\n            style={{\n              flex: 1,\n              width: \"100%\",\n              position: \"relative\",\n              display: itm.name === activeListBasicDocument ? \"block\" : \"none\",\n            }}\n            id={itm.name}\n          >\n            <FileUploadInput />\n          </div>\n        );\n      })}\n    </div>\n  );\n}\nexport default Claims;\nfunction OtherDocument({ state, otherFileInputRef }: any) {\n  const [activeListBasicDocument, setActiveListBasicDocument] =\n    useState(\"policyFile\");\n\n  useEffect(() => {\n    const data = renderFields();\n    setActiveListBasicDocument(data[state.claim_type][0].name);\n  }, [state.claim_type]);\n\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        width: \"100%\",\n        height: \"500px\",\n        maxHeight: \"500px\",\n        flexDirection: \"column\",\n      }}\n    >\n      <div\n        style={{\n          display: \"flex\",\n          paddingRight: \"10px\",\n          minWidth: \"300px\",\n        }}\n      >\n        {renderFields().map((r, Ridx) => {\n          return (\n            <div\n              key={Ridx}\n              style={{\n                display: state.claim_type === Ridx ? \"block\" : \"none\",\n              }}\n            >\n              {r.map((c, cIdx) => {\n                return (\n                  <MyButton\n                    key={cIdx}\n                    itm={c}\n                    setActiveListBasicDocument={setActiveListBasicDocument}\n                    activeListBasicDocument={activeListBasicDocument}\n                    disabled={state.mode === \"\"}\n                  />\n                );\n              })}\n            </div>\n          );\n        })}\n      </div>\n      {renderFields().map((r, Ridx) => {\n        return (\n          <React.Fragment key={Ridx}>\n            {r.map((c, cIdx) => {\n              return (\n                <div\n                  key={cIdx}\n                  style={{\n                    flex: 1,\n                    width: \"100%\",\n                    position: \"relative\",\n                    display:\n                      c.name === activeListBasicDocument ? \"block\" : \"none\",\n                  }}\n                  id={c.name}\n                >\n                  <FileUploadInput ref={otherFileInputRef} />\n                </div>\n              );\n            })}\n          </React.Fragment>\n        );\n      })}\n    </div>\n  );\n}\nfunction InsuranceDocument({ state }: any) {\n  const [activeListBasicDocument, setActiveListBasicDocument] = useState(\"loa\");\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        width: \"100%\",\n        height: \"500px\",\n        maxHeight: \"500px\",\n        flexDirection: \"column\",\n      }}\n    >\n      <div\n        style={{\n          display: \"flex\",\n          paddingRight: \"10px\",\n          minWidth: \"300px\",\n        }}\n      >\n        {insuranceDocuments.map((itm, idx) => {\n          return (\n            <MyButton\n              key={idx}\n              itm={itm}\n              setActiveListBasicDocument={setActiveListBasicDocument}\n              activeListBasicDocument={activeListBasicDocument}\n              disabled={state.mode === \"\"}\n            />\n          );\n        })}\n      </div>\n      {insuranceDocuments.map((itm, idx) => {\n        return (\n          <div\n            key={idx}\n            style={{\n              flex: 1,\n              width: \"100%\",\n              position: \"relative\",\n              display: itm.name === activeListBasicDocument ? \"block\" : \"none\",\n            }}\n            id={itm.name}\n          >\n            <FileUploadInput />\n          </div>\n        );\n      })}\n    </div>\n  );\n}\nfunction MyButton({\n  setActiveListBasicDocument,\n  activeListBasicDocument,\n  itm,\n  disabled,\n}: any) {\n  const [isHovered, setIsHovered] = useState(false);\n  const handleMouseEnter = () => {\n    setIsHovered(true);\n  };\n\n  const handleMouseLeave = () => {\n    setIsHovered(false);\n  };\n\n  return (\n    <button\n      onClick={() => {\n        setActiveListBasicDocument(itm.name);\n      }}\n      onMouseEnter={handleMouseEnter}\n      onMouseLeave={handleMouseLeave}\n      style={{\n        padding: \"10px\",\n        fontSize: \"13px\",\n        cursor: \"pointer\",\n        background:\n          activeListBasicDocument === itm.name\n            ? \"black\"\n            : isHovered\n            ? \"#f1f5f9\"\n            : \"transparent\",\n        color: activeListBasicDocument === itm.name ? \"white\" : \"black\",\n        border: \"none\",\n        textAlign: \"left\",\n      }}\n    >\n      {itm.label}\n    </button>\n  );\n}\nexport function setNewStateValue(dispatch: any, obj: any) {\n  Object.entries(obj).forEach(([field, value]) => {\n    dispatch({ type: \"UPDATE_FIELD\", field, value });\n  });\n}\nexport const FileUploadInput = forwardRef((props, ref) => {\n  const [selectedFiles, setSelectedFiles] = useState<Array<File>>([]);\n  const id = useId();\n  const fileInput = useRef<HTMLInputElement>(null);\n  const [isDragging, setIsDragging] = useState(false);\n  const handleDragLeave = (e: React.DragEvent<HTMLDivElement>) => {\n    e.preventDefault();\n    setIsDragging(false);\n  };\n  const handleDragEnter = (e: React.DragEvent<HTMLDivElement>) => {\n    e.preventDefault();\n    setIsDragging(true);\n  };\n  const handleDrop = (e: React.DragEvent<HTMLDivElement>) => {\n    e.preventDefault();\n    const fileList = e.dataTransfer.files;\n    const files = Array.from(fileList);\n    const newFiles = [...selectedFiles, ...files];\n    setIsDragging(false);\n    if (checkFile(newFiles)) {\n      fileInput.current?.click();\n      return alert(\"file is not valid Extention!\");\n    } else {\n      setSelectedFiles(newFiles);\n    }\n  };\n  const handleFileChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const fileList = e.target.files as FileList;\n\n    const files = Array.from(fileList);\n    const newFiles = [...selectedFiles, ...files];\n    if (checkFile(newFiles)) {\n      return alert(\"file is not valid Extention!\");\n    }\n    setSelectedFiles(newFiles);\n  };\n\n  useEffect(() => {\n    if (selectedFiles.length <= 0) return;\n    function arrayToFileList(filesArray: Array<File>) {\n      const dataTransfer = new DataTransfer();\n      filesArray.forEach((file) => {\n        dataTransfer.items.add(file);\n      });\n      return dataTransfer.files;\n    }\n    const fileList = arrayToFileList(selectedFiles);\n    if (fileInput.current) {\n      fileInput.current.files = fileList;\n    }\n  }, [selectedFiles]);\n\n  useImperativeHandle(ref, () => ({\n    resetFileUpload: () => {\n      setSelectedFiles([]);\n    },\n  }));\n\n  return (\n    <>\n      <button\n        onClick={() => {\n          setSelectedFiles([]);\n          const form = document.getElementById(id)\n            ?.parentElement as HTMLFormElement;\n          form.reset();\n        }}\n        id=\"reset-buton\"\n        style={{\n          display: \"none\",\n        }}\n      >\n        resetALl\n      </button>\n      <div>\n        <div\n          style={{\n            display: \"flex\",\n            flexWrap: \"wrap\",\n            gap: \"5px\",\n            height: \"400px\",\n            width: \"100%\",\n            background: \"#f8fafc\",\n            overflow: \"auto\",\n            border: isDragging ? \"1px solid #c026d3\" : \"1px solid #cbd5e1\",\n            boxSizing: \"border-box\",\n            padding: \"10px\",\n          }}\n          onDragEnter={handleDragEnter}\n          onDragOver={(e) => e.preventDefault()}\n          onDragLeave={handleDragLeave}\n          onDrop={handleDrop}\n        >\n          <div\n            style={{\n              height: \"auto\",\n              width: \"100%\",\n              display: \"flex\",\n              flexWrap: \"wrap\",\n              ...(selectedFiles.length <= 0 && {\n                alignItems: \"center\",\n                textAlign: \"center\",\n                justifyContent: \"center\",\n              }),\n              gap: \"10px\",\n              marginBottom: \"50px\",\n            }}\n            onDragEnter={handleDragEnter}\n            onDragOver={(e) => e.preventDefault()}\n            onDragLeave={handleDragLeave}\n            onDrop={handleDrop}\n          >\n            {selectedFiles.length <= 0 ? (\n              <CloudUploadIcon\n                sx={{ fontSize: \"8em\", color: \"#d1d5db\", zIndex: \"2\" }}\n              />\n            ) : (\n              selectedFiles.map((itm, idx) => {\n                return (\n                  <DisplayFile\n                    key={idx}\n                    itm={itm}\n                    selectedFiles={selectedFiles}\n                    setSelectedFiles={setSelectedFiles}\n                    fileInput={fileInput}\n                  />\n                );\n              })\n            )}\n          </div>\n        </div>\n        <div\n          style={{\n            position: \"absolute\",\n            top: \"50%\",\n            left: \"50%\",\n            transform: \"translate(-50%,-50%)\",\n          }}\n          draggable={false}\n        ></div>\n      </div>\n      <form\n        style={{\n          position: \"absolute\",\n          bottom: \"1px\",\n          left: \"1px\",\n          right: \"1px\",\n          zIndex: \"4\",\n        }}\n      >\n        <label\n          style={{\n            display: \"block\",\n            fontSize: \"13px\",\n            fontWeight: \"500\",\n            textAlign: \"center\",\n            cursor: \"pointer\",\n            padding: \" 10px\",\n            background: \"#0d9488\",\n            color: \"white\",\n          }}\n          htmlFor={id}\n        >\n          Click to Upload File\n        </label>\n        <input\n          ref={fileInput}\n          style={{ display: \"none\" }}\n          id={id}\n          type=\"file\"\n          onChange={handleFileChange}\n          accept=\".jpg,.jpeg,.png,.pdf\"\n          multiple\n        />\n      </form>\n    </>\n  );\n});\nexport function DisplayFile({\n  itm,\n  selectedFiles,\n  setSelectedFiles,\n  fileInput,\n}: {\n  itm: File;\n  selectedFiles: Array<File>;\n  setSelectedFiles: React.Dispatch<React.SetStateAction<File[]>>;\n  fileInput: React.RefObject<HTMLInputElement>;\n}) {\n  const objectUrl = URL.createObjectURL(itm);\n  return (\n    <div\n      id=\"image-card\"\n      style={{\n        position: \"relative\",\n        width: \"200px\",\n        height: \"200px\",\n        textAlign: \"center\",\n        boxShadow: \"10px 10px 28px -7px rgba(0,0,0,0.75)\",\n        border: \"1px solid #cbd5e1\",\n      }}\n    >\n      {itm.type.startsWith(\"image/\") ? (\n        <div\n          style={{\n            width: \"100%\",\n            height: \"100%\",\n            display: \"flex\",\n            alignItems: \"center\",\n          }}\n        >\n          <img\n            src={objectUrl}\n            alt=\"img-sss\"\n            style={{ width: \"100%\", height: \"auto\" }}\n          />\n        </div>\n      ) : (\n        <iframe\n          title=\"dasdseasd\"\n          src={objectUrl}\n          style={{ width: \"100%\" }}\n        ></iframe>\n      )}\n      <div\n        style={{\n          position: \"absolute\",\n          bottom: \"0\",\n          left: \"0\",\n          right: \"0\",\n          background: \"white\",\n          padding: \"5px\",\n          display: \"flex\",\n          columnGap: \"10px\",\n          justifyContent: \"center\",\n        }}\n      >\n        <IconButton\n          color=\"primary\"\n          edge=\"end\"\n          onClick={() => {\n            window.open(objectUrl, \"_blank\");\n          }}\n        >\n          <RemoveRedEyeIcon />\n        </IconButton>\n        <IconButton\n          color=\"success\"\n          edge=\"end\"\n          onClick={() => {\n            var downloadLink: any = document.createElement(\"a\");\n            downloadLink.href = objectUrl;\n            downloadLink.download = itm.name;\n            downloadLink.click();\n          }}\n        >\n          <CloudDownloadIcon />\n        </IconButton>\n        <IconButton\n          color=\"error\"\n          edge=\"end\"\n          onClick={() => {\n            const filesToRemove = [itm.name];\n            const filteredFiles = selectedFiles.filter((file) => file !== itm);\n            setSelectedFiles(filteredFiles);\n            const newFileList = filterFileList(\n              fileInput.current?.files as FileList,\n              filesToRemove\n            );\n            if (fileInput.current && fileInput.current.files) {\n              fileInput.current.files = newFileList;\n            }\n            function filterFileList(\n              fileList: FileList,\n              filesToRemove: Array<string>\n            ) {\n              const dataTransfer = new DataTransfer();\n              for (let i = 0; i < fileList.length; i++) {\n                if (!filesToRemove.includes(fileList[i].name)) {\n                  dataTransfer.items.add(fileList[i]);\n                }\n              }\n              return dataTransfer.files;\n            }\n          }}\n        >\n          <HighlightOffIcon />\n        </IconButton>\n      </div>\n    </div>\n  );\n}\n\nexport function checkFile(newFiles: Array<File>) {\n  let isNotExt = false;\n  const fileTypes = [\"application/pdf\", \"image/jpg\", \"image/jpeg\", \"image/png\"];\n  const newFileTpes = newFiles.map((itm) => itm.type);\n  newFileTpes.forEach((fileType) => {\n    if (!fileTypes.includes(fileType)) {\n      isNotExt = true;\n      return;\n    }\n  });\n  return isNotExt;\n}\n"],"names":["NumericFormatCustom","React","props","ref","onChange","other","_objectWithoutProperties","_excluded","_jsx","NumericFormat","_objectSpread","getInputRef","onValueChange","values","target","name","value","allowNegative","thousandSeparator","valueIsNumericString","CustomDatePicker","_ref","label","onKeyDown","inputRef","datePickerRef","fullWidth","textField","_ref$minWidth","minWidth","rest","LocalizationProvider","dateAdapter","AdapterDateFns","children","DatePicker","floatingLabelStyle","color","slotProps","size","InputLabelProps","sx","fieldset","borderColor","fontSize","top","initialClaimState","claims_id","dateReported","dateAccident","dateInspected","department","remarks","search","mode","claim_no","initialPolicyState","policy","claim_type","insurance","PolicyNo","PlateNo","Model","BodyType","Make","ChassisNo","MotorNo","ORNo","CoverNo","BLTFileNo","AssuredName","IDNo","totaDue","totalpaid","balance","remitted","Account","status","DateFrom","DateTo","DateReceived","DateClaim","AmountClaim","AmountApproved","NameTPPD","claimType","basicDocuments","insuranceDocuments","claimsStatus","renderFields","reducer","state","action","type","_defineProperty","field","ClaimModal","_ref8","handleCloseModal","setClaimsSubmited","policyDispatch","policyState","claimDispatch","otherFileInputRef","useRef","DateReceivedRef","DateClaimceivedRef","AmountClaimInputRef","AmountApprovedInputRef","handleInputChange","e","_e$target2","_Fragment","_jsxs","style","width","height","position","marginBottom","display","justifyContent","gap","padding","columnGap","Button","id","variant","onClick","_ref9","Swal","title","text","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","then","_x10","_asyncToGenerator","_regeneratorRuntime","mark","_callee10","result","filetransfer","fileBasicPromises","fileOtherPromises","fileInsurancePromises","basicFileCustom","otherFileCustom","insuranceFileCustom","padNumber","wrap","_context11","prev","next","number","length","String","padStart","arr","dataFile","forEach","itm","files","document","querySelector","concat","push","datakey","_loop2","file","i","reader","FileReader","Promise","resolve","reject","onload","event","_event$target2","fileName","fileContent","fileType","onerror","Error","readAsDataURL","isConfirmed","parent","all","sent","d","trim","filter","stop","apply","arguments","_ref10","_x11","_callee11","_context12","abrupt","flexWrap","FormControl","marginRight","background","zIndex","InputLabel","Select","labelId","_otherFileInputRef$cu","current","resetFileUpload","map","idx","MenuItem","sort","InputProps","Date","code","timeout","setTimeout","_DateReceivedRef$curr","_DateReceivedRef$curr2","click","clearTimeout","_DateClaimceivedRef$c","_DateClaimceivedRef$c2","TextField","onBlur","parseFloat","replace","toFixed","inputComponent","marginTop","border","borderRadius","BasicDocument","OtherDocument","InsuranceDocument","_ref11","_useState7","useState","_useState8","_slicedToArray","activeListBasicDocument","setActiveListBasicDocument","maxHeight","flexDirection","paddingRight","MyButton","disabled","flex","FileUploadInput","_queryFn","_mutationFn","_mutationFn2","_sortList","data","_React$useState","_React$useState2","anchorEl","setAnchorEl","_useState","_useState2","claimsSubmited","_useContext","useContext","AuthContext","myAxios","user","_useReducer","useReducer","_useReducer2","claimState","_useReducer3","_useReducer4","_useState3","_useState4","listofClaim","setListofClaim","_useState5","_useState6","showModal","setShowModal","searchClaimInputRef","policySearchInputRef","dateAccidentRef","dateInspectedRef","_useQuery","useQuery","queryKey","queryFn","_callee","_context","get","headers","Authorization","accessToken","refetchOnWindowFocus","onSuccess","res","claim_id","isLoadingClaimsId","isLoading","refetchClaimsId","refetch","open","Boolean","handleClose","_e$target","_useMutation","useMutation","mutationFn","variable","post","_formatDataToDocument","formattedSelectedData","policyTypeContainer","formatDataToDocument","_x2","_x3","_callee3","dataDocument","url","newObjContainer","_loop","index","_context4","basicItem","mainURL","response","blob","_context3","uniqueFilename","fetch","File","_event$target","delegateYield","_x","_callee2","item","_item$policyState$cla","otherDocuments","newObjContainerBasic","newObjContainerOther","newObjContainerInsurance","_context2","parseInt","toString","process","setNewStateValue","isLoadingSelectedSearch","mutateSelectedSearch","mutate","_useMutation2","mutationKey","_x4","_callee4","_context5","success","message","timer","isLoadingClaimSave","mutateClaimSave","_useMutation3","_x5","_callee5","_context6","console","log","closePolicyModal","isLoadingClaimSelectedPolicyDetails","mutateClaimSelectedPolicyDetails","_useQueryModalTable","useQueryModalTable","link","queryUrlName","columns","headerName","uniqueId","responseDataKey","onSelected","selectedRowData","closeClaimModal","searchRef","SearchClaimModal","ModalComponent","isLoadingClaimModal","openClaimModal","openModal","closeModal","_useQueryModalTable2","PolicyModal","isLoadingPolicyModal","openPolicyModal","handleTdClick","flushSync","groupByLabel","grouped","Object","entries","displayFile","groupedData","_ref2","_ref3","items","fileList","DataTransfer","input","add","dispatchEvent","Event","bubbles","LoadingButton","loading","htmlFor","OutlinedInput","legend","endAdornment","InputAdornment","IconButton","edge","PersonSearchIcon","preventDefault","readOnly","RestartAltIcon","undefined","currentTarget","backgroundColor","grey","Menu","onClose","MenuListProps","localStorage","setItem","claimdsDetails","elementString","ReactDOMServer","borderBottom","textAlign","fontWeight","minHeight","borderRight","rowGap","boxSizing","format","margin","alignSelf","marginLeft","borderTop","right","bottom","borderLeft","alignItems","window","_ref4","_x6","_callee6","_context7","codeCondfirmationAlert","isUpdate","cb","userCodeConfirmation","_ref5","_x7","_callee7","_context8","_ref6","_x8","_callee8","_context9","_datePickerRef$curren","_datePickerRef$curren2","_dateAccidentRef$curr","_dateAccidentRef$curr2","_dateInspectedRef$cur","_dateInspectedRef$cur2","gridTemplateColumns","gridColumn","borderCollapse","className","a","b","statusArray","Stack","direction","spacing","VisibilityIcon","_itm$policyState$Amou","_itm$policyState$Amou2","createElement","div","content","textContent","contentchild","buttonClose","body","basic","uniqueBasicArray","indexOf","uniqueOtherArray","insuranceFile","uniqueInsuranceArray","tableString","colSpan","includes","xmlns","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","innerHTML","appendChild","addEventListener","removeChild","stopPropagation","ArticleIcon","_ref7","_x9","_callee9","_context10","DeleteIcon","onDoubleClick","left","overflow","boxShadow","src","alt","_ref12","_useState9","_useState10","useEffect","r","Ridx","c","cIdx","_ref13","_useState11","_useState12","_ref14","_useState13","_useState14","isHovered","setIsHovered","onMouseEnter","onMouseLeave","cursor","dispatch","obj","_ref15","_ref16","forwardRef","_useState15","_useState16","selectedFiles","setSelectedFiles","useId","fileInput","_useState17","_useState18","isDragging","setIsDragging","handleDragLeave","handleDragEnter","handleDrop","_fileInput$current","dataTransfer","Array","from","newFiles","_toConsumableArray","checkFile","alert","filesArray","arrayToFileList","useImperativeHandle","_document$getElementB","getElementById","parentElement","reset","onDragEnter","onDragOver","onDragLeave","onDrop","CloudUploadIcon","DisplayFile","transform","draggable","accept","multiple","_ref17","objectUrl","URL","createObjectURL","startsWith","RemoveRedEyeIcon","downloadLink","href","download","CloudDownloadIcon","_fileInput$current2","filesToRemove","filteredFiles","newFileList","filterFileList","HighlightOffIcon","isNotExt","fileTypes"],"sourceRoot":""}