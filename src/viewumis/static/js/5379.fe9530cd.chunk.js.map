{"version":3,"file":"static/js/5379.fe9530cd.chunk.js","mappings":"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","sources":["components/Helmet.tsx","lib/validateDate.ts","components/UpwardFields.tsx","feautures/Admin/Reports/Production/RenewalNoticeReport.tsx","lib/wait.ts"],"sourcesContent":["\r\nimport { Helmet } from \"react-helmet\";\r\n\r\nconst PageHelmet = ({ title = '' }: { title: string }) => {\r\n    const imgUrl = process.env.REACT_APP_IMAGE_URL;\r\n    const department = process.env.REACT_APP_DEPARTMENT\r\n    return (\r\n        <Helmet>\r\n            <title>{`${department} - ${title}`}</title>\r\n            <link rel=\"icon\" type=\"image/png\" href={`${imgUrl}/logo.png`} />\r\n        </Helmet>\r\n    );\r\n};\r\n\r\nexport default PageHelmet;","export function isValidDate(dateString:string) {\r\n    // Ensure the date is in the correct format: YYYY-MM-DD\r\n     const regex = /^\\d{4}-\\d{2}-\\d{2}$/;\r\n     if (!regex.test(dateString)) {\r\n         return false;\r\n     }\r\n \r\n     // Extract the year, month, and day\r\n     const [year, month, day] = dateString.split(\"-\");\r\n \r\n     // Ensure year is a valid four-digit number and within a reasonable range\r\n     const parsedYear = parseInt(year);\r\n     if (parsedYear < 1000 || parsedYear > 2040) {\r\n         return false;\r\n     }\r\n \r\n     const date = new Date(dateString);\r\n     // Ensure the created date matches the parts we input, adjusting for overflow\r\n     return date.getFullYear() === parsedYear &&\r\n            date.getMonth() + 1 === parseInt(month) &&\r\n            date.getDate() === parseInt(day);\r\n }","import {\n  HtmlHTMLAttributes,\n  InputHTMLAttributes,\n  useId,\n  ReactNode,\n  useState,\n  LegacyRef,\n  TextareaHTMLAttributes,\n  CSSProperties,\n  forwardRef,\n  useImperativeHandle,\n} from \"react\";\nimport \"../style/design.css\";\nimport { isValidDate } from \"../lib/validateDate\";\nimport { format } from \"date-fns\";\nimport { wait } from \"../lib/wait\";\n\ninterface TextInputProps {\n  input: InputHTMLAttributes<HTMLInputElement>;\n  label: HtmlHTMLAttributes<HTMLLabelElement>;\n  inputRef?: React.RefObject<HTMLInputElement>;\n  icon?: ReactNode; // New prop for the icon\n  iconPosition?: \"start\" | \"end\"; // New prop to choose icon position\n  onIconClick?: React.MouseEventHandler<HTMLDivElement> | undefined;\n  disableIcon?: boolean;\n  containerStyle?: CSSProperties;\n  containerClassName?: string;\n}\n\ninterface TextAreaPrps {\n  textarea: TextareaHTMLAttributes<HTMLTextAreaElement>;\n  label: HtmlHTMLAttributes<HTMLLabelElement>;\n  _inputRef: LegacyRef<HTMLTextAreaElement>;\n  icon?: ReactNode; // New prop for the icon\n  iconPosition?: \"start\" | \"end\"; // New prop to choose icon position\n  onIconClick?: React.MouseEventHandler<HTMLDivElement> | undefined;\n  disableIcon?: boolean;\n  containerStyle?: CSSProperties;\n  containerClassName?: string;\n}\n\ninterface TextFormatedInputProps extends TextInputProps {\n  onChange?: React.ChangeEventHandler<HTMLInputElement> | undefined;\n  onBlur?: React.ChangeEventHandler<HTMLInputElement> | undefined;\n}\nexport function TextFormatedInput({\n  input,\n  label,\n  inputRef,\n  icon,\n  iconPosition = \"end\", // Default position is 'end'\n  disableIcon = false,\n  onIconClick = (e) => {},\n  onChange = (e) => {},\n  onBlur = (e) => {},\n  containerStyle,\n  containerClassName,\n}: TextFormatedInputProps) {\n  // const [inputValue, setInputValue] = useState('');\n  const id = useId();\n\n  // Helper function to format numbers with commas\n  const formatNumber = (value: string) => {\n    if (!value) return value;\n\n    // Split the value into integer and decimal parts\n    const parts = value.split(\".\");\n\n    // Add commas to the integer part only\n    parts[0] = parts[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n\n    // Join the integer and decimal parts if decimal exists\n    return parts.join(\".\");\n  };\n\n  // Helper function to remove commas\n  const unformatNumber = (value: string) => {\n    return value.replace(/,/g, \"\");\n  };\n\n  // Function to ensure two decimal places\n  const ensureTwoDecimals = (value: string) => {\n    // If the value has no decimal part, append '.00'\n    if (!value.includes(\".\")) {\n      if (value === \"\") {\n        return \"0.00\";\n      } else {\n        return value + \".00\";\n      }\n    }\n\n    // If the value has one decimal place, append '0'\n    const parts = value.split(\".\");\n    if (parts[1].length === 1) {\n      return value + \"0\";\n    }\n\n    // If it already has two decimal places, return as is\n    return value;\n  };\n\n  const handleChange = (e: any) => {\n    let value = e.target.value;\n\n    // Remove commas for processing\n    value = unformatNumber(value);\n\n    // Allow only numbers, commas, and one decimal point\n    const regex = /^-?\\d+(,\\d{3})*(\\.\\d*)?$/;\n\n    // Remove commas for processing\n    value = unformatNumber(value);\n\n    // Check if the value is valid\n    if (value === \"\" || regex.test(value)) {\n      // Set the formatted value back in the input field\n      //setInputValue(formatNumber(value));\n      e.target.value = formatNumber(value);\n    } else {\n      const numbers = value.match(/\\d+/g);\n      if (numbers) {\n        const newV = numbers.join(\"\");\n        e.target.value = formatNumber(newV);\n      } else {\n        e.target.value = \"0\";\n      }\n    }\n  };\n\n  const handleBlur = (e: any) => {\n    let value = unformatNumber(e.target.value);\n\n    // Ensure the value has two decimal places\n    value = ensureTwoDecimals(value);\n\n    // Set the value with commas and .00 (if needed)\n    // setInputValue(formatNumber(value));\n    e.target.value = formatNumber(value);\n  };\n\n  return (\n    <div\n      className={containerClassName}\n      style={{\n        display: \"flex\",\n        alignItems: \"center\",\n        position: \"relative\",\n        ...containerStyle, // Enable absolute positioning for icon\n      }}\n    >\n      <label {...label} htmlFor={id}>\n        {label.title}\n      </label>\n      {icon && iconPosition === \"start\" && (\n        <div style={{ position: \"absolute\", left: \"8px\", zIndex: 1 }}>\n          {icon}\n        </div>\n      )}\n      <input\n        ref={inputRef}\n        id={id}\n        {...input}\n        type=\"text\"\n        style={{\n          height: \"100%\",\n          textAlign: \"right\",\n          ...input.style,\n        }}\n        onChange={(e) => {\n          handleChange(e);\n          onChange(e);\n        }}\n        onBlur={(e) => {\n          handleBlur(e);\n          onBlur(e);\n        }} // Add .00 on blur\n        onFocus={(e) => {\n          e.currentTarget.select();\n          if (input && input.onFocus) input.onFocus(e);\n        }}\n      />\n      {icon && iconPosition === \"end\" && (\n        <div\n          onClick={onIconClick}\n          style={{\n            position: \"absolute\",\n            right: \"2px\",\n            top: \"50%\",\n            transform: \"translateY(-50%)\",\n            zIndex: 1,\n            cursor: disableIcon ? \"none\" : \"pointer\",\n            display: \"flex\",\n            alignItems: \"center\",\n            justifyContent: \"center\",\n            background: \"white\",\n            pointerEvents: disableIcon ? \"none\" : \"auto\",\n          }}\n        >\n          {icon}\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport function TextInput({\n  input,\n  label,\n  inputRef,\n  icon,\n  iconPosition = \"end\", // Default position is 'end'\n  disableIcon = false,\n  containerStyle,\n  onIconClick = (e) => {},\n  containerClassName,\n}: TextInputProps) {\n  const id = useId();\n\n  return (\n    <div\n      className={containerClassName}\n      style={{\n        display: \"flex\",\n        alignItems: \"center\",\n        position: \"relative\",\n        ...containerStyle,\n      }}\n    >\n      <label {...label} htmlFor={id}>\n        {label.title}\n      </label>\n      {icon && iconPosition === \"start\" && (\n        <div style={{ position: \"absolute\", left: \"8px\", zIndex: 1 }}>\n          {icon}\n        </div>\n      )}\n      <input\n        ref={inputRef}\n        id={id}\n        {...input}\n        onBlur={(e) => {\n          if (input.type === \"month\") {\n            if (!isValidDate(`${e.currentTarget.value}-01`)) {\n              alert(\n                `Invalid ${label.title\n                  ?.replace(/:/g, \"\")\n                  .trim()}!, Resetting date.`\n              );\n              e.currentTarget.value = format(new Date(), \"yyyy-MM\");\n              wait(100).then(() => {\n                inputRef?.current?.focus();\n              });\n              return;\n            }\n          }\n          if (input.type === \"date\") {\n            if (!isValidDate(e.currentTarget.value)) {\n              alert(\n                `Invalid ${label.title\n                  ?.replace(/:/g, \"\")\n                  .trim()}!, Resetting date.`\n              );\n              e.currentTarget.value = format(new Date(), \"yyyy-MM-dd\");\n              wait(100).then(() => {\n                inputRef?.current?.focus();\n              });\n              return;\n            }\n          }\n          if (input && input.onBlur) input.onBlur(e);\n        }}\n        style={{\n          height: \"100%\",\n          ...input.style,\n        }}\n      />\n      {icon && iconPosition === \"end\" && (\n        <div\n          onClick={onIconClick}\n          style={{\n            position: \"absolute\",\n            right: \"2px\",\n            top: \"50%\",\n            transform: \"translateY(-50%)\",\n            zIndex: 1,\n            cursor: disableIcon ? \"none\" : \"pointer\",\n            display: \"flex\",\n            alignItems: \"center\",\n            justifyContent: \"center\",\n            background: \"white\",\n            pointerEvents: disableIcon ? \"none\" : \"auto\",\n          }}\n        >\n          {icon}\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport function TextAreaInput({\n  containerClassName,\n  textarea,\n  label,\n  _inputRef,\n  icon,\n  iconPosition = \"end\", // Default position is 'end'\n  disableIcon = false,\n  onIconClick = (e) => {},\n  containerStyle,\n}: TextAreaPrps) {\n  const id = useId();\n\n  return (\n    <div\n      className={containerClassName}\n      style={{\n        display: \"flex\",\n        alignItems: \"center\",\n        position: \"relative\",\n        ...containerStyle, // Enable absolute positioning for icon\n      }}\n    >\n      <label {...label} htmlFor={id}>\n        {label.title}\n      </label>\n      {icon && iconPosition === \"start\" && (\n        <div style={{ position: \"absolute\", left: \"8px\", zIndex: 1 }}>\n          {icon}\n        </div>\n      )}\n      <textarea\n        ref={_inputRef}\n        id={id}\n        {...textarea}\n        style={{\n          height: \"100%\",\n          ...textarea.style,\n        }}\n      />\n      {icon && iconPosition === \"end\" && (\n        <div\n          onClick={onIconClick}\n          style={{\n            position: \"absolute\",\n            right: \"2px\",\n            top: \"50%\",\n            transform: \"translateY(-50%)\",\n            zIndex: 1,\n            cursor: disableIcon ? \"none\" : \"pointer\",\n            display: \"flex\",\n            alignItems: \"center\",\n            justifyContent: \"center\",\n            background: \"white\",\n            pointerEvents: disableIcon ? \"none\" : \"auto\",\n          }}\n        >\n          {icon}\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport const SelectInput = forwardRef(\n  (\n    {\n      select,\n      label,\n      selectRef,\n      datasource = [],\n      values = \"\",\n      display = \"\",\n      containerStyle,\n      containerClassName,\n    }: {\n      selectRef?: React.RefObject<HTMLSelectElement>;\n      labelRef?: React.RefObject<HTMLLabelElement>;\n      select: InputHTMLAttributes<HTMLSelectElement>;\n      label: HtmlHTMLAttributes<HTMLLabelElement>;\n      datasource: Array<any>;\n      values: string;\n      display: string;\n      containerStyle?: React.CSSProperties | undefined;\n      containerClassName?: string;\n    },\n    ref: any\n  ) => {\n    const [_datasource, _setDataSource] = useState(datasource);\n    const id = useId();\n\n    useImperativeHandle(ref, () => ({\n      setDataSource: (_dataSource: any) => {\n        _setDataSource(_dataSource);\n      },\n      getDataSource: () => {\n        return _datasource;\n      },\n    }));\n\n    return (\n      <div\n        className={containerClassName}\n        style={{\n          display: \"flex\",\n          height: \"18px\",\n          alignItems: \"center\",\n          ...containerStyle,\n        }}\n      >\n        <label {...label} htmlFor={id}>\n          {label.title}\n        </label>\n        <select\n          {...select}\n          ref={selectRef}\n          className={`select ${select.className}`}\n          style={{\n            height: \"18px\",\n            ...select.style,\n          }}\n        >\n          {_datasource.map((itm, idx) => {\n            return (\n              <option key={idx} value={itm[values]}>\n                {itm[display]}\n              </option>\n            );\n          })}\n        </select>\n      </div>\n    );\n  }\n);\n\nexport function ButtonField({\n  buttonRetRef,\n  button,\n  tooltipText = \"\",\n  children,\n  disabled = false,\n}: {\n  buttonRetRef?: React.RefObject<HTMLButtonElement>;\n  button: HtmlHTMLAttributes<HTMLButtonElement>;\n  tooltipText: string;\n  children: React.ReactNode;\n  disabled?: boolean;\n}) {\n  return (\n    <div className=\"tooltip\">\n      <button\n        disabled={disabled}\n        {...button}\n        ref={buttonRetRef}\n        style={{\n          ...button.style,\n          cursor: \"pointer\",\n          background: !disabled ? \"transparent\" : \"#f1f1f1\",\n        }}\n        className=\"tooltip-button\"\n      >\n        {children}\n      </button>\n      {!disabled && <span className=\"tooltip-text\">{tooltipText}</span>}\n    </div>\n  );\n}\n","import { useContext, useRef, useState } from \"react\";\nimport { AuthContext } from \"../../../../components/AuthContext\";\nimport {\n  SelectInput,\n  TextAreaInput,\n  TextInput,\n} from \"../../../../components/UpwardFields\";\nimport { format } from \"date-fns\";\nimport { Button } from \"@mui/material\";\nimport { useQuery } from \"react-query\";\nimport PageHelmet from \"../../../../components/Helmet\";\nimport { Loading } from \"../../../../components/Loading\";\nimport { isMobile } from \"react-device-detect\";\n\nexport default function RenewalNoticeReport() {\n  const { user, myAxios } = useContext(AuthContext);\n  const [title, setTitle] = useState(\n    generateTitle({\n      format2: \"All\",\n      type: \"COM\",\n      account: \"All\",\n      dateFormat: \"Monthly\",\n      date: new Date(),\n    })\n  );\n\n  const titleRef = useRef<HTMLTextAreaElement>(null);\n  const format2Ref = useRef<HTMLSelectElement>(null);\n  const dateFormatRef = useRef<HTMLSelectElement>(null);\n  const TypeRef = useRef<HTMLSelectElement>(null);\n  const dateRef = useRef<HTMLInputElement>(null);\n  const policyTypeRef = useRef<HTMLSelectElement>(null);\n  const accountRef = useRef<HTMLSelectElement>(null);\n  const _accountRef = useRef<any>(null);\n\n  function generateTitle(props: any) {\n    const newTitle: string = `UPWARD MANAGEMENT INSURANCE SERVICES \\nMonthly Renewal Notice Report (${\n      props.type\n    } - ${props.account})\\nCut off Date: ${format(\n      new Date(props.date),\n      \"MMMM yyyy\"\n    )}`;\n    return newTitle;\n  }\n\n  const { isLoading: loadingAccount } = useQuery({\n    queryKey: \"policy-account\",\n    queryFn: async () =>\n      await myAxios.get(`/reports/reports/policy-account`, {\n        headers: {\n          Authorization: `Bearer ${user?.accessToken}`,\n        },\n      }),\n    refetchOnWindowFocus: false,\n    onSuccess: (data) => {\n      const response = data as any;\n      if (_accountRef.current)\n        _accountRef.current.setDataSource(response.data.data);\n    },\n  });\n\n  async function generateReport() {\n    const reportDetails: any = {\n      date: new Date(dateRef.current?.value as any),\n      account: `${accountRef.current?.value}`,\n      type: policyTypeRef.current?.value,\n      policy: TypeRef.current?.value,\n      title,\n    };\n    try {\n      const response = await myAxios.post(\n        \"/reports/reports/renewal-notice\",\n        reportDetails,\n        {\n          responseType: \"arraybuffer\",\n          headers: {\n            Authorization: `Bearer ${user?.accessToken}`,\n          },\n        }\n      );\n      const pdfBlob = new Blob([response.data], { type: \"application/pdf\" });\n      const pdfUrl = URL.createObjectURL(pdfBlob);\n\n      if (isMobile) {\n        // MOBILE: download directly\n        const link = document.createElement(\"a\");\n        link.href = pdfUrl;\n        link.download = \"report.pdf\";\n        document.body.appendChild(link);\n        link.click();\n        document.body.removeChild(link);\n        return;\n      } else {\n        window.open(pdfUrl);\n      }\n    } catch (error) {\n      console.error(\"SERVER ERROR :\", error);\n    }\n  }\n\n  return (\n    <>\n      <PageHelmet title={\"Renewal Notice Report\"} />\n      {loadingAccount && <Loading />}\n      <div\n        style={{\n          display: \"flex\",\n          alignItems: \"center\",\n          justifyContent: \"center\",\n          flex: 1,\n          height: \"100vh\",\n          backgroundColor: \"#F1F1F1\",\n        }}\n      >\n        <div\n          style={{\n            border: \"1px solid #94a3b8\",\n            width: \"500px\",\n            height: \"450px\",\n            display: \"flex\",\n            flexDirection: \"column\",\n            rowGap: \"10px\",\n            padding: \"20px\",\n            boxShadow: \"0px 0px 5px -1px rgba(0,0,0,0.75)\",\n          }}\n        >\n          <TextAreaInput\n            label={{\n              title: \" \",\n              style: {\n                display: \"none\",\n              },\n            }}\n            textarea={{\n              rows: 6,\n              style: { flex: 1, fontSize: \"14px\" },\n              value: title,\n              onKeyDown: (e) => {\n                if (e.code === \"NumpadEnter\" || e.code === \"Enter\") {\n                  //  refDate.current?.focus()\n                }\n              },\n              onChange: (e) => {\n                setTitle(e.target.value);\n              },\n            }}\n            _inputRef={titleRef}\n          />\n\n          <SelectInput\n            label={{\n              title: \"Policy : \",\n              style: {\n                fontSize: \"12px\",\n                fontWeight: \"bold\",\n                width: \"90px\",\n              },\n            }}\n            containerStyle={{\n              // flex: 1,\n              height: \"22px\",\n            }}\n            selectRef={TypeRef}\n            select={{\n              disabled: false,\n              style: { width: \"100%\", height: \"22px\" },\n              defaultValue: \"COM\",\n              onKeyDown: (e) => {\n                if (e.code === \"NumpadEnter\" || e.code === \"Enter\") {\n                  e.preventDefault();\n                  // refInvoice.current?.focus()\n                }\n              },\n              onChange: (e) => {\n                setTitle(\n                  generateTitle({\n                    format2: format2Ref.current?.value,\n                    type: e.target.value,\n                    account: accountRef.current?.value,\n                    dateFormat: dateFormatRef.current?.value,\n                    date: new Date(dateRef.current?.value as any),\n                  })\n                );\n              },\n            }}\n            datasource={[\n              { key: \"COM\" },\n              { key: \"FIRE\" },\n              { key: \"MAR\" },\n              { key: \"PA\" },\n            ]}\n            values={\"key\"}\n            display={\"key\"}\n          />\n          <SelectInput\n            ref={_accountRef}\n            label={{\n              title: \"Account : \",\n              style: {\n                fontSize: \"12px\",\n                fontWeight: \"bold\",\n                width: \"90px\",\n              },\n            }}\n            containerStyle={{\n              // flex: 1,\n              height: \"22px\",\n            }}\n            selectRef={accountRef}\n            select={{\n              disabled: false,\n              style: { width: \"100%\", height: \"22px\" },\n              defaultValue: \"All\",\n              onKeyDown: (e) => {\n                if (e.code === \"NumpadEnter\" || e.code === \"Enter\") {\n                  e.preventDefault();\n                  // refInvoice.current?.focus()\n                }\n              },\n              onChange: (e) => {\n                setTitle(\n                  generateTitle({\n                    format2: format2Ref.current?.value,\n                    type: TypeRef.current?.value,\n                    account: e.target.value,\n                    dateFormat: dateFormatRef.current?.value,\n                    date: new Date(dateRef.current?.value as any),\n                  })\n                );\n              },\n            }}\n            datasource={[]}\n            values={\"Account\"}\n            display={\"Account\"}\n          />\n          <SelectInput\n            label={{\n              title: \"Type : \",\n              style: {\n                fontSize: \"12px\",\n                fontWeight: \"bold\",\n                width: \"90px\",\n              },\n            }}\n            containerStyle={{\n              // flex: 1,\n              height: \"22px\",\n            }}\n            selectRef={policyTypeRef}\n            select={{\n              disabled: false,\n              style: { width: \"100%\", height: \"22px\" },\n              defaultValue: \"Regular\",\n              onKeyDown: (e) => {\n                if (e.code === \"NumpadEnter\" || e.code === \"Enter\") {\n                  e.preventDefault();\n                  // refInvoice.current?.focus()\n                }\n              },\n            }}\n            datasource={[{ key: \"Regular\" }, { key: \"Temporary\" }]}\n            values={\"key\"}\n            display={\"key\"}\n          />\n          <TextInput\n            containerStyle={\n              {\n                // flex: 1,\n              }\n            }\n            label={{\n              title: \"Date : \",\n              style: {\n                fontSize: \"12px\",\n                fontWeight: \"bold\",\n                width: \"90px\",\n              },\n            }}\n            input={{\n              type: \"date\",\n              defaultValue: format(new Date(), \"yyyy-MM-dd\"),\n              style: { width: \"100%\", height: \"22px\" },\n              onKeyDown: (e) => {\n                if (e.code === \"NumpadEnter\" || e.code === \"Enter\") {\n                }\n              },\n              onChange: (e) => {\n                setTitle(\n                  generateTitle({\n                    format2: format2Ref.current?.value,\n                    type: TypeRef.current?.value,\n                    account: accountRef.current?.value,\n                    dateFormat: dateFormatRef.current?.value,\n                    date: new Date(e.target.value as any),\n                  })\n                );\n              },\n            }}\n            inputRef={dateRef}\n          />\n          <Button\n            onClick={generateReport}\n            color=\"success\"\n            variant=\"contained\"\n            sx={{ height: \"22px\", fontSize: \"12px\" }}\n          >\n            Generate Report\n          </Button>\n        </div>\n      </div>\n    </>\n  );\n}\n","export function wait(duration:number){\n    return new Promise(resolve => setTimeout(resolve,duration))\n}"],"names":["_ref","_ref$title","title","_jsxs","Helmet","children","_jsx","concat","process","rel","type","href","isValidDate","dateString","test","_dateString$split","split","_dateString$split2","_slicedToArray","year","month","day","parsedYear","parseInt","date","Date","getFullYear","getMonth","getDate","TextFormatedInput","input","label","inputRef","icon","_ref$iconPosition","iconPosition","_ref$disableIcon","disableIcon","_ref$onIconClick","onIconClick","e","_ref$onChange","onChange","_ref$onBlur","onBlur","containerStyle","containerClassName","id","useId","formatNumber","value","parts","replace","join","unformatNumber","className","style","_objectSpread","display","alignItems","position","htmlFor","left","zIndex","ref","height","textAlign","target","numbers","match","newV","handleChange","includes","length","ensureTwoDecimals","handleBlur","onFocus","currentTarget","select","onClick","right","top","transform","cursor","justifyContent","background","pointerEvents","TextInput","_ref2","_ref2$iconPosition","_ref2$disableIcon","_ref2$onIconClick","_label$title","_label$title2","alert","trim","format","wait","then","_inputRef$current","current","focus","_inputRef$current2","TextAreaInput","_ref3","textarea","_inputRef","_ref3$iconPosition","_ref3$disableIcon","_ref3$onIconClick","SelectInput","forwardRef","_ref4","selectRef","_ref4$datasource","datasource","_ref4$values","values","_ref4$display","_useState","useState","_useState2","_datasource","_setDataSource","useImperativeHandle","setDataSource","_dataSource","getDataSource","map","itm","idx","RenewalNoticeReport","_queryFn","_generateReport","_useContext","useContext","AuthContext","user","myAxios","generateTitle","format2","account","dateFormat","setTitle","titleRef","useRef","format2Ref","dateFormatRef","TypeRef","dateRef","policyTypeRef","accountRef","_accountRef","props","_useQuery","useQuery","queryKey","queryFn","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","get","headers","Authorization","accessToken","abrupt","sent","stop","apply","arguments","refetchOnWindowFocus","onSuccess","data","response","loadingAccount","isLoading","_Fragment","PageHelmet","Loading","flex","backgroundColor","border","width","flexDirection","rowGap","padding","boxShadow","rows","fontSize","onKeyDown","code","fontWeight","disabled","defaultValue","preventDefault","_format2Ref$current","_accountRef$current2","_dateFormatRef$curren","_dateRef$current2","key","_format2Ref$current2","_TypeRef$current2","_dateFormatRef$curren2","_dateRef$current3","_format2Ref$current3","_TypeRef$current3","_accountRef$current3","_dateFormatRef$curren3","Button","_callee2","_dateRef$current","_accountRef$current","_policyTypeRef$curren","_TypeRef$current","reportDetails","pdfBlob","pdfUrl","link","_context2","policy","post","responseType","Blob","URL","createObjectURL","isMobile","document","createElement","download","body","appendChild","click","removeChild","window","open","t0","console","error","color","variant","sx","duration","Promise","resolve","setTimeout"],"sourceRoot":""}