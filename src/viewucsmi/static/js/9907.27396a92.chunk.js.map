{"version":3,"file":"static/js/9907.27396a92.chunk.js","mappings":"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","sources":["components/Helmet.tsx","lib/validateDate.ts","components/UpwardFields.tsx","../node_modules/date-fns/esm/subYears/index.js","feautures/Admin/Reports/Production/ProductionReport.tsx","lib/wait.ts","../node_modules/date-fns/esm/addMonths/index.js","../node_modules/date-fns/esm/addYears/index.js","../node_modules/date-fns/esm/lastDayOfMonth/index.js","../node_modules/date-fns/esm/setDate/index.js"],"sourcesContent":["\r\nimport { Helmet } from \"react-helmet\";\r\n\r\nconst PageHelmet = ({ title = '' }: { title: string }) => {\r\n    const imgUrl = process.env.REACT_APP_IMAGE_URL;\r\n    const department = process.env.REACT_APP_DEPARTMENT\r\n    return (\r\n        <Helmet>\r\n            <title>{`${department} - ${title}`}</title>\r\n            <link rel=\"icon\" type=\"image/png\" href={`${imgUrl}/logo.png`} />\r\n        </Helmet>\r\n    );\r\n};\r\n\r\nexport default PageHelmet;","export function isValidDate(dateString:string) {\r\n    // Ensure the date is in the correct format: YYYY-MM-DD\r\n     const regex = /^\\d{4}-\\d{2}-\\d{2}$/;\r\n     if (!regex.test(dateString)) {\r\n         return false;\r\n     }\r\n \r\n     // Extract the year, month, and day\r\n     const [year, month, day] = dateString.split(\"-\");\r\n \r\n     // Ensure year is a valid four-digit number and within a reasonable range\r\n     const parsedYear = parseInt(year);\r\n     if (parsedYear < 1000 || parsedYear > 2040) {\r\n         return false;\r\n     }\r\n \r\n     const date = new Date(dateString);\r\n     // Ensure the created date matches the parts we input, adjusting for overflow\r\n     return date.getFullYear() === parsedYear &&\r\n            date.getMonth() + 1 === parseInt(month) &&\r\n            date.getDate() === parseInt(day);\r\n }","import {\n  HtmlHTMLAttributes,\n  InputHTMLAttributes,\n  useId,\n  ReactNode,\n  useState,\n  LegacyRef,\n  TextareaHTMLAttributes,\n  CSSProperties,\n  forwardRef,\n  useImperativeHandle,\n} from \"react\";\nimport \"../style/design.css\";\nimport { isValidDate } from \"../lib/validateDate\";\nimport { format } from \"date-fns\";\nimport { wait } from \"../lib/wait\";\n\ninterface TextInputProps {\n  input: InputHTMLAttributes<HTMLInputElement>;\n  label: HtmlHTMLAttributes<HTMLLabelElement>;\n  inputRef?: React.RefObject<HTMLInputElement>;\n  icon?: ReactNode; // New prop for the icon\n  iconPosition?: \"start\" | \"end\"; // New prop to choose icon position\n  onIconClick?: React.MouseEventHandler<HTMLDivElement> | undefined;\n  disableIcon?: boolean;\n  containerStyle?: CSSProperties;\n  containerClassName?: string;\n}\n\ninterface TextAreaPrps {\n  textarea: TextareaHTMLAttributes<HTMLTextAreaElement>;\n  label: HtmlHTMLAttributes<HTMLLabelElement>;\n  _inputRef: LegacyRef<HTMLTextAreaElement>;\n  icon?: ReactNode; // New prop for the icon\n  iconPosition?: \"start\" | \"end\"; // New prop to choose icon position\n  onIconClick?: React.MouseEventHandler<HTMLDivElement> | undefined;\n  disableIcon?: boolean;\n  containerStyle?: CSSProperties;\n  containerClassName?: string;\n}\n\ninterface TextFormatedInputProps extends TextInputProps {\n  onChange?: React.ChangeEventHandler<HTMLInputElement> | undefined;\n  onBlur?: React.ChangeEventHandler<HTMLInputElement> | undefined;\n}\nexport function TextFormatedInput({\n  input,\n  label,\n  inputRef,\n  icon,\n  iconPosition = \"end\", // Default position is 'end'\n  disableIcon = false,\n  onIconClick = (e) => {},\n  onChange = (e) => {},\n  onBlur = (e) => {},\n  containerStyle,\n  containerClassName,\n}: TextFormatedInputProps) {\n  // const [inputValue, setInputValue] = useState('');\n  const id = useId();\n\n  // Helper function to format numbers with commas\n  const formatNumber = (value: string) => {\n    if (!value) return value;\n\n    // Split the value into integer and decimal parts\n    const parts = value.split(\".\");\n\n    // Add commas to the integer part only\n    parts[0] = parts[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n\n    // Join the integer and decimal parts if decimal exists\n    return parts.join(\".\");\n  };\n\n  // Helper function to remove commas\n  const unformatNumber = (value: string) => {\n    return value.replace(/,/g, \"\");\n  };\n\n  // Function to ensure two decimal places\n  const ensureTwoDecimals = (value: string) => {\n    // If the value has no decimal part, append '.00'\n    if (!value.includes(\".\")) {\n      if (value === \"\") {\n        return \"0.00\";\n      } else {\n        return value + \".00\";\n      }\n    }\n\n    // If the value has one decimal place, append '0'\n    const parts = value.split(\".\");\n    if (parts[1].length === 1) {\n      return value + \"0\";\n    }\n\n    // If it already has two decimal places, return as is\n    return value;\n  };\n\n  const handleChange = (e: any) => {\n    let value = e.target.value;\n\n    // Remove commas for processing\n    value = unformatNumber(value);\n\n    // Allow only numbers, commas, and one decimal point\n    const regex = /^-?\\d+(,\\d{3})*(\\.\\d*)?$/;\n\n    // Remove commas for processing\n    value = unformatNumber(value);\n\n    // Check if the value is valid\n    if (value === \"\" || regex.test(value)) {\n      // Set the formatted value back in the input field\n      //setInputValue(formatNumber(value));\n      e.target.value = formatNumber(value);\n    } else {\n      const numbers = value.match(/\\d+/g);\n      if (numbers) {\n        const newV = numbers.join(\"\");\n        e.target.value = formatNumber(newV);\n      } else {\n        e.target.value = \"0\";\n      }\n    }\n  };\n\n  const handleBlur = (e: any) => {\n    let value = unformatNumber(e.target.value);\n\n    // Ensure the value has two decimal places\n    value = ensureTwoDecimals(value);\n\n    // Set the value with commas and .00 (if needed)\n    // setInputValue(formatNumber(value));\n    e.target.value = formatNumber(value);\n  };\n\n  return (\n    <div\n      className={containerClassName}\n      style={{\n        display: \"flex\",\n        alignItems: \"center\",\n        position: \"relative\",\n        ...containerStyle, // Enable absolute positioning for icon\n      }}\n    >\n      <label {...label} htmlFor={id}>\n        {label.title}\n      </label>\n      {icon && iconPosition === \"start\" && (\n        <div style={{ position: \"absolute\", left: \"8px\", zIndex: 1 }}>\n          {icon}\n        </div>\n      )}\n      <input\n        ref={inputRef}\n        id={id}\n        {...input}\n        type=\"text\"\n        style={{\n          height: \"100%\",\n          textAlign: \"right\",\n          ...input.style,\n        }}\n        onChange={(e) => {\n          handleChange(e);\n          onChange(e);\n        }}\n        onBlur={(e) => {\n          handleBlur(e);\n          onBlur(e);\n        }} // Add .00 on blur\n        onFocus={(e) => {\n          e.currentTarget.select();\n          if (input && input.onFocus) input.onFocus(e);\n        }}\n      />\n      {icon && iconPosition === \"end\" && (\n        <div\n          onClick={onIconClick}\n          style={{\n            position: \"absolute\",\n            right: \"2px\",\n            top: \"50%\",\n            transform: \"translateY(-50%)\",\n            zIndex: 1,\n            cursor: disableIcon ? \"none\" : \"pointer\",\n            display: \"flex\",\n            alignItems: \"center\",\n            justifyContent: \"center\",\n            background: \"white\",\n            pointerEvents: disableIcon ? \"none\" : \"auto\",\n          }}\n        >\n          {icon}\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport function TextInput({\n  input,\n  label,\n  inputRef,\n  icon,\n  iconPosition = \"end\", // Default position is 'end'\n  disableIcon = false,\n  containerStyle,\n  onIconClick = (e) => {},\n  containerClassName,\n}: TextInputProps) {\n  const id = useId();\n\n  return (\n    <div\n      className={containerClassName}\n      style={{\n        display: \"flex\",\n        alignItems: \"center\",\n        position: \"relative\",\n        ...containerStyle,\n      }}\n    >\n      <label {...label} htmlFor={id}>\n        {label.title}\n      </label>\n      {icon && iconPosition === \"start\" && (\n        <div style={{ position: \"absolute\", left: \"8px\", zIndex: 1 }}>\n          {icon}\n        </div>\n      )}\n      <input\n        ref={inputRef}\n        id={id}\n        {...input}\n        onBlur={(e) => {\n          if (input.type === \"month\") {\n            if (!isValidDate(`${e.currentTarget.value}-01`)) {\n              alert(\n                `Invalid ${label.title\n                  ?.replace(/:/g, \"\")\n                  .trim()}!, Resetting date.`\n              );\n              e.currentTarget.value = format(new Date(), \"yyyy-MM\");\n              wait(100).then(() => {\n                inputRef?.current?.focus();\n              });\n              return;\n            }\n          }\n          if (input.type === \"date\") {\n            if (!isValidDate(e.currentTarget.value)) {\n              alert(\n                `Invalid ${label.title\n                  ?.replace(/:/g, \"\")\n                  .trim()}!, Resetting date.`\n              );\n              e.currentTarget.value = format(new Date(), \"yyyy-MM-dd\");\n              wait(100).then(() => {\n                inputRef?.current?.focus();\n              });\n              return;\n            }\n          }\n          if (input && input.onBlur) input.onBlur(e);\n        }}\n        style={{\n          height: \"100%\",\n          ...input.style,\n        }}\n      />\n      {icon && iconPosition === \"end\" && (\n        <div\n          onClick={onIconClick}\n          style={{\n            position: \"absolute\",\n            right: \"2px\",\n            top: \"50%\",\n            transform: \"translateY(-50%)\",\n            zIndex: 1,\n            cursor: disableIcon ? \"none\" : \"pointer\",\n            display: \"flex\",\n            alignItems: \"center\",\n            justifyContent: \"center\",\n            background: \"white\",\n            pointerEvents: disableIcon ? \"none\" : \"auto\",\n          }}\n        >\n          {icon}\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport function TextAreaInput({\n  containerClassName,\n  textarea,\n  label,\n  _inputRef,\n  icon,\n  iconPosition = \"end\", // Default position is 'end'\n  disableIcon = false,\n  onIconClick = (e) => {},\n  containerStyle,\n}: TextAreaPrps) {\n  const id = useId();\n\n  return (\n    <div\n      className={containerClassName}\n      style={{\n        display: \"flex\",\n        alignItems: \"center\",\n        position: \"relative\",\n        ...containerStyle, // Enable absolute positioning for icon\n      }}\n    >\n      <label {...label} htmlFor={id}>\n        {label.title}\n      </label>\n      {icon && iconPosition === \"start\" && (\n        <div style={{ position: \"absolute\", left: \"8px\", zIndex: 1 }}>\n          {icon}\n        </div>\n      )}\n      <textarea\n        ref={_inputRef}\n        id={id}\n        {...textarea}\n        style={{\n          height: \"100%\",\n          ...textarea.style,\n        }}\n      />\n      {icon && iconPosition === \"end\" && (\n        <div\n          onClick={onIconClick}\n          style={{\n            position: \"absolute\",\n            right: \"2px\",\n            top: \"50%\",\n            transform: \"translateY(-50%)\",\n            zIndex: 1,\n            cursor: disableIcon ? \"none\" : \"pointer\",\n            display: \"flex\",\n            alignItems: \"center\",\n            justifyContent: \"center\",\n            background: \"white\",\n            pointerEvents: disableIcon ? \"none\" : \"auto\",\n          }}\n        >\n          {icon}\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport const SelectInput = forwardRef(\n  (\n    {\n      select,\n      label,\n      selectRef,\n      datasource = [],\n      values = \"\",\n      display = \"\",\n      containerStyle,\n      containerClassName,\n    }: {\n      selectRef?: React.RefObject<HTMLSelectElement>;\n      labelRef?: React.RefObject<HTMLLabelElement>;\n      select: InputHTMLAttributes<HTMLSelectElement>;\n      label: HtmlHTMLAttributes<HTMLLabelElement>;\n      datasource: Array<any>;\n      values: string;\n      display: string;\n      containerStyle?: React.CSSProperties | undefined;\n      containerClassName?: string;\n    },\n    ref: any\n  ) => {\n    const [_datasource, _setDataSource] = useState(datasource);\n    const id = useId();\n\n    useImperativeHandle(ref, () => ({\n      setDataSource: (_dataSource: any) => {\n        _setDataSource(_dataSource);\n      },\n      getDataSource: () => {\n        return _datasource;\n      },\n    }));\n\n    return (\n      <div\n        className={containerClassName}\n        style={{\n          display: \"flex\",\n          height: \"18px\",\n          alignItems: \"center\",\n          ...containerStyle,\n        }}\n      >\n        <label {...label} htmlFor={id}>\n          {label.title}\n        </label>\n        <select\n          {...select}\n          ref={selectRef}\n          className={`select ${select.className}`}\n          style={{\n            height: \"18px\",\n            ...select.style,\n          }}\n        >\n          {_datasource.map((itm, idx) => {\n            return (\n              <option key={idx} value={itm[values]}>\n                {itm[display]}\n              </option>\n            );\n          })}\n        </select>\n      </div>\n    );\n  }\n);\n\nexport function ButtonField({\n  buttonRetRef,\n  button,\n  tooltipText = \"\",\n  children,\n  disabled = false,\n}: {\n  buttonRetRef?: React.RefObject<HTMLButtonElement>;\n  button: HtmlHTMLAttributes<HTMLButtonElement>;\n  tooltipText: string;\n  children: React.ReactNode;\n  disabled?: boolean;\n}) {\n  return (\n    <div className=\"tooltip\">\n      <button\n        disabled={disabled}\n        {...button}\n        ref={buttonRetRef}\n        style={{\n          ...button.style,\n          cursor: \"pointer\",\n          background: !disabled ? \"transparent\" : \"#f1f1f1\",\n        }}\n        className=\"tooltip-button\"\n      >\n        {children}\n      </button>\n      {!disabled && <span className=\"tooltip-text\">{tooltipText}</span>}\n    </div>\n  );\n}\n","import toInteger from \"../_lib/toInteger/index.js\";\nimport addYears from \"../addYears/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name subYears\n * @category Year Helpers\n * @summary Subtract the specified number of years from the given date.\n *\n * @description\n * Subtract the specified number of years from the given date.\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of years to be subtracted. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the years subtracted\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Subtract 5 years from 1 September 2014:\n * const result = subYears(new Date(2014, 8, 1), 5)\n * //=> Tue Sep 01 2009 00:00:00\n */\nexport default function subYears(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var amount = toInteger(dirtyAmount);\n  return addYears(dirtyDate, -amount);\n}","import { useContext, useRef, useState } from \"react\";\nimport { AuthContext } from \"../../../../components/AuthContext\";\nimport {\n  SelectInput,\n  TextAreaInput,\n  TextInput,\n} from \"../../../../components/UpwardFields\";\nimport { format, lastDayOfMonth, subYears, setDate } from \"date-fns\";\nimport { Button } from \"@mui/material\";\nimport { useQuery } from \"react-query\";\nimport PageHelmet from \"../../../../components/Helmet\";\nimport { isMobile } from \"react-device-detect\";\n\nexport default function ProductionReport() {\n  const { user, myAxios } = useContext(AuthContext);\n  const [title, setTitle] = useState(\n    generateTitle({\n      format2: \"All\",\n      type: \"COM\",\n      account: \"All\",\n      dateFormat: \"Monthly\",\n      date: new Date(),\n    })\n  );\n\n  const [dateFormatState, setDateFormatState] = useState(\"Monthly\");\n\n  const { isLoading: loadingAccount, data: dataAccount } = useQuery({\n    queryKey: \"policy-account\",\n    queryFn: async () =>\n      await myAxios.get(`/reports/reports/policy-account`, {\n        headers: {\n          Authorization: `Bearer ${user?.accessToken}`,\n        },\n      }),\n    refetchOnWindowFocus: false,\n    onSuccess: (data) => {\n      const response = data as any;\n      console.log(response);\n    },\n  });\n\n  const titleRef = useRef<HTMLTextAreaElement>(null);\n  const format1Ref = useRef<HTMLSelectElement>(null);\n  const format2Ref = useRef<HTMLSelectElement>(null);\n  const dateFormatRef = useRef<HTMLSelectElement>(null);\n  const numberRef = useRef<HTMLInputElement>(null);\n  const TypeRef = useRef<HTMLSelectElement>(null);\n  const dateRef = useRef<HTMLInputElement>(null);\n  const policyTypeRef = useRef<HTMLSelectElement>(null);\n  const sortRef = useRef<HTMLSelectElement>(null);\n  const accountRef = useRef<HTMLSelectElement>(null);\n\n  function generateTitle(props: any) {\n    const newTitle: string = `UPWARD MANAGEMENT INSURANCE SERVICES ${\n      props.format2 === \"All\" ? \"\" : props.format2\n    }\\n${props.dateFormat} Production Report (${props.type} - ${\n      props.account\n    })\\nCut off Date: ${dateFormat(props.dateFormat, props.date)}`;\n    return newTitle;\n  }\n  function dateFormat(dateFormat: string, date: Date) {\n    if (dateFormat === \"Daily\") {\n      return format(date, \"MMMM d, yyyy\");\n    } else if (dateFormat === \"Monthly\") {\n      return format(date, \"MMMM yyyy\");\n    } else if (dateFormat === \"Yearly\") {\n      return format(date, \"yyyy\");\n    }\n  }\n\n  async function generateReport() {\n    let FDate = \"\";\n    let TDate = \"\";\n    let date = new Date(dateRef.current?.value as any);\n    const numYear = parseInt(numberRef.current?.value as any);\n\n    if (dateFormatRef.current?.value === \"Daily\") {\n      FDate = format(date, \"MM/dd/yyyy\");\n      TDate = format(date, \"MM/dd/yyyy\");\n    } else if (dateFormatRef.current?.value === \"Monthly\") {\n      FDate = format(date, \"MM/01/yyyy\");\n      TDate = format(lastDayOfMonth(date), \"MM/dd/yyyy\");\n    } else if (dateFormatRef.current?.value === \"Yearly\") {\n      const adjustedDate = subYears(date, numYear);\n      const firstDayOfMonth = setDate(adjustedDate, 1);\n      FDate = format(firstDayOfMonth, \"MM/dd/yyyy\");\n      TDate = format(lastDayOfMonth(date), \"MM/dd/yyyy\");\n    }\n    const reportDetails: any = {\n      FDate,\n      TDate,\n      cmbOrder: accountRef.current?.value,\n      cmbSubAcct: TypeRef.current?.value,\n      cmbType: `${format2Ref.current?.selectedIndex}`,\n      cmbpolicy: policyTypeRef.current?.value,\n      cmbSort: sortRef.current?.value,\n      title,\n      format: format1Ref.current?.selectedIndex,\n    };\n    try {\n      const response = await myAxios.post(\n        \"/reports/reports/production-report\",\n        reportDetails,\n        {\n          responseType: \"arraybuffer\",\n          headers: {\n            Authorization: `Bearer ${user?.accessToken}`,\n          },\n        }\n      );\n      const pdfBlob = new Blob([response.data], { type: \"application/pdf\" });\n      const pdfUrl = URL.createObjectURL(pdfBlob);\n\n      if (isMobile) {\n        // MOBILE: download directly\n        const link = document.createElement(\"a\");\n        link.href = pdfUrl;\n        link.download = \"report.pdf\";\n        document.body.appendChild(link);\n        link.click();\n        document.body.removeChild(link);\n        return;\n      } else {\n        // window.open(pdfUrl);\n        var newTab = window.open();\n        if (newTab) {\n          newTab.document.write(\"<!DOCTYPE html>\");\n          newTab.document.write(\n            \"<html><head><title>New Tab with iframe</title></head>\"\n          );\n          newTab.document.write(\n            '<body style=\"width:100vw;height:100vh;padding:0;margin:0;box-sizing:border-box;\">'\n          );\n          newTab.document.write(\n            `<iframe style=\"border:none;outline:none;padding:0;margin:0\" src=\"${pdfUrl}\" width=\"99%\" height=\"99%\"></iframe>`\n          );\n          newTab.document\n            .write(`<button id=\"excel\" style=\"width:auto;height:auto;padding:5px;border-radius:50%;background:transparent;position:absolute;top:37px;right:19px;font-size:11px;cursor:pointer;border:none;\">\n        <svg \n          xmlns=\"http://www.w3.org/2000/svg\" \n          width=\"20px\" \n          height=\"20px\" \n          viewBox=\"0 0 32 32\">\n          <title>Download Excel</title>\n          <path d=\"M28.781,4.405H18.651V2.018L2,4.588V27.115l16.651,2.868V26.445H28.781A1.162,1.162,0,0,0,30,25.349V5.5A1.162,1.162,0,0,0,28.781,4.405Zm.16,21.126H18.617L18.6,23.642h2.487v-2.2H18.581l-.012-1.3h2.518v-2.2H18.55l-.012-1.3h2.549v-2.2H18.53v-1.3h2.557v-2.2H18.53v-1.3h2.557v-2.2H18.53v-2H28.941Z\" style=\"fill:#20744a;fill-rule:evenodd\"/><rect x=\"22.487\" y=\"7.439\" width=\"4.323\" height=\"2.2\" style=\"fill:#20744a\"/><rect x=\"22.487\" y=\"10.94\" width=\"4.323\" height=\"2.2\" style=\"fill:#20744a\"/><rect x=\"22.487\" y=\"14.441\" width=\"4.323\" height=\"2.2\" style=\"fill:#20744a\"/><rect x=\"22.487\" y=\"17.942\" width=\"4.323\" height=\"2.2\" style=\"fill:#20744a\"/><rect x=\"22.487\" y=\"21.443\" width=\"4.323\" height=\"2.2\" style=\"fill:#20744a\"/><polygon points=\"6.347 10.673 8.493 10.55 9.842 14.259 11.436 10.397 13.582 10.274 10.976 15.54 13.582 20.819 11.313 20.666 9.781 16.642 8.248 20.513 6.163 20.329 8.585 15.666 6.347 10.673\" style=\"fill:#ffffff;fill-rule:evenodd\"/>\n          </svg>\n        </button>\n        `);\n          newTab.document.write(`\n          <script>\n            document.getElementById('excel').onclick = function() {\n             \n              fetch('${\n                process.env.REACT_APP_API_URL\n              }/reports/reports/production-report-to-excel', {\n              method: 'POST',\n              headers: {\n                'Content-Type': 'application/json',\n                'Authorization': 'Bearer ${user?.accessToken}',  \n              },\n              body:JSON.stringify(${JSON.stringify(reportDetails)})\n            })\n           .then(response => {\n              if (!response.ok) {\n                throw new Error('Network response was not ok');\n              }\n              // Return the response as a blob (binary data for file)\n              return response.blob();\n            })\n            .then(blob => {\n              const link = document.createElement('a');\n              link.href = URL.createObjectURL(blob);\n              link.download = 'report.xls';  // Set the desired file name\n              link.click();  // Simulate a click to start the download\n            })\n            .catch(error => {\n              alert('Error with POST request: ' + error);\n            });\n\n            };\n          </script>\n        `);\n          newTab.document.write(\"</body></html>\");\n          // Optional: Close the document stream after writing\n          newTab.document.close();\n        }\n      }\n    } catch (error) {\n      console.error(\"SERVER ERROR :\", error);\n    }\n  }\n  return (\n    <>\n      <PageHelmet title={\"Production Report\"} />\n      <div\n        style={{\n          display: \"flex\",\n          alignItems: \"center\",\n          justifyContent: \"center\",\n          flex: 1,\n          height: \"100vh\",\n          backgroundColor: \"#F1F1F1\",\n        }}\n      >\n        <div\n          style={{\n            border: \"1px solid #94a3b8\",\n            width: \"500px\",\n            height: \"450px\",\n            display: \"flex\",\n            flexDirection: \"column\",\n            rowGap: \"10px\",\n            padding: \"20px\",\n            boxShadow: \"0px 0px 5px -1px rgba(0,0,0,0.75)\",\n          }}\n        >\n          <TextAreaInput\n            label={{\n              title: \" \",\n              style: {\n                display: \"none\",\n              },\n            }}\n            textarea={{\n              rows: 6,\n              style: { flex: 1, fontSize: \"14px\" },\n              value: title,\n              onKeyDown: (e) => {\n                if (e.code === \"NumpadEnter\" || e.code === \"Enter\") {\n                  //  refDate.current?.focus()\n                }\n              },\n              onChange: (e) => {\n                setTitle(e.target.value);\n              },\n            }}\n            _inputRef={titleRef}\n          />\n          <div style={{ display: \"flex\", columnGap: \"2px\", width: \"100%\" }}>\n            <SelectInput\n              containerStyle={{\n                flex: 1,\n              }}\n              label={{\n                title: \"Format : \",\n                style: {\n                  fontSize: \"12px\",\n                  fontWeight: \"bold\",\n                  width: \"90px\",\n                },\n              }}\n              selectRef={format1Ref}\n              select={{\n                disabled: false,\n                style: { width: \"100%\", height: \"22px\" },\n                defaultValue: \"Full\",\n                onKeyDown: (e) => {\n                  if (e.code === \"NumpadEnter\" || e.code === \"Enter\") {\n                    e.preventDefault();\n                    // refInvoice.current?.focus()\n                  }\n                },\n              }}\n              datasource={[{ key: \"Full\" }, { key: \"Summary\" }]}\n              values={\"key\"}\n              display={\"key\"}\n            />\n            <SelectInput\n              label={{\n                title: \"Format : \",\n                style: {\n                  display: \"none\",\n                },\n              }}\n              selectRef={format2Ref}\n              select={{\n                disabled: false,\n                style: { width: \"80px\", height: \"22px\" },\n                defaultValue: \"All\",\n                onKeyDown: (e) => {\n                  if (e.code === \"NumpadEnter\" || e.code === \"Enter\") {\n                    e.preventDefault();\n                    // refInvoice.current?.focus()\n                  }\n                },\n                onChange: (e) => {\n                  setTitle(\n                    generateTitle({\n                      format2: e.target.value,\n                      type: TypeRef.current?.value,\n                      account: accountRef.current?.value,\n                      dateFormat: dateFormatRef.current?.value,\n                      date: new Date(dateRef.current?.value as any),\n                    })\n                  );\n                },\n              }}\n              datasource={[{ key: \"All\" }, { key: \"Financed\" }]}\n              values={\"key\"}\n              display={\"key\"}\n            />\n          </div>\n          <div style={{ display: \"flex\", columnGap: \"2px\", width: \"100%\" }}>\n            <SelectInput\n              containerStyle={{\n                flex: 1,\n              }}\n              label={{\n                title: \"Report : \",\n                style: {\n                  fontSize: \"12px\",\n                  fontWeight: \"bold\",\n                  width: \"90px\",\n                },\n              }}\n              selectRef={dateFormatRef}\n              select={{\n                disabled: false,\n                style: { width: \"100%\", height: \"22px\" },\n                defaultValue: dateFormatState,\n                onKeyDown: (e) => {\n                  if (e.code === \"NumpadEnter\" || e.code === \"Enter\") {\n                    e.preventDefault();\n                    // refInvoice.current?.focus()\n                  }\n                },\n                onChange: (e) => {\n                  setDateFormatState(e.currentTarget.value);\n                  if (e.target.value === \"Yearly\") {\n                    if (numberRef.current) numberRef.current.disabled = false;\n                  } else {\n                    if (numberRef.current) numberRef.current.disabled = true;\n                  }\n                  console.log(dateRef.current?.value);\n\n                  setTitle(\n                    generateTitle({\n                      format2: format2Ref.current?.value,\n                      type: e.target.value,\n                      account: accountRef.current?.value,\n                      dateFormat: dateFormatRef.current?.value,\n                      date: new Date(dateRef.current?.value as any),\n                    })\n                  );\n                },\n              }}\n              datasource={[\n                { key: \"Daily\" },\n                { key: \"Monthly\" },\n                { key: \"Yearly\" },\n              ]}\n              values={\"key\"}\n              display={\"key\"}\n            />\n            <TextInput\n              label={{\n                title: \" \",\n                style: {\n                  display: \"none\",\n                },\n              }}\n              input={{\n                disabled: true,\n                type: \"number\",\n                defaultValue: 0,\n                style: { width: \"80px\" },\n                onKeyDown: (e) => {\n                  if (e.code === \"NumpadEnter\" || e.code === \"Enter\") {\n                  }\n                },\n              }}\n              inputRef={numberRef}\n            />\n          </div>\n          <SelectInput\n            label={{\n              title: \"Type : \",\n              style: {\n                fontSize: \"12px\",\n                fontWeight: \"bold\",\n                width: \"90px\",\n              },\n            }}\n            containerStyle={{\n              flex: 1,\n              height: \"22px\",\n            }}\n            selectRef={TypeRef}\n            select={{\n              disabled: false,\n              style: { width: \"100%\", height: \"22px\" },\n              defaultValue: \"COM\",\n              onKeyDown: (e) => {\n                if (e.code === \"NumpadEnter\" || e.code === \"Enter\") {\n                  e.preventDefault();\n                  // refInvoice.current?.focus()\n                }\n              },\n              onChange: (e) => {\n                setTitle(\n                  generateTitle({\n                    format2: format2Ref.current?.value,\n                    type: e.target.value,\n                    account: accountRef.current?.value,\n                    dateFormat: dateFormatRef.current?.value,\n                    date: new Date(dateRef.current?.value as any),\n                  })\n                );\n              },\n            }}\n            datasource={[\n              { key: \"Bonds\" },\n              { key: \"CGL\" },\n              { key: \"COM\" },\n              { key: \"FIRE\" },\n              { key: \"MAR\" },\n              { key: \"MSPR\" },\n              { key: \"PA\" },\n              { key: \"TPL\" },\n            ]}\n            values={\"key\"}\n            display={\"key\"}\n          />\n          <TextInput\n            containerStyle={{\n              flex: 1,\n            }}\n            label={{\n              title: \"Date : \",\n              style: {\n                fontSize: \"12px\",\n                fontWeight: \"bold\",\n                width: \"90px\",\n              },\n            }}\n            input={{\n              type: \"date\",\n              defaultValue: format(new Date(), \"yyyy-MM-dd\"),\n              style: { width: \"100%\", height: \"22px\" },\n              onKeyDown: (e) => {\n                if (e.code === \"NumpadEnter\" || e.code === \"Enter\") {\n                }\n              },\n              onChange: (e) => {\n                setTitle(\n                  generateTitle({\n                    format2: format2Ref.current?.value,\n                    type: TypeRef.current?.value,\n                    account: accountRef.current?.value,\n                    dateFormat: dateFormatRef.current?.value,\n                    date: new Date(e.target.value as any),\n                  })\n                );\n              },\n            }}\n            inputRef={dateRef}\n          />\n          <SelectInput\n            label={{\n              title: \"Policy Type : \",\n              style: {\n                fontSize: \"12px\",\n                fontWeight: \"bold\",\n                width: \"90px\",\n              },\n            }}\n            containerStyle={{\n              flex: 1,\n              height: \"22px\",\n            }}\n            selectRef={policyTypeRef}\n            select={{\n              disabled: false,\n              style: { width: \"100%\", height: \"22px\" },\n              defaultValue: \"Regular\",\n              onKeyDown: (e) => {\n                if (e.code === \"NumpadEnter\" || e.code === \"Enter\") {\n                  e.preventDefault();\n                  // refInvoice.current?.focus()\n                }\n              },\n            }}\n            datasource={[{ key: \"Regular\" }, { key: \"Temporary\" }]}\n            values={\"key\"}\n            display={\"key\"}\n          />\n          <div\n            style={{\n              flex: 1,\n              border: \"1px solid #94a3b8\",\n              padding: \"10px\",\n              display: \"flex\",\n              flexDirection: \"column\",\n              rowGap: \"10px\",\n            }}\n          >\n            <SelectInput\n              label={{\n                title: \"Sort : \",\n                style: {\n                  fontSize: \"12px\",\n                  fontWeight: \"bold\",\n                  width: \"90px\",\n                },\n              }}\n              containerStyle={{\n                flex: 1,\n                height: \"22px\",\n              }}\n              selectRef={sortRef}\n              select={{\n                disabled: false,\n                style: { width: \"100%\", height: \"22px\" },\n                defaultValue: \"Date Issued\",\n                onKeyDown: (e) => {\n                  if (e.code === \"NumpadEnter\" || e.code === \"Enter\") {\n                    e.preventDefault();\n                    // refInvoice.current?.focus()\n                  }\n                },\n              }}\n              datasource={[\n                { key: \"Date Issued\" },\n                { key: \"Policy No#\" },\n                { key: \"Date From\" },\n              ]}\n              values={\"key\"}\n              display={\"key\"}\n            />\n            {loadingAccount ? (\n              <div>Loading...</div>\n            ) : (\n              <SelectInput\n                label={{\n                  title: \"Account : \",\n                  style: {\n                    fontSize: \"12px\",\n                    fontWeight: \"bold\",\n                    width: \"90px\",\n                  },\n                }}\n                containerStyle={{\n                  flex: 1,\n                  height: \"22px\",\n                }}\n                selectRef={accountRef}\n                select={{\n                  disabled: false,\n                  style: { width: \"100%\", height: \"22px\" },\n                  defaultValue: \"All\",\n                  onKeyDown: (e) => {\n                    if (e.code === \"NumpadEnter\" || e.code === \"Enter\") {\n                      e.preventDefault();\n                      // refInvoice.current?.focus()\n                    }\n                  },\n                  onChange: (e) => {\n                    setTitle(\n                      generateTitle({\n                        format2: format2Ref.current?.value,\n                        type: TypeRef.current?.value,\n                        account: e.target.value,\n                        dateFormat: dateFormatRef.current?.value,\n                        date: new Date(dateRef.current?.value as any),\n                      })\n                    );\n                  },\n                }}\n                datasource={dataAccount?.data.data}\n                values={\"Account\"}\n                display={\"Account\"}\n              />\n            )}\n          </div>\n          <Button\n            onClick={generateReport}\n            color=\"success\"\n            variant=\"contained\"\n            sx={{ height: \"22px\", fontSize: \"12px\" }}\n          >\n            Generate Report\n          </Button>\n        </div>\n      </div>\n    </>\n  );\n}\n","export function wait(duration:number){\n    return new Promise(resolve => setTimeout(resolve,duration))\n}","import toInteger from \"../_lib/toInteger/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name addMonths\n * @category Month Helpers\n * @summary Add the specified number of months to the given date.\n *\n * @description\n * Add the specified number of months to the given date.\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of months to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the months added\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Add 5 months to 1 September 2014:\n * const result = addMonths(new Date(2014, 8, 1), 5)\n * //=> Sun Feb 01 2015 00:00:00\n */\nexport default function addMonths(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var date = toDate(dirtyDate);\n  var amount = toInteger(dirtyAmount);\n  if (isNaN(amount)) {\n    return new Date(NaN);\n  }\n  if (!amount) {\n    // If 0 months, no-op to avoid changing times in the hour before end of DST\n    return date;\n  }\n  var dayOfMonth = date.getDate();\n\n  // The JS Date object supports date math by accepting out-of-bounds values for\n  // month, day, etc. For example, new Date(2020, 0, 0) returns 31 Dec 2019 and\n  // new Date(2020, 13, 1) returns 1 Feb 2021.  This is *almost* the behavior we\n  // want except that dates will wrap around the end of a month, meaning that\n  // new Date(2020, 13, 31) will return 3 Mar 2021 not 28 Feb 2021 as desired. So\n  // we'll default to the end of the desired month by adding 1 to the desired\n  // month and using a date of 0 to back up one day to the end of the desired\n  // month.\n  var endOfDesiredMonth = new Date(date.getTime());\n  endOfDesiredMonth.setMonth(date.getMonth() + amount + 1, 0);\n  var daysInMonth = endOfDesiredMonth.getDate();\n  if (dayOfMonth >= daysInMonth) {\n    // If we're already at the end of the month, then this is the correct date\n    // and we're done.\n    return endOfDesiredMonth;\n  } else {\n    // Otherwise, we now know that setting the original day-of-month value won't\n    // cause an overflow, so set the desired day-of-month. Note that we can't\n    // just set the date of `endOfDesiredMonth` because that object may have had\n    // its time changed in the unusual case where where a DST transition was on\n    // the last day of the month and its local time was in the hour skipped or\n    // repeated next to a DST transition.  So we use `date` instead which is\n    // guaranteed to still have the original time.\n    date.setFullYear(endOfDesiredMonth.getFullYear(), endOfDesiredMonth.getMonth(), dayOfMonth);\n    return date;\n  }\n}","import toInteger from \"../_lib/toInteger/index.js\";\nimport addMonths from \"../addMonths/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name addYears\n * @category Year Helpers\n * @summary Add the specified number of years to the given date.\n *\n * @description\n * Add the specified number of years to the given date.\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of years to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the years added\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Add 5 years to 1 September 2014:\n * const result = addYears(new Date(2014, 8, 1), 5)\n * //=> Sun Sep 01 2019 00:00:00\n */\nexport default function addYears(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var amount = toInteger(dirtyAmount);\n  return addMonths(dirtyDate, amount * 12);\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name lastDayOfMonth\n * @category Month Helpers\n * @summary Return the last day of a month for the given date.\n *\n * @description\n * Return the last day of a month for the given date.\n * The result will be in the local timezone.\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the last day of a month\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The last day of a month for 2 September 2014 11:55:00:\n * const result = lastDayOfMonth(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Tue Sep 30 2014 00:00:00\n */\nexport default function lastDayOfMonth(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var month = date.getMonth();\n  date.setFullYear(date.getFullYear(), month + 1, 0);\n  date.setHours(0, 0, 0, 0);\n  return date;\n}","import toInteger from \"../_lib/toInteger/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name setDate\n * @category Day Helpers\n * @summary Set the day of the month to the given date.\n *\n * @description\n * Set the day of the month to the given date.\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} dayOfMonth - the day of the month of the new date\n * @returns {Date} the new date with the day of the month set\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Set the 30th day of the month to 1 September 2014:\n * const result = setDate(new Date(2014, 8, 1), 30)\n * //=> Tue Sep 30 2014 00:00:00\n */\nexport default function setDate(dirtyDate, dirtyDayOfMonth) {\n  requiredArgs(2, arguments);\n  var date = toDate(dirtyDate);\n  var dayOfMonth = toInteger(dirtyDayOfMonth);\n  date.setDate(dayOfMonth);\n  return date;\n}"],"names":["_ref","_ref$title","title","_jsxs","Helmet","children","_jsx","concat","process","rel","type","href","isValidDate","dateString","test","_dateString$split","split","_dateString$split2","_slicedToArray","year","month","day","parsedYear","parseInt","date","Date","getFullYear","getMonth","getDate","TextFormatedInput","input","label","inputRef","icon","_ref$iconPosition","iconPosition","_ref$disableIcon","disableIcon","_ref$onIconClick","onIconClick","e","_ref$onChange","onChange","_ref$onBlur","onBlur","containerStyle","containerClassName","id","useId","formatNumber","value","parts","replace","join","unformatNumber","className","style","_objectSpread","display","alignItems","position","htmlFor","left","zIndex","ref","height","textAlign","target","numbers","match","newV","handleChange","includes","length","ensureTwoDecimals","handleBlur","onFocus","currentTarget","select","onClick","right","top","transform","cursor","justifyContent","background","pointerEvents","TextInput","_ref2","_ref2$iconPosition","_ref2$disableIcon","_ref2$onIconClick","_label$title","_label$title2","alert","trim","format","wait","then","_inputRef$current","current","focus","_inputRef$current2","TextAreaInput","_ref3","textarea","_inputRef","_ref3$iconPosition","_ref3$disableIcon","_ref3$onIconClick","SelectInput","forwardRef","_ref4","selectRef","_ref4$datasource","datasource","_ref4$values","values","_ref4$display","_useState","useState","_useState2","_datasource","_setDataSource","useImperativeHandle","setDataSource","_dataSource","getDataSource","map","itm","idx","subYears","dirtyDate","dirtyAmount","requiredArgs","arguments","amount","toInteger","addYears","ProductionReport","_queryFn","_generateReport","_useContext","useContext","AuthContext","user","myAxios","generateTitle","format2","account","dateFormat","setTitle","_useState3","_useState4","dateFormatState","setDateFormatState","_useQuery","useQuery","queryKey","queryFn","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","get","headers","Authorization","accessToken","abrupt","sent","stop","apply","refetchOnWindowFocus","onSuccess","data","response","console","log","loadingAccount","isLoading","dataAccount","titleRef","useRef","format1Ref","format2Ref","dateFormatRef","numberRef","TypeRef","dateRef","policyTypeRef","sortRef","accountRef","props","newTitle","_Fragment","PageHelmet","flex","backgroundColor","border","width","flexDirection","rowGap","padding","boxShadow","rows","fontSize","onKeyDown","code","columnGap","fontWeight","disabled","defaultValue","preventDefault","key","_TypeRef$current2","_accountRef$current2","_dateFormatRef$curren4","_dateRef$current2","_dateRef$current3","_format2Ref$current2","_accountRef$current3","_dateFormatRef$curren5","_dateRef$current4","_format2Ref$current3","_accountRef$current4","_dateFormatRef$curren6","_dateRef$current5","_format2Ref$current4","_TypeRef$current3","_accountRef$current5","_dateFormatRef$curren7","_format2Ref$current5","_TypeRef$current4","_dateFormatRef$curren8","_dateRef$current6","Button","_callee2","_dateRef$current","_numberRef$current","_dateFormatRef$curren","_dateFormatRef$curren2","_dateFormatRef$curren3","_accountRef$current","_TypeRef$current","_format2Ref$current","_policyTypeRef$curren","_sortRef$current","_format1Ref$current","FDate","TDate","numYear","adjustedDate","firstDayOfMonth","reportDetails","pdfBlob","pdfUrl","link","newTab","_context2","lastDayOfMonth","setDate","cmbOrder","cmbSubAcct","cmbType","selectedIndex","cmbpolicy","cmbSort","post","responseType","Blob","URL","createObjectURL","isMobile","document","createElement","download","body","appendChild","click","removeChild","window","open","write","JSON","stringify","close","t0","error","color","variant","sx","duration","Promise","resolve","setTimeout","addMonths","toDate","isNaN","NaN","dayOfMonth","endOfDesiredMonth","getTime","setMonth","setFullYear","setHours","dirtyDayOfMonth"],"sourceRoot":""}