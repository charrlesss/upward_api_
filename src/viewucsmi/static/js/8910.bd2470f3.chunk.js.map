{"version":3,"file":"static/js/8910.bd2470f3.chunk.js","mappings":"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","sources":["components/DataGridViewReact.tsx","../node_modules/@babel/runtime/helpers/esm/objectDestructuringEmpty.js","lib/validateDate.ts","components/UpwardFields.tsx","lib/executeQueryFromClient.ts","lib/wait.ts"],"sourcesContent":["import {\r\n  useState,\r\n  useRef,\r\n  forwardRef,\r\n  useEffect,\r\n  useImperativeHandle,\r\n  useContext,\r\n} from \"react\";\r\nimport useExecuteQueryFromClient from \"../lib/executeQueryFromClient\";\r\nimport SearchIcon from \"@mui/icons-material/Search\";\r\nimport { TextInput } from \"./UpwardFields\";\r\nimport { wait } from \"../lib/wait\";\r\nimport CloseIcon from \"@mui/icons-material/Close\";\r\nimport ReactDOMServer from \"react-dom/server\";\r\nimport { AuthContext } from \"./AuthContext\";\r\nimport { Loading } from \"./Loading\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"../style/datagridview.css\";\r\n\r\nexport const DataGridViewReact = forwardRef(\r\n  (\r\n    {\r\n      columns,\r\n      rows = [],\r\n      height = \"400px\",\r\n      getSelectedItem,\r\n      onKeyDown,\r\n      disbaleTable = false,\r\n      isTableSelectable: _isTableSelectable = true,\r\n      containerStyle,\r\n      focusElementOnMaxTop,\r\n      ActionComponent = () => <></>,\r\n      showSequence = false,\r\n    }: any,\r\n    ref\r\n  ) => {\r\n    const parentElementRef = useRef<any>(null);\r\n    const actionModalRef = useRef<any>(null);\r\n    const checkboxRef = useRef([]);\r\n    const tbodyRef = useRef<HTMLTableSectionElement>(null);\r\n    const [data, setData] = useState([]);\r\n    const [column, setColumn] = useState([]);\r\n    const [selectedRow, setSelectedRow] = useState<any>(0);\r\n    const [selectedRowIndex, setSelectedRowIndex] = useState<any>(null);\r\n    const totalRowWidth = column.reduce((a: any, b: any) => a + b.width, 0);\r\n    const [isTableSelectable, setIsTableSelectable] =\r\n      useState(_isTableSelectable);\r\n\r\n    const [columnHeader, setColumnHeader] = useState(\r\n      columns.filter((itm: any) => !itm.hide)\r\n    );\r\n    const [hoveredColumn, setHoveredColumn] = useState(null);\r\n\r\n    useEffect(() => {\r\n      if (columns.length > 0) {\r\n        setColumn(columns.filter((itm: any) => !itm.hide));\r\n      }\r\n    }, [columns]);\r\n\r\n    useImperativeHandle(ref, () => ({\r\n      checkNoIsExist: (checkNo: string) => {\r\n        return data.some((subArray: any) => subArray[2] === checkNo);\r\n      },\r\n      selectedRow: () => selectedRow,\r\n      getData: () => {\r\n        const newData = [...data];\r\n        return newData;\r\n      },\r\n      setData: (newData: any) => {\r\n        setData(newData);\r\n      },\r\n      getColumns: () => {\r\n        return columns;\r\n      },\r\n      resetTable: () => {\r\n        setData([]);\r\n        setSelectedRow(0);\r\n        setSelectedRowIndex(null);\r\n      },\r\n      getSelectedRow: () => {\r\n        return selectedRowIndex;\r\n      },\r\n      setSelectedRow: (value: any) => {\r\n        return setSelectedRowIndex(value);\r\n      },\r\n      resetCheckBox: () => {\r\n        return handleResetCheckBox();\r\n      },\r\n      _setSelectedRow: (value: any) => {\r\n        return setSelectedRow(value);\r\n      },\r\n      setIsTableSelectable: (param: boolean) => {\r\n        setIsTableSelectable(param);\r\n      },\r\n      setDataFormated: (newData: any) => {\r\n        setData(\r\n          newData.map((itm: any) => {\r\n            return columns.map((col: any) => itm[col.key]);\r\n          })\r\n        );\r\n      },\r\n      getDataFormatted: () => {\r\n        const newData = [...data];\r\n        const newDataFormatted = newData.map((itm: any) => {\r\n          let newItm = {\r\n            Check_No: itm[0],\r\n            Check_Date: itm[1],\r\n            Check_Amnt: itm[2],\r\n            BankName: itm[3],\r\n            Branch: itm[4],\r\n            Check_Remarks: itm[5],\r\n            Deposit_Slip: itm[6],\r\n            DateDeposit: itm[7],\r\n            OR_No: itm[8],\r\n            BankCode: itm[9],\r\n          };\r\n          return newItm;\r\n        });\r\n\r\n        return newDataFormatted;\r\n      },\r\n      getElementBody: () => tbodyRef.current,\r\n      getParentElement: () => parentElementRef.current,\r\n    }));\r\n    const handleResetCheckBox = () => {\r\n      checkboxRef.current.forEach((checkbox: HTMLInputElement, idx: any) => {\r\n        if (checkbox) checkbox.checked = false;\r\n      });\r\n    };\r\n    const handleResetCheckBoxByIndex = (_idx: any) => {\r\n      checkboxRef.current.forEach((checkbox: HTMLInputElement, idx: any) => {\r\n        if (_idx === idx) {\r\n          return;\r\n        } else {\r\n          if (checkbox) checkbox.checked = false;\r\n        }\r\n      });\r\n    };\r\n    const handleRightClick = (event: any, idx: number) => {\r\n      event.preventDefault(); // Prevent the default context menu from appearing\r\n      if (idx === selectedRowIndex) {\r\n        actionModalRef.current.showModal();\r\n      }\r\n    };\r\n    const startResize = (index: any, e: any) => {\r\n      e.preventDefault();\r\n      e.stopPropagation();\r\n\r\n      const startX = e.clientX;\r\n      const startWidth = columnHeader[index].width;\r\n\r\n      const doDrag = (moveEvent: any) => {\r\n        const newWidth = startWidth + (moveEvent.clientX - startX);\r\n        const updatedColumns = [...columnHeader];\r\n        updatedColumns[index].width = newWidth > 50 ? newWidth : 50; // Set minimum column width\r\n        setColumnHeader(updatedColumns);\r\n      };\r\n\r\n      const stopDrag = () => {\r\n        document.removeEventListener(\"mousemove\", doDrag);\r\n        document.removeEventListener(\"mouseup\", stopDrag);\r\n      };\r\n\r\n      document.addEventListener(\"mousemove\", doDrag);\r\n      document.addEventListener(\"mouseup\", stopDrag);\r\n    };\r\n    const handleMouseEnter = (index: any) => {\r\n      setHoveredColumn(index); // Set the hovered column index\r\n    };\r\n    const handleMouseLeave = () => {\r\n      setHoveredColumn(null); // Reset hovered column index\r\n    };\r\n\r\n    return (\r\n      <>\r\n        <ActionModal\r\n          ref={actionModalRef}\r\n          Component={\r\n            <ActionComponent\r\n              selectedRowIndex={selectedRowIndex}\r\n              closeModal={() => actionModalRef.current.closeDelay()}\r\n              rowItm={data[selectedRowIndex]}\r\n            />\r\n          }\r\n        />\r\n        <div\r\n          className=\"table-datagridview-main\"\r\n          ref={parentElementRef}\r\n          style={{\r\n            width: \"100%\",\r\n            height,\r\n            overflow: \"auto\",\r\n            position: \"relative\",\r\n            pointerEvents: disbaleTable ? \"none\" : \"auto\",\r\n            border: disbaleTable ? \"2px solid #8c8f8e\" : \"2px solid #c0c0c0\",\r\n            boxShadow: `inset -2px -2px 0 #ffffff, \r\n                        inset 2px 2px 0 #808080`,\r\n            ...containerStyle,\r\n            background: \"#dcdcdc\",\r\n          }}\r\n        >\r\n          <div\r\n            style={{\r\n              position: \"absolute\",\r\n              width: `${totalRowWidth}px`,\r\n              height: \"auto\",\r\n            }}\r\n          >\r\n            <table\r\n              id=\"upward-cutom-table\"\r\n              style={{\r\n                borderCollapse: \"collapse\",\r\n                width: \"100%\",\r\n                position: \"relative\",\r\n                background: \"#dcdcdc\",\r\n              }}\r\n            >\r\n              <thead>\r\n                <tr>\r\n                  <th\r\n                    style={{\r\n                      width: \"30px\",\r\n                      border: \"none\",\r\n                      position: \"sticky\",\r\n                      top: 0,\r\n                      zIndex: 1,\r\n                      background: \"#f0f0f0\",\r\n                    }}\r\n                  ></th>\r\n                  {showSequence && (\r\n                    <th\r\n                      style={{\r\n                        width: \"50px\",\r\n                        borderRight: \"1px solid #e2e8f0\",\r\n                        position: \"sticky\",\r\n                        top: 0,\r\n                        zIndex: 1,\r\n                        background: \"#f0f0f0\",\r\n                        fontSize: \"12px\",\r\n                        padding: \"0px 5px\",\r\n                        textAlign: \"center\",\r\n                      }}\r\n                    >\r\n                      SEQ\r\n                    </th>\r\n                  )}\r\n                  {column.map((colItm: any, idx: number) => {\r\n                    return (\r\n                      <th\r\n                        key={idx}\r\n                        style={{\r\n                          width: colItm.width,\r\n                          borderRight: \"1px solid #e2e8f0\",\r\n                          position: \"sticky\",\r\n                          top: 0,\r\n                          zIndex: 1,\r\n                          background: \"#f0f0f0\",\r\n                          fontSize: \"12px\",\r\n                          padding: \"0px 5px\",\r\n                          textAlign:\r\n                            colItm.type === \"number\" ? \"center\" : \"left\",\r\n                        }}\r\n                      >\r\n                        <div\r\n                          key={idx}\r\n                          className={` ${\r\n                            hoveredColumn === idx ? `highlight-column` : \"\"\r\n                          }`} // Add the class if hovered\r\n                          style={{ width: colItm.width, height: \"20px\" }}\r\n                        >\r\n                          {colItm.label}\r\n\r\n                          <div\r\n                            className=\"resize-handle\"\r\n                            onMouseDown={(e) => startResize(idx, e)}\r\n                            onMouseEnter={(e) => {\r\n                              e.preventDefault();\r\n                              handleMouseEnter(idx);\r\n                            }} // On hover\r\n                            onMouseLeave={(e) => {\r\n                              e.preventDefault();\r\n                              handleMouseLeave();\r\n                            }} // On mouse leave\r\n                          />\r\n                        </div>\r\n                      </th>\r\n                    );\r\n                  })}\r\n                </tr>\r\n              </thead>\r\n              <tbody ref={tbodyRef}>\r\n                {data?.map((rowItm: any, rowIdx: number) => {\r\n                  return (\r\n                    <RowComponent\r\n                      key={rowIdx}\r\n                      rowIdx={rowIdx}\r\n                      rowItm={rowItm}\r\n                      selectedRowIndex={selectedRowIndex}\r\n                      selectedRow={selectedRow}\r\n                      isTableSelectable={isTableSelectable}\r\n                      setSelectedRowIndex={setSelectedRowIndex}\r\n                      getSelectedItem={getSelectedItem}\r\n                      setSelectedRow={setSelectedRow}\r\n                      column={column}\r\n                      onKeyDown={onKeyDown}\r\n                      focusElementOnMaxTop={focusElementOnMaxTop}\r\n                      data={data}\r\n                      parentElementRef={parentElementRef}\r\n                      checkboxRef={checkboxRef}\r\n                      handleResetCheckBox={handleResetCheckBox}\r\n                      handleResetCheckBoxByIndex={handleResetCheckBoxByIndex}\r\n                      handleRightClick={handleRightClick}\r\n                      showSequence={showSequence}\r\n                    />\r\n                  );\r\n                })}\r\n              </tbody>\r\n            </table>\r\n            <style>\r\n              {`\r\n             #upward-cutom-table tr td{\r\n               border-right:1px solid #f1f5f9 !important;\r\n             }\r\n          \r\n              #upward-cutom-table tr:nth-child(odd) td {\r\n                  background-color: #ffffff !important;\r\n              }\r\n              #upward-cutom-table tr:nth-child(even) td {\r\n                  background-color: #f5f5f5 !important;\r\n              }\r\n              #upward-cutom-table tr.selected td {\r\n                  background-color: #0076d7 !important;\r\n                  color: #ffffff !important;\r\n                  border-right:1px solid white !important;\r\n                border-bottom:1px solid white !important;\r\n\r\n              }\r\n              \r\n               #upward-cutom-table tr.selected td input {\r\n                  color: #ffffff !important;\r\n              }\r\n\r\n              .resize-handle {\r\n                    position: absolute;\r\n                    right: 0;\r\n                    top: 0;\r\n                    width: 5px;\r\n                    height: 100%;\r\n                    cursor: col-resize;\r\n                    background-color: transparent;\r\n                  }\r\n\r\n                  .resize-handle:hover {\r\n                    background-color: #101111;\r\n                  }\r\n\r\n                  .highlight-column {\r\n                    border-right: 2px solid #007bff !important;\r\n                  }\r\n  \r\n              `}\r\n            </style>\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n);\r\n\r\nconst RowComponent = forwardRef(\r\n  (\r\n    {\r\n      rowIdx,\r\n      rowItm,\r\n      selectedRowIndex,\r\n      selectedRow,\r\n      isTableSelectable,\r\n      setSelectedRowIndex,\r\n      getSelectedItem,\r\n      setSelectedRow,\r\n      column,\r\n      onKeyDown,\r\n      focusElementOnMaxTop,\r\n      data,\r\n      parentElementRef,\r\n      checkboxRef,\r\n      handleResetCheckBox,\r\n      handleResetCheckBoxByIndex,\r\n      handleRightClick,\r\n      showSequence,\r\n    }: any,\r\n    ref\r\n  ) => {\r\n    return (\r\n      <tr\r\n        data-index={rowIdx}\r\n        key={rowIdx}\r\n        className={`row ${\r\n          selectedRow === rowIdx || selectedRowIndex === rowIdx\r\n            ? \"selected\"\r\n            : \"\"\r\n        }`}\r\n      >\r\n        <td\r\n          style={{\r\n            position: \"relative\",\r\n            border: \"none\",\r\n            cursor: \"pointer\",\r\n            background: selectedRow === rowIdx ? \"#0076d\" : \"\",\r\n            padding: 0,\r\n            margin: 0,\r\n          }}\r\n        >\r\n          <div\r\n            style={{\r\n              width: \"18px\",\r\n              height: \"18px\",\r\n              position: \"relative\",\r\n              display: \"flex\",\r\n              alignItems: \"center\",\r\n              justifyContent: \"center\",\r\n            }}\r\n          >\r\n            <CheckBoxSelection\r\n              key={rowIdx}\r\n              checkboxRef={checkboxRef}\r\n              isTableSelectable={isTableSelectable}\r\n              setSelectedRowIndex={setSelectedRowIndex}\r\n              rowIdx={rowIdx}\r\n              rowItm={rowItm}\r\n              getSelectedItem={getSelectedItem}\r\n              setSelectedRow={setSelectedRow}\r\n              handleResetCheckBoxByIndex={handleResetCheckBoxByIndex}\r\n            />\r\n          </div>\r\n        </td>\r\n\r\n        {showSequence && (\r\n          <td\r\n            style={{\r\n              position: \"relative\",\r\n              border: \"none\",\r\n              cursor: \"pointer\",\r\n              background: selectedRow === rowIdx ? \"#0076d\" : \"\",\r\n              padding: 0,\r\n              margin: 0,\r\n            }}\r\n          >\r\n            <input\r\n              readOnly={true}\r\n              defaultValue={`${String(rowIdx + 1).padStart(2, \"0\")}`}\r\n              style={{\r\n                width: \"50px\",\r\n                pointerEvents: \"none\",\r\n                border: \"none\",\r\n                background: \"transparent\",\r\n                userSelect: \"none\",\r\n                height: \"100%\",\r\n                textAlign: \"center\",\r\n              }}\r\n            />\r\n          </td>\r\n        )}\r\n\r\n        {column.map((colItm: any, colIdx: number) => {\r\n          return (\r\n            <td\r\n              className={`td row-${rowIdx} col-${colIdx} `}\r\n              tabIndex={0}\r\n              onDoubleClick={() => {\r\n                if (!isTableSelectable) {\r\n                  return;\r\n                }\r\n                handleResetCheckBox();\r\n                if (selectedRowIndex === rowIdx) {\r\n                  setSelectedRowIndex(null);\r\n\r\n                  checkboxRef.current[rowIdx].checked = false;\r\n\r\n                  if (getSelectedItem) {\r\n                    getSelectedItem(null, null, rowIdx, null);\r\n                  }\r\n                } else {\r\n                  checkboxRef.current[rowIdx].checked = true;\r\n\r\n                  setSelectedRowIndex(rowIdx);\r\n                  if (getSelectedItem) {\r\n                    getSelectedItem(rowItm, null, rowIdx, null);\r\n                  }\r\n                }\r\n                setSelectedRow(null);\r\n              }}\r\n              onClick={() => {\r\n                setSelectedRow(rowIdx);\r\n              }}\r\n              onKeyDown={(e) => {\r\n                if (onKeyDown) {\r\n                  onKeyDown(rowItm, rowIdx, e);\r\n                }\r\n                if (e.key === \"ArrowUp\") {\r\n                  setSelectedRow((prev: any) => {\r\n                    const index = Math.max(prev - 1, -1);\r\n                    const td = document.querySelector(\r\n                      `.td.row-${index}`\r\n                    ) as HTMLTableDataCellElement;\r\n\r\n                    if (index < 0) {\r\n                      if (focusElementOnMaxTop) {\r\n                        focusElementOnMaxTop();\r\n                      }\r\n                      return;\r\n                    }\r\n                    if (td) {\r\n                      td.focus();\r\n                    }\r\n                    return index;\r\n                  });\r\n                } else if (e.key === \"ArrowDown\") {\r\n                  setSelectedRow((prev: any) => {\r\n                    const index = Math.min(prev + 1, data.length - 1);\r\n                    const td = document.querySelector(\r\n                      `.td.row-${index}`\r\n                    ) as HTMLTableDataCellElement;\r\n\r\n                    if (td) {\r\n                      td.focus();\r\n                      if (index <= 15) {\r\n                        parentElementRef.current.style.overflow = \"hidden\";\r\n                        setTimeout(() => {\r\n                          parentElementRef.current.style.overflow = \"auto\";\r\n                        }, 100);\r\n                        return index;\r\n                      }\r\n                    }\r\n                    return index;\r\n                  });\r\n                }\r\n                if (e.code === \"Enter\" || e.code === \"NumpadEnter\") {\r\n                  e.preventDefault();\r\n\r\n                  if (!isTableSelectable) {\r\n                    return;\r\n                  }\r\n\r\n                  setSelectedRowIndex(rowIdx);\r\n\r\n                  if (getSelectedItem) {\r\n                    getSelectedItem(rowItm, null, rowIdx, null);\r\n                  }\r\n                  setSelectedRow(null);\r\n                }\r\n              }}\r\n              key={colIdx}\r\n              style={{\r\n                border: \"none\",\r\n                fontSize: \"12px\",\r\n                padding: \"0px 5px\",\r\n                cursor: \"pointer\",\r\n                height: \"20px\",\r\n                userSelect: \"none\",\r\n              }}\r\n              onContextMenu={(e) => handleRightClick(e, rowIdx)}\r\n            >\r\n              {\r\n                <input\r\n                  type={isValidDateStrict(rowItm[colIdx]) ? \"date\" : \"text\"}\r\n                  readOnly={true}\r\n                  value={rowItm[colIdx]}\r\n                  style={{\r\n                    width: colItm.width,\r\n                    pointerEvents: \"none\",\r\n                    border: \"none\",\r\n                    background: \"transparent\",\r\n                    userSelect: \"none\",\r\n                    height: \"100%\",\r\n                    textAlign: colItm.type === \"number\" ? \"right\" : \"left\",\r\n                  }}\r\n                />\r\n              }\r\n            </td>\r\n          );\r\n        })}\r\n      </tr>\r\n    );\r\n  }\r\n);\r\nconst CheckBoxSelection = forwardRef(\r\n  (\r\n    {\r\n      isTableSelectable,\r\n      setSelectedRowIndex,\r\n      rowIdx,\r\n      rowItm,\r\n      getSelectedItem,\r\n      setSelectedRow,\r\n      checkboxRef,\r\n      handleResetCheckBoxByIndex,\r\n    }: any,\r\n    ref\r\n  ) => {\r\n    return (\r\n      <input\r\n        ref={(el) => (checkboxRef.current[rowIdx] = el)}\r\n        style={{\r\n          cursor: \"pointer\",\r\n          margin: \"0px !important\",\r\n          position: \"absolute\",\r\n        }}\r\n        readOnly={true}\r\n        type=\"checkbox\"\r\n        onClick={(e) => {\r\n          if (!isTableSelectable) {\r\n            return;\r\n          }\r\n          handleResetCheckBoxByIndex(rowIdx);\r\n          if (e.currentTarget.checked) {\r\n            setSelectedRowIndex(rowIdx);\r\n            if (getSelectedItem) {\r\n              getSelectedItem(rowItm, null, rowIdx, null);\r\n            }\r\n            setSelectedRow(null);\r\n            return;\r\n          } else {\r\n            setSelectedRowIndex(null);\r\n            if (getSelectedItem) {\r\n              getSelectedItem(null, null, rowIdx, null);\r\n            }\r\n            setSelectedRow(null);\r\n            return;\r\n          }\r\n        }}\r\n      />\r\n    );\r\n  }\r\n);\r\n\r\nconst ActionModal = forwardRef(\r\n  ({ handleOnSave, handleOnClose, hasSelectedRow, Component }: any, ref) => {\r\n    const [showModal, setShowModal] = useState(false);\r\n    const [handleDelayClose, setHandleDelayClose] = useState(false);\r\n    const [blick, setBlick] = useState(false);\r\n\r\n    const closeDelay = () => {\r\n      setHandleDelayClose(true);\r\n      setTimeout(() => {\r\n        setShowModal(false);\r\n        setHandleDelayClose(false);\r\n        if (handleOnClose) handleOnClose();\r\n      }, 100);\r\n    };\r\n    const closeDelayRef = useRef<any>(closeDelay);\r\n\r\n    useImperativeHandle(ref, () => ({\r\n      showModal: () => {\r\n        setShowModal(true);\r\n      },\r\n      clsoeModal: () => {\r\n        setShowModal(false);\r\n      },\r\n      blick,\r\n      closeDelay,\r\n    }));\r\n\r\n    useEffect(() => {\r\n      window.addEventListener(\"keydown\", (e: any) => {\r\n        if (e.key === \"Escape\") {\r\n          closeDelayRef.current();\r\n        }\r\n      });\r\n    }, []);\r\n\r\n    return showModal ? (\r\n      <>\r\n        <div\r\n          style={{\r\n            position: \"fixed\",\r\n            top: 0,\r\n            bottom: 0,\r\n            left: 0,\r\n            right: 0,\r\n            background: \"transparent\",\r\n            zIndex: \"88\",\r\n          }}\r\n          onClick={() => {\r\n            setBlick(true);\r\n            setTimeout(() => {\r\n              setBlick(false);\r\n            }, 250);\r\n          }}\r\n        ></div>\r\n        <div\r\n          style={{\r\n            height: \"auto\",\r\n            width: \"auto\",\r\n            border: \"1px solid #64748b\",\r\n            position: \"absolute\",\r\n            left: \"50%\",\r\n            top: \"50%\",\r\n            transform: \"translate(-50%, -75%)\",\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            zIndex: handleDelayClose ? -100 : 100,\r\n            opacity: handleDelayClose ? 0 : 1,\r\n            transition: \"all 150ms\",\r\n            boxShadow: \"3px 6px 32px -7px rgba(0,0,0,0.75)\",\r\n          }}\r\n        >\r\n          <div\r\n            style={{\r\n              height: \"22px\",\r\n              background: \"white\",\r\n              display: \"flex\",\r\n              justifyContent: \"space-between\",\r\n              padding: \"5px\",\r\n              position: \"relative\",\r\n              alignItems: \"center\",\r\n            }}\r\n          >\r\n            <span style={{ fontSize: \"13px\", fontWeight: \"bold\" }}>Action</span>\r\n            <button\r\n              className=\"btn-check-exit-modal\"\r\n              style={{\r\n                padding: \"0 5px\",\r\n                borderRadius: \"0px\",\r\n                background: \"white\",\r\n                color: \"black\",\r\n                height: \"22px\",\r\n                position: \"absolute\",\r\n                top: 0,\r\n                right: 0,\r\n              }}\r\n              onClick={() => {\r\n                closeDelay();\r\n              }}\r\n            >\r\n              <CloseIcon sx={{ fontSize: \"22px\" }} />\r\n            </button>\r\n          </div>\r\n          {Component}\r\n          <style>\r\n            {`\r\n              .btn-check-exit-modal:hover{\r\n                background:red !important;\r\n                color:white !important;\r\n              }\r\n            `}\r\n          </style>\r\n        </div>\r\n      </>\r\n    ) : null;\r\n  }\r\n);\r\nexport const DataGridViewMultiSelectionReact = forwardRef(\r\n  (\r\n    {\r\n      columns,\r\n      rows = [],\r\n      height = \"400px\",\r\n      getSelectedItem,\r\n      onKeyDown,\r\n      disbaleTable = false,\r\n      isTableSelectable: _isTableSelectable = true,\r\n      containerStyle,\r\n      focusElementOnMaxTop,\r\n      onCheckAll,\r\n      onUnCheckAll,\r\n      rowIsSelectable,\r\n    }: any,\r\n    ref\r\n  ) => {\r\n    const parentElementRef = useRef<any>(null);\r\n    const tbodyRef = useRef<HTMLTableSectionElement>(null);\r\n    const [data, setData] = useState([]);\r\n    const [column, setColumn] = useState([]);\r\n    const [selectedRow, setSelectedRow] = useState<any>(0);\r\n    const [selectedRowIndex, setSelectedRowIndex] = useState<Array<any>>([]);\r\n    const totalRowWidth = column.reduce((a: any, b: any) => a + b.width, 0);\r\n    const [isTableSelectable, setIsTableSelectable] =\r\n      useState(_isTableSelectable);\r\n\r\n    const [columnHeader, setColumnHeader] = useState(\r\n      columns.filter((itm: any) => !itm.hide)\r\n    );\r\n    const [hoveredColumn, setHoveredColumn] = useState(null);\r\n\r\n    useEffect(() => {\r\n      if (columns.length > 0) {\r\n        setColumn(columns.filter((itm: any) => !itm.hide));\r\n      }\r\n    }, [columns]);\r\n\r\n    useImperativeHandle(ref, () => ({\r\n      checkNoIsExist: (checkNo: string) => {\r\n        return data.some((subArray: any) => subArray[2] === checkNo);\r\n      },\r\n      selectedRow: () => selectedRow,\r\n      getData: () => {\r\n        const newData = [...data];\r\n        return newData;\r\n      },\r\n      getSelectedRowsData: () => {\r\n        const newData = [...data];\r\n        return selectedRowIndex\r\n          .map((index) => newData[index])\r\n          .filter((item) => item !== undefined);\r\n      },\r\n      setData: (newData: any) => {\r\n        setData(newData);\r\n      },\r\n      getColumns: () => {\r\n        return columns;\r\n      },\r\n      resetTable: () => {\r\n        setData([]);\r\n        setSelectedRow(0);\r\n        setSelectedRowIndex([]);\r\n      },\r\n      getSelectedRow: () => {\r\n        return selectedRowIndex;\r\n      },\r\n      setSelectedRow: (value: any) => {\r\n        return setSelectedRowIndex(value);\r\n      },\r\n      _setSelectedRow: (value: any) => {\r\n        return setSelectedRow(value);\r\n      },\r\n      setDataFormated: (newData: any) => {\r\n        setData(\r\n          newData.map((itm: any) => {\r\n            return columns.map((col: any) => itm[col.key]);\r\n          })\r\n        );\r\n      },\r\n      setIsTableSelectable: (param: boolean) => {\r\n        setIsTableSelectable(param);\r\n      },\r\n      getDataFormatted: () => {\r\n        const newData = [...data];\r\n        const newDataFormatted = newData.map((itm: any) => {\r\n          let newItm = {\r\n            Check_No: itm[0],\r\n            Check_Date: itm[1],\r\n            Check_Amnt: itm[2],\r\n            BankName: itm[3],\r\n            Branch: itm[4],\r\n            Check_Remarks: itm[5],\r\n            Deposit_Slip: itm[6],\r\n            DateDeposit: itm[7],\r\n            OR_No: itm[8],\r\n            BankCode: itm[9],\r\n          };\r\n          return newItm;\r\n        });\r\n\r\n        return newDataFormatted;\r\n      },\r\n      getElementBody: () => tbodyRef.current,\r\n      getParentElement: () => parentElementRef.current,\r\n      isTableSelectable,\r\n    }));\r\n\r\n    const startResize = (index: any, e: any) => {\r\n      e.preventDefault();\r\n      e.stopPropagation();\r\n\r\n      const startX = e.clientX;\r\n      const startWidth = columnHeader[index].width;\r\n\r\n      const doDrag = (moveEvent: any) => {\r\n        const newWidth = startWidth + (moveEvent.clientX - startX);\r\n        const updatedColumns = [...columnHeader];\r\n        updatedColumns[index].width = newWidth > 50 ? newWidth : 50; // Set minimum column width\r\n        setColumnHeader(updatedColumns);\r\n      };\r\n\r\n      const stopDrag = () => {\r\n        document.removeEventListener(\"mousemove\", doDrag);\r\n        document.removeEventListener(\"mouseup\", stopDrag);\r\n      };\r\n\r\n      document.addEventListener(\"mousemove\", doDrag);\r\n      document.addEventListener(\"mouseup\", stopDrag);\r\n    };\r\n    const handleMouseEnter = (index: any) => {\r\n      setHoveredColumn(index); // Set the hovered column index\r\n    };\r\n    const handleMouseLeave = () => {\r\n      setHoveredColumn(null); // Reset hovered column index\r\n    };\r\n\r\n    return (\r\n      <div\r\n        ref={parentElementRef}\r\n        style={{\r\n          width: \"100%\",\r\n          height,\r\n          overflow: \"auto\",\r\n          position: \"relative\",\r\n          pointerEvents: disbaleTable ? \"none\" : \"auto\",\r\n          border: disbaleTable ? \"2px solid #8c8f8e\" : \"2px solid #c0c0c0\",\r\n          boxShadow: `inset -2px -2px 0 #ffffff, \r\n                        inset 2px 2px 0 #808080`,\r\n          ...containerStyle,\r\n          background: \"#dcdcdc\",\r\n        }}\r\n      >\r\n        <div\r\n          style={{\r\n            position: \"absolute\",\r\n            width: `${totalRowWidth}px`,\r\n            height: \"auto\",\r\n          }}\r\n        >\r\n          <table\r\n            id=\"upward-cutom-table-multi\"\r\n            style={{\r\n              borderCollapse: \"collapse\",\r\n              width: \"100%\",\r\n              position: \"relative\",\r\n              background: \"#dcdcdc\",\r\n            }}\r\n          >\r\n            <thead>\r\n              <tr>\r\n                {isTableSelectable && (\r\n                  <th\r\n                    style={{\r\n                      width: \"30px\",\r\n                      border: \"none\",\r\n                      position: \"sticky\",\r\n                      top: 0,\r\n                      zIndex: 1,\r\n                      background: \"#f0f0f0\",\r\n                    }}\r\n                  >\r\n                    <div\r\n                      style={{\r\n                        width: \"18px\",\r\n                        height: \"18px\",\r\n                        position: \"relative\",\r\n                        display: \"flex\",\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"center\",\r\n                      }}\r\n                    >\r\n                      <input\r\n                        style={{\r\n                          cursor: \"pointer\",\r\n                          margin: \"0px !important\",\r\n                          position: \"absolute\",\r\n                        }}\r\n                        readOnly={true}\r\n                        type=\"checkbox\"\r\n                        onClick={(e) => {\r\n                          if (e.currentTarget.checked) {\r\n                            if (onCheckAll) {\r\n                              onCheckAll();\r\n                            }\r\n                          } else {\r\n                            if (onUnCheckAll) {\r\n                              onUnCheckAll();\r\n                            }\r\n                          }\r\n                        }}\r\n                      />\r\n                    </div>\r\n                  </th>\r\n                )}\r\n                {column.map((colItm: any, idx: number) => {\r\n                  return (\r\n                    <th\r\n                      key={idx}\r\n                      style={{\r\n                        width: colItm.width,\r\n                        borderRight: \"1px solid #e2e8f0\",\r\n                        position: \"sticky\",\r\n                        top: 0,\r\n                        zIndex: 1,\r\n                        background: \"#f0f0f0\",\r\n                        fontSize: \"12px\",\r\n                        padding: \"0px 5px\",\r\n                        textAlign: colItm.type === \"number\" ? \"center\" : \"left\",\r\n                      }}\r\n                    >\r\n                      <div\r\n                        key={idx}\r\n                        className={` ${\r\n                          hoveredColumn === idx ? `highlight-column` : \"\"\r\n                        }`} // Add the class if hovered\r\n                        style={{ width: colItm.width, height: \"20px\" }}\r\n                      >\r\n                        {colItm.label}\r\n\r\n                        <div\r\n                          className=\"resize-handle\"\r\n                          onMouseDown={(e) => startResize(idx, e)}\r\n                          onMouseEnter={(e) => {\r\n                            e.preventDefault();\r\n                            handleMouseEnter(idx);\r\n                          }} // On hover\r\n                          onMouseLeave={(e) => {\r\n                            e.preventDefault();\r\n                            handleMouseLeave();\r\n                          }} // On mouse leave\r\n                        />\r\n                      </div>\r\n                    </th>\r\n                  );\r\n                })}\r\n              </tr>\r\n            </thead>\r\n            <tbody ref={tbodyRef}>\r\n              {data?.map((rowItm: any, rowIdx: number) => {\r\n                return (\r\n                  <tr\r\n                    data-index={rowIdx}\r\n                    key={rowIdx}\r\n                    className={`row ${\r\n                      selectedRow === rowIdx &&\r\n                      selectedRowIndex.includes(rowIdx)\r\n                        ? \"multi-selected-row-item\"\r\n                        : selectedRow === rowIdx\r\n                        ? \"multi-selected-row\"\r\n                        : selectedRowIndex.includes(rowIdx)\r\n                        ? \"multi-selected-item\"\r\n                        : \"\"\r\n                    }`}\r\n                  >\r\n                    {isTableSelectable && (\r\n                      <td\r\n                        style={{\r\n                          position: \"relative\",\r\n                          border: \"none\",\r\n                          cursor: \"pointer\",\r\n                          background: selectedRow === rowIdx ? \"#0076d\" : \"\",\r\n                          padding: 0,\r\n                          margin: 0,\r\n                        }}\r\n                      >\r\n                        <div\r\n                          style={{\r\n                            width: \"18px\",\r\n                            height: \"18px\",\r\n                            position: \"relative\",\r\n                            display: \"flex\",\r\n                            alignItems: \"center\",\r\n                            justifyContent: \"center\",\r\n                          }}\r\n                        >\r\n                          <input\r\n                            style={{\r\n                              cursor: \"pointer\",\r\n                              margin: \"0px !important\",\r\n                              position: \"absolute\",\r\n                            }}\r\n                            readOnly={true}\r\n                            checked={selectedRowIndex.includes(rowIdx)}\r\n                            type=\"checkbox\"\r\n                            onClick={() => {\r\n                              if (rowIsSelectable && rowIsSelectable(rowItm)) {\r\n                                return;\r\n                              }\r\n                              if (!isTableSelectable) {\r\n                                return;\r\n                              }\r\n\r\n                              if (selectedRowIndex.includes(rowIdx)) {\r\n                                setSelectedRowIndex((d: any) =>\r\n                                  d.filter((i: any) => i !== rowIdx)\r\n                                );\r\n                              } else {\r\n                                setSelectedRowIndex((d: any) => [...d, rowIdx]);\r\n                              }\r\n\r\n                              if (getSelectedItem) {\r\n                                getSelectedItem(rowItm, null, rowIdx, null);\r\n                              }\r\n                            }}\r\n                          />\r\n                        </div>\r\n                      </td>\r\n                    )}\r\n\r\n                    {column.map((colItm: any, colIdx: number) => {\r\n                      return (\r\n                        <td\r\n                          className={`td row-${rowIdx} col-${colIdx} `}\r\n                          tabIndex={0}\r\n                          onDoubleClick={() => {\r\n                            if (rowIsSelectable && rowIsSelectable(rowItm)) {\r\n                              return;\r\n                            }\r\n                            if (!isTableSelectable) {\r\n                              return;\r\n                            }\r\n\r\n                            if (selectedRowIndex.includes(rowIdx)) {\r\n                              setSelectedRowIndex((d: any) =>\r\n                                d.filter((i: any) => i !== rowIdx)\r\n                              );\r\n\r\n                              if (getSelectedItem) {\r\n                                getSelectedItem(null, null, rowIdx, null);\r\n                              }\r\n\r\n                              return;\r\n                            } else {\r\n                              setSelectedRowIndex((d: any) => [...d, rowIdx]);\r\n\r\n                              if (getSelectedItem) {\r\n                                getSelectedItem(rowItm, null, rowIdx, null);\r\n                              }\r\n                            }\r\n                          }}\r\n                          onClick={() => {\r\n                            setSelectedRow(rowIdx);\r\n                          }}\r\n                          onKeyDown={(e) => {\r\n                            if (onKeyDown) {\r\n                              onKeyDown(rowItm, rowIdx, e);\r\n                            }\r\n                            if (e.key === \"ArrowUp\") {\r\n                              setSelectedRow((prev: any) => {\r\n                                const index = Math.max(prev - 1, -1);\r\n                                const td = document.querySelector(\r\n                                  `.td.row-${index}`\r\n                                ) as HTMLTableDataCellElement;\r\n                                if (index < 0) {\r\n                                  if (focusElementOnMaxTop) {\r\n                                    focusElementOnMaxTop();\r\n                                  }\r\n                                  return;\r\n                                }\r\n                                if (td) {\r\n                                  td.focus();\r\n                                }\r\n                                return index;\r\n                              });\r\n                            } else if (e.key === \"ArrowDown\") {\r\n                              setSelectedRow((prev: any) => {\r\n                                const index = Math.min(\r\n                                  prev + 1,\r\n                                  data.length - 1\r\n                                );\r\n                                const td = document.querySelector(\r\n                                  `.td.row-${index}`\r\n                                ) as HTMLTableDataCellElement;\r\n                                if (td) {\r\n                                  td.focus();\r\n                                  if (index <= 15) {\r\n                                    parentElementRef.current.style.overflow =\r\n                                      \"hidden\";\r\n                                    setTimeout(() => {\r\n                                      parentElementRef.current.style.overflow =\r\n                                        \"auto\";\r\n                                    }, 100);\r\n                                    return index;\r\n                                  }\r\n                                }\r\n                                return index;\r\n                              });\r\n                            }\r\n                            if (\r\n                              e.code === \"Enter\" ||\r\n                              e.code === \"NumpadEnter\"\r\n                            ) {\r\n                              e.preventDefault();\r\n\r\n                              if (!isTableSelectable) {\r\n                                return;\r\n                              }\r\n\r\n                              if (selectedRowIndex.includes(rowIdx)) {\r\n                                setSelectedRowIndex((d: any) =>\r\n                                  d.filter((i: any) => i !== rowIdx)\r\n                                );\r\n                              } else {\r\n                                setSelectedRowIndex((d: any) => [...d, rowIdx]);\r\n                              }\r\n                              if (getSelectedItem) {\r\n                                getSelectedItem(rowItm, null, rowIdx, null);\r\n                              }\r\n                            }\r\n                          }}\r\n                          key={colIdx}\r\n                          style={{\r\n                            border: \"none\",\r\n                            fontSize: \"12px\",\r\n                            padding: \"0px 5px\",\r\n                            cursor: \"pointer\",\r\n                            height: \"20px\",\r\n                            userSelect: \"none\",\r\n                          }}\r\n                        >\r\n                          {\r\n                            <input\r\n                              type={\r\n                                isValidDateStrict(rowItm[colIdx])\r\n                                  ? \"date\"\r\n                                  : \"text\"\r\n                              }\r\n                              readOnly={true}\r\n                              value={rowItm[colIdx]}\r\n                              style={{\r\n                                width: colItm.width,\r\n                                pointerEvents: \"none\",\r\n                                border: \"none\",\r\n                                background: \"transparent\",\r\n                                userSelect: \"none\",\r\n                                height: \"100%\",\r\n                                textAlign:\r\n                                  colItm.type === \"number\" ? \"right\" : \"left\",\r\n                              }}\r\n                            />\r\n                          }\r\n                        </td>\r\n                      );\r\n                    })}\r\n                  </tr>\r\n                );\r\n              })}\r\n            </tbody>\r\n          </table>\r\n          <style>\r\n            {`\r\n             #upward-cutom-table-multi tr td{\r\n               border-right:1px solid #f1f5f9 !important;\r\n             }\r\n          \r\n              #upward-cutom-table-multi tr:nth-child(odd) td {\r\n                  background-color: #ffffff !important;\r\n              }\r\n              #upward-cutom-table-multi tr:nth-child(even) td {\r\n                  background-color: #f5f5f5 !important;\r\n              }\r\n\r\n             #upward-cutom-table-multi tr.multi-selected-row-item td {\r\n                background-color: rgba(84, 84, 82, 0.73) !important;\r\n                border-right:1px solid white !important;\r\n                border-bottom:1px solid white !important;\r\n              }\r\n              #upward-cutom-table-multi tr.multi-selected-row-item td input {\r\n                  color: #ffffff !important;\r\n              }\r\n\r\n            #upward-cutom-table-multi tr.multi-selected-item td {\r\n                background-color: rgba(232, 232, 226, 0.99) !important;\r\n                border-right:1px solid white !important;\r\n                border-bottom:1px solid white !important;\r\n              }\r\n              #upward-cutom-table-multi tr.multi-selected-item td input {\r\n                  color: black !important;\r\n              }\r\n\r\n              #upward-cutom-table-multi tr.multi-selected-row td {\r\n                  background-color: #0076d7 !important;\r\n                  border-right:1px solid white !important;\r\n                  border-bottom:1px solid white !important;\r\n              }\r\n              #upward-cutom-table-multi tr.multi-selected-row td input {\r\n                  color: #ffffff !important;\r\n              }\r\n                  .resize-handle {\r\n                    position: absolute;\r\n                    right: 0;\r\n                    top: 0;\r\n                    width: 5px;\r\n                    height: 100%;\r\n                    cursor: col-resize;\r\n                    background-color: transparent;\r\n                  }\r\n\r\n                  .resize-handle:hover {\r\n                    background-color: #101111;\r\n                  }\r\n\r\n                  .highlight-column {\r\n                    border-right: 2px solid #007bff !important;\r\n                  }\r\n  \r\n  \r\n              `}\r\n          </style>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n);\r\nlet dataCache: any = [];\r\nlet searchInputValueCache = \"\";\r\nexport const useUpwardTableModalSearch = ({\r\n  column,\r\n  query,\r\n  getSelectedItem,\r\n  onKeyDown,\r\n  customWidth,\r\n  onClose,\r\n}: any) => {\r\n  const [show, setShow] = useState(false);\r\n  const searchInputRef = useRef<HTMLInputElement>(null);\r\n\r\n  function openModal(search: string) {\r\n    const body = document.body;\r\n    const div = document.createElement(\"div\");\r\n    div.id = \"modal-portal\";\r\n\r\n    if (document.getElementById(\"modal-portal\"))\r\n      body.removeChild(document.getElementById(\"modal-portal\") as HTMLElement);\r\n\r\n    body.insertBefore(div, document.getElementById(\"root\"));\r\n    wait(100).then(() => {\r\n      div.innerHTML = ReactDOMServer.renderToString(<UpwardTableModalSearch />);\r\n    });\r\n\r\n    setShow(true);\r\n\r\n    wait(100).then(() => {\r\n      if (searchInputRef.current) {\r\n        searchInputRef.current.value = search;\r\n        const event = new KeyboardEvent(\"keydown\", {\r\n          code: \"Enter\",\r\n          bubbles: true,\r\n        });\r\n        searchInputRef.current.focus(); // Ensure the element has focus\r\n        searchInputRef.current.dispatchEvent(event); // Dispatch the native event\r\n        wait(100).then(() => {\r\n          searchInputRef.current?.focus();\r\n        });\r\n      }\r\n    });\r\n  }\r\n  function closeModal(muteOnClose = true) {\r\n    if (onClose && muteOnClose) {\r\n      onClose();\r\n    }\r\n    setShow(false);\r\n    dataCache = [];\r\n  }\r\n\r\n  const UpwardTableModalSearch = () => {\r\n    const modalRef = useRef<HTMLDivElement>(null);\r\n    const isMoving = useRef(false);\r\n    const offset = useRef({ x: 0, y: 0 });\r\n\r\n    const tableRef = useRef<any>(null);\r\n    const [blick, setBlick] = useState(false);\r\n    const [data, setData] = useState([]);\r\n    const { executeQueryToClient } = useExecuteQueryFromClient();\r\n\r\n    useEffect(() => {\r\n      if (dataCache.length > 0) {\r\n        if (searchInputRef.current) {\r\n          searchInputRef.current.value = searchInputValueCache;\r\n        }\r\n        setData(dataCache);\r\n      }\r\n    }, [setData]);\r\n\r\n    useEffect(() => {\r\n      if (data.length > 0) {\r\n        dataCache = data;\r\n        tableRef.current?.setDataFormated(data);\r\n      }\r\n    }, [data]);\r\n\r\n    const handleMouseDown = (e: any) => {\r\n      if (!modalRef.current) return;\r\n\r\n      isMoving.current = true;\r\n      offset.current = {\r\n        x: e.clientX - modalRef.current.offsetLeft,\r\n        y: e.clientY - modalRef.current.offsetTop,\r\n      };\r\n\r\n      document.addEventListener(\"mousemove\", handleMouseMove);\r\n      document.addEventListener(\"mouseup\", handleMouseUp);\r\n    };\r\n\r\n    // Move modal with mouse\r\n    const handleMouseMove = (e: any) => {\r\n      if (!isMoving.current || !modalRef.current) return;\r\n\r\n      modalRef.current.style.left = `${e.clientX - offset.current.x}px`;\r\n      modalRef.current.style.top = `${e.clientY - offset.current.y}px`;\r\n    };\r\n\r\n    // Stop moving when releasing mouse\r\n    const handleMouseUp = () => {\r\n      isMoving.current = false;\r\n      document.removeEventListener(\"mousemove\", handleMouseMove);\r\n      document.removeEventListener(\"mouseup\", handleMouseUp);\r\n    };\r\n\r\n    return show ? (\r\n      <div id=\"modal-inject\">\r\n        <div\r\n          style={{\r\n            position: \"fixed\",\r\n            top: 0,\r\n            bottom: 0,\r\n            left: 0,\r\n            right: 0,\r\n            background: \"transparent\",\r\n            zIndex: \"88\",\r\n          }}\r\n          onClick={() => {\r\n            setBlick(true);\r\n            setTimeout(() => {\r\n              setBlick(false);\r\n            }, 250);\r\n          }}\r\n        ></div>\r\n\r\n        <div\r\n          className=\"modal-table-datagridview\"\r\n          ref={modalRef}\r\n          style={{\r\n            background: \"#F1F1F1\",\r\n            width: customWidth\r\n              ? customWidth(blick, column)\r\n              : blick\r\n              ? \"451px\"\r\n              : \"450px\",\r\n            height: blick ? \"501px\" : \"500px\",\r\n            position: \"absolute\",\r\n            zIndex: 111111,\r\n            top: \"50%\",\r\n            left: \"50%\",\r\n            transform: \"translate(-50%,-50%)\",\r\n            boxShadow: \"3px 6px 32px -7px rgba(0,0,0,0.75)\",\r\n            boxSizing: \"border-box\",\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n          }}\r\n        >\r\n          <div\r\n            style={{\r\n              height: \"22px\",\r\n              background: \"white\",\r\n              display: \"flex\",\r\n              justifyContent: \"space-between\",\r\n              padding: \"5px\",\r\n              position: \"relative\",\r\n              alignItems: \"center\",\r\n              cursor: \"grab\",\r\n            }}\r\n            onMouseDown={handleMouseDown}\r\n          >\r\n            <span style={{ fontSize: \"13px\", fontWeight: \"bold\" }}>Search</span>\r\n            <button\r\n              className=\"btn-check-exit-modal\"\r\n              style={{\r\n                padding: \"0 5px\",\r\n                borderRadius: \"0px\",\r\n                background: \"white\",\r\n                color: \"black\",\r\n                height: \"22px\",\r\n                position: \"absolute\",\r\n                top: 0,\r\n                right: 0,\r\n              }}\r\n              onClick={() => {\r\n                closeModal();\r\n              }}\r\n            >\r\n              <CloseIcon sx={{ fontSize: \"22px\" }} />\r\n            </button>\r\n          </div>\r\n          <div\r\n            style={{\r\n              padding: \"5px\",\r\n            }}\r\n          >\r\n            <TextInput\r\n              containerStyle={{\r\n                width: \"100%\",\r\n              }}\r\n              label={{\r\n                title: \"Search : \",\r\n                style: {\r\n                  fontSize: \"12px\",\r\n                  fontWeight: \"bold\",\r\n                  width: \"70px\",\r\n                  display: \"none\",\r\n                },\r\n              }}\r\n              input={{\r\n                type: \"text\",\r\n                style: { width: \"100%\" },\r\n                onKeyDown: async (e) => {\r\n                  if (e.code === \"NumpadEnter\" || e.code === \"Enter\") {\r\n                    searchInputValueCache = e.currentTarget.value;\r\n                    const searchQuery = query(e.currentTarget.value);\r\n                    console.log(searchQuery);\r\n                    const dd = await executeQueryToClient(searchQuery);\r\n                    setData(dd.data.data);\r\n                  }\r\n\r\n                  if (e.code === \"ArrowDown\") {\r\n                    const td = document.querySelector(\r\n                      `.td.row-0`\r\n                    ) as HTMLTableDataCellElement;\r\n                    if (td) {\r\n                      const parentElement = tableRef.current.getParentElement();\r\n\r\n                      td.focus({\r\n                        preventScroll: true,\r\n                      });\r\n                      parentElement.style.overflow = \"hidden\";\r\n                      wait(100).then(() => {\r\n                        parentElement.style.overflow = \"auto\";\r\n                      });\r\n                    }\r\n                    tableRef.current?._setSelectedRow(0);\r\n                  }\r\n                },\r\n                onInput: async (e) => {\r\n                  if (e.currentTarget.value === \"\") {\r\n                    const searchQuery = query(searchInputRef.current?.value);\r\n                    const dd = await executeQueryToClient(searchQuery);\r\n                    setData(dd.data.data);\r\n                  }\r\n                },\r\n              }}\r\n              inputRef={searchInputRef}\r\n              icon={<SearchIcon sx={{ fontSize: \"18px\" }} />}\r\n              onIconClick={async (e) => {\r\n                e.preventDefault();\r\n                if (searchInputRef.current)\r\n                  searchInputValueCache = searchInputRef.current.value;\r\n                const searchQuery = query(searchInputRef.current?.value);\r\n                const dd = await executeQueryToClient(searchQuery);\r\n                setData(dd.data.data);\r\n              }}\r\n            />\r\n          </div>\r\n          <div\r\n            style={{\r\n              flex: 1,\r\n            }}\r\n          >\r\n            <DataGridViewReact\r\n              columns={column}\r\n              height={\"100%\"}\r\n              ref={tableRef}\r\n              getSelectedItem={getSelectedItem}\r\n              onKeyDown={onKeyDown}\r\n              focusElementOnMaxTop={() => {\r\n                searchInputRef.current?.focus();\r\n              }}\r\n            />\r\n          </div>\r\n          <div style={{ padding: \"0 10px\" }}>\r\n            <span style={{ fontSize: \"13px\", fontWeight: \"bold\" }}>\r\n              Records: Top {data.length}\r\n            </span>\r\n          </div>\r\n          <style>\r\n            {`\r\n                .btn-check-exit-modal:hover{\r\n                    background:red !important;\r\n                    color:white !important;\r\n                }\r\n            `}\r\n          </style>\r\n        </div>\r\n      </div>\r\n    ) : (\r\n      <></>\r\n    );\r\n  };\r\n\r\n  return {\r\n    openModal,\r\n    closeModal,\r\n    UpwardTableModalSearch,\r\n  };\r\n};\r\nlet _dataCache: any = [];\r\nlet _searchInputValueCache = \"\";\r\nexport const useUpwardTableModalSearchSafeMode = ({\r\n  column,\r\n  link,\r\n  getSelectedItem,\r\n  onKeyDown,\r\n  customWidth,\r\n  onClose,\r\n  size = \"small\",\r\n}: any) => {\r\n  const [show, setShow] = useState(false);\r\n  const searchInputRef = useRef<HTMLInputElement>(null);\r\n\r\n  function openModal(search: string = \"\") {\r\n    const body = document.body;\r\n    const div = document.createElement(\"div\");\r\n    div.id = \"modal-portal\";\r\n\r\n    if (document.getElementById(\"modal-portal\"))\r\n      body.removeChild(document.getElementById(\"modal-portal\") as HTMLElement);\r\n    body.insertBefore(div, body.firstChild);\r\n\r\n    setShow(true);\r\n    wait(100).then(() => {\r\n      if (searchInputRef.current) {\r\n        searchInputRef.current.value = search;\r\n        const event = new KeyboardEvent(\"keydown\", {\r\n          code: \"Enter\",\r\n          bubbles: true,\r\n        });\r\n        searchInputRef.current.focus(); // Ensure the element has focus\r\n        searchInputRef.current.dispatchEvent(event); // Dispatch the native event\r\n        wait(100).then(() => {\r\n          searchInputRef.current?.focus();\r\n        });\r\n      }\r\n    });\r\n  }\r\n  function closeModal(muteOnClose = true) {\r\n    if (onClose && muteOnClose) {\r\n      onClose();\r\n    }\r\n    setShow(false);\r\n    _dataCache = [];\r\n  }\r\n\r\n  const UpwardTableModalSearch = forwardRef(({}: any, ref) => {\r\n    const { user, myAxios } = useContext(AuthContext);\r\n\r\n    const modalRef = useRef<HTMLDivElement>(null);\r\n    const isMoving = useRef(false);\r\n    const offset = useRef({ x: 0, y: 0 });\r\n\r\n    const tableRef = useRef<any>(null);\r\n    const [blick, setBlick] = useState(false);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [data, setData] = useState([]);\r\n\r\n    function mutate(variable: any) {\r\n      setIsLoading(true);\r\n      myAxios\r\n        .post(link, variable, {\r\n          headers: {\r\n            Authorization: `Bearer ${user?.accessToken}`,\r\n          },\r\n        })\r\n        .then((response) => {\r\n          setData(response.data?.data);\r\n          setIsLoading(false);\r\n        })\r\n        .catch((err) => {\r\n          setIsLoading(false);\r\n          console.log(err);\r\n        })\r\n        .finally(() => {\r\n          setIsLoading(false);\r\n        });\r\n    }\r\n\r\n    async function mutateReturnValue(variable: any) {\r\n      try {\r\n        setIsLoading(true);\r\n        return await myAxios.post(link, variable, {\r\n          headers: {\r\n            Authorization: `Bearer ${user?.accessToken}`,\r\n          },\r\n        });\r\n      } catch (error) {\r\n        console.log(error);\r\n        setIsLoading(false);\r\n      }\r\n    }\r\n\r\n    useEffect(() => {\r\n      if (_dataCache.length > 0) {\r\n        if (searchInputRef.current) {\r\n          searchInputRef.current.value = _searchInputValueCache;\r\n        }\r\n        setData(_dataCache);\r\n      }\r\n    }, [setData]);\r\n\r\n    useEffect(() => {\r\n      if (data.length > 0) {\r\n        _dataCache = data;\r\n      }\r\n      tableRef.current?.setDataFormated(data);\r\n    }, [data]);\r\n\r\n    function customWidth(blick: boolean) {\r\n      if (size === \"large\") {\r\n        return blick ? \"851px\" : \"850px\";\r\n      } else if (size === \"medium\") {\r\n        return blick ? \"651px\" : \"650px\";\r\n      } else {\r\n        return blick ? \"451px\" : \"450px\";\r\n      }\r\n    }\r\n\r\n    const handleMouseDown = (e: any) => {\r\n      if (!modalRef.current) return;\r\n\r\n      isMoving.current = true;\r\n      offset.current = {\r\n        x: e.clientX - modalRef.current.offsetLeft,\r\n        y: e.clientY - modalRef.current.offsetTop,\r\n      };\r\n\r\n      document.addEventListener(\"mousemove\", handleMouseMove);\r\n      document.addEventListener(\"mouseup\", handleMouseUp);\r\n    };\r\n\r\n    // Move modal with mouse\r\n    const handleMouseMove = (e: any) => {\r\n      if (!isMoving.current || !modalRef.current) return;\r\n\r\n      modalRef.current.style.left = `${e.clientX - offset.current.x}px`;\r\n      modalRef.current.style.top = `${e.clientY - offset.current.y}px`;\r\n    };\r\n\r\n    // Stop moving when releasing mouse\r\n    const handleMouseUp = () => {\r\n      isMoving.current = false;\r\n      document.removeEventListener(\"mousemove\", handleMouseMove);\r\n      document.removeEventListener(\"mouseup\", handleMouseUp);\r\n    };\r\n\r\n    useImperativeHandle(ref, () => ({\r\n      mutate,\r\n      mutateReturnValue,\r\n    }));\r\n\r\n    return show ? (\r\n      ReactDOM.createPortal(\r\n        <div id=\"modal-inject\">\r\n          <div\r\n            style={{\r\n              position: \"fixed\",\r\n              top: 0,\r\n              bottom: 0,\r\n              left: 0,\r\n              right: 0,\r\n              background: \"transparent\",\r\n              zIndex: \"88\",\r\n            }}\r\n            onClick={() => {\r\n              setBlick(true);\r\n              setTimeout(() => {\r\n                setBlick(false);\r\n              }, 250);\r\n            }}\r\n          ></div>\r\n\r\n          <div\r\n            className=\"modal-table-datagridview\"\r\n            ref={modalRef}\r\n            style={{\r\n              background: \"#F1F1F1\",\r\n              width: customWidth(blick),\r\n              height: blick ? \"501px\" : \"500px\",\r\n              position: \"absolute\",\r\n              zIndex: 111111,\r\n              top: \"50%\",\r\n              left: \"50%\",\r\n              transform: \"translate(-50%,-50%)\",\r\n              boxShadow: \"3px 6px 32px -7px rgba(0,0,0,0.75)\",\r\n              boxSizing: \"border-box\",\r\n              display: \"flex\",\r\n              flexDirection: \"column\",\r\n            }}\r\n          >\r\n            {isLoading && <Loading />}\r\n            <div\r\n              style={{\r\n                height: \"22px\",\r\n                background: \"white\",\r\n                display: \"flex\",\r\n                justifyContent: \"space-between\",\r\n                padding: \"5px\",\r\n                position: \"relative\",\r\n                alignItems: \"center\",\r\n                cursor: \"grab\",\r\n              }}\r\n              onMouseDown={handleMouseDown}\r\n            >\r\n              <span style={{ fontSize: \"13px\", fontWeight: \"bold\" }}>\r\n                Search\r\n              </span>\r\n              <button\r\n                className=\"btn-check-exit-modal\"\r\n                style={{\r\n                  padding: \"0 5px\",\r\n                  borderRadius: \"0px\",\r\n                  background: \"white\",\r\n                  color: \"black\",\r\n                  height: \"22px\",\r\n                  position: \"absolute\",\r\n                  top: 0,\r\n                  right: 0,\r\n                }}\r\n                onClick={() => {\r\n                  closeModal();\r\n                }}\r\n              >\r\n                <CloseIcon sx={{ fontSize: \"22px\" }} />\r\n              </button>\r\n            </div>\r\n            <div\r\n              style={{\r\n                padding: \"5px\",\r\n              }}\r\n            >\r\n              <TextInput\r\n                containerStyle={{\r\n                  width: \"100%\",\r\n                }}\r\n                label={{\r\n                  title: \"Search : \",\r\n                  style: {\r\n                    fontSize: \"12px\",\r\n                    fontWeight: \"bold\",\r\n                    width: \"70px\",\r\n                    display: \"none\",\r\n                  },\r\n                }}\r\n                input={{\r\n                  type: \"text\",\r\n                  style: { width: \"100%\" },\r\n                  onKeyDown: async (e) => {\r\n                    if (e.code === \"NumpadEnter\" || e.code === \"Enter\") {\r\n                      _searchInputValueCache = e.currentTarget.value;\r\n                      mutate({ search: e.currentTarget.value });\r\n                    }\r\n\r\n                    if (e.code === \"ArrowDown\") {\r\n                      const td = document.querySelector(\r\n                        `.td.row-0`\r\n                      ) as HTMLTableDataCellElement;\r\n                      if (td) {\r\n                        const parentElement =\r\n                          tableRef.current.getParentElement();\r\n\r\n                        td.focus({\r\n                          preventScroll: true,\r\n                        });\r\n                        parentElement.style.overflow = \"hidden\";\r\n                        wait(100).then(() => {\r\n                          parentElement.style.overflow = \"auto\";\r\n                        });\r\n                      }\r\n                      tableRef.current?._setSelectedRow(0);\r\n                    }\r\n                  },\r\n                  onInput: (e) => {\r\n                    if (e.currentTarget.value === \"\") {\r\n                      mutate({ search: \"\" });\r\n                    }\r\n                  },\r\n                }}\r\n                inputRef={searchInputRef}\r\n                icon={<SearchIcon sx={{ fontSize: \"18px\" }} />}\r\n                onIconClick={async (e) => {\r\n                  e.preventDefault();\r\n                  if (searchInputRef.current)\r\n                    _searchInputValueCache = searchInputRef.current.value;\r\n\r\n                  mutate({ search: searchInputRef.current?.value });\r\n                }}\r\n              />\r\n            </div>\r\n            <div\r\n              style={{\r\n                flex: 1,\r\n              }}\r\n            >\r\n              <DataGridViewReact\r\n                columns={column}\r\n                height={\"100%\"}\r\n                ref={tableRef}\r\n                getSelectedItem={getSelectedItem}\r\n                onKeyDown={onKeyDown}\r\n                focusElementOnMaxTop={() => {\r\n                  searchInputRef.current?.focus();\r\n                }}\r\n              />\r\n            </div>\r\n            <div style={{ padding: \"0 10px\" }}>\r\n              <span style={{ fontSize: \"13px\", fontWeight: \"bold\" }}>\r\n                Records: Top {data.length}\r\n              </span>\r\n            </div>\r\n            <style>\r\n              {`\r\n                                    .btn-check-exit-modal:hover{\r\n                                        background:red !important;\r\n                                        color:white !important;\r\n                                    }\r\n                                `}\r\n            </style>\r\n          </div>\r\n        </div>,\r\n        document.getElementById(\"modal-portal\") as HTMLElement\r\n      )\r\n    ) : (\r\n      <></>\r\n    );\r\n  });\r\n\r\n  return {\r\n    openModal,\r\n    closeModal,\r\n    UpwardTableModalSearch,\r\n    searchInputRef,\r\n  };\r\n};\r\n\r\nfunction isValidDateStrict(dateString: any) {\r\n  const regex = /^\\d{4}-\\d{2}-\\d{2}$/;\r\n  if (!regex.test(dateString)) return false;\r\n\r\n  const date = new Date(dateString);\r\n  return (\r\n    date instanceof Date &&\r\n    !isNaN(date as any) &&\r\n    date.toISOString().slice(0, 10) === dateString\r\n  );\r\n}\r\n","export default function _objectDestructuringEmpty(obj) {\n  if (obj == null) throw new TypeError(\"Cannot destructure \" + obj);\n}","export function isValidDate(dateString:string) {\r\n    // Ensure the date is in the correct format: YYYY-MM-DD\r\n     const regex = /^\\d{4}-\\d{2}-\\d{2}$/;\r\n     if (!regex.test(dateString)) {\r\n         return false;\r\n     }\r\n \r\n     // Extract the year, month, and day\r\n     const [year, month, day] = dateString.split(\"-\");\r\n \r\n     // Ensure year is a valid four-digit number and within a reasonable range\r\n     const parsedYear = parseInt(year);\r\n     if (parsedYear < 1000 || parsedYear > 2040) {\r\n         return false;\r\n     }\r\n \r\n     const date = new Date(dateString);\r\n     // Ensure the created date matches the parts we input, adjusting for overflow\r\n     return date.getFullYear() === parsedYear &&\r\n            date.getMonth() + 1 === parseInt(month) &&\r\n            date.getDate() === parseInt(day);\r\n }","import {\n  HtmlHTMLAttributes,\n  InputHTMLAttributes,\n  useId,\n  ReactNode,\n  useState,\n  LegacyRef,\n  TextareaHTMLAttributes,\n  CSSProperties,\n  forwardRef,\n  useImperativeHandle,\n} from \"react\";\nimport \"../style/design.css\";\nimport { isValidDate } from \"../lib/validateDate\";\nimport { format } from \"date-fns\";\nimport { wait } from \"../lib/wait\";\n\ninterface TextInputProps {\n  input: InputHTMLAttributes<HTMLInputElement>;\n  label: HtmlHTMLAttributes<HTMLLabelElement>;\n  inputRef?: React.RefObject<HTMLInputElement>;\n  icon?: ReactNode; // New prop for the icon\n  iconPosition?: \"start\" | \"end\"; // New prop to choose icon position\n  onIconClick?: React.MouseEventHandler<HTMLDivElement> | undefined;\n  disableIcon?: boolean;\n  containerStyle?: CSSProperties;\n  containerClassName?: string;\n}\n\ninterface TextAreaPrps {\n  textarea: TextareaHTMLAttributes<HTMLTextAreaElement>;\n  label: HtmlHTMLAttributes<HTMLLabelElement>;\n  _inputRef: LegacyRef<HTMLTextAreaElement>;\n  icon?: ReactNode; // New prop for the icon\n  iconPosition?: \"start\" | \"end\"; // New prop to choose icon position\n  onIconClick?: React.MouseEventHandler<HTMLDivElement> | undefined;\n  disableIcon?: boolean;\n  containerStyle?: CSSProperties;\n  containerClassName?: string;\n}\n\ninterface TextFormatedInputProps extends TextInputProps {\n  onChange?: React.ChangeEventHandler<HTMLInputElement> | undefined;\n  onBlur?: React.ChangeEventHandler<HTMLInputElement> | undefined;\n}\nexport function TextFormatedInput({\n  input,\n  label,\n  inputRef,\n  icon,\n  iconPosition = \"end\", // Default position is 'end'\n  disableIcon = false,\n  onIconClick = (e) => {},\n  onChange = (e) => {},\n  onBlur = (e) => {},\n  containerStyle,\n  containerClassName,\n}: TextFormatedInputProps) {\n  // const [inputValue, setInputValue] = useState('');\n  const id = useId();\n\n  // Helper function to format numbers with commas\n  const formatNumber = (value: string) => {\n    if (!value) return value;\n\n    // Split the value into integer and decimal parts\n    const parts = value.split(\".\");\n\n    // Add commas to the integer part only\n    parts[0] = parts[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n\n    // Join the integer and decimal parts if decimal exists\n    return parts.join(\".\");\n  };\n\n  // Helper function to remove commas\n  const unformatNumber = (value: string) => {\n    return value.replace(/,/g, \"\");\n  };\n\n  // Function to ensure two decimal places\n  const ensureTwoDecimals = (value: string) => {\n    // If the value has no decimal part, append '.00'\n    if (!value.includes(\".\")) {\n      if (value === \"\") {\n        return \"0.00\";\n      } else {\n        return value + \".00\";\n      }\n    }\n\n    // If the value has one decimal place, append '0'\n    const parts = value.split(\".\");\n    if (parts[1].length === 1) {\n      return value + \"0\";\n    }\n\n    // If it already has two decimal places, return as is\n    return value;\n  };\n\n  const handleChange = (e: any) => {\n    let value = e.target.value;\n\n    // Remove commas for processing\n    value = unformatNumber(value);\n\n    // Allow only numbers, commas, and one decimal point\n    const regex = /^-?\\d+(,\\d{3})*(\\.\\d*)?$/;\n\n    // Remove commas for processing\n    value = unformatNumber(value);\n\n    // Check if the value is valid\n    if (value === \"\" || regex.test(value)) {\n      // Set the formatted value back in the input field\n      //setInputValue(formatNumber(value));\n      e.target.value = formatNumber(value);\n    } else {\n      const numbers = value.match(/\\d+/g);\n      if (numbers) {\n        const newV = numbers.join(\"\");\n        e.target.value = formatNumber(newV);\n      } else {\n        e.target.value = \"0\";\n      }\n    }\n  };\n\n  const handleBlur = (e: any) => {\n    let value = unformatNumber(e.target.value);\n\n    // Ensure the value has two decimal places\n    value = ensureTwoDecimals(value);\n\n    // Set the value with commas and .00 (if needed)\n    // setInputValue(formatNumber(value));\n    e.target.value = formatNumber(value);\n  };\n\n  return (\n    <div\n      className={containerClassName}\n      style={{\n        display: \"flex\",\n        alignItems: \"center\",\n        position: \"relative\",\n        ...containerStyle, // Enable absolute positioning for icon\n      }}\n    >\n      <label {...label} htmlFor={id}>\n        {label.title}\n      </label>\n      {icon && iconPosition === \"start\" && (\n        <div style={{ position: \"absolute\", left: \"8px\", zIndex: 1 }}>\n          {icon}\n        </div>\n      )}\n      <input\n        ref={inputRef}\n        id={id}\n        {...input}\n        type=\"text\"\n        style={{\n          height: \"100%\",\n          textAlign: \"right\",\n          ...input.style,\n        }}\n        onChange={(e) => {\n          handleChange(e);\n          onChange(e);\n        }}\n        onBlur={(e) => {\n          handleBlur(e);\n          onBlur(e);\n        }} // Add .00 on blur\n        onFocus={(e) => {\n          e.currentTarget.select();\n          if (input && input.onFocus) input.onFocus(e);\n        }}\n      />\n      {icon && iconPosition === \"end\" && (\n        <div\n          onClick={onIconClick}\n          style={{\n            position: \"absolute\",\n            right: \"2px\",\n            top: \"50%\",\n            transform: \"translateY(-50%)\",\n            zIndex: 1,\n            cursor: disableIcon ? \"none\" : \"pointer\",\n            display: \"flex\",\n            alignItems: \"center\",\n            justifyContent: \"center\",\n            background: \"white\",\n            pointerEvents: disableIcon ? \"none\" : \"auto\",\n          }}\n        >\n          {icon}\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport function TextInput({\n  input,\n  label,\n  inputRef,\n  icon,\n  iconPosition = \"end\", // Default position is 'end'\n  disableIcon = false,\n  containerStyle,\n  onIconClick = (e) => {},\n  containerClassName,\n}: TextInputProps) {\n  const id = useId();\n\n  return (\n    <div\n      className={containerClassName}\n      style={{\n        display: \"flex\",\n        alignItems: \"center\",\n        position: \"relative\",\n        ...containerStyle,\n      }}\n    >\n      <label {...label} htmlFor={id}>\n        {label.title}\n      </label>\n      {icon && iconPosition === \"start\" && (\n        <div style={{ position: \"absolute\", left: \"8px\", zIndex: 1 }}>\n          {icon}\n        </div>\n      )}\n      <input\n        ref={inputRef}\n        id={id}\n        {...input}\n        onBlur={(e) => {\n          if (input.type === \"month\") {\n            if (!isValidDate(`${e.currentTarget.value}-01`)) {\n              alert(\n                `Invalid ${label.title\n                  ?.replace(/:/g, \"\")\n                  .trim()}!, Resetting date.`\n              );\n              e.currentTarget.value = format(new Date(), \"yyyy-MM\");\n              wait(100).then(() => {\n                inputRef?.current?.focus();\n              });\n              return;\n            }\n          }\n          if (input.type === \"date\") {\n            if (!isValidDate(e.currentTarget.value)) {\n              alert(\n                `Invalid ${label.title\n                  ?.replace(/:/g, \"\")\n                  .trim()}!, Resetting date.`\n              );\n              e.currentTarget.value = format(new Date(), \"yyyy-MM-dd\");\n              wait(100).then(() => {\n                inputRef?.current?.focus();\n              });\n              return;\n            }\n          }\n          if (input && input.onBlur) input.onBlur(e);\n        }}\n        style={{\n          height: \"100%\",\n          ...input.style,\n        }}\n      />\n      {icon && iconPosition === \"end\" && (\n        <div\n          onClick={onIconClick}\n          style={{\n            position: \"absolute\",\n            right: \"2px\",\n            top: \"50%\",\n            transform: \"translateY(-50%)\",\n            zIndex: 1,\n            cursor: disableIcon ? \"none\" : \"pointer\",\n            display: \"flex\",\n            alignItems: \"center\",\n            justifyContent: \"center\",\n            background: \"white\",\n            pointerEvents: disableIcon ? \"none\" : \"auto\",\n          }}\n        >\n          {icon}\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport function TextAreaInput({\n  containerClassName,\n  textarea,\n  label,\n  _inputRef,\n  icon,\n  iconPosition = \"end\", // Default position is 'end'\n  disableIcon = false,\n  onIconClick = (e) => {},\n  containerStyle,\n}: TextAreaPrps) {\n  const id = useId();\n\n  return (\n    <div\n      className={containerClassName}\n      style={{\n        display: \"flex\",\n        alignItems: \"center\",\n        position: \"relative\",\n        ...containerStyle, // Enable absolute positioning for icon\n      }}\n    >\n      <label {...label} htmlFor={id}>\n        {label.title}\n      </label>\n      {icon && iconPosition === \"start\" && (\n        <div style={{ position: \"absolute\", left: \"8px\", zIndex: 1 }}>\n          {icon}\n        </div>\n      )}\n      <textarea\n        ref={_inputRef}\n        id={id}\n        {...textarea}\n        style={{\n          height: \"100%\",\n          ...textarea.style,\n        }}\n      />\n      {icon && iconPosition === \"end\" && (\n        <div\n          onClick={onIconClick}\n          style={{\n            position: \"absolute\",\n            right: \"2px\",\n            top: \"50%\",\n            transform: \"translateY(-50%)\",\n            zIndex: 1,\n            cursor: disableIcon ? \"none\" : \"pointer\",\n            display: \"flex\",\n            alignItems: \"center\",\n            justifyContent: \"center\",\n            background: \"white\",\n            pointerEvents: disableIcon ? \"none\" : \"auto\",\n          }}\n        >\n          {icon}\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport const SelectInput = forwardRef(\n  (\n    {\n      select,\n      label,\n      selectRef,\n      datasource = [],\n      values = \"\",\n      display = \"\",\n      containerStyle,\n      containerClassName,\n    }: {\n      selectRef?: React.RefObject<HTMLSelectElement>;\n      labelRef?: React.RefObject<HTMLLabelElement>;\n      select: InputHTMLAttributes<HTMLSelectElement>;\n      label: HtmlHTMLAttributes<HTMLLabelElement>;\n      datasource: Array<any>;\n      values: string;\n      display: string;\n      containerStyle?: React.CSSProperties | undefined;\n      containerClassName?: string;\n    },\n    ref: any\n  ) => {\n    const [_datasource, _setDataSource] = useState(datasource);\n    const id = useId();\n\n    useImperativeHandle(ref, () => ({\n      setDataSource: (_dataSource: any) => {\n        _setDataSource(_dataSource);\n      },\n      getDataSource: () => {\n        return _datasource;\n      },\n    }));\n\n    return (\n      <div\n        className={containerClassName}\n        style={{\n          display: \"flex\",\n          height: \"18px\",\n          alignItems: \"center\",\n          ...containerStyle,\n        }}\n      >\n        <label {...label} htmlFor={id}>\n          {label.title}\n        </label>\n        <select\n          {...select}\n          ref={selectRef}\n          className={`select ${select.className}`}\n          style={{\n            height: \"18px\",\n            ...select.style,\n          }}\n        >\n          {_datasource.map((itm, idx) => {\n            return (\n              <option key={idx} value={itm[values]}>\n                {itm[display]}\n              </option>\n            );\n          })}\n        </select>\n      </div>\n    );\n  }\n);\n\nexport function ButtonField({\n  buttonRetRef,\n  button,\n  tooltipText = \"\",\n  children,\n  disabled = false,\n}: {\n  buttonRetRef?: React.RefObject<HTMLButtonElement>;\n  button: HtmlHTMLAttributes<HTMLButtonElement>;\n  tooltipText: string;\n  children: React.ReactNode;\n  disabled?: boolean;\n}) {\n  return (\n    <div className=\"tooltip\">\n      <button\n        disabled={disabled}\n        {...button}\n        ref={buttonRetRef}\n        style={{\n          ...button.style,\n          cursor: \"pointer\",\n          background: !disabled ? \"transparent\" : \"#f1f1f1\",\n        }}\n        className=\"tooltip-button\"\n      >\n        {children}\n      </button>\n      {!disabled && <span className=\"tooltip-text\">{tooltipText}</span>}\n    </div>\n  );\n}\n","import { useContext } from \"react\";\r\nimport { AuthContext } from \"../components/AuthContext\"\r\n\r\n\r\n\r\nexport default function useExecuteQueryFromClient() {\r\n    const { myAxios, user } = useContext(AuthContext);\r\n\r\n\r\n    async function executeQueryToClient(query: string) {\r\n        return await myAxios.post('/execute-query', { query }, {\r\n            headers: {\r\n                Authorization: `Bearer ${user?.accessToken}`\r\n            }\r\n        })\r\n    }\r\n\r\n    return {\r\n        executeQueryToClient\r\n    }\r\n}\r\n\r\n","export function wait(duration:number){\n    return new Promise(resolve => setTimeout(resolve,duration))\n}"],"names":["DataGridViewReact","forwardRef","_ref","ref","columns","_ref$height","rows","height","getSelectedItem","onKeyDown","_ref$disbaleTable","disbaleTable","_ref$isTableSelectabl","isTableSelectable","_isTableSelectable","containerStyle","focusElementOnMaxTop","_ref$ActionComponent","ActionComponent","_jsx","_Fragment","_ref$showSequence","showSequence","parentElementRef","useRef","actionModalRef","checkboxRef","tbodyRef","_useState","useState","_useState2","_slicedToArray","data","setData","_useState3","_useState4","column","setColumn","_useState5","_useState6","selectedRow","setSelectedRow","_useState7","_useState8","selectedRowIndex","setSelectedRowIndex","totalRowWidth","reduce","a","b","width","_useState9","_useState10","setIsTableSelectable","_useState11","filter","itm","hide","_useState12","columnHeader","setColumnHeader","_useState13","_useState14","hoveredColumn","setHoveredColumn","useEffect","length","useImperativeHandle","checkNoIsExist","checkNo","some","subArray","getData","_toConsumableArray","newData","getColumns","resetTable","getSelectedRow","value","resetCheckBox","handleResetCheckBox","_setSelectedRow","param","setDataFormated","map","col","key","getDataFormatted","Check_No","Check_Date","Check_Amnt","BankName","Branch","Check_Remarks","Deposit_Slip","DateDeposit","OR_No","BankCode","getElementBody","current","getParentElement","forEach","checkbox","idx","checked","handleResetCheckBoxByIndex","_idx","handleRightClick","event","preventDefault","showModal","_jsxs","children","ActionModal","Component","closeModal","closeDelay","rowItm","className","style","_objectSpread","overflow","position","pointerEvents","border","boxShadow","background","concat","id","borderCollapse","top","zIndex","borderRight","fontSize","padding","textAlign","colItm","type","label","onMouseDown","e","index","stopPropagation","startX","clientX","startWidth","doDrag","moveEvent","newWidth","updatedColumns","document","addEventListener","stopDrag","removeEventListener","startResize","onMouseEnter","onMouseLeave","rowIdx","RowComponent","_ref2","cursor","margin","display","alignItems","justifyContent","CheckBoxSelection","readOnly","defaultValue","String","padStart","userSelect","colIdx","tabIndex","onDoubleClick","onClick","prev","Math","max","td","querySelector","focus","min","setTimeout","code","onContextMenu","isValidDateStrict","_ref3","el","currentTarget","_ref4","handleOnSave","handleOnClose","hasSelectedRow","_useState15","_useState16","setShowModal","_useState17","_useState18","handleDelayClose","setHandleDelayClose","_useState19","_useState20","blick","setBlick","closeDelayRef","clsoeModal","window","bottom","left","right","transform","flexDirection","opacity","transition","fontWeight","borderRadius","color","CloseIcon","sx","DataGridViewMultiSelectionReact","_ref5","_ref5$height","_ref5$disbaleTable","_ref5$isTableSelectab","onCheckAll","onUnCheckAll","rowIsSelectable","_useState21","_useState22","_useState23","_useState24","_useState25","_useState26","_useState27","_useState28","_useState29","_useState30","_useState31","_useState32","_useState33","_useState34","getSelectedRowsData","item","undefined","includes","d","i","dataCache","searchInputValueCache","useUpwardTableModalSearch","_ref6","query","customWidth","onClose","_useState35","_useState36","show","setShow","searchInputRef","arguments","UpwardTableModalSearch","_onKeyDown3","_onInput","_ref7","modalRef","isMoving","offset","x","y","tableRef","_useState37","_useState38","_useState39","_useState40","executeQueryToClient","useExecuteQueryFromClient","_tableRef$current","handleMouseMove","clientY","handleMouseUp","boxSizing","offsetLeft","offsetTop","TextInput","title","input","_x","_asyncToGenerator","_regeneratorRuntime","mark","_callee","searchQuery","dd","_tableRef$current2","parentElement","wrap","_context","next","console","log","sent","preventScroll","wait","then","stop","apply","onInput","_x2","_callee2","_searchInputRef$curre2","_context2","inputRef","icon","SearchIcon","onIconClick","_x3","_callee3","_searchInputRef$curre3","_context3","flex","_searchInputRef$curre4","openModal","search","body","div","createElement","getElementById","removeChild","insertBefore","innerHTML","ReactDOMServer","KeyboardEvent","bubbles","dispatchEvent","_searchInputRef$curre","_dataCache","_searchInputValueCache","useUpwardTableModalSearchSafeMode","_ref8","link","_ref8$size","size","_useState41","_useState42","_ref9","_mutateReturnValue","_onKeyDown4","_ref10","obj","TypeError","_objectDestructuringEmpty","_useContext","useContext","AuthContext","user","myAxios","_useState43","_useState44","_useState45","_useState46","isLoading","setIsLoading","_useState47","_useState48","mutate","variable","post","headers","Authorization","accessToken","response","_response$data","catch","err","finally","mutateReturnValue","_x4","_callee4","_context4","abrupt","t0","_tableRef$current3","ReactDOM","Loading","_x5","_callee5","_tableRef$current4","_context5","_x6","_callee6","_searchInputRef$curre6","_context6","_searchInputRef$curre7","firstChild","_searchInputRef$curre5","dateString","test","date","Date","isNaN","toISOString","slice","isValidDate","_dateString$split","split","_dateString$split2","year","month","day","parsedYear","parseInt","getFullYear","getMonth","getDate","TextFormatedInput","_ref$iconPosition","iconPosition","_ref$disableIcon","disableIcon","_ref$onIconClick","_ref$onChange","onChange","_ref$onBlur","onBlur","containerClassName","useId","formatNumber","parts","replace","join","unformatNumber","htmlFor","target","numbers","match","newV","handleChange","ensureTwoDecimals","handleBlur","onFocus","select","_ref2$iconPosition","_ref2$disableIcon","_ref2$onIconClick","_label$title","_label$title2","alert","trim","format","_inputRef$current","_inputRef$current2","TextAreaInput","textarea","_inputRef","_ref3$iconPosition","_ref3$disableIcon","_ref3$onIconClick","SelectInput","selectRef","_ref4$datasource","datasource","_ref4$values","values","_ref4$display","_datasource","_setDataSource","setDataSource","_dataSource","getDataSource","_executeQueryToClient","duration","Promise","resolve"],"sourceRoot":""}