{"version":3,"file":"static/js/450.1d8961f3.chunk.js","mappings":"gIAcA,IAXmB,SAAHA,GAA2C,IAADC,EAAAD,EAApCE,MAAAA,OAAK,IAAAD,EAAG,GAAEA,EAG5B,OACIE,EAAAA,EAAAA,MAACC,EAAAA,EAAM,CAAAC,SAAA,EACHC,EAAAA,EAAAA,KAAA,SAAAD,SAAA,GAAAE,OAHWC,QAGU,OAAAD,OAAML,MAC3BI,EAAAA,EAAAA,KAAA,QAAMG,IAAI,OAAOC,KAAK,YAAYC,KAAI,GAAAJ,OAL/BC,IAK0C,iBAG7D,C,kSCOMI,EAAU,CACd,CAAEC,MAAO,oBAAqBC,GAAI,GAClC,CAAED,MAAO,sBAAuBC,GAAI,GACpC,CAAED,MAAO,oBAAqBC,GAAI,GAClC,CAAED,MAAO,gBAAiBC,GAAI,GAC9B,CAAED,MAAO,yBAA0BC,GAAI,GACvC,CAAED,MAAO,sBAAuBC,GAAI,GACpC,CAAED,MAAO,gBAAiBC,GAAI,GAC9B,CAAED,MAAO,0BAA2BC,GAAI,GACxC,CAAED,MAAO,wBAAyBC,GAAI,GACtC,CAAED,MAAO,kBAAmBC,GAAI,GAChC,CAAED,MAAO,6BAA8BC,GAAI,IAC3C,CAAED,MAAO,+BAAgCC,GAAI,IAC7C,CAAED,MAAO,+BAAgCC,GAAI,IAC7C,CAAED,MAAO,6BAA8BC,GAAI,IAC3C,CAAED,MAAO,uBAAwBC,GAAI,IACrC,CAAED,MAAO,gBAAiBC,GAAI,IAC9B,CAAED,MAAO,gBAAiBC,GAAI,IAC9B,CAAED,MAAO,kBAAmBC,GAAI,IAChC,CAAED,MAAO,sBAAuBC,GAAI,IACpC,CAAED,MAAO,sBAAuBC,GAAI,IACpC,CAAED,MAAO,mBAAoBC,GAAI,IACjC,CAAED,MAAO,iCAAkCC,GAAI,KAGlC,SAASC,IACtB,IAAQC,GAASC,EAAAA,EAAAA,YAAWC,EAAAA,GAApBF,KACRG,GAAoCC,EAAAA,EAAAA,UAASR,GAAQS,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA9CI,EAAUF,EAAA,GAAEG,EAAaH,EAAA,GAChCI,GAA4CL,EAAAA,EAAAA,UAAS,GAAEM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAAhDE,EAAcD,EAAA,GAAEE,EAAiBF,EAAA,GAWxC,OATAG,EAAAA,EAAAA,YAAU,WACJb,GACsB,sBAApBA,EAAKc,aACPN,EAAc,CAAC,CAAEX,MAAO,6BAA8BC,GAAI,MAC1Dc,EAAkB,IAGxB,GAAG,CAACZ,KAGFb,EAAAA,EAAAA,MAAA4B,EAAAA,SAAA,CAAA1B,SAAA,EACEC,EAAAA,EAAAA,KAAC0B,EAAAA,EAAU,CAAC9B,MAAOqB,EAAWI,GAAgBd,SAC9CP,EAAAA,EAAAA,KAAA,OACE2B,UAAU,OACVC,MAAO,CACLC,QAAS,OACTC,WAAY,SACZC,eAAgB,SAChBC,KAAM,EACNC,OAAQ,QACRC,gBAAiB,WACjBnC,UAEFC,EAAAA,EAAAA,KAAA,OACE2B,UAAU,iBACVC,MAAO,CACLO,OAAQ,oBACRC,MAAO,QACPH,OAAQ,QACRJ,QAAS,OACTQ,cAAe,SACfC,OAAQ,OACRC,QAAS,OACTC,UAAW,qCACXzC,UAEFF,EAAAA,EAAAA,MAAA,OACE8B,UAAU,mBACVC,MAAO,CACLI,KAAM,EACNH,QAAS,OACTY,UAAW,QACX1C,SAAA,EAEFF,EAAAA,EAAAA,MAAA,OACE8B,UAAU,yBACVC,MAAO,CACLQ,MAAO,QACPM,WAAY,QACZb,QAAS,OACTQ,cAAe,SACfC,OAAQ,MACRK,SAAU,YACV5C,SAAA,EAEFC,EAAAA,EAAAA,KAAA,QACE4B,MAAO,CACLQ,MAAO,OACPQ,UAAW,SACXC,SAAU,OACVN,QAAS,OACTxC,SACH,yBAGDC,EAAAA,EAAAA,KAAA,OACE4B,MAAO,CACLe,SAAU,WACVP,MAAO,OACPH,OAAQ,QACRa,SAAU,QACV/C,UAEFC,EAAAA,EAAAA,KAAA,OACE4B,MAAO,CACLQ,MAAO,OACPH,OAAQ,OACRU,SAAU,YACV5C,SAEDkB,EAAW8B,KAAI,SAACC,EAAKC,GACpB,OACEpD,EAAAA,EAAAA,MAAA4B,EAAAA,SAAA,CAAA1B,SAAA,CACc,IAAXiD,EAAIxC,KAAYR,EAAAA,EAAAA,KAAA,OAAK4B,MAAO,CAAEK,OAAQ,UAC3B,IAAXe,EAAIxC,KAAYR,EAAAA,EAAAA,KAAA,OAAK4B,MAAO,CAAEK,OAAQ,UAC3B,KAAXe,EAAIxC,KACHR,EAAAA,EAAAA,KAAA,OAAK4B,MAAO,CAAEK,OAAQ,UAEZ,KAAXe,EAAIxC,KACHR,EAAAA,EAAAA,KAAA,OAAK4B,MAAO,CAAEK,OAAQ,UAEZ,KAAXe,EAAIxC,KACHR,EAAAA,EAAAA,KAAA,OAAK4B,MAAO,CAAEK,OAAQ,UAEZ,KAAXe,EAAIxC,KACHR,EAAAA,EAAAA,KAAA,OAAK4B,MAAO,CAAEK,OAAQ,UAEZ,KAAXe,EAAIxC,KACHR,EAAAA,EAAAA,KAAA,OAAK4B,MAAO,CAAEK,OAAQ,WAExBjC,EAAAA,EAAAA,KAAA,UAEE4B,MAAO,CACLiB,SAAU,OACVV,OAAQ,OACRO,WACErB,IAAmB2B,EAAIxC,GACnB,UACA,cACN0C,MACE7B,IAAmB2B,EAAIxC,GAAK,QAAU,QACxC4B,MAAO,OACPQ,UAAW,OACXO,OAAQ,WAEVC,QAAS,WACP9B,EAAkB0B,EAAIxC,GACxB,EAAET,SAEDiD,EAAIzC,OAlBA0C,KAsBb,YAINpD,EAAAA,EAAAA,MAAA,OACE8B,UAAU,YACVC,MAAO,CACLI,KAAM,GACNjC,SAAA,CAEkB,IAAnBsB,IAAwBrB,EAAAA,EAAAA,KAACqD,EAAmB,IACzB,IAAnBhC,IAAwBrB,EAAAA,EAAAA,KAACsD,EAAoB,IAC1B,IAAnBjC,IACCrB,EAAAA,EAAAA,KAACuD,EAAY,CACXC,KACE,2DAEFC,YAAa,kBAGG,IAAnBpC,IACCrB,EAAAA,EAAAA,KAACuD,EAAY,CACXC,KACE,8DAEFC,YAAa,4BAGG,IAAnBpC,IACCrB,EAAAA,EAAAA,KAACuD,EAAY,CACXC,KACE,2DAEFC,YAAa,kBAGG,IAAnBpC,IACCrB,EAAAA,EAAAA,KAACuD,EAAY,CACXC,KACE,4DAEFC,YAAa,mBAGG,IAAnBpC,IACCrB,EAAAA,EAAAA,KAAC0D,EAAmB,CAClBF,KACE,iEAEFC,YAAa,4BAGG,IAAnBpC,IACCrB,EAAAA,EAAAA,KAAC0D,EAAmB,CAClBF,KACE,gEAEFC,YAAa,6BAGG,IAAnBpC,IACCrB,EAAAA,EAAAA,KAAC0D,EAAmB,CAClBF,KACE,6DAEFC,YAAa,wBAGG,KAAnBpC,IAAyBrB,EAAAA,EAAAA,KAAC2D,EAA0B,IACjC,KAAnBtC,IAAyBrB,EAAAA,EAAAA,KAAC4D,EAAyB,IAChC,KAAnBvC,IACCrB,EAAAA,EAAAA,KAAC0D,EAAmB,CAClBF,KACE,wEAEFC,YAAa,iCAGG,KAAnBpC,IACCrB,EAAAA,EAAAA,KAAC0D,EAAmB,CAClBF,KACE,sEAEFC,YAAa,+BAGG,KAAnBpC,IACCrB,EAAAA,EAAAA,KAAC6D,EAAa,CACZL,KACE,2DAEFC,YAAa,kCAS/B,CAEA,SAASJ,IAAuB,IAADS,EAAAC,EAAAC,EAAAC,EACvBC,GAAwCC,EAAAA,EAAAA,QAAY,MAC1DC,GAA0BzD,EAAAA,EAAAA,YAAWC,EAAAA,GAA7BF,EAAI0D,EAAJ1D,KAAM2D,EAAOD,EAAPC,QACdC,GAA0BxD,EAAAA,EAAAA,UACxByD,GAAc,CACZC,OAAQ,eACRC,UAAW,MACXC,eAAgB,EAChBC,UAAW,MACXC,WAAWC,EAAAA,EAAAA,GAAO,IAAIC,KAAQ,iBAC9BC,QAAS,GACTC,aAAc,MAEjBC,GAAAjE,EAAAA,EAAAA,GAAAsD,EAAA,GAVM1E,EAAKqF,EAAA,GAAEC,EAAQD,EAAA,GAWtBE,GAA0BrE,EAAAA,EAAAA,UAAS,WAAUsE,GAAApE,EAAAA,EAAAA,GAAAmE,EAAA,GAAtCE,EAAKD,EAAA,GAAEE,EAAQF,EAAA,GACtBG,GAA4BzE,EAAAA,EAAAA,UAAS,gBAAe0E,GAAAxE,EAAAA,EAAAA,GAAAuE,EAAA,GAA7Cf,EAAMgB,EAAA,GAAEC,EAASD,EAAA,GAClBE,GAAWvB,EAAAA,EAAAA,QAA4B,MACvCwB,GAAYxB,EAAAA,EAAAA,QAA0B,MACtCyB,GAAazB,EAAAA,EAAAA,QAAyB,MACtC0B,GAAc1B,EAAAA,EAAAA,QAAyB,MACvC2B,GAAW3B,EAAAA,EAAAA,QAA0B,MAErC4B,GAAa5B,EAAAA,EAAAA,QAAY,MACzB6B,GAAY7B,EAAAA,EAAAA,QAA0B,MACtC8B,GAAe9B,EAAAA,EAAAA,QAAyB,MAExC+B,GAAU/B,EAAAA,EAAAA,QAAyB,MACnCgC,GAAUhC,EAAAA,EAAAA,QAA0B,MACpCiC,GAAWjC,EAAAA,EAAAA,QAA0B,MAE3CkC,GAIIC,EAAAA,EAAAA,IAAkC,CACpC9C,KAAM,+CACN+C,OAAQ,CACN,CAAEC,IAAK,OAAQjG,MAAO,OAAQ6B,MAAO,IACrC,CAAEoE,IAAK,QAASjG,MAAO,QAAS6B,MAAO,KACvC,CACEoE,IAAK,aACLjG,MAAO,aACP6B,MAAO,MAGXqE,gBAAgB,SAADC,EAAAC,EAAAC,EAAAC,GAAA,OAAA/C,EAAAA,IAAAgD,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAE,SAAAC,EAAOC,EAAaC,EAAQC,EAAaC,GAAO,OAAAN,EAAAA,EAAAA,KAAAO,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAC3DP,KACFQ,EAAAA,EAAAA,GAAK,KAAKC,MAAK,WAAO,IAADC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EACfrC,EAAWsC,UACbtC,EAAWsC,QAAQC,MAAQjB,EAAO,IAEhCrB,EAAYqC,UACdrC,EAAYqC,QAAQC,MAAQjB,EAAO,IAGrChC,EACEX,GAAc,CACZC,OAAAA,EACAC,WAA+B,QAApBmD,EAAA3B,EAAaiC,eAAO,IAAAN,OAAA,EAApBA,EAAsBO,QAAS,GAC1CzD,eAAiC,QAAnBmD,EAAE7B,EAAUkC,eAAO,IAAAL,OAAA,EAAjBA,EAAmBO,cACnCzD,UAA4B,QAAnBmD,EAAE9B,EAAUkC,eAAO,IAAAJ,OAAA,EAAjBA,EAAmBK,MAC9BvD,UAAWyD,EAA4B,QAAhBN,EAAC7B,EAAQgC,eAAO,IAAAH,OAAA,EAAfA,EAAiBI,OACrC,IAAIrD,KAAoB,QAAhBkD,EAAC9B,EAAQgC,eAAO,IAAAF,OAAA,EAAfA,EAAiBG,OAC1B,IAAIrD,KACRC,QAASmC,EAAO,GAChBlC,aAAckC,EAAO,MAIT,QAAhBe,EAAAnC,EAASoC,eAAO,IAAAD,GAAhBA,EAAkBK,OACpB,IACAC,KACD,wBAAAhB,EAAAiB,OAAA,GAAAvB,EAAA,MACFwB,MAAA,KAAAC,UAAA,IA1CuBC,EAAkCtC,EAA1DuC,uBACWC,EAAqBxC,EAAhCyC,UACYP,EAAsBlC,EAAlC0C,WA2CFC,GACEC,EAAAA,EAAAA,aAAY,CACVC,YAAa,YACbC,WAAW,SAADC,GAAA,OAAArF,EAAAA,IAAA+C,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAE,SAAAqC,EAAOC,GAAa,OAAAvC,EAAAA,EAAAA,KAAAO,MAAA,SAAAiC,GAAA,cAAAA,EAAA/B,KAAA+B,EAAA9B,MAAA,cAAA8B,EAAA9B,KAAA,EACxBpD,EAAQmF,KAAK,mDAEjBF,EACA,CACEG,QAAS,CACPC,cAAc,UAADzJ,OAAgB,OAAJS,QAAI,IAAJA,OAAI,EAAJA,EAAMiJ,gBAGpC,cAAAJ,EAAAK,OAAA,SAAAL,EAAAM,MAAA,wBAAAN,EAAAf,OAAA,GAAAa,EAAA,MAAAZ,MAAA,KAAAC,UAAA,EACHoB,UAAS,SAACC,GACJA,EAAIC,KAAKC,SACXlE,EAAWmC,QAAQgC,cAAc,CAC/B,CAAEC,YAAa,QAAOlK,QAAAmK,EAAAA,EAAAA,GACnBL,EAAIC,KAAKA,OAGlB,IApBeK,EAAkBrB,EAA7BsB,UAAuCC,GAAevB,EAAvBwB,OAuBvC,SAASjG,GAAa7E,GAQb,IAPP8E,EAAM9E,EAAN8E,OACAC,EAAS/E,EAAT+E,UAEAE,GADcjF,EAAdgF,eACShF,EAATiF,WACAC,EAASlF,EAATkF,UACAG,EAAOrF,EAAPqF,QACAC,EAAYtF,EAAZsF,aAEMyF,EAGA,kDACN,MAAe,0BAAXjG,EACoB,GAAAvE,OAAMwK,GAAMxK,OAClB,KAAdwE,GAAkC,QAAdA,EAAsB,GAAE,MAAAxE,OAASwE,EAAS,KAAG,kBAAAxE,OAClD+E,EAAY,UAAA/E,OAC3B0E,GAAwB,IAAE,MAAA1E,OACrB8E,EAAO,OAAA9E,QAAM4E,EAAAA,EAAAA,GAAO,IAAIC,KAAKF,GAAY,kBAInC,iBAAXJ,EACoB,GAAAvE,OAAMwK,GAAMxK,OAClB,KAAdwE,GAAkC,QAAdA,EAAsB,GAAE,MAAAxE,OAASwE,EAAS,KAAG,4BAAAxE,QACxC4E,EAAAA,EAAAA,GAAO,IAAIC,KAAKF,GAAY,uBAHzD,CAOF,CAiBA,IAAA8F,IACEzB,EAAAA,EAAAA,aAAY,CACVC,YAAa,kBACbC,WAAW,SAADwB,GAAA,OAAA3G,EAAAA,IAAA8C,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAE,SAAA4D,EAAOC,GAAc,OAAA9D,EAAAA,EAAAA,KAAAO,MAAA,SAAAwD,GAAA,cAAAA,EAAAtD,KAAAsD,EAAArD,MAAA,cAAAqD,EAAArD,KAAA,EAClBpD,EAAQmF,KACnB,iEACAqB,EACA,CACEE,aAAc,cACdtB,QAAS,CACPC,cAAc,UAADzJ,OAAgB,OAAJS,QAAI,IAAJA,OAAI,EAAJA,EAAMiJ,gBAGnC,KAAD,SAAAmB,EAAAlB,OAAA,SAAAkB,EAAAjB,MAAA,wBAAAiB,EAAAtC,OAAA,GAAAoC,EAAA,MACFnC,MAAA,KAAAC,UAAA,EACDoB,UAAW,SAACkB,GACV,IAAMC,EAAU,IAAIC,KAAK,CAACF,EAAShB,MAAO,CAAE5J,KAAM,oBAC5C+K,EAASC,IAAIC,gBAAgBJ,GACnC,GAAIK,EAAAA,GAAU,CAEZ,IAAM9H,EAAO+H,SAASC,cAAc,KAMpC,OALAhI,EAAKnD,KAAO8K,EACZ3H,EAAKiI,SAAW,aAChBF,SAASG,KAAKC,YAAYnI,GAC1BA,EAAKoI,aACLL,SAASG,KAAKG,YAAYrI,EAE5B,CACEsI,OAAOC,KAAK,IAAD9L,OAEPC,QAAgC,0BAAAD,OACT+L,mBAAmBb,IAC5C,SAGN,IAnCYc,GAAoBvB,GAA5BF,OAAyC0B,GAAuBxB,GAAlCJ,UAsCtC,OACEzK,EAAAA,EAAAA,MAAA4B,EAAAA,SAAA,CAAA1B,SAAA,EACIsK,GAAsB6B,MAA4BlM,EAAAA,EAAAA,KAACmM,EAAAA,EAAO,KAC5DtM,EAAAA,EAAAA,MAAA,OACE+B,MAAO,CACLC,QAAS,OACTG,KAAM,EACNK,cAAe,SACfE,QAAS,MACTD,OAAQ,OACRvC,SAAA,EAEFC,EAAAA,EAAAA,KAACoM,EAAAA,GAAa,CACZC,eAAgB,CACdC,aAAc,QAEhB/L,MAAO,CACLX,MAAO,WACPgC,MAAO,CACLiB,SAAU,OACV0J,WAAY,OACZnK,MAAO,QACPP,QAAS,SAGb2K,SAAU,CACRC,KAAM,EACN7K,MAAO,CAAEI,KAAM,GACfmG,MAAOvI,EACP8M,SAAU,SAACC,GACTzH,EAASyH,EAAEC,cAAczE,MAC3B,GAEF0E,UAAWnH,KAEb1F,EAAAA,EAAAA,KAAC8M,EAAAA,GAAW,CACVvM,MAAO,CACLX,MAAO,WACPgC,MAAO,CACLiB,SAAU,OACV0J,WAAY,OACZnK,MAAO,SAGX2K,UAAWpH,EACXqH,OAAQ,CACN7E,MAAO3D,EACP5C,MAAO,CAAEQ,MAAO,oBAAqBH,OAAQ,QAC7CgL,aAAc,eACdC,UAAW,SAACP,GACK,gBAAXA,EAAEQ,MAAqC,UAAXR,EAAEQ,MAChCR,EAAES,gBAEN,EACAV,SAAU,SAACC,GAAO,IAADU,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EACflI,EAAUkH,EAAEC,cAAczE,OAE1BjD,EACEX,GAAc,CACZC,OAAQmI,EAAEC,cAAczE,MACxB1D,WAA+B,QAApB4I,EAAApH,EAAaiC,eAAO,IAAAmF,OAAA,EAApBA,EAAsBlF,QAAS,GAC1CzD,eAAiC,QAAnB4I,EAAEtH,EAAUkC,eAAO,IAAAoF,OAAA,EAAjBA,EAAmBlF,cACnCzD,UAA4B,QAAnB4I,EAAEvH,EAAUkC,eAAO,IAAAqF,OAAA,EAAjBA,EAAmBpF,MAC9BvD,UAAWyD,EAA4B,QAAhBmF,EAACtH,EAAQgC,eAAO,IAAAsF,OAAA,EAAfA,EAAiBrF,OACrC,IAAIrD,KAAoB,QAAhB2I,EAACvH,EAAQgC,eAAO,IAAAuF,OAAA,EAAfA,EAAiBtF,OAC1B,IAAIrD,KACRC,QAA2B,QAApB2I,EAAE9H,EAAWsC,eAAO,IAAAwF,OAAA,EAAlBA,EAAoBvF,MAC7BnD,aAAiC,QAArB2I,EAAE9H,EAAYqC,eAAO,IAAAyF,OAAA,EAAnBA,EAAqBxF,QAGzC,GAEFyF,WAAY,CACV,CAAEpH,IAAK,yBACP,CAAEA,IAAK,iBAETqH,OAAQ,MACRhM,QAAS,SAEX7B,EAAAA,EAAAA,KAAC8N,EAAAA,GAAS,CACRvN,MAAO,CACLX,MAAO,aACPgC,MAAO,CACLiB,SAAU,OACV0J,WAAY,OACZnK,MAAO,SAGX2L,MAAO,CACLC,SAAoB,iBAAXxJ,EACT7C,UAAW,8BACXvB,KAAM,OACN6M,aAAc,UACdC,UAAU,SAADe,GAAA,OAAAhK,EAAAA,IAAA6C,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAE,SAAAkH,EAAOvB,GAAC,IAAAxE,EAAA6C,EAAA,OAAAjE,EAAAA,EAAAA,KAAAO,MAAA,SAAA6G,GAAA,cAAAA,EAAA3G,KAAA2G,EAAA1G,MAAA,UACH,UAAVkF,EAAEnG,KAA6B,gBAAVmG,EAAEnG,IAAqB,CAAA2H,EAAA1G,KAAA,QAGX,OAFnCkF,EAAES,iBAEIjF,EAAQwE,EAAEC,cAAczE,MAAKgG,EAAA1G,KAAA,EAE3BvD,EAAsCgE,QAAQkG,kBAClD,CAAEC,OAAQlG,IACV,KAAD,GAHG6C,EAAQmD,EAAAtE,MAKDG,KAAKA,KAAKsE,OAAS,GAC9B5G,EAAAA,EAAAA,GAAK,KAAKC,MAAK,WAAO,IAAD4G,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EACfhJ,EAAWsC,UACbtC,EAAWsC,QAAQC,MAAQ6C,EAAShB,KAAKA,KAAK,GAAG6E,MAE/ChJ,EAAYqC,UACdrC,EAAYqC,QAAQC,MAAQ6C,EAAShB,KAAKA,KAAK,GAAG8E,OAGpD5J,EACEX,GAAc,CACZC,OAAAA,EACAC,WAA+B,QAApB8J,EAAAtI,EAAaiC,eAAO,IAAAqG,OAAA,EAApBA,EAAsBpG,QAAS,GAC1CzD,eAAiC,QAAnB8J,EAAExI,EAAUkC,eAAO,IAAAsG,OAAA,EAAjBA,EAAmBpG,cACnCzD,UAA4B,QAAnB8J,EAAEzI,EAAUkC,eAAO,IAAAuG,OAAA,EAAjBA,EAAmBtG,MAC9BvD,UAAWyD,EAA4B,QAAhBqG,EAACxI,EAAQgC,eAAO,IAAAwG,OAAA,EAAfA,EAAiBvG,OACrC,IAAIrD,KAAoB,QAAhB6J,EAACzI,EAAQgC,eAAO,IAAAyG,OAAA,EAAfA,EAAiBxG,OAC1B,IAAIrD,KACRC,QAASiG,EAAShB,KAAKA,KAAK,GAAG6E,KAC/B7J,aAAcgG,EAAShB,KAAKA,KAAK,GAAG8E,SAIxB,QAAhBF,EAAA9I,EAASoC,eAAO,IAAA0G,GAAhBA,EAAkBtG,OACpB,IAEAO,EAAsBV,GACvB,OAEW,cAAVwE,EAAEnG,KACJmG,EAAES,iBACH,wBAAAe,EAAA3F,OAAA,GAAA0F,EAAA,MACFzF,MAAA,KAAAC,UAAA,EACD9G,MAAO,CAAEQ,MAAO,sBAElB2M,MACE/O,EAAAA,EAAAA,KAACgP,EAAAA,EAAU,CACTC,GAAI,CACFpM,SAAU,UAIhBqM,YAAwB,iBAAX1K,EACb2K,YAAa,SAACxC,GACZA,EAAES,iBACExH,EAAWsC,SACbW,EAAsBjD,EAAWsC,QAAQC,MAE7C,EACAiH,SAAUxJ,KAEZ5F,EAAAA,EAAAA,KAAC8N,EAAAA,GAAS,CACRvN,MAAO,CACLX,MAAO,GACPgC,MAAO,CACLC,QAAS,SAGbkM,MAAO,CACLsB,UAAU,EACVpC,aAAc,yBACd7M,KAAM,OACN8M,UAAW,SAACP,GACI,UAAVA,EAAEnG,KAA6B,gBAAVmG,EAAEnG,KACzBmG,EAAES,iBAGU,cAAVT,EAAEnG,KACJmG,EAAES,gBAEN,EACAxL,MAAO,CAAEQ,MAAO,SAElBgN,SAAUvJ,KAGZhG,EAAAA,EAAAA,MAAA,OACE+B,MAAO,CACLC,QAAS,OACTY,UAAW,MACXX,WAAY,UACZ/B,SAAA,EAEFC,EAAAA,EAAAA,KAAC8M,EAAAA,GAAW,CACVvM,MAAO,CACLX,MAAO,eACPgC,MAAO,CACLiB,SAAU,OACV0J,WAAY,OACZnK,MAAO,SAGX2K,UAAWjH,EACXuG,eAAgB,CAAErK,KAAM,GACxBgL,OAAQ,CACNpL,MAAO,CAAEI,KAAM,EAAGC,OAAQ,QAC1BkG,MAAO9C,EACP6H,UAAW,SAACP,GACK,gBAAXA,EAAEQ,MAAqC,UAAXR,EAAEQ,MAChCR,EAAES,gBAEN,EACAV,SAAU,SAACC,GAAO,IAAD2C,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EACuB,IAAlCjD,EAAEC,cAAcxE,eAClBmC,GAAgB,CAAC,GAGnBrF,EACEX,GAAc,CACZC,OAAAA,EACAC,WAA+B,QAApB6K,EAAArJ,EAAaiC,eAAO,IAAAoH,OAAA,EAApBA,EAAsBnH,QAAS,GAC1CzD,eAAiC,QAAnB6K,EAAEvJ,EAAUkC,eAAO,IAAAqH,OAAA,EAAjBA,EAAmBnH,cACnCzD,UAA4B,QAAnB6K,EAAExJ,EAAUkC,eAAO,IAAAsH,OAAA,EAAjBA,EAAmBrH,MAC9BvD,UAAWyD,EAA4B,QAAhBoH,EAACvJ,EAAQgC,eAAO,IAAAuH,OAAA,EAAfA,EAAiBtH,OACrC,IAAIrD,KAAoB,QAAhB4K,EAACxJ,EAAQgC,eAAO,IAAAwH,OAAA,EAAfA,EAAiBvH,OAC1B,IAAIrD,KACRC,QAA2B,QAApB4K,EAAE/J,EAAWsC,eAAO,IAAAyH,OAAA,EAAlBA,EAAoBxH,MAC7BnD,aAAiC,QAArB4K,EAAE/J,EAAYqC,eAAO,IAAA0H,OAAA,EAAnBA,EAAqBzH,SAGvC7C,EAASqH,EAAEkD,OAAO1H,MACpB,GAEFyF,WAAY,CACV,CAAEpH,IAAK,YACP,CAAEA,IAAK,WACP,CAAEA,IAAK,cAETqH,OAAQ,MACRhM,QAAS,QAEA,cAAVwD,GACCrF,EAAAA,EAAAA,KAAC8N,EAAAA,GAAS,CACRzB,eAAgB,CACdrK,KAAM,GAERzB,MAAO,CACLX,MAAO,GACPgC,MAAO,CACLC,QAAS,SAGbkM,MAAO,CACL3N,KAAM,OACN6M,aAAc,MACdC,UAAW,SAACP,GACI,UAAVA,EAAEnG,KAA6B,gBAAVmG,EAAEnG,KACzBmG,EAAES,iBAGU,cAAVT,EAAEnG,KACJmG,EAAES,gBAEN,EACAV,SAAU,SAACC,GAAO,IAADmD,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EACfjL,EACEX,GAAc,CACZC,OAAAA,EACAC,UAAWkI,EAAEC,cAAczE,OAAS,GACpCzD,eAAiC,QAAnBoL,EAAE9J,EAAUkC,eAAO,IAAA4H,OAAA,EAAjBA,EAAmB1H,cACnCzD,UAA4B,QAAnBoL,EAAE/J,EAAUkC,eAAO,IAAA6H,OAAA,EAAjBA,EAAmB5H,MAC9BvD,UAAWyD,EAA4B,QAAhB2H,EAAC9J,EAAQgC,eAAO,IAAA8H,OAAA,EAAfA,EAAiB7H,OACrC,IAAIrD,KAAoB,QAAhBmL,EAAC/J,EAAQgC,eAAO,IAAA+H,OAAA,EAAfA,EAAiB9H,OAC1B,IAAIrD,KACRC,QAA2B,QAApBmL,EAAEtK,EAAWsC,eAAO,IAAAgI,OAAA,EAAlBA,EAAoB/H,MAC7BnD,aAAiC,QAArBmL,EAAEtK,EAAYqC,eAAO,IAAAiI,OAAA,EAAnBA,EAAqBhI,QAGzC,EACAvG,MAAO,CAAEQ,MAAO,UAElBgN,SAAUnJ,KAGZjG,EAAAA,EAAAA,KAAC8M,EAAAA,GAAW,CACVvM,MAAO,CACLX,MAAO,GACPgC,MAAO,CACLC,QAAS,SAGbuO,IAAKrK,EACLgH,UAAW/G,EACXqG,eAAgB,CACdrK,KAAM,GAERgL,OAAQ,CACNpL,MAAO,CAAEI,KAAM,EAAGC,OAAQ,QAC1BgL,aAAc,MACdC,UAAW,SAACP,GACK,gBAAXA,EAAEQ,MAAqC,UAAXR,EAAEQ,MAChCR,EAAES,gBAEN,EACAV,SAAU,SAACC,GAAO,IAAD0D,EAAAC,EAAAC,EAAAC,EAAAC,EACfvL,EACEX,GAAc,CACZC,OAAAA,EACAC,WAA+B,QAApB4L,EAAApK,EAAaiC,eAAO,IAAAmI,OAAA,EAApBA,EAAsBlI,QAAS,GAC1CzD,eAAgBiI,EAAEC,cAAcxE,cAChCzD,UAAWgI,EAAEC,cAAczE,MAC3BvD,UAAWyD,EAA4B,QAAhBiI,EAACpK,EAAQgC,eAAO,IAAAoI,OAAA,EAAfA,EAAiBnI,OACrC,IAAIrD,KAAoB,QAAhByL,EAACrK,EAAQgC,eAAO,IAAAqI,OAAA,EAAfA,EAAiBpI,OAC1B,IAAIrD,KACRC,QAA2B,QAApByL,EAAE5K,EAAWsC,eAAO,IAAAsI,OAAA,EAAlBA,EAAoBrI,MAC7BnD,aAAiC,QAArByL,EAAE5K,EAAYqC,eAAO,IAAAuI,OAAA,EAAnBA,EAAqBtI,QAGzC,GAEFyF,WAAY,GACZC,OAAQ,cACRhM,QAAS,oBAIf7B,EAAAA,EAAAA,KAAC8N,EAAAA,GAAS,CACRvN,MAAO,CACLX,MAAO,UACPgC,MAAO,CACLiB,SAAU,OACV0J,WAAY,OACZnK,MAAO,SAGX2L,MAAO,CACL3N,KAAM,OACN6M,cAAcpI,EAAAA,EAAAA,GAAO,IAAIC,KAAQ,cACjCoI,UAAW,SAACP,GACI,UAAVA,EAAEnG,KAA6B,gBAAVmG,EAAEnG,KACzBmG,EAAES,iBAGU,cAAVT,EAAEnG,KACJmG,EAAES,gBAEN,EACAV,SAAU,SAACC,GAAO,IAAD+D,EAAAC,EAAAC,EAAAC,EAAAC,EACf5L,EACEX,GAAc,CACZC,OAAAA,EACAC,WAA+B,QAApBiM,EAAAzK,EAAaiC,eAAO,IAAAwI,OAAA,EAApBA,EAAsBvI,QAAS,GAC1CzD,eAAiC,QAAnBiM,EAAE3K,EAAUkC,eAAO,IAAAyI,OAAA,EAAjBA,EAAmBvI,cACnCzD,UAA4B,QAAnBiM,EAAE5K,EAAUkC,eAAO,IAAA0I,OAAA,EAAjBA,EAAmBzI,MAC9BvD,UAAWyD,EAAasE,EAAEC,cAAczE,OACpC,IAAIrD,KAAK6H,EAAEC,cAAczE,OACzB,IAAIrD,KACRC,QAA2B,QAApB8L,EAAEjL,EAAWsC,eAAO,IAAA2I,OAAA,EAAlBA,EAAoB1I,MAC7BnD,aAAiC,QAArB8L,EAAEjL,EAAYqC,eAAO,IAAA4I,OAAA,EAAnBA,EAAqB3I,QAGzC,EACAvG,MAAO,CAAEQ,MAAO,sBAElBgN,SAAUlJ,KAEZrG,EAAAA,EAAAA,MAAA,YACE+B,MAAO,CACLO,OAAQ,oBACR4O,aAAc,MACdpO,SAAU,WACVP,MAAO,OACPH,OAAQ,OACR+O,OAAQ,WACRzO,QAAS,OACTV,QAAS,OACTS,OAAQ,OACRD,cAAe,UACftC,SAAA,EAEFC,EAAAA,EAAAA,KAAC8M,EAAAA,GAAW,CACVvM,MAAO,CACLX,MAAO,SACPgC,MAAO,CACLiB,SAAU,OACV0J,WAAY,OACZnK,MAAO,SAGX2K,UAAW5G,EACX6G,OAAQ,CACNpL,MAAO,CAAEQ,MAAO,oBAAqBH,OAAQ,QAC7CgL,aAAc,eACdC,UAAW,SAACP,GACK,gBAAXA,EAAEQ,MAAqC,UAAXR,EAAEQ,MAChCR,EAAES,gBAEN,GAEFQ,WAAY,CAAC,CAAEpH,IAAK,QAAU,CAAEA,IAAK,wBACrCqH,OAAQ,MACRhM,QAAS,SAEX7B,EAAAA,EAAAA,KAAC8M,EAAAA,GAAW,CACVvM,MAAO,CACLX,MAAO,UACPgC,MAAO,CACLiB,SAAU,OACV0J,WAAY,OACZnK,MAAO,SAGX2K,UAAW3G,EACX4G,OAAQ,CACNpL,MAAO,CAAEQ,MAAO,oBAAqBH,OAAQ,QAC7CgL,aAAc,eACdC,UAAW,SAACP,GACK,gBAAXA,EAAEQ,MAAqC,UAAXR,EAAEQ,MAChCR,EAAES,gBAEN,GAEFQ,WAAY,CAAC,CAAEpH,IAAK,aAAe,CAAEA,IAAK,eAC1CqH,OAAQ,MACRhM,QAAS,YAGb7B,EAAAA,EAAAA,KAACiR,EAAAA,EAAM,CACL7N,QA1dR,WAA2B,IAAD8N,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EACxBzF,GAAqB,CACnBrM,MAAAA,EACA4E,OAAyB,QAAnB0M,EAAEvL,EAAUuC,eAAO,IAAAgJ,OAAA,EAAjBA,EAAmB/I,MAC3BpD,QAA2B,QAApBoM,EAAEvL,EAAWsC,eAAO,IAAAiJ,OAAA,EAAlBA,EAAoBhJ,MAC7BwJ,YAAgC,QAArBP,EAAEvL,EAAYqC,eAAO,IAAAkJ,OAAA,EAAnBA,EAAqBjJ,MAClC9C,MAAuB,QAAlBgM,EAAEvL,EAASoC,eAAO,IAAAmJ,OAAA,EAAhBA,EAAkBjJ,cACzB3D,UAA+B,QAAtB6M,EAAErL,EAAaiC,eAAO,IAAAoJ,OAAA,EAApBA,EAAsBnJ,MACjCxD,WAA4B,QAAjB4M,EAAAvL,EAAUkC,eAAO,IAAAqJ,OAAA,EAAjBA,EAAmBpJ,QAAS,GACvCyJ,KAAqB,QAAjBJ,EAAEtL,EAAQgC,eAAO,IAAAsJ,OAAA,EAAfA,EAAiBrJ,MACvB0J,KAAqB,QAAjBJ,EAAEtL,EAAQ+B,eAAO,IAAAuJ,OAAA,EAAfA,EAAiBrJ,cACvB0J,MAAsB,QAAjBJ,EAAEvL,EAAQ+B,eAAO,IAAAwJ,OAAA,EAAfA,EAAiBtJ,eAE5B,EA8cQlF,MAAM,UACN6O,QAAQ,YACR9C,GAAI,CAAEhN,OAAQ,OAAQY,SAAU,OAAQT,MAAO,QAASrC,SACzD,wBAIHC,EAAAA,EAAAA,KAAC2I,EAAkC,CACjCyH,IAAKlM,MAIb,CACA,SAASZ,IAAwB,IAAD0O,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EACxBnO,GAAwCC,EAAAA,EAAAA,QAAY,MAC1DmO,GAA0B3R,EAAAA,EAAAA,YAAWC,EAAAA,GAA7BF,EAAI4R,EAAJ5R,KAAM2D,EAAOiO,EAAPjO,QACdkO,GAA0BzR,EAAAA,EAAAA,UACxByD,GAAc,CACZc,MAAO,EACPsM,YAAa,sBACb5M,QAAS,UACTyN,SAAU,IAAI1N,KACd2N,OAAQ,IAAI3N,QAEf4N,GAAA1R,EAAAA,EAAAA,GAAAuR,EAAA,GARM3S,EAAK8S,EAAA,GAAExN,EAAQwN,EAAA,GAStBC,GAA0B7R,EAAAA,EAAAA,UAAS,OAAM8R,GAAA5R,EAAAA,EAAAA,GAAA2R,EAAA,GAAlCtN,EAAKuN,EAAA,GAAEtN,EAAQsN,EAAA,GAChBlN,GAAWvB,EAAAA,EAAAA,QAA4B,MACvCyB,GAAazB,EAAAA,EAAAA,QAAyB,MACtC0B,GAAc1B,EAAAA,EAAAA,QAAyB,MACvC2B,GAAW3B,EAAAA,EAAAA,QAA0B,MAErC4B,GAAa5B,EAAAA,EAAAA,QAAY,MACzB8B,GAAe9B,EAAAA,EAAAA,QAAyB,MAExC0O,GAAc1O,EAAAA,EAAAA,QAAyB,MACvC2O,GAAY3O,EAAAA,EAAAA,QAAyB,MAErC4O,GAAY5O,EAAAA,EAAAA,QAA0B,MACtC6O,GAAW7O,EAAAA,EAAAA,QAA0B,MAErC8O,GAAU9O,EAAAA,EAAAA,QAAyB,MACnC+O,GAAU/O,EAAAA,EAAAA,QAAO,IAEjBgP,GAAahP,EAAAA,EAAAA,QAAyB,MACtCiP,GAAejP,EAAAA,EAAAA,QAAO,IAE5BkP,GAII/M,EAAAA,EAAAA,IAAkC,CACpC9C,KAAM,+CACN+C,OAAQ,CACN,CAAEC,IAAK,OAAQjG,MAAO,OAAQ6B,MAAO,IACrC,CAAEoE,IAAK,QAASjG,MAAO,QAAS6B,MAAO,KACvC,CACEoE,IAAK,aACLjG,MAAO,aACP6B,MAAO,MAGXqE,gBAAgB,SAAD6M,EAAAC,EAAAC,EAAAC,GAAA,OAAAzB,EAAAA,IAAAlL,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAE,SAAA0M,EAAOxM,EAAaC,EAAQC,EAAaC,GAAO,OAAAN,EAAAA,EAAAA,KAAAO,MAAA,SAAAqM,GAAA,cAAAA,EAAAnM,KAAAmM,EAAAlM,MAAA,OAC3DP,KACFQ,EAAAA,EAAAA,GAAK,KAAKC,MAAK,WAAO,IAADiM,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EACftO,EAAWsC,UACbtC,EAAWsC,QAAQC,MAAQjB,EAAO,IAEhCrB,EAAYqC,UACdrC,EAAYqC,QAAQC,MAAQjB,EAAO,IAGrChC,EACEX,GAAc,CACZc,MAAuB,QAAlBuO,EAAE9N,EAASoC,eAAO,IAAA0L,OAAA,EAAhBA,EAAkBxL,cACzBuJ,YAAazK,EAAO,GACpBnC,QAASmC,EAAO,GAChBiN,UAAWjB,EAAQhL,QACnBkM,QAAwB,QAAjBP,EAAEZ,EAAQ/K,eAAO,IAAA2L,OAAA,EAAfA,EAAiB1L,MAC1BqK,SAAUnK,EAAgC,QAApByL,EAACjB,EAAY3K,eAAO,IAAA4L,OAAA,EAAnBA,EAAqB3L,OACxC,IAAIrD,KAAwB,QAApBiP,EAAClB,EAAY3K,eAAO,IAAA6L,OAAA,EAAnBA,EAAqB5L,OAC9B,IAAIrD,KACR2N,OAAQpK,EAA8B,QAAlB2L,EAAClB,EAAU5K,eAAO,IAAA8L,OAAA,EAAjBA,EAAmB7L,OACpC,IAAIrD,KAAsB,QAAlBmP,EAACnB,EAAU5K,eAAO,IAAA+L,OAAA,EAAjBA,EAAmB9L,OAC5B,IAAIrD,QAII,QAAhBoP,EAAApO,EAASoC,eAAO,IAAAgM,GAAhBA,EAAkB5L,OACpB,IAEAC,KACD,wBAAAoL,EAAAnL,OAAA,GAAAkL,EAAA,MACFjL,MAAA,KAAAC,UAAA,IA7CuBC,EAAkC0K,EAA1DzK,uBACWC,EAAqBwK,EAAhCvK,UACYP,EAAsB8K,EAAlCtK,WA6CFsL,IAII/N,EAAAA,EAAAA,IAAkC,CACpC9C,KAAM,wCACN+C,OAAQ,CACN,CAAEC,IAAK,OAAQjG,MAAO,OAAQ6B,MAAO,IACrC,CAAEoE,IAAK,OAAQjG,MAAO,SAAU6B,MAAO,KACvC,CACEoE,IAAK,OACLjG,MAAO,OACP6B,MAAO,KAET,CACEoE,IAAK,YACLjG,MAAO,YACP6B,MAAO,EACPkS,MAAM,IAGV7N,gBAAgB,SAAD8N,EAAAC,EAAAC,EAAAC,GAAA,OAAAzC,EAAAA,IAAAnL,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAE,SAAA2N,EAAOzN,EAAaC,EAAQC,EAAaC,GAAO,OAAAN,EAAAA,EAAAA,KAAAO,MAAA,SAAAsN,GAAA,cAAAA,EAAApN,KAAAoN,EAAAnN,MAAA,OAC3DP,KACFQ,EAAAA,EAAAA,GAAK,KAAKC,MAAK,WAAO,IAADkN,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EACfjC,EAAQ/K,UACV+K,EAAQ/K,QAAQC,MAAQjB,EAAO,IAEjCgM,EAAQhL,QAAUhB,EAAO,GACzBhC,EACEX,GAAc,CACZc,MAAO,EACPsM,YAAgC,QAArBkD,EAAEhP,EAAYqC,eAAO,IAAA2M,OAAA,EAAnBA,EAAqB1M,MAClCpD,QAA2B,QAApB+P,EAAElP,EAAWsC,eAAO,IAAA4M,OAAA,EAAlBA,EAAoB3M,MAC7BgM,UAAWjN,EAAO,GAClBkN,QAASlN,EAAO,GAChBsL,SAAUnK,EAAgC,QAApB0M,EAAClC,EAAY3K,eAAO,IAAA6M,OAAA,EAAnBA,EAAqB5M,OACxC,IAAIrD,KAAwB,QAApBkQ,EAACnC,EAAY3K,eAAO,IAAA8M,OAAA,EAAnBA,EAAqB7M,OAC9B,IAAIrD,KACR2N,OAAQpK,EAA8B,QAAlB4M,EAACnC,EAAU5K,eAAO,IAAA+M,OAAA,EAAjBA,EAAmB9M,OACpC,IAAIrD,KAAsB,QAAlBoQ,EAACpC,EAAU5K,eAAO,IAAAgN,OAAA,EAAjBA,EAAmB/M,OAC5B,IAAIrD,OAGd,IACAqQ,MACD,wBAAAP,EAAApM,OAAA,GAAAmM,EAAA,MACFlM,MAAA,KAAAC,UAAA,IA7CuB0M,GAA4Bf,GAApDzL,uBACWyM,GAAehB,GAA1BvL,UACYqM,GAAgBd,GAA5BtL,WA6CFuM,IAIIhP,EAAAA,EAAAA,IAAkC,CACpC9C,KAAM,gDACN+C,OAAQ,CACN,CAAEC,IAAK,UAAWjG,MAAO,UAAW6B,MAAO,IAC3C,CAAEoE,IAAK,YAAajG,MAAO,YAAa6B,MAAO,MAEjDqE,gBAAgB,SAAD8O,EAAAC,EAAAC,EAAAC,GAAA,OAAAxD,EAAAA,IAAApL,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAE,SAAA2O,EAAOzO,EAAaC,EAAQC,EAAaC,GAAO,OAAAN,EAAAA,EAAAA,KAAAO,MAAA,SAAAsO,GAAA,cAAAA,EAAApO,KAAAoO,EAAAnO,MAAA,OAC3DP,KACFQ,EAAAA,EAAAA,GAAK,KAAKC,MAAK,WAAO,IAADkO,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EACf/C,EAAWjL,UACbiL,EAAWjL,QAAQC,MAAQjB,EAAO,IAEpCkM,EAAalL,QAAUhB,EAAO,GAE9BhC,EACEX,GAAc,CACZc,MAAO,EACPsM,YAAgC,QAArBkE,EAAEhQ,EAAYqC,eAAO,IAAA2N,OAAA,EAAnBA,EAAqB1N,MAClCpD,QAA2B,QAApB+Q,EAAElQ,EAAWsC,eAAO,IAAA4N,OAAA,EAAlBA,EAAoB3N,MAC7BgM,UAAWjN,EAAO,GAClBkN,QAASlN,EAAO,GAChBsL,SAAUnK,EAAgC,QAApB0N,EAAClD,EAAY3K,eAAO,IAAA6N,OAAA,EAAnBA,EAAqB5N,OACxC,IAAIrD,KAAwB,QAApBkR,EAACnD,EAAY3K,eAAO,IAAA8N,OAAA,EAAnBA,EAAqB7N,OAC9B,IAAIrD,KACR2N,OAAQpK,EAA8B,QAAlB4N,EAACnD,EAAU5K,eAAO,IAAA+N,OAAA,EAAjBA,EAAmB9N,OACpC,IAAIrD,KAAsB,QAAlBoR,EAACpD,EAAU5K,eAAO,IAAAgO,OAAA,EAAjBA,EAAmB/N,OAC5B,IAAIrD,OAGd,IACAqR,MACD,wBAAAP,EAAApN,OAAA,GAAAmN,EAAA,MACFlN,MAAA,KAAAC,UAAA,IAnCuB0N,GAAgCd,GAAxD1M,uBACWyN,GAAmBf,GAA9BxM,UACYqN,GAAoBb,GAAhCvM,WAoCFuN,IACErN,EAAAA,EAAAA,aAAY,CACVC,YAAa,YACbC,WAAW,SAADoN,GAAA,OAAApE,EAAAA,IAAArL,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAE,SAAAwP,EAAOlN,GAAa,OAAAvC,EAAAA,EAAAA,KAAAO,MAAA,SAAAmP,GAAA,cAAAA,EAAAjP,KAAAiP,EAAAhP,MAAA,cAAAgP,EAAAhP,KAAA,EACxBpD,EAAQmF,KAAK,mDAEjBF,EACA,CACEG,QAAS,CACPC,cAAc,UAADzJ,OAAgB,OAAJS,QAAI,IAAJA,OAAI,EAAJA,EAAMiJ,gBAGpC,cAAA8M,EAAA7M,OAAA,SAAA6M,EAAA5M,MAAA,wBAAA4M,EAAAjO,OAAA,GAAAgO,EAAA,MAAA/N,MAAA,KAAAC,UAAA,EACHoB,UAAS,SAACC,GACJA,EAAIC,KAAKC,SACXlE,EAAWmC,QAAQgC,cAAc,CAC/B,CAAEC,YAAa,QAAOlK,QAAAmK,EAAAA,EAAAA,GACnBL,EAAIC,KAAKA,OAGlB,IApBeK,GAAkBiM,GAA7BhM,UAAuCC,GAAe+L,GAAvB9L,OAuBvC,SAASjG,GAAamS,GAQb,IAPPrR,EAAKqR,EAALrR,MACAsM,EAAW+E,EAAX/E,YACA5M,EAAO2R,EAAP3R,QACAoP,EAASuC,EAATvC,UACAC,EAAOsC,EAAPtC,QACA5B,EAAQkE,EAARlE,SACAC,EAAMiE,EAANjE,OAMIkE,EAAQ,KAiBZ,OAfc,IAAVtR,EACFsR,GAAK,YAAA1W,OAAgBkU,EAAS,MAAAlU,OAAKmU,GAAW,GAAE,KAC7B,IAAV/O,IACTsR,GAAK,iBAAA1W,OAAqBkU,EAAS,MAAAlU,OAAKmU,GAAW,GAAE,MAGjC,GAAAnU,OAThB,kDAS4B,sCAAAA,OAE3B0R,EAAW,MAAA1R,OAAK8E,EAAO,KAAA9E,OAAc,IAAVoF,EAAc,GAAKsR,EAAK,sBAAA1W,QAC5C4E,EAAAA,EAAAA,GAAO,IAAIC,KAAK0N,GAAW,iBAAgB,QAAAvS,QAAO4E,EAAAA,EAAAA,GAC9D,IAAIC,KAAK2N,GACT,iBACD,KAIH,CAuBA,IAAAmE,IACE3N,EAAAA,EAAAA,aAAY,CACVC,YAAa,kBACbC,WAAW,SAAD0N,GAAA,OAAAzE,EAAAA,IAAAtL,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAE,SAAA8P,EAAOjM,GAAc,OAAA9D,EAAAA,EAAAA,KAAAO,MAAA,SAAAyP,GAAA,cAAAA,EAAAvP,KAAAuP,EAAAtP,MAAA,cAAAsP,EAAAtP,KAAA,EAClBpD,EAAQmF,KACnB,+DACAqB,EACA,CACEE,aAAc,cACdtB,QAAS,CACPC,cAAc,UAADzJ,OAAgB,OAAJS,QAAI,IAAJA,OAAI,EAAJA,EAAMiJ,gBAGnC,KAAD,SAAAoN,EAAAnN,OAAA,SAAAmN,EAAAlN,MAAA,wBAAAkN,EAAAvO,OAAA,GAAAsO,EAAA,MACFrO,MAAA,KAAAC,UAAA,EACDoB,UAAW,SAACkB,GACV,IAAMC,EAAU,IAAIC,KAAK,CAACF,EAAShB,MAAO,CAAE5J,KAAM,oBAC5C+K,EAASC,IAAIC,gBAAgBJ,GAEnC,GAAIK,EAAAA,GAAU,CAEZ,IAAM9H,EAAO+H,SAASC,cAAc,KAMpC,OALAhI,EAAKnD,KAAO8K,EACZ3H,EAAKiI,SAAW,aAChBF,SAASG,KAAKC,YAAYnI,GAC1BA,EAAKoI,aACLL,SAASG,KAAKG,YAAYrI,EAE5B,CACEsI,OAAOC,KAAK,IAAD9L,OAEPC,QAAgC,0BAAAD,OACT+L,mBAAmBb,IAC5C,SAGN,IApCYc,GAAoB2K,GAA5BpM,OAAyC0B,GAAuB0K,GAAlCtM,UAuCtC,OACEzK,EAAAA,EAAAA,MAAA4B,EAAAA,SAAA,CAAA1B,SAAA,EACIsK,IAAsB6B,MAA4BlM,EAAAA,EAAAA,KAACmM,EAAAA,EAAO,KAC5DtM,EAAAA,EAAAA,MAAA,OACE+B,MAAO,CACLC,QAAS,OACTG,KAAM,EACNK,cAAe,SACfE,QAAS,MACTD,OAAQ,OACRvC,SAAA,EAEFC,EAAAA,EAAAA,KAACoM,EAAAA,GAAa,CACZC,eAAgB,CACdC,aAAc,QAEhB/L,MAAO,CACLX,MAAO,WACPgC,MAAO,CACLiB,SAAU,OACV0J,WAAY,OACZnK,MAAO,QACPP,QAAS,SAGb2K,SAAU,CACRC,KAAM,EACN7K,MAAO,CAAEI,KAAM,GACfmG,MAAOvI,EACP8M,SAAU,SAACC,GACTzH,EAASyH,EAAEC,cAAczE,MAC3B,GAEF0E,UAAWnH,KAEb1F,EAAAA,EAAAA,KAAC8N,EAAAA,GAAS,CACRvN,MAAO,CACLX,MAAO,aACPgC,MAAO,CACLiB,SAAU,OACV0J,WAAY,OACZnK,MAAO,SAGX2L,MAAO,CACLpM,UAAW,8BACXvB,KAAM,OACN6M,aAAc,UACdC,UAAU,SAAD8J,GAAA,OAAA3E,EAAAA,IAAAvL,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAE,SAAAiQ,EAAOtK,GAAC,IAAAxE,EAAA6C,EAAA,OAAAjE,EAAAA,EAAAA,KAAAO,MAAA,SAAA4P,GAAA,cAAAA,EAAA1P,KAAA0P,EAAAzP,MAAA,UACH,UAAVkF,EAAEnG,KAA6B,gBAAVmG,EAAEnG,IAAqB,CAAA0Q,EAAAzP,KAAA,QAEX,OADnCkF,EAAES,iBACIjF,EAAQwE,EAAEC,cAAczE,MAAK+O,EAAAzP,KAAA,EAE3BvD,EAAsCgE,QAAQkG,kBAClD,CAAEC,OAAQlG,IACV,KAAD,GAHG6C,EAAQkM,EAAArN,MAKDG,KAAKA,KAAKsE,OAAS,GAC9B5G,EAAAA,EAAAA,GAAK,KAAKC,MAAK,WAAO,IAADwP,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EACf7R,EAAWsC,UACbtC,EAAWsC,QAAQC,MAAQ6C,EAAShB,KAAKA,KAAK,GAAG6E,MAE/ChJ,EAAYqC,UACdrC,EAAYqC,QAAQC,MAAQ6C,EAAShB,KAAKA,KAAK,GAAG8E,OAGpD5J,EACEX,GAAc,CACZc,MAAuB,QAAlB8R,EAAErR,EAASoC,eAAO,IAAAiP,OAAA,EAAhBA,EAAkB/O,cACzBuJ,YAAa3G,EAAShB,KAAKA,KAAK,GAAG8E,MACnC/J,QAASiG,EAAShB,KAAKA,KAAK,GAAG6E,KAC/BsF,UAAWjB,EAAQhL,QACnBkM,QAAwB,QAAjBgD,EAAEnE,EAAQ/K,eAAO,IAAAkP,OAAA,EAAfA,EAAiBjP,MAC1BqK,SAAUnK,EACW,QADCgP,EACpBxE,EAAY3K,eAAO,IAAAmP,OAAA,EAAnBA,EAAqBlP,OAEnB,IAAIrD,KAAwB,QAApBwS,EAACzE,EAAY3K,eAAO,IAAAoP,OAAA,EAAnBA,EAAqBnP,OAC9B,IAAIrD,KACR2N,OAAQpK,EAA8B,QAAlBkP,EAACzE,EAAU5K,eAAO,IAAAqP,OAAA,EAAjBA,EAAmBpP,OACpC,IAAIrD,KAAsB,QAAlB0S,EAAC1E,EAAU5K,eAAO,IAAAsP,OAAA,EAAjBA,EAAmBrP,OAC5B,IAAIrD,QAII,QAAhB2S,EAAA3R,EAASoC,eAAO,IAAAuP,GAAhBA,EAAkBnP,OACpB,IAEAO,EAAsBV,GACvB,OAEW,cAAVwE,EAAEnG,KACJmG,EAAES,iBACH,wBAAA8J,EAAA1O,OAAA,GAAAyO,EAAA,MACFxO,MAAA,KAAAC,UAAA,EACD9G,MAAO,CAAEQ,MAAO,sBAElB2M,MACE/O,EAAAA,EAAAA,KAACgP,EAAAA,EAAU,CACTC,GAAI,CACFpM,SAAU,UAIhBsM,YAAa,SAACxC,GACZA,EAAES,iBACExH,EAAWsC,SACbW,EAAsBjD,EAAWsC,QAAQC,MAE7C,EACAiH,SAAUxJ,KAEZ5F,EAAAA,EAAAA,KAAC8N,EAAAA,GAAS,CACRvN,MAAO,CACLX,MAAO,GACPgC,MAAO,CACLC,QAAS,SAGbkM,MAAO,CACLsB,UAAU,EACVpC,aAAc,sBACd7M,KAAM,OACN8M,UAAW,SAACP,GACI,UAAVA,EAAEnG,KAA6B,gBAAVmG,EAAEnG,KACzBmG,EAAES,iBAGU,cAAVT,EAAEnG,KACJmG,EAAES,gBAEN,EACAxL,MAAO,CAAEQ,MAAO,SAElBgN,SAAUvJ,KAGZhG,EAAAA,EAAAA,MAAA,OACE+B,MAAO,CACLC,QAAS,OACTY,UAAW,MACXX,WAAY,UACZ/B,SAAA,EAEFC,EAAAA,EAAAA,KAAC8M,EAAAA,GAAW,CACVvM,MAAO,CACLX,MAAO,eACPgC,MAAO,CACLiB,SAAU,OACV0J,WAAY,OACZnK,MAAO,SAGX2K,UAAWjH,EACXuG,eAAgB,CAAErK,KAAM,GACxBgL,OAAQ,CACNpL,MAAO,CAAEI,KAAM,EAAGC,OAAQ,QAC1BkG,MAAO9C,EACP6H,UAAW,SAACP,GACK,gBAAXA,EAAEQ,MAAqC,UAAXR,EAAEQ,MAChCR,EAAES,gBAEN,EACAV,SAAU,SAACC,GAAO,IAAD+K,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EACuB,IAAlCtL,EAAEC,cAAcxE,eAClBmC,GAAgB,CAAC,GAGnBjF,EAASqH,EAAEkD,OAAO1H,OAElBjD,EACEX,GAAc,CACZc,MAAuB,QAAlBqS,EAAE5R,EAASoC,eAAO,IAAAwP,OAAA,EAAhBA,EAAkBtP,cACzBuJ,YAAgC,QAArBgG,EAAE9R,EAAYqC,eAAO,IAAAyP,OAAA,EAAnBA,EAAqBxP,MAClCpD,QAA2B,QAApB6S,EAAEhS,EAAWsC,eAAO,IAAA0P,OAAA,EAAlBA,EAAoBzP,MAC7BgM,UAAWjB,EAAQhL,QACnBkM,QAAwB,QAAjByD,EAAE5E,EAAQ/K,eAAO,IAAA2P,OAAA,EAAfA,EAAiB1P,MAC1BqK,SAAUnK,EAAgC,QAApByP,EAACjF,EAAY3K,eAAO,IAAA4P,OAAA,EAAnBA,EAAqB3P,OACxC,IAAIrD,KAAwB,QAApBiT,EAAClF,EAAY3K,eAAO,IAAA6P,OAAA,EAAnBA,EAAqB5P,OAC9B,IAAIrD,KACR2N,OAAQpK,EAA8B,QAAlB2P,EAAClF,EAAU5K,eAAO,IAAA8P,OAAA,EAAjBA,EAAmB7P,OACpC,IAAIrD,KAAsB,QAAlBmT,EAACnF,EAAU5K,eAAO,IAAA+P,OAAA,EAAjBA,EAAmB9P,OAC5B,IAAIrD,OAGd,GAEF8I,WAAY,CACV,CAAEpH,IAAK,OACP,CAAEA,IAAK,QACP,CAAEA,IAAK,eAETqH,OAAQ,MACRhM,QAAS,QAEA,QAAVwD,IACCrF,EAAAA,EAAAA,KAAC8N,EAAAA,GAAS,CACRzB,eAAgB,CACdrK,KAAM,GAERzB,MAAO,CACLX,MAAO,GACPgC,MAAO,CACLC,QAAS,SAGbkM,MAAO,CACLC,UAAU,EACVqB,UAAU,EACVjP,KAAM,OACN6M,aAAc,GACdC,UAAW,SAACP,GACI,UAAVA,EAAEnG,KAA6B,gBAAVmG,EAAEnG,KACzBmG,EAAES,iBAGU,cAAVT,EAAEnG,KACJmG,EAAES,gBAEN,EACAV,SAAU,SAACC,GAAO,EAClB/K,MAAO,CAAEQ,MAAO,SAElBgN,SAAUnJ,IAGH,SAAVZ,IACCrF,EAAAA,EAAAA,KAAC8N,EAAAA,GAAS,CACRvN,MAAO,CACLX,MAAO,kBACPgC,MAAO,CACLiB,SAAU,OACV0J,WAAY,OACZnK,MAAO,QACPP,QAAS,SAGbwK,eAAgB,CAAErK,KAAM,GACxB+L,MAAO,CACL3N,KAAM,OACNwB,MAAO,CAAEQ,MAAO,OAAQH,OAAQ,QAChCiL,UAAW,SAACP,GACI,UAAVA,EAAEnG,KAA6B,gBAAVmG,EAAEnG,MACzBmG,EAAES,iBACFiI,GAAgB1I,EAAEC,cAAczE,OAEpC,GAEFiH,SAAU6D,EACVlE,MACE/O,EAAAA,EAAAA,KAACkY,EAAAA,EAAgB,CACfjJ,GAAI,CACFpM,SAAU,OACVK,MAAO,WAIbiM,YAAa,SAACxC,GACZA,EAAES,iBACE6F,EAAQ/K,SACVmN,GAAgBpC,EAAQ/K,QAAQC,MAEpC,IAGO,eAAV9C,IACCrF,EAAAA,EAAAA,KAAC8N,EAAAA,GAAS,CACRvN,MAAO,CACLX,MAAO,GACPgC,MAAO,CACLC,QAAS,SAGbwK,eAAgB,CAAErK,KAAM,GACxB+L,MAAO,CACL3N,KAAM,OACNwB,MAAO,CAAEQ,MAAO,OAAQH,OAAQ,QAChCiL,UAAW,SAACP,GACI,UAAVA,EAAEnG,KAA6B,gBAAVmG,EAAEnG,MACzBmG,EAAES,iBACFiJ,GAAoB1J,EAAEC,cAAczE,OAExC,GAEFiH,SAAU+D,EACVpE,MACE/O,EAAAA,EAAAA,KAACkY,EAAAA,EAAgB,CACfjJ,GAAI,CACFpM,SAAU,OACVK,MAAO,WAIbiM,YAAa,SAACxC,GACZA,EAAES,iBACE+F,EAAWjL,SACbmO,GAAoBlD,EAAWjL,QAAQC,MAE3C,QAINnI,EAAAA,EAAAA,KAAC8N,EAAAA,GAAS,CACRvN,MAAO,CACLX,MAAO,eACPgC,MAAO,CACLiB,SAAU,OACV0J,WAAY,OACZnK,MAAO,SAGX2L,MAAO,CACL3N,KAAM,OACN6M,cAAcpI,EAAAA,EAAAA,GAAO,IAAIC,KAAQ,cACjCoI,UAAW,SAACP,GACI,UAAVA,EAAEnG,KAA6B,gBAAVmG,EAAEnG,KACzBmG,EAAES,iBAGU,cAAVT,EAAEnG,KACJmG,EAAES,gBAEN,EACA+K,OAAQ,SAACxL,GACgB,IAADyL,EAAAC,EAAAC,EAAAC,EAAAC,EAAtB,GAAc,SAAVnT,EACFH,EACEX,GAAc,CACZc,MAAO,EACPsM,YAA+B,QAApByG,EAAExS,EAAWsC,eAAO,IAAAkQ,OAAA,EAAlBA,EAAoBjQ,MACjCpD,QAA4B,QAArBsT,EAAExS,EAAYqC,eAAO,IAAAmQ,OAAA,EAAnBA,EAAqBlQ,MAC9BgM,UAAWjB,EAAQhL,QACnBkM,QAAwB,QAAjBkE,EAAErF,EAAQ/K,eAAO,IAAAoQ,OAAA,EAAfA,EAAiBnQ,MAC1BqK,SAAUnK,EAAasE,EAAEC,cAAczE,OACnC,IAAIrD,KAAK6H,EAAEC,cAAczE,OACzB,IAAIrD,KACR2N,OAAQpK,EAA8B,QAAlBkQ,EAACzF,EAAU5K,eAAO,IAAAqQ,OAAA,EAAjBA,EAAmBpQ,OACpC,IAAIrD,KAAsB,QAAlB0T,EAAC1F,EAAU5K,eAAO,IAAAsQ,OAAA,EAAjBA,EAAmBrQ,OAC5B,IAAIrD,aAGP,GAAc,SAAVO,EAAkB,CAAC,IAADoT,EAAAC,EAAAC,EAAAC,EAAAC,EAC3B3T,EACEX,GAAc,CACZc,MAAO,EACPsM,YAA+B,QAApB8G,EAAE7S,EAAWsC,eAAO,IAAAuQ,OAAA,EAAlBA,EAAoBtQ,MACjCpD,QAA4B,QAArB2T,EAAE7S,EAAYqC,eAAO,IAAAwQ,OAAA,EAAnBA,EAAqBvQ,MAC9BgM,UAAWf,EAAalL,QACxBkM,QAA2B,QAApBuE,EAAExF,EAAWjL,eAAO,IAAAyQ,OAAA,EAAlBA,EAAoBxQ,MAC7BqK,SAAUnK,EAAasE,EAAEC,cAAczE,OACnC,IAAIrD,KAAK6H,EAAEC,cAAczE,OACzB,IAAIrD,KACR2N,OAAQpK,EAA8B,QAAlBuQ,EAAC9F,EAAU5K,eAAO,IAAA0Q,OAAA,EAAjBA,EAAmBzQ,OACpC,IAAIrD,KAAsB,QAAlB+T,EAAC/F,EAAU5K,eAAO,IAAA2Q,OAAA,EAAjBA,EAAmB1Q,OAC5B,IAAIrD,OAGd,KAAO,CAAC,IAADgU,EAAAC,EAAAC,EAAAC,EACL/T,EACEX,GAAc,CACZc,MAAO,EACPsM,YAA+B,QAApBmH,EAAElT,EAAWsC,eAAO,IAAA4Q,OAAA,EAAlBA,EAAoB3Q,MACjCpD,QAA4B,QAArBgU,EAAElT,EAAYqC,eAAO,IAAA6Q,OAAA,EAAnBA,EAAqB5Q,MAC9BgM,UAAW,GACXC,QAAS,GACT5B,SAAUnK,EAAasE,EAAEC,cAAczE,OACnC,IAAIrD,KAAK6H,EAAEC,cAAczE,OACzB,IAAIrD,KACR2N,OAAQpK,EAA8B,QAAlB2Q,EAAClG,EAAU5K,eAAO,IAAA8Q,OAAA,EAAjBA,EAAmB7Q,OACpC,IAAIrD,KAAsB,QAAlBmU,EAACnG,EAAU5K,eAAO,IAAA+Q,OAAA,EAAjBA,EAAmB9Q,OAC5B,IAAIrD,OAGd,CACF,EACAlD,MAAO,CAAEQ,MAAO,sBAElBgN,SAAUyD,KAEZ7S,EAAAA,EAAAA,KAAC8N,EAAAA,GAAS,CACRvN,MAAO,CACLX,MAAO,aACPgC,MAAO,CACLiB,SAAU,OACV0J,WAAY,OACZnK,MAAO,SAGX2L,MAAO,CACL3N,KAAM,OACN6M,cAAcpI,EAAAA,EAAAA,GAAO,IAAIC,KAAQ,cACjCoI,UAAW,SAACP,GACI,UAAVA,EAAEnG,KAA6B,gBAAVmG,EAAEnG,KACzBmG,EAAES,iBAGU,cAAVT,EAAEnG,KACJmG,EAAES,gBAEN,EACAV,SAAU,SAACC,GAIc,IAADuM,EAAAC,EAAAC,EAAAC,EAAAC,EAAtB,GAAc,SAAVjU,EACFH,EACEX,GAAc,CACZc,MAAO,EACPsM,YAAgC,QAArBuH,EAAErT,EAAYqC,eAAO,IAAAgR,OAAA,EAAnBA,EAAqB/Q,MAClCpD,QAA2B,QAApBoU,EAAEvT,EAAWsC,eAAO,IAAAiR,OAAA,EAAlBA,EAAoBhR,MAC7BgM,UAAWjB,EAAQhL,QACnBkM,QAAwB,QAAjBgF,EAAEnG,EAAQ/K,eAAO,IAAAkR,OAAA,EAAfA,EAAiBjR,MAC1BqK,SAAUnK,EAAgC,QAApBgR,EAACxG,EAAY3K,eAAO,IAAAmR,OAAA,EAAnBA,EAAqBlR,OACxC,IAAIrD,KAAwB,QAApBwU,EAACzG,EAAY3K,eAAO,IAAAoR,OAAA,EAAnBA,EAAqBnR,OAC9B,IAAIrD,KACR2N,OAAQpK,EAAasE,EAAEC,cAAczE,OACjC,IAAIrD,KAAK6H,EAAEC,cAAczE,OACzB,IAAIrD,aAGP,GAAc,SAAVO,EAAkB,CAAC,IAADkU,EAAAC,EAAAC,EAAAC,EAAAC,EAC3BzU,EACEX,GAAc,CACZc,MAAO,EACPsM,YAAgC,QAArB4H,EAAE1T,EAAYqC,eAAO,IAAAqR,OAAA,EAAnBA,EAAqBpR,MAClCpD,QAA2B,QAApByU,EAAE5T,EAAWsC,eAAO,IAAAsR,OAAA,EAAlBA,EAAoBrR,MAC7BgM,UAAWf,EAAalL,QACxBkM,QAA2B,QAApBqF,EAAEtG,EAAWjL,eAAO,IAAAuR,OAAA,EAAlBA,EAAoBtR,MAC7BqK,SAAUnK,EAAgC,QAApBqR,EAAC7G,EAAY3K,eAAO,IAAAwR,OAAA,EAAnBA,EAAqBvR,OACxC,IAAIrD,KAAwB,QAApB6U,EAAC9G,EAAY3K,eAAO,IAAAyR,OAAA,EAAnBA,EAAqBxR,OAC9B,IAAIrD,KACR2N,OAAQpK,EAAasE,EAAEC,cAAczE,OACjC,IAAIrD,KAAK6H,EAAEC,cAAczE,OACzB,IAAIrD,OAGd,KAAO,CAAC,IAAD8U,EAAAC,EAAAC,EAAAC,EACL7U,EACEX,GAAc,CACZc,MAAO,EACPsM,YAA+B,QAApBiI,EAAEhU,EAAWsC,eAAO,IAAA0R,OAAA,EAAlBA,EAAoBzR,MACjCpD,QAA4B,QAArB8U,EAAEhU,EAAYqC,eAAO,IAAA2R,OAAA,EAAnBA,EAAqB1R,MAC9BgM,UAAW,GACXC,QAAS,GACT5B,SAAUnK,EAAgC,QAApByR,EAACjH,EAAY3K,eAAO,IAAA4R,OAAA,EAAnBA,EAAqB3R,OACxC,IAAIrD,KAAwB,QAApBiV,EAAClH,EAAY3K,eAAO,IAAA6R,OAAA,EAAnBA,EAAqB5R,OAC9B,IAAIrD,KACR2N,OAAQpK,EAAasE,EAAEC,cAAczE,OACjC,IAAIrD,KAAK6H,EAAEC,cAAczE,OACzB,IAAIrD,OAGd,CACF,EACAlD,MAAO,CAAEQ,MAAO,sBAElBgN,SAAU0D,KAEZjT,EAAAA,EAAAA,MAAA,YACE+B,MAAO,CACLO,OAAQ,oBACR4O,aAAc,MACdpO,SAAU,WACVP,MAAO,OACPH,OAAQ,OACR+O,OAAQ,WACRzO,QAAS,OACTV,QAAS,OACTS,OAAQ,OACRD,cAAe,UACftC,SAAA,EAEFC,EAAAA,EAAAA,KAAC8M,EAAAA,GAAW,CACVvM,MAAO,CACLX,MAAO,WACPgC,MAAO,CACLiB,SAAU,OACV0J,WAAY,OACZnK,MAAO,SAGX2K,UAAWgG,EACX/F,OAAQ,CACNpL,MAAO,CAAEQ,MAAO,oBAAqBH,OAAQ,QAC7CgL,aAAc,eACdC,UAAW,SAACP,GACK,gBAAXA,EAAEQ,MAAqC,UAAXR,EAAEQ,MAChCR,EAAES,gBAEN,GAEFQ,WAAY,CACV,CAAEpH,IAAK,sBACP,CAAEA,IAAK,yBAETqH,OAAQ,MACRhM,QAAS,SAEX7B,EAAAA,EAAAA,KAAC8M,EAAAA,GAAW,CACVvM,MAAO,CACLX,MAAO,UACPgC,MAAO,CACLiB,SAAU,OACV0J,WAAY,OACZnK,MAAO,SAGX2K,UAAWiG,EACXhG,OAAQ,CACNpL,MAAO,CAAEQ,MAAO,oBAAqBH,OAAQ,QAC7CgL,aAAc,eACdC,UAAW,SAACP,GACK,gBAAXA,EAAEQ,MAAqC,UAAXR,EAAEQ,MAChCR,EAAES,gBAEN,GAEFQ,WAAY,CACV,CAAEpH,IAAK,gBACP,CAAEA,IAAK,SACP,CAAEA,IAAK,YAETqH,OAAQ,MACRhM,QAAS,YAGb7B,EAAAA,EAAAA,KAACiR,EAAAA,EAAM,CACL7N,QAzkBR,WAA2B,IAAD4W,EAAAC,EAAAC,EAAAC,EAAAC,EAGFC,EAFlBC,EAAqB,GAEzB,GAAc,SAAVjV,EACFiV,EAA+B,QAAlBD,EAAGpH,EAAQ/K,eAAO,IAAAmS,OAAA,EAAfA,EAAiBlS,WAC5B,GAAc,eAAV9C,EAAwB,CAAC,IAADkV,EACjCD,EAAkC,QAArBC,EAAGpH,EAAWjL,eAAO,IAAAqS,OAAA,EAAlBA,EAAoBpS,KACtC,CAEA8D,GAAqB,CACnBrM,MAAAA,EACA4S,SAA6B,QAArBwH,EAAEnH,EAAY3K,eAAO,IAAA8R,OAAA,EAAnBA,EAAqB7R,MAC/BsK,OAAyB,QAAnBwH,EAAEnH,EAAU5K,eAAO,IAAA+R,OAAA,EAAjBA,EAAmB9R,MAC3BpD,QAA2B,QAApBmV,EAAEtU,EAAWsC,eAAO,IAAAgS,OAAA,EAAlBA,EAAoB/R,MAC7BqS,OAAwB,QAAlBL,EAAEnH,EAAS9K,eAAO,IAAAiS,OAAA,EAAhBA,EAAkBhS,MAC1B9C,MAAAA,EACAiV,cAAAA,EACAzV,OAAyB,QAAnBuV,EAAErH,EAAU7K,eAAO,IAAAkS,OAAA,EAAjBA,EAAmBjS,OAE/B,EAujBQjF,MAAM,UACN6O,QAAQ,YACR9C,GAAI,CAAEhN,OAAQ,OAAQY,SAAU,OAAQT,MAAO,QAASrC,SACzD,wBAIHC,EAAAA,EAAAA,KAAC2I,EAAkC,CACjCyH,IAAKlM,KAEPlE,EAAAA,EAAAA,KAACoV,GAA4B,KAC7BpV,EAAAA,EAAAA,KAACoW,GAAgC,MAGvC,CACA,SAAS7S,EAAYkX,GAA8B,IAADC,EAAAC,EAA1BnX,EAAIiX,EAAJjX,KAAMC,EAAWgX,EAAXhX,YAC5BmX,GAA0Bja,EAAAA,EAAAA,YAAWC,EAAAA,GAA7ByD,EAAOuW,EAAPvW,QAAS3D,EAAIka,EAAJla,KAEjBma,GAA0B/Z,EAAAA,EAAAA,UACxByD,EAAc,CACZuW,UAAW,UACXtW,OAAQ,UACRuW,WAAY,MACZnJ,KAAM,IAAI9M,QAEbkW,GAAAha,EAAAA,EAAAA,GAAA6Z,EAAA,GAPMjb,EAAKob,EAAA,GAAE9V,EAAQ8V,EAAA,GAStBC,GAA4Bna,EAAAA,EAAAA,UAAS,WAAUoa,GAAAla,EAAAA,EAAAA,GAAAia,EAAA,GAAxCzW,EAAM0W,EAAA,GAAEzV,EAASyV,EAAA,GAClBxV,GAAWvB,EAAAA,EAAAA,QAA4B,MACvC4O,GAAY5O,EAAAA,EAAAA,QAA0B,MACtCwB,GAAYxB,EAAAA,EAAAA,QAA0B,MACtCgX,GAAgBhX,EAAAA,EAAAA,QAA0B,MAC1CiX,GAAiBjX,EAAAA,EAAAA,QAAY,MAC7BkX,GAAoBlX,EAAAA,EAAAA,QAA0B,MAC9C+B,GAAU/B,EAAAA,EAAAA,QAAyB,MAEzCmX,GACErS,EAAAA,EAAAA,aAAY,CACVC,YAAa,kBACbC,WAAW,SAADoS,GAAA,OAAAb,EAAAA,IAAA5T,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAE,SAAAwU,EAAO3Q,GAAc,OAAA9D,EAAAA,EAAAA,KAAAO,MAAA,SAAAmU,GAAA,cAAAA,EAAAjU,KAAAiU,EAAAhU,MAAA,cAAAgU,EAAAhU,KAAA,EAClBpD,EAAQmF,KAAKhG,EAAMqH,EAAW,CACzCE,aAAc,cACdtB,QAAS,CACPC,cAAc,UAADzJ,OAAgB,OAAJS,QAAI,IAAJA,OAAI,EAAJA,EAAMiJ,gBAEhC,KAAD,SAAA8R,EAAA7R,OAAA,SAAA6R,EAAA5R,MAAA,wBAAA4R,EAAAjT,OAAA,GAAAgT,EAAA,MACH/S,MAAA,KAAAC,UAAA,EACDoB,UAAW,SAACkB,GACV,IAAMC,EAAU,IAAIC,KAAK,CAACF,EAAShB,MAAO,CAAE5J,KAAM,oBAC5C+K,EAASC,IAAIC,gBAAgBJ,GACnC,GAAIK,EAAAA,GAAU,CAEZ,IAAM9H,EAAO+H,SAASC,cAAc,KAMpC,OALAhI,EAAKnD,KAAO8K,EACZ3H,EAAKiI,SAAW,aAChBF,SAASG,KAAKC,YAAYnI,GAC1BA,EAAKoI,aACLL,SAASG,KAAKG,YAAYrI,EAE5B,CACEsI,OAAOC,KAAK,IAAD9L,OAEPC,QAAgC,0BAAAD,OACT+L,mBAAmBb,IAC5C,SAGN,IA/BYc,EAAoBqP,EAA5B9Q,OAAyC0B,EAAuBoP,EAAlChR,UAkCtC,SAAS/F,EAAamX,GAAgD,IAA7ClX,EAAMkX,EAANlX,OAAQsW,EAASY,EAATZ,UAAWC,EAAUW,EAAVX,WAAYnJ,EAAI8J,EAAJ9J,KAMtD,MAAM,GAAN3R,OAFM,kDAEU,KAAAA,OACe,QAA7B8a,EAAWY,cAA0B,GAAE,IAAA1b,OAAO8a,EAAU,KAAG,MAAA9a,OACxDuE,EAAM,KAAAvE,OAAIwD,EAAW,KAAAxD,OACV,YAAd6a,EAA0B,uBAAyB,GAAE,MAAA7a,OAE1C,YAAXuE,GACIK,EAAAA,EAAAA,GAAO,IAAIC,KAAK8M,GAAO,eACvB/M,EAAAA,EAAAA,GAAO,IAAIC,KAAK8M,GAAO,iBAE/B,CAaA,IAAAgK,GACE3S,EAAAA,EAAAA,aAAY,CACVC,YAAa,cACbC,WAAW,SAAD0S,GAAA,OAAAlB,EAAAA,IAAA7T,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAE,SAAA8U,EAAOxS,GAAa,OAAAvC,EAAAA,EAAAA,KAAAO,MAAA,SAAAyU,GAAA,cAAAA,EAAAvU,KAAAuU,EAAAtU,MAAA,cAAAsU,EAAAtU,KAAA,EACxBpD,EAAQmF,KAAK,yCAA0CF,EAAU,CACrEG,QAAS,CACPC,cAAc,UAADzJ,OAAgB,OAAJS,QAAI,IAAJA,OAAI,EAAJA,EAAMiJ,gBAEjC,cAAAoS,EAAAnS,OAAA,SAAAmS,EAAAlS,MAAA,wBAAAkS,EAAAvT,OAAA,GAAAsT,EAAA,MAAArT,MAAA,KAAAC,UAAA,EACJoB,UAAS,SAACC,GACJA,EAAIC,KAAKC,SACXmR,EAAelT,QAAQgC,cAAcH,EAAIC,KAAKA,KAElD,IAbegS,EAAmBJ,EAA9BtR,UAAwC2R,EAAgBL,EAAxBpR,OAgBlC0R,GAAsB/X,EAAAA,EAAAA,QAAO8X,GAMnC,OAJA1a,EAAAA,EAAAA,YAAU,WACR2a,EAAoBhU,QAAQ,CAAC,EAC/B,GAAG,KAGDrI,EAAAA,EAAAA,MAAA4B,EAAAA,SAAA,CAAA1B,SAAA,EACIic,GAAuB9P,KAA4BlM,EAAAA,EAAAA,KAACmM,EAAAA,EAAO,KAC7DtM,EAAAA,EAAAA,MAAA,OACE+B,MAAO,CACLC,QAAS,OACTG,KAAM,EACNK,cAAe,SACfE,QAAS,MACTD,OAAQ,QACRvC,SAAA,EAEFC,EAAAA,EAAAA,KAACoM,EAAAA,GAAa,CACZC,eAAgB,CACdC,aAAc,QAEhB/L,MAAO,CACLX,MAAO,WACPgC,MAAO,CACLiB,SAAU,OACV0J,WAAY,OACZnK,MAAO,QACPP,QAAS,SAGb2K,SAAU,CACRC,KAAM,EACN7K,MAAO,CAAEI,KAAM,GACfmG,MAAOvI,EACP8M,SAAU,SAACC,GACTzH,EAASyH,EAAEC,cAAczE,MAC3B,GAEF0E,UAAWnH,KAEb1F,EAAAA,EAAAA,KAAC8M,EAAAA,GAAW,CACVvM,MAAO,CACLX,MAAO,WACPgC,MAAO,CACLiB,SAAU,OACV0J,WAAY,OACZnK,MAAO,UAGX2K,UAAWgG,EACX/F,OAAQ,CACNC,aAAc,UACdrL,MAAO,CAAEQ,MAAO,qBAAsBH,OAAQ,QAC9CiL,UAAW,SAACP,GACK,gBAAXA,EAAEQ,MAAqC,UAAXR,EAAEQ,MAChCR,EAAES,gBAEN,EACAV,SAAU,SAACC,GAAO,IAADwP,EAAAC,EAAAC,EAAAC,EACfpX,EACEX,EAAc,CACZuW,UAAWnO,EAAEC,cAAczE,MAC3B3D,OAAyB,QAAnB2X,EAAExW,EAAUuC,eAAO,IAAAiU,OAAA,EAAjBA,EAAmBhU,MAC3B4S,WAAiC,QAAvBqB,EAAEjB,EAAcjT,eAAO,IAAAkU,OAAA,EAArBA,EAAuBjU,MACnCyJ,KAAMvJ,EAA4B,QAAhBgU,EAACnW,EAAQgC,eAAO,IAAAmU,OAAA,EAAfA,EAAiBlU,OAChC,IAAIrD,KAAoB,QAAhBwX,EAACpW,EAAQgC,eAAO,IAAAoU,OAAA,EAAfA,EAAiBnU,OAC1B,IAAIrD,OAGd,GAEF8I,WAAY,CAAC,CAAEpH,IAAK,WAAa,CAAEA,IAAK,YACxCqH,OAAQ,MACRhM,QAAS,SAEX7B,EAAAA,EAAAA,KAAC8M,EAAAA,GAAW,CACVvM,MAAO,CACLX,MAAO,WACPgC,MAAO,CACLiB,SAAU,OACV0J,WAAY,OACZnK,MAAO,UAGX2K,UAAWpH,EACXqH,OAAQ,CACNpL,MAAO,CAAEQ,MAAO,qBAAsBH,OAAQ,QAC9CkG,MAAO3D,EACP0I,UAAW,SAACP,GACK,gBAAXA,EAAEQ,MAAqC,UAAXR,EAAEQ,MAChCR,EAAES,gBAEN,EACAV,SAAU,SAACC,GAAO,IAAD4P,EAAAC,EAAAC,EAAAC,EACe,YAA1B/P,EAAEC,cAAczE,OAClBT,EAAAA,EAAAA,GAAK,KAAKC,MAAK,WACTzB,EAAQgC,UACVhC,EAAQgC,QAAQC,OAAQtD,EAAAA,EAAAA,GAAO,IAAIC,KAAQ,WAE/C,KAEA4C,EAAAA,EAAAA,GAAK,KAAKC,MAAK,WACTzB,EAAQgC,UACVhC,EAAQgC,QAAQC,OAAQtD,EAAAA,EAAAA,GAAO,IAAIC,KAAQ,cAE/C,IAEFW,EAAUkH,EAAEC,cAAczE,OAC1BjD,EACEX,EAAc,CACZuW,UAA4B,QAAnByB,EAAExJ,EAAU7K,eAAO,IAAAqU,OAAA,EAAjBA,EAAmBpU,MAC9B3D,OAAQmI,EAAEC,cAAczE,MACxB4S,WAAiC,QAAvByB,EAAErB,EAAcjT,eAAO,IAAAsU,OAAA,EAArBA,EAAuBrU,MACnCyJ,KAAMvJ,EAA4B,QAAhBoU,EAACvW,EAAQgC,eAAO,IAAAuU,OAAA,EAAfA,EAAiBtU,OAChC,IAAIrD,KAAoB,QAAhB4X,EAACxW,EAAQgC,eAAO,IAAAwU,OAAA,EAAfA,EAAiBvU,OAC1B,IAAIrD,OAGd,GAEF8I,WAAY,CAAC,CAAEpH,IAAK,SAAW,CAAEA,IAAK,YACtCqH,OAAQ,MACRhM,QAAS,SAEX7B,EAAAA,EAAAA,KAAC8M,EAAAA,GAAW,CACVsD,IAAKgL,EACL7a,MAAO,CACLX,MAAO,gBACPgC,MAAO,CACLiB,SAAU,OACV0J,WAAY,OACZnK,MAAO,UAGX2K,UAAWoO,EACXnO,OAAQ,CACNpL,MAAO,CAAEQ,MAAO,qBAAsBH,OAAQ,QAC9CgL,aAAc,KACdC,UAAW,SAACP,GACK,gBAAXA,EAAEQ,MAAqC,UAAXR,EAAEQ,MAChCR,EAAES,gBAEN,EACAV,SAAU,SAACC,GAAO,IAADgQ,EAAAC,EAAAC,EAAAC,EACf5X,EACEX,EAAc,CACZuW,UAA4B,QAAnB6B,EAAE5J,EAAU7K,eAAO,IAAAyU,OAAA,EAAjBA,EAAmBxU,MAC9B3D,OAAyB,QAAnBoY,EAAEjX,EAAUuC,eAAO,IAAA0U,OAAA,EAAjBA,EAAmBzU,MAC3B4S,WAAYpO,EAAEC,cAAczE,MAC5ByJ,KAAMvJ,EAA4B,QAAhBwU,EAAC3W,EAAQgC,eAAO,IAAA2U,OAAA,EAAfA,EAAiB1U,OAChC,IAAIrD,KAAoB,QAAhBgY,EAAC5W,EAAQgC,eAAO,IAAA4U,OAAA,EAAfA,EAAiB3U,OAC1B,IAAIrD,OAGd,GAEF8I,WAAY,GACZC,OAAQ,UACRhM,QAAS,aAEX7B,EAAAA,EAAAA,KAAC8M,EAAAA,GAAW,CACVvM,MAAO,CACLX,MAAO,oBACPgC,MAAO,CACLiB,SAAU,OACV0J,WAAY,OACZnK,MAAO,UAGX2K,UAAWsO,EACXrO,OAAQ,CACNpL,MAAO,CAAEQ,MAAO,qBAAsBH,OAAQ,QAC9CgL,aAAc,cACdC,UAAW,SAACP,GACK,gBAAXA,EAAEQ,MAAqC,UAAXR,EAAEQ,MAChCR,EAAES,gBAEN,GAEFQ,WAAY,CAAC,CAAEpH,IAAK,eAAiB,CAAEA,IAAK,iBAC5CqH,OAAQ,MACRhM,QAAS,SAEX7B,EAAAA,EAAAA,KAAC8N,EAAAA,GAAS,CACRvN,MAAO,CACLX,MAAO,UACPgC,MAAO,CACLiB,SAAU,OACV0J,WAAY,OACZnK,MAAO,UAGX2L,MAAO,CACL3N,KAAiB,YAAXoE,EAAuB,QAAU,OACvCyI,aACa,YAAXzI,GACIK,EAAAA,EAAAA,GAAO,IAAIC,KAAQ,YACnBD,EAAAA,EAAAA,GAAO,IAAIC,KAAQ,cACzBoI,UAAW,SAACP,GACI,UAAVA,EAAEnG,KAA6B,gBAAVmG,EAAEnG,KACzBmG,EAAES,iBAGU,cAAVT,EAAEnG,KACJmG,EAAES,gBAEN,EAEA+K,OAAQ,SAACxL,GAAO,IAADoQ,EAAAC,EAAAC,EACb/X,EACEX,EAAc,CACZuW,UAA4B,QAAnBiC,EAAEhK,EAAU7K,eAAO,IAAA6U,OAAA,EAAjBA,EAAmB5U,MAC9B3D,OAAyB,QAAnBwY,EAAErX,EAAUuC,eAAO,IAAA8U,OAAA,EAAjBA,EAAmB7U,MAC3B4S,WAAiC,QAAvBkC,EAAE9B,EAAcjT,eAAO,IAAA+U,OAAA,EAArBA,EAAuB9U,MACnCyJ,KACa,YAAXpN,GACIK,EAAAA,EAAAA,GAAO,IAAIC,KAAK6H,EAAEC,cAAczE,OAAQ,YACxCtD,EAAAA,EAAAA,GAAO,IAAIC,KAAK6H,EAAEC,cAAczE,OAAQ,gBAGpD,EACAvG,MAAO,CAAEQ,MAAO,uBAElBgN,SAAUlJ,KAGZlG,EAAAA,EAAAA,KAACiR,EAAAA,EAAM,CACL7N,QA/PR,WAA2B,IAAD8Z,EAAAC,EAAAC,EAAAC,EAAAC,EACxBrR,EAAqB,CACnB6O,UAA4B,QAAnBoC,EAAEnK,EAAU7K,eAAO,IAAAgV,OAAA,EAAjBA,EAAmB/U,MAC9B3D,OAAyB,QAAnB2Y,EAAExX,EAAUuC,eAAO,IAAAiV,OAAA,EAAjBA,EAAmBhV,MAC3B4S,WAAiC,QAAvBqC,EAAEjC,EAAcjT,eAAO,IAAAkV,OAAA,EAArBA,EAAuBjV,MACnCkT,kBAA4C,QAA3BgC,EAAEhC,EAAkBnT,eAAO,IAAAmV,OAAA,EAAzBA,EAA2BlV,MAC9CyJ,KAAqB,QAAjB0L,EAAEpX,EAAQgC,eAAO,IAAAoV,OAAA,EAAfA,EAAiBnV,MACvBvI,MAAAA,GAEJ,EAuPQsD,MAAM,UACN6O,QAAQ,YACR9C,GAAI,CAAEhN,OAAQ,OAAQY,SAAU,OAAQT,MAAO,QAASrC,SACzD,yBAMT,CACA,SAAS2D,EAAmB6Z,GAA8B,IAADC,EAAAC,EAA1Bja,EAAI+Z,EAAJ/Z,KAAMC,EAAW8Z,EAAX9Z,YACnCia,GAA0B/c,EAAAA,EAAAA,YAAWC,EAAAA,GAA7BF,EAAIgd,EAAJhd,KAAM2D,EAAOqZ,EAAPrZ,QACdsZ,GAA0B7c,EAAAA,EAAAA,UACxByD,EAAc,CACZC,OAAQ,UACRuW,WAAY,MACZnJ,KAAM,IAAI9M,QAEb8Y,GAAA5c,EAAAA,EAAAA,GAAA2c,EAAA,GANM/d,EAAKge,EAAA,GAAE1Y,EAAQ0Y,EAAA,GAOtBC,GAA4B/c,EAAAA,EAAAA,UAAS,WAAUgd,GAAA9c,EAAAA,EAAAA,GAAA6c,EAAA,GAAxCrZ,EAAMsZ,EAAA,GAAErY,EAASqY,EAAA,GAClBpY,GAAWvB,EAAAA,EAAAA,QAA4B,MACvC4O,GAAY5O,EAAAA,EAAAA,QAA0B,MACtCwB,GAAYxB,EAAAA,EAAAA,QAA0B,MACtC4Z,GAAY5Z,EAAAA,EAAAA,QAA0B,MACtC6Z,GAAa7Z,EAAAA,EAAAA,QAAY,MACzB+B,GAAU/B,EAAAA,EAAAA,QAAyB,MACnCgC,GAAUhC,EAAAA,EAAAA,QAA0B,MACpCiC,GAAWjC,EAAAA,EAAAA,QAA0B,MAE3C8Z,GACEhV,EAAAA,EAAAA,aAAY,CACVC,YAAa,kBACbC,WAAW,SAAD+U,GAAA,OAAAV,EAAAA,IAAA1W,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAE,SAAAmX,EAAOtT,GAAc,OAAA9D,EAAAA,EAAAA,KAAAO,MAAA,SAAA8W,GAAA,cAAAA,EAAA5W,KAAA4W,EAAA3W,MAAA,cAAA2W,EAAA3W,KAAA,EAClBpD,EAAQmF,KAAKhG,EAAMqH,EAAW,CACzCE,aAAc,cACdtB,QAAS,CACPC,cAAc,UAADzJ,OAAgB,OAAJS,QAAI,IAAJA,OAAI,EAAJA,EAAMiJ,gBAEhC,KAAD,SAAAyU,EAAAxU,OAAA,SAAAwU,EAAAvU,MAAA,wBAAAuU,EAAA5V,OAAA,GAAA2V,EAAA,MACH1V,MAAA,KAAAC,UAAA,EACDoB,UAAW,SAACkB,GACV,IAAMC,EAAU,IAAIC,KAAK,CAACF,EAAShB,MAAO,CAAE5J,KAAM,oBAC5C+K,EAASC,IAAIC,gBAAgBJ,GACnC,GAAIK,EAAAA,GAAU,CAEZ,IAAM9H,EAAO+H,SAASC,cAAc,KAMpC,OALAhI,EAAKnD,KAAO8K,EACZ3H,EAAKiI,SAAW,aAChBF,SAASG,KAAKC,YAAYnI,GAC1BA,EAAKoI,aACLL,SAASG,KAAKG,YAAYrI,EAE5B,CACEsI,OAAOC,KAAK,IAAD9L,OAEPC,QAAgC,0BAAAD,OACT+L,mBAAmBb,IAC5C,SAGN,IA/BYc,EAAoBgS,EAA5BzT,OAAyC0B,EAAuB+R,EAAlC3T,UAkCtC+T,GACEpV,EAAAA,EAAAA,aAAY,CACVC,YAAa,cACbC,WAAW,SAADmV,GAAA,OAAAb,EAAAA,IAAA3W,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAE,SAAAuX,EAAOjV,GAAa,OAAAvC,EAAAA,EAAAA,KAAAO,MAAA,SAAAkX,GAAA,cAAAA,EAAAhX,KAAAgX,EAAA/W,MAAA,cAAA+W,EAAA/W,KAAA,EACxBpD,EAAQmF,KAAK,yCAA0CF,EAAU,CACrEG,QAAS,CACPC,cAAc,UAADzJ,OAAgB,OAAJS,QAAI,IAAJA,OAAI,EAAJA,EAAMiJ,gBAEjC,cAAA6U,EAAA5U,OAAA,SAAA4U,EAAA3U,MAAA,wBAAA2U,EAAAhW,OAAA,GAAA+V,EAAA,MAAA9V,MAAA,KAAAC,UAAA,EACJoB,UAAS,SAACC,GACJA,EAAIC,KAAKC,SACX+T,EAAW9V,QAAQgC,cAAcH,EAAIC,KAAKA,KAE9C,IAbegS,EAAmBqC,EAA9B/T,UAAwC2R,EAAgBoC,EAAxB7T,OAgBxC,SAASjG,EAAaka,GAAqC,IAAlCja,EAAMia,EAANja,OAAQuW,EAAU0D,EAAV1D,WAAYnJ,EAAI6M,EAAJ7M,KAM3C,MAAM,GAAN3R,OAFM,kDAEU,KAAAA,OACe,QAA7B8a,EAAWY,cAA0B,GAAE,IAAA1b,OAAO8a,EAAU,KAAG,MAAA9a,OACxDuE,EAAM,KAAAvE,OAAIwD,EAAW,MAAAxD,OACb,YAAXuE,GACIK,EAAAA,EAAAA,GAAO,IAAIC,KAAK8M,GAAO,eACvB/M,EAAAA,EAAAA,GAAO,IAAIC,KAAK8M,GAAO,iBAAgB,SAG/C,CAcA,IAAMsK,GAAsB/X,EAAAA,EAAAA,QAAY8X,GAMxC,OAJA1a,EAAAA,EAAAA,YAAU,WACR2a,EAAoBhU,QAAQ,CAAC,EAC/B,GAAG,KAGDrI,EAAAA,EAAAA,MAAA4B,EAAAA,SAAA,CAAA1B,SAAA,EACIic,GAAuB9P,KAA4BlM,EAAAA,EAAAA,KAACmM,EAAAA,EAAO,KAC7DtM,EAAAA,EAAAA,MAAA,OACE+B,MAAO,CACLC,QAAS,OACTG,KAAM,EACNK,cAAe,SACfE,QAAS,MACTD,OAAQ,QACRvC,SAAA,EAEFC,EAAAA,EAAAA,KAACoM,EAAAA,GAAa,CACZC,eAAgB,CACdC,aAAc,QAEhB/L,MAAO,CACLX,MAAO,WACPgC,MAAO,CACLiB,SAAU,OACV0J,WAAY,OACZnK,MAAO,QACPP,QAAS,SAGb2K,SAAU,CACRC,KAAM,EACN7K,MAAO,CAAEI,KAAM,GACfmG,MAAOvI,EACP8M,SAAU,SAACC,GACTzH,EAASyH,EAAEC,cAAczE,MAC3B,GAEF0E,UAAWnH,KAEb1F,EAAAA,EAAAA,KAAC8M,EAAAA,GAAW,CACVvM,MAAO,CACLX,MAAO,WACPgC,MAAO,CACLiB,SAAU,OACV0J,WAAY,OACZnK,MAAO,SAGX2K,UAAWgG,EACX/F,OAAQ,CACNpL,MAAO,CAAEQ,MAAO,oBAAqBH,OAAQ,QAC7CgL,aAAc,aACdC,UAAW,SAACP,GACK,gBAAXA,EAAEQ,MAAqC,UAAXR,EAAEQ,MAChCR,EAAES,gBAEN,EACAV,SAAU,SAACC,GAAO,GAEpBiB,WAAY,CAAC,CAAEpH,IAAK,eACpBqH,OAAQ,MACRhM,QAAS,SAEX7B,EAAAA,EAAAA,KAAC8M,EAAAA,GAAW,CACVvM,MAAO,CACLX,MAAO,WACPgC,MAAO,CACLiB,SAAU,OACV0J,WAAY,OACZnK,MAAO,SAGX2K,UAAWpH,EACXqH,OAAQ,CACNpL,MAAO,CAAEQ,MAAO,oBAAqBH,OAAQ,QAC7CgL,aAAc,UACdC,UAAW,SAACP,GACK,gBAAXA,EAAEQ,MAAqC,UAAXR,EAAEQ,MAChCR,EAAES,gBAEN,EACAV,SAAU,SAACC,GAAO,IAAD+R,EAAAC,EAAAC,EACe,YAA1BjS,EAAEC,cAAczE,OAClBT,EAAAA,EAAAA,GAAK,KAAKC,MAAK,WACTzB,EAAQgC,UACVhC,EAAQgC,QAAQC,OAAQtD,EAAAA,EAAAA,GAAO,IAAIC,KAAQ,WAE/C,KAEA4C,EAAAA,EAAAA,GAAK,KAAKC,MAAK,WACTzB,EAAQgC,UACVhC,EAAQgC,QAAQC,OAAQtD,EAAAA,EAAAA,GAAO,IAAIC,KAAQ,cAE/C,IAEFW,EAAUkH,EAAEC,cAAczE,OAC1BjD,EACEX,EAAc,CACZC,OAAQmI,EAAEC,cAAczE,MACxB4S,WAA6B,QAAnB2D,EAAEX,EAAU7V,eAAO,IAAAwW,OAAA,EAAjBA,EAAmBvW,MAC/ByJ,KAAMvJ,EAA4B,QAAhBsW,EAACzY,EAAQgC,eAAO,IAAAyW,OAAA,EAAfA,EAAiBxW,OAChC,IAAIrD,KAAoB,QAAhB8Z,EAAC1Y,EAAQgC,eAAO,IAAA0W,OAAA,EAAfA,EAAiBzW,OAC1B,IAAIrD,OAGd,GAEF8I,WAAY,CAAC,CAAEpH,IAAK,SAAW,CAAEA,IAAK,YACtCqH,OAAQ,MACRhM,QAAS,SAEX7B,EAAAA,EAAAA,KAAC8M,EAAAA,GAAW,CACVvM,MAAO,CACLX,MAAO,WACPgC,MAAO,CACLiB,SAAU,OACV0J,WAAY,OACZnK,MAAO,SAGXgO,IAAK4N,EACLjR,UAAWgR,EACX/Q,OAAQ,CACNpL,MAAO,CAAEQ,MAAO,oBAAqBH,OAAQ,QAC7CgL,aAAc,MACdC,UAAW,SAACP,GACK,gBAAXA,EAAEQ,MAAqC,UAAXR,EAAEQ,MAChCR,EAAES,gBAEN,EACAV,SAAU,SAACC,GAAO,IAADkS,EAAAC,EAAAC,EAAAC,EACf9Z,EACEX,EAAc,CACZC,OAAyB,QAAnBqa,EAAElZ,EAAUuC,eAAO,IAAA2W,OAAA,EAAjBA,EAAmB1W,MAC3B4S,WAA6B,QAAnB+D,EAAEf,EAAU7V,eAAO,IAAA4W,OAAA,EAAjBA,EAAmB3W,MAC/ByJ,KAAMvJ,EAA4B,QAAhB0W,EAAC7Y,EAAQgC,eAAO,IAAA6W,OAAA,EAAfA,EAAiB5W,OAChC,IAAIrD,KAAoB,QAAhBka,EAAC9Y,EAAQgC,eAAO,IAAA8W,OAAA,EAAfA,EAAiB7W,OAC1B,IAAIrD,OAGd,GAEF8I,WAAY,GACZC,OAAQ,UACRhM,QAAS,aAEX7B,EAAAA,EAAAA,KAAC8N,EAAAA,GAAS,CACRvN,MAAO,CACLX,MAAO,SACPgC,MAAO,CACLiB,SAAU,OACV0J,WAAY,OACZnK,MAAO,SAGXiK,eAAgB,CAAEjK,MAAO,QACzB2L,MAAO,CACLd,aACa,YAAXzI,GACIK,EAAAA,EAAAA,GAAO,IAAIC,KAAQ,YACnBD,EAAAA,EAAAA,GAAO,IAAIC,KAAQ,cACzB1E,KAAiB,YAAXoE,EAAuB,QAAU,OACvC0I,UAAW,SAACP,GACI,UAAVA,EAAEnG,KAA6B,gBAAVmG,EAAEnG,KACzBmG,EAAES,iBAGU,cAAVT,EAAEnG,KACJmG,EAAES,gBAEN,EACA+K,OAAQ,SAACxL,GAAO,IAADsS,EAAAC,EACbha,EACEX,EAAc,CACZC,OAAyB,QAAnBya,EAAEtZ,EAAUuC,eAAO,IAAA+W,OAAA,EAAjBA,EAAmB9W,MAC3B4S,WAA6B,QAAnBmE,EAAEnB,EAAU7V,eAAO,IAAAgX,OAAA,EAAjBA,EAAmB/W,MAC/ByJ,KAAMjF,EAAEC,cAAczE,QAG5B,EACAvG,MAAO,CAAEQ,MAAO,sBAElBgN,SAAUlJ,KAEZrG,EAAAA,EAAAA,MAAA,YACE+B,MAAO,CACLO,OAAQ,oBACR4O,aAAc,MACdpO,SAAU,WACVP,MAAO,OACPH,OAAQ,OACR+O,OAAQ,WACRzO,QAAS,OACTV,QAAS,OACTS,OAAQ,OACRD,cAAe,UACftC,SAAA,EAEFC,EAAAA,EAAAA,KAAC8M,EAAAA,GAAW,CACVvM,MAAO,CACLX,MAAO,SACPgC,MAAO,CACLiB,SAAU,OACV0J,WAAY,OACZnK,MAAO,SAGX2K,UAAW5G,EACX6G,OAAQ,CACNpL,MAAO,CAAEQ,MAAO,oBAAqBH,OAAQ,QAC7CgL,aAAc,eACdC,UAAW,SAACP,GACK,gBAAXA,EAAEQ,MAAqC,UAAXR,EAAEQ,MAChCR,EAAES,gBAEN,GAEFQ,WAAY,CAAC,CAAEpH,IAAK,iBACpBqH,OAAQ,MACRhM,QAAS,SAEX7B,EAAAA,EAAAA,KAAC8M,EAAAA,GAAW,CACVvM,MAAO,CACLX,MAAO,UACPgC,MAAO,CACLiB,SAAU,OACV0J,WAAY,OACZnK,MAAO,SAGX2K,UAAW3G,EACX4G,OAAQ,CACNpL,MAAO,CAAEQ,MAAO,oBAAqBH,OAAQ,QAC7CgL,aAAc,eACdC,UAAW,SAACP,GACK,gBAAXA,EAAEQ,MAAqC,UAAXR,EAAEQ,MAChCR,EAAES,gBAEN,GAEFQ,WAAY,CAAC,CAAEpH,IAAK,aAAe,CAAEA,IAAK,eAC1CqH,OAAQ,MACRhM,QAAS,YAGb7B,EAAAA,EAAAA,KAACiR,EAAAA,EAAM,CACL7N,QApQR,WAA2B,IAAD+b,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EACxBxT,EAAqB,CACnBrM,MAAuB,QAAlBuf,EAAEzZ,EAASwC,eAAO,IAAAiX,OAAA,EAAhBA,EAAkBhX,MACzBuX,UAA4B,QAAnBN,EAAErM,EAAU7K,eAAO,IAAAkX,OAAA,EAAjBA,EAAmBjX,MAC9B3D,OAAyB,QAAnB6a,EAAE1Z,EAAUuC,eAAO,IAAAmX,OAAA,EAAjBA,EAAmBlX,MAC3B4S,WAA6B,QAAnBuE,EAAEvB,EAAU7V,eAAO,IAAAoX,OAAA,EAAjBA,EAAmBnX,MAC/ByJ,KAAqB,QAAjB2N,EAAErZ,EAAQgC,eAAO,IAAAqX,OAAA,EAAfA,EAAiBpX,MACvB0J,KAAqB,QAAjB2N,EAAErZ,EAAQ+B,eAAO,IAAAsX,OAAA,EAAfA,EAAiBrX,MACvB2J,MAAuB,QAAlB2N,EAAErZ,EAAS8B,eAAO,IAAAuX,OAAA,EAAhBA,EAAkBtX,OAE7B,EA2PQjF,MAAM,UACN6O,QAAQ,YACR9C,GAAI,CAAEhN,OAAQ,OAAQY,SAAU,OAAQT,MAAO,QAASrC,SACzD,yBAMT,CACA,SAAS4D,IAA8B,IAADgc,EAAAC,EAAAC,EACpCC,GAA0Bnf,EAAAA,EAAAA,YAAWC,EAAAA,GAA7BF,EAAIof,EAAJpf,KAAM2D,EAAOyb,EAAPzb,QACd0b,GAA0Bjf,EAAAA,EAAAA,UAAS,IAAGkf,GAAAhf,EAAAA,EAAAA,GAAA+e,EAAA,GAA/BngB,EAAKogB,EAAA,GAAE9a,EAAQ8a,EAAA,GAChBta,GAAWvB,EAAAA,EAAAA,QAA4B,MACvC4O,GAAY5O,EAAAA,EAAAA,QAA0B,MACtC6O,GAAW7O,EAAAA,EAAAA,QAA0B,MACrC4Z,GAAY5Z,EAAAA,EAAAA,QAA0B,MACtC6Z,GAAa7Z,EAAAA,EAAAA,QAAY,MACzB0O,GAAc1O,EAAAA,EAAAA,QAAyB,MACvC2O,GAAY3O,EAAAA,EAAAA,QAAyB,MACrC8b,GAAU9b,EAAAA,EAAAA,QAA0B,MACpCgC,GAAUhC,EAAAA,EAAAA,QAA0B,MACpCiC,GAAWjC,EAAAA,EAAAA,QAA0B,MAE3C+b,GACEjX,EAAAA,EAAAA,aAAY,CACVC,YAAa,cACbC,WAAW,SAADgX,GAAA,OAAAR,EAAAA,IAAA7Y,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAE,SAAAoZ,EAAO9W,GAAa,OAAAvC,EAAAA,EAAAA,KAAAO,MAAA,SAAA+Y,GAAA,cAAAA,EAAA7Y,KAAA6Y,EAAA5Y,MAAA,cAAA4Y,EAAA5Y,KAAA,EACxBpD,EAAQmF,KAAK,yCAA0CF,EAAU,CACrEG,QAAS,CACPC,cAAc,UAADzJ,OAAgB,OAAJS,QAAI,IAAJA,OAAI,EAAJA,EAAMiJ,gBAEjC,cAAA0W,EAAAzW,OAAA,SAAAyW,EAAAxW,MAAA,wBAAAwW,EAAA7X,OAAA,GAAA4X,EAAA,MAAA3X,MAAA,KAAAC,UAAA,EACJoB,UAAS,SAACC,GACJA,EAAIC,KAAKC,SACX+T,EAAW9V,QAAQgC,cAAcH,EAAIC,KAAKA,KAE9C,IAbegS,EAAmBkE,EAA9B5V,UAAwC2R,EAAgBiE,EAAxB1V,OAgBxC8V,GACErX,EAAAA,EAAAA,aAAY,CACVC,YAAa,kBACbC,WAAW,SAADoX,GAAA,OAAAX,EAAAA,IAAA9Y,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAE,SAAAwZ,EAAO3V,GAAc,OAAA9D,EAAAA,EAAAA,KAAAO,MAAA,SAAAmZ,GAAA,cAAAA,EAAAjZ,KAAAiZ,EAAAhZ,MAAA,cAAAgZ,EAAAhZ,KAAA,EAClBpD,EAAQmF,KACnB,wEACAqB,EACA,CACEE,aAAc,cACdtB,QAAS,CACPC,cAAc,UAADzJ,OAAgB,OAAJS,QAAI,IAAJA,OAAI,EAAJA,EAAMiJ,gBAGnC,KAAD,SAAA8W,EAAA7W,OAAA,SAAA6W,EAAA5W,MAAA,wBAAA4W,EAAAjY,OAAA,GAAAgY,EAAA,MACF/X,MAAA,KAAAC,UAAA,EACDoB,UAAW,SAACkB,GACV,IAAMC,EAAU,IAAIC,KAAK,CAACF,EAAShB,MAAO,CAAE5J,KAAM,oBAC5C+K,EAASC,IAAIC,gBAAgBJ,GACnC,GAAIK,EAAAA,GAAU,CAEZ,IAAM9H,EAAO+H,SAASC,cAAc,KAMpC,OALAhI,EAAKnD,KAAO8K,EACZ3H,EAAKiI,SAAW,aAChBF,SAASG,KAAKC,YAAYnI,GAC1BA,EAAKoI,aACLL,SAASG,KAAKG,YAAYrI,EAE5B,CACEsI,OAAOC,KAAK,IAAD9L,OAEPC,QAAgC,0BAAAD,OACT+L,mBAAmBb,IAC5C,SAGN,IAnCYc,EAAoBqU,EAA5B9V,OAAyC0B,EAAuBoU,EAAlChW,UAqCtCoW,GAGIzX,EAAAA,EAAAA,aAAY,CACdC,YAAa,wBACbC,WAAW,SAADwX,GAAA,OAAAd,EAAAA,IAAA/Y,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAE,SAAA4Z,EAAO/V,GAAc,OAAA9D,EAAAA,EAAAA,KAAAO,MAAA,SAAAuZ,GAAA,cAAAA,EAAArZ,KAAAqZ,EAAApZ,MAAA,cAAAoZ,EAAApZ,KAAA,EAClBpD,EAAQmF,KACnB,8EACAqB,EACA,CACEE,aAAc,cACdtB,QAAS,CACPC,cAAc,UAADzJ,OAAgB,OAAJS,QAAI,IAAJA,OAAI,EAAJA,EAAMiJ,gBAGnC,KAAD,SAAAkX,EAAAjX,OAAA,SAAAiX,EAAAhX,MAAA,wBAAAgX,EAAArY,OAAA,GAAAoY,EAAA,MACFnY,MAAA,KAAAC,UAAA,EACDoB,UAAW,SAACkB,GACV,IAAMC,EAAU,IAAIC,KAAK,CAACF,EAAShB,MAAO,CAAE5J,KAAM,oBAC5CoD,EAAO+H,SAASC,cAAc,KACpChI,EAAKnD,KAAO+K,IAAIC,gBAAgBJ,GAChCzH,EAAKiI,SAAW,aAChBjI,EAAKoI,OACP,IAtBQkV,EAAyBJ,EAAjClW,OACWuW,EAA4BL,EAAvCpW,UAmDF,SAAS/F,EAAayc,GAAqC,IAAlCC,EAAMD,EAANC,OAAQzO,EAAQwO,EAARxO,SAAUC,EAAMuO,EAANvO,OAEzC,MAAM,GAANxS,OAGM,mDAAkD,KAAAA,OAE3C,QAAXghB,EAAmB,GAAE,KAAAhhB,OAAQghB,EAAM,MAAI,yCAAAhhB,QACD4E,EAAAA,EAAAA,GACtC,IAAIC,KAAK0N,GACT,cACD,QAAAvS,QAAO4E,EAAAA,EAAAA,GAAO,IAAIC,KAAK2N,GAAS,cACnC,CACA,IAAMyJ,GAAsB/X,EAAAA,EAAAA,QAAY8X,GAClCiF,GAAmB/c,EAAAA,EAAAA,QAAYI,GAarC,OAXAhD,EAAAA,EAAAA,YAAU,WACR2a,EAAoBhU,UACpBhD,EACEgc,EAAiBhZ,QAAQ,CACvB+Y,OAAQ,MACRxO,OAAQ,IAAI3N,KACZ0N,SAAU,IAAI1N,OAGpB,GAAG,KAGDjF,EAAAA,EAAAA,MAAA4B,EAAAA,SAAA,CAAA1B,SAAA,EACIic,GACA9P,GACA6U,KAAiC/gB,EAAAA,EAAAA,KAACmM,EAAAA,EAAO,KAC3CtM,EAAAA,EAAAA,MAAA,OACE+B,MAAO,CACLC,QAAS,OACTG,KAAM,EACNK,cAAe,SACfE,QAAS,MACTD,OAAQ,OACRvC,SAAA,EAEFC,EAAAA,EAAAA,KAACoM,EAAAA,GAAa,CACZC,eAAgB,CACdC,aAAc,QAEhB/L,MAAO,CACLX,MAAO,WACPgC,MAAO,CACLiB,SAAU,OACV0J,WAAY,OACZnK,MAAO,QACPP,QAAS,SAGb2K,SAAU,CACRC,KAAM,EACN7K,MAAO,CAAEI,KAAM,GACfmG,MAAOvI,EACP8M,SAAU,SAACC,GACTzH,EAASyH,EAAEC,cAAczE,MAC3B,GAEF0E,UAAWnH,KAEb1F,EAAAA,EAAAA,KAAC8M,EAAAA,GAAW,CACVvM,MAAO,CACLX,MAAO,WACPgC,MAAO,CACLiB,SAAU,OACV0J,WAAY,OACZnK,MAAO,SAGX2K,UAAWgG,EACX/F,OAAQ,CACNpL,MAAO,CAAEQ,MAAO,oBAAqBH,OAAQ,QAC7CgL,aAAc,aACdC,UAAW,SAACP,GACK,gBAAXA,EAAEQ,MAAqC,UAAXR,EAAEQ,MAChCR,EAAES,gBAEN,EACAV,SAAU,SAACC,GAAO,GAEpBiB,WAAY,CAAC,CAAEpH,IAAK,cAAgB,CAAEA,IAAK,eAC3CqH,OAAQ,MACRhM,QAAS,SAEX7B,EAAAA,EAAAA,KAAC8M,EAAAA,GAAW,CACVvM,MAAO,CACLX,MAAO,UACPgC,MAAO,CACLiB,SAAU,OACV0J,WAAY,OACZnK,MAAO,SAGX2K,UAAWiG,EACXhG,OAAQ,CACNpL,MAAO,CAAEQ,MAAO,oBAAqBH,OAAQ,QAC7CgL,aAAc,aACdC,UAAW,SAACP,GACK,gBAAXA,EAAEQ,MAAqC,UAAXR,EAAEQ,MAChCR,EAAES,gBAEN,EACAV,SAAU,SAACC,GAAO,GAEpBiB,WAAY,CAAC,CAAEpH,IAAK,cAAgB,CAAEA,IAAK,kBAC3CqH,OAAQ,MACRhM,QAAS,SAEX7B,EAAAA,EAAAA,KAAC8M,EAAAA,GAAW,CACVvM,MAAO,CACLX,MAAO,WACPgC,MAAO,CACLiB,SAAU,OACV0J,WAAY,OACZnK,MAAO,SAGXgO,IAAK4N,EACLjR,UAAWgR,EACX/Q,OAAQ,CACNpL,MAAO,CAAEQ,MAAO,oBAAqBH,OAAQ,QAC7CgL,aAAc,MACdC,UAAW,SAACP,GACK,gBAAXA,EAAEQ,MAAqC,UAAXR,EAAEQ,MAChCR,EAAES,gBAEN,EACAV,SAAU,SAACC,GAAO,IAADwU,EAAAC,EAAAC,EAAAC,EACfpc,EACEX,EAAc,CACZ0c,OAAQtU,EAAEC,cAAczE,MACxBqK,SAAUnK,EAAgC,QAApB8Y,EAACtO,EAAY3K,eAAO,IAAAiZ,OAAA,EAAnBA,EAAqBhZ,OACxC,IAAIrD,KAAwB,QAApBsc,EAACvO,EAAY3K,eAAO,IAAAkZ,OAAA,EAAnBA,EAAqBjZ,OAC9B,IAAIrD,KACR2N,OAAQpK,EAA8B,QAAlBgZ,EAACvO,EAAU5K,eAAO,IAAAmZ,OAAA,EAAjBA,EAAmBlZ,OACpC,IAAIrD,KAAsB,QAAlBwc,EAACxO,EAAU5K,eAAO,IAAAoZ,OAAA,EAAjBA,EAAmBnZ,OAC5B,IAAIrD,OAGd,GAEF8I,WAAY,GACZC,OAAQ,UACRhM,QAAS,aAEX7B,EAAAA,EAAAA,KAAC8N,EAAAA,GAAS,CACRvN,MAAO,CACLX,MAAO,cACPgC,MAAO,CACLiB,SAAU,OACV0J,WAAY,OACZnK,MAAO,SAGXiK,eAAgB,CAAEjK,MAAO,QACzB2L,MAAO,CACLd,cAAcpI,EAAAA,EAAAA,GAAO,IAAIC,KAAQ,cACjC1E,KAAM,OACN8M,UAAW,SAACP,GACI,UAAVA,EAAEnG,KAA6B,gBAAVmG,EAAEnG,KACzBmG,EAAES,iBAGU,cAAVT,EAAEnG,KACJmG,EAAES,gBAEN,EACAV,SAAU,SAACC,GAAO,IAAD4U,EAAAC,EAAAC,EACfvc,EACEX,EAAc,CACZ0c,OAAyB,QAAnBM,EAAExD,EAAU7V,eAAO,IAAAqZ,OAAA,EAAjBA,EAAmBpZ,MAC3BqK,SAAUnK,EAAasE,EAAEC,cAAczE,OACnC,IAAIrD,KAAK6H,EAAEC,cAAczE,OACzB,IAAIrD,KACR2N,OAAQpK,EAA8B,QAAlBmZ,EAAC1O,EAAU5K,eAAO,IAAAsZ,OAAA,EAAjBA,EAAmBrZ,OACpC,IAAIrD,KAAsB,QAAlB2c,EAAC3O,EAAU5K,eAAO,IAAAuZ,OAAA,EAAjBA,EAAmBtZ,OAC5B,IAAIrD,OAGd,EACAlD,MAAO,CAAEQ,MAAO,sBAElBgN,SAAUyD,KAEZ7S,EAAAA,EAAAA,KAAC8N,EAAAA,GAAS,CACRvN,MAAO,CACLX,MAAO,YACPgC,MAAO,CACLiB,SAAU,OACV0J,WAAY,OACZnK,MAAO,SAGXiK,eAAgB,CAAEjK,MAAO,QACzB2L,MAAO,CACLd,cAAcpI,EAAAA,EAAAA,GAAO,IAAIC,KAAQ,cACjC1E,KAAM,OACN8M,UAAW,SAACP,GACI,UAAVA,EAAEnG,KAA6B,gBAAVmG,EAAEnG,KACzBmG,EAAES,iBAGU,cAAVT,EAAEnG,KACJmG,EAAES,gBAEN,EACAV,SAAU,SAACC,GAAO,IAAD+U,EAAAC,EAAAC,EACf1c,EACEX,EAAc,CACZ0c,OAAyB,QAAnBS,EAAE3D,EAAU7V,eAAO,IAAAwZ,OAAA,EAAjBA,EAAmBvZ,MAC3BqK,SAAUnK,EAAgC,QAApBsZ,EAAC9O,EAAY3K,eAAO,IAAAyZ,OAAA,EAAnBA,EAAqBxZ,OACxC,IAAIrD,KAAwB,QAApB8c,EAAC/O,EAAY3K,eAAO,IAAA0Z,OAAA,EAAnBA,EAAqBzZ,OAC9B,IAAIrD,KACR2N,OAAQpK,EAAasE,EAAEC,cAAczE,OACjC,IAAIrD,KAAK6H,EAAEC,cAAczE,OACzB,IAAIrD,OAGd,EACAlD,MAAO,CAAEQ,MAAO,sBAElBgN,SAAU0D,KAEZ9S,EAAAA,EAAAA,KAAC8M,EAAAA,GAAW,CACVvM,MAAO,CACLX,MAAO,SACPgC,MAAO,CACLiB,SAAU,OACV0J,WAAY,OACZnK,MAAO,SAGX2K,UAAWkT,EACXjT,OAAQ,CACNpL,MAAO,CAAEQ,MAAO,oBAAqBH,OAAQ,QAC7CgL,aAAc,MACdC,UAAW,SAACP,GACK,gBAAXA,EAAEQ,MAAqC,UAAXR,EAAEQ,MAChCR,EAAES,gBAEN,EACAV,SAAU,SAACC,GAAO,GAEpBiB,WAAY,CAAC,CAAEpH,IAAK,OAAS,CAAEA,IAAK,QAAU,CAAEA,IAAK,SACrDqH,OAAQ,MACRhM,QAAS,SAEXhC,EAAAA,EAAAA,MAAA,YACE+B,MAAO,CACLO,OAAQ,oBACR4O,aAAc,MACdpO,SAAU,WACVP,MAAO,OACPH,OAAQ,OACR+O,OAAQ,WACRzO,QAAS,OACTV,QAAS,OACTS,OAAQ,OACRD,cAAe,UACftC,SAAA,EAEFC,EAAAA,EAAAA,KAAC8M,EAAAA,GAAW,CACVvM,MAAO,CACLX,MAAO,SACPgC,MAAO,CACLiB,SAAU,OACV0J,WAAY,OACZnK,MAAO,SAGX2K,UAAW5G,EACX6G,OAAQ,CACNpL,MAAO,CAAEQ,MAAO,oBAAqBH,OAAQ,QAC7CgL,aAAc,aACdC,UAAW,SAACP,GACK,gBAAXA,EAAEQ,MAAqC,UAAXR,EAAEQ,MAChCR,EAAES,gBAEN,GAEFQ,WAAY,CACV,CAAEpH,IAAK,QACP,CAAEA,IAAK,cACP,CAAEA,IAAK,kBAETqH,OAAQ,MACRhM,QAAS,SAEX7B,EAAAA,EAAAA,KAAC8M,EAAAA,GAAW,CACVvM,MAAO,CACLX,MAAO,UACPgC,MAAO,CACLiB,SAAU,OACV0J,WAAY,OACZnK,MAAO,SAGX2K,UAAW3G,EACX4G,OAAQ,CACNpL,MAAO,CAAEQ,MAAO,oBAAqBH,OAAQ,QAC7CgL,aAAc,YACdC,UAAW,SAACP,GACK,gBAAXA,EAAEQ,MAAqC,UAAXR,EAAEQ,MAChCR,EAAES,gBAEN,GAEFQ,WAAY,CAAC,CAAEpH,IAAK,aAAe,CAAEA,IAAK,eAC1CqH,OAAQ,MACRhM,QAAS,YAGb7B,EAAAA,EAAAA,KAACiR,EAAAA,EAAM,CACL7N,QAxVR,WAA2B,IAADye,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EACxBnW,EAAqB,CACnBrM,MAAAA,EACAiF,OAAyB,QAAnBgd,EAAE9O,EAAU7K,eAAO,IAAA2Z,OAAA,EAAjBA,EAAmB1Z,MAC3Bka,MAAuB,QAAlBP,EAAE9O,EAAS9K,eAAO,IAAA4Z,OAAA,EAAhBA,EAAkB3Z,MACzB8Y,OAAyB,QAAnBc,EAAEhE,EAAU7V,eAAO,IAAA6Z,OAAA,EAAjBA,EAAmB5Z,MAC3BqK,SAA6B,QAArBwP,EAAEnP,EAAY3K,eAAO,IAAA8Z,OAAA,EAAnBA,EAAqB7Z,MAC/BsK,OAAyB,QAAnBwP,EAAEnP,EAAU5K,eAAO,IAAA+Z,OAAA,EAAjBA,EAAmB9Z,MAC3B/H,KAAqB,QAAjB8hB,EAAEjC,EAAQ/X,eAAO,IAAAga,OAAA,EAAfA,EAAiB/Z,MACvB0J,KAAqB,QAAjBsQ,EAAEhc,EAAQ+B,eAAO,IAAAia,OAAA,EAAfA,EAAiBha,MACvB2J,MAAuB,QAAlBsQ,EAAEhc,EAAS8B,eAAO,IAAAka,OAAA,EAAhBA,EAAkBja,OAE7B,EA6UQjF,MAAM,UACN6O,QAAQ,YACR9C,GAAI,CAAEhN,OAAQ,OAAQY,SAAU,OAAQT,MAAO,QAASrC,SACzD,yBAGDC,EAAAA,EAAAA,KAACiR,EAAAA,EAAM,CACL7N,QAnVR,WAAgC,IAADkf,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAC7B/B,EAA0B,CACxBlhB,MAAAA,EACAiF,OAAyB,QAAnByd,EAAEvP,EAAU7K,eAAO,IAAAoa,OAAA,EAAjBA,EAAmBna,MAC3Bka,MAAuB,QAAlBE,EAAEvP,EAAS9K,eAAO,IAAAqa,OAAA,EAAhBA,EAAkBpa,MACzB8Y,OAAyB,QAAnBuB,EAAEzE,EAAU7V,eAAO,IAAAsa,OAAA,EAAjBA,EAAmBra,MAC3BqK,SAA6B,QAArBiQ,EAAE5P,EAAY3K,eAAO,IAAAua,OAAA,EAAnBA,EAAqBta,MAC/BsK,OAAyB,QAAnBiQ,EAAE5P,EAAU5K,eAAO,IAAAwa,OAAA,EAAjBA,EAAmBva,MAC3B/H,KAAqB,QAAjBuiB,EAAE1C,EAAQ/X,eAAO,IAAAya,OAAA,EAAfA,EAAiBxa,MACvB0J,KAAqB,QAAjB+Q,EAAEzc,EAAQ+B,eAAO,IAAA0a,OAAA,EAAfA,EAAiBza,MACvB2J,MAAuB,QAAlB+Q,EAAEzc,EAAS8B,eAAO,IAAA2a,OAAA,EAAhBA,EAAkB1a,OAE7B,EAwUQjF,MAAM,UACN6O,QAAQ,YACR9C,GAAI,CAAEhN,OAAQ,OAAQY,SAAU,OAAQT,MAAO,QAASrC,SACzD,+BAMT,CACA,SAAS6D,IAA6B,IAADkf,EAAAC,EACnCC,GAA0BriB,EAAAA,EAAAA,YAAWC,EAAAA,GAA7BF,EAAIsiB,EAAJtiB,KAAM2D,EAAO2e,EAAP3e,QACd4e,GAA0BniB,EAAAA,EAAAA,UAAS,IAAGoiB,GAAAliB,EAAAA,EAAAA,GAAAiiB,EAAA,GAA/BrjB,EAAKsjB,EAAA,GAAEhe,EAAQge,EAAA,GAChBxd,GAAWvB,EAAAA,EAAAA,QAA4B,MACvCgf,GAAUhf,EAAAA,EAAAA,QAA0B,MACpC4Z,GAAY5Z,EAAAA,EAAAA,QAA0B,MACtC6Z,GAAa7Z,EAAAA,EAAAA,QAAY,MACzBif,GAAUjf,EAAAA,EAAAA,QAAyB,MACnCkf,GAAQlf,EAAAA,EAAAA,QAAyB,MAEvCmf,GACEra,EAAAA,EAAAA,aAAY,CACVC,YAAa,kBACbC,WAAW,SAADoa,GAAA,OAAAT,EAAAA,IAAAhc,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAE,SAAAwc,EAAO3Y,GAAc,OAAA9D,EAAAA,EAAAA,KAAAO,MAAA,SAAAmc,GAAA,cAAAA,EAAAjc,KAAAic,EAAAhc,MAAA,cAAAgc,EAAAhc,KAAA,EAClBpD,EAAQmF,KACnB,0EACAqB,EACA,CACEE,aAAc,cACdtB,QAAS,CACPC,cAAc,UAADzJ,OAAgB,OAAJS,QAAI,IAAJA,OAAI,EAAJA,EAAMiJ,gBAGnC,KAAD,SAAA8Z,EAAA7Z,OAAA,SAAA6Z,EAAA5Z,MAAA,wBAAA4Z,EAAAjb,OAAA,GAAAgb,EAAA,MACF/a,MAAA,KAAAC,UAAA,EACDoB,UAAW,SAACkB,GACV,IAAMC,EAAU,IAAIC,KAAK,CAACF,EAAShB,MAAO,CAAE5J,KAAM,oBAC5C+K,EAASC,IAAIC,gBAAgBJ,GACnC,GAAIK,EAAAA,GAAU,CAEZ,IAAM9H,EAAO+H,SAASC,cAAc,KAMpC,OALAhI,EAAKnD,KAAO8K,EACZ3H,EAAKiI,SAAW,aAChBF,SAASG,KAAKC,YAAYnI,GAC1BA,EAAKoI,aACLL,SAASG,KAAKG,YAAYrI,EAE5B,CACEsI,OAAOC,KAAK,IAAD9L,OAEPC,QAAgC,0BAAAD,OACT+L,mBAAmBb,IAC5C,SAGN,IAnCYc,EAAoBqX,EAA5B9Y,OAAyC0B,EAAuBoX,EAAlChZ,UAsCtCoZ,GACEza,EAAAA,EAAAA,aAAY,CACVC,YAAa,cACbC,WAAW,SAADwa,GAAA,OAAAZ,EAAAA,IAAAjc,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAE,SAAA4c,EAAOta,GAAa,OAAAvC,EAAAA,EAAAA,KAAAO,MAAA,SAAAuc,GAAA,cAAAA,EAAArc,KAAAqc,EAAApc,MAAA,cAAAoc,EAAApc,KAAA,EACxBpD,EAAQmF,KAAK,yCAA0CF,EAAU,CACrEG,QAAS,CACPC,cAAc,UAADzJ,OAAgB,OAAJS,QAAI,IAAJA,OAAI,EAAJA,EAAMiJ,gBAEjC,cAAAka,EAAAja,OAAA,SAAAia,EAAAha,MAAA,wBAAAga,EAAArb,OAAA,GAAAob,EAAA,MAAAnb,MAAA,KAAAC,UAAA,EACJoB,UAAS,SAACC,GACJA,EAAIC,KAAKC,SACX+T,EAAW9V,QAAQgC,cAAcH,EAAIC,KAAKA,KAE9C,IAbegS,EAAmB0H,EAA9BpZ,UAAwC2R,EAAgByH,EAAxBlZ,OAgBxC,SAASjG,EAAauf,GAA6B,IAA1B7C,EAAM6C,EAAN7C,OAAQ8C,EAAID,EAAJC,KAAMC,EAAEF,EAAFE,GAC/BC,EAAiB,OAAJvjB,QAAI,IAAJA,OAAI,EAAJA,EAAMujB,WACzB,MAAM,GAANhkB,OACiB,SAAfgkB,EACI,wCACA,mDAAkD,KAAAhkB,OAE3C,QAAXghB,EAAmB,GAAE,KAAAhhB,OAAQghB,EAAM,MAAI,yCAAAhhB,OACD8jB,EAAI,QAAA9jB,OAAO+jB,EACrD,CAWA,IAAM9H,GAAsB/X,EAAAA,EAAAA,QAAY8X,GAClCiF,GAAmB/c,EAAAA,EAAAA,QAAYI,GAarC,OAXAhD,EAAAA,EAAAA,YAAU,WACR2a,EAAoBhU,UACpBhD,EACEgc,EAAiBhZ,QAAQ,CACvB+Y,OAAQ,MACR+C,GAAI,GACJD,KAAM,KAGZ,GAAG,KAGDlkB,EAAAA,EAAAA,MAAA4B,EAAAA,SAAA,CAAA1B,SAAA,EACIic,GAAuB9P,KAA4BlM,EAAAA,EAAAA,KAACmM,EAAAA,EAAO,KAC7DtM,EAAAA,EAAAA,MAAA,OACE+B,MAAO,CACLC,QAAS,OACTG,KAAM,EACNK,cAAe,SACfE,QAAS,MACTD,OAAQ,OACRvC,SAAA,EAEFC,EAAAA,EAAAA,KAACoM,EAAAA,GAAa,CACZC,eAAgB,CACdC,aAAc,QAEhB/L,MAAO,CACLX,MAAO,WACPgC,MAAO,CACLiB,SAAU,OACV0J,WAAY,OACZnK,MAAO,QACPP,QAAS,SAGb2K,SAAU,CACRC,KAAM,EACN7K,MAAO,CAAEI,KAAM,GACfmG,MAAOvI,EACP8M,SAAU,SAACC,GACTzH,EAASyH,EAAEC,cAAczE,MAC3B,GAEF0E,UAAWnH,KAEb1F,EAAAA,EAAAA,KAAC8M,EAAAA,GAAW,CACVvM,MAAO,CACLX,MAAO,SACPgC,MAAO,CACLiB,SAAU,OACV0J,WAAY,OACZnK,MAAO,SAGX2K,UAAWoW,EACXnW,OAAQ,CACNpL,MAAO,CAAEQ,MAAO,oBAAqBH,OAAQ,QAC7CgL,aAAc,aACdC,UAAW,SAACP,GACK,gBAAXA,EAAEQ,MAAqC,UAAXR,EAAEQ,MAChCR,EAAES,gBAEN,EACAV,SAAU,SAACC,GAAO,GAEpBiB,WAAY,CAAC,CAAEpH,IAAK,eACpBqH,OAAQ,MACRhM,QAAS,SAEX7B,EAAAA,EAAAA,KAAC8M,EAAAA,GAAW,CACVvM,MAAO,CACLX,MAAO,WACPgC,MAAO,CACLiB,SAAU,OACV0J,WAAY,OACZnK,MAAO,SAGXgO,IAAK4N,EACLjR,UAAWgR,EACX/Q,OAAQ,CACNpL,MAAO,CAAEQ,MAAO,oBAAqBH,OAAQ,QAC7CgL,aAAc,MACdC,UAAW,SAACP,GACK,gBAAXA,EAAEQ,MAAqC,UAAXR,EAAEQ,MAChCR,EAAES,gBAEN,EACAV,SAAU,SAACC,GAAO,IAADuX,EAAAC,EACfjf,EACEX,EAAc,CACZ0c,OAAQtU,EAAEC,cAAczE,MACxB6b,GAAiB,QAAfE,EAAEb,EAAMnb,eAAO,IAAAgc,OAAA,EAAbA,EAAe/b,MACnB4b,KAAqB,QAAjBI,EAAEf,EAAQlb,eAAO,IAAAic,OAAA,EAAfA,EAAiBhc,QAG7B,GAEFyF,WAAY,GACZC,OAAQ,UACRhM,QAAS,aAEX7B,EAAAA,EAAAA,KAAC8N,EAAAA,GAAS,CACRvN,MAAO,CACLX,MAAO,SACPqN,aAAc,GACdrL,MAAO,CACLiB,SAAU,OACV0J,WAAY,OACZnK,MAAO,SAGXiK,eAAgB,CAAEjK,MAAO,QACzB2L,MAAO,CACL3N,KAAM,OACN8M,UAAW,SAACP,GACI,UAAVA,EAAEnG,KAA6B,gBAAVmG,EAAEnG,KACzBmG,EAAES,iBAEU,cAAVT,EAAEnG,KACJmG,EAAES,gBAEN,EACAV,SAAU,SAACC,GAAO,IAADyX,EAAAC,EACfnf,EACEX,EAAc,CACZ0c,OAAyB,QAAnBmD,EAAErG,EAAU7V,eAAO,IAAAkc,OAAA,EAAjBA,EAAmBjc,MAC3B6b,GAAiB,QAAfK,EAAEhB,EAAMnb,eAAO,IAAAmc,OAAA,EAAbA,EAAelc,MACnB4b,KAAMpX,EAAEC,cAAczE,QAG5B,EACAvG,MAAO,CAAEQ,MAAO,sBAElBgN,SAAUgU,KAEZvjB,EAAAA,EAAAA,MAAA,QACE+B,MAAO,CACLiB,SAAU,OACV0J,WAAY,OACZnK,MAAO,QACPQ,UAAW,SACX7C,SAAA,CACH,cACY8E,EAAAA,EAAAA,GAAO,IAAIC,KAAQ,QAAQ,WAExC9E,EAAAA,EAAAA,KAAC8N,EAAAA,GAAS,CACRvN,MAAO,CACLX,MAAO,OACPgC,MAAO,CACLiB,SAAU,OACV0J,WAAY,OACZnK,MAAO,SAGXiK,eAAgB,CAAEjK,MAAO,QACzB2L,MAAO,CACL3N,KAAM,OACN6M,aAAc,GACdC,UAAW,SAACP,GACI,UAAVA,EAAEnG,KAA6B,gBAAVmG,EAAEnG,KACzBmG,EAAES,iBAGU,cAAVT,EAAEnG,KACJmG,EAAES,gBAEN,EACAV,SAAU,SAACC,GAAO,IAAD2X,EAAAC,EACfrf,EACEX,EAAc,CACZ0c,OAAyB,QAAnBqD,EAAEvG,EAAU7V,eAAO,IAAAoc,OAAA,EAAjBA,EAAmBnc,MAC3B6b,GAAIrX,EAAEC,cAAczE,MACpB4b,KAAqB,QAAjBQ,EAAEnB,EAAQlb,eAAO,IAAAqc,OAAA,EAAfA,EAAiBpc,QAG7B,EACAvG,MAAO,CAAEQ,MAAO,sBAElBgN,SAAUiU,KAEZxjB,EAAAA,EAAAA,MAAA,QACE+B,MAAO,CACLiB,SAAU,OACV0J,WAAY,OACZnK,MAAO,QACPQ,UAAW,SACX7C,SAAA,CACH,cACY8E,EAAAA,EAAAA,GAAO,IAAIC,KAAQ,QAAQ,WAExC9E,EAAAA,EAAAA,KAACiR,EAAAA,EAAM,CACL7N,QA7MR,WAA2B,IAADohB,EAAAC,EAAAC,EACxBzY,EAAqB,CACnBrM,MAAAA,EACAmb,WAA6B,QAAnByJ,EAAEzG,EAAU7V,eAAO,IAAAsc,OAAA,EAAjBA,EAAmBrc,MAC/Bwc,WAA2B,QAAjBF,EAAErB,EAAQlb,eAAO,IAAAuc,OAAA,EAAfA,EAAiBtc,MAC7Byc,SAAuB,QAAfF,EAAErB,EAAMnb,eAAO,IAAAwc,OAAA,EAAbA,EAAevc,OAE7B,EAuMQjF,MAAM,UACN6O,QAAQ,YACR9C,GAAI,CAAEhN,OAAQ,OAAQY,SAAU,OAAQT,MAAO,QAASrC,SACzD,6BAMT,CAEA,SAAS8D,EAAaghB,GAA8B,IAADC,EAA1BthB,EAAIqhB,EAAJrhB,KAAMC,EAAWohB,EAAXphB,YAC7BshB,GAA0BpkB,EAAAA,EAAAA,YAAWC,EAAAA,GAA7ByD,EAAO0gB,EAAP1gB,QAAS3D,EAAIqkB,EAAJrkB,KAEjBskB,GAA0BlkB,EAAAA,EAAAA,UACxByD,EAAc,CACZuW,UAAW,UACXtW,OAAQ,UACRuW,WAAY,MACZnJ,KAAM,IAAI9M,QAEbmgB,GAAAjkB,EAAAA,EAAAA,GAAAgkB,EAAA,GAPMplB,EAAKqlB,EAAA,GAAE/f,EAAQ+f,EAAA,GAStBC,GAA4BpkB,EAAAA,EAAAA,UAAS,WAAUqkB,GAAAnkB,EAAAA,EAAAA,GAAAkkB,EAAA,GAAxC1gB,EAAM2gB,EAAA,GAAE1f,EAAS0f,EAAA,GAClBzf,GAAWvB,EAAAA,EAAAA,QAA4B,MACvC4O,GAAY5O,EAAAA,EAAAA,QAA0B,MACtCwB,GAAYxB,EAAAA,EAAAA,QAA0B,MACtCgX,GAAgBhX,EAAAA,EAAAA,QAA0B,MAC1CiX,GAAiBjX,EAAAA,EAAAA,QAAY,MAC7BihB,GAAgBjhB,EAAAA,EAAAA,QAA0B,MAC1C+B,GAAU/B,EAAAA,EAAAA,QAAyB,MAEzCkhB,GACEpc,EAAAA,EAAAA,aAAY,CACVC,YAAa,kBACbC,WAAW,SAADmc,GAAA,OAAAR,EAAAA,IAAAhe,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAE,SAAAue,EAAO1a,GAAc,OAAA9D,EAAAA,EAAAA,KAAAO,MAAA,SAAAke,GAAA,cAAAA,EAAAhe,KAAAge,EAAA/d,MAAA,cAAA+d,EAAA/d,KAAA,EAClBpD,EAAQmF,KAAKhG,EAAMqH,EAAW,CACzCE,aAAc,cACdtB,QAAS,CACPC,cAAc,UAADzJ,OAAgB,OAAJS,QAAI,IAAJA,OAAI,EAAJA,EAAMiJ,gBAEhC,KAAD,SAAA6b,EAAA5b,OAAA,SAAA4b,EAAA3b,MAAA,wBAAA2b,EAAAhd,OAAA,GAAA+c,EAAA,MACH9c,MAAA,KAAAC,UAAA,EACDoB,UAAW,SAACkB,GACV,IAAMC,EAAU,IAAIC,KAAK,CAACF,EAAShB,MAAO,CAAE5J,KAAM,oBAC5C+K,EAASC,IAAIC,gBAAgBJ,GACnC,GAAIK,EAAAA,GAAU,CAEZ,IAAM9H,EAAO+H,SAASC,cAAc,KAMpC,OALAhI,EAAKnD,KAAO8K,EACZ3H,EAAKiI,SAAW,aAChBF,SAASG,KAAKC,YAAYnI,GAC1BA,EAAKoI,aACLL,SAASG,KAAKG,YAAYrI,EAE5B,CACEsI,OAAOC,KAAK,IAAD9L,OAEPC,QAAgC,0BAAAD,OACT+L,mBAAmBb,IAC5C,SAGN,IA/BYc,EAAoBoZ,EAA5B7a,OAAyC0B,EAAuBmZ,EAAlC/a,UAkCtC,SAAS/F,EAAakhB,GAAgD,IAA7CjhB,EAAMihB,EAANjhB,OAAQsW,EAAS2K,EAAT3K,UAAWC,EAAU0K,EAAV1K,WAAYnJ,EAAI6T,EAAJ7T,KAMtD,MAAM,GAAN3R,OAFM,kDAEU,KAAAA,OACe,QAA7B8a,EAAWY,cAA0B,GAAE,IAAA1b,OAAO8a,EAAU,KAAG,MAAA9a,OACxDuE,EAAM,KAAAvE,OAAIwD,EAAW,KAAAxD,OACV,YAAd6a,EAA0B,uBAAyB,GAAE,MAAA7a,OAE1C,YAAXuE,GACIK,EAAAA,EAAAA,GAAO,IAAIC,KAAK8M,GAAO,eACvB/M,EAAAA,EAAAA,GAAO,IAAIC,KAAK8M,GAAO,iBAE/B,CAaA,OACE/R,EAAAA,EAAAA,MAAA4B,EAAAA,SAAA,CAAA1B,SAAA,CACGmM,IAA2BlM,EAAAA,EAAAA,KAACmM,EAAAA,EAAO,KACpCtM,EAAAA,EAAAA,MAAA,OACE+B,MAAO,CACLC,QAAS,OACTG,KAAM,EACNK,cAAe,SACfE,QAAS,MACTD,OAAQ,QACRvC,SAAA,EAEFC,EAAAA,EAAAA,KAACoM,EAAAA,GAAa,CACZC,eAAgB,CACdC,aAAc,QAEhB/L,MAAO,CACLX,MAAO,WACPgC,MAAO,CACLiB,SAAU,OACV0J,WAAY,OACZnK,MAAO,QACPP,QAAS,SAGb2K,SAAU,CACRC,KAAM,EACN7K,MAAO,CAAEI,KAAM,GACfmG,MAAOvI,EACP8M,SAAU,SAACC,GACTzH,EAASyH,EAAEC,cAAczE,MAC3B,GAEF0E,UAAWnH,KAEb1F,EAAAA,EAAAA,KAAC8M,EAAAA,GAAW,CACVvM,MAAO,CACLX,MAAO,WACPgC,MAAO,CACLiB,SAAU,OACV0J,WAAY,OACZnK,MAAO,UAGX2K,UAAWgG,EACX/F,OAAQ,CACNC,aAAc,eACdrL,MAAO,CAAEQ,MAAO,qBAAsBH,OAAQ,QAC9CiL,UAAW,SAACP,GACK,gBAAXA,EAAEQ,MAAqC,UAAXR,EAAEQ,MAChCR,EAAES,gBAEN,EACAV,SAAU,SAACC,GAAO,IAAD+Y,EAAAC,EAAAC,EAAAC,EACf3gB,EACEX,EAAc,CACZuW,UAAWnO,EAAEC,cAAczE,MAC3B3D,OAAyB,QAAnBkhB,EAAE/f,EAAUuC,eAAO,IAAAwd,OAAA,EAAjBA,EAAmBvd,MAC3B4S,WAAiC,QAAvB4K,EAAExK,EAAcjT,eAAO,IAAAyd,OAAA,EAArBA,EAAuBxd,MACnCyJ,KAAMvJ,EAA4B,QAAhBud,EAAC1f,EAAQgC,eAAO,IAAA0d,OAAA,EAAfA,EAAiBzd,OAChC,IAAIrD,KAAoB,QAAhB+gB,EAAC3f,EAAQgC,eAAO,IAAA2d,OAAA,EAAfA,EAAiB1d,OAC1B,IAAIrD,OAGd,GAEF8I,WAAY,CAAC,CAAEpH,IAAK,iBACpBqH,OAAQ,MACRhM,QAAS,SAEX7B,EAAAA,EAAAA,KAAC8M,EAAAA,GAAW,CACVvM,MAAO,CACLX,MAAO,WACPgC,MAAO,CACLiB,SAAU,OACV0J,WAAY,OACZnK,MAAO,UAGX2K,UAAWpH,EACXqH,OAAQ,CACNpL,MAAO,CAAEQ,MAAO,qBAAsBH,OAAQ,QAC9CkG,MAAO3D,EACP0I,UAAW,SAACP,GACK,gBAAXA,EAAEQ,MAAqC,UAAXR,EAAEQ,MAChCR,EAAES,gBAEN,EACAV,SAAU,SAACC,GAAO,IAADmZ,EAAAC,EAAAC,EAAAC,EACe,YAA1BtZ,EAAEC,cAAczE,OAClBT,EAAAA,EAAAA,GAAK,KAAKC,MAAK,WACTzB,EAAQgC,UACVhC,EAAQgC,QAAQC,OAAQtD,EAAAA,EAAAA,GAAO,IAAIC,KAAQ,WAE/C,KAEA4C,EAAAA,EAAAA,GAAK,KAAKC,MAAK,WACTzB,EAAQgC,UACVhC,EAAQgC,QAAQC,OAAQtD,EAAAA,EAAAA,GAAO,IAAIC,KAAQ,cAE/C,IAEFW,EAAUkH,EAAEC,cAAczE,OAC1BjD,EACEX,EAAc,CACZuW,UAA4B,QAAnBgL,EAAE/S,EAAU7K,eAAO,IAAA4d,OAAA,EAAjBA,EAAmB3d,MAC9B3D,OAAQmI,EAAEC,cAAczE,MACxB4S,WAAiC,QAAvBgL,EAAE5K,EAAcjT,eAAO,IAAA6d,OAAA,EAArBA,EAAuB5d,MACnCyJ,KAAMvJ,EAA4B,QAAhB2d,EAAC9f,EAAQgC,eAAO,IAAA8d,OAAA,EAAfA,EAAiB7d,OAChC,IAAIrD,KAAoB,QAAhBmhB,EAAC/f,EAAQgC,eAAO,IAAA+d,OAAA,EAAfA,EAAiB9d,OAC1B,IAAIrD,OAGd,GAEF8I,WAAY,CAAC,CAAEpH,IAAK,YACpBqH,OAAQ,MACRhM,QAAS,SAEX7B,EAAAA,EAAAA,KAAC8M,EAAAA,GAAW,CACVsD,IAAKgL,EACL7a,MAAO,CACLX,MAAO,gBACPgC,MAAO,CACLiB,SAAU,OACV0J,WAAY,OACZnK,MAAO,UAGX2K,UAAWoO,EACXnO,OAAQ,CACNpL,MAAO,CAAEQ,MAAO,qBAAsBH,OAAQ,QAC9CgL,aAAc,KACdC,UAAW,SAACP,GACK,gBAAXA,EAAEQ,MAAqC,UAAXR,EAAEQ,MAChCR,EAAES,gBAEN,EACAV,SAAU,SAACC,GAAO,IAADuZ,EAAAC,EAAAC,EAAAC,EACfnhB,EACEX,EAAc,CACZuW,UAA4B,QAAnBoL,EAAEnT,EAAU7K,eAAO,IAAAge,OAAA,EAAjBA,EAAmB/d,MAC9B3D,OAAyB,QAAnB2hB,EAAExgB,EAAUuC,eAAO,IAAAie,OAAA,EAAjBA,EAAmBhe,MAC3B4S,WAAYpO,EAAEC,cAAczE,MAC5ByJ,KAAMvJ,EAA4B,QAAhB+d,EAAClgB,EAAQgC,eAAO,IAAAke,OAAA,EAAfA,EAAiBje,OAChC,IAAIrD,KAAoB,QAAhBuhB,EAACngB,EAAQgC,eAAO,IAAAme,OAAA,EAAfA,EAAiBle,OAC1B,IAAIrD,OAGd,GAEF8I,WAAY,CAAC,CAAE0Y,QAAS,QACxBzY,OAAQ,UACRhM,QAAS,aAGX7B,EAAAA,EAAAA,KAAC8N,EAAAA,GAAS,CACRvN,MAAO,CACLX,MAAO,UACPgC,MAAO,CACLiB,SAAU,OACV0J,WAAY,OACZnK,MAAO,UAGX2L,MAAO,CACL3N,KAAiB,YAAXoE,EAAuB,QAAU,OACvCyI,aACa,YAAXzI,GACIK,EAAAA,EAAAA,GAAO,IAAIC,KAAQ,YACnBD,EAAAA,EAAAA,GAAO,IAAIC,KAAQ,cACzBoI,UAAW,SAACP,GACI,UAAVA,EAAEnG,KAA6B,gBAAVmG,EAAEnG,KACzBmG,EAAES,iBAGU,cAAVT,EAAEnG,KACJmG,EAAES,gBAEN,EAEA+K,OAAQ,SAACxL,GAAO,IAAD4Z,EAAAC,EAAAC,EACbvhB,EACEX,EAAc,CACZuW,UAA4B,QAAnByL,EAAExT,EAAU7K,eAAO,IAAAqe,OAAA,EAAjBA,EAAmBpe,MAC9B3D,OAAyB,QAAnBgiB,EAAE7gB,EAAUuC,eAAO,IAAAse,OAAA,EAAjBA,EAAmBre,MAC3B4S,WAAiC,QAAvB0L,EAAEtL,EAAcjT,eAAO,IAAAue,OAAA,EAArBA,EAAuBte,MACnCyJ,KAAMjF,EAAEC,cAAczE,QAG5B,EACAvG,MAAO,CAAEQ,MAAO,uBAElBgN,SAAUlJ,KAEZlG,EAAAA,EAAAA,KAAC8M,EAAAA,GAAW,CACVvM,MAAO,CACLX,MAAO,gBACPgC,MAAO,CACLiB,SAAU,OACV0J,WAAY,OACZnK,MAAO,UAGX2K,UAAWqY,EACXpY,OAAQ,CACNpL,MAAO,CAAEQ,MAAO,qBAAsBH,OAAQ,QAC9CgL,aAAc,UACdC,UAAW,SAACP,GACK,gBAAXA,EAAEQ,MAAqC,UAAXR,EAAEQ,MAChCR,EAAES,gBAEN,GAEFQ,WAAY,CAAC,CAAEpH,IAAK,WAAa,CAAEA,IAAK,cACxCqH,OAAQ,MACRhM,QAAS,SAEX7B,EAAAA,EAAAA,KAACiR,EAAAA,EAAM,CACL7N,QAtOR,WAA2B,IAADsjB,EAAAC,EAAAC,EAAAC,EAAAC,EACxB7a,EAAqB,CACnB6O,UAA4B,QAAnB4L,EAAE3T,EAAU7K,eAAO,IAAAwe,OAAA,EAAjBA,EAAmBve,MAC9B3D,OAAyB,QAAnBmiB,EAAEhhB,EAAUuC,eAAO,IAAAye,OAAA,EAAjBA,EAAmBxe,MAC3B4S,WAAiC,QAAvB6L,EAAEzL,EAAcjT,eAAO,IAAA0e,OAAA,EAArBA,EAAuBze,MACnC4e,WAAiC,QAAvBF,EAAEzB,EAAcld,eAAO,IAAA2e,OAAA,EAArBA,EAAuB1e,MACnCyJ,KAAqB,QAAjBkV,EAAE5gB,EAAQgC,eAAO,IAAA4e,OAAA,EAAfA,EAAiB3e,MACvBvI,MAAAA,GAEJ,EA8NQsD,MAAM,UACN6O,QAAQ,YACR9C,GAAI,CAAEhN,OAAQ,OAAQY,SAAU,OAAQT,MAAO,QAASrC,SACzD,yBAMT,CACA,IAAMsI,EAAe,SAAC2e,GAA6C,IAA/BC,EAAUve,UAAA4F,OAAA,QAAA4Y,IAAAxe,UAAA,GAAAA,UAAA,GAAG,aACzCye,GAAaC,EAAAA,EAAAA,GAAMJ,EAASC,EAAY,IAAIniB,MAGlD,OADEuiB,EAAAA,EAAAA,GAAQF,KAAetiB,EAAAA,EAAAA,GAAOsiB,EAAYF,KAAgBD,CAE9D,C,4BCl5GIM,EAAyBC,EAAQ,OAIrCC,EAAQ,OAAU,EAClB,IAAIC,EAAiBH,EAAuBC,EAAQ,QAChDG,EAAcH,EAAQ,OACtBI,GAAW,EAAIF,EAAeG,SAAS,EAAc,EAAIF,EAAYG,KAAK,SAAU,CACtFC,GAAI,KACJC,GAAI,IACJC,EAAG,KACF,MAAmB,EAAIN,EAAYG,KAAK,OAAQ,CACjDI,EAAG,kQACF,MAAO,gBACVT,EAAQ,EAAUG,C,2BCddL,EAAyBC,EAAQ,OAIrCC,EAAQ,OAAU,EAClB,IAAIC,EAAiBH,EAAuBC,EAAQ,QAChDG,EAAcH,EAAQ,OACtBI,GAAW,EAAIF,EAAeG,UAAuB,EAAIF,EAAYG,KAAK,OAAQ,CACpFI,EAAG,+OACD,UACJT,EAAQ,EAAUG,C","sources":["components/Helmet.tsx","feautures/Admin/Reports/Accounting/AccountingReport.tsx","../node_modules/@mui/icons-material/PersonSearch.js","../node_modules/@mui/icons-material/Search.js"],"sourcesContent":["\r\nimport { Helmet } from \"react-helmet\";\r\n\r\nconst PageHelmet = ({ title = '' }: { title: string }) => {\r\n    const imgUrl = process.env.REACT_APP_IMAGE_URL;\r\n    const department = process.env.REACT_APP_DEPARTMENT\r\n    return (\r\n        <Helmet>\r\n            <title>{`${department} - ${title}`}</title>\r\n            <link rel=\"icon\" type=\"image/png\" href={`${imgUrl}/logo.png`} />\r\n        </Helmet>\r\n    );\r\n};\r\n\r\nexport default PageHelmet;","import { Button } from \"@mui/material\";\r\nimport {\r\n  SelectInput,\r\n  TextAreaInput,\r\n  TextInput,\r\n} from \"../../../../components/UpwardFields\";\r\nimport { useContext, useEffect, useRef, useState } from \"react\";\r\nimport SearchIcon from \"@mui/icons-material/Search\";\r\nimport { format, isValid, parse } from \"date-fns\";\r\nimport { useMutation } from \"react-query\";\r\nimport { AuthContext } from \"../../../../components/AuthContext\";\r\nimport { useUpwardTableModalSearchSafeMode } from \"../../../../components/DataGridViewReact\";\r\nimport { wait } from \"../../../../lib/wait\";\r\nimport { Loading } from \"../../../../components/Loading\";\r\nimport PersonSearchIcon from \"@mui/icons-material/PersonSearch\";\r\nimport PageHelmet from \"../../../../components/Helmet\";\r\nimport { isMobile } from \"react-device-detect\";\r\nimport \"../../../../style/monbileview/report/report.css\";\r\n\r\nconst buttons = [\r\n  { label: \"Chart of Accounts\", id: 0 },\r\n  { label: \"Schedule of Account\", id: 1 },\r\n  { label: \"Subsidiary Ledger\", id: 2 },\r\n  { label: \"Trial Balance\", id: 3 },\r\n  { label: \"Income Statement -Long\", id: 4 },\r\n  { label: \"Balance Sheet -Long\", id: 5 },\r\n  { label: \"General edger\", id: 6 },\r\n  { label: \"Abstract of Collections\", id: 7 },\r\n  { label: \"Deposited Collections\", id: 8 },\r\n  { label: \"Returned Checks\", id: 9 },\r\n  { label: \"Post Dated Checks Registry\", id: 10 },\r\n  { label: \"Petty Cash Fund Disbursement\", id: 11 },\r\n  { label: \"Cash Disbursement Book - CDB\", id: 12 },\r\n  { label: \"General Journal Book - GJB\", id: 13 },\r\n  { label: \"Production Book - PB\", id: 14 },\r\n  { label: \"VAT Book - VB\", id: 15 },\r\n  { label: \"Aging Account\", id: 16 },\r\n  { label: \"Cancel Accounts\", id: 17 },\r\n  { label: \"Fully Paid Accounts\", id: 18 },\r\n  { label: \"Summary of Expenses\", id: 19 },\r\n  { label: \"List of Purchase\", id: 20 },\r\n  { label: \"Checklist on Month-End Accrual\", id: 21 },\r\n];\r\n\r\nexport default function AccountingReport() {\r\n  const { user } = useContext(AuthContext);\r\n  const [buttonList, setButtonList] = useState(buttons);\r\n  const [buttonSelected, setButtonSelected] = useState(1);\r\n\r\n  useEffect(() => {\r\n    if (user) {\r\n      if (user.userAccess === \"ACCOUNTING_CHECKS\") {\r\n        setButtonList([{ label: \"Post Dated Checks Registry\", id: 10 }]);\r\n        setButtonSelected(10);\r\n      }\r\n    }\r\n  }, [user]);\r\n\r\n  return (\r\n    <>\r\n      <PageHelmet title={buttonList[buttonSelected].label} />\r\n      <div\r\n        className=\"main\"\r\n        style={{\r\n          display: \"flex\",\r\n          alignItems: \"center\",\r\n          justifyContent: \"center\",\r\n          flex: 1,\r\n          height: \"100vh\",\r\n          backgroundColor: \"#F1F1F1\",\r\n        }}\r\n      >\r\n        <div\r\n          className=\"report-content\"\r\n          style={{\r\n            border: \"1px solid #94a3b8\",\r\n            width: \"700px\",\r\n            height: \"480px\",\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            rowGap: \"10px\",\r\n            padding: \"20px\",\r\n            boxShadow: \"0px 0px 5px -1px rgba(0,0,0,0.75)\",\r\n          }}\r\n        >\r\n          <div\r\n            className=\"component-holder\"\r\n            style={{\r\n              flex: 1,\r\n              display: \"flex\",\r\n              columnGap: \"10px\",\r\n            }}\r\n          >\r\n            <div\r\n              className=\"report-buttons-dekstop\"\r\n              style={{\r\n                width: \"250px\",\r\n                background: \"white\",\r\n                display: \"flex\",\r\n                flexDirection: \"column\",\r\n                rowGap: \"2px\",\r\n                position: \"relative\",\r\n              }}\r\n            >\r\n              <span\r\n                style={{\r\n                  width: \"100%\",\r\n                  textAlign: \"center\",\r\n                  fontSize: \"12px\",\r\n                  padding: \"5px\",\r\n                }}\r\n              >\r\n                *** ACCOUNTING ****\r\n              </span>\r\n              <div\r\n                style={{\r\n                  position: \"relative\",\r\n                  width: \"100%\",\r\n                  height: \"380px\",\r\n                  overflow: \"auto\",\r\n                }}\r\n              >\r\n                <div\r\n                  style={{\r\n                    width: \"100%\",\r\n                    height: \"100%\",\r\n                    position: \"absolute\",\r\n                  }}\r\n                >\r\n                  {buttonList.map((itm, idx) => {\r\n                    return (\r\n                      <>\r\n                        {itm.id === 1 && <div style={{ height: \"15px\" }}></div>}\r\n                        {itm.id === 7 && <div style={{ height: \"15px\" }}></div>}\r\n                        {itm.id === 10 && (\r\n                          <div style={{ height: \"15px\" }}></div>\r\n                        )}\r\n                        {itm.id === 11 && (\r\n                          <div style={{ height: \"15px\" }}></div>\r\n                        )}\r\n                        {itm.id === 16 && (\r\n                          <div style={{ height: \"15px\" }}></div>\r\n                        )}\r\n                        {itm.id === 19 && (\r\n                          <div style={{ height: \"15px\" }}></div>\r\n                        )}\r\n                        {itm.id === 21 && (\r\n                          <div style={{ height: \"15px\" }}></div>\r\n                        )}\r\n                        <button\r\n                          key={idx}\r\n                          style={{\r\n                            fontSize: \"12px\",\r\n                            border: \"none\",\r\n                            background:\r\n                              buttonSelected === itm.id\r\n                                ? \"#0076d7\"\r\n                                : \"transparent\",\r\n                            color:\r\n                              buttonSelected === itm.id ? \"white\" : \"black\",\r\n                            width: \"100%\",\r\n                            textAlign: \"left\",\r\n                            cursor: \"pointer\",\r\n                          }}\r\n                          onClick={() => {\r\n                            setButtonSelected(itm.id);\r\n                          }}\r\n                        >\r\n                          {itm.label}\r\n                        </button>\r\n                      </>\r\n                    );\r\n                  })}\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div\r\n              className=\"component\"\r\n              style={{\r\n                flex: 1,\r\n              }}\r\n            >\r\n              {buttonSelected === 1 && <FormScheduleAccount />}\r\n              {buttonSelected === 2 && <FormSubsidiaryLedger />}\r\n              {buttonSelected === 3 && (\r\n                <FormFSReport\r\n                  link={\r\n                    \"/reports/accounting/report/generate-report-trial-balance\"\r\n                  }\r\n                  reportTitle={\"Trial Balance\"}\r\n                />\r\n              )}\r\n              {buttonSelected === 4 && (\r\n                <FormFSReport\r\n                  link={\r\n                    \"/reports/accounting/report/generate-report-income-statement\"\r\n                  }\r\n                  reportTitle={\"Income Statement - Long\"}\r\n                />\r\n              )}\r\n              {buttonSelected === 5 && (\r\n                <FormFSReport\r\n                  link={\r\n                    \"/reports/accounting/report/generate-report-balance-sheet\"\r\n                  }\r\n                  reportTitle={\"Balance Sheet\"}\r\n                />\r\n              )}\r\n              {buttonSelected === 6 && (\r\n                <FormFSReport\r\n                  link={\r\n                    \"/reports/accounting/report/generate-report-general-ledger\"\r\n                  }\r\n                  reportTitle={\"General Ledger\"}\r\n                />\r\n              )}\r\n              {buttonSelected === 7 && (\r\n                <FormAbsDepoReturned\r\n                  link={\r\n                    \"/reports/accounting/report/generate-report-abstract-collection\"\r\n                  }\r\n                  reportTitle={\"Abstract of Collections\"}\r\n                />\r\n              )}\r\n              {buttonSelected === 8 && (\r\n                <FormAbsDepoReturned\r\n                  link={\r\n                    \"/reports/accounting/report/generate-report-deposit-collection\"\r\n                  }\r\n                  reportTitle={\"Deposited of Collections\"}\r\n                />\r\n              )}\r\n              {buttonSelected === 9 && (\r\n                <FormAbsDepoReturned\r\n                  link={\r\n                    \"/reports/accounting/report/generate-report-returned-checks\"\r\n                  }\r\n                  reportTitle={\"Returned  of Checks\"}\r\n                />\r\n              )}\r\n              {buttonSelected === 10 && <FormPostDatedCheckRegistry />}\r\n              {buttonSelected === 11 && <PettyCashFundDisbursement />}\r\n              {buttonSelected === 12 && (\r\n                <FormAbsDepoReturned\r\n                  link={\r\n                    \"/reports/accounting/report/generate-report-cash-disbursement-book-CDB\"\r\n                  }\r\n                  reportTitle={\"Cash Disbursement Book - CDB\"}\r\n                />\r\n              )}\r\n              {buttonSelected === 13 && (\r\n                <FormAbsDepoReturned\r\n                  link={\r\n                    \"/reports/accounting/report/generate-report-general-journal-book-GJB\"\r\n                  }\r\n                  reportTitle={\"General Journal Book - GJB\"}\r\n                />\r\n              )}\r\n              {buttonSelected === 16 && (\r\n                <AgingAccounts\r\n                  link={\r\n                    \"/reports/accounting/report/generate-report-aging-account\"\r\n                  }\r\n                  reportTitle={\"Aging of Accounts\"}\r\n                />\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nfunction FormScheduleAccount() {\r\n  const chartAccountUpwardTableModalSearchRef = useRef<any>(null);\r\n  const { user, myAxios } = useContext(AuthContext);\r\n  const [title, setTitle] = useState(\r\n    generateTitle({\r\n      report: \"All Accounts\",\r\n      subsiText: \"ALL\",\r\n      insuarnceIndex: 0,\r\n      insurance: \"ALL\",\r\n      dateValue: format(new Date(), \"MMMM dd, yyyy\"),\r\n      account: \"\",\r\n      accountTitle: \"\",\r\n    })\r\n  );\r\n  const [subsi, setSubsi] = useState(\"I.D No.\");\r\n  const [report, setReport] = useState(\"All Accounts\");\r\n  const titleRef = useRef<HTMLTextAreaElement>(null);\r\n  const reportRef = useRef<HTMLSelectElement>(null);\r\n  const accountRef = useRef<HTMLInputElement>(null);\r\n  const _accountRef = useRef<HTMLInputElement>(null);\r\n  const subsiRef = useRef<HTMLSelectElement>(null);\r\n\r\n  const __subsiRef = useRef<any>(null);\r\n  const _subsiRef = useRef<HTMLSelectElement>(null);\r\n  const subsiTextRef = useRef<HTMLInputElement>(null);\r\n\r\n  const dateRef = useRef<HTMLInputElement>(null);\r\n  const sortRef = useRef<HTMLSelectElement>(null);\r\n  const orderRef = useRef<HTMLSelectElement>(null);\r\n\r\n  const {\r\n    UpwardTableModalSearch: ChartAccountUpwardTableModalSearch,\r\n    openModal: chartAccountOpenModal,\r\n    closeModal: chartAccountCloseModal,\r\n  } = useUpwardTableModalSearchSafeMode({\r\n    link: \"/reports/accounting/report/get-chart-account\",\r\n    column: [\r\n      { key: \"Code\", label: \"Code\", width: 80 },\r\n      { key: \"Title\", label: \"Title\", width: 200 },\r\n      {\r\n        key: \"Short_Name\",\r\n        label: \"Short Name\",\r\n        width: 370,\r\n      },\r\n    ],\r\n    getSelectedItem: async (rowItm: any, _: any, rowIdx: any, __: any) => {\r\n      if (rowItm) {\r\n        wait(100).then(() => {\r\n          if (accountRef.current) {\r\n            accountRef.current.value = rowItm[0];\r\n          }\r\n          if (_accountRef.current) {\r\n            _accountRef.current.value = rowItm[1];\r\n          }\r\n\r\n          setTitle(\r\n            generateTitle({\r\n              report,\r\n              subsiText: subsiTextRef.current?.value || \"\",\r\n              insuarnceIndex: _subsiRef.current?.selectedIndex,\r\n              insurance: _subsiRef.current?.value,\r\n              dateValue: validateDate(dateRef.current?.value as any)\r\n                ? new Date(dateRef.current?.value as any)\r\n                : new Date(),\r\n              account: rowItm[0],\r\n              accountTitle: rowItm[1],\r\n            })\r\n          );\r\n\r\n          subsiRef.current?.focus();\r\n        });\r\n        chartAccountCloseModal();\r\n      }\r\n    },\r\n  });\r\n\r\n  const { isLoading: isLoadingInsurance, mutate: mutateInsurance } =\r\n    useMutation({\r\n      mutationKey: \"insurance\",\r\n      mutationFn: async (variable: any) =>\r\n        await myAxios.post(\r\n          `/reports/accounting/report/get-list-of-insurance`,\r\n          variable,\r\n          {\r\n            headers: {\r\n              Authorization: `Bearer ${user?.accessToken}`,\r\n            },\r\n          }\r\n        ),\r\n      onSuccess(res) {\r\n        if (res.data.success) {\r\n          __subsiRef.current.setDataSource([\r\n            { AccountCode: \"ALL\" },\r\n            ...res.data.data,\r\n          ]);\r\n        }\r\n      },\r\n    });\r\n\r\n  function generateTitle({\r\n    report,\r\n    subsiText,\r\n    insuarnceIndex,\r\n    insurance,\r\n    dateValue,\r\n    account,\r\n    accountTitle,\r\n  }: any) {\r\n    const _title =\r\n      process.env.REACT_APP_DEPARTMENT === \"UMIS\"\r\n        ? \"UPWARD MANAGEMENT INSURANCE SERVICES\"\r\n        : \"UPWARD CONSULTANCY SERVICES AND MANAGEMENT INC.\";\r\n    if (report === \"GL Account (Detailed)\") {\r\n      let txtReportTitleText = `${_title}${\r\n        subsiText === \"\" || subsiText === \"ALL\" ? \"\" : `\\n(${subsiText})`\r\n      }\\nSchedule of ${accountTitle} ${` - ${\r\n        insurance ? insurance : \"\"\r\n      }`} (${account})\\n${format(new Date(dateValue), \"MMMM dd, yyyy\")}`;\r\n      // setTitle(txtReportTitleText);\r\n      return txtReportTitleText;\r\n    }\r\n    if (report === \"All Accounts\") {\r\n      let txtReportTitleText = `${_title}${\r\n        subsiText === \"\" || subsiText === \"ALL\" ? \"\" : `\\n(${subsiText})`\r\n      }\\nSchedule of Accounts\\n${format(new Date(dateValue), \"MMMM dd, yyyy\")}`;\r\n      // setTitle(txtReportTitleText);\r\n      return txtReportTitleText;\r\n    }\r\n  }\r\n\r\n  function generateReport() {\r\n    mutateGenerateReport({\r\n      title,\r\n      report: reportRef.current?.value,\r\n      account: accountRef.current?.value,\r\n      accountName: _accountRef.current?.value,\r\n      subsi: subsiRef.current?.selectedIndex,\r\n      subsiText: subsiTextRef.current?.value,\r\n      insurance: _subsiRef.current?.value || \"\",\r\n      date: dateRef.current?.value,\r\n      sort: sortRef.current?.selectedIndex,\r\n      order: sortRef.current?.selectedIndex,\r\n    });\r\n  }\r\n\r\n  const { mutate: mutateGenerateReport, isLoading: isLoadingGenerateReport } =\r\n    useMutation({\r\n      mutationKey: \"generate-report\",\r\n      mutationFn: async (variables: any) => {\r\n        return await myAxios.post(\r\n          \"/reports/accounting/report/generate-report-schedule-of-account\",\r\n          variables,\r\n          {\r\n            responseType: \"arraybuffer\",\r\n            headers: {\r\n              Authorization: `Bearer ${user?.accessToken}`,\r\n            },\r\n          }\r\n        );\r\n      },\r\n      onSuccess: (response) => {\r\n        const pdfBlob = new Blob([response.data], { type: \"application/pdf\" });\r\n        const pdfUrl = URL.createObjectURL(pdfBlob);\r\n        if (isMobile) {\r\n          // MOBILE: download directly\r\n          const link = document.createElement(\"a\");\r\n          link.href = pdfUrl;\r\n          link.download = \"report.pdf\";\r\n          document.body.appendChild(link);\r\n          link.click();\r\n          document.body.removeChild(link);\r\n          return;\r\n        } else {\r\n          window.open(\r\n            `/${\r\n              process.env.REACT_APP_DEPARTMENT\r\n            }/dashboard/report?pdf=${encodeURIComponent(pdfUrl)}`,\r\n            \"_blank\"\r\n          );\r\n        }\r\n      },\r\n    });\r\n\r\n  return (\r\n    <>\r\n      {(isLoadingInsurance || isLoadingGenerateReport) && <Loading />}\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          flex: 1,\r\n          flexDirection: \"column\",\r\n          padding: \"5px\",\r\n          rowGap: \"7px\",\r\n        }}\r\n      >\r\n        <TextAreaInput\r\n          containerStyle={{\r\n            marginBottom: \"10px\",\r\n          }}\r\n          label={{\r\n            title: \"Title : \",\r\n            style: {\r\n              fontSize: \"12px\",\r\n              fontWeight: \"bold\",\r\n              width: \"100px\",\r\n              display: \"none\",\r\n            },\r\n          }}\r\n          textarea={{\r\n            rows: 7,\r\n            style: { flex: 1 },\r\n            value: title,\r\n            onChange: (e) => {\r\n              setTitle(e.currentTarget.value);\r\n            },\r\n          }}\r\n          _inputRef={titleRef}\r\n        />\r\n        <SelectInput\r\n          label={{\r\n            title: \"Report :\",\r\n            style: {\r\n              fontSize: \"12px\",\r\n              fontWeight: \"bold\",\r\n              width: \"90px\",\r\n            },\r\n          }}\r\n          selectRef={reportRef}\r\n          select={{\r\n            value: report,\r\n            style: { width: \"calc(100% - 90px)\", height: \"22px\" },\r\n            defaultValue: \"All Accounts\",\r\n            onKeyDown: (e) => {\r\n              if (e.code === \"NumpadEnter\" || e.code === \"Enter\") {\r\n                e.preventDefault();\r\n              }\r\n            },\r\n            onChange: (e) => {\r\n              setReport(e.currentTarget.value);\r\n\r\n              setTitle(\r\n                generateTitle({\r\n                  report: e.currentTarget.value,\r\n                  subsiText: subsiTextRef.current?.value || \"\",\r\n                  insuarnceIndex: _subsiRef.current?.selectedIndex,\r\n                  insurance: _subsiRef.current?.value,\r\n                  dateValue: validateDate(dateRef.current?.value as any)\r\n                    ? new Date(dateRef.current?.value as any)\r\n                    : new Date(),\r\n                  account: accountRef.current?.value,\r\n                  accountTitle: _accountRef.current?.value,\r\n                })\r\n              );\r\n            },\r\n          }}\r\n          datasource={[\r\n            { key: \"GL Account (Detailed)\" },\r\n            { key: \"All Accounts\" },\r\n          ]}\r\n          values={\"key\"}\r\n          display={\"key\"}\r\n        />\r\n        <TextInput\r\n          label={{\r\n            title: \"Account : \",\r\n            style: {\r\n              fontSize: \"12px\",\r\n              fontWeight: \"bold\",\r\n              width: \"90px\",\r\n            },\r\n          }}\r\n          input={{\r\n            disabled:report === \"All Accounts\",\r\n            className: \"search-input-up-on-key-down\",\r\n            type: \"text\",\r\n            defaultValue: \"7.10.06\",\r\n            onKeyDown: async (e) => {\r\n              if (e.key === \"Enter\" || e.key === \"NumpadEnter\") {\r\n                e.preventDefault();\r\n\r\n                const value = e.currentTarget.value;\r\n                const response =\r\n                  await chartAccountUpwardTableModalSearchRef.current.mutateReturnValue(\r\n                    { search: value }\r\n                  );\r\n\r\n                if (response.data.data.length > 0) {\r\n                  wait(100).then(() => {\r\n                    if (accountRef.current) {\r\n                      accountRef.current.value = response.data.data[0].Code;\r\n                    }\r\n                    if (_accountRef.current) {\r\n                      _accountRef.current.value = response.data.data[0].Title;\r\n                    }\r\n\r\n                    setTitle(\r\n                      generateTitle({\r\n                        report,\r\n                        subsiText: subsiTextRef.current?.value || \"\",\r\n                        insuarnceIndex: _subsiRef.current?.selectedIndex,\r\n                        insurance: _subsiRef.current?.value,\r\n                        dateValue: validateDate(dateRef.current?.value as any)\r\n                          ? new Date(dateRef.current?.value as any)\r\n                          : new Date(),\r\n                        account: response.data.data[0].Code,\r\n                        accountTitle: response.data.data[0].Title,\r\n                      })\r\n                    );\r\n\r\n                    subsiRef.current?.focus();\r\n                  });\r\n                } else {\r\n                  chartAccountOpenModal(value);\r\n                }\r\n              }\r\n              if (e.key === \"ArrowDown\") {\r\n                e.preventDefault();\r\n              }\r\n            },\r\n            style: { width: \"calc(100% - 90px)\" },\r\n          }}\r\n          icon={\r\n            <SearchIcon\r\n              sx={{\r\n                fontSize: \"18px\",\r\n              }}\r\n            />\r\n          }\r\n          disableIcon={report === \"All Accounts\"}\r\n          onIconClick={(e) => {\r\n            e.preventDefault();\r\n            if (accountRef.current) {\r\n              chartAccountOpenModal(accountRef.current.value);\r\n            }\r\n          }}\r\n          inputRef={accountRef}\r\n        />\r\n        <TextInput\r\n          label={{\r\n            title: \"\",\r\n            style: {\r\n              display: \"none\",\r\n            },\r\n          }}\r\n          input={{\r\n            readOnly: true,\r\n            defaultValue: \"Communications Expense\",\r\n            type: \"text\",\r\n            onKeyDown: (e) => {\r\n              if (e.key === \"Enter\" || e.key === \"NumpadEnter\") {\r\n                e.preventDefault();\r\n                // searchCashDisbursementOpenModal(e.currentTarget.value);\r\n              }\r\n              if (e.key === \"ArrowDown\") {\r\n                e.preventDefault();\r\n              }\r\n            },\r\n            style: { width: \"100%\" },\r\n          }}\r\n          inputRef={_accountRef}\r\n        />\r\n\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            columnGap: \"6px\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <SelectInput\r\n            label={{\r\n              title: \"Subsidiary :\",\r\n              style: {\r\n                fontSize: \"12px\",\r\n                fontWeight: \"bold\",\r\n                width: \"90px\",\r\n              },\r\n            }}\r\n            selectRef={subsiRef}\r\n            containerStyle={{ flex: 2 }}\r\n            select={{\r\n              style: { flex: 1, height: \"22px\" },\r\n              value: subsi,\r\n              onKeyDown: (e) => {\r\n                if (e.code === \"NumpadEnter\" || e.code === \"Enter\") {\r\n                  e.preventDefault();\r\n                }\r\n              },\r\n              onChange: (e) => {\r\n                if (e.currentTarget.selectedIndex === 2) {\r\n                  mutateInsurance({});\r\n                }\r\n\r\n                setTitle(\r\n                  generateTitle({\r\n                    report,\r\n                    subsiText: subsiTextRef.current?.value || \"\",\r\n                    insuarnceIndex: _subsiRef.current?.selectedIndex,\r\n                    insurance: _subsiRef.current?.value,\r\n                    dateValue: validateDate(dateRef.current?.value as any)\r\n                      ? new Date(dateRef.current?.value as any)\r\n                      : new Date(),\r\n                    account: accountRef.current?.value,\r\n                    accountTitle: _accountRef.current?.value,\r\n                  })\r\n                );\r\n                setSubsi(e.target.value);\r\n              },\r\n            }}\r\n            datasource={[\r\n              { key: \"Sub Acct\" },\r\n              { key: \"I.D No.\" },\r\n              { key: \"Insurance\" },\r\n            ]}\r\n            values={\"key\"}\r\n            display={\"key\"}\r\n          />\r\n          {subsi !== \"Insurance\" ? (\r\n            <TextInput\r\n              containerStyle={{\r\n                flex: 1,\r\n              }}\r\n              label={{\r\n                title: \"\",\r\n                style: {\r\n                  display: \"none\",\r\n                },\r\n              }}\r\n              input={{\r\n                type: \"text\",\r\n                defaultValue: \"ALL\",\r\n                onKeyDown: (e) => {\r\n                  if (e.key === \"Enter\" || e.key === \"NumpadEnter\") {\r\n                    e.preventDefault();\r\n                    // searchCashDisbursementOpenModal(e.currentTarget.value);\r\n                  }\r\n                  if (e.key === \"ArrowDown\") {\r\n                    e.preventDefault();\r\n                  }\r\n                },\r\n                onChange: (e) => {\r\n                  setTitle(\r\n                    generateTitle({\r\n                      report,\r\n                      subsiText: e.currentTarget.value || \"\",\r\n                      insuarnceIndex: _subsiRef.current?.selectedIndex,\r\n                      insurance: _subsiRef.current?.value,\r\n                      dateValue: validateDate(dateRef.current?.value as any)\r\n                        ? new Date(dateRef.current?.value as any)\r\n                        : new Date(),\r\n                      account: accountRef.current?.value,\r\n                      accountTitle: _accountRef.current?.value,\r\n                    })\r\n                  );\r\n                },\r\n                style: { width: \"100px\" },\r\n              }}\r\n              inputRef={subsiTextRef}\r\n            />\r\n          ) : (\r\n            <SelectInput\r\n              label={{\r\n                title: \"\",\r\n                style: {\r\n                  display: \"none\",\r\n                },\r\n              }}\r\n              ref={__subsiRef}\r\n              selectRef={_subsiRef}\r\n              containerStyle={{\r\n                flex: 1,\r\n              }}\r\n              select={{\r\n                style: { flex: 1, height: \"22px\" },\r\n                defaultValue: \"ALL\",\r\n                onKeyDown: (e) => {\r\n                  if (e.code === \"NumpadEnter\" || e.code === \"Enter\") {\r\n                    e.preventDefault();\r\n                  }\r\n                },\r\n                onChange: (e) => {\r\n                  setTitle(\r\n                    generateTitle({\r\n                      report,\r\n                      subsiText: subsiTextRef.current?.value || \"\",\r\n                      insuarnceIndex: e.currentTarget.selectedIndex,\r\n                      insurance: e.currentTarget.value,\r\n                      dateValue: validateDate(dateRef.current?.value as any)\r\n                        ? new Date(dateRef.current?.value as any)\r\n                        : new Date(),\r\n                      account: accountRef.current?.value,\r\n                      accountTitle: _accountRef.current?.value,\r\n                    })\r\n                  );\r\n                },\r\n              }}\r\n              datasource={[]}\r\n              values={\"AccountCode\"}\r\n              display={\"AccountCode\"}\r\n            />\r\n          )}\r\n        </div>\r\n        <TextInput\r\n          label={{\r\n            title: \"Date : \",\r\n            style: {\r\n              fontSize: \"12px\",\r\n              fontWeight: \"bold\",\r\n              width: \"90px\",\r\n            },\r\n          }}\r\n          input={{\r\n            type: \"date\",\r\n            defaultValue: format(new Date(), \"yyyy-MM-dd\"),\r\n            onKeyDown: (e) => {\r\n              if (e.key === \"Enter\" || e.key === \"NumpadEnter\") {\r\n                e.preventDefault();\r\n                // searchCashDisbursementOpenModal(e.currentTarget.value);\r\n              }\r\n              if (e.key === \"ArrowDown\") {\r\n                e.preventDefault();\r\n              }\r\n            },\r\n            onChange: (e) => {\r\n              setTitle(\r\n                generateTitle({\r\n                  report,\r\n                  subsiText: subsiTextRef.current?.value || \"\",\r\n                  insuarnceIndex: _subsiRef.current?.selectedIndex,\r\n                  insurance: _subsiRef.current?.value,\r\n                  dateValue: validateDate(e.currentTarget.value as any)\r\n                    ? new Date(e.currentTarget.value as any)\r\n                    : new Date(),\r\n                  account: accountRef.current?.value,\r\n                  accountTitle: _accountRef.current?.value,\r\n                })\r\n              );\r\n            },\r\n            style: { width: \"calc(100% - 90px)\" },\r\n          }}\r\n          inputRef={dateRef}\r\n        />\r\n        <fieldset\r\n          style={{\r\n            border: \"1px solid #cbd5e1\",\r\n            borderRadius: \"5px\",\r\n            position: \"relative\",\r\n            width: \"100%\",\r\n            height: \"auto\",\r\n            margin: \"10px 0px\",\r\n            padding: \"15px\",\r\n            display: \"flex\",\r\n            rowGap: \"10px\",\r\n            flexDirection: \"column\",\r\n          }}\r\n        >\r\n          <SelectInput\r\n            label={{\r\n              title: \"Sort :\",\r\n              style: {\r\n                fontSize: \"12px\",\r\n                fontWeight: \"bold\",\r\n                width: \"90px\",\r\n              },\r\n            }}\r\n            selectRef={sortRef}\r\n            select={{\r\n              style: { width: \"calc(100% - 90px)\", height: \"22px\" },\r\n              defaultValue: \"All Accounts\",\r\n              onKeyDown: (e) => {\r\n                if (e.code === \"NumpadEnter\" || e.code === \"Enter\") {\r\n                  e.preventDefault();\r\n                }\r\n              },\r\n            }}\r\n            datasource={[{ key: \"Name\" }, { key: \"Sub Account/I.D No.\" }]}\r\n            values={\"key\"}\r\n            display={\"key\"}\r\n          />\r\n          <SelectInput\r\n            label={{\r\n              title: \"Order :\",\r\n              style: {\r\n                fontSize: \"12px\",\r\n                fontWeight: \"bold\",\r\n                width: \"90px\",\r\n              },\r\n            }}\r\n            selectRef={orderRef}\r\n            select={{\r\n              style: { width: \"calc(100% - 90px)\", height: \"22px\" },\r\n              defaultValue: \"All Accounts\",\r\n              onKeyDown: (e) => {\r\n                if (e.code === \"NumpadEnter\" || e.code === \"Enter\") {\r\n                  e.preventDefault();\r\n                }\r\n              },\r\n            }}\r\n            datasource={[{ key: \"Ascending\" }, { key: \"Descending\" }]}\r\n            values={\"key\"}\r\n            display={\"key\"}\r\n          />\r\n        </fieldset>\r\n        <Button\r\n          onClick={generateReport}\r\n          color=\"success\"\r\n          variant=\"contained\"\r\n          sx={{ height: \"22px\", fontSize: \"12px\", width: \"100%\" }}\r\n        >\r\n          Generate Report\r\n        </Button>\r\n      </div>\r\n      <ChartAccountUpwardTableModalSearch\r\n        ref={chartAccountUpwardTableModalSearchRef}\r\n      />\r\n    </>\r\n  );\r\n}\r\nfunction FormSubsidiaryLedger() {\r\n  const chartAccountUpwardTableModalSearchRef = useRef<any>(null);\r\n  const { user, myAxios } = useContext(AuthContext);\r\n  const [title, setTitle] = useState(\r\n    generateTitle({\r\n      subsi: 0,\r\n      accountName: \"Premium Receivables\",\r\n      account: \"1.03.01\",\r\n      dateFrom: new Date(),\r\n      dateTo: new Date(),\r\n    })\r\n  );\r\n  const [subsi, setSubsi] = useState(\"ALL\");\r\n  const titleRef = useRef<HTMLTextAreaElement>(null);\r\n  const accountRef = useRef<HTMLInputElement>(null);\r\n  const _accountRef = useRef<HTMLInputElement>(null);\r\n  const subsiRef = useRef<HTMLSelectElement>(null);\r\n\r\n  const __subsiRef = useRef<any>(null);\r\n  const subsiTextRef = useRef<HTMLInputElement>(null);\r\n\r\n  const dateFromRef = useRef<HTMLInputElement>(null);\r\n  const dateToRef = useRef<HTMLInputElement>(null);\r\n\r\n  const formatRef = useRef<HTMLSelectElement>(null);\r\n  const fieldRef = useRef<HTMLSelectElement>(null);\r\n\r\n  const idNoRef = useRef<HTMLInputElement>(null);\r\n  const nameRef = useRef(\"\");\r\n\r\n  const subAcctRef = useRef<HTMLInputElement>(null);\r\n  const shortNameRef = useRef(\"\");\r\n\r\n  const {\r\n    UpwardTableModalSearch: ChartAccountUpwardTableModalSearch,\r\n    openModal: chartAccountOpenModal,\r\n    closeModal: chartAccountCloseModal,\r\n  } = useUpwardTableModalSearchSafeMode({\r\n    link: \"/reports/accounting/report/get-chart-account\",\r\n    column: [\r\n      { key: \"Code\", label: \"Code\", width: 80 },\r\n      { key: \"Title\", label: \"Title\", width: 200 },\r\n      {\r\n        key: \"Short_Name\",\r\n        label: \"Short Name\",\r\n        width: 370,\r\n      },\r\n    ],\r\n    getSelectedItem: async (rowItm: any, _: any, rowIdx: any, __: any) => {\r\n      if (rowItm) {\r\n        wait(100).then(() => {\r\n          if (accountRef.current) {\r\n            accountRef.current.value = rowItm[0];\r\n          }\r\n          if (_accountRef.current) {\r\n            _accountRef.current.value = rowItm[1];\r\n          }\r\n\r\n          setTitle(\r\n            generateTitle({\r\n              subsi: subsiRef.current?.selectedIndex,\r\n              accountName: rowItm[1],\r\n              account: rowItm[0],\r\n              subsiName: nameRef.current,\r\n              subsiId: idNoRef.current?.value,\r\n              dateFrom: validateDate(dateFromRef.current?.value as any)\r\n                ? new Date(dateFromRef.current?.value as any)\r\n                : new Date(),\r\n              dateTo: validateDate(dateToRef.current?.value as any)\r\n                ? new Date(dateToRef.current?.value as any)\r\n                : new Date(),\r\n            })\r\n          );\r\n\r\n          subsiRef.current?.focus();\r\n        });\r\n\r\n        chartAccountCloseModal();\r\n      }\r\n    },\r\n  });\r\n  const {\r\n    UpwardTableModalSearch: ClientUpwardTableModalSearch,\r\n    openModal: clientOpenModal,\r\n    closeModal: clientCloseModal,\r\n  } = useUpwardTableModalSearchSafeMode({\r\n    link: \"/task/accounting/search-pdc-policy-id\",\r\n    column: [\r\n      { key: \"Type\", label: \"Type\", width: 60 },\r\n      { key: \"IDNo\", label: \"ID No.\", width: 100 },\r\n      {\r\n        key: \"Name\",\r\n        label: \"Name\",\r\n        width: 350,\r\n      },\r\n      {\r\n        key: \"client_id\",\r\n        label: \"client_id\",\r\n        width: 0,\r\n        hide: true,\r\n      },\r\n    ],\r\n    getSelectedItem: async (rowItm: any, _: any, rowIdx: any, __: any) => {\r\n      if (rowItm) {\r\n        wait(100).then(() => {\r\n          if (idNoRef.current) {\r\n            idNoRef.current.value = rowItm[1];\r\n          }\r\n          nameRef.current = rowItm[2];\r\n          setTitle(\r\n            generateTitle({\r\n              subsi: 1,\r\n              accountName: _accountRef.current?.value,\r\n              account: accountRef.current?.value,\r\n              subsiName: rowItm[2],\r\n              subsiId: rowItm[1],\r\n              dateFrom: validateDate(dateFromRef.current?.value as any)\r\n                ? new Date(dateFromRef.current?.value as any)\r\n                : new Date(),\r\n              dateTo: validateDate(dateToRef.current?.value as any)\r\n                ? new Date(dateToRef.current?.value as any)\r\n                : new Date(),\r\n            })\r\n          );\r\n        });\r\n        clientCloseModal();\r\n      }\r\n    },\r\n  });\r\n  const {\r\n    UpwardTableModalSearch: SubAccountUpwardTableModalSearch,\r\n    openModal: subAccountOpenModal,\r\n    closeModal: subAccountCloseModal,\r\n  } = useUpwardTableModalSearchSafeMode({\r\n    link: \"/reports/accounting/report/sub-account-search\",\r\n    column: [\r\n      { key: \"Acronym\", label: \"Acronym\", width: 80 },\r\n      { key: \"ShortName\", label: \"ShortName\", width: 200 },\r\n    ],\r\n    getSelectedItem: async (rowItm: any, _: any, rowIdx: any, __: any) => {\r\n      if (rowItm) {\r\n        wait(100).then(() => {\r\n          if (subAcctRef.current) {\r\n            subAcctRef.current.value = rowItm[0];\r\n          }\r\n          shortNameRef.current = rowItm[1];\r\n\r\n          setTitle(\r\n            generateTitle({\r\n              subsi: 2,\r\n              accountName: _accountRef.current?.value,\r\n              account: accountRef.current?.value,\r\n              subsiName: rowItm[1],\r\n              subsiId: rowItm[0],\r\n              dateFrom: validateDate(dateFromRef.current?.value as any)\r\n                ? new Date(dateFromRef.current?.value as any)\r\n                : new Date(),\r\n              dateTo: validateDate(dateToRef.current?.value as any)\r\n                ? new Date(dateToRef.current?.value as any)\r\n                : new Date(),\r\n            })\r\n          );\r\n        });\r\n        subAccountCloseModal();\r\n      }\r\n    },\r\n  });\r\n\r\n  const { isLoading: isLoadingInsurance, mutate: mutateInsurance } =\r\n    useMutation({\r\n      mutationKey: \"insurance\",\r\n      mutationFn: async (variable: any) =>\r\n        await myAxios.post(\r\n          `/reports/accounting/report/get-list-of-insurance`,\r\n          variable,\r\n          {\r\n            headers: {\r\n              Authorization: `Bearer ${user?.accessToken}`,\r\n            },\r\n          }\r\n        ),\r\n      onSuccess(res) {\r\n        if (res.data.success) {\r\n          __subsiRef.current.setDataSource([\r\n            { AccountCode: \"ALL\" },\r\n            ...res.data.data,\r\n          ]);\r\n        }\r\n      },\r\n    });\r\n\r\n  function generateTitle({\r\n    subsi,\r\n    accountName,\r\n    account,\r\n    subsiName,\r\n    subsiId,\r\n    dateFrom,\r\n    dateTo,\r\n  }: any) {\r\n    const _title =\r\n      process.env.REACT_APP_DEPARTMENT === \"UMIS\"\r\n        ? \"UPWARD MANAGEMENT INSURANCE SERVICES\"\r\n        : \"UPWARD CONSULTANCY SERVICES AND MANAGEMENT INC.\";\r\n    let Subsi = \"\\n\";\r\n\r\n    if (subsi === 1) {\r\n      Subsi += `ID No. : ${subsiName} (${subsiId || \"\"})`;\r\n    } else if (subsi === 2) {\r\n      Subsi += `Sub Account : ${subsiName} (${subsiId || \"\"})`;\r\n    }\r\n\r\n    let txtReportTitleText = `${_title}\r\nSubsidiary Ledger\\n\\n\r\nAccount: ${accountName} (${account})${subsi === 0 ? \"\" : Subsi}\r\nFor the Period: ${format(new Date(dateFrom), \"MMMM dd, yyyy\")} to ${format(\r\n      new Date(dateTo),\r\n      \"MMMM dd, yyyy\"\r\n    )}\r\n`;\r\n    // setTitle(txtReportTitleText);\r\n    return txtReportTitleText;\r\n  }\r\n\r\n  function generateReport() {\r\n    let subsi_options: any = \"\";\r\n\r\n    if (subsi === \"ID #\") {\r\n      subsi_options = idNoRef.current?.value;\r\n    } else if (subsi === \"Sub-Acct #\") {\r\n      subsi_options = subAcctRef.current?.value;\r\n    }\r\n\r\n    mutateGenerateReport({\r\n      title,\r\n      dateFrom: dateFromRef.current?.value,\r\n      dateTo: dateToRef.current?.value,\r\n      account: accountRef.current?.value,\r\n      mField: fieldRef.current?.value,\r\n      subsi,\r\n      subsi_options,\r\n      format: formatRef.current?.value,\r\n    });\r\n  }\r\n\r\n  const { mutate: mutateGenerateReport, isLoading: isLoadingGenerateReport } =\r\n    useMutation({\r\n      mutationKey: \"generate-report\",\r\n      mutationFn: async (variables: any) => {\r\n        return await myAxios.post(\r\n          \"/reports/accounting/report/generate-report-subsidiary-ledger\",\r\n          variables,\r\n          {\r\n            responseType: \"arraybuffer\",\r\n            headers: {\r\n              Authorization: `Bearer ${user?.accessToken}`,\r\n            },\r\n          }\r\n        );\r\n      },\r\n      onSuccess: (response) => {\r\n        const pdfBlob = new Blob([response.data], { type: \"application/pdf\" });\r\n        const pdfUrl = URL.createObjectURL(pdfBlob);\r\n\r\n        if (isMobile) {\r\n          // MOBILE: download directly\r\n          const link = document.createElement(\"a\");\r\n          link.href = pdfUrl;\r\n          link.download = \"report.pdf\";\r\n          document.body.appendChild(link);\r\n          link.click();\r\n          document.body.removeChild(link);\r\n          return;\r\n        } else {\r\n          window.open(\r\n            `/${\r\n              process.env.REACT_APP_DEPARTMENT\r\n            }/dashboard/report?pdf=${encodeURIComponent(pdfUrl)}`,\r\n            \"_blank\"\r\n          );\r\n        }\r\n      },\r\n    });\r\n\r\n  return (\r\n    <>\r\n      {(isLoadingInsurance || isLoadingGenerateReport) && <Loading />}\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          flex: 1,\r\n          flexDirection: \"column\",\r\n          padding: \"5px\",\r\n          rowGap: \"7px\",\r\n        }}\r\n      >\r\n        <TextAreaInput\r\n          containerStyle={{\r\n            marginBottom: \"10px\",\r\n          }}\r\n          label={{\r\n            title: \"Title : \",\r\n            style: {\r\n              fontSize: \"12px\",\r\n              fontWeight: \"bold\",\r\n              width: \"100px\",\r\n              display: \"none\",\r\n            },\r\n          }}\r\n          textarea={{\r\n            rows: 7,\r\n            style: { flex: 1 },\r\n            value: title,\r\n            onChange: (e) => {\r\n              setTitle(e.currentTarget.value);\r\n            },\r\n          }}\r\n          _inputRef={titleRef}\r\n        />\r\n        <TextInput\r\n          label={{\r\n            title: \"Account : \",\r\n            style: {\r\n              fontSize: \"12px\",\r\n              fontWeight: \"bold\",\r\n              width: \"90px\",\r\n            },\r\n          }}\r\n          input={{\r\n            className: \"search-input-up-on-key-down\",\r\n            type: \"text\",\r\n            defaultValue: \"1.03.01\",\r\n            onKeyDown: async (e) => {\r\n              if (e.key === \"Enter\" || e.key === \"NumpadEnter\") {\r\n                e.preventDefault();\r\n                const value = e.currentTarget.value;\r\n                const response =\r\n                  await chartAccountUpwardTableModalSearchRef.current.mutateReturnValue(\r\n                    { search: value }\r\n                  );\r\n\r\n                if (response.data.data.length > 0) {\r\n                  wait(100).then(() => {\r\n                    if (accountRef.current) {\r\n                      accountRef.current.value = response.data.data[0].Code;\r\n                    }\r\n                    if (_accountRef.current) {\r\n                      _accountRef.current.value = response.data.data[0].Title;\r\n                    }\r\n\r\n                    setTitle(\r\n                      generateTitle({\r\n                        subsi: subsiRef.current?.selectedIndex,\r\n                        accountName: response.data.data[0].Title,\r\n                        account: response.data.data[0].Code,\r\n                        subsiName: nameRef.current,\r\n                        subsiId: idNoRef.current?.value,\r\n                        dateFrom: validateDate(\r\n                          dateFromRef.current?.value as any\r\n                        )\r\n                          ? new Date(dateFromRef.current?.value as any)\r\n                          : new Date(),\r\n                        dateTo: validateDate(dateToRef.current?.value as any)\r\n                          ? new Date(dateToRef.current?.value as any)\r\n                          : new Date(),\r\n                      })\r\n                    );\r\n\r\n                    subsiRef.current?.focus();\r\n                  });\r\n                } else {\r\n                  chartAccountOpenModal(value);\r\n                }\r\n              }\r\n              if (e.key === \"ArrowDown\") {\r\n                e.preventDefault();\r\n              }\r\n            },\r\n            style: { width: \"calc(100% - 90px)\" },\r\n          }}\r\n          icon={\r\n            <SearchIcon\r\n              sx={{\r\n                fontSize: \"18px\",\r\n              }}\r\n            />\r\n          }\r\n          onIconClick={(e) => {\r\n            e.preventDefault();\r\n            if (accountRef.current) {\r\n              chartAccountOpenModal(accountRef.current.value);\r\n            }\r\n          }}\r\n          inputRef={accountRef}\r\n        />\r\n        <TextInput\r\n          label={{\r\n            title: \"\",\r\n            style: {\r\n              display: \"none\",\r\n            },\r\n          }}\r\n          input={{\r\n            readOnly: true,\r\n            defaultValue: \"Premium Receivables\",\r\n            type: \"text\",\r\n            onKeyDown: (e) => {\r\n              if (e.key === \"Enter\" || e.key === \"NumpadEnter\") {\r\n                e.preventDefault();\r\n                // searchCashDisbursementOpenModal(e.currentTarget.value);\r\n              }\r\n              if (e.key === \"ArrowDown\") {\r\n                e.preventDefault();\r\n              }\r\n            },\r\n            style: { width: \"100%\" },\r\n          }}\r\n          inputRef={_accountRef}\r\n        />\r\n\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            columnGap: \"6px\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <SelectInput\r\n            label={{\r\n              title: \"Subsidiary :\",\r\n              style: {\r\n                fontSize: \"12px\",\r\n                fontWeight: \"bold\",\r\n                width: \"90px\",\r\n              },\r\n            }}\r\n            selectRef={subsiRef}\r\n            containerStyle={{ flex: 1 }}\r\n            select={{\r\n              style: { flex: 1, height: \"22px\" },\r\n              value: subsi,\r\n              onKeyDown: (e) => {\r\n                if (e.code === \"NumpadEnter\" || e.code === \"Enter\") {\r\n                  e.preventDefault();\r\n                }\r\n              },\r\n              onChange: (e) => {\r\n                if (e.currentTarget.selectedIndex === 2) {\r\n                  mutateInsurance({});\r\n                }\r\n\r\n                setSubsi(e.target.value);\r\n\r\n                setTitle(\r\n                  generateTitle({\r\n                    subsi: subsiRef.current?.selectedIndex,\r\n                    accountName: _accountRef.current?.value,\r\n                    account: accountRef.current?.value,\r\n                    subsiName: nameRef.current,\r\n                    subsiId: idNoRef.current?.value,\r\n                    dateFrom: validateDate(dateFromRef.current?.value as any)\r\n                      ? new Date(dateFromRef.current?.value as any)\r\n                      : new Date(),\r\n                    dateTo: validateDate(dateToRef.current?.value as any)\r\n                      ? new Date(dateToRef.current?.value as any)\r\n                      : new Date(),\r\n                  })\r\n                );\r\n              },\r\n            }}\r\n            datasource={[\r\n              { key: \"ALL\" },\r\n              { key: \"ID #\" },\r\n              { key: \"Sub-Acct #\" },\r\n            ]}\r\n            values={\"key\"}\r\n            display={\"key\"}\r\n          />\r\n          {subsi === \"ALL\" && (\r\n            <TextInput\r\n              containerStyle={{\r\n                flex: 1,\r\n              }}\r\n              label={{\r\n                title: \"\",\r\n                style: {\r\n                  display: \"none\",\r\n                },\r\n              }}\r\n              input={{\r\n                disabled: true,\r\n                readOnly: true,\r\n                type: \"text\",\r\n                defaultValue: \"\",\r\n                onKeyDown: (e) => {\r\n                  if (e.key === \"Enter\" || e.key === \"NumpadEnter\") {\r\n                    e.preventDefault();\r\n                    // searchCashDisbursementOpenModal(e.currentTarget.value);\r\n                  }\r\n                  if (e.key === \"ArrowDown\") {\r\n                    e.preventDefault();\r\n                  }\r\n                },\r\n                onChange: (e) => {},\r\n                style: { width: \"100%\" },\r\n              }}\r\n              inputRef={subsiTextRef}\r\n            />\r\n          )}\r\n          {subsi === \"ID #\" && (\r\n            <TextInput\r\n              label={{\r\n                title: \"PN/Client ID : \",\r\n                style: {\r\n                  fontSize: \"12px\",\r\n                  fontWeight: \"bold\",\r\n                  width: \"100px\",\r\n                  display: \"none\",\r\n                },\r\n              }}\r\n              containerStyle={{ flex: 1 }}\r\n              input={{\r\n                type: \"text\",\r\n                style: { width: \"100%\", height: \"22px\" },\r\n                onKeyDown: (e) => {\r\n                  if (e.key === \"Enter\" || e.key === \"NumpadEnter\") {\r\n                    e.preventDefault();\r\n                    clientOpenModal(e.currentTarget.value);\r\n                  }\r\n                },\r\n              }}\r\n              inputRef={idNoRef}\r\n              icon={\r\n                <PersonSearchIcon\r\n                  sx={{\r\n                    fontSize: \"18px\",\r\n                    color: \"black\",\r\n                  }}\r\n                />\r\n              }\r\n              onIconClick={(e) => {\r\n                e.preventDefault();\r\n                if (idNoRef.current) {\r\n                  clientOpenModal(idNoRef.current.value);\r\n                }\r\n              }}\r\n            />\r\n          )}\r\n          {subsi === \"Sub-Acct #\" && (\r\n            <TextInput\r\n              label={{\r\n                title: \"\",\r\n                style: {\r\n                  display: \"none\",\r\n                },\r\n              }}\r\n              containerStyle={{ flex: 1 }}\r\n              input={{\r\n                type: \"text\",\r\n                style: { width: \"100%\", height: \"22px\" },\r\n                onKeyDown: (e) => {\r\n                  if (e.key === \"Enter\" || e.key === \"NumpadEnter\") {\r\n                    e.preventDefault();\r\n                    subAccountOpenModal(e.currentTarget.value);\r\n                  }\r\n                },\r\n              }}\r\n              inputRef={subAcctRef}\r\n              icon={\r\n                <PersonSearchIcon\r\n                  sx={{\r\n                    fontSize: \"18px\",\r\n                    color: \"black\",\r\n                  }}\r\n                />\r\n              }\r\n              onIconClick={(e) => {\r\n                e.preventDefault();\r\n                if (subAcctRef.current) {\r\n                  subAccountOpenModal(subAcctRef.current.value);\r\n                }\r\n              }}\r\n            />\r\n          )}\r\n        </div>\r\n        <TextInput\r\n          label={{\r\n            title: \"Date From : \",\r\n            style: {\r\n              fontSize: \"12px\",\r\n              fontWeight: \"bold\",\r\n              width: \"90px\",\r\n            },\r\n          }}\r\n          input={{\r\n            type: \"date\",\r\n            defaultValue: format(new Date(), \"yyyy-MM-dd\"),\r\n            onKeyDown: (e) => {\r\n              if (e.key === \"Enter\" || e.key === \"NumpadEnter\") {\r\n                e.preventDefault();\r\n                // searchCashDisbursementOpenModal(e.currentTarget.value);\r\n              }\r\n              if (e.key === \"ArrowDown\") {\r\n                e.preventDefault();\r\n              }\r\n            },\r\n            onBlur: (e) => {\r\n              if (subsi === \"ID #\") {\r\n                setTitle(\r\n                  generateTitle({\r\n                    subsi: 1,\r\n                    accountName: accountRef.current?.value,\r\n                    account: _accountRef.current?.value,\r\n                    subsiName: nameRef.current,\r\n                    subsiId: idNoRef.current?.value,\r\n                    dateFrom: validateDate(e.currentTarget.value)\r\n                      ? new Date(e.currentTarget.value)\r\n                      : new Date(),\r\n                    dateTo: validateDate(dateToRef.current?.value as any)\r\n                      ? new Date(dateToRef.current?.value as any)\r\n                      : new Date(),\r\n                  })\r\n                );\r\n              } else if (subsi === \"ID #\") {\r\n                setTitle(\r\n                  generateTitle({\r\n                    subsi: 2,\r\n                    accountName: accountRef.current?.value,\r\n                    account: _accountRef.current?.value,\r\n                    subsiName: shortNameRef.current,\r\n                    subsiId: subAcctRef.current?.value,\r\n                    dateFrom: validateDate(e.currentTarget.value)\r\n                      ? new Date(e.currentTarget.value)\r\n                      : new Date(),\r\n                    dateTo: validateDate(dateToRef.current?.value as any)\r\n                      ? new Date(dateToRef.current?.value as any)\r\n                      : new Date(),\r\n                  })\r\n                );\r\n              } else {\r\n                setTitle(\r\n                  generateTitle({\r\n                    subsi: 0,\r\n                    accountName: accountRef.current?.value,\r\n                    account: _accountRef.current?.value,\r\n                    subsiName: \"\",\r\n                    subsiId: \"\",\r\n                    dateFrom: validateDate(e.currentTarget.value)\r\n                      ? new Date(e.currentTarget.value)\r\n                      : new Date(),\r\n                    dateTo: validateDate(dateToRef.current?.value as any)\r\n                      ? new Date(dateToRef.current?.value as any)\r\n                      : new Date(),\r\n                  })\r\n                );\r\n              }\r\n            },\r\n            style: { width: \"calc(100% - 90px)\" },\r\n          }}\r\n          inputRef={dateFromRef}\r\n        />\r\n        <TextInput\r\n          label={{\r\n            title: \"Date To : \",\r\n            style: {\r\n              fontSize: \"12px\",\r\n              fontWeight: \"bold\",\r\n              width: \"90px\",\r\n            },\r\n          }}\r\n          input={{\r\n            type: \"date\",\r\n            defaultValue: format(new Date(), \"yyyy-MM-dd\"),\r\n            onKeyDown: (e) => {\r\n              if (e.key === \"Enter\" || e.key === \"NumpadEnter\") {\r\n                e.preventDefault();\r\n                // searchCashDisbursementOpenModal(e.currentTarget.value);\r\n              }\r\n              if (e.key === \"ArrowDown\") {\r\n                e.preventDefault();\r\n              }\r\n            },\r\n            onChange: (e) => {\r\n              // const newDateTo = isValidDateString(e.currentTarget.value)\r\n              //   ? e.currentTarget.value\r\n              //   : new Date();\r\n              if (subsi === \"ID #\") {\r\n                setTitle(\r\n                  generateTitle({\r\n                    subsi: 1,\r\n                    accountName: _accountRef.current?.value,\r\n                    account: accountRef.current?.value,\r\n                    subsiName: nameRef.current,\r\n                    subsiId: idNoRef.current?.value,\r\n                    dateFrom: validateDate(dateFromRef.current?.value as any)\r\n                      ? new Date(dateFromRef.current?.value as any)\r\n                      : new Date(),\r\n                    dateTo: validateDate(e.currentTarget.value)\r\n                      ? new Date(e.currentTarget.value)\r\n                      : new Date(),\r\n                  })\r\n                );\r\n              } else if (subsi === \"ID #\") {\r\n                setTitle(\r\n                  generateTitle({\r\n                    subsi: 2,\r\n                    accountName: _accountRef.current?.value,\r\n                    account: accountRef.current?.value,\r\n                    subsiName: shortNameRef.current,\r\n                    subsiId: subAcctRef.current?.value,\r\n                    dateFrom: validateDate(dateFromRef.current?.value as any)\r\n                      ? new Date(dateFromRef.current?.value as any)\r\n                      : new Date(),\r\n                    dateTo: validateDate(e.currentTarget.value)\r\n                      ? new Date(e.currentTarget.value)\r\n                      : new Date(),\r\n                  })\r\n                );\r\n              } else {\r\n                setTitle(\r\n                  generateTitle({\r\n                    subsi: 0,\r\n                    accountName: accountRef.current?.value,\r\n                    account: _accountRef.current?.value,\r\n                    subsiName: \"\",\r\n                    subsiId: \"\",\r\n                    dateFrom: validateDate(dateFromRef.current?.value as any)\r\n                      ? new Date(dateFromRef.current?.value as any)\r\n                      : new Date(),\r\n                    dateTo: validateDate(e.currentTarget.value)\r\n                      ? new Date(e.currentTarget.value)\r\n                      : new Date(),\r\n                  })\r\n                );\r\n              }\r\n            },\r\n            style: { width: \"calc(100% - 90px)\" },\r\n          }}\r\n          inputRef={dateToRef}\r\n        />\r\n        <fieldset\r\n          style={{\r\n            border: \"1px solid #cbd5e1\",\r\n            borderRadius: \"5px\",\r\n            position: \"relative\",\r\n            width: \"100%\",\r\n            height: \"auto\",\r\n            margin: \"10px 0px\",\r\n            padding: \"15px\",\r\n            display: \"flex\",\r\n            rowGap: \"10px\",\r\n            flexDirection: \"column\",\r\n          }}\r\n        >\r\n          <SelectInput\r\n            label={{\r\n              title: \"Format :\",\r\n              style: {\r\n                fontSize: \"12px\",\r\n                fontWeight: \"bold\",\r\n                width: \"90px\",\r\n              },\r\n            }}\r\n            selectRef={formatRef}\r\n            select={{\r\n              style: { width: \"calc(100% - 90px)\", height: \"22px\" },\r\n              defaultValue: \"All Accounts\",\r\n              onKeyDown: (e) => {\r\n                if (e.code === \"NumpadEnter\" || e.code === \"Enter\") {\r\n                  e.preventDefault();\r\n                }\r\n              },\r\n            }}\r\n            datasource={[\r\n              { key: \"No Running Balance\" },\r\n              { key: \"With Running Balance\" },\r\n            ]}\r\n            values={\"key\"}\r\n            display={\"key\"}\r\n          />\r\n          <SelectInput\r\n            label={{\r\n              title: \"Field :\",\r\n              style: {\r\n                fontSize: \"12px\",\r\n                fontWeight: \"bold\",\r\n                width: \"90px\",\r\n              },\r\n            }}\r\n            selectRef={fieldRef}\r\n            select={{\r\n              style: { width: \"calc(100% - 90px)\", height: \"22px\" },\r\n              defaultValue: \"All Accounts\",\r\n              onKeyDown: (e) => {\r\n                if (e.code === \"NumpadEnter\" || e.code === \"Enter\") {\r\n                  e.preventDefault();\r\n                }\r\n              },\r\n            }}\r\n            datasource={[\r\n              { key: \"Explanations\" },\r\n              { key: \"Payee\" },\r\n              { key: \"Remarks\" },\r\n            ]}\r\n            values={\"key\"}\r\n            display={\"key\"}\r\n          />\r\n        </fieldset>\r\n        <Button\r\n          onClick={generateReport}\r\n          color=\"success\"\r\n          variant=\"contained\"\r\n          sx={{ height: \"22px\", fontSize: \"12px\", width: \"100%\" }}\r\n        >\r\n          Generate Report\r\n        </Button>\r\n      </div>\r\n      <ChartAccountUpwardTableModalSearch\r\n        ref={chartAccountUpwardTableModalSearchRef}\r\n      />\r\n      <ClientUpwardTableModalSearch />\r\n      <SubAccountUpwardTableModalSearch />\r\n    </>\r\n  );\r\n}\r\nfunction FormFSReport({ link, reportTitle }: any) {\r\n  const { myAxios, user } = useContext(AuthContext);\r\n\r\n  const [title, setTitle] = useState(\r\n    generateTitle({\r\n      cmbformat: \"Default\",\r\n      report: \"Monthly\",\r\n      subAccount: \"ALL\",\r\n      date: new Date(),\r\n    })\r\n  );\r\n\r\n  const [report, setReport] = useState(\"Monthly\");\r\n  const titleRef = useRef<HTMLTextAreaElement>(null);\r\n  const formatRef = useRef<HTMLSelectElement>(null);\r\n  const reportRef = useRef<HTMLSelectElement>(null);\r\n  const subAccountRef = useRef<HTMLSelectElement>(null);\r\n  const _subAccountRef = useRef<any>(null);\r\n  const nominalAccountRef = useRef<HTMLSelectElement>(null);\r\n  const dateRef = useRef<HTMLInputElement>(null);\r\n\r\n  const { mutate: mutateGenerateReport, isLoading: isLoadingGenerateReport } =\r\n    useMutation({\r\n      mutationKey: \"generate-report\",\r\n      mutationFn: async (variables: any) => {\r\n        return await myAxios.post(link, variables, {\r\n          responseType: \"arraybuffer\",\r\n          headers: {\r\n            Authorization: `Bearer ${user?.accessToken}`,\r\n          },\r\n        });\r\n      },\r\n      onSuccess: (response) => {\r\n        const pdfBlob = new Blob([response.data], { type: \"application/pdf\" });\r\n        const pdfUrl = URL.createObjectURL(pdfBlob);\r\n        if (isMobile) {\r\n          // MOBILE: download directly\r\n          const link = document.createElement(\"a\");\r\n          link.href = pdfUrl;\r\n          link.download = \"report.pdf\";\r\n          document.body.appendChild(link);\r\n          link.click();\r\n          document.body.removeChild(link);\r\n          return;\r\n        } else {\r\n          window.open(\r\n            `/${\r\n              process.env.REACT_APP_DEPARTMENT\r\n            }/dashboard/report?pdf=${encodeURIComponent(pdfUrl)}`,\r\n            \"_blank\"\r\n          );\r\n        }\r\n      },\r\n    });\r\n\r\n  function generateTitle({ report, cmbformat, subAccount, date }: any) {\r\n    const _title =\r\n      process.env.REACT_APP_DEPARTMENT === \"UMIS\"\r\n        ? \"UPWARD MANAGEMENT INSURANCE SERVICES\"\r\n        : \"UPWARD CONSULTANCY SERVICES AND MANAGEMENT INC.\";\r\n\r\n    return `${_title} ${\r\n      subAccount.toUpperCase() === \"ALL\" ? \"\" : `(${subAccount})`\r\n    }\\n${report} ${reportTitle} ${\r\n      cmbformat === \"Summary\" ? \"(Per Revenue Center)\" : \"\"\r\n    }\\n${\r\n      report === \"Monthly\"\r\n        ? format(new Date(date), \"MMMM, yyyy\")\r\n        : format(new Date(date), \"MMMM dd, yyyy\")\r\n    }`;\r\n  }\r\n\r\n  function generateReport() {\r\n    mutateGenerateReport({\r\n      cmbformat: formatRef.current?.value,\r\n      report: reportRef.current?.value,\r\n      subAccount: subAccountRef.current?.value,\r\n      nominalAccountRef: nominalAccountRef.current?.value,\r\n      date: dateRef.current?.value,\r\n      title,\r\n    });\r\n  }\r\n\r\n  const { isLoading: isLaodingSubAccount, mutate: mutateSubAccount } =\r\n    useMutation({\r\n      mutationKey: \"sub-account\",\r\n      mutationFn: async (variable: any) =>\r\n        await myAxios.post(`/reports/accounting/report/sub-account`, variable, {\r\n          headers: {\r\n            Authorization: `Bearer ${user?.accessToken}`,\r\n          },\r\n        }),\r\n      onSuccess(res) {\r\n        if (res.data.success) {\r\n          _subAccountRef.current.setDataSource(res.data.data);\r\n        }\r\n      },\r\n    });\r\n\r\n  const mutateSubAccountRef = useRef(mutateSubAccount);\r\n\r\n  useEffect(() => {\r\n    mutateSubAccountRef.current({});\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      {(isLaodingSubAccount || isLoadingGenerateReport) && <Loading />}\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          flex: 1,\r\n          flexDirection: \"column\",\r\n          padding: \"5px\",\r\n          rowGap: \"10px\",\r\n        }}\r\n      >\r\n        <TextAreaInput\r\n          containerStyle={{\r\n            marginBottom: \"10px\",\r\n          }}\r\n          label={{\r\n            title: \"Title : \",\r\n            style: {\r\n              fontSize: \"12px\",\r\n              fontWeight: \"bold\",\r\n              width: \"100px\",\r\n              display: \"none\",\r\n            },\r\n          }}\r\n          textarea={{\r\n            rows: 7,\r\n            style: { flex: 1 },\r\n            value: title,\r\n            onChange: (e) => {\r\n              setTitle(e.currentTarget.value);\r\n            },\r\n          }}\r\n          _inputRef={titleRef}\r\n        />\r\n        <SelectInput\r\n          label={{\r\n            title: \"Format :\",\r\n            style: {\r\n              fontSize: \"12px\",\r\n              fontWeight: \"bold\",\r\n              width: \"120px\",\r\n            },\r\n          }}\r\n          selectRef={formatRef}\r\n          select={{\r\n            defaultValue: \"Default\",\r\n            style: { width: \"calc(100% - 120px)\", height: \"22px\" },\r\n            onKeyDown: (e) => {\r\n              if (e.code === \"NumpadEnter\" || e.code === \"Enter\") {\r\n                e.preventDefault();\r\n              }\r\n            },\r\n            onChange: (e) => {\r\n              setTitle(\r\n                generateTitle({\r\n                  cmbformat: e.currentTarget.value,\r\n                  report: reportRef.current?.value,\r\n                  subAccount: subAccountRef.current?.value,\r\n                  date: validateDate(dateRef.current?.value as any)\r\n                    ? new Date(dateRef.current?.value as any)\r\n                    : new Date(),\r\n                })\r\n              );\r\n            },\r\n          }}\r\n          datasource={[{ key: \"Default\" }, { key: \"Summary\" }]}\r\n          values={\"key\"}\r\n          display={\"key\"}\r\n        />\r\n        <SelectInput\r\n          label={{\r\n            title: \"Report :\",\r\n            style: {\r\n              fontSize: \"12px\",\r\n              fontWeight: \"bold\",\r\n              width: \"120px\",\r\n            },\r\n          }}\r\n          selectRef={reportRef}\r\n          select={{\r\n            style: { width: \"calc(100% - 120px)\", height: \"22px\" },\r\n            value: report,\r\n            onKeyDown: (e) => {\r\n              if (e.code === \"NumpadEnter\" || e.code === \"Enter\") {\r\n                e.preventDefault();\r\n              }\r\n            },\r\n            onChange: (e) => {\r\n              if (e.currentTarget.value === \"Monthly\") {\r\n                wait(100).then(() => {\r\n                  if (dateRef.current) {\r\n                    dateRef.current.value = format(new Date(), \"yyyy-MM\");\r\n                  }\r\n                });\r\n              } else {\r\n                wait(100).then(() => {\r\n                  if (dateRef.current) {\r\n                    dateRef.current.value = format(new Date(), \"yyyy-MM-dd\");\r\n                  }\r\n                });\r\n              }\r\n              setReport(e.currentTarget.value);\r\n              setTitle(\r\n                generateTitle({\r\n                  cmbformat: formatRef.current?.value,\r\n                  report: e.currentTarget.value,\r\n                  subAccount: subAccountRef.current?.value,\r\n                  date: validateDate(dateRef.current?.value as any)\r\n                    ? new Date(dateRef.current?.value as any)\r\n                    : new Date(),\r\n                })\r\n              );\r\n            },\r\n          }}\r\n          datasource={[{ key: \"Daily\" }, { key: \"Monthly\" }]}\r\n          values={\"key\"}\r\n          display={\"key\"}\r\n        />\r\n        <SelectInput\r\n          ref={_subAccountRef}\r\n          label={{\r\n            title: \"Sub Account :\",\r\n            style: {\r\n              fontSize: \"12px\",\r\n              fontWeight: \"bold\",\r\n              width: \"120px\",\r\n            },\r\n          }}\r\n          selectRef={subAccountRef}\r\n          select={{\r\n            style: { width: \"calc(100% - 120px)\", height: \"22px\" },\r\n            defaultValue: \"HO\",\r\n            onKeyDown: (e) => {\r\n              if (e.code === \"NumpadEnter\" || e.code === \"Enter\") {\r\n                e.preventDefault();\r\n              }\r\n            },\r\n            onChange: (e) => {\r\n              setTitle(\r\n                generateTitle({\r\n                  cmbformat: formatRef.current?.value,\r\n                  report: reportRef.current?.value,\r\n                  subAccount: e.currentTarget.value,\r\n                  date: validateDate(dateRef.current?.value as any)\r\n                    ? new Date(dateRef.current?.value as any)\r\n                    : new Date(),\r\n                })\r\n              );\r\n            },\r\n          }}\r\n          datasource={[]}\r\n          values={\"Acronym\"}\r\n          display={\"Acronym\"}\r\n        />\r\n        <SelectInput\r\n          label={{\r\n            title: \"Nominal Account :\",\r\n            style: {\r\n              fontSize: \"12px\",\r\n              fontWeight: \"bold\",\r\n              width: \"120px\",\r\n            },\r\n          }}\r\n          selectRef={nominalAccountRef}\r\n          select={{\r\n            style: { width: \"calc(100% - 120px)\", height: \"22px\" },\r\n            defaultValue: \"Pre Closing\",\r\n            onKeyDown: (e) => {\r\n              if (e.code === \"NumpadEnter\" || e.code === \"Enter\") {\r\n                e.preventDefault();\r\n              }\r\n            },\r\n          }}\r\n          datasource={[{ key: \"Pre Closing\" }, { key: \"Post Closing\" }]}\r\n          values={\"key\"}\r\n          display={\"key\"}\r\n        />\r\n        <TextInput\r\n          label={{\r\n            title: \"Date : \",\r\n            style: {\r\n              fontSize: \"12px\",\r\n              fontWeight: \"bold\",\r\n              width: \"120px\",\r\n            },\r\n          }}\r\n          input={{\r\n            type: report === \"Monthly\" ? \"month\" : \"date\",\r\n            defaultValue:\r\n              report === \"Monthly\"\r\n                ? format(new Date(), \"yyyy-MM\")\r\n                : format(new Date(), \"yyyy-MM-dd\"),\r\n            onKeyDown: (e) => {\r\n              if (e.key === \"Enter\" || e.key === \"NumpadEnter\") {\r\n                e.preventDefault();\r\n                // searchCashDisbursementOpenModal(e.currentTarget.value);\r\n              }\r\n              if (e.key === \"ArrowDown\") {\r\n                e.preventDefault();\r\n              }\r\n            },\r\n\r\n            onBlur: (e) => {\r\n              setTitle(\r\n                generateTitle({\r\n                  cmbformat: formatRef.current?.value,\r\n                  report: reportRef.current?.value,\r\n                  subAccount: subAccountRef.current?.value,\r\n                  date:\r\n                    report === \"Monthly\"\r\n                      ? format(new Date(e.currentTarget.value), \"yyyy-MM\")\r\n                      : format(new Date(e.currentTarget.value), \"yyyy-MM-dd\"),\r\n                })\r\n              );\r\n            },\r\n            style: { width: \"calc(100% - 120px)\" },\r\n          }}\r\n          inputRef={dateRef}\r\n        />\r\n\r\n        <Button\r\n          onClick={generateReport}\r\n          color=\"success\"\r\n          variant=\"contained\"\r\n          sx={{ height: \"22px\", fontSize: \"12px\", width: \"100%\" }}\r\n        >\r\n          Generate Report\r\n        </Button>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\nfunction FormAbsDepoReturned({ link, reportTitle }: any) {\r\n  const { user, myAxios } = useContext(AuthContext);\r\n  const [title, setTitle] = useState(\r\n    generateTitle({\r\n      report: \"Monthly\",\r\n      subAccount: \"ALL\",\r\n      date: new Date(),\r\n    })\r\n  );\r\n  const [report, setReport] = useState(\"Monthly\");\r\n  const titleRef = useRef<HTMLTextAreaElement>(null);\r\n  const formatRef = useRef<HTMLSelectElement>(null);\r\n  const reportRef = useRef<HTMLSelectElement>(null);\r\n  const branchRef = useRef<HTMLSelectElement>(null);\r\n  const _branchRef = useRef<any>(null);\r\n  const dateRef = useRef<HTMLInputElement>(null);\r\n  const sortRef = useRef<HTMLSelectElement>(null);\r\n  const orderRef = useRef<HTMLSelectElement>(null);\r\n\r\n  const { mutate: mutateGenerateReport, isLoading: isLoadingGenerateReport } =\r\n    useMutation({\r\n      mutationKey: \"generate-report\",\r\n      mutationFn: async (variables: any) => {\r\n        return await myAxios.post(link, variables, {\r\n          responseType: \"arraybuffer\",\r\n          headers: {\r\n            Authorization: `Bearer ${user?.accessToken}`,\r\n          },\r\n        });\r\n      },\r\n      onSuccess: (response) => {\r\n        const pdfBlob = new Blob([response.data], { type: \"application/pdf\" });\r\n        const pdfUrl = URL.createObjectURL(pdfBlob);\r\n        if (isMobile) {\r\n          // MOBILE: download directly\r\n          const link = document.createElement(\"a\");\r\n          link.href = pdfUrl;\r\n          link.download = \"report.pdf\";\r\n          document.body.appendChild(link);\r\n          link.click();\r\n          document.body.removeChild(link);\r\n          return;\r\n        } else {\r\n          window.open(\r\n            `/${\r\n              process.env.REACT_APP_DEPARTMENT\r\n            }/dashboard/report?pdf=${encodeURIComponent(pdfUrl)}`,\r\n            \"_blank\"\r\n          );\r\n        }\r\n      },\r\n    });\r\n\r\n  const { isLoading: isLaodingSubAccount, mutate: mutateSubAccount } =\r\n    useMutation({\r\n      mutationKey: \"sub-account\",\r\n      mutationFn: async (variable: any) =>\r\n        await myAxios.post(`/reports/accounting/report/sub-account`, variable, {\r\n          headers: {\r\n            Authorization: `Bearer ${user?.accessToken}`,\r\n          },\r\n        }),\r\n      onSuccess(res) {\r\n        if (res.data.success) {\r\n          _branchRef.current.setDataSource(res.data.data);\r\n        }\r\n      },\r\n    });\r\n\r\n  function generateTitle({ report, subAccount, date }: any) {\r\n    const _title =\r\n      process.env.REACT_APP_DEPARTMENT === \"UMIS\"\r\n        ? \"UPWARD MANAGEMENT INSURANCE SERVICES\"\r\n        : \"UPWARD CONSULTANCY SERVICES AND MANAGEMENT INC.\";\r\n\r\n    return `${_title} ${\r\n      subAccount.toUpperCase() === \"ALL\" ? \"\" : `(${subAccount})`\r\n    }\\n${report} ${reportTitle}\\n${\r\n      report === \"Monthly\"\r\n        ? format(new Date(date), \"MMMM, yyyy\")\r\n        : format(new Date(date), \"MMMM dd, yyyy\")\r\n    }\r\n    `;\r\n  }\r\n\r\n  function generateReport() {\r\n    mutateGenerateReport({\r\n      title: titleRef.current?.value,\r\n      cmbFormat: formatRef.current?.value,\r\n      report: reportRef.current?.value,\r\n      subAccount: branchRef.current?.value,\r\n      date: dateRef.current?.value,\r\n      sort: sortRef.current?.value,\r\n      order: orderRef.current?.value,\r\n    });\r\n  }\r\n\r\n  const mutateSubAccountRef = useRef<any>(mutateSubAccount);\r\n\r\n  useEffect(() => {\r\n    mutateSubAccountRef.current({});\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      {(isLaodingSubAccount || isLoadingGenerateReport) && <Loading />}\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          flex: 1,\r\n          flexDirection: \"column\",\r\n          padding: \"5px\",\r\n          rowGap: \"10px\",\r\n        }}\r\n      >\r\n        <TextAreaInput\r\n          containerStyle={{\r\n            marginBottom: \"10px\",\r\n          }}\r\n          label={{\r\n            title: \"Title : \",\r\n            style: {\r\n              fontSize: \"12px\",\r\n              fontWeight: \"bold\",\r\n              width: \"100px\",\r\n              display: \"none\",\r\n            },\r\n          }}\r\n          textarea={{\r\n            rows: 7,\r\n            style: { flex: 1 },\r\n            value: title,\r\n            onChange: (e) => {\r\n              setTitle(e.currentTarget.value);\r\n            },\r\n          }}\r\n          _inputRef={titleRef}\r\n        />\r\n        <SelectInput\r\n          label={{\r\n            title: \"Format :\",\r\n            style: {\r\n              fontSize: \"12px\",\r\n              fontWeight: \"bold\",\r\n              width: \"90px\",\r\n            },\r\n          }}\r\n          selectRef={formatRef}\r\n          select={{\r\n            style: { width: \"calc(100% - 90px)\", height: \"22px\" },\r\n            defaultValue: \"Format - 2\",\r\n            onKeyDown: (e) => {\r\n              if (e.code === \"NumpadEnter\" || e.code === \"Enter\") {\r\n                e.preventDefault();\r\n              }\r\n            },\r\n            onChange: (e) => {},\r\n          }}\r\n          datasource={[{ key: \"Format - 1\" }]}\r\n          values={\"key\"}\r\n          display={\"key\"}\r\n        />\r\n        <SelectInput\r\n          label={{\r\n            title: \"Report :\",\r\n            style: {\r\n              fontSize: \"12px\",\r\n              fontWeight: \"bold\",\r\n              width: \"90px\",\r\n            },\r\n          }}\r\n          selectRef={reportRef}\r\n          select={{\r\n            style: { width: \"calc(100% - 90px)\", height: \"22px\" },\r\n            defaultValue: \"Monthly\",\r\n            onKeyDown: (e) => {\r\n              if (e.code === \"NumpadEnter\" || e.code === \"Enter\") {\r\n                e.preventDefault();\r\n              }\r\n            },\r\n            onChange: (e) => {\r\n              if (e.currentTarget.value === \"Monthly\") {\r\n                wait(100).then(() => {\r\n                  if (dateRef.current) {\r\n                    dateRef.current.value = format(new Date(), \"yyyy-MM\");\r\n                  }\r\n                });\r\n              } else {\r\n                wait(100).then(() => {\r\n                  if (dateRef.current) {\r\n                    dateRef.current.value = format(new Date(), \"yyyy-MM-dd\");\r\n                  }\r\n                });\r\n              }\r\n              setReport(e.currentTarget.value);\r\n              setTitle(\r\n                generateTitle({\r\n                  report: e.currentTarget.value,\r\n                  subAccount: branchRef.current?.value,\r\n                  date: validateDate(dateRef.current?.value as any)\r\n                    ? new Date(dateRef.current?.value as any)\r\n                    : new Date(),\r\n                })\r\n              );\r\n            },\r\n          }}\r\n          datasource={[{ key: \"Daily\" }, { key: \"Monthly\" }]}\r\n          values={\"key\"}\r\n          display={\"key\"}\r\n        />\r\n        <SelectInput\r\n          label={{\r\n            title: \"Branch :\",\r\n            style: {\r\n              fontSize: \"12px\",\r\n              fontWeight: \"bold\",\r\n              width: \"90px\",\r\n            },\r\n          }}\r\n          ref={_branchRef}\r\n          selectRef={branchRef}\r\n          select={{\r\n            style: { width: \"calc(100% - 90px)\", height: \"22px\" },\r\n            defaultValue: \"ALL\",\r\n            onKeyDown: (e) => {\r\n              if (e.code === \"NumpadEnter\" || e.code === \"Enter\") {\r\n                e.preventDefault();\r\n              }\r\n            },\r\n            onChange: (e) => {\r\n              setTitle(\r\n                generateTitle({\r\n                  report: reportRef.current?.value,\r\n                  subAccount: branchRef.current?.value,\r\n                  date: validateDate(dateRef.current?.value as any)\r\n                    ? new Date(dateRef.current?.value as any)\r\n                    : new Date(),\r\n                })\r\n              );\r\n            },\r\n          }}\r\n          datasource={[]}\r\n          values={\"Acronym\"}\r\n          display={\"Acronym\"}\r\n        />\r\n        <TextInput\r\n          label={{\r\n            title: \"Date :\",\r\n            style: {\r\n              fontSize: \"12px\",\r\n              fontWeight: \"bold\",\r\n              width: \"90px\",\r\n            },\r\n          }}\r\n          containerStyle={{ width: \"100%\" }}\r\n          input={{\r\n            defaultValue:\r\n              report === \"Monthly\"\r\n                ? format(new Date(), \"yyyy-MM\")\r\n                : format(new Date(), \"yyyy-MM-dd\"),\r\n            type: report === \"Monthly\" ? \"month\" : \"date\",\r\n            onKeyDown: (e) => {\r\n              if (e.key === \"Enter\" || e.key === \"NumpadEnter\") {\r\n                e.preventDefault();\r\n                // searchCashDisbursementOpenModal(e.currentTarget.value);\r\n              }\r\n              if (e.key === \"ArrowDown\") {\r\n                e.preventDefault();\r\n              }\r\n            },\r\n            onBlur: (e) => {\r\n              setTitle(\r\n                generateTitle({\r\n                  report: reportRef.current?.value,\r\n                  subAccount: branchRef.current?.value,\r\n                  date: e.currentTarget.value,\r\n                })\r\n              );\r\n            },\r\n            style: { width: \"calc(100% - 90px)\" },\r\n          }}\r\n          inputRef={dateRef}\r\n        />\r\n        <fieldset\r\n          style={{\r\n            border: \"1px solid #cbd5e1\",\r\n            borderRadius: \"5px\",\r\n            position: \"relative\",\r\n            width: \"100%\",\r\n            height: \"auto\",\r\n            margin: \"10px 0px\",\r\n            padding: \"15px\",\r\n            display: \"flex\",\r\n            rowGap: \"10px\",\r\n            flexDirection: \"column\",\r\n          }}\r\n        >\r\n          <SelectInput\r\n            label={{\r\n              title: \"Sort :\",\r\n              style: {\r\n                fontSize: \"12px\",\r\n                fontWeight: \"bold\",\r\n                width: \"90px\",\r\n              },\r\n            }}\r\n            selectRef={sortRef}\r\n            select={{\r\n              style: { width: \"calc(100% - 90px)\", height: \"22px\" },\r\n              defaultValue: \"All Accounts\",\r\n              onKeyDown: (e) => {\r\n                if (e.code === \"NumpadEnter\" || e.code === \"Enter\") {\r\n                  e.preventDefault();\r\n                }\r\n              },\r\n            }}\r\n            datasource={[{ key: \"Reference No\" }]}\r\n            values={\"key\"}\r\n            display={\"key\"}\r\n          />\r\n          <SelectInput\r\n            label={{\r\n              title: \"Order :\",\r\n              style: {\r\n                fontSize: \"12px\",\r\n                fontWeight: \"bold\",\r\n                width: \"90px\",\r\n              },\r\n            }}\r\n            selectRef={orderRef}\r\n            select={{\r\n              style: { width: \"calc(100% - 90px)\", height: \"22px\" },\r\n              defaultValue: \"All Accounts\",\r\n              onKeyDown: (e) => {\r\n                if (e.code === \"NumpadEnter\" || e.code === \"Enter\") {\r\n                  e.preventDefault();\r\n                }\r\n              },\r\n            }}\r\n            datasource={[{ key: \"Ascending\" }, { key: \"Descending\" }]}\r\n            values={\"key\"}\r\n            display={\"key\"}\r\n          />\r\n        </fieldset>\r\n        <Button\r\n          onClick={generateReport}\r\n          color=\"success\"\r\n          variant=\"contained\"\r\n          sx={{ height: \"22px\", fontSize: \"12px\", width: \"100%\" }}\r\n        >\r\n          Generate Report\r\n        </Button>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\nfunction FormPostDatedCheckRegistry() {\r\n  const { user, myAxios } = useContext(AuthContext);\r\n  const [title, setTitle] = useState(\"\");\r\n  const titleRef = useRef<HTMLTextAreaElement>(null);\r\n  const formatRef = useRef<HTMLSelectElement>(null);\r\n  const fieldRef = useRef<HTMLSelectElement>(null);\r\n  const branchRef = useRef<HTMLSelectElement>(null);\r\n  const _branchRef = useRef<any>(null);\r\n  const dateFromRef = useRef<HTMLInputElement>(null);\r\n  const dateToRef = useRef<HTMLInputElement>(null);\r\n  const typeRef = useRef<HTMLSelectElement>(null);\r\n  const sortRef = useRef<HTMLSelectElement>(null);\r\n  const orderRef = useRef<HTMLSelectElement>(null);\r\n\r\n  const { isLoading: isLaodingSubAccount, mutate: mutateSubAccount } =\r\n    useMutation({\r\n      mutationKey: \"sub-account\",\r\n      mutationFn: async (variable: any) =>\r\n        await myAxios.post(`/reports/accounting/report/sub-account`, variable, {\r\n          headers: {\r\n            Authorization: `Bearer ${user?.accessToken}`,\r\n          },\r\n        }),\r\n      onSuccess(res) {\r\n        if (res.data.success) {\r\n          _branchRef.current.setDataSource(res.data.data);\r\n        }\r\n      },\r\n    });\r\n\r\n  const { mutate: mutateGenerateReport, isLoading: isLoadingGenerateReport } =\r\n    useMutation({\r\n      mutationKey: \"generate-report\",\r\n      mutationFn: async (variables: any) => {\r\n        return await myAxios.post(\r\n          \"/reports/accounting/report/generate-report-post-dated-checks-registry\",\r\n          variables,\r\n          {\r\n            responseType: \"arraybuffer\",\r\n            headers: {\r\n              Authorization: `Bearer ${user?.accessToken}`,\r\n            },\r\n          }\r\n        );\r\n      },\r\n      onSuccess: (response) => {\r\n        const pdfBlob = new Blob([response.data], { type: \"application/pdf\" });\r\n        const pdfUrl = URL.createObjectURL(pdfBlob);\r\n        if (isMobile) {\r\n          // MOBILE: download directly\r\n          const link = document.createElement(\"a\");\r\n          link.href = pdfUrl;\r\n          link.download = \"report.pdf\";\r\n          document.body.appendChild(link);\r\n          link.click();\r\n          document.body.removeChild(link);\r\n          return;\r\n        } else {\r\n          window.open(\r\n            `/${\r\n              process.env.REACT_APP_DEPARTMENT\r\n            }/dashboard/report?pdf=${encodeURIComponent(pdfUrl)}`,\r\n            \"_blank\"\r\n          );\r\n        }\r\n      },\r\n    });\r\n  const {\r\n    mutate: mutateGenerateExcelReport,\r\n    isLoading: isLoadingGenerateExcelReport,\r\n  } = useMutation({\r\n    mutationKey: \"generate-excel-report\",\r\n    mutationFn: async (variables: any) => {\r\n      return await myAxios.post(\r\n        \"/reports/accounting/report/generate-excel-report-post-dated-checks-registry\",\r\n        variables,\r\n        {\r\n          responseType: \"arraybuffer\",\r\n          headers: {\r\n            Authorization: `Bearer ${user?.accessToken}`,\r\n          },\r\n        }\r\n      );\r\n    },\r\n    onSuccess: (response) => {\r\n      const pdfBlob = new Blob([response.data], { type: \"application/pdf\" });\r\n      const link = document.createElement(\"a\");\r\n      link.href = URL.createObjectURL(pdfBlob);\r\n      link.download = \"report.xls\"; // Set the desired file name\r\n      link.click(); // Simulate a click to start the download\r\n    },\r\n  });\r\n\r\n  function generateReport() {\r\n    mutateGenerateReport({\r\n      title,\r\n      format: formatRef.current?.value,\r\n      field: fieldRef.current?.value,\r\n      branch: branchRef.current?.value,\r\n      dateFrom: dateFromRef.current?.value,\r\n      dateTo: dateToRef.current?.value,\r\n      type: typeRef.current?.value,\r\n      sort: sortRef.current?.value,\r\n      order: orderRef.current?.value,\r\n    });\r\n  }\r\n  function generateExcelReport() {\r\n    mutateGenerateExcelReport({\r\n      title,\r\n      format: formatRef.current?.value,\r\n      field: fieldRef.current?.value,\r\n      branch: branchRef.current?.value,\r\n      dateFrom: dateFromRef.current?.value,\r\n      dateTo: dateToRef.current?.value,\r\n      type: typeRef.current?.value,\r\n      sort: sortRef.current?.value,\r\n      order: orderRef.current?.value,\r\n    });\r\n  }\r\n\r\n  function generateTitle({ branch, dateFrom, dateTo }: any) {\r\n    const department = process.env.REACT_APP_DEPARTMENT;\r\n    return `${\r\n      department === \"UMIS\"\r\n        ? \"UPWARD MANAGEMENT INSURANCE SERVICES \"\r\n        : \"UPWARD CONSULTANCY SERVICES AND MANAGEMENT INC. \"\r\n    } ${\r\n      branch === \"All\" ? \"\" : `( ${branch} )`\r\n    }\\nPost Dated Checks Registered\\nFrom ${format(\r\n      new Date(dateFrom),\r\n      \"MM/dd/yyyy\"\r\n    )} to ${format(new Date(dateTo), \"MM/dd/yyyy\")}`;\r\n  }\r\n  const mutateSubAccountRef = useRef<any>(mutateSubAccount);\r\n  const generateTitleRef = useRef<any>(generateTitle);\r\n\r\n  useEffect(() => {\r\n    mutateSubAccountRef.current();\r\n    setTitle(\r\n      generateTitleRef.current({\r\n        branch: \"All\",\r\n        dateTo: new Date(),\r\n        dateFrom: new Date(),\r\n      })\r\n    );\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      {(isLaodingSubAccount ||\r\n        isLoadingGenerateReport ||\r\n        isLoadingGenerateExcelReport) && <Loading />}\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          flex: 1,\r\n          flexDirection: \"column\",\r\n          padding: \"5px\",\r\n          rowGap: \"7px\",\r\n        }}\r\n      >\r\n        <TextAreaInput\r\n          containerStyle={{\r\n            marginBottom: \"10px\",\r\n          }}\r\n          label={{\r\n            title: \"Title : \",\r\n            style: {\r\n              fontSize: \"12px\",\r\n              fontWeight: \"bold\",\r\n              width: \"100px\",\r\n              display: \"none\",\r\n            },\r\n          }}\r\n          textarea={{\r\n            rows: 7,\r\n            style: { flex: 1 },\r\n            value: title,\r\n            onChange: (e) => {\r\n              setTitle(e.currentTarget.value);\r\n            },\r\n          }}\r\n          _inputRef={titleRef}\r\n        />\r\n        <SelectInput\r\n          label={{\r\n            title: \"Format :\",\r\n            style: {\r\n              fontSize: \"12px\",\r\n              fontWeight: \"bold\",\r\n              width: \"90px\",\r\n            },\r\n          }}\r\n          selectRef={formatRef}\r\n          select={{\r\n            style: { width: \"calc(100% - 90px)\", height: \"22px\" },\r\n            defaultValue: \"Format - 2\",\r\n            onKeyDown: (e) => {\r\n              if (e.code === \"NumpadEnter\" || e.code === \"Enter\") {\r\n                e.preventDefault();\r\n              }\r\n            },\r\n            onChange: (e) => {},\r\n          }}\r\n          datasource={[{ key: \"Format - 1\" }, { key: \"Format - 2\" }]}\r\n          values={\"key\"}\r\n          display={\"key\"}\r\n        />\r\n        <SelectInput\r\n          label={{\r\n            title: \"Field :\",\r\n            style: {\r\n              fontSize: \"12px\",\r\n              fontWeight: \"bold\",\r\n              width: \"90px\",\r\n            },\r\n          }}\r\n          selectRef={fieldRef}\r\n          select={{\r\n            style: { width: \"calc(100% - 90px)\", height: \"22px\" },\r\n            defaultValue: \"Check Date\",\r\n            onKeyDown: (e) => {\r\n              if (e.code === \"NumpadEnter\" || e.code === \"Enter\") {\r\n                e.preventDefault();\r\n              }\r\n            },\r\n            onChange: (e) => {},\r\n          }}\r\n          datasource={[{ key: \"Check Date\" }, { key: \"Date Received\" }]}\r\n          values={\"key\"}\r\n          display={\"key\"}\r\n        />\r\n        <SelectInput\r\n          label={{\r\n            title: \"Branch :\",\r\n            style: {\r\n              fontSize: \"12px\",\r\n              fontWeight: \"bold\",\r\n              width: \"90px\",\r\n            },\r\n          }}\r\n          ref={_branchRef}\r\n          selectRef={branchRef}\r\n          select={{\r\n            style: { width: \"calc(100% - 90px)\", height: \"22px\" },\r\n            defaultValue: \"ALL\",\r\n            onKeyDown: (e) => {\r\n              if (e.code === \"NumpadEnter\" || e.code === \"Enter\") {\r\n                e.preventDefault();\r\n              }\r\n            },\r\n            onChange: (e) => {\r\n              setTitle(\r\n                generateTitle({\r\n                  branch: e.currentTarget.value,\r\n                  dateFrom: validateDate(dateFromRef.current?.value as any)\r\n                    ? new Date(dateFromRef.current?.value as any)\r\n                    : new Date(),\r\n                  dateTo: validateDate(dateToRef.current?.value as any)\r\n                    ? new Date(dateToRef.current?.value as any)\r\n                    : new Date(),\r\n                })\r\n              );\r\n            },\r\n          }}\r\n          datasource={[]}\r\n          values={\"Acronym\"}\r\n          display={\"Acronym\"}\r\n        />\r\n        <TextInput\r\n          label={{\r\n            title: \"Date From :\",\r\n            style: {\r\n              fontSize: \"12px\",\r\n              fontWeight: \"bold\",\r\n              width: \"90px\",\r\n            },\r\n          }}\r\n          containerStyle={{ width: \"100%\" }}\r\n          input={{\r\n            defaultValue: format(new Date(), \"yyyy-MM-dd\"),\r\n            type: \"date\",\r\n            onKeyDown: (e) => {\r\n              if (e.key === \"Enter\" || e.key === \"NumpadEnter\") {\r\n                e.preventDefault();\r\n                // searchCashDisbursementOpenModal(e.currentTarget.value);\r\n              }\r\n              if (e.key === \"ArrowDown\") {\r\n                e.preventDefault();\r\n              }\r\n            },\r\n            onChange: (e) => {\r\n              setTitle(\r\n                generateTitle({\r\n                  branch: branchRef.current?.value,\r\n                  dateFrom: validateDate(e.currentTarget.value)\r\n                    ? new Date(e.currentTarget.value)\r\n                    : new Date(),\r\n                  dateTo: validateDate(dateToRef.current?.value as any)\r\n                    ? new Date(dateToRef.current?.value as any)\r\n                    : new Date(),\r\n                })\r\n              );\r\n            },\r\n            style: { width: \"calc(100% - 90px)\" },\r\n          }}\r\n          inputRef={dateFromRef}\r\n        />\r\n        <TextInput\r\n          label={{\r\n            title: \"Date To :\",\r\n            style: {\r\n              fontSize: \"12px\",\r\n              fontWeight: \"bold\",\r\n              width: \"90px\",\r\n            },\r\n          }}\r\n          containerStyle={{ width: \"100%\" }}\r\n          input={{\r\n            defaultValue: format(new Date(), \"yyyy-MM-dd\"),\r\n            type: \"date\",\r\n            onKeyDown: (e) => {\r\n              if (e.key === \"Enter\" || e.key === \"NumpadEnter\") {\r\n                e.preventDefault();\r\n                // searchCashDisbursementOpenModal(e.currentTarget.value);\r\n              }\r\n              if (e.key === \"ArrowDown\") {\r\n                e.preventDefault();\r\n              }\r\n            },\r\n            onChange: (e) => {\r\n              setTitle(\r\n                generateTitle({\r\n                  branch: branchRef.current?.value,\r\n                  dateFrom: validateDate(dateFromRef.current?.value as any)\r\n                    ? new Date(dateFromRef.current?.value as any)\r\n                    : new Date(),\r\n                  dateTo: validateDate(e.currentTarget.value as any)\r\n                    ? new Date(e.currentTarget.value as any)\r\n                    : new Date(),\r\n                })\r\n              );\r\n            },\r\n            style: { width: \"calc(100% - 90px)\" },\r\n          }}\r\n          inputRef={dateToRef}\r\n        />\r\n        <SelectInput\r\n          label={{\r\n            title: \"Type :\",\r\n            style: {\r\n              fontSize: \"12px\",\r\n              fontWeight: \"bold\",\r\n              width: \"90px\",\r\n            },\r\n          }}\r\n          selectRef={typeRef}\r\n          select={{\r\n            style: { width: \"calc(100% - 90px)\", height: \"22px\" },\r\n            defaultValue: \"ALL\",\r\n            onKeyDown: (e) => {\r\n              if (e.code === \"NumpadEnter\" || e.code === \"Enter\") {\r\n                e.preventDefault();\r\n              }\r\n            },\r\n            onChange: (e) => {},\r\n          }}\r\n          datasource={[{ key: \"All\" }, { key: \"Rent\" }, { key: \"Loan\" }]}\r\n          values={\"key\"}\r\n          display={\"key\"}\r\n        />\r\n        <fieldset\r\n          style={{\r\n            border: \"1px solid #cbd5e1\",\r\n            borderRadius: \"5px\",\r\n            position: \"relative\",\r\n            width: \"100%\",\r\n            height: \"auto\",\r\n            margin: \"10px 0px\",\r\n            padding: \"15px\",\r\n            display: \"flex\",\r\n            rowGap: \"10px\",\r\n            flexDirection: \"column\",\r\n          }}\r\n        >\r\n          <SelectInput\r\n            label={{\r\n              title: \"Sort :\",\r\n              style: {\r\n                fontSize: \"12px\",\r\n                fontWeight: \"bold\",\r\n                width: \"90px\",\r\n              },\r\n            }}\r\n            selectRef={sortRef}\r\n            select={{\r\n              style: { width: \"calc(100% - 90px)\", height: \"22px\" },\r\n              defaultValue: \"Check Date\",\r\n              onKeyDown: (e) => {\r\n                if (e.code === \"NumpadEnter\" || e.code === \"Enter\") {\r\n                  e.preventDefault();\r\n                }\r\n              },\r\n            }}\r\n            datasource={[\r\n              { key: \"Name\" },\r\n              { key: \"Check Date\" },\r\n              { key: \"Date Received\" },\r\n            ]}\r\n            values={\"key\"}\r\n            display={\"key\"}\r\n          />\r\n          <SelectInput\r\n            label={{\r\n              title: \"Order :\",\r\n              style: {\r\n                fontSize: \"12px\",\r\n                fontWeight: \"bold\",\r\n                width: \"90px\",\r\n              },\r\n            }}\r\n            selectRef={orderRef}\r\n            select={{\r\n              style: { width: \"calc(100% - 90px)\", height: \"22px\" },\r\n              defaultValue: \"Ascending\",\r\n              onKeyDown: (e) => {\r\n                if (e.code === \"NumpadEnter\" || e.code === \"Enter\") {\r\n                  e.preventDefault();\r\n                }\r\n              },\r\n            }}\r\n            datasource={[{ key: \"Ascending\" }, { key: \"Descending\" }]}\r\n            values={\"key\"}\r\n            display={\"key\"}\r\n          />\r\n        </fieldset>\r\n        <Button\r\n          onClick={generateReport}\r\n          color=\"success\"\r\n          variant=\"contained\"\r\n          sx={{ height: \"22px\", fontSize: \"12px\", width: \"100%\" }}\r\n        >\r\n          Generate PDF Report\r\n        </Button>\r\n        <Button\r\n          onClick={generateExcelReport}\r\n          color=\"success\"\r\n          variant=\"contained\"\r\n          sx={{ height: \"22px\", fontSize: \"12px\", width: \"100%\" }}\r\n        >\r\n          Generate Excel Report\r\n        </Button>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\nfunction PettyCashFundDisbursement() {\r\n  const { user, myAxios } = useContext(AuthContext);\r\n  const [title, setTitle] = useState(\"\");\r\n  const titleRef = useRef<HTMLTextAreaElement>(null);\r\n  const fundRef = useRef<HTMLSelectElement>(null);\r\n  const branchRef = useRef<HTMLSelectElement>(null);\r\n  const _branchRef = useRef<any>(null);\r\n  const fromRef = useRef<HTMLInputElement>(null);\r\n  const toRef = useRef<HTMLInputElement>(null);\r\n\r\n  const { mutate: mutateGenerateReport, isLoading: isLoadingGenerateReport } =\r\n    useMutation({\r\n      mutationKey: \"generate-report\",\r\n      mutationFn: async (variables: any) => {\r\n        return await myAxios.post(\r\n          \"/reports/accounting/report/generate-report-petty-cash-fund-disbursement\",\r\n          variables,\r\n          {\r\n            responseType: \"arraybuffer\",\r\n            headers: {\r\n              Authorization: `Bearer ${user?.accessToken}`,\r\n            },\r\n          }\r\n        );\r\n      },\r\n      onSuccess: (response) => {\r\n        const pdfBlob = new Blob([response.data], { type: \"application/pdf\" });\r\n        const pdfUrl = URL.createObjectURL(pdfBlob);\r\n        if (isMobile) {\r\n          // MOBILE: download directly\r\n          const link = document.createElement(\"a\");\r\n          link.href = pdfUrl;\r\n          link.download = \"report.pdf\";\r\n          document.body.appendChild(link);\r\n          link.click();\r\n          document.body.removeChild(link);\r\n          return;\r\n        } else {\r\n          window.open(\r\n            `/${\r\n              process.env.REACT_APP_DEPARTMENT\r\n            }/dashboard/report?pdf=${encodeURIComponent(pdfUrl)}`,\r\n            \"_blank\"\r\n          );\r\n        }\r\n      },\r\n    });\r\n\r\n  const { isLoading: isLaodingSubAccount, mutate: mutateSubAccount } =\r\n    useMutation({\r\n      mutationKey: \"sub-account\",\r\n      mutationFn: async (variable: any) =>\r\n        await myAxios.post(`/reports/accounting/report/sub-account`, variable, {\r\n          headers: {\r\n            Authorization: `Bearer ${user?.accessToken}`,\r\n          },\r\n        }),\r\n      onSuccess(res) {\r\n        if (res.data.success) {\r\n          _branchRef.current.setDataSource(res.data.data);\r\n        }\r\n      },\r\n    });\r\n\r\n  function generateTitle({ branch, from, to }: any) {\r\n    const department = user?.department;\r\n    return `${\r\n      department === \"UMIS\"\r\n        ? \"UPWARD MANAGEMENT INSURANCE SERVICES \"\r\n        : \"UPWARD CONSULTANCY SERVICES AND MANAGEMENT INC. \"\r\n    } ${\r\n      branch === \"All\" ? \"\" : `( ${branch} )`\r\n    }\\nPetty Cash Fund Disbursement\\nFrom ${from} to ${to}`;\r\n  }\r\n\r\n  function generateReport() {\r\n    mutateGenerateReport({\r\n      title,\r\n      subAccount: branchRef.current?.value,\r\n      seriesFrom: fromRef.current?.value,\r\n      seriesTo: toRef.current?.value,\r\n    });\r\n  }\r\n\r\n  const mutateSubAccountRef = useRef<any>(mutateSubAccount);\r\n  const generateTitleRef = useRef<any>(generateTitle);\r\n\r\n  useEffect(() => {\r\n    mutateSubAccountRef.current();\r\n    setTitle(\r\n      generateTitleRef.current({\r\n        branch: \"All\",\r\n        to: \"\",\r\n        from: \"\",\r\n      })\r\n    );\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      {(isLaodingSubAccount || isLoadingGenerateReport) && <Loading />}\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          flex: 1,\r\n          flexDirection: \"column\",\r\n          padding: \"5px\",\r\n          rowGap: \"7px\",\r\n        }}\r\n      >\r\n        <TextAreaInput\r\n          containerStyle={{\r\n            marginBottom: \"10px\",\r\n          }}\r\n          label={{\r\n            title: \"Title : \",\r\n            style: {\r\n              fontSize: \"12px\",\r\n              fontWeight: \"bold\",\r\n              width: \"100px\",\r\n              display: \"none\",\r\n            },\r\n          }}\r\n          textarea={{\r\n            rows: 7,\r\n            style: { flex: 1 },\r\n            value: title,\r\n            onChange: (e) => {\r\n              setTitle(e.currentTarget.value);\r\n            },\r\n          }}\r\n          _inputRef={titleRef}\r\n        />\r\n        <SelectInput\r\n          label={{\r\n            title: \"Fund :\",\r\n            style: {\r\n              fontSize: \"12px\",\r\n              fontWeight: \"bold\",\r\n              width: \"90px\",\r\n            },\r\n          }}\r\n          selectRef={fundRef}\r\n          select={{\r\n            style: { width: \"calc(100% - 90px)\", height: \"22px\" },\r\n            defaultValue: \"Petty Cash\",\r\n            onKeyDown: (e) => {\r\n              if (e.code === \"NumpadEnter\" || e.code === \"Enter\") {\r\n                e.preventDefault();\r\n              }\r\n            },\r\n            onChange: (e) => {},\r\n          }}\r\n          datasource={[{ key: \"Petty Cash\" }]}\r\n          values={\"key\"}\r\n          display={\"key\"}\r\n        />\r\n        <SelectInput\r\n          label={{\r\n            title: \"Branch :\",\r\n            style: {\r\n              fontSize: \"12px\",\r\n              fontWeight: \"bold\",\r\n              width: \"90px\",\r\n            },\r\n          }}\r\n          ref={_branchRef}\r\n          selectRef={branchRef}\r\n          select={{\r\n            style: { width: \"calc(100% - 90px)\", height: \"22px\" },\r\n            defaultValue: \"ALL\",\r\n            onKeyDown: (e) => {\r\n              if (e.code === \"NumpadEnter\" || e.code === \"Enter\") {\r\n                e.preventDefault();\r\n              }\r\n            },\r\n            onChange: (e) => {\r\n              setTitle(\r\n                generateTitle({\r\n                  branch: e.currentTarget.value,\r\n                  to: toRef.current?.value,\r\n                  from: fromRef.current?.value,\r\n                })\r\n              );\r\n            },\r\n          }}\r\n          datasource={[]}\r\n          values={\"Acronym\"}\r\n          display={\"Acronym\"}\r\n        />\r\n        <TextInput\r\n          label={{\r\n            title: \"From :\",\r\n            defaultValue: \"\",\r\n            style: {\r\n              fontSize: \"12px\",\r\n              fontWeight: \"bold\",\r\n              width: \"90px\",\r\n            },\r\n          }}\r\n          containerStyle={{ width: \"100%\" }}\r\n          input={{\r\n            type: \"text\",\r\n            onKeyDown: (e) => {\r\n              if (e.key === \"Enter\" || e.key === \"NumpadEnter\") {\r\n                e.preventDefault();\r\n              }\r\n              if (e.key === \"ArrowDown\") {\r\n                e.preventDefault();\r\n              }\r\n            },\r\n            onChange: (e) => {\r\n              setTitle(\r\n                generateTitle({\r\n                  branch: branchRef.current?.value,\r\n                  to: toRef.current?.value,\r\n                  from: e.currentTarget.value,\r\n                })\r\n              );\r\n            },\r\n            style: { width: \"calc(100% - 90px)\" },\r\n          }}\r\n          inputRef={fromRef}\r\n        />\r\n        <span\r\n          style={{\r\n            fontSize: \"10px\",\r\n            fontWeight: \"bold\",\r\n            width: \"185px\",\r\n            textAlign: \"right\",\r\n          }}\r\n        >\r\n          Example : {format(new Date(), \"yyMM\")}-001\r\n        </span>\r\n        <TextInput\r\n          label={{\r\n            title: \"To :\",\r\n            style: {\r\n              fontSize: \"12px\",\r\n              fontWeight: \"bold\",\r\n              width: \"90px\",\r\n            },\r\n          }}\r\n          containerStyle={{ width: \"100%\" }}\r\n          input={{\r\n            type: \"text\",\r\n            defaultValue: \"\",\r\n            onKeyDown: (e) => {\r\n              if (e.key === \"Enter\" || e.key === \"NumpadEnter\") {\r\n                e.preventDefault();\r\n                // searchCashDisbursementOpenModal(e.currentTarget.value);\r\n              }\r\n              if (e.key === \"ArrowDown\") {\r\n                e.preventDefault();\r\n              }\r\n            },\r\n            onChange: (e) => {\r\n              setTitle(\r\n                generateTitle({\r\n                  branch: branchRef.current?.value,\r\n                  to: e.currentTarget.value,\r\n                  from: fromRef.current?.value,\r\n                })\r\n              );\r\n            },\r\n            style: { width: \"calc(100% - 90px)\" },\r\n          }}\r\n          inputRef={toRef}\r\n        />\r\n        <span\r\n          style={{\r\n            fontSize: \"10px\",\r\n            fontWeight: \"bold\",\r\n            width: \"185px\",\r\n            textAlign: \"right\",\r\n          }}\r\n        >\r\n          Example : {format(new Date(), \"yyMM\")}-100\r\n        </span>\r\n        <Button\r\n          onClick={generateReport}\r\n          color=\"success\"\r\n          variant=\"contained\"\r\n          sx={{ height: \"22px\", fontSize: \"12px\", width: \"100%\" }}\r\n        >\r\n          Generate PDF Report\r\n        </Button>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nfunction AgingAccounts({ link, reportTitle }: any) {\r\n  const { myAxios, user } = useContext(AuthContext);\r\n\r\n  const [title, setTitle] = useState(\r\n    generateTitle({\r\n      cmbformat: \"Default\",\r\n      report: \"Monthly\",\r\n      subAccount: \"ALL\",\r\n      date: new Date(),\r\n    })\r\n  );\r\n\r\n  const [report, setReport] = useState(\"Monthly\");\r\n  const titleRef = useRef<HTMLTextAreaElement>(null);\r\n  const formatRef = useRef<HTMLSelectElement>(null);\r\n  const reportRef = useRef<HTMLSelectElement>(null);\r\n  const subAccountRef = useRef<HTMLSelectElement>(null);\r\n  const _subAccountRef = useRef<any>(null);\r\n  const policyTypeRef = useRef<HTMLSelectElement>(null);\r\n  const dateRef = useRef<HTMLInputElement>(null);\r\n\r\n  const { mutate: mutateGenerateReport, isLoading: isLoadingGenerateReport } =\r\n    useMutation({\r\n      mutationKey: \"generate-report\",\r\n      mutationFn: async (variables: any) => {\r\n        return await myAxios.post(link, variables, {\r\n          responseType: \"arraybuffer\",\r\n          headers: {\r\n            Authorization: `Bearer ${user?.accessToken}`,\r\n          },\r\n        });\r\n      },\r\n      onSuccess: (response) => {\r\n        const pdfBlob = new Blob([response.data], { type: \"application/pdf\" });\r\n        const pdfUrl = URL.createObjectURL(pdfBlob);\r\n        if (isMobile) {\r\n          // MOBILE: download directly\r\n          const link = document.createElement(\"a\");\r\n          link.href = pdfUrl;\r\n          link.download = \"report.pdf\";\r\n          document.body.appendChild(link);\r\n          link.click();\r\n          document.body.removeChild(link);\r\n          return;\r\n        } else {\r\n          window.open(\r\n            `/${\r\n              process.env.REACT_APP_DEPARTMENT\r\n            }/dashboard/report?pdf=${encodeURIComponent(pdfUrl)}`,\r\n            \"_blank\"\r\n          );\r\n        }\r\n      },\r\n    });\r\n\r\n  function generateTitle({ report, cmbformat, subAccount, date }: any) {\r\n    const _title =\r\n      process.env.REACT_APP_DEPARTMENT === \"UMIS\"\r\n        ? \"UPWARD MANAGEMENT INSURANCE SERVICES\"\r\n        : \"UPWARD CONSULTANCY SERVICES AND MANAGEMENT INC.\";\r\n\r\n    return `${_title} ${\r\n      subAccount.toUpperCase() === \"ALL\" ? \"\" : `(${subAccount})`\r\n    }\\n${report} ${reportTitle} ${\r\n      cmbformat === \"Summary\" ? \"(Per Revenue Center)\" : \"\"\r\n    }\\n${\r\n      report === \"Monthly\"\r\n        ? format(new Date(date), \"MMMM, yyyy\")\r\n        : format(new Date(date), \"MMMM dd, yyyy\")\r\n    }`;\r\n  }\r\n\r\n  function generateReport() {\r\n    mutateGenerateReport({\r\n      cmbformat: formatRef.current?.value,\r\n      report: reportRef.current?.value,\r\n      subAccount: subAccountRef.current?.value,\r\n      policyType: policyTypeRef.current?.value,\r\n      date: dateRef.current?.value,\r\n      title,\r\n    });\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {isLoadingGenerateReport && <Loading />}\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          flex: 1,\r\n          flexDirection: \"column\",\r\n          padding: \"5px\",\r\n          rowGap: \"10px\",\r\n        }}\r\n      >\r\n        <TextAreaInput\r\n          containerStyle={{\r\n            marginBottom: \"10px\",\r\n          }}\r\n          label={{\r\n            title: \"Title : \",\r\n            style: {\r\n              fontSize: \"12px\",\r\n              fontWeight: \"bold\",\r\n              width: \"100px\",\r\n              display: \"none\",\r\n            },\r\n          }}\r\n          textarea={{\r\n            rows: 7,\r\n            style: { flex: 1 },\r\n            value: title,\r\n            onChange: (e) => {\r\n              setTitle(e.currentTarget.value);\r\n            },\r\n          }}\r\n          _inputRef={titleRef}\r\n        />\r\n        <SelectInput\r\n          label={{\r\n            title: \"Format :\",\r\n            style: {\r\n              fontSize: \"12px\",\r\n              fontWeight: \"bold\",\r\n              width: \"120px\",\r\n            },\r\n          }}\r\n          selectRef={formatRef}\r\n          select={{\r\n            defaultValue: \"All Accounts\",\r\n            style: { width: \"calc(100% - 120px)\", height: \"22px\" },\r\n            onKeyDown: (e) => {\r\n              if (e.code === \"NumpadEnter\" || e.code === \"Enter\") {\r\n                e.preventDefault();\r\n              }\r\n            },\r\n            onChange: (e) => {\r\n              setTitle(\r\n                generateTitle({\r\n                  cmbformat: e.currentTarget.value,\r\n                  report: reportRef.current?.value,\r\n                  subAccount: subAccountRef.current?.value,\r\n                  date: validateDate(dateRef.current?.value as any)\r\n                    ? new Date(dateRef.current?.value as any)\r\n                    : new Date(),\r\n                })\r\n              );\r\n            },\r\n          }}\r\n          datasource={[{ key: \"All Accounts\" }]}\r\n          values={\"key\"}\r\n          display={\"key\"}\r\n        />\r\n        <SelectInput\r\n          label={{\r\n            title: \"Report :\",\r\n            style: {\r\n              fontSize: \"12px\",\r\n              fontWeight: \"bold\",\r\n              width: \"120px\",\r\n            },\r\n          }}\r\n          selectRef={reportRef}\r\n          select={{\r\n            style: { width: \"calc(100% - 120px)\", height: \"22px\" },\r\n            value: report,\r\n            onKeyDown: (e) => {\r\n              if (e.code === \"NumpadEnter\" || e.code === \"Enter\") {\r\n                e.preventDefault();\r\n              }\r\n            },\r\n            onChange: (e) => {\r\n              if (e.currentTarget.value === \"Monthly\") {\r\n                wait(100).then(() => {\r\n                  if (dateRef.current) {\r\n                    dateRef.current.value = format(new Date(), \"yyyy-MM\");\r\n                  }\r\n                });\r\n              } else {\r\n                wait(100).then(() => {\r\n                  if (dateRef.current) {\r\n                    dateRef.current.value = format(new Date(), \"yyyy-MM-dd\");\r\n                  }\r\n                });\r\n              }\r\n              setReport(e.currentTarget.value);\r\n              setTitle(\r\n                generateTitle({\r\n                  cmbformat: formatRef.current?.value,\r\n                  report: e.currentTarget.value,\r\n                  subAccount: subAccountRef.current?.value,\r\n                  date: validateDate(dateRef.current?.value as any)\r\n                    ? new Date(dateRef.current?.value as any)\r\n                    : new Date(),\r\n                })\r\n              );\r\n            },\r\n          }}\r\n          datasource={[{ key: \"Monthly\" }]}\r\n          values={\"key\"}\r\n          display={\"key\"}\r\n        />\r\n        <SelectInput\r\n          ref={_subAccountRef}\r\n          label={{\r\n            title: \"Sub Account :\",\r\n            style: {\r\n              fontSize: \"12px\",\r\n              fontWeight: \"bold\",\r\n              width: \"120px\",\r\n            },\r\n          }}\r\n          selectRef={subAccountRef}\r\n          select={{\r\n            style: { width: \"calc(100% - 120px)\", height: \"22px\" },\r\n            defaultValue: \"HO\",\r\n            onKeyDown: (e) => {\r\n              if (e.code === \"NumpadEnter\" || e.code === \"Enter\") {\r\n                e.preventDefault();\r\n              }\r\n            },\r\n            onChange: (e) => {\r\n              setTitle(\r\n                generateTitle({\r\n                  cmbformat: formatRef.current?.value,\r\n                  report: reportRef.current?.value,\r\n                  subAccount: e.currentTarget.value,\r\n                  date: validateDate(dateRef.current?.value as any)\r\n                    ? new Date(dateRef.current?.value as any)\r\n                    : new Date(),\r\n                })\r\n              );\r\n            },\r\n          }}\r\n          datasource={[{ Acronym: \"All\" }]}\r\n          values={\"Acronym\"}\r\n          display={\"Acronym\"}\r\n        />\r\n\r\n        <TextInput\r\n          label={{\r\n            title: \"Date : \",\r\n            style: {\r\n              fontSize: \"12px\",\r\n              fontWeight: \"bold\",\r\n              width: \"120px\",\r\n            },\r\n          }}\r\n          input={{\r\n            type: report === \"Monthly\" ? \"month\" : \"date\",\r\n            defaultValue:\r\n              report === \"Monthly\"\r\n                ? format(new Date(), \"yyyy-MM\")\r\n                : format(new Date(), \"yyyy-MM-dd\"),\r\n            onKeyDown: (e) => {\r\n              if (e.key === \"Enter\" || e.key === \"NumpadEnter\") {\r\n                e.preventDefault();\r\n                // searchCashDisbursementOpenModal(e.currentTarget.value);\r\n              }\r\n              if (e.key === \"ArrowDown\") {\r\n                e.preventDefault();\r\n              }\r\n            },\r\n\r\n            onBlur: (e) => {\r\n              setTitle(\r\n                generateTitle({\r\n                  cmbformat: formatRef.current?.value,\r\n                  report: reportRef.current?.value,\r\n                  subAccount: subAccountRef.current?.value,\r\n                  date: e.currentTarget.value,\r\n                })\r\n              );\r\n            },\r\n            style: { width: \"calc(100% - 120px)\" },\r\n          }}\r\n          inputRef={dateRef}\r\n        />\r\n        <SelectInput\r\n          label={{\r\n            title: \"Policy Type :\",\r\n            style: {\r\n              fontSize: \"12px\",\r\n              fontWeight: \"bold\",\r\n              width: \"120px\",\r\n            },\r\n          }}\r\n          selectRef={policyTypeRef}\r\n          select={{\r\n            style: { width: \"calc(100% - 120px)\", height: \"22px\" },\r\n            defaultValue: \"Regular\",\r\n            onKeyDown: (e) => {\r\n              if (e.code === \"NumpadEnter\" || e.code === \"Enter\") {\r\n                e.preventDefault();\r\n              }\r\n            },\r\n          }}\r\n          datasource={[{ key: \"Regular\" }, { key: \"Temporary\" }]}\r\n          values={\"key\"}\r\n          display={\"key\"}\r\n        />\r\n        <Button\r\n          onClick={generateReport}\r\n          color=\"success\"\r\n          variant=\"contained\"\r\n          sx={{ height: \"22px\", fontSize: \"12px\", width: \"100%\" }}\r\n        >\r\n          Generate Report\r\n        </Button>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\nconst validateDate = (dateStr: any, dateFormat = \"yyyy-MM-dd\") => {\r\n  const parsedDate = parse(dateStr, dateFormat, new Date());\r\n  const isDateValid =\r\n    isValid(parsedDate) && format(parsedDate, dateFormat) === dateStr;\r\n  return isDateValid;\r\n};\r\n","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)([/*#__PURE__*/(0, _jsxRuntime.jsx)(\"circle\", {\n  cx: \"10\",\n  cy: \"8\",\n  r: \"4\"\n}, \"0\"), /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M10.35 14.01C7.62 13.91 2 15.27 2 18v2h9.54c-2.47-2.76-1.23-5.89-1.19-5.99zm9.08 4.01c.36-.59.57-1.28.57-2.02 0-2.21-1.79-4-4-4s-4 1.79-4 4 1.79 4 4 4c.74 0 1.43-.22 2.02-.57L20.59 22 22 20.59l-2.57-2.57zM16 18c-1.1 0-2-.9-2-2s.9-2 2-2 2 .9 2 2-.9 2-2 2z\"\n}, \"1\")], 'PersonSearch');\nexports.default = _default;","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z\"\n}), 'Search');\nexports.default = _default;"],"names":["_ref","_ref$title","title","_jsxs","Helmet","children","_jsx","concat","process","rel","type","href","buttons","label","id","AccountingReport","user","useContext","AuthContext","_useState","useState","_useState2","_slicedToArray","buttonList","setButtonList","_useState3","_useState4","buttonSelected","setButtonSelected","useEffect","userAccess","_Fragment","PageHelmet","className","style","display","alignItems","justifyContent","flex","height","backgroundColor","border","width","flexDirection","rowGap","padding","boxShadow","columnGap","background","position","textAlign","fontSize","overflow","map","itm","idx","color","cursor","onClick","FormScheduleAccount","FormSubsidiaryLedger","FormFSReport","link","reportTitle","FormAbsDepoReturned","FormPostDatedCheckRegistry","PettyCashFundDisbursement","AgingAccounts","_getSelectedItem","_mutationFn","_mutationFn2","_onKeyDown","chartAccountUpwardTableModalSearchRef","useRef","_useContext2","myAxios","_useState5","generateTitle","report","subsiText","insuarnceIndex","insurance","dateValue","format","Date","account","accountTitle","_useState6","setTitle","_useState7","_useState8","subsi","setSubsi","_useState9","_useState10","setReport","titleRef","reportRef","accountRef","_accountRef","subsiRef","__subsiRef","_subsiRef","subsiTextRef","dateRef","sortRef","orderRef","_useUpwardTableModalS","useUpwardTableModalSearchSafeMode","column","key","getSelectedItem","_x","_x2","_x3","_x4","_asyncToGenerator","_regeneratorRuntime","mark","_callee","rowItm","_","rowIdx","__","wrap","_context","prev","next","wait","then","_subsiTextRef$current","_subsiRef$current","_subsiRef$current2","_dateRef$current","_dateRef$current2","_subsiRef$current3","current","value","selectedIndex","validateDate","focus","chartAccountCloseModal","stop","apply","arguments","ChartAccountUpwardTableModalSearch","UpwardTableModalSearch","chartAccountOpenModal","openModal","closeModal","_useMutation","useMutation","mutationKey","mutationFn","_x5","_callee2","variable","_context2","post","headers","Authorization","accessToken","abrupt","sent","onSuccess","res","data","success","setDataSource","AccountCode","_toConsumableArray","isLoadingInsurance","isLoading","mutateInsurance","mutate","_title","_useMutation2","_x6","_callee3","variables","_context3","responseType","response","pdfBlob","Blob","pdfUrl","URL","createObjectURL","isMobile","document","createElement","download","body","appendChild","click","removeChild","window","open","encodeURIComponent","mutateGenerateReport","isLoadingGenerateReport","Loading","TextAreaInput","containerStyle","marginBottom","fontWeight","textarea","rows","onChange","e","currentTarget","_inputRef","SelectInput","selectRef","select","defaultValue","onKeyDown","code","preventDefault","_subsiTextRef$current3","_subsiRef$current6","_subsiRef$current7","_dateRef$current4","_dateRef$current5","_accountRef$current3","_accountRef$current4","datasource","values","TextInput","input","disabled","_x7","_callee4","_context4","mutateReturnValue","search","length","_subsiTextRef$current4","_subsiRef$current8","_subsiRef$current9","_dateRef$current6","_dateRef$current7","_subsiRef$current10","Code","Title","icon","SearchIcon","sx","disableIcon","onIconClick","inputRef","readOnly","_subsiTextRef$current5","_subsiRef$current11","_subsiRef$current12","_dateRef$current8","_dateRef$current9","_accountRef$current5","_accountRef$current6","target","_subsiRef$current13","_subsiRef$current14","_dateRef$current10","_dateRef$current11","_accountRef$current7","_accountRef$current8","ref","_subsiTextRef$current6","_dateRef$current12","_dateRef$current13","_accountRef$current9","_accountRef$current10","_subsiTextRef$current7","_subsiRef$current15","_subsiRef$current16","_accountRef$current11","_accountRef$current12","borderRadius","margin","Button","_reportRef$current","_accountRef$current","_accountRef$current2","_subsiRef$current4","_subsiTextRef$current2","_subsiRef$current5","_dateRef$current3","_sortRef$current","_sortRef$current2","accountName","date","sort","order","variant","_getSelectedItem2","_getSelectedItem3","_getSelectedItem4","_mutationFn3","_mutationFn4","_onKeyDown2","_useContext3","_useState11","dateFrom","dateTo","_useState12","_useState13","_useState14","dateFromRef","dateToRef","formatRef","fieldRef","idNoRef","nameRef","subAcctRef","shortNameRef","_useUpwardTableModalS2","_x8","_x9","_x10","_x11","_callee5","_context5","_subsiRef$current17","_idNoRef$current","_dateFromRef$current","_dateFromRef$current2","_dateToRef$current","_dateToRef$current2","_subsiRef$current18","subsiName","subsiId","_useUpwardTableModalS3","hide","_x12","_x13","_x14","_x15","_callee6","_context6","_accountRef$current13","_accountRef$current14","_dateFromRef$current3","_dateFromRef$current4","_dateToRef$current3","_dateToRef$current4","clientCloseModal","ClientUpwardTableModalSearch","clientOpenModal","_useUpwardTableModalS4","_x16","_x17","_x18","_x19","_callee7","_context7","_accountRef$current15","_accountRef$current16","_dateFromRef$current5","_dateFromRef$current6","_dateToRef$current5","_dateToRef$current6","subAccountCloseModal","SubAccountUpwardTableModalSearch","subAccountOpenModal","_useMutation3","_x20","_callee8","_context8","_ref2","Subsi","_useMutation4","_x21","_callee9","_context9","_x22","_callee10","_context10","_subsiRef$current19","_idNoRef$current3","_dateFromRef$current8","_dateFromRef$current9","_dateToRef$current8","_dateToRef$current9","_subsiRef$current20","_subsiRef$current21","_accountRef$current18","_accountRef$current19","_idNoRef$current4","_dateFromRef$current10","_dateFromRef$current11","_dateToRef$current10","_dateToRef$current11","PersonSearchIcon","onBlur","_accountRef$current20","_accountRef$current21","_idNoRef$current5","_dateToRef$current12","_dateToRef$current13","_accountRef$current22","_accountRef$current23","_subAcctRef$current2","_dateToRef$current14","_dateToRef$current15","_accountRef$current24","_accountRef$current25","_dateToRef$current16","_dateToRef$current17","_accountRef$current26","_accountRef$current27","_idNoRef$current6","_dateFromRef$current12","_dateFromRef$current13","_accountRef$current28","_accountRef$current29","_subAcctRef$current3","_dateFromRef$current14","_dateFromRef$current15","_accountRef$current30","_accountRef$current31","_dateFromRef$current16","_dateFromRef$current17","_dateFromRef$current7","_dateToRef$current7","_accountRef$current17","_fieldRef$current","_formatRef$current","_idNoRef$current2","subsi_options","_subAcctRef$current","mField","_ref3","_mutationFn5","_mutationFn6","_useContext4","_useState15","cmbformat","subAccount","_useState16","_useState17","_useState18","subAccountRef","_subAccountRef","nominalAccountRef","_useMutation5","_x23","_callee11","_context11","_ref4","toUpperCase","_useMutation6","_x24","_callee12","_context12","isLaodingSubAccount","mutateSubAccount","mutateSubAccountRef","_reportRef$current3","_subAccountRef$curren2","_dateRef$current15","_dateRef$current16","_formatRef$current3","_subAccountRef$curren3","_dateRef$current17","_dateRef$current18","_formatRef$current4","_reportRef$current4","_dateRef$current19","_dateRef$current20","_formatRef$current5","_reportRef$current5","_subAccountRef$curren4","_formatRef$current2","_reportRef$current2","_subAccountRef$curren","_nominalAccountRef$cu","_dateRef$current14","_ref5","_mutationFn7","_mutationFn8","_useContext5","_useState19","_useState20","_useState21","_useState22","branchRef","_branchRef","_useMutation7","_x25","_callee13","_context13","_useMutation8","_x26","_callee14","_context14","_ref6","_branchRef$current2","_dateRef$current22","_dateRef$current23","_reportRef$current7","_branchRef$current3","_dateRef$current24","_dateRef$current25","_reportRef$current8","_branchRef$current4","_titleRef$current","_formatRef$current6","_reportRef$current6","_branchRef$current","_dateRef$current21","_sortRef$current3","_orderRef$current","cmbFormat","_mutationFn9","_mutationFn10","_mutationFn11","_useContext6","_useState23","_useState24","typeRef","_useMutation9","_x27","_callee15","_context15","_useMutation10","_x28","_callee16","_context16","_useMutation11","_x29","_callee17","_context17","mutateGenerateExcelReport","isLoadingGenerateExcelReport","_ref7","branch","generateTitleRef","_dateFromRef$current20","_dateFromRef$current21","_dateToRef$current20","_dateToRef$current21","_branchRef$current7","_dateToRef$current22","_dateToRef$current23","_branchRef$current8","_dateFromRef$current22","_dateFromRef$current23","_formatRef$current7","_fieldRef$current2","_branchRef$current5","_dateFromRef$current18","_dateToRef$current18","_typeRef$current","_sortRef$current4","_orderRef$current2","field","_formatRef$current8","_fieldRef$current3","_branchRef$current6","_dateFromRef$current19","_dateToRef$current19","_typeRef$current2","_sortRef$current5","_orderRef$current3","_mutationFn12","_mutationFn13","_useContext7","_useState25","_useState26","fundRef","fromRef","toRef","_useMutation12","_x30","_callee18","_context18","_useMutation13","_x31","_callee19","_context19","_ref8","from","to","department","_toRef$current2","_fromRef$current2","_branchRef$current10","_toRef$current3","_branchRef$current11","_fromRef$current3","_branchRef$current9","_fromRef$current","_toRef$current","seriesFrom","seriesTo","_ref9","_mutationFn14","_useContext8","_useState27","_useState28","_useState29","_useState30","policyTypeRef","_useMutation14","_x32","_callee20","_context20","_ref10","_reportRef$current10","_subAccountRef$curren6","_dateRef$current27","_dateRef$current28","_formatRef$current10","_subAccountRef$curren7","_dateRef$current29","_dateRef$current30","_formatRef$current11","_reportRef$current11","_dateRef$current31","_dateRef$current32","Acronym","_formatRef$current12","_reportRef$current12","_subAccountRef$curren8","_formatRef$current9","_reportRef$current9","_subAccountRef$curren5","_policyTypeRef$curren","_dateRef$current26","policyType","dateStr","dateFormat","undefined","parsedDate","parse","isValid","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","cx","cy","r","d"],"sourceRoot":""}