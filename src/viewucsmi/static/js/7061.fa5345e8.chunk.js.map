{"version":3,"file":"static/js/7061.fa5345e8.chunk.js","mappings":"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","sources":["feautures/Admin/Reference/Subline.tsx","../node_modules/@mui/icons-material/Delete.js","../node_modules/@mui/material/colors/pink.js"],"sourcesContent":["import { useContext, useState, useRef, useEffect } from \"react\";\nimport { Button } from \"@mui/material\";\nimport AddIcon from \"@mui/icons-material/Add\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\nimport { pink } from \"@mui/material/colors\";\nimport { AuthContext } from \"../../../components/AuthContext\";\nimport { useMutation } from \"react-query\";\nimport Swal from \"sweetalert2\";\nimport { wait } from \"../../../lib/wait\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport SaveIcon from \"@mui/icons-material/Save\";\nimport { LoadingButton } from \"@mui/lab\";\nimport {\n  codeCondfirmationAlert,\n  saveCondfirmationAlert,\n} from \"../../../lib/confirmationAlert\";\nimport PageHelmet from \"../../../components/Helmet\";\nimport { TextInput } from \"../../../components/UpwardFields\";\nimport SearchIcon from \"@mui/icons-material/Search\";\nimport { DataGridViewReact } from \"../../../components/DataGridViewReact\";\nimport { Loading } from \"../../../components/Loading\";\nimport { Autocomplete } from \"../Task/Accounting/PettyCash\";\nimport \"../../../style/monbileview/reference/reference.css\";\n\nexport const bankColumn = [\n  { key: \"Line\", label: \"Line\", width: 120 },\n  { key: \"SublineName\", label: \"Subline Name\", width: 500 },\n  { key: \"ID\", label: \"\", width: 0, hide: true },\n];\nexport default function Subline() {\n  const { myAxios, user } = useContext(AuthContext);\n  const inputSearchRef = useRef<HTMLInputElement>(null);\n  const [mode, setMode] = useState(\"\");\n  const tableRef = useRef<any>(null);\n\n  const lineRef = useRef<HTMLSelectElement>(null);\n  const sublineRef = useRef<HTMLInputElement>(null);\n  const refId = useRef(\"\");\n\n  const { mutate: mutateSearch, isLoading: loadingSearch } = useMutation({\n    mutationKey: \"search-subline\",\n    mutationFn: async (variables: any) => {\n      return await myAxios.post(\"/reference/search-subline\", variables, {\n        headers: {\n          Authorization: `Bearer ${user?.accessToken}`,\n        },\n      });\n    },\n    onSuccess: (response) => {\n      if (response.data.success) {\n        console.log(response.data);\n        wait(100).then(() => {\n          tableRef.current.setDataFormated(response.data.data);\n        });\n      }\n    },\n  });\n  const mutateSearchRef = useRef<any>(mutateSearch);\n\n  const { mutate: mutateAdd, isLoading: loadingAdd } = useMutation({\n    mutationKey: \"add\",\n    mutationFn: async (variables: any) => {\n      return await myAxios.post(\"/reference/add-subline\", variables, {\n        headers: {\n          Authorization: `Bearer ${user?.accessToken}`,\n        },\n      });\n    },\n    onSuccess,\n  });\n  const { mutate: mutateEdit, isLoading: loadingEdit } = useMutation({\n    mutationKey: \"edit\",\n    mutationFn: async (variables: any) => {\n      return await myAxios.post(\"/reference/update-subline\", variables, {\n        headers: {\n          Authorization: `Bearer ${user?.accessToken}`,\n        },\n      });\n    },\n    onSuccess,\n  });\n  const { mutate: mutateDelete, isLoading: loadingDelete } = useMutation({\n    mutationKey: \"delete\",\n    mutationFn: async (variables: any) => {\n      return await myAxios.post(\"/reference/delete-subline\", variables, {\n        headers: {\n          Authorization: `Bearer ${user?.accessToken}`,\n        },\n      });\n    },\n    onSuccess,\n  });\n\n  function handleOnSave(e: any) {\n    e.preventDefault();\n    if (lineRef.current?.value === \"\") {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: \"Please select Line!\",\n        showConfirmButton: false,\n        timer: 1500,\n      });\n    }\n    if (sublineRef.current?.value === \"\") {\n      return Swal.fire({\n        position: \"center\",\n        icon: \"warning\",\n        title: \"Please put subline!\",\n        showConfirmButton: false,\n        timer: 1500,\n      });\n    }\n    const state = {\n      Line: lineRef.current?.value,\n      SublineName: sublineRef.current?.value,\n      ID: refId.current,\n    };\n    if (mode === \"edit\") {\n      codeCondfirmationAlert({\n        isUpdate: true,\n        cb: (userCodeConfirmation) => {\n          mutateEdit({ ...state, userCodeConfirmation });\n        },\n      });\n    } else {\n      saveCondfirmationAlert({\n        isConfirm: () => {\n          mutateAdd(state);\n        },\n      });\n    }\n  }\n  function resetModule() {\n    if (lineRef.current) {\n      lineRef.current.value = \"\";\n    }\n    if (sublineRef.current) {\n      sublineRef.current.value = \"\";\n    }\n  }\n\n  function onSuccess(res: any) {\n    if (res.data.success) {\n      tableRef.current.setSelectedRow(null);\n      tableRef.current.resetCheckBox();\n      mutateSearchRef.current({ search: \"\" });\n      resetModule();\n      setMode(\"\");\n      return Swal.fire({\n        position: \"center\",\n        icon: \"success\",\n        title: res.data.message,\n        showConfirmButton: false,\n        timer: 1500,\n      });\n    }\n    Swal.fire({\n      position: \"center\",\n      icon: \"error\",\n      title: res.data.message,\n      showConfirmButton: false,\n      timer: 1500,\n    });\n  }\n\n  useEffect(() => {\n    mutateSearchRef.current({ search: \"\" });\n  }, []);\n\n  return (\n    <>\n      {loadingSearch && <Loading />}\n      <PageHelmet title=\"Sub Line\" />\n      <div\n        style={{\n          display: \"flex\",\n          flexDirection: \"column\",\n          width: \"100%\",\n          height: \"100%\",\n          flex: 1,\n          padding: \"5px\",\n          position: \"relative\",\n        }}\n      >\n        <div\n          style={{\n            marginTop: \"10px\",\n            marginBottom: \"12px\",\n            width: \"100%\",\n            display: \"flex\",\n            columnGap: \"7px\",\n          }}\n        >\n          <TextInput\n            containerClassName=\"custom-input\"\n            containerStyle={{\n              width: \"550px\",\n              marginRight: \"20px\",\n            }}\n            label={{\n              title: \"Search: \",\n              style: {\n                fontSize: \"12px\",\n                fontWeight: \"bold\",\n                width: \"50px\",\n              },\n            }}\n            input={{\n              className: \"search-input-up-on-key-down\",\n              type: \"search\",\n              onKeyDown: (e) => {\n                if (e.key === \"Enter\" || e.key === \"NumpadEnter\") {\n                  e.preventDefault();\n                  mutateSearch({ search: e.currentTarget.value });\n                }\n                if (e.key === \"ArrowDown\") {\n                  e.preventDefault();\n                  const datagridview = document.querySelector(\n                    \".grid-container\"\n                  ) as HTMLDivElement;\n                  datagridview.focus();\n                }\n              },\n              style: { width: \"500px\" },\n            }}\n            icon={\n              <SearchIcon\n                sx={{\n                  fontSize: \"18px\",\n                }}\n              />\n            }\n            onIconClick={(e) => {\n              e.preventDefault();\n              if (inputSearchRef.current) {\n                mutateSearch({ search: inputSearchRef.current.value });\n              }\n            }}\n            inputRef={inputSearchRef}\n          />\n          <div\n            className=\"button-action-desktop\"\n            style={{\n              display: \"flex\",\n              alignItems: \"center\",\n              columnGap: \"8px\",\n            }}\n          >\n            {mode === \"\" && (\n              <Button\n                style={{\n                  height: \"22px\",\n                  fontSize: \"11px\",\n                }}\n                variant=\"contained\"\n                startIcon={<AddIcon />}\n                id=\"entry-header-save-button\"\n                onClick={() => {\n                  setMode(\"add\");\n                }}\n              >\n                New\n              </Button>\n            )}\n            <LoadingButton\n              style={{\n                height: \"22px\",\n                fontSize: \"11px\",\n              }}\n              id=\"save-entry-header\"\n              color=\"primary\"\n              variant=\"contained\"\n              type=\"submit\"\n              sx={{\n                height: \"30px\",\n                fontSize: \"11px\",\n              }}\n              onClick={handleOnSave}\n              startIcon={<SaveIcon />}\n              disabled={mode === \"\"}\n              loading={loadingAdd || loadingEdit}\n            >\n              Save\n            </LoadingButton>\n            {mode !== \"\" && (\n              <Button\n                style={{\n                  height: \"22px\",\n                  fontSize: \"11px\",\n                }}\n                variant=\"contained\"\n                startIcon={<CloseIcon />}\n                color=\"error\"\n                onClick={() => {\n                  Swal.fire({\n                    title: \"Are you sure?\",\n                    text: \"You won't be able to revert this!\",\n                    icon: \"warning\",\n                    showCancelButton: true,\n                    confirmButtonColor: \"#3085d6\",\n                    cancelButtonColor: \"#d33\",\n                    confirmButtonText: \"Yes, cancel it!\",\n                  }).then((result) => {\n                    if (result.isConfirmed) {\n                      resetModule();\n                      setMode(\"\");\n                      tableRef.current.setSelectedRow(null);\n                      tableRef.current.resetCheckBox();\n                    }\n                  });\n                }}\n              >\n                Cancel\n              </Button>\n            )}\n            <LoadingButton\n              id=\"save-entry-header\"\n              variant=\"contained\"\n              sx={{\n                height: \"22px\",\n                fontSize: \"11px\",\n                backgroundColor: pink[500],\n                \"&:hover\": {\n                  backgroundColor: pink[600],\n                },\n              }}\n              loading={loadingDelete}\n              startIcon={<DeleteIcon />}\n              disabled={mode !== \"edit\"}\n              onClick={() => {\n                codeCondfirmationAlert({\n                  isUpdate: false,\n                  title: \"Confirmation\",\n                  saveTitle: \"Confirm\",\n                  text: `Are you sure you want to delete '${sublineRef.current?.value}'?`,\n                  cb: (userCodeConfirmation) => {\n                    mutateDelete({\n                      ID: refId.current,\n                      userCodeConfirmation,\n                    });\n                  },\n                });\n              }}\n            >\n              Delete\n            </LoadingButton>\n          </div>\n        </div>\n\n        <fieldset\n          className=\"container-max-width\"\n          style={{\n            // border: \"1px solid black\",\n            padding: \"5px\",\n            width: \"590px\",\n            rowGap: \"5px\",\n            display: \"flex\",\n            flexDirection: \"column\",\n          }}\n        >\n          <Autocomplete\n            label={{\n              title: \"Line : \",\n              style: {\n                fontSize: \"12px\",\n                fontWeight: \"bold\",\n                width: \"100px\",\n              },\n            }}\n            input={{\n              id: \"auto-solo-collection\",\n              style: {\n                width: \"100%\",\n                flex: 1,\n              },\n            }}\n            width={\"100%\"}\n            DisplayMember={\"Line\"}\n            DataSource={[\n              { Line: \"Vehicle\" },\n              { Line: \"Fire\" },\n              { Line: \"Marine\" },\n              { Line: \"Bonds\" },\n              { Line: \"MSPR\" },\n              { Line: \"PA\" },\n              { Line: \"CGL\" },\n            ]}\n            disableInput={mode === \"\"}\n            inputRef={lineRef}\n            onChange={(selected: any, e: any) => {\n              if (lineRef.current) lineRef.current.value = selected.Line;\n            }}\n            onKeydown={(e: any) => {\n              if (e.key === \"Enter\" || e.key === \"NumpadEnter\") {\n                e.preventDefault();\n                sublineRef.current?.focus();\n              }\n            }}\n          />\n          <TextInput\n            containerClassName=\"custom-input\"\n            label={{\n              title: \"Type : \",\n              style: {\n                fontSize: \"12px\",\n                fontWeight: \"bold\",\n                width: \"100px\",\n              },\n            }}\n            input={{\n              disabled: mode === \"\",\n              type: \"text\",\n              style: { width: \"500px\" },\n              onKeyDown: (e) => {\n                if (e.code === \"NumpadEnter\" || e.code === \"Enter\") {\n                  e.preventDefault();\n                }\n              },\n            }}\n            inputRef={sublineRef}\n          />\n        </fieldset>\n\n        <div\n          style={{\n            marginTop: \"10px\",\n            width: \"100%\",\n            position: \"relative\",\n            flex: 1,\n            display: \"flex\",\n          }}\n        >\n          <DataGridViewReact\n            containerStyle={{\n              flex: 1,\n              height: \"auto\",\n            }}\n            ref={tableRef}\n            columns={bankColumn}\n            height=\"280px\"\n            getSelectedItem={(rowItm: any) => {\n              if (rowItm) {\n                setMode(\"edit\");\n                if (lineRef.current) {\n                  lineRef.current.value = rowItm[0];\n                }\n                if (sublineRef.current) {\n                  sublineRef.current.value = rowItm[1];\n                }\n                refId.current = rowItm[2];\n              } else {\n                resetModule();\n              }\n            }}\n          />\n        </div>\n\n        <div\n          className=\"button-action-mobile\"\n          style={{\n            display: \"flex\",\n            alignItems: \"center\",\n            columnGap: \"8px\",\n          }}\n        >\n          {mode === \"\" && (\n            <Button\n              style={{\n                height: \"22px\",\n                fontSize: \"11px\",\n              }}\n              variant=\"contained\"\n              startIcon={<AddIcon />}\n              id=\"entry-header-save-button\"\n              onClick={() => {\n                setMode(\"add\");\n              }}\n            >\n              New\n            </Button>\n          )}\n          <LoadingButton\n            style={{\n              height: \"22px\",\n              fontSize: \"11px\",\n            }}\n            id=\"save-entry-header\"\n            color=\"primary\"\n            variant=\"contained\"\n            type=\"submit\"\n            sx={{\n              height: \"30px\",\n              fontSize: \"11px\",\n            }}\n            onClick={handleOnSave}\n            startIcon={<SaveIcon />}\n            disabled={mode === \"\"}\n            loading={loadingAdd || loadingEdit}\n          >\n            Save\n          </LoadingButton>\n          {mode !== \"\" && (\n            <Button\n              style={{\n                height: \"22px\",\n                fontSize: \"11px\",\n              }}\n              variant=\"contained\"\n              startIcon={<CloseIcon />}\n              color=\"error\"\n              onClick={() => {\n                Swal.fire({\n                  title: \"Are you sure?\",\n                  text: \"You won't be able to revert this!\",\n                  icon: \"warning\",\n                  showCancelButton: true,\n                  confirmButtonColor: \"#3085d6\",\n                  cancelButtonColor: \"#d33\",\n                  confirmButtonText: \"Yes, cancel it!\",\n                }).then((result) => {\n                  if (result.isConfirmed) {\n                    resetModule();\n                    setMode(\"\");\n                    tableRef.current.setSelectedRow(null);\n                    tableRef.current.resetCheckBox();\n                  }\n                });\n              }}\n            >\n              Cancel\n            </Button>\n          )}\n          <LoadingButton\n            id=\"save-entry-header\"\n            variant=\"contained\"\n            sx={{\n              height: \"22px\",\n              fontSize: \"11px\",\n              backgroundColor: pink[500],\n              \"&:hover\": {\n                backgroundColor: pink[600],\n              },\n            }}\n            loading={loadingDelete}\n            startIcon={<DeleteIcon />}\n            disabled={mode !== \"edit\"}\n            onClick={() => {\n              codeCondfirmationAlert({\n                isUpdate: false,\n                title: \"Confirmation\",\n                saveTitle: \"Confirm\",\n                text: `Are you sure you want to delete '${sublineRef.current?.value}'?`,\n                cb: (userCodeConfirmation) => {\n                  mutateDelete({\n                    ID: refId.current,\n                    userCodeConfirmation,\n                  });\n                },\n              });\n            }}\n          >\n            Delete\n          </LoadingButton>\n        </div>\n      </div>\n    </>\n  );\n}\n","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\"\n}), 'Delete');\nexports.default = _default;","const pink = {\n  50: '#fce4ec',\n  100: '#f8bbd0',\n  200: '#f48fb1',\n  300: '#f06292',\n  400: '#ec407a',\n  500: '#e91e63',\n  600: '#d81b60',\n  700: '#c2185b',\n  800: '#ad1457',\n  900: '#880e4f',\n  A100: '#ff80ab',\n  A200: '#ff4081',\n  A400: '#f50057',\n  A700: '#c51162'\n};\nexport default pink;"],"names":["bankColumn","key","label","width","hide","Subline","_mutationFn","_mutationFn2","_mutationFn3","_mutationFn4","_useContext","useContext","AuthContext","myAxios","user","inputSearchRef","useRef","_useState","useState","_useState2","_slicedToArray","mode","setMode","tableRef","lineRef","sublineRef","refId","_useMutation","useMutation","mutationKey","mutationFn","_x","_asyncToGenerator","_regeneratorRuntime","mark","_callee","variables","wrap","_context","prev","next","post","headers","Authorization","concat","accessToken","abrupt","sent","stop","apply","arguments","onSuccess","response","data","success","console","log","wait","then","current","setDataFormated","mutateSearch","mutate","loadingSearch","isLoading","mutateSearchRef","_useMutation2","_x2","_callee2","_context2","mutateAdd","loadingAdd","_useMutation3","_x3","_callee3","_context3","mutateEdit","loadingEdit","_useMutation4","_x4","_callee4","_context4","mutateDelete","loadingDelete","handleOnSave","e","_lineRef$current","_sublineRef$current","_lineRef$current2","_sublineRef$current2","preventDefault","value","Swal","position","icon","title","showConfirmButton","timer","state","Line","SublineName","ID","codeCondfirmationAlert","isUpdate","cb","userCodeConfirmation","_objectSpread","saveCondfirmationAlert","isConfirm","resetModule","res","setSelectedRow","resetCheckBox","search","message","useEffect","_jsxs","_Fragment","children","_jsx","Loading","PageHelmet","style","display","flexDirection","height","flex","padding","marginTop","marginBottom","columnGap","TextInput","containerClassName","containerStyle","marginRight","fontSize","fontWeight","input","className","type","onKeyDown","currentTarget","document","querySelector","focus","SearchIcon","sx","onIconClick","inputRef","alignItems","Button","variant","startIcon","AddIcon","id","onClick","LoadingButton","color","SaveIcon","disabled","loading","CloseIcon","text","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","result","isConfirmed","backgroundColor","pink","DeleteIcon","_sublineRef$current3","saveTitle","rowGap","Autocomplete","DisplayMember","DataSource","disableInput","onChange","selected","onKeydown","_sublineRef$current4","code","DataGridViewReact","ref","columns","getSelectedItem","rowItm","_sublineRef$current5","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d","A100","A200","A400","A700"],"sourceRoot":""}